Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131, 134, 139, 140, 142, 143, 145, 146, 148, 152, 154, 155, 158, 164, 165, 169, 170, 171, 172, 174, 182, 183, 184, 185, 186, 187, 189, 192, 193, 195, 197, 207, 208, 210, 211, 212, 213, 220, 222, 224, 226, 227, 228, 232, 233, 235, 246, 247, 249, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 274, 278, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 315, 316, 317, 318, 319, 333, 335, 338, 342, 347, 348, 352, 353, 356, 363, 364, 365, 366, 369, 370, 371, 375, 376, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394], "open": [0, 5, 7, 12, 41, 43, 46, 67, 376, 387, 388, 393], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "reinforc": [0, 3, 9, 64, 117, 118, 146, 210, 211, 212, 213, 217, 262, 267, 268, 283, 284, 288, 289, 290, 292, 296, 297, 303, 304, 305, 306, 368, 374, 376, 379, 380, 385, 389, 392, 393], "learn": [0, 3, 7, 8, 9, 18, 37, 64, 65, 66, 68, 69, 103, 117, 118, 122, 123, 130, 146, 210, 211, 212, 213, 217, 229, 236, 262, 267, 268, 283, 284, 288, 289, 290, 292, 296, 297, 302, 303, 304, 305, 306, 368, 370, 371, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 391, 392, 393, 394], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 61, 119, 182, 236, 254, 269, 277, 283, 285, 298, 299, 301, 303, 343, 367, 369, 370, 371, 372, 375, 376, 377, 382, 385, 387, 388, 390, 391, 394], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 44, 52, 101, 102, 111, 120, 200, 368, 369, 370, 373, 375, 376, 377, 379, 380, 382, 387, 388, 389, 394], "pytorch": [0, 1, 2, 3, 23, 65, 132, 133, 185, 197, 220, 224, 235, 236, 352, 367, 369, 370, 372, 375, 377, 378, 381, 385, 387, 388, 389, 390, 391, 393, 394], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 37, 52, 64, 103, 107, 111, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 193, 195, 224, 342, 369, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 149, 150, 152, 154, 155, 156, 164, 165, 169, 170, 174, 177, 181, 182, 183, 186, 187, 189, 191, 193, 195, 197, 205, 206, 207, 208, 210, 220, 222, 223, 224, 226, 228, 229, 232, 233, 234, 236, 237, 250, 252, 254, 259, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 333, 335, 342, 348, 364, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "directli": [0, 3, 4, 8, 23, 61, 82, 99, 100, 103, 106, 107, 119, 123, 124, 130, 131, 165, 174, 192, 299, 306, 366, 370, 376, 377, 379, 387, 388, 389, 391], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 201, 204, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 249, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 297, 298, 299, 301, 302, 303, 304, 306, 307, 309, 313, 314, 315, 316, 317, 318, 321, 333, 334, 335, 343, 349, 352, 355, 356, 360, 362, 363, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394], "pypi": [0, 2, 393], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 103, 107, 110, 113, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 150, 169, 183, 185, 186, 187, 189, 191, 193, 194, 195, 207, 208, 220, 223, 224, 227, 233, 234, 235, 242, 250, 251, 255, 257, 269, 272, 273, 299, 306, 335, 342, 349, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 391, 394], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 93, 103, 106, 107, 108, 110, 111, 113, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 185, 189, 194, 195, 217, 224, 227, 235, 237, 254, 258, 259, 261, 262, 272, 277, 283, 292, 299, 301, 315, 320, 328, 342, 347, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 394], "about": [0, 3, 5, 7, 9, 18, 19, 20, 52, 65, 68, 69, 103, 123, 130, 371, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 388, 389, 391, 393, 394], "instruct": [0, 6, 7, 10, 22, 63, 154, 156, 375, 376, 377, 378, 387, 388, 391], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 123, 130, 255, 256, 257, 370, 375, 379, 381, 382, 384, 386, 388], "section": [0, 2, 3, 4, 24, 220, 224, 376, 379, 384, 387, 388], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 70, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 207, 208, 220, 223, 224, 227, 233, 250, 269, 272, 349, 375, 376, 377, 378, 379, 387, 389], "pip": [0, 10, 66, 379, 380, 381, 382, 383, 384, 388, 393, 394], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 80, 81, 82, 85, 87, 88, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 143, 145, 146, 147, 148, 149, 151, 152, 155, 159, 164, 165, 167, 169, 170, 173, 174, 177, 178, 182, 183, 184, 187, 189, 191, 192, 193, 195, 205, 207, 208, 214, 217, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 252, 254, 259, 262, 263, 264, 266, 268, 269, 270, 271, 276, 283, 284, 285, 286, 287, 289, 291, 292, 293, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 343, 349, 356, 362, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "python": [0, 3, 5, 6, 7, 10, 11, 14, 15, 21, 121, 138, 220, 221, 222, 224, 225, 226, 230, 231, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 35, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 103, 106, 107, 108, 113, 123, 124, 130, 131, 142, 143, 146, 147, 159, 165, 169, 170, 185, 187, 189, 208, 220, 222, 224, 226, 227, 233, 235, 239, 254, 260, 261, 262, 269, 270, 272, 273, 285, 294, 298, 299, 301, 334, 335, 351, 370, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "low": [0, 3, 26, 80, 103, 107, 123, 124, 130, 131, 139, 149, 154, 201, 248, 249, 250, 260, 262, 269, 276, 375, 376, 377, 387, 388, 389, 393, 394], "high": [0, 3, 9, 26, 41, 43, 46, 50, 80, 103, 107, 123, 124, 130, 131, 139, 149, 154, 164, 201, 248, 249, 250, 260, 262, 269, 276, 315, 320, 328, 375, 376, 377, 387, 388, 389, 391, 393, 394], "level": [0, 2, 3, 4, 22, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 106, 108, 146, 181, 298, 375, 376, 382, 393], "abstract": [0, 3, 8, 25, 26, 27, 29, 33, 34, 35, 39, 53, 55, 56, 61, 62, 66, 97, 103, 166, 228, 319, 344, 353, 372, 377, 389, 393], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 85, 86, 88, 89, 91, 93, 95, 103, 104, 106, 107, 108, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 149, 150, 152, 154, 155, 156, 158, 159, 163, 164, 167, 169, 174, 177, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 201, 204, 205, 206, 213, 215, 220, 221, 222, 224, 225, 226, 228, 230, 231, 232, 234, 236, 240, 242, 245, 260, 261, 263, 266, 268, 269, 270, 272, 273, 274, 275, 276, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 310, 313, 314, 315, 316, 317, 318, 319, 333, 342, 349, 362, 366, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 145, 154, 252, 299, 370, 393], "effici": [0, 1, 2, 4, 8, 220, 236, 370, 375, 376, 377, 378, 381, 382, 384, 386, 387, 388, 390, 391, 393], "modular": [0, 61, 275, 391, 393], "document": [0, 2, 5, 7, 11, 18, 19, 21, 37, 67, 103, 107, 123, 124, 130, 131, 187, 195, 367, 376, 378, 379, 382, 385, 393], "properli": [0, 1, 103, 107, 123, 124, 130, 131, 204, 222, 226, 377, 383, 387, 388, 389, 393], "test": [0, 3, 5, 99, 100, 112, 113, 117, 118, 189, 197, 222, 226, 348, 362, 377, 378, 393], "The": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 82, 85, 87, 88, 89, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 142, 143, 145, 146, 150, 152, 155, 156, 157, 165, 167, 169, 174, 176, 177, 178, 181, 182, 183, 186, 187, 189, 191, 192, 193, 195, 197, 204, 205, 206, 210, 211, 212, 213, 214, 217, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 236, 237, 243, 244, 245, 254, 255, 258, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 321, 333, 335, 337, 340, 341, 342, 343, 347, 362, 364, 365, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394], "code": [0, 3, 5, 7, 8, 14, 15, 67, 103, 107, 123, 124, 130, 131, 169, 187, 189, 220, 221, 222, 224, 225, 226, 269, 275, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394], "aim": [0, 2, 3, 7, 33, 34, 169, 189, 191, 227, 355, 369, 370, 371, 375, 376, 393], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 43, 46, 66, 69, 70, 74, 75, 89, 91, 95, 96, 98, 99, 100, 106, 108, 112, 120, 122, 123, 125, 127, 143, 146, 156, 165, 183, 184, 186, 200, 217, 252, 261, 262, 269, 272, 275, 292, 299, 315, 316, 317, 318, 340, 368, 370, 372, 377, 378, 379, 380, 388, 389, 391, 393], "research": [0, 7, 9, 117, 118, 393], "most": [0, 1, 2, 3, 7, 8, 14, 15, 37, 87, 88, 103, 107, 123, 124, 130, 131, 154, 192, 197, 375, 377, 379, 380, 381, 382, 383, 384, 387, 389, 393, 394], "written": [0, 1, 2, 3, 12, 30, 41, 43, 46, 48, 54, 63, 64, 67, 72, 74, 80, 82, 87, 88, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 139, 146, 156, 163, 177, 181, 184, 192, 195, 204, 205, 254, 267, 268, 269, 272, 273, 277, 283, 285, 298, 301, 303, 314, 333, 334, 335, 370, 371, 372, 375, 378, 380, 386, 389, 393], "highli": [0, 2, 379, 393, 394], "wai": [0, 1, 2, 3, 4, 61, 65, 82, 93, 111, 169, 172, 191, 192, 222, 224, 226, 301, 315, 316, 317, 318, 370, 375, 376, 377, 379, 381, 382, 386, 387, 388, 389, 390, 391, 393, 394], "easili": [0, 1, 2, 3, 7, 103, 107, 123, 124, 130, 131, 371, 375, 376, 377, 379, 380, 381, 384, 387, 388, 393, 394], "swap": [0, 1, 3, 106, 192, 377, 390, 393], "compon": [0, 1, 2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 217, 243, 261, 262, 271, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 347, 352, 375, 376, 377, 378, 380, 381, 384, 386, 387, 388, 389, 390, 393], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 91, 96, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 209, 210, 214, 217, 218, 222, 226, 241, 242, 243, 251, 260, 265, 266, 276, 279, 280, 282, 288, 300, 333, 335, 349, 366, 368, 374, 376, 378, 380, 382, 383, 384, 385, 390, 392], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 98, 103, 104, 107, 111, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 152, 155, 183, 187, 193, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 251, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 298, 335, 375, 376, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "write": [0, 2, 3, 8, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 91, 98, 103, 107, 149, 167, 168, 177, 179, 181, 185, 205, 254, 272, 273, 275, 277, 286, 287, 289, 290, 291, 297, 302, 304, 306, 307, 314, 319, 335, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 107, 120, 123, 124, 128, 129, 130, 131, 143, 177, 186, 193, 195, 204, 205, 220, 222, 226, 267, 268, 272, 273, 278, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 342, 371, 375, 377, 378, 379, 381, 387, 388, 389, 393, 394], "ones": [0, 2, 23, 27, 37, 42, 45, 50, 51, 103, 107, 123, 124, 125, 126, 130, 131, 147, 150, 152, 153, 155, 165, 169, 174, 183, 186, 187, 189, 191, 195, 196, 230, 231, 252, 272, 283, 284, 286, 297, 301, 302, 304, 306, 307, 321, 375, 377, 387, 388, 389, 391, 393, 394], "littl": [0, 1, 3, 52, 103, 107, 123, 124, 130, 131, 187, 283, 285, 298, 301, 303, 377, 378, 382, 391, 393, 394], "effort": [0, 3, 389, 391, 393], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 169, 170, 171, 172, 174, 177, 178, 179, 181, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 313, 315, 316, 317, 318, 319, 333, 334, 342, 343, 345, 348, 349, 352, 354, 355, 356, 362, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "repo": [0, 6, 63, 146, 184, 189, 369, 388, 393], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 87, 88, 101, 102, 106, 108, 109, 127, 259, 264, 268, 287, 290, 297, 313, 381, 393], "align": [0, 220, 224, 393], "exist": [0, 2, 3, 4, 12, 18, 21, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 147, 153, 187, 195, 304, 356, 366, 387, 388, 393, 394], "ecosystem": [0, 382, 393], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 61, 67, 74, 75, 82, 85, 87, 93, 95, 103, 104, 107, 111, 117, 118, 123, 124, 130, 131, 132, 133, 143, 146, 181, 182, 183, 184, 187, 195, 220, 222, 224, 226, 232, 234, 249, 258, 259, 262, 264, 266, 268, 273, 283, 298, 299, 301, 303, 335, 375, 376, 377, 378, 379, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "dataset": [0, 32, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 85, 87, 88, 122, 193, 335, 368, 375, 376, 379, 390, 391, 393, 394], "pillar": [0, 393], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 142, 143, 145, 146, 147, 152, 153, 154, 155, 160, 164, 165, 169, 170, 171, 174, 177, 181, 182, 183, 184, 186, 187, 189, 192, 193, 197, 206, 222, 226, 228, 229, 259, 266, 268, 289, 293, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 343, 345, 348, 355, 356, 357, 358, 362, 363, 364, 365, 366, 368, 369, 370, 374, 380, 381, 382, 383, 385, 390, 391, 392], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 43, 46, 47, 54, 103, 107, 119, 123, 124, 130, 131, 152, 169, 183, 189, 191, 194, 195, 207, 208, 209, 214, 216, 222, 226, 227, 228, 229, 233, 234, 241, 242, 251, 255, 256, 257, 265, 272, 278, 280, 283, 284, 285, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 313, 352, 357, 358, 359, 368, 369, 371, 372, 374, 377, 379, 382, 385, 387, 388, 389, 391, 392, 394], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 140, 143, 145, 146, 152, 153, 155, 157, 163, 165, 171, 174, 181, 187, 192, 195, 196, 197, 201, 205, 206, 217, 222, 226, 229, 232, 233, 243, 252, 254, 261, 263, 264, 266, 267, 268, 269, 270, 272, 275, 276, 277, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 333, 335, 342, 343, 349, 352, 354, 357, 362, 364, 365, 366, 368, 370, 371, 372, 374, 378, 379, 380, 381, 385, 389, 390, 391, 392, 394], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 45, 47, 99, 100, 103, 107, 112, 113, 118, 123, 124, 125, 126, 130, 131, 134, 146, 169, 174, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 214, 220, 224, 279, 280, 281, 282, 299, 362, 368, 373, 375, 377, 380, 381, 382, 388, 389, 391, 393, 394], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 40, 41, 43, 46, 74, 75, 79, 80, 93, 95, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 151, 159, 165, 169, 177, 183, 186, 187, 189, 191, 195, 197, 220, 222, 223, 224, 226, 229, 233, 237, 243, 249, 250, 260, 262, 266, 269, 271, 272, 273, 283, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 314, 315, 316, 317, 318, 333, 343, 355, 365, 370, 376, 377, 380, 381, 383, 387, 388, 390, 391, 393, 394], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 40, 41, 43, 46, 93, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 159, 165, 169, 177, 183, 186, 187, 189, 191, 195, 197, 220, 222, 223, 224, 225, 226, 229, 233, 249, 250, 260, 269, 272, 273, 304, 314, 324, 325, 326, 327, 329, 330, 331, 332, 333, 365, 370, 376, 377, 380, 383, 387, 388, 389, 390, 391, 393, 394], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 37, 47, 48, 61, 67, 143, 146, 174, 181, 195, 196, 222, 226, 267, 268, 349, 352, 354, 357, 358, 362, 364, 365, 368, 371, 372, 391, 394], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 80, 82, 83, 85, 87, 88, 89, 94, 97, 98, 103, 107, 119, 123, 124, 130, 131, 139, 150, 152, 155, 169, 183, 186, 187, 189, 191, 192, 193, 195, 204, 205, 206, 207, 208, 220, 221, 224, 225, 227, 229, 233, 254, 261, 262, 269, 271, 272, 277, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 321, 339, 343, 355, 362, 363, 364, 365, 366, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394], "etc": [0, 2, 3, 7, 8, 12, 37, 55, 56, 67, 103, 107, 123, 124, 130, 131, 163, 187, 195, 227, 233, 249, 376, 377, 382, 391, 393, 394], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 89, 103, 107, 123, 124, 125, 126, 130, 131, 139, 142, 146, 152, 155, 156, 163, 164, 165, 181, 186, 187, 193, 195, 197, 205, 207, 208, 227, 232, 233, 234, 252, 266, 274, 275, 283, 285, 298, 301, 303, 306, 310, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 343, 352, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "few": [0, 2, 8, 107, 335, 343, 377, 378, 380, 387, 388, 391, 393, 394], "depend": [0, 1, 2, 3, 4, 7, 8, 41, 43, 106, 108, 109, 127, 132, 133, 152, 155, 277, 301, 370, 375, 377, 378, 387, 388, 389, 393, 394], "possibl": [0, 2, 3, 4, 23, 25, 29, 34, 35, 36, 37, 40, 64, 67, 69, 80, 87, 93, 103, 107, 123, 124, 130, 131, 139, 150, 169, 183, 186, 187, 189, 191, 195, 207, 208, 220, 221, 224, 225, 272, 333, 348, 352, 370, 375, 377, 378, 380, 382, 383, 387, 388, 389, 391, 393, 394], "standard": [0, 3, 165, 176, 193, 206, 218, 229, 235, 236, 241, 258, 259, 260, 306, 307, 315, 316, 317, 318, 375, 376, 379, 380, 388, 391, 393], "numpi": [0, 3, 12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 185, 352, 389, 391, 393, 394], "common": [0, 2, 3, 4, 107, 112, 140, 255, 256, 257, 265, 283, 284, 285, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 362, 369, 370, 372, 375, 377, 380, 383, 386, 387, 388, 389, 390, 393, 394], "openai": [0, 7, 24, 106, 108, 127, 377, 389, 393, 394], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 103, 104, 106, 107, 108, 109, 111, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 135, 138, 142, 146, 149, 156, 162, 163, 165, 167, 172, 174, 177, 183, 186, 192, 193, 195, 362, 369, 375, 376, 377, 378, 379, 383, 384, 389, 390, 391, 393], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 82, 87, 88, 95, 101, 102, 103, 106, 107, 108, 109, 111, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 142, 146, 147, 149, 150, 152, 154, 155, 159, 165, 169, 170, 174, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 224, 226, 232, 233, 254, 260, 261, 269, 270, 272, 273, 274, 275, 283, 285, 286, 290, 291, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 315, 316, 317, 318, 319, 335, 342, 356, 371, 372, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 393, 394], "option": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 169, 170, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 197, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 252, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 342, 343, 345, 346, 347, 348, 349, 350, 352, 356, 357, 358, 359, 361, 362, 364, 365, 366, 370, 378, 379, 382, 387, 388, 389, 391, 393], "On": [0, 3, 7, 18, 19, 20, 21, 27, 64, 221, 225, 370, 376, 387, 388], "end": [0, 2, 3, 14, 15, 17, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 86, 87, 88, 103, 107, 123, 124, 130, 131, 156, 167, 181, 182, 187, 195, 207, 208, 220, 221, 224, 225, 228, 266, 304, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "come": [0, 1, 2, 3, 8, 37, 93, 103, 107, 116, 123, 124, 130, 131, 152, 155, 254, 255, 256, 257, 269, 277, 283, 285, 298, 301, 303, 335, 375, 376, 377, 378, 381, 382, 383, 384, 387, 388, 391, 393, 394], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 86, 89, 95, 103, 105, 107, 108, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 138, 140, 142, 143, 146, 147, 150, 152, 155, 162, 163, 169, 174, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 197, 202, 203, 205, 220, 222, 224, 226, 228, 232, 233, 249, 259, 260, 272, 291, 299, 301, 304, 319, 343, 348, 349, 358, 366, 369, 370, 371, 373, 375, 376, 377, 378, 380, 381, 382, 386, 387, 388, 389, 390, 391, 393, 394], "re": [0, 2, 3, 8, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 130, 131, 195, 226, 230, 231, 234, 269, 273, 342, 372, 375, 377, 378, 379, 381, 386, 387, 389, 393, 394], "usabl": [0, 372, 378, 393], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 104, 107, 123, 124, 130, 131, 138, 142, 143, 152, 155, 187, 193, 195, 197, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 244, 245, 247, 250, 252, 255, 256, 257, 258, 259, 260, 262, 263, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 362, 368, 370, 375, 378, 379, 380, 383, 386, 389, 391, 394], "cost": [0, 2, 29, 67, 283, 285, 298, 301, 303, 371, 375, 376, 387, 388, 389, 391], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 83, 85, 87, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 204, 205, 206, 209, 210, 211, 212, 213, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 240, 241, 242, 244, 245, 248, 249, 250, 251, 254, 255, 256, 257, 260, 266, 269, 271, 272, 273, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 310, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 339, 352, 355, 357, 362, 363, 364, 365, 366, 368, 370, 372, 375, 376, 377, 378, 380, 381, 383, 386, 387, 388, 389, 390, 391, 393, 394], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 46, 52, 54, 61, 64, 68, 69, 79, 80, 87, 103, 104, 107, 111, 116, 120, 123, 124, 125, 126, 130, 131, 145, 152, 155, 183, 185, 193, 195, 222, 226, 232, 233, 262, 267, 268, 271, 368, 372, 375, 376, 378, 379, 387, 388, 389, 390, 391, 393, 394], "good": [0, 1, 4, 9, 123, 375, 377, 378, 380, 388, 393, 394], "runtim": [0, 2, 3, 23, 37, 103, 107, 123, 124, 130, 131, 195, 389], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 134, 152, 155, 164, 187, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 285, 294, 301, 304, 348, 352, 371, 375, 376, 377, 378, 379, 382, 384, 386, 387, 388, 389, 394], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 87, 88, 91, 98, 99, 100, 103, 106, 107, 108, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 181, 183, 193, 195, 222, 226, 255, 256, 257, 267, 268, 291, 299, 306, 335, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394], "read": [0, 2, 3, 7, 23, 27, 30, 33, 42, 44, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 82, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 167, 168, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 192, 193, 195, 205, 240, 254, 255, 256, 257, 261, 266, 269, 272, 273, 275, 277, 278, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 315, 316, 317, 318, 319, 335, 348, 352, 370, 375, 376, 377, 379, 380, 386, 387, 388, 389, 390, 394], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 372, 375, 379, 382, 386, 390, 394], "beyond": [0, 103, 107, 123, 124, 130, 131], "api": [0, 2, 3, 5, 23, 125, 126, 127, 169, 191, 193, 371, 372, 379, 380, 381, 382, 383, 387, 388, 389, 391, 393, 394], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 55, 56, 57, 59, 71, 72, 78, 87, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 134, 146, 147, 158, 163, 170, 183, 185, 187, 195, 197, 222, 226, 254, 261, 262, 269, 270, 271, 272, 273, 306, 335, 367, 370, 371, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394], "paper": [0, 64, 67, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 127, 132, 133, 169, 189, 191, 220, 242, 251, 289, 296, 306, 375, 377, 387, 388], "releas": [0, 4, 7, 10, 37, 103, 107, 123, 124, 130, 131, 187, 195, 304, 393], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 354, 362, 372, 375, 393], "so": [0, 2, 3, 4, 6, 7, 10, 11, 37, 41, 43, 46, 47, 103, 107, 117, 118, 123, 124, 130, 131, 183, 193, 195, 274, 275, 375, 377, 378, 381, 384, 387, 388, 389, 394], "make": [0, 2, 3, 4, 7, 11, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 89, 91, 98, 103, 107, 108, 111, 113, 115, 121, 123, 124, 130, 131, 139, 157, 165, 169, 170, 174, 181, 189, 195, 197, 220, 221, 222, 224, 225, 226, 232, 233, 235, 261, 273, 283, 285, 298, 301, 303, 315, 316, 317, 318, 333, 349, 358, 366, 370, 371, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "sure": [0, 3, 4, 7, 66, 89, 107, 111, 174, 261, 366, 370, 375, 377, 378, 381, 387, 388, 389, 391, 393, 394], "alwai": [0, 2, 3, 14, 15, 20, 27, 33, 37, 61, 70, 71, 72, 78, 103, 107, 123, 124, 130, 131, 163, 164, 193, 195, 292, 299, 370, 371, 376, 377, 378, 387, 388, 389, 391], "enjoi": [0, 2, 3, 67, 382], "latest": [0, 2, 3, 10, 120, 125, 126, 349, 377, 387, 388, 389, 393], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 40, 54, 65, 80, 87, 88, 103, 107, 116, 123, 124, 125, 126, 128, 129, 130, 131, 143, 146, 159, 163, 167, 183, 184, 188, 193, 197, 207, 208, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 235, 236, 273, 280, 283, 285, 298, 301, 303, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 366, 370, 375, 376, 377, 378, 380, 381, 382, 384, 389, 391, 394], "recent": [0, 7, 12, 192, 387, 394], "version": [0, 1, 2, 3, 6, 12, 37, 41, 43, 47, 64, 69, 87, 103, 106, 107, 108, 109, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 192, 193, 195, 204, 234, 257, 283, 285, 298, 299, 301, 303, 304, 315, 318, 369, 370, 371, 375, 377, 378, 379, 381, 384, 387, 388, 389, 390, 394], "although": [0, 1, 3, 8, 103, 107, 123, 124, 130, 131, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 372, 375, 376, 382, 391], "core": [0, 3, 8, 372, 378, 380, 393], "guarante": [0, 2, 37, 41, 43, 46, 74, 75, 76, 89, 91, 95, 103, 107, 123, 124, 130, 131, 193, 195, 382, 393], "backward": [0, 8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 193, 195, 220, 221, 224, 225, 283, 284, 286, 290, 291, 297, 301, 302, 303, 304, 306, 307, 375, 377, 378, 381, 382, 384, 387, 388, 389], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 37, 63, 82, 85, 87, 88, 89, 93, 103, 107, 109, 122, 123, 124, 130, 131, 146, 181, 189, 193, 195, 220, 221, 222, 224, 225, 226, 270, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 310, 375, 378, 391, 393], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 30, 33, 35, 36, 37, 40, 42, 43, 44, 45, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 143, 145, 147, 150, 152, 153, 154, 155, 163, 165, 167, 169, 171, 174, 177, 181, 182, 183, 186, 187, 189, 191, 193, 195, 201, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 237, 241, 249, 252, 260, 261, 262, 263, 264, 266, 267, 268, 272, 276, 277, 283, 284, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 314, 315, 316, 317, 318, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 343, 370, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 391, 392, 393, 394], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 29, 30, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 95, 99, 100, 103, 106, 107, 109, 110, 112, 113, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 139, 140, 142, 144, 146, 147, 149, 150, 151, 153, 154, 163, 164, 165, 169, 174, 177, 179, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 206, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 237, 240, 244, 245, 248, 249, 250, 252, 254, 258, 259, 260, 262, 263, 264, 267, 268, 271, 272, 275, 276, 279, 280, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 313, 314, 315, 316, 317, 318, 321, 322, 323, 343, 350, 362, 366, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 42, 45, 50, 51, 63, 65, 66, 67, 68, 69, 107, 123, 130, 169, 186, 191, 288, 299, 371, 372, 375, 376, 377, 378, 380, 382, 391, 394], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 201, 204, 205, 206, 216, 217, 222, 226, 228, 229, 242, 243, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 333, 334, 343, 347, 348, 349, 351, 352, 368, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 394], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 33, 163, 171, 255, 256, 257, 272, 290, 297, 306, 368, 375, 387, 389, 393], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 82, 90, 96, 103, 107, 123, 124, 130, 131, 138, 169, 191, 195, 229, 337, 342, 352, 372, 376, 384, 387], "root": [0, 2, 3, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 123, 146, 184, 204, 222, 223, 226, 249, 250, 378, 379, 387, 388, 389, 390, 391, 394], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 42, 52, 61, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 122, 125, 126, 127, 132, 133, 146, 169, 189, 209, 210, 211, 212, 213, 214, 217, 218, 219, 224, 229, 230, 231, 236, 238, 239, 242, 244, 245, 251, 262, 267, 268, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 315, 320, 328, 367, 385, 390, 393], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 61, 64, 65, 67, 99, 100, 101, 102, 106, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 143, 189, 380, 384, 387, 388, 393], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 64, 67, 68, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 390, 393], "setup": [0, 7, 99, 100, 111, 112, 113], "py": [0, 3, 24, 106, 108, 138, 242, 251, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394], "develop": [0, 3, 4, 7, 111, 375, 393], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 103, 105, 107, 109, 110, 123, 124, 127, 130, 131, 136, 139, 141, 142, 143, 145, 149, 154, 160, 163, 169, 170, 172, 179, 183, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 204, 206, 207, 208, 217, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 234, 236, 237, 252, 258, 259, 260, 261, 262, 263, 266, 269, 270, 273, 275, 276, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 313, 315, 316, 317, 318, 319, 321, 333, 336, 337, 340, 342, 345, 352, 354, 362, 371, 374, 375, 377, 380, 381, 382, 385, 389, 392, 394], "seri": [0, 2, 3, 7, 8, 40, 73, 83, 93, 94, 97, 98, 130, 164, 186, 335, 370, 371, 375, 376, 377, 383, 384, 387, 388, 391, 394], "quick": [0, 61], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 47, 63, 69, 103, 107, 123, 124, 130, 131, 142, 145, 184, 186, 195, 301, 369, 370, 371, 375, 376, 377, 378, 380, 384, 387, 388, 389, 391, 394], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 80, 82, 85, 86, 87, 88, 93, 95, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 139, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 159, 163, 164, 165, 169, 170, 173, 174, 177, 178, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 204, 205, 207, 208, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 252, 254, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 329, 330, 331, 332, 333, 339, 342, 347, 349, 352, 354, 356, 362, 366, 369, 371, 375, 376, 377, 378, 379, 381, 383, 384, 386, 387, 388, 389, 391, 393, 394], "hurri": [0, 379], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 53, 55, 56, 63, 86, 87, 88, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 142, 145, 159, 165, 170, 182, 184, 185, 207, 208, 220, 222, 224, 226, 227, 230, 231, 238, 246, 249, 252, 258, 259, 260, 263, 266, 273, 315, 317, 318, 376, 377, 378, 379, 380, 387, 388, 389, 390, 391, 393, 394], "item": [0, 2, 8, 14, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 54, 55, 56, 70, 80, 86, 93, 139, 158, 230, 231, 286, 287, 289, 343, 371, 372, 375, 377, 378, 381, 382, 387, 388, 389, 391], "navig": [0, 388], "previou": [0, 3, 4, 10, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 183, 195, 205, 220, 224, 245, 260, 377, 378, 379, 380, 384, 389, 394], "whenev": [0, 1, 2, 3, 23, 37, 42, 45, 50, 51, 61, 67, 79, 80, 87, 88, 101, 102, 106, 108, 109, 117, 118, 127, 132, 133, 138, 162, 187, 192, 299, 315, 316, 317, 318, 333, 354, 370, 383, 391], "want": [0, 2, 3, 6, 7, 8, 88, 165, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 370, 375, 376, 377, 378, 379, 381, 382, 383, 387, 388, 389, 390, 391, 393, 394], "ted": [0, 30, 38, 48, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 368, 374, 385, 392], "s": [0, 1, 2, 3, 6, 7, 8, 11, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 88, 93, 99, 100, 103, 107, 111, 112, 113, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 146, 150, 169, 181, 183, 185, 186, 187, 189, 191, 193, 195, 197, 207, 208, 222, 226, 231, 232, 233, 236, 242, 251, 255, 257, 258, 259, 262, 263, 266, 269, 272, 273, 276, 284, 290, 297, 299, 304, 306, 315, 316, 317, 318, 319, 333, 370, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 93, 99, 100, 103, 107, 116, 119, 122, 123, 124, 130, 131, 138, 145, 150, 154, 156, 163, 169, 170, 182, 183, 186, 187, 189, 191, 193, 194, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 317, 318, 319, 333, 352, 359, 362, 368, 371, 372, 374, 376, 377, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394], "optim": [0, 1, 2, 8, 37, 47, 99, 100, 103, 107, 123, 124, 130, 131, 187, 195, 206, 229, 235, 236, 249, 284, 299, 300, 301, 304, 347, 352, 362, 371, 372, 374, 377, 378, 379, 380, 382, 385, 387, 388, 389, 392], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 127, 130, 131, 143, 146, 165, 169, 191, 197, 266, 267, 268, 284, 286, 289, 291, 302, 304, 306, 307, 335, 343, 349, 352, 354, 355, 356, 362, 372, 374, 375, 378, 379, 380, 381, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394], "storag": [0, 1, 8, 30, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 103, 105, 107, 123, 124, 130, 131, 145, 146, 152, 155, 174, 195, 368, 372, 374, 376, 377, 378, 379, 381, 384, 385, 387, 388, 390, 392], "log": [0, 3, 4, 8, 11, 47, 215, 216, 217, 230, 231, 240, 249, 250, 261, 262, 269, 273, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 342, 345, 346, 348, 352, 362, 370, 371, 372, 374, 375, 376, 377, 379, 380, 384, 385, 387, 388, 389, 392, 393], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 37, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 193, 195, 366, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 391, 392, 393], "own": [0, 1, 3, 14, 15, 17, 22, 37, 103, 107, 123, 124, 125, 126, 130, 131, 195, 335, 374, 376, 377, 379, 385, 387, 388, 389, 392], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 37, 41, 43, 46, 47, 54, 61, 64, 70, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 152, 160, 169, 182, 187, 189, 191, 195, 197, 210, 212, 222, 226, 258, 259, 263, 264, 267, 268, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 315, 352, 354, 362, 368, 372, 374, 376, 379, 382, 383, 385, 390, 391, 392, 394], "loop": [0, 8, 41, 43, 46, 103, 107, 123, 124, 130, 131, 204, 258, 259, 263, 264, 267, 268, 301, 352, 371, 372, 374, 375, 376, 379, 381, 382, 383, 385, 386, 391, 392], "ppo": [0, 4, 8, 269, 273, 285, 298, 301, 368, 370, 374, 375, 376, 380, 381, 385, 387, 392], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 93, 101, 102, 103, 104, 106, 107, 108, 120, 123, 124, 130, 131, 146, 149, 150, 157, 162, 163, 165, 172, 174, 179, 181, 183, 184, 186, 187, 193, 195, 222, 226, 362, 370, 374, 376, 377, 379, 380, 381, 385, 392, 393, 394], "introduct": [0, 371, 374, 379, 385, 387, 388, 392, 394], "multi": [0, 1, 7, 9, 33, 34, 37, 42, 45, 50, 51, 71, 72, 78, 103, 107, 117, 118, 123, 124, 128, 129, 130, 131, 187, 195, 220, 222, 224, 226, 227, 232, 233, 234, 266, 313, 315, 316, 317, 318, 368, 374, 375, 376, 377, 378, 379, 380, 385, 389, 392, 393], "agent": [0, 9, 33, 34, 116, 117, 118, 125, 126, 128, 129, 132, 133, 134, 181, 182, 230, 231, 232, 233, 234, 236, 242, 251, 313, 368, 374, 379, 385, 389, 392], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 37, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 222, 226, 228, 229, 266, 272, 299, 333, 334, 335, 356, 357, 358, 362, 364, 365, 366, 368, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 169, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 249, 250, 251, 252, 254, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 328, 333, 335, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 362, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394], "pretrain": [0, 374, 385, 392], "recurr": [0, 2, 145, 220, 221, 222, 224, 226, 245, 374, 376, 380, 385, 391, 392], "dqn": [0, 2, 61, 139, 156, 217, 261, 262, 283, 284, 286, 287, 289, 291, 292, 293, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 313, 359, 368, 370, 374, 380, 381, 384, 385, 392], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 37, 48, 99, 100, 103, 107, 119, 123, 124, 130, 131, 154, 163, 182, 196, 202, 203, 217, 222, 226, 232, 233, 236, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 276, 283, 284, 285, 286, 290, 291, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 348, 354, 357, 358, 362, 364, 365, 370, 371, 372, 374, 376, 379, 381, 382, 385, 390, 391, 392, 393, 394], "replai": [0, 8, 16, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 94, 98, 145, 146, 154, 170, 174, 183, 195, 286, 287, 289, 290, 291, 297, 302, 304, 306, 307, 349, 352, 360, 362, 368, 372, 374, 385, 389, 390, 392], "buffer": [0, 3, 4, 8, 14, 15, 16, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 103, 107, 119, 123, 124, 130, 131, 145, 146, 150, 154, 169, 170, 174, 183, 186, 187, 189, 191, 195, 272, 275, 286, 287, 289, 290, 291, 297, 302, 304, 306, 307, 349, 352, 360, 362, 368, 372, 374, 383, 385, 389, 390, 392, 394], "competit": [0, 3, 117, 118, 374, 385, 388, 392], "ddpg": [0, 210, 211, 212, 213, 286, 296, 305, 368, 370, 374, 376, 381, 385, 388, 392], "task": [0, 2, 3, 9, 33, 34, 47, 54, 64, 67, 101, 102, 103, 107, 110, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 169, 181, 187, 189, 191, 290, 297, 374, 375, 376, 377, 378, 379, 380, 385, 387, 388, 389, 392, 393, 394], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 107, 123, 130, 132, 183, 214, 222, 226, 260, 283, 299, 301, 303, 335, 352, 368, 371, 372, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 53, 54, 74, 75, 76, 82, 85, 89, 91, 95, 98, 103, 107, 112, 123, 124, 130, 131, 139, 152, 155, 156, 165, 169, 186, 187, 189, 193, 195, 196, 222, 226, 229, 242, 251, 254, 255, 269, 272, 273, 274, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 356, 357, 358, 361, 362, 366, 368, 370, 372, 374, 376, 377, 378, 382, 384, 385, 387, 388, 389, 391, 392, 394], "loss": [0, 3, 8, 43, 156, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 313, 314, 315, 347, 352, 359, 362, 371, 372, 374, 379, 381, 382, 383, 385, 389, 391, 392, 393], "trainer": [0, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 374, 375, 385, 392], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 165, 167, 169, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 232, 233, 234, 237, 240, 241, 242, 243, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 280, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 308, 309, 313, 315, 316, 317, 318, 321, 333, 335, 343, 344, 345, 346, 347, 349, 350, 351, 354, 362, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394], "packag": [0, 6, 7, 10, 138, 368, 369, 387, 394], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 37, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 122, 123, 124, 130, 131, 132, 133, 143, 146, 150, 159, 165, 167, 170, 174, 183, 186, 187, 188, 192, 193, 195, 205, 215, 220, 221, 222, 224, 225, 226, 230, 231, 232, 233, 234, 235, 240, 242, 248, 252, 266, 267, 268, 272, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 343, 346, 349, 350, 351, 352, 354, 364, 365, 366, 368, 370, 371, 372, 376, 377, 378, 379, 382, 384, 386, 387, 388, 390, 393, 394], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 150, 151, 152, 155, 156, 157, 159, 167, 169, 171, 172, 174, 178, 180, 181, 183, 185, 186, 187, 188, 191, 193, 195, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 237, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 335, 343, 349, 368, 370, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 393, 394], "interoper": [0, 14, 15, 368], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 37, 41, 42, 43, 45, 46, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 106, 107, 117, 118, 123, 124, 130, 131, 132, 133, 139, 146, 147, 169, 174, 187, 191, 195, 207, 208, 220, 221, 222, 224, 225, 226, 227, 233, 271, 275, 284, 285, 287, 289, 291, 292, 297, 298, 301, 302, 304, 306, 307, 315, 316, 317, 318, 324, 325, 326, 327, 329, 330, 331, 332, 333, 366, 368, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 391], "node": [0, 2, 18, 19, 20, 21, 22, 27, 33, 41, 43, 46, 69, 368, 382], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 125, 126, 163, 165, 206, 215, 216, 217, 218, 223, 229, 230, 231, 237, 240, 241, 244, 245, 248, 249, 250, 258, 259, 260, 261, 262, 269, 273, 274, 283, 284, 285, 290, 291, 292, 297, 298, 301, 302, 303, 304, 306, 307, 368, 372, 376, 377, 380, 382, 387, 388, 389, 393, 394], "helper": [0, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 375, 376, 378, 387, 389], "compos": [0, 3, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 93, 94, 103, 107, 123, 124, 130, 131, 146, 173, 186, 187, 193, 195, 265, 266, 294, 304, 335, 368, 375, 376, 377, 378, 382, 386, 388, 389, 391, 393, 394], "episod": [0, 3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 142, 174, 177, 182, 204, 206, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 368, 376, 379, 384, 387, 388, 391], "format": [0, 3, 30, 36, 37, 38, 40, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 85, 93, 103, 107, 123, 124, 125, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 335, 368, 375, 376, 379, 381, 383, 394], "tensorspec": [0, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 55, 56, 57, 58, 59, 103, 107, 119, 123, 124, 130, 131, 132, 133, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 205, 245, 254, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 284, 287, 290, 291, 302, 304, 306, 307, 313, 368, 389], "human": [0, 24, 65, 368, 389], "feedback": [0, 368, 384, 393], "rlhf": [0, 47, 54, 70, 163, 368, 370], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 104, 107, 123, 124, 130, 131, 140, 143, 152, 155, 164, 171, 172, 186, 187, 193, 195, 197, 206, 222, 226, 228, 229, 348, 356, 357, 358, 362, 364, 365, 366, 368, 379, 394], "gymlikeenv": [0, 106, 108, 368], "envmetadata": [0, 368], "vector": [0, 1, 8, 25, 29, 40, 99, 100, 108, 112, 113, 116, 125, 126, 127, 132, 133, 154, 192, 210, 212, 220, 221, 224, 225, 227, 315, 318, 328, 329, 330, 331, 332, 368, 371, 375, 376, 378, 386, 387, 388, 389, 390, 394], "custom": [0, 2, 5, 37, 103, 107, 123, 124, 130, 131, 189, 195, 232, 233, 276, 292, 301, 308, 366, 368, 370, 375, 376, 377, 378, 380, 381, 383, 387, 388], "nativ": [0, 1, 7, 9, 65, 103, 107, 123, 124, 130, 131, 146, 335, 368, 378, 391], "auto": [0, 75, 95, 141, 142, 192, 267, 268, 284, 291, 300, 302, 304, 306, 307, 368, 371, 387, 388], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 141, 142, 143, 146, 156, 159, 162, 164, 169, 177, 181, 182, 183, 184, 186, 187, 189, 192, 193, 195, 197, 205, 220, 222, 226, 234, 253, 266, 267, 268, 299, 334, 368, 371, 375, 376, 377, 378, 379, 382, 386, 387, 388, 393], "dynam": [0, 7, 14, 15, 16, 64, 67, 69, 103, 123, 130, 195, 290, 297, 368, 377, 379, 389], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 57, 58, 59, 63, 99, 100, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 201, 204, 205, 217, 222, 226, 243, 245, 254, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 368, 370, 375, 376, 377, 378, 379, 380, 384, 386, 387, 388, 393], "mask": [0, 1, 4, 23, 25, 29, 35, 36, 40, 125, 126, 131, 140, 170, 195, 217, 230, 231, 243, 260, 261, 262, 263, 264, 270, 271, 349, 368, 376, 378, 394], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 29, 30, 40, 47, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 149, 152, 154, 155, 156, 157, 160, 163, 164, 167, 171, 172, 174, 178, 181, 187, 192, 196, 201, 204, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 245, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 276, 277, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 362, 366, 368, 370, 371, 372, 375, 376, 377, 379, 380, 381, 382, 383, 386, 387, 388, 390, 391, 393, 394], "record": [0, 2, 11, 37, 103, 107, 123, 124, 130, 131, 136, 139, 163, 195, 301, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 362, 368, 376, 377, 380, 384, 387], "domain": [0, 2, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 154, 183, 201, 254, 261, 262, 269, 270, 271, 272, 273, 274, 275, 280, 368, 377, 378, 380, 381, 387, 388, 389, 393, 394], "actor": [0, 3, 4, 21, 163, 196, 206, 209, 210, 212, 217, 218, 229, 241, 243, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 313, 368, 371, 376, 378, 379, 381, 384, 387, 390, 393], "explor": [0, 1, 194, 236, 254, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 283, 299, 348, 357, 358, 362, 368, 377, 378, 379, 381, 382, 384, 387, 388, 389], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 103, 107, 116, 123, 124, 130, 131, 138, 139, 142, 144, 146, 147, 149, 152, 154, 155, 156, 164, 165, 169, 170, 173, 174, 175, 177, 179, 183, 184, 186, 187, 191, 193, 195, 201, 205, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 240, 242, 243, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 343, 345, 346, 347, 348, 349, 352, 362, 368, 372, 376, 381, 382, 383, 386, 387, 388, 389, 391, 393, 394], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 103, 104, 107, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 143, 150, 152, 153, 157, 163, 165, 171, 172, 177, 178, 181, 183, 186, 192, 195, 205, 215, 222, 226, 230, 231, 240, 254, 269, 273, 277, 278, 302, 309, 315, 320, 328, 338, 352, 368, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "hook": [0, 2, 30, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 96, 103, 107, 123, 124, 130, 131, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 243, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 368], "planner": [0, 206, 229, 368], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 83, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 163, 165, 167, 169, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 281, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 343, 350, 351, 362, 368, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "vmap": [0, 220, 221, 224, 225, 234, 252, 272, 275, 299, 368, 370, 393], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 47, 53, 55, 56, 67, 69, 81, 93, 103, 107, 119, 123, 124, 130, 131, 139, 154, 164, 165, 183, 196, 197, 220, 222, 224, 226, 263, 269, 272, 273, 280, 284, 299, 302, 348, 356, 368, 370, 375, 376, 377, 378, 379, 380, 382, 389, 390, 391, 393, 394], "sac": [0, 291, 302, 304, 368], "redq": [0, 302, 368], "crossq": [0, 368], "iql": [0, 290, 297, 368, 375, 387, 388], "cql": [0, 284, 289, 368], "dt": [0, 124, 267, 268, 368, 389], "td3": [0, 306, 307, 368], "bc": [0, 5, 306, 368, 393], "a2c": [0, 283, 368], "dreamer": [0, 136, 137, 218, 293, 294, 295, 368, 370], "checkpoint": [0, 45, 72, 77, 89, 90, 92, 96, 368, 390, 391], "builder": [0, 368, 376, 394], "logger": [0, 3, 11, 333, 335, 337, 338, 339, 340, 341, 342, 346, 352, 362, 366, 368, 376, 387], "_util": [0, 3, 12, 368, 384], "implement_for": [0, 3, 368], "thing": [0, 3, 7, 8, 103, 107, 123, 124, 130, 131, 369, 377, 378, 379, 380, 381, 382, 383, 387, 388, 391, 394], "consid": [0, 1, 2, 3, 8, 20, 27, 33, 37, 42, 45, 50, 51, 74, 75, 95, 103, 107, 123, 124, 130, 131, 154, 193, 195, 215, 232, 248, 284, 297, 302, 304, 306, 307, 315, 317, 318, 369, 375, 379, 380, 381, 389, 391], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 95, 103, 104, 106, 107, 108, 116, 117, 118, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 145, 146, 150, 152, 154, 155, 163, 164, 165, 169, 170, 177, 183, 186, 187, 189, 191, 192, 193, 195, 202, 203, 204, 206, 217, 220, 221, 224, 225, 227, 228, 229, 230, 231, 235, 243, 249, 266, 269, 272, 273, 275, 279, 284, 285, 287, 292, 297, 298, 299, 301, 302, 304, 306, 307, 308, 313, 314, 315, 316, 317, 318, 333, 334, 335, 337, 349, 366, 369, 370, 371, 372, 375, 376, 377, 378, 380, 382, 383, 387, 388, 389, 390, 391, 394], "debug": [0, 6, 8, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 369, 394], "work": [0, 1, 2, 3, 4, 8, 11, 12, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 85, 87, 88, 91, 98, 103, 106, 107, 108, 111, 123, 124, 127, 130, 131, 147, 163, 169, 189, 192, 193, 195, 204, 207, 208, 227, 262, 271, 276, 285, 298, 301, 352, 369, 370, 375, 376, 377, 378, 379, 382, 386, 387, 388, 389, 390, 391, 393, 394], "habitat": [0, 3, 109, 369, 390], "lab": [0, 3, 101, 102, 109, 369], "mujoco": [0, 6, 8, 127, 369, 375, 377, 378], "error": [0, 1, 3, 7, 10, 12, 25, 29, 34, 35, 36, 37, 40, 41, 43, 46, 103, 107, 123, 124, 130, 131, 134, 170, 195, 197, 299, 369, 371, 375, 377, 387, 388, 394], "solut": [0, 2, 3, 6, 7, 9, 21, 369, 370, 372, 393], "resourc": [0, 1, 21, 109, 369, 375, 377, 387, 388], "issu": [0, 3, 4, 5, 8, 61, 65, 72, 74, 75, 95, 106, 111, 146, 170, 184, 204, 254, 261, 262, 269, 270, 271, 272, 273, 369, 393], "customis": [0, 369, 376, 383, 387, 388], "video": [0, 4, 9, 335, 337, 348, 366, 368, 369, 384, 387, 388], "render": [0, 3, 8, 113, 132, 333, 335, 348, 369, 375, 376, 377, 379, 383], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 82, 83, 85, 91, 93, 94, 95, 97, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 141, 146, 150, 154, 187, 204, 230, 231, 368, 379, 386, 387, 388, 391, 393], "search": [0, 122, 205, 376], "page": [0, 7, 24, 342, 381], "somewhat": [1, 2, 371, 380, 394], "equival": [1, 3, 25, 27, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 143, 153, 156, 187, 195, 217, 224, 227, 243, 261, 262, 270, 271, 301, 349, 382, 393, 394], "dataload": [1, 70, 86, 88, 376, 382, 391], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 146, 158, 174, 182, 183, 184, 187, 195, 220, 222, 224, 226, 240, 258, 259, 263, 264, 267, 268, 299, 304, 335, 370, 376, 379, 387, 391, 393, 394], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 160, 163, 165, 167, 169, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 329, 330, 332, 333, 335, 343, 348, 349, 350, 362, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394], "thei": [1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 103, 106, 107, 108, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 145, 158, 163, 169, 178, 186, 187, 191, 195, 226, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 349, 352, 370, 371, 372, 375, 376, 377, 378, 381, 386, 387, 388, 389, 390, 391, 393, 394], "over": [1, 2, 3, 4, 8, 14, 15, 37, 45, 51, 52, 54, 60, 61, 67, 80, 86, 87, 103, 107, 117, 118, 123, 124, 130, 131, 139, 154, 165, 177, 184, 195, 204, 249, 252, 275, 292, 294, 299, 321, 333, 355, 372, 375, 376, 377, 379, 380, 381, 382, 387, 388, 389, 394], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 39, 41, 42, 43, 46, 50, 51, 67, 76, 103, 107, 123, 124, 125, 126, 130, 131, 143, 144, 150, 159, 169, 183, 186, 187, 188, 189, 191, 195, 204, 220, 222, 224, 226, 232, 272, 273, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 370, 375, 378, 387, 388, 389, 391, 394], "static": [1, 12, 47, 54, 80, 87, 88, 109, 124, 193, 297, 379, 389, 391], "like": [1, 2, 3, 4, 7, 11, 21, 27, 33, 37, 42, 45, 50, 51, 54, 76, 82, 88, 103, 107, 109, 116, 123, 124, 125, 126, 130, 131, 156, 183, 185, 195, 197, 220, 224, 233, 265, 283, 285, 298, 301, 302, 303, 371, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 394], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 70, 93, 96, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 145, 152, 154, 155, 164, 172, 183, 187, 195, 202, 203, 222, 226, 263, 267, 268, 285, 298, 299, 301, 304, 335, 349, 354, 364, 365, 366, 370, 375, 376, 377, 378, 382, 387, 388, 389, 391], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 64, 65, 68, 69, 70, 103, 107, 119, 123, 124, 130, 131, 141, 146, 150, 159, 169, 177, 183, 186, 187, 188, 189, 191, 195, 227, 252, 272, 273, 274, 304, 335, 372, 377, 379, 383, 391, 394], "two": [1, 2, 3, 4, 8, 10, 35, 36, 37, 42, 45, 47, 50, 51, 67, 82, 86, 88, 103, 107, 123, 124, 130, 131, 143, 165, 169, 191, 195, 213, 220, 222, 224, 226, 246, 249, 273, 298, 306, 310, 348, 352, 371, 375, 376, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 391, 393, 394], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 69, 104, 273, 352, 370, 371, 375, 376, 386, 394], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 169, 177, 178, 181, 183, 185, 186, 187, 189, 191, 195, 204, 207, 208, 220, 222, 224, 226, 227, 230, 231, 232, 233, 235, 252, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 309, 313, 315, 316, 317, 318, 319, 323, 333, 334, 335, 342, 345, 355, 362, 363, 366, 375, 376, 377, 378, 379, 380, 382, 387, 388, 389, 391, 394], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 85, 86, 87, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 144, 145, 149, 152, 155, 163, 165, 167, 169, 177, 179, 185, 187, 189, 191, 193, 195, 204, 207, 208, 210, 216, 219, 222, 226, 227, 230, 231, 238, 243, 262, 266, 270, 271, 273, 275, 276, 277, 284, 297, 299, 302, 304, 306, 307, 312, 315, 318, 333, 334, 348, 349, 364, 365, 370, 371, 375, 377, 379, 380, 381, 382, 386, 387, 389, 390, 391, 393, 394], "constructor": [1, 2, 16, 18, 19, 20, 21, 45, 54, 67, 79, 93, 103, 107, 120, 123, 124, 130, 131, 132, 142, 186, 207, 208, 227, 269, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 363, 366, 370, 375, 376, 377, 379, 382, 387, 388, 391], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 86, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 157, 165, 178, 195, 207, 208, 227, 232, 233, 247, 254, 261, 269, 270, 272, 274, 275, 277, 299, 312, 348, 351, 352, 371, 372, 375, 377, 378, 382, 384, 387, 388, 389], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 104, 107, 108, 109, 111, 112, 113, 119, 120, 123, 124, 127, 130, 131, 140, 187, 195, 220, 222, 224, 226, 234, 263, 266, 274, 275, 299, 306, 356, 366, 370, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 391, 392, 394], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 47, 61, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 140, 145, 159, 162, 165, 181, 182, 183, 184, 187, 192, 195, 204, 205, 206, 218, 220, 222, 224, 226, 228, 229, 258, 259, 263, 264, 266, 267, 268, 269, 273, 283, 293, 301, 314, 315, 316, 317, 318, 321, 322, 323, 334, 337, 343, 348, 352, 372, 376, 378, 380, 381, 383, 384, 386, 389, 390, 393], "queri": [1, 3, 14, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 169, 186, 189, 193, 195, 275, 371, 375, 381, 389, 393], "defin": [1, 2, 12, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 170, 182, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 280, 287, 289, 299, 315, 316, 317, 318, 319, 334, 363, 375, 376, 378, 381, 384, 389, 391, 394], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 87, 88, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 145, 146, 154, 160, 164, 165, 176, 181, 184, 187, 193, 195, 206, 207, 208, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 237, 238, 239, 242, 244, 245, 248, 249, 250, 251, 254, 258, 259, 260, 263, 264, 266, 267, 268, 269, 272, 273, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 343, 345, 348, 352, 354, 355, 356, 364, 365, 366, 370, 371, 375, 376, 377, 378, 379, 380, 382, 384, 387, 388, 389, 390, 391, 394], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 37, 54, 66, 86, 93, 103, 107, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 195, 197, 220, 222, 226, 227, 235, 236, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 316, 317, 318, 349, 375, 377, 378, 382, 383, 387, 388, 389, 391, 394], "deliv": [1, 2, 3, 16, 67, 375, 376, 379, 382, 393], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 33, 34, 41, 42, 43, 45, 46, 50, 51, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 103, 106, 107, 108, 116, 123, 124, 125, 126, 130, 131, 193, 220, 222, 224, 225, 226, 266, 274, 275, 284, 297, 302, 304, 306, 307, 334, 343, 370, 376, 379, 386, 387, 389, 393], "user": [1, 2, 3, 5, 8, 23, 37, 61, 63, 67, 69, 80, 88, 103, 107, 123, 124, 130, 131, 147, 182, 187, 195, 197, 214, 301, 304, 306, 335, 363, 371, 372, 375, 376, 379, 381, 382, 389, 393, 394], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 47, 86, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 181, 258, 259, 263, 264, 267, 268, 375, 377, 384, 387, 388, 393, 394], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 82, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 152, 153, 155, 156, 157, 164, 165, 167, 171, 172, 174, 176, 178, 181, 183, 184, 186, 187, 193, 195, 204, 205, 206, 220, 222, 226, 229, 266, 283, 284, 285, 286, 287, 289, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 370, 371, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "state": [1, 2, 3, 4, 14, 15, 16, 17, 30, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 145, 146, 147, 149, 156, 165, 172, 181, 182, 186, 187, 193, 195, 197, 204, 205, 206, 209, 214, 218, 220, 221, 222, 224, 225, 226, 227, 229, 234, 238, 241, 242, 244, 245, 251, 255, 266, 272, 278, 283, 285, 289, 298, 299, 301, 302, 303, 304, 313, 314, 315, 316, 317, 318, 319, 366, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 389, 394], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 30, 37, 41, 43, 46, 47, 61, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 220, 222, 226, 235, 258, 259, 261, 263, 270, 294, 304, 306, 376, 377, 378, 379, 380, 382, 384, 387, 388, 389, 390, 391, 394], "predefin": [1, 376, 378, 382, 391], "becaus": [1, 3, 4, 7, 41, 43, 46, 47, 61, 103, 107, 123, 124, 130, 131, 156, 163, 181, 186, 192, 195, 213, 233, 254, 261, 262, 266, 269, 270, 271, 272, 273, 370, 375, 376, 378, 380, 381, 382, 386, 387, 388, 389, 391, 394], "potenti": [1, 2, 389, 391], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 37, 47, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 165, 179, 187, 190, 195, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 237, 238, 239, 240, 241, 244, 245, 247, 249, 250, 252, 255, 258, 259, 260, 262, 263, 266, 267, 268, 269, 271, 273, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 356, 371, 375, 377, 378, 379, 380, 386, 387, 388, 390, 391], "heavi": [1, 8, 61, 391], "crucial": [1, 2, 3, 258, 259, 263, 264, 267, 268, 290, 297, 299, 375, 376, 377, 378, 379, 381, 383, 387, 388, 389, 394], "configur": [1, 8, 21, 22, 47, 163, 209, 214, 241, 299, 301, 370, 375, 376, 377, 381, 387, 388, 389], "hyperparamet": [1, 85, 195, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 375, 383, 389, 391], "appropri": [1, 3, 4, 7, 11, 73, 83, 93, 94, 97, 98, 123, 130, 156, 363, 366, 375, 383, 391], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 85, 86, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 370, 371, 375, 378, 380, 384, 387, 388, 389, 390, 393], "take": [1, 2, 3, 8, 23, 47, 64, 90, 96, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 181, 184, 186, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 276, 279, 282, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 343, 354, 370, 372, 375, 376, 377, 379, 380, 381, 387, 388, 389, 391, 394], "consider": [1, 2, 3, 8, 106, 108, 376, 387, 388, 391], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 113, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 142, 152, 155, 182, 187, 193, 195, 205, 207, 208, 222, 226, 227, 277, 283, 284, 285, 286, 287, 289, 291, 292, 298, 299, 301, 302, 303, 304, 306, 307, 313, 315, 318, 375, 376, 377, 379, 387, 388, 389, 394], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 80, 82, 87, 88, 89, 93, 96, 101, 102, 103, 106, 107, 108, 109, 113, 116, 119, 123, 124, 125, 126, 130, 131, 132, 133, 139, 142, 143, 146, 149, 150, 152, 153, 156, 157, 159, 163, 165, 170, 171, 172, 174, 177, 178, 181, 182, 184, 186, 187, 192, 193, 195, 197, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 233, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 269, 271, 272, 273, 276, 279, 283, 285, 291, 296, 298, 299, 301, 302, 303, 305, 306, 314, 315, 316, 317, 318, 319, 335, 337, 347, 348, 349, 352, 362, 364, 365, 366, 370, 372, 375, 376, 377, 378, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "occur": [1, 8, 15, 33, 34, 61, 103, 107, 109, 123, 124, 130, 131, 147, 157, 165, 170, 192, 205, 254, 261, 262, 269, 270, 271, 272, 273, 294, 391, 394], "serial": [1, 2, 3, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 193, 195], "parallel": [1, 3, 8, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 187, 192, 197, 222, 226, 283, 363, 364, 365, 366, 376, 377, 387, 388], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 174, 222, 226, 362, 365, 368, 375, 376, 377, 378, 382, 384, 387, 388, 391], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 116, 119, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 364, 365, 366, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 391, 394], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 46, 54, 64, 69, 70, 104, 120, 123, 130, 193, 364, 365, 366, 375, 376, 377, 393, 394], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 365, 368, 377, 382, 393], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 32, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 87, 88, 116, 125, 126, 220, 224, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 370, 372, 377, 380, 391, 393], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 80, 87, 88, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 120, 121, 123, 127, 131, 193, 195, 222, 226, 232, 267, 268, 299, 354, 368, 370, 371, 375, 379, 383, 387, 388, 389], "aggreg": [1, 3, 61, 80, 93, 125, 126, 205, 207, 208, 210, 211, 275], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 104, 107, 123, 124, 130, 131, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 204, 205, 220, 222, 224, 226, 227, 232, 243, 249, 258, 260, 262, 263, 271, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 354, 370, 371, 376, 378, 379, 380, 383, 384, 389, 390, 393, 394], "final": [1, 2, 3, 4, 21, 41, 43, 46, 47, 183, 192, 220, 222, 224, 226, 232, 258, 259, 263, 264, 265, 267, 268, 274, 315, 348, 370, 375, 376, 377, 383, 384, 387, 388, 389, 394], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 364, 368, 375, 376, 377, 382, 393], "sever": [1, 2, 3, 8, 35, 37, 54, 64, 103, 107, 123, 124, 130, 131, 147, 149, 187, 195, 301, 375, 377, 383, 384, 391, 394], "gather": [1, 3, 18, 20, 21, 54, 70, 74, 75, 80, 87, 95, 170, 231, 234, 240, 299, 314, 356, 369, 376, 377, 378, 382, 387, 388, 389, 391, 394], "continu": [1, 2, 9, 26, 55, 88, 103, 107, 123, 124, 125, 126, 130, 131, 132, 133, 139, 201, 210, 211, 212, 213, 267, 268, 275, 280, 284, 305, 315, 320, 328, 370, 375, 377, 378, 380, 387, 388, 389, 391, 393, 394], "concomitantli": [1, 103, 107, 123, 124, 130, 131], "network": [1, 4, 8, 37, 103, 107, 116, 123, 124, 125, 126, 130, 131, 195, 207, 208, 210, 211, 212, 213, 216, 218, 219, 224, 227, 232, 233, 234, 236, 238, 239, 242, 244, 245, 246, 251, 255, 256, 257, 260, 272, 276, 284, 285, 286, 287, 289, 290, 291, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 311, 313, 315, 316, 317, 318, 319, 361, 362, 370, 371, 372, 381, 384, 386, 389, 394], "impli": [1, 394], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 47, 80, 82, 85, 99, 100, 103, 107, 123, 124, 128, 129, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 220, 221, 222, 224, 225, 226, 232, 234, 236, 272, 283, 284, 285, 291, 294, 304, 306, 354, 361, 370, 372, 375, 376, 377, 378, 386, 389, 391, 393], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 37, 41, 43, 46, 63, 69, 72, 80, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 163, 165, 178, 187, 188, 193, 195, 197, 222, 226, 227, 232, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 389, 390, 391, 393, 394], "slightli": [1, 23, 61, 370, 371, 378, 387, 389, 390, 391, 394], "lag": [1, 375, 376, 377], "therefor": [1, 2, 3, 7, 42, 45, 50, 51, 68, 69, 103, 107, 123, 124, 130, 131, 174, 301, 313, 381, 387, 394], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 80, 82, 87, 88, 93, 95, 96, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 156, 163, 169, 174, 177, 181, 182, 184, 186, 188, 191, 192, 204, 205, 220, 221, 222, 224, 225, 226, 230, 231, 232, 258, 259, 263, 264, 267, 268, 269, 272, 273, 282, 283, 284, 285, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 371, 372, 375, 376, 377, 379, 386, 387, 388, 389, 391, 394], "asynchron": [1, 9, 15, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 283, 364, 375, 376, 377], "off": [1, 2, 4, 223, 250, 261, 304, 333, 348, 357, 370, 372, 375, 376, 377, 380, 381, 387, 388, 390, 394], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 132, 152, 155, 159, 165, 182, 187, 192, 195, 197, 217, 220, 222, 224, 226, 233, 235, 255, 257, 260, 262, 270, 283, 290, 292, 297, 301, 348, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 387, 388, 389, 390, 391, 394], "remot": [1, 2, 18, 19, 20, 21, 123, 130, 394], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 47, 93, 99, 100, 103, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 149, 152, 155, 156, 157, 163, 167, 171, 172, 177, 178, 179, 181, 182, 184, 193, 195, 197, 206, 222, 226, 229, 266, 267, 268, 283, 333, 335, 356, 370, 375, 377, 378, 380, 381, 382, 383, 384, 390, 391, 393], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 178, 302, 315, 316, 317, 318, 319, 371, 375, 377, 380, 381, 382], "synchronis": [1, 104, 387, 388], "either": [1, 2, 5, 22, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 103, 107, 123, 124, 130, 131, 181, 182, 195, 278, 299, 306, 307, 339, 372, 375, 376, 378, 387, 390, 391, 393, 394], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 375, 388, 393], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 154, 157, 159, 162, 163, 164, 165, 169, 170, 172, 173, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 195, 197, 201, 204, 205, 206, 207, 208, 210, 211, 212, 213, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 249, 250, 254, 255, 256, 257, 259, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 315, 316, 317, 318, 321, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 342, 345, 346, 348, 349, 352, 366, 370, 371, 372, 375, 376, 377, 378, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "second": [1, 3, 8, 23, 35, 36, 61, 64, 93, 143, 220, 222, 224, 226, 262, 285, 298, 301, 304, 337, 351, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 152, 153, 155, 156, 157, 163, 167, 168, 169, 171, 172, 174, 178, 181, 183, 185, 186, 187, 189, 191, 193, 195, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 232, 233, 235, 236, 241, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 333, 349, 354, 360, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 53, 54, 55, 56, 80, 87, 103, 107, 123, 124, 130, 131, 143, 159, 163, 186, 195, 216, 217, 221, 225, 237, 255, 256, 257, 261, 262, 265, 272, 278, 283, 285, 286, 287, 292, 298, 301, 303, 313, 314, 315, 316, 317, 318, 352, 368, 371, 372, 375, 376, 377, 378, 379, 380, 386, 387, 388, 389, 394], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 80, 82, 87, 88, 95, 102, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 146, 165, 183, 186, 187, 193, 195, 201, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 284, 287, 290, 291, 297, 299, 302, 304, 306, 307, 313, 315, 316, 317, 318, 333, 335, 339, 348, 356, 357, 358, 362, 364, 365, 370, 371, 372, 375, 377, 378, 379, 380, 389, 391, 394], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 27, 30, 33, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 152, 153, 155, 156, 157, 167, 169, 171, 172, 174, 178, 181, 183, 186, 187, 189, 191, 195, 201, 204, 206, 216, 220, 221, 222, 224, 225, 226, 229, 235, 236, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 266, 267, 269, 270, 271, 272, 275, 277, 280, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 333, 349, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 61, 63, 67, 80, 87, 88, 91, 93, 103, 107, 111, 123, 124, 127, 130, 131, 172, 213, 222, 224, 226, 227, 237, 252, 254, 258, 259, 261, 272, 277, 299, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 369, 371, 375, 376, 377, 379, 381, 382, 387, 388, 389, 391, 393, 394], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 29, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 87, 88, 89, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 143, 146, 149, 152, 153, 154, 155, 164, 165, 169, 174, 177, 180, 182, 183, 184, 186, 187, 188, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 247, 252, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 313, 315, 316, 317, 318, 322, 323, 337, 345, 347, 348, 352, 356, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 394], "cuda": [1, 2, 3, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 103, 107, 109, 110, 111, 123, 124, 130, 131, 150, 163, 168, 169, 183, 186, 187, 189, 191, 195, 220, 221, 224, 225, 272, 344, 375, 376, 377, 378, 387, 388, 390, 394], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 29, 52, 82, 99, 100, 112, 113, 123, 130, 131, 147, 149, 154, 162, 164, 174, 177, 181, 186, 193, 220, 224, 226, 232, 235, 236, 254, 261, 269, 270, 272, 273, 276, 285, 291, 298, 301, 321, 366, 370, 371, 372, 375, 376, 377, 379, 381, 382, 387, 388, 389, 391, 393], "infer": [1, 123, 130, 146, 193, 222, 226, 235, 260, 269, 289, 333, 375, 377, 382, 384, 391], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 37, 61, 64, 80, 87, 88, 99, 100, 101, 102, 103, 106, 107, 112, 113, 119, 120, 121, 123, 124, 130, 131, 164, 165, 187, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 274, 275, 276, 279, 304, 335, 342, 348, 364, 365, 366, 369, 372, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393], "dispatch": [1, 18, 19, 20, 21, 252, 266, 335, 375], "avail": [1, 2, 3, 4, 6, 21, 42, 45, 50, 51, 61, 64, 69, 80, 86, 87, 88, 101, 102, 111, 117, 118, 123, 125, 126, 127, 132, 133, 139, 142, 145, 163, 217, 243, 269, 273, 299, 335, 364, 365, 370, 375, 376, 377, 378, 379, 380, 387, 388, 389, 391, 394], "speed": [1, 2, 4, 8, 29, 103, 107, 123, 124, 130, 131, 371, 375, 376, 377, 378, 387, 388, 389, 391], "avoid": [1, 2, 3, 37, 74, 75, 95, 103, 107, 123, 124, 130, 131, 138, 187, 193, 195, 254, 272, 277, 285, 298, 301, 304, 355, 377, 388], "oom": [1, 3, 41, 43, 46, 74, 75, 95], "choic": [1, 2, 63, 69, 123, 237, 370, 371, 375, 376, 381, 387, 388], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33, 37, 42, 45, 47, 50, 51, 54, 61, 64, 65, 67, 68, 69, 72, 74, 75, 80, 82, 87, 88, 93, 95, 103, 104, 105, 107, 116, 120, 123, 124, 125, 126, 130, 131, 132, 142, 143, 152, 155, 172, 186, 188, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 247, 251, 252, 254, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 284, 285, 297, 298, 299, 301, 302, 304, 306, 307, 315, 316, 317, 318, 319, 333, 349, 364, 365, 366, 370, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 391, 394], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 50, 53, 54, 55, 56, 67, 79, 88, 103, 107, 111, 122, 123, 124, 130, 131, 139, 146, 159, 188, 193, 205, 222, 226, 260, 370, 371, 376, 388], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 93, 95, 103, 107, 123, 124, 130, 131, 192, 193, 195, 206, 229, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 342, 368, 372, 375, 377, 378, 380, 382, 384, 387, 388, 390, 394], "while": [1, 2, 3, 7, 8, 23, 37, 103, 107, 123, 124, 130, 131, 174, 187, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 290, 297, 298, 301, 304, 370, 371, 375, 377, 378, 380, 382, 383, 387, 388, 389, 390, 391, 393], "wait": [1, 20, 21, 22, 378, 389], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 29, 35, 36, 37, 40, 41, 43, 45, 46, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 80, 82, 87, 88, 93, 95, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 138, 142, 143, 145, 146, 154, 165, 172, 174, 177, 178, 181, 183, 187, 195, 204, 207, 208, 220, 224, 245, 266, 269, 274, 275, 276, 283, 284, 286, 287, 289, 290, 291, 297, 301, 304, 306, 315, 322, 323, 333, 335, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 391, 394], "impact": [1, 2, 3, 67, 113, 152, 155, 283, 285, 298, 301, 303, 376, 378, 387, 388], "memori": [1, 3, 8, 21, 29, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 72, 74, 78, 103, 104, 107, 111, 123, 124, 130, 131, 146, 150, 169, 183, 186, 187, 189, 191, 193, 195, 224, 225, 272, 366, 368, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "manag": [1, 8, 311, 312, 315, 316, 317, 318, 348, 381], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 71, 79, 80, 82, 85, 87, 88, 93, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 204, 205, 206, 216, 217, 222, 226, 228, 229, 243, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 333, 335, 346, 347, 348, 350, 351, 352, 356, 371, 372, 375, 377, 378, 379, 381, 386, 387, 388, 389, 391, 393, 394], "control": [1, 3, 5, 8, 16, 23, 24, 28, 80, 87, 101, 102, 103, 107, 116, 123, 124, 125, 126, 130, 131, 154, 204, 210, 211, 212, 213, 222, 226, 228, 229, 245, 252, 267, 268, 272, 273, 274, 283, 285, 298, 299, 301, 305, 315, 320, 328, 333, 370, 372, 375, 376, 377, 379, 380, 381, 387, 388, 389, 391], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 86, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 146, 147, 152, 155, 160, 163, 164, 165, 169, 170, 181, 183, 184, 186, 187, 189, 193, 195, 197, 216, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 234, 250, 255, 256, 257, 260, 266, 269, 272, 273, 275, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 310, 313, 315, 316, 317, 318, 333, 335, 343, 347, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 391, 394], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 376, 388], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 29, 35, 36, 40, 42, 43, 45, 47, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 80, 82, 85, 87, 103, 107, 123, 124, 125, 126, 130, 131, 142, 143, 146, 149, 152, 155, 157, 160, 167, 179, 187, 193, 195, 222, 226, 233, 315, 317, 318, 348, 352, 371, 375, 376, 377, 378, 380, 381, 382, 384, 387, 388, 389, 391, 394], "heurist": [1, 4, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 266, 268, 375, 382, 394], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 63, 85, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 236, 301, 306, 315, 316, 317, 318, 319, 334, 369, 370, 372, 375, 376, 377, 378, 380, 382, 383, 388, 391, 394], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 52, 54, 63, 67, 86, 87, 91, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 146, 152, 154, 155, 160, 164, 165, 186, 187, 193, 195, 207, 208, 221, 222, 225, 226, 227, 230, 231, 232, 233, 249, 260, 267, 268, 276, 284, 297, 299, 302, 304, 306, 307, 371, 375, 376, 377, 379, 380, 382, 386, 387, 388, 390, 391, 394], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 151, 152, 154, 155, 156, 157, 159, 163, 164, 165, 167, 169, 170, 174, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 197, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 362, 366, 371, 372, 375, 376, 377, 378, 380, 387, 390, 391, 393, 394], "behaviour": [1, 3, 14, 15, 21, 67, 107, 147, 152, 155, 165, 170, 182, 204, 222, 223, 226, 250, 333, 348, 370, 376, 387, 391], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 33, 103, 107, 123, 124, 130, 131, 146, 152, 155, 165, 183, 184, 226, 269, 273, 274, 275, 354, 364, 365, 370, 375, 376, 379, 380, 388, 389, 394], "choos": [1, 11, 116, 222, 226, 301, 368, 370, 371, 375, 376, 377, 387, 388, 391], "follow": [1, 2, 3, 6, 7, 8, 11, 37, 41, 43, 44, 46, 47, 61, 63, 64, 65, 66, 67, 68, 69, 80, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 163, 169, 189, 193, 195, 207, 208, 220, 222, 224, 226, 227, 262, 269, 270, 271, 282, 283, 284, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 335, 352, 370, 371, 372, 375, 376, 377, 378, 381, 382, 386, 387, 388, 389, 391, 393, 394], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 355, 375, 377, 393], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 61, 146, 160, 195, 258, 259, 263, 266, 267, 268, 334, 335, 337, 345, 348, 352, 355, 356, 375, 376, 377, 378, 380, 387, 388, 391, 393, 394], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 95, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 122, 123, 124, 127, 130, 131, 142, 143, 146, 149, 150, 154, 157, 159, 162, 163, 165, 167, 168, 169, 177, 179, 183, 186, 187, 189, 191, 192, 193, 195, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 233, 234, 235, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 264, 266, 267, 268, 271, 272, 273, 275, 276, 279, 285, 298, 299, 301, 304, 306, 314, 315, 316, 317, 318, 333, 334, 337, 348, 371, 372, 376, 377, 378, 379, 380, 382, 383, 387, 388, 389, 391, 393, 394], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 174, 222, 226, 355, 375, 376, 377, 378, 382, 384, 387, 388, 391, 393], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 35, 36, 37, 38, 45, 47, 49, 50, 61, 63, 64, 67, 80, 82, 85, 87, 88, 90, 93, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 162, 169, 174, 177, 181, 182, 183, 184, 191, 193, 195, 217, 220, 221, 222, 224, 226, 232, 233, 238, 242, 243, 251, 258, 259, 261, 262, 263, 271, 275, 321, 324, 325, 326, 327, 329, 330, 331, 332, 335, 348, 349, 364, 365, 370, 371, 375, 376, 377, 378, 380, 381, 382, 384, 387, 388, 389, 390, 391, 393, 394], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 355, 375, 376, 384], "rand_step": [1, 2, 3, 30, 48, 101, 102, 103, 104, 106, 107, 108, 114, 115, 119, 120, 121, 123, 124, 130, 131, 162, 183, 193, 389, 393, 394], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 375], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 63, 65, 67, 68, 69, 375, 376, 377], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 32, 37, 38, 49, 50, 61, 63, 64, 65, 67, 68, 69, 79, 80, 87, 88, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 170, 181, 186, 195, 206, 226, 229, 267, 268, 301, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 343, 368, 371, 375, 376, 377, 378, 379, 382, 384, 389, 393, 394], "pad": [1, 2, 3, 23, 44, 52, 63, 65, 67, 68, 69, 146, 207, 208, 210, 211, 226, 230, 231, 232, 349], "along": [1, 2, 3, 14, 15, 23, 33, 34, 41, 43, 46, 47, 54, 63, 65, 67, 68, 69, 75, 80, 82, 87, 88, 93, 95, 106, 108, 145, 146, 147, 165, 167, 170, 177, 185, 226, 227, 230, 231, 236, 261, 269, 272, 273, 299, 306, 370, 375, 376, 378, 379, 381, 387, 388, 389, 391], "point": [1, 2, 3, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 66, 73, 79, 80, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 139, 142, 145, 146, 150, 169, 182, 183, 185, 186, 187, 189, 191, 195, 228, 272, 282, 292, 352, 369, 376, 377, 386, 387, 388, 389, 391, 394], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 80, 87, 88, 107, 142, 170, 181, 205, 230, 231, 259, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 372, 378], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 48, 50, 65, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 160, 170, 193, 195, 217, 230, 231, 243, 261, 262, 270, 271, 273, 310, 315, 349, 375, 377, 378, 379, 380, 381, 387, 388], "valid": [1, 2, 3, 23, 41, 43, 44, 54, 70, 93, 134, 142, 170, 187, 195, 207, 208, 227, 230, 231, 258, 259, 267, 268, 298, 315, 316, 317, 318, 349, 372, 394], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 348, 368, 375, 376], "strategi": [1, 2, 16, 67, 85, 116, 139, 231, 240, 263, 370, 372, 375, 376, 380, 387, 388, 391], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 50, 53, 55, 56, 58, 82, 103, 107, 113, 119, 123, 124, 125, 126, 130, 131, 132, 134, 143, 145, 146, 156, 163, 181, 182, 183, 186, 187, 192, 193, 195, 207, 208, 230, 231, 232, 233, 258, 259, 261, 269, 270, 273, 276, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 307, 313, 335, 352, 362, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 394], "organ": [1, 2, 389, 391], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 103, 106, 107, 108, 123, 124, 127, 130, 131, 143, 146, 152, 155, 156, 174, 181, 192, 193, 195, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 280, 287, 292, 306, 313, 333, 335, 370, 371, 376, 379, 380, 381, 382, 383, 384, 387, 389, 393], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 63, 64, 67, 85, 99, 100, 103, 107, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 146, 154, 165, 172, 187, 188, 195, 217, 220, 221, 222, 224, 225, 226, 227, 229, 232, 233, 234, 243, 297, 299, 301, 310, 315, 316, 317, 321, 322, 323, 348, 352, 354, 364, 365, 370, 371, 372, 375, 376, 377, 379, 381, 383, 386, 387, 388, 389, 390, 391, 394], "how": [1, 2, 3, 11, 18, 19, 20, 24, 37, 42, 50, 67, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 195, 234, 269, 283, 285, 296, 298, 299, 301, 335, 337, 352, 369, 370, 375, 376, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "tabl": [1, 370, 376, 380], "summar": [1, 3, 389], "what": [1, 3, 8, 11, 28, 42, 53, 61, 80, 87, 103, 107, 123, 124, 130, 131, 156, 183, 197, 204, 270, 299, 306, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 384, 387, 388, 389, 390, 391, 393, 394], "expect": [1, 2, 3, 4, 7, 27, 37, 45, 53, 54, 80, 86, 87, 103, 107, 119, 122, 123, 124, 130, 131, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 220, 221, 222, 224, 225, 226, 232, 233, 262, 267, 268, 272, 275, 283, 284, 285, 286, 287, 289, 290, 291, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 356, 369, 370, 371, 372, 375, 377, 378, 379, 380, 381, 382, 387, 388, 389, 391, 394], "n": [1, 2, 3, 6, 7, 25, 29, 37, 40, 47, 103, 107, 123, 124, 130, 131, 146, 154, 159, 188, 195, 220, 221, 224, 229, 266, 267, 268, 273, 283, 284, 291, 299, 314, 349, 370, 372, 376, 378, 380, 387, 388, 391, 394], "b": [1, 2, 3, 7, 8, 23, 27, 33, 41, 43, 45, 46, 47, 50, 51, 93, 220, 221, 224, 225, 232, 233, 235, 236, 242, 251, 276, 315, 316, 317, 318, 319, 321, 335, 370, 376, 390, 391], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 82, 86, 93, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 139, 142, 146, 152, 155, 156, 169, 173, 174, 182, 184, 191, 193, 195, 197, 204, 220, 224, 261, 267, 268, 272, 305, 315, 316, 317, 318, 319, 321, 335, 342, 352, 354, 366, 369, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "p": [1, 2, 4, 82, 85, 104, 128, 129], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 61, 63, 65, 67, 68, 69, 99, 100, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 150, 152, 153, 155, 162, 169, 174, 178, 182, 183, 185, 186, 187, 189, 191, 192, 195, 220, 223, 224, 227, 232, 245, 249, 250, 272, 275, 282, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 354, 364, 365, 366, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 394], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 79, 80, 82, 93, 103, 106, 107, 123, 124, 130, 131, 152, 153, 155, 162, 165, 185, 187, 197, 226, 227, 233, 234, 269, 272, 273, 275, 276, 282, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 335, 343, 354, 364, 365, 366, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 382, 383, 387, 388, 389, 391, 394], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 55, 56, 63, 65, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 123, 124, 130, 131, 132, 133, 139, 145, 146, 147, 159, 165, 167, 170, 177, 180, 185, 188, 193, 207, 208, 209, 214, 222, 224, 226, 227, 230, 231, 232, 235, 236, 241, 242, 246, 247, 248, 249, 252, 261, 266, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 366, 370, 375, 376, 377, 378, 379, 387, 388, 389, 391], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 93, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 127, 130, 131, 138, 145, 147, 170, 177, 183, 184, 187, 193, 195, 204, 218, 220, 224, 226, 266, 267, 268, 284, 285, 291, 294, 297, 298, 299, 301, 302, 304, 306, 307, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 370, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "adapt": [1, 24, 140, 181, 298, 375, 389], "equal": [1, 14, 15, 17, 61, 80, 87, 88, 120, 123, 130, 164, 165, 207, 208, 220, 222, 224, 226, 227, 233, 305, 310, 343, 364, 365, 375, 377, 390], "introduc": [1, 2, 123, 130, 220, 222, 224, 226, 267, 268, 375, 387], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 54, 55, 56, 63, 69, 74, 75, 82, 93, 95, 99, 100, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 169, 183, 187, 189, 195, 197, 210, 222, 226, 247, 273, 274, 275, 335, 343, 355, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 391, 393, 394], "confus": [1, 37, 103, 107, 123, 124, 130, 131, 187, 195], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 46, 50, 51, 54, 61, 63, 65, 67, 68, 69, 74, 75, 76, 82, 85, 86, 87, 88, 89, 91, 95, 103, 106, 107, 108, 119, 123, 124, 130, 131, 149, 153, 154, 171, 178, 185, 189, 193, 195, 220, 222, 226, 236, 237, 260, 262, 263, 271, 273, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 315, 333, 349, 364, 365, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390, 393, 394], "better": [1, 3, 8, 9, 14, 15, 23, 222, 226, 371, 377, 379, 389, 393], "consist": [1, 2, 3, 37, 42, 45, 50, 51, 64, 67, 103, 107, 123, 124, 130, 131, 163, 192, 195, 208, 227, 375, 376, 377, 389, 390, 394], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 67, 103, 107, 117, 118, 123, 124, 130, 131, 187, 269, 273, 375, 377, 379, 380, 382, 387, 388, 389, 394], "keep": [1, 3, 4, 7, 8, 15, 42, 45, 50, 51, 86, 93, 123, 130, 165, 169, 191, 193, 195, 204, 267, 268, 345, 352, 375, 376, 377, 378, 382, 383, 384, 388, 389, 391, 393, 394], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 61, 64, 169, 191, 284, 286, 289, 291, 302, 304, 306, 307, 371, 375, 376, 380, 381, 387, 388, 391, 394], "interchang": [1, 377, 379, 383, 390, 391], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 154, 164, 175, 187, 193, 195, 197, 207, 208, 216, 220, 222, 226, 227, 232, 233, 262, 269, 273, 283, 285, 286, 289, 290, 291, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 310, 315, 348, 352, 371, 375, 376, 378, 382, 387, 388, 389, 391, 394], "wherea": [1, 2, 22, 67, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 154, 195, 299, 372, 383], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 53, 55, 56, 64, 67, 69, 79, 80, 103, 107, 119, 123, 124, 130, 131, 169, 183, 187, 191, 193, 195, 222, 224, 226, 230, 231, 263, 264, 267, 268, 269, 273, 287, 290, 291, 304, 313, 315, 316, 317, 318, 319, 375, 376, 377, 379, 381, 382, 383, 387, 388, 389, 390], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 61, 67, 80, 87, 93, 103, 107, 123, 124, 130, 131, 170, 274, 275, 343, 352, 370, 375, 376, 377, 382, 386, 393, 394], "doesn": [1, 4, 12, 93, 120, 152, 155, 379], "understood": [1, 375], "serv": [1, 18, 20, 21, 109, 391, 394], "basi": [1, 93, 232, 391], "simplest": [1, 93, 276, 375, 377, 378, 380, 387, 388, 391, 394], "scenario": [1, 2, 117, 118, 123, 132, 133, 333, 375, 380, 387, 388, 389], "transit": [1, 37, 63, 67, 80, 88, 93, 103, 107, 123, 124, 130, 131, 195, 278, 375, 378, 379, 380, 382, 387, 389, 391], "sampl": [1, 4, 8, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 103, 107, 119, 122, 123, 124, 130, 131, 139, 145, 146, 170, 174, 198, 199, 202, 203, 206, 215, 223, 229, 230, 231, 240, 241, 244, 249, 250, 254, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 283, 284, 285, 286, 287, 289, 298, 300, 301, 306, 307, 343, 349, 352, 355, 368, 370, 375, 376, 377, 378, 379, 380, 382, 384, 387, 388, 390, 393, 394], "attent": [1, 2, 8, 375, 378, 394], "given": [1, 2, 3, 14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 103, 107, 119, 123, 124, 130, 131, 150, 154, 165, 169, 183, 186, 187, 189, 191, 193, 195, 204, 206, 217, 218, 220, 224, 229, 234, 243, 247, 254, 261, 262, 263, 266, 268, 271, 272, 273, 274, 275, 277, 282, 286, 287, 289, 299, 314, 315, 316, 317, 318, 319, 321, 344, 348, 362, 370, 372, 375, 376, 377, 379, 380, 381, 382, 383, 388, 389, 394], "built": [1, 2, 3, 5, 7, 82, 99, 100, 106, 112, 113, 122, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 308, 313, 360, 362, 363, 366, 375, 376, 377, 378, 381, 383, 389, 391, 394], "flatten": [1, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 93, 143, 159, 349, 368, 378, 388], "suffici": [1, 3, 4, 375], "preprocess": [1, 2, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 376], "popul": [1, 2, 3, 42, 45, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 162, 183, 234, 299, 375, 377, 378, 380, 382, 389, 391], "replaybuff": [1, 2, 30, 42, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 97, 146, 170, 174, 195, 287, 292, 313, 360, 362, 368, 377, 382, 384, 387, 388, 390, 391, 393], "lazytensorstorag": [1, 2, 42, 45, 50, 51, 79, 93, 174, 195, 377, 384, 388, 391], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 45, 93, 103, 104, 107, 123, 124, 130, 131, 138, 143, 163, 183, 195, 252, 261, 266, 269, 270, 293, 295, 306, 315, 318, 326, 327, 331, 332, 333, 362, 371, 375, 387, 388, 391, 393, 394], "reshap": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 87, 93, 143, 222, 226, 227, 333, 377, 387, 388], "extend": [1, 2, 8, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 42, 45, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 79, 80, 82, 83, 87, 88, 91, 93, 94, 97, 98, 145, 174, 195, 299, 349, 371, 372, 375, 376, 377, 378, 382, 384, 387, 388, 390, 391, 393], "slice": [1, 2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 139, 145, 391], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 93, 111, 234, 382, 387, 388], "achiev": [1, 2, 3, 4, 37, 103, 107, 111, 123, 124, 130, 131, 182, 195, 205, 269, 349, 372, 375, 376, 377, 378, 387, 388, 389, 391, 394], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 93, 103, 104, 107, 111, 123, 124, 125, 130, 131, 132, 133, 143, 146, 169, 186, 187, 189, 192, 193, 195, 201, 204, 207, 208, 210, 211, 212, 213, 214, 219, 222, 226, 227, 228, 232, 233, 260, 273, 280, 287, 292, 302, 304, 313, 335, 349, 356, 357, 358, 362, 364, 365, 370, 375, 376, 377, 378, 380, 383, 387, 388, 389, 390, 391, 393, 394], "multidimension": [1, 2, 50, 79, 80, 391], "slicesampl": [1, 2, 61, 80, 391], "sampler": [1, 2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 95, 170, 287, 292, 313, 375, 377, 387, 388, 391], "One": [1, 2, 4, 8, 25, 29, 36, 40, 54, 93, 99, 100, 123, 130, 146, 174, 189, 240, 258, 259, 272, 276, 305, 310, 339, 375, 376, 391, 394], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 82, 87, 88, 89, 90, 91, 93, 95, 99, 103, 104, 107, 112, 123, 124, 125, 126, 127, 130, 131, 132, 139, 142, 143, 146, 149, 156, 160, 163, 165, 167, 178, 182, 183, 184, 187, 188, 193, 195, 207, 208, 217, 222, 226, 227, 230, 231, 232, 233, 243, 254, 261, 262, 266, 269, 270, 271, 272, 273, 276, 277, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 305, 306, 307, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 371, 375, 376, 377, 378, 380, 386, 389, 391], "ensur": [1, 2, 3, 37, 42, 50, 79, 80, 86, 103, 107, 123, 124, 130, 131, 139, 146, 169, 181, 187, 189, 193, 195, 222, 226, 261, 370, 376, 377, 389, 391], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 93, 95, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 152, 155, 156, 157, 163, 165, 167, 171, 172, 174, 178, 181, 183, 185, 193, 194, 195, 197, 201, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 240, 241, 242, 243, 248, 249, 251, 254, 255, 256, 257, 260, 261, 262, 266, 267, 269, 270, 271, 272, 275, 276, 277, 280, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 343, 349, 352, 362, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 61, 223, 249, 250, 282, 369, 375, 376, 377, 378, 381, 387, 388, 390, 394], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 28, 37, 41, 43, 89, 93, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 146, 149, 159, 169, 172, 184, 187, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 235, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 276, 279, 282, 291, 303, 304, 314, 319, 335, 352, 366, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 391, 393, 394], "dimension": [1, 42, 45, 50, 51, 154, 222, 226, 315, 320, 328, 388], "num_slic": [1, 2, 61, 67, 80, 87, 88, 391], "4": [1, 2, 3, 7, 25, 27, 29, 30, 33, 37, 40, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 95, 99, 100, 101, 102, 103, 107, 112, 113, 114, 115, 116, 119, 121, 123, 124, 128, 129, 130, 131, 139, 140, 142, 143, 146, 156, 174, 181, 182, 193, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 224, 225, 227, 229, 232, 233, 237, 238, 239, 240, 241, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 333, 334, 370, 374, 375, 376, 377, 378, 380, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 30, 48, 143, 174, 378, 382, 391, 393], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 174, 352, 355, 362, 372, 375, 376, 377, 378, 382, 384, 387, 388, 391, 393], "dim": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 146, 147, 167, 183, 188, 193, 225, 247, 252, 266, 366, 376, 377, 387, 389, 391], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 53, 54, 55, 56, 63, 65, 67, 79, 80, 87, 88, 103, 107, 111, 120, 123, 124, 127, 130, 131, 143, 150, 169, 183, 186, 187, 189, 191, 195, 222, 226, 227, 234, 252, 272, 274, 275, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 333, 335, 337, 370, 372, 375, 376, 377, 378, 379, 380, 381, 383, 387, 388, 389, 391, 394], "ndim": [1, 2, 42, 45, 50, 51, 74, 75, 79, 80, 93, 95, 103, 107, 123, 124, 130, 131, 195, 266], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 93, 103, 107, 120, 124, 125, 126, 127, 130, 131, 333, 363, 368, 375, 376, 377, 379, 386, 393, 394], "make_env": [1, 3, 123, 130, 133, 193, 333, 357, 358, 375, 376, 394], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 79, 85, 103, 107, 123, 124, 130, 131, 187, 216, 243, 262, 270, 271, 272, 273, 292, 354, 368, 372, 375, 376, 379, 380, 384, 391, 394], "behav": [1, 3, 109, 119, 220, 224, 240, 290, 297, 299, 390], "iif": 1, "accordingli": [1, 80, 181, 182, 224, 270, 378], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 27, 29, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 110, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 142, 143, 146, 150, 154, 156, 157, 163, 165, 167, 169, 171, 172, 174, 177, 178, 181, 182, 183, 185, 186, 187, 189, 191, 195, 196, 201, 206, 207, 208, 210, 211, 212, 214, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 232, 233, 234, 237, 240, 242, 252, 254, 255, 256, 257, 261, 262, 269, 271, 272, 275, 276, 277, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 321, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 351, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 67, 79, 93, 142, 156, 197, 261, 272, 380, 381, 383, 387, 388], "current": [1, 2, 3, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 82, 88, 103, 107, 109, 120, 123, 124, 130, 131, 142, 143, 146, 170, 182, 183, 184, 186, 187, 195, 198, 199, 204, 218, 245, 266, 267, 268, 283, 285, 292, 298, 301, 303, 304, 338, 372, 375, 376, 377, 378, 381, 387, 388, 389, 391, 393, 394], "fulli": [1, 8, 37, 103, 107, 123, 124, 130, 131, 195, 221, 225, 376, 381, 389, 391], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 86, 88, 89, 91, 93, 94, 95, 97, 98, 103, 104, 107, 120, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 159, 169, 170, 174, 187, 189, 193, 195, 197, 205, 207, 208, 214, 227, 236, 260, 266, 272, 273, 274, 275, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 315, 317, 318, 333, 340, 352, 369, 371, 375, 376, 377, 380, 381, 387, 388, 389, 391, 393, 394], "consecut": [1, 3, 61, 86, 111, 226, 267, 268, 335, 378, 379, 382, 388, 391, 394], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 169, 191, 195, 352, 366, 376, 377, 379, 380], "therebi": [1, 24, 333, 371, 375, 376], "interrupt": [1, 2, 107, 266, 321], "These": [1, 2, 7, 47, 64, 69, 96, 132, 169, 191, 370, 371, 375, 377, 387, 388, 389, 391, 394], "tool": [1, 2, 3, 5, 378, 379, 387, 389, 391, 394], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 103, 106, 107, 123, 124, 130, 131, 135, 138, 372, 375, 377, 378, 379, 382, 383, 389], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 368], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 368], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 69, 104, 105, 123, 130, 193, 375, 376, 377, 378, 387, 388, 389, 390, 394], "synchron": [1, 14, 19, 21, 41, 43, 46, 120, 364, 365, 376, 377, 387], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 120, 123, 124, 130, 131, 152, 155, 182, 187, 193, 195, 198, 202, 215, 222, 223, 226, 240, 248, 249, 250, 269, 273, 299, 333, 348, 371, 375, 376, 378, 387, 388, 393, 394], "find": [1, 4, 6, 7, 18, 19, 20, 42, 44, 52, 87, 88, 224, 258, 259, 267, 268, 346, 350, 375, 376, 380, 381, 387, 388], "folder": [1, 2, 41, 43, 46, 132, 376], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 134, 139, 145, 146, 149, 150, 152, 153, 155, 158, 163, 164, 165, 169, 177, 179, 183, 184, 186, 187, 189, 191, 193, 195, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 233, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 283, 284, 294, 297, 299, 301, 302, 303, 304, 306, 307, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 347, 352, 355, 364, 365, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 393, 394], "variou": [1, 2, 3, 222, 226, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 308, 313, 335, 364, 365, 375, 376, 377, 379, 380, 381, 383, 387, 388, 391, 394], "machin": [1, 2, 7, 18, 19, 20, 37, 66, 111, 387, 388, 393], "wonder": 1, "why": [1, 2, 3, 204, 387, 389, 394], "instead": [1, 4, 7, 8, 12, 29, 37, 67, 103, 107, 123, 124, 130, 131, 159, 183, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 283, 285, 287, 290, 291, 292, 297, 298, 301, 302, 303, 304, 313, 315, 319, 323, 366, 370, 371, 379, 380, 384, 389, 391, 394], "lower": [1, 2, 3, 21, 26, 149, 193, 244, 245, 276, 377, 387, 389], "io": [1, 11, 61, 67, 112, 113, 120, 224, 225], "footprint": [1, 2, 391], "commun": [1, 2, 3, 123, 130, 369, 377, 394], "yet": [1, 99, 100, 112, 390], "plai": [1, 3, 125, 126, 131, 146, 376, 377, 381, 391, 394], "role": [1, 3, 118, 376, 381, 394], "opposit": [1, 387], "direct": [1, 2, 37, 103, 107, 123, 124, 130, 131, 195, 220, 224, 299, 376, 381], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 69, 79, 80, 88, 93, 103, 107, 123, 124, 125, 126, 127, 130, 131, 195, 197, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 276, 279, 333, 335, 371, 375, 376, 377, 378, 379, 380, 381, 387, 389, 390, 391, 393, 394], "faster": [1, 2, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 68, 69, 120, 315, 316, 317, 318, 378, 387, 388], "share": [1, 3, 6, 8, 23, 41, 43, 46, 72, 74, 75, 76, 80, 87, 89, 91, 95, 104, 123, 130, 193, 222, 226, 232, 233, 255, 256, 257, 283, 284, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 366, 368, 370, 377, 378, 384, 386, 387, 388, 393, 394], "among": [1, 3, 125, 126, 387, 388], "prohibit": [1, 3, 93], "slow": [1, 3, 4, 11, 41, 43, 46], "compar": [1, 3, 67, 93, 284, 297, 302, 304, 306, 307, 348, 371, 375, 377, 380, 381, 387, 388, 391, 394], "gpu": [1, 7, 8, 37, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 195, 375, 377, 378, 387, 388, 394], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 50, 61, 79, 80, 87, 93, 99, 100, 107, 131, 142, 165, 193, 206, 215, 218, 220, 222, 224, 226, 229, 241, 248, 249, 258, 259, 269, 273, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 370, 371, 375, 376, 377, 380, 387, 388, 389, 391, 393, 394], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 169, 177, 178, 183, 185, 186, 187, 189, 191, 195, 222, 226, 230, 231, 232, 254, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 272, 273, 276, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 309, 313, 315, 316, 317, 318, 319, 323, 333, 342, 363, 375, 376, 377, 380, 383, 387, 388, 391, 394], "build": [1, 3, 7, 23, 27, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 108, 109, 112, 113, 117, 118, 120, 123, 124, 127, 130, 131, 132, 133, 174, 193, 195, 206, 222, 226, 229, 265, 269, 273, 352, 359, 360, 361, 370, 372, 377, 378, 380, 381, 382, 383, 387, 388, 389, 390, 393, 394], "mani": [1, 2, 3, 4, 45, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127, 283, 285, 291, 298, 301, 370, 375, 376, 377, 379, 380, 382, 384, 387, 388, 389, 391, 394], "eg": [1, 2, 3, 12, 41, 43, 46, 74, 75, 76, 89, 91, 95, 101, 102, 103, 106, 107, 108, 109, 111, 123, 124, 127, 130, 131, 154, 181, 187, 232, 260, 335], "gymnasium": [1, 3, 5, 12, 103, 106, 107, 108, 114, 115, 123, 124, 130, 131, 135, 138, 157, 178, 181, 192, 376, 377, 389, 393], "warn": [1, 3, 258, 259, 263, 264, 267, 268, 376], "quickli": [1, 3, 376, 387, 388, 394], "becom": [1, 3, 4, 21, 220, 224, 387, 388, 394], "quit": [1, 3, 11, 61, 103, 107, 123, 124, 130, 131, 370, 375, 376, 377, 380, 387, 388, 394], "annoi": [1, 3], "By": [1, 2, 3, 27, 33, 40, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 252, 273, 299, 348, 366, 371, 375, 387, 390, 391, 394], "filter": [1, 2, 3, 4, 54, 80, 87, 88, 283, 284, 286, 290, 291, 297, 301, 302, 304, 379], "out": [1, 2, 3, 4, 5, 9, 21, 37, 41, 43, 46, 54, 63, 67, 72, 80, 87, 88, 103, 107, 123, 124, 125, 126, 130, 131, 183, 195, 197, 220, 221, 224, 230, 231, 234, 235, 236, 254, 260, 261, 262, 268, 269, 270, 271, 272, 273, 299, 311, 312, 371, 372, 375, 376, 377, 378, 379, 380, 382, 387, 388, 389, 391, 393, 394], "still": [1, 2, 3, 9, 67, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 259, 298, 299, 375, 376, 378, 386, 389, 391, 394], "wish": [1, 3, 11, 14, 15, 17, 67, 138, 381, 391], "displai": [1, 3, 7, 103, 107, 123, 124, 130, 131, 352, 372, 375, 376, 388, 389], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 150, 152, 155, 156, 157, 159, 162, 163, 164, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 195, 197, 204, 205, 206, 207, 208, 210, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 242, 243, 249, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 313, 315, 316, 317, 318, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 342, 345, 346, 348, 349, 350, 352, 366, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "central": [2, 232, 233, 234, 375, 376, 379, 387, 388, 391], "part": [2, 3, 4, 8, 37, 47, 61, 64, 65, 67, 68, 69, 99, 103, 107, 112, 123, 124, 130, 131, 145, 165, 174, 177, 195, 204, 222, 226, 277, 343, 366, 375, 377, 378, 384, 387, 389, 394], "algorithm": [2, 3, 8, 9, 119, 139, 283, 301, 302, 304, 368, 371, 372, 375, 376, 377, 378, 380, 381, 382, 383, 387, 388, 390, 391, 393], "implement": [2, 3, 9, 12, 14, 15, 16, 37, 77, 89, 90, 103, 107, 119, 120, 123, 124, 130, 131, 143, 150, 152, 153, 157, 160, 163, 171, 172, 178, 181, 186, 187, 193, 195, 207, 220, 221, 222, 223, 224, 225, 226, 248, 249, 250, 283, 284, 288, 289, 290, 297, 299, 300, 301, 303, 304, 306, 333, 343, 357, 370, 372, 375, 376, 377, 378, 387, 388, 389, 393], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 37, 42, 45, 47, 50, 51, 61, 63, 67, 69, 86, 88, 93, 99, 100, 103, 104, 107, 111, 112, 113, 123, 124, 130, 131, 146, 163, 169, 172, 189, 192, 193, 195, 197, 206, 226, 232, 233, 234, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 335, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "give": [2, 3, 7, 50, 64, 103, 107, 119, 123, 124, 130, 131, 146, 369, 371, 375, 376, 387, 388, 389, 390, 393], "abil": [2, 299, 389, 391], "panel": [2, 377], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 63, 69, 72, 93, 143, 146, 156, 222, 226, 290, 297, 304, 308, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "includ": [2, 3, 4, 7, 9, 21, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 89, 91, 95, 103, 107, 119, 123, 124, 130, 131, 182, 187, 193, 195, 222, 226, 299, 304, 355, 370, 372, 375, 376, 377, 378, 387, 388, 389, 391, 394], "almost": [2, 378], "physic": [2, 6, 7, 72, 123, 124, 127, 372, 375, 387, 388, 389], "theori": 2, "crude": 2, "made": [2, 3, 23, 37, 45, 61, 74, 75, 76, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 195, 234, 267, 268, 287, 299, 313, 375, 376, 378, 387, 388, 390, 391], "liststorag": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 391], "veri": [2, 3, 112, 113, 376, 379, 382, 387, 389, 391, 393, 394], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 37, 40, 41, 43, 46, 61, 67, 80, 82, 85, 87, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 142, 143, 172, 195, 204, 227, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 308, 310, 313, 370, 372, 375, 377, 378, 379, 380, 381, 387, 388, 389, 391, 394], "complex": [2, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 375, 376, 379, 380], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 159, 162, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 195, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 283, 284, 286, 287, 289, 290, 291, 294, 295, 297, 299, 301, 302, 303, 304, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 393, 394], "contigu": [2, 3, 8, 64, 67, 68, 103, 107, 123, 124, 130, 131, 201, 377, 387, 388, 389, 391, 393, 394], "tensorstorag": [2, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 93, 96, 382, 391], "lazymemmapstorag": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 145, 146, 375, 376, 378, 382, 387, 390, 391], "citizen": 2, "pytre": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 96], "tupl": [2, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 82, 87, 91, 93, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 163, 165, 195, 210, 216, 217, 222, 225, 226, 227, 234, 237, 241, 242, 243, 261, 262, 270, 271, 276, 283, 284, 286, 290, 291, 293, 297, 299, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 346, 348, 350, 359, 391], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 41, 43, 46, 54, 80, 85, 87, 88, 103, 106, 107, 108, 117, 118, 123, 124, 130, 131, 132, 133, 183, 187, 195, 269, 273, 304, 306, 348, 364, 365, 366, 372, 376, 377, 379, 381, 387, 389, 394], "nest": [2, 3, 23, 27, 30, 32, 33, 37, 38, 41, 43, 45, 46, 48, 49, 57, 74, 75, 78, 82, 95, 103, 106, 107, 108, 123, 124, 130, 131, 146, 181, 184, 195, 205, 266, 315, 316, 317, 318, 319, 333, 372, 376, 377, 388, 389, 391, 393], "construct": [2, 3, 5, 23, 37, 42, 45, 50, 51, 61, 82, 103, 106, 107, 123, 124, 125, 130, 131, 152, 155, 195, 197, 222, 226, 245, 273, 352, 370, 376, 377, 378, 380, 387, 389, 391, 394], "ram": [2, 106, 108, 383, 391], "prealloc": [2, 3, 123, 130, 389], "ve": [2, 47, 375, 378, 384], "been": [2, 3, 5, 7, 8, 18, 20, 21, 47, 82, 86, 103, 107, 111, 117, 118, 123, 124, 130, 131, 163, 181, 182, 186, 220, 224, 234, 259, 264, 266, 268, 283, 299, 301, 303, 375, 376, 377, 378, 386, 387, 388, 389, 391, 394], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 68, 69, 93, 101, 102, 103, 107, 111, 123, 124, 125, 126, 130, 131, 146, 234, 342, 370, 371, 372, 375, 376, 377, 378, 379, 380, 382, 384, 387, 388, 389, 391, 393, 394], "start": [2, 3, 4, 5, 14, 21, 24, 54, 61, 69, 80, 87, 88, 104, 107, 116, 123, 130, 151, 204, 347, 374, 375, 376, 385, 388, 389, 391, 392, 394], "replay_buff": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 349, 362, 375, 376, 377, 382, 387, 388, 391], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 30, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 145, 146, 149, 156, 157, 162, 163, 165, 167, 169, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 186, 191, 193, 195, 196, 201, 204, 205, 206, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 232, 233, 234, 237, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 333, 335, 345, 348, 362, 370, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "rb": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 146, 174, 195, 376, 378, 382, 384, 388, 390, 391, 393], "10": [2, 3, 7, 22, 23, 25, 27, 29, 37, 42, 45, 47, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 145, 146, 182, 184, 185, 195, 206, 209, 210, 212, 214, 216, 220, 221, 222, 224, 225, 226, 229, 241, 252, 263, 264, 267, 268, 269, 276, 280, 284, 287, 289, 301, 302, 303, 307, 313, 315, 316, 317, 318, 321, 335, 343, 372, 375, 376, 377, 378, 379, 380, 384, 387, 388, 389, 390, 391, 393, 394], "add": [2, 3, 4, 6, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 82, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 146, 163, 187, 195, 222, 226, 235, 265, 283, 347, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 391, 393], "string": [2, 18, 19, 20, 37, 44, 54, 70, 103, 107, 117, 123, 124, 130, 131, 138, 169, 181, 191, 195, 222, 226, 261, 266, 269, 270, 282, 334, 351, 371, 375, 377, 378, 391], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 82, 87, 88, 93, 95, 122, 123, 130, 139, 146, 170, 179, 182, 183, 207, 208, 220, 221, 224, 254, 258, 259, 261, 266, 272, 273, 277, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 343, 371, 375, 377, 380, 382, 391, 394], "30": [2, 3, 45, 65, 142, 164, 244, 245, 333, 337, 375, 376, 377, 382, 388, 389, 391], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 95, 103, 104, 106, 107, 116, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 362, 364, 365, 366, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 391, 393, 394], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 159, 160, 164, 165, 167, 169, 170, 173, 180, 181, 184, 187, 188, 189, 191, 195, 197, 201, 206, 207, 208, 209, 210, 212, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 283, 284, 285, 291, 293, 294, 298, 299, 300, 301, 302, 306, 307, 315, 317, 318, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 343, 344, 345, 348, 349, 352, 354, 360, 364, 365, 366, 389, 391], "entri": [2, 3, 14, 15, 17, 23, 27, 30, 33, 37, 41, 43, 44, 46, 48, 54, 58, 63, 64, 65, 66, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 127, 130, 131, 132, 133, 142, 146, 148, 149, 151, 152, 155, 156, 159, 162, 165, 167, 169, 172, 174, 177, 179, 181, 182, 183, 191, 193, 195, 204, 205, 222, 230, 231, 260, 261, 266, 270, 271, 284, 304, 315, 316, 317, 318, 370, 375, 377, 378, 379, 380, 381, 383, 387, 388, 389, 390, 391, 394], "onto": [2, 8, 40, 41, 43, 46, 201, 254, 258, 259, 261, 262, 267, 268, 269, 270, 271, 272, 273, 378, 389], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 146, 147, 181, 182, 183, 184, 187, 195, 205, 207, 208, 227, 230, 231, 233, 266, 267, 268, 270, 271, 279, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 356, 366, 369, 372, 377, 378, 382, 383, 384, 389, 391, 394], "without": [2, 3, 7, 9, 14, 15, 16, 37, 41, 43, 46, 47, 61, 63, 67, 87, 88, 103, 107, 123, 124, 130, 131, 132, 133, 140, 142, 152, 155, 185, 195, 220, 221, 224, 225, 256, 257, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 314, 315, 316, 317, 318, 319, 362, 369, 370, 375, 376, 377, 379, 380, 381, 382, 387, 388, 389, 391, 394], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 42, 43, 46, 47, 50, 79, 80, 103, 107, 119, 123, 124, 125, 126, 130, 131, 140, 142, 143, 152, 154, 155, 171, 181, 182, 187, 190, 193, 195, 205, 206, 220, 222, 226, 229, 234, 258, 259, 263, 264, 267, 268, 269, 270, 271, 272, 273, 283, 284, 285, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 313, 315, 316, 317, 318, 319, 348, 352, 354, 357, 358, 361, 362, 372, 376, 377, 378, 381, 384, 387, 388, 389, 391, 393, 394], "length": [2, 20, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 61, 67, 70, 80, 87, 88, 91, 103, 107, 112, 113, 123, 124, 130, 131, 139, 170, 193, 206, 207, 208, 210, 212, 214, 220, 224, 227, 229, 232, 233, 254, 272, 277, 343, 349, 375, 377, 378, 382, 384, 389, 391, 394], "cursor": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "place": [2, 3, 24, 27, 28, 33, 37, 41, 43, 46, 74, 75, 82, 85, 95, 103, 104, 107, 123, 124, 130, 131, 132, 133, 142, 150, 156, 169, 183, 186, 187, 189, 191, 192, 193, 195, 205, 234, 260, 266, 272, 349, 354, 355, 371, 376, 377, 380, 383, 387, 388, 389, 391], "afterward": [2, 103, 107, 123, 124, 130, 131, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 387, 394], "tell": [2, 3, 4, 7, 125, 126, 375, 378, 382, 387, 388], "our": [2, 3, 7, 8, 11, 18, 45, 146, 335, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393], "far": [2, 47, 223, 249, 250, 384, 389, 394], "restrict": [2, 3, 376, 390, 391, 394], "empti": [2, 3, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 103, 107, 122, 123, 124, 130, 131, 152, 155, 169, 171, 184, 187, 189, 191, 195, 201, 339, 375, 389], "64": [2, 3, 41, 43, 46, 61, 67, 82, 146, 173, 210, 211, 219, 222, 226, 233, 234, 242, 313, 375, 376, 377, 378, 380, 384, 386, 389, 390, 391, 393, 394], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 87, 88, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 150, 152, 153, 154, 155, 156, 157, 163, 165, 167, 169, 171, 172, 174, 178, 181, 183, 185, 186, 187, 189, 191, 195, 197, 201, 204, 205, 206, 216, 217, 220, 221, 222, 224, 225, 226, 229, 235, 236, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 321, 370, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "unit8": 2, "img": 2, "randint": [2, 54, 82, 185, 391], "255": [2, 82, 185, 389, 391], "uint8": [2, 3, 41, 43, 46, 56, 61, 67, 101, 102, 117, 118, 156, 167, 185, 376, 383, 390, 391, 393, 394], "next": [2, 3, 4, 8, 14, 15, 16, 23, 27, 30, 32, 33, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 117, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 146, 152, 155, 156, 157, 162, 163, 167, 171, 172, 174, 177, 178, 181, 183, 192, 193, 195, 201, 204, 206, 221, 222, 225, 226, 229, 245, 266, 278, 280, 283, 284, 286, 287, 289, 290, 291, 292, 297, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 335, 346, 348, 350, 376, 378, 380, 383, 384, 386, 389, 390, 393, 394], "ask": [2, 8, 61, 67, 80, 87, 88, 335, 377, 378, 379, 380, 387, 388, 390, 394], "do": [2, 3, 4, 7, 69, 103, 107, 123, 124, 130, 131, 132, 133, 139, 170, 192, 193, 204, 222, 226, 233, 235, 256, 299, 315, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 393, 394], "automat": [2, 3, 5, 69, 74, 75, 82, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 142, 152, 155, 165, 183, 192, 207, 222, 226, 254, 266, 269, 333, 370, 375, 377, 379, 380, 387, 388, 389, 391, 393], "hand": [2, 3, 7, 21, 27, 387, 388, 389], "look": [2, 3, 5, 7, 8, 37, 80, 103, 107, 116, 123, 124, 125, 126, 130, 131, 169, 170, 189, 195, 269, 273, 274, 275, 371, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394], "assum": [2, 3, 6, 27, 40, 47, 50, 51, 63, 65, 67, 68, 69, 71, 72, 78, 87, 103, 107, 123, 124, 130, 131, 145, 148, 151, 159, 169, 170, 177, 183, 187, 189, 191, 201, 222, 226, 252, 276, 287, 292, 304, 313, 324, 325, 326, 327, 329, 330, 331, 332, 335, 375, 377, 378, 386, 389], "lead": [2, 3, 4, 8, 10, 12, 23, 27, 33, 37, 42, 45, 50, 51, 63, 86, 101, 102, 103, 106, 108, 109, 183, 223, 242, 249, 250, 375, 378, 387, 388, 389, 391, 393], "leav": [2, 25, 27, 29, 33, 35, 36, 40, 41, 43, 45, 46, 103, 197, 205, 375, 382, 391], "tree": [2, 41, 43, 46, 103, 107, 123, 124, 130, 131, 387, 391], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 91, 101, 102, 103, 104, 106, 107, 108, 109, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 207, 208, 215, 222, 226, 227, 232, 233, 248, 254, 260, 261, 269, 270, 272, 273, 276, 277, 284, 291, 298, 300, 302, 304, 349, 354, 370, 375, 377, 386, 388, 389, 391, 394], "don": [2, 3, 4, 6, 7, 11, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 146, 376, 377, 382, 391, 393, 394], "throw": [2, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 195, 394], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 27, 30, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 146, 150, 152, 155, 156, 157, 167, 171, 172, 174, 178, 181, 183, 186, 187, 195, 196, 204, 205, 206, 214, 216, 217, 222, 226, 229, 242, 243, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 335, 343, 349, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "max": [2, 23, 40, 43, 50, 54, 70, 79, 80, 93, 154, 184, 249, 250, 267, 268, 284, 285, 291, 300, 302, 304, 375, 377, 378, 384], "label": [2, 43, 44, 47, 54, 375, 387, 391], "100": [2, 14, 15, 16, 17, 37, 42, 45, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 156, 165, 174, 179, 181, 195, 232, 262, 266, 335, 344, 362, 376, 377, 378, 379, 381, 384, 386, 387, 388, 389, 390, 391, 393, 394], "rb_pytre": 2, "randn": [2, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 95, 145, 165, 201, 209, 210, 214, 216, 217, 220, 221, 224, 225, 230, 231, 232, 237, 240, 241, 243, 254, 255, 256, 257, 260, 261, 269, 270, 272, 275, 276, 277, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 351, 370, 391, 393, 394], "c": [2, 3, 6, 7, 27, 41, 43, 45, 46, 50, 51, 66, 165, 185, 224, 225, 376, 391], "zero": [2, 3, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 87, 88, 93, 95, 103, 107, 123, 124, 130, 131, 143, 145, 147, 152, 154, 155, 165, 171, 174, 195, 201, 204, 206, 211, 212, 213, 219, 220, 221, 222, 224, 225, 226, 230, 231, 233, 234, 242, 251, 263, 264, 267, 268, 271, 279, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 321, 378, 391, 393], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 107, 110, 123, 130, 138, 139, 143, 146, 149, 152, 155, 163, 172, 179, 193, 197, 201, 233, 237, 252, 315, 316, 317, 318, 343, 351, 382, 386, 391, 394], "len": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 95, 167, 207, 208, 227, 233, 375, 382, 384, 387, 389, 390, 391, 393], "ambigu": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 91, 103, 107, 123, 124, 130, 131, 143, 150, 169, 183, 186, 187, 189, 191, 195, 272, 371, 375, 379, 389], "deal": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 299, 371, 375, 377, 388, 391], "interpret": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 376], "put": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 117, 118, 131, 132, 133, 193, 342, 366, 370, 376, 377, 378, 379, 387, 389], "solv": [2, 4, 9, 10, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 369, 375, 376, 377, 382, 384, 387, 388, 389, 391], "clear": [2, 3, 11, 27, 33, 34, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 111, 123, 124, 130, 131, 195, 344, 379, 382], "cut": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "distinct": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 143, 381, 386], "view": [2, 3, 8, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 195, 217, 220, 224, 227, 379, 389, 391, 393, 394], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 67, 99, 100, 103, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 152, 155, 170, 227, 242, 266, 269, 273, 274, 275, 279, 299, 315, 316, 317, 318, 370, 371, 375, 376, 377, 379, 381, 386, 387, 388, 389, 390, 391, 394], "collate_fn": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 391, 393], "__init__": [2, 3, 7, 103, 119, 138, 140, 143, 152, 155, 171, 206, 217, 220, 224, 229, 277, 284, 286, 291, 297, 302, 304, 306, 307, 372, 389, 394], "major": 2, "worri": [2, 52], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 74, 75, 76, 80, 87, 89, 91, 95, 103, 104, 107, 111, 123, 124, 130, 131, 142, 205, 375, 377, 379, 387, 388, 389, 394], "though": [2, 4, 11, 103, 107, 123, 124, 130, 131, 227, 377, 387, 388], "too": [2, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 47, 53, 55, 56, 103, 107, 123, 124, 130, 131, 164, 183, 223, 249, 250, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 376, 380, 383, 389, 391, 394], "latter": [2, 18, 19, 20, 37, 63, 103, 107, 123, 124, 130, 131, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 301, 364, 365], "inv": [2, 3, 149, 154, 157, 167, 174, 179, 389], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 87, 88, 89, 90, 91, 93, 95, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 142, 143, 146, 150, 152, 153, 156, 157, 159, 163, 165, 169, 171, 172, 173, 174, 178, 181, 183, 186, 187, 189, 191, 195, 196, 206, 222, 226, 232, 233, 234, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 269, 270, 271, 272, 273, 274, 280, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 319, 333, 334, 363, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 387, 389, 391, 394], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 52, 53, 55, 56, 72, 103, 107, 123, 124, 130, 131, 154, 157, 178, 185, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 315, 391], "multithread": [2, 3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 120, 121, 382, 391], "thread": [2, 14, 15, 17, 41, 43, 46, 99, 100, 112, 113, 123, 130], "prefetch": [2, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 375, 376, 378, 391], "advis": [2, 11, 64, 383, 394], "benchmark": [2, 3, 9, 99, 100, 112, 113], "techniqu": [2, 8, 123, 130, 376, 382, 391], "real": [2, 5, 67, 273, 371, 378, 389], "life": [2, 156], "adopt": [2, 3, 5, 375, 394], "throughput": [2, 9, 113, 375], "constant": [2, 11, 28, 146, 165, 182, 372, 375, 377, 378, 394], "throughout": [2, 3, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 377, 387, 394], "further": [2, 3, 5, 24, 375, 377, 379], "refin": [2, 67, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313], "coupl": [2, 378, 380, 381, 389, 391], "get": [2, 3, 4, 6, 7, 8, 9, 27, 33, 41, 42, 43, 45, 46, 61, 63, 67, 74, 75, 80, 87, 88, 89, 91, 93, 95, 103, 104, 107, 123, 124, 130, 131, 140, 145, 147, 152, 154, 155, 163, 165, 170, 182, 183, 185, 187, 193, 254, 263, 264, 269, 270, 273, 280, 315, 316, 317, 318, 319, 335, 339, 370, 374, 375, 376, 377, 378, 385, 387, 388, 389, 391, 392, 393, 394], "first_elt": 2, "128": [2, 61, 63, 67, 88, 99, 100, 112, 113, 211, 214, 376, 378, 384, 387, 389, 390, 391], "wa": [2, 3, 5, 7, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 103, 107, 123, 124, 130, 131, 187, 197, 205, 224, 283, 285, 296, 298, 301, 303, 305, 321, 371, 376, 377, 379, 380, 386, 387, 391, 393], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 142, 143, 146, 147, 152, 153, 154, 155, 162, 165, 171, 172, 174, 177, 181, 183, 184, 185, 193, 195, 201, 204, 205, 207, 208, 210, 211, 212, 213, 214, 217, 219, 222, 226, 227, 230, 231, 232, 233, 237, 240, 243, 254, 255, 256, 257, 260, 261, 263, 264, 266, 267, 268, 269, 270, 272, 275, 277, 280, 299, 333, 362, 370, 372, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 147], "larger": [2, 4, 222, 226, 290, 297, 393], "volum": 2, "due": [2, 3, 5, 23, 381, 390, 391, 394], "serialis": [2, 41, 43, 46], "memorymappedtensor": [2, 30, 41, 43, 48, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 337, 382, 390], "well": [2, 3, 8, 11, 21, 23, 37, 42, 44, 45, 50, 51, 80, 85, 89, 96, 103, 107, 123, 124, 130, 131, 187, 195, 210, 224, 244, 245, 299, 306, 319, 375, 376, 378, 379, 380, 381, 383, 390, 391, 393, 394], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 151, 152, 153, 155, 177, 180, 182, 188, 195, 206, 224, 272, 273, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 342, 370, 375, 377, 378, 382, 387], "file": [2, 6, 7, 8, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 72, 132, 334, 335, 337, 372, 374, 376, 387, 391, 392, 394], "locat": [2, 7, 41, 43, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 151, 156, 165, 176, 223, 237, 249, 250, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 375, 376, 377, 383, 387, 388, 391], "improv": [2, 4, 11, 160, 283, 371, 387, 388, 391], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 123, 130, 377, 387, 391], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 111, 123, 124, 130, 131, 140, 146, 174, 177, 184, 193, 195, 205, 263, 264, 269, 273, 298, 299, 301, 375, 376, 378, 379, 381, 383, 389, 391, 394], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 53, 55, 56, 80, 154, 224, 225, 290, 378, 382, 391], "sharabl": [2, 123, 130], "collabor": [2, 67], "rather": [2, 4, 91, 172, 375, 376, 377, 379, 381, 387, 388, 391], "incur": [2, 99, 100, 112, 113], "transmiss": 2, "overhead": [2, 99, 100, 112, 113, 123, 130], "subclass": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 82, 103, 107, 123, 124, 130, 131, 141, 142, 186, 192, 197, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 272, 273, 274, 276, 279, 299, 301, 376, 378, 382, 389, 391], "instanti": [2, 3, 14, 15, 21, 41, 42, 43, 45, 46, 50, 51, 79, 80, 111, 142, 186, 233, 333, 375, 376, 380, 381, 383, 387, 388, 389, 391, 394], "content": [2, 8, 16, 27, 33, 41, 42, 43, 45, 46, 50, 51, 86, 103, 106, 107, 108, 120, 123, 124, 130, 131, 171, 207, 208, 227, 232, 233, 269, 299, 377, 389, 393], "map": [2, 3, 8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 103, 107, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 195, 201, 217, 237, 254, 255, 256, 257, 261, 269, 270, 272, 273, 275, 276, 277, 278, 304, 313, 348, 368, 370, 371, 375, 376, 377, 378, 380, 381, 390, 393], "writer": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 82, 83, 87, 93, 94, 98, 377, 391], "tensordictroundrobinwrit": [2, 82], "goe": [2, 4, 125, 126, 375, 377, 387, 388, 394], "prioritizedsampl": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 287, 292, 313, 375, 391], "access": [2, 3, 7, 8, 11, 37, 42, 64, 66, 103, 107, 123, 124, 130, 131, 169, 189, 195, 366, 369, 375, 379, 387, 388, 389, 391], "show": [2, 11, 37, 103, 107, 123, 124, 130, 131, 195, 233, 335, 370, 375, 377, 378, 387, 388, 389, 391, 393], "tensordictreplaybuff": [2, 42, 45, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 145, 146, 349, 362, 368, 375, 376, 378, 391], "mp": [2, 18, 19, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 193], "def": [2, 3, 12, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 140, 142, 143, 152, 155, 171, 187, 195, 206, 217, 220, 221, 224, 225, 229, 234, 266, 269, 277, 284, 286, 291, 297, 299, 302, 304, 306, 307, 333, 372, 375, 376, 386, 387, 388, 389, 391, 393, 394], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 123, 124, 130, 131, 140, 143, 145, 147, 152, 153, 154, 155, 162, 163, 165, 174, 177, 183, 185, 187, 193, 196, 204, 206, 216, 217, 222, 226, 228, 229, 242, 243, 251, 254, 255, 256, 257, 260, 261, 263, 264, 267, 268, 269, 270, 272, 275, 277, 313, 316, 317, 318, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 343, 351, 370, 371, 375, 378, 388, 389, 393, 394], "__name__": [2, 3, 14, 15, 22, 104, 333, 376, 393], "__main__": [2, 3, 14, 15, 22, 104, 333, 393], "21": [2, 67, 68, 88, 123, 125, 126, 130, 376, 377, 378, 386, 389], "proc": 2, "target": [2, 4, 8, 21, 24, 37, 103, 104, 107, 123, 124, 130, 131, 182, 186, 195, 272, 273, 283, 284, 285, 286, 287, 289, 291, 292, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 319, 355, 361, 362, 371, 372, 378, 384, 387, 389], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 80, 82, 87, 88, 89, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 150, 169, 171, 180, 183, 186, 187, 188, 190, 191, 195, 206, 207, 208, 216, 222, 226, 227, 228, 229, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 342, 345, 349, 352, 366, 376, 394], "join": [2, 104, 368, 376, 377, 387], "now": [2, 3, 7, 42, 123, 146, 233, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 391, 394], "20": [2, 54, 68, 87, 88, 93, 103, 107, 111, 123, 124, 130, 131, 182, 195, 219, 220, 221, 224, 225, 260, 343, 374, 375, 376, 377, 378, 382, 384, 388, 389, 391, 392, 393, 394], "_data": [2, 389], "It": [2, 3, 4, 7, 23, 37, 44, 47, 50, 52, 54, 63, 69, 82, 85, 93, 98, 103, 107, 109, 119, 120, 123, 124, 125, 126, 130, 131, 132, 133, 143, 145, 156, 163, 165, 170, 182, 187, 192, 195, 197, 210, 212, 218, 232, 233, 242, 244, 245, 251, 252, 258, 262, 263, 266, 267, 268, 271, 273, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 307, 313, 314, 315, 333, 342, 348, 369, 370, 371, 375, 376, 378, 379, 387, 388, 389, 390, 391, 393, 394], "difficult": [2, 4, 123, 383], "pai": [2, 8, 375, 378], "word": [2, 3, 11, 47, 61, 63, 65, 67, 68, 69, 299, 375, 382, 389, 394], "1m": [2, 61, 67, 355, 375, 377, 378, 390], "doe": [2, 3, 18, 41, 42, 43, 46, 50, 54, 61, 63, 67, 71, 72, 78, 79, 80, 87, 89, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 193, 214, 220, 221, 222, 224, 225, 226, 235, 252, 260, 274, 275, 283, 285, 292, 298, 299, 301, 314, 352, 370, 372, 375, 376, 377, 378, 379, 382, 387, 389, 391, 394], "howev": [2, 3, 5, 7, 37, 103, 107, 123, 124, 130, 131, 146, 177, 182, 187, 195, 283, 285, 298, 301, 303, 304, 370, 375, 376, 378, 381, 389, 391, 394], "capac": [2, 42, 45, 50, 51, 74, 75, 79, 87, 95, 377, 382], "There": [2, 10, 82, 222, 226, 370, 372, 377, 378, 380, 382, 387, 388, 389, 391, 394], "circumv": 2, "account": [2, 74, 75, 95, 106, 108, 131, 142, 146, 230, 231, 370, 376, 378, 391, 394], "save": [2, 3, 8, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 89, 90, 91, 95, 96, 103, 107, 123, 124, 130, 131, 192, 195, 334, 335, 337, 342, 352, 372, 382, 383, 384, 387, 388], "convent": [2, 3, 61, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 132, 133, 371, 375, 378, 387, 388, 389], "overridden": [2, 3, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 315, 317, 318, 378, 387], "dim_extend": [2, 42, 45, 50, 51], "obtain": [2, 7, 47, 61, 103, 107, 123, 124, 130, 131, 145, 169, 182, 191, 206, 242, 349, 375, 377, 379, 380, 381, 387, 388], "counterpart": 2, "desir": [2, 3, 11, 37, 103, 107, 123, 124, 130, 131, 141, 143, 150, 165, 167, 169, 170, 183, 186, 187, 189, 191, 195, 202, 203, 207, 208, 227, 233, 254, 261, 262, 269, 270, 271, 272, 273, 370, 375, 387, 388, 389, 391], "diversifi": 2, "offer": [2, 3, 7, 99, 100, 103, 107, 112, 113, 117, 118, 123, 124, 130, 131, 333, 370, 375, 376, 379, 381, 382, 387, 389, 391, 394], "accomplish": [2, 197, 379], "anoth": [2, 3, 8, 67, 80, 87, 103, 106, 107, 108, 111, 123, 124, 130, 131, 143, 152, 153, 155, 183, 186, 227, 269, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 370, 371, 375, 377, 378, 380, 381, 386, 387, 388, 389, 394], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 64, 146, 197, 284, 289, 290, 297, 306, 342, 372, 379, 390, 391, 393], "docstr": [2, 37, 103, 107, 123, 124, 130, 131, 195, 379, 380], "extens": [2, 42, 45, 50, 51, 88, 372, 391], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 185, 187, 195, 217, 220, 224, 234, 262, 283, 292, 299, 301, 369, 372, 376, 382, 386, 391], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 103, 107, 123, 124, 130, 131, 152, 155, 193, 195, 205, 220, 222, 224, 226, 267, 268, 269, 273, 292, 376, 380, 386, 387, 388, 394], "happi": 2, "concaten": [2, 8, 14, 15, 21, 35, 36, 67, 146, 147, 165, 186, 224, 227, 275, 375, 376, 380, 387, 388, 389, 391, 394], "schedul": [2, 4, 7, 47, 348, 377, 389], "transformedenv": [2, 3, 11, 37, 103, 104, 107, 123, 124, 130, 131, 139, 140, 143, 146, 149, 150, 152, 155, 156, 157, 159, 162, 163, 164, 165, 167, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 186, 193, 195, 222, 226, 266, 335, 375, 376, 377, 378, 379, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "stepcount": [2, 37, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 186, 195, 375, 376, 377, 378, 379, 384, 387, 388, 393], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 93, 103, 104, 107, 109, 123, 124, 130, 131, 139, 142, 143, 146, 149, 150, 156, 162, 163, 165, 167, 172, 173, 174, 177, 179, 182, 183, 184, 186, 187, 193, 195, 222, 226, 266, 333, 335, 362, 368, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 391, 393, 394], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 146, 174, 368, 382, 391], "cartpol": [2, 3, 11, 30, 37, 48, 101, 102, 103, 107, 123, 124, 130, 131, 142, 143, 146, 177, 182, 193, 195, 266, 333, 376, 378, 380, 382, 383, 384, 391, 394], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 63, 65, 93, 103, 104, 106, 107, 108, 112, 113, 120, 123, 124, 130, 131, 142, 143, 146, 149, 157, 162, 163, 165, 172, 174, 177, 179, 181, 182, 183, 184, 186, 193, 195, 222, 226, 266, 310, 324, 325, 326, 327, 329, 330, 331, 332, 333, 370, 376, 378, 379, 380, 381, 382, 383, 384, 389, 391, 393, 394], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 99, 100, 103, 107, 112, 113, 119, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 152, 155, 163, 171, 174, 196, 206, 217, 229, 243, 245, 254, 261, 269, 270, 284, 287, 289, 302, 304, 306, 307, 362, 370, 375, 376, 377, 378, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 393, 394], "8": [2, 3, 6, 7, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 87, 88, 99, 100, 101, 102, 103, 107, 123, 124, 130, 131, 139, 142, 182, 207, 208, 210, 211, 219, 227, 255, 256, 257, 269, 272, 275, 297, 374, 375, 376, 382, 387, 388, 389, 390, 391, 392, 393, 394], "traj_kei": [2, 80, 87, 88, 391], "truncated_kei": [2, 80, 87, 88, 174, 181], "strict_length": [2, 61, 67, 80, 87, 88, 335], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 37, 42, 45, 48, 51, 52, 74, 75, 79, 80, 87, 88, 95, 103, 107, 123, 124, 130, 131, 151, 169, 174, 177, 187, 191, 195, 221, 225, 237, 243, 262, 266, 269, 271, 272, 273, 283, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 343, 355, 375, 376, 377, 378, 380, 381, 382, 383, 384, 387, 388, 389, 391, 393, 394], "enumer": [2, 14, 15, 16, 21, 30, 37, 45, 48, 51, 88, 103, 107, 123, 124, 130, 131, 195, 308, 371, 375, 376, 377, 378, 384, 387, 391, 393], "break": [2, 5, 14, 15, 16, 21, 37, 45, 51, 61, 64, 65, 67, 68, 69, 70, 80, 87, 88, 93, 103, 107, 123, 124, 130, 131, 143, 146, 174, 193, 195, 222, 226, 335, 376, 382, 384, 391, 393], "step_count": [2, 14, 15, 16, 37, 103, 107, 112, 113, 123, 124, 130, 131, 181, 195, 377, 378, 379, 384, 393], "32": [2, 22, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 128, 129, 132, 133, 207, 208, 209, 210, 211, 213, 214, 219, 227, 232, 233, 238, 239, 241, 242, 251, 313, 333, 375, 376, 378, 380, 381, 389, 390, 391, 393, 394], "33": [2, 27, 37, 82, 103, 107, 123, 124, 130, 131, 195, 207, 208, 227, 376, 388, 389], "34": [2, 207, 208, 227, 374, 376, 389, 392, 394], "35": [2, 207, 208, 227, 376, 389, 390], "36": [2, 376, 389], "37": [2, 145, 374, 375, 376, 377, 389, 390, 392], "38": [2, 7, 375, 376, 389], "39": [2, 65, 112, 113, 374, 376, 389, 390, 392], "40": [2, 112, 113, 375, 376, 377, 378, 388, 389, 390], "41": [2, 375, 376, 378, 389, 391], "11": [2, 10, 23, 29, 40, 54, 74, 75, 79, 88, 95, 104, 139, 185, 195, 206, 229, 375, 376, 377, 378, 389, 391], "12": [2, 10, 68, 74, 75, 88, 95, 112, 113, 123, 128, 129, 130, 195, 376, 377, 387, 389, 391], "13": [2, 5, 12, 87, 88, 127, 192, 195, 374, 375, 376, 377, 383, 388, 389, 390, 391, 392], "14": [2, 6, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 103, 107, 123, 124, 130, 131, 165, 195, 375, 376, 377, 387, 389, 390, 391], "15": [2, 23, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 103, 107, 123, 124, 130, 131, 195, 260, 267, 268, 293, 375, 376, 377, 378, 389, 391], "16": [2, 3, 37, 68, 80, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 146, 195, 375, 376, 377, 378, 387, 389, 391], "17": [2, 11, 68, 88, 107, 123, 139, 195, 375, 376, 377, 389, 390], "could": [2, 3, 4, 6, 23, 376, 377, 383, 387, 388, 390, 394], "sai": [2, 37, 103, 107, 123, 124, 130, 131, 195, 232, 387, 390, 394], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 27, 29, 33, 36, 40, 76, 80, 87, 88, 103, 106, 107, 108, 111, 123, 124, 130, 131, 152, 155, 170, 177, 270, 376, 377, 378, 387, 388, 389], "handl": [2, 3, 21, 37, 103, 107, 123, 124, 130, 131, 192, 193, 195, 226, 227, 299, 352, 364, 365, 375, 376, 377, 379, 381, 388, 391], "suggest": [2, 313, 375, 388], "serialenv": [2, 3, 103, 107, 123, 124, 131, 183, 195, 266, 368, 393, 394], "squeez": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 142, 143, 146, 180, 182, 207, 208, 246, 247, 375, 389, 391], "6": [2, 3, 7, 14, 15, 16, 17, 23, 37, 45, 61, 68, 69, 80, 88, 101, 102, 107, 123, 128, 129, 139, 142, 165, 167, 182, 207, 208, 210, 211, 212, 215, 219, 221, 227, 232, 233, 234, 238, 248, 266, 269, 277, 374, 376, 382, 388, 389, 391, 392, 393], "5": [2, 3, 14, 15, 23, 25, 27, 33, 35, 36, 37, 42, 45, 50, 51, 61, 82, 87, 88, 93, 103, 104, 107, 112, 113, 117, 118, 120, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 174, 181, 182, 195, 206, 207, 208, 210, 211, 216, 217, 218, 219, 220, 223, 224, 227, 229, 232, 233, 238, 243, 249, 250, 260, 261, 266, 270, 276, 298, 301, 303, 306, 307, 333, 370, 374, 375, 376, 380, 382, 384, 387, 388, 389, 391, 392, 393, 394], "7": [2, 3, 6, 10, 29, 37, 40, 42, 45, 50, 80, 88, 103, 107, 117, 118, 123, 124, 130, 131, 139, 142, 182, 206, 207, 208, 211, 227, 229, 232, 321, 374, 375, 376, 378, 382, 388, 389, 391, 392, 393], "9": [2, 3, 7, 23, 37, 42, 45, 50, 68, 69, 80, 88, 93, 101, 102, 116, 125, 126, 131, 139, 142, 182, 193, 195, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 308, 313, 371, 374, 375, 376, 377, 382, 387, 388, 389, 391, 392], "18": [2, 68, 88, 128, 129, 132, 133, 195, 233, 374, 375, 376, 388, 389, 392], "19": [2, 68, 87, 88, 93, 195, 375, 376, 377, 378, 389, 390], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 64, 123, 130, 186, 188, 233, 371, 372, 375, 376, 388, 391, 393], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 37, 41, 43, 46, 54, 61, 64, 66, 69, 70, 99, 101, 103, 107, 112, 116, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 154, 157, 172, 177, 178, 181, 187, 189, 192, 195, 205, 222, 226, 261, 270, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 315, 317, 318, 319, 333, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 372, 375, 376, 377, 378, 381, 383, 387, 388, 389, 394], "randomcroptensordict": [2, 375], "unlik": [2, 86, 107, 117, 118, 132, 133, 266, 292, 301, 335, 376, 380, 382, 393], "stop": [2, 3, 16, 21, 47, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 377, 382, 387, 388, 393, 394], "signal": [2, 3, 14, 15, 16, 17, 23, 61, 63, 65, 67, 68, 69, 80, 87, 88, 93, 107, 117, 118, 132, 133, 146, 156, 181, 184, 205, 371, 375, 377, 387, 388, 391, 394], "disk": [2, 3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 352, 372, 375, 376, 378, 382, 383, 391], "dump": [2, 3, 11, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 91, 95, 333, 334, 335, 383, 384, 387], "load": [2, 6, 7, 14, 15, 16, 17, 30, 37, 41, 42, 43, 45, 46, 47, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 90, 91, 95, 96, 102, 103, 107, 123, 124, 130, 131, 138, 193, 195, 366, 372, 375, 377, 391], "json": 2, "metadata": [2, 61, 63, 103, 107, 123, 124, 130, 131, 306, 377, 379, 381, 382, 387, 388, 394], "anticip": [2, 152, 155], "compli": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 67], "back": [2, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 53, 55, 56, 63, 192, 197, 234, 254, 261, 262, 269, 270, 271, 272, 273, 377, 387, 388, 389, 391], "exact": [2, 3, 23, 123, 224], "statu": [2, 3, 103], "prioriti": [2, 4, 42, 50, 51, 74, 75, 76, 79, 80, 89, 91, 95, 286, 287, 289, 290, 291, 292, 297, 302, 304, 306, 307, 313, 372, 375, 376, 391], "heap": 2, "under": [2, 3, 4, 21, 37, 47, 61, 63, 64, 65, 67, 68, 69, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 195, 254, 261, 262, 269, 270, 271, 272, 273, 299, 315, 316, 317, 318, 319, 335, 371, 375, 376, 380, 387, 389, 394], "hood": [2, 21, 61, 103, 107, 123, 124, 130, 131, 389], "naiv": [2, 189, 379], "just": [2, 3, 4, 12, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 142, 149, 205, 233, 343, 370, 372, 375, 376, 377, 378, 379, 380, 382, 387, 388, 389, 391, 393, 394], "public": [2, 66, 90, 169, 191], "serializ": 2, "consum": [2, 86, 88, 266, 376, 377, 382, 388, 391], "much": [2, 8, 11, 14, 15, 17, 42, 50, 67, 79, 80, 123, 130, 298, 301, 377, 379, 383, 387, 388, 389, 391, 394], "duplic": [2, 37, 86, 103, 107, 123, 124, 130, 131, 195, 284, 287, 292, 297, 299, 302, 304, 306, 307, 313], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 30, 37, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 204, 209, 210, 211, 212, 213, 214, 217, 222, 226, 232, 238, 239, 241, 243, 244, 254, 255, 256, 257, 260, 261, 263, 264, 266, 267, 268, 269, 270, 277, 278, 283, 284, 285, 286, 287, 289, 290, 291, 294, 297, 298, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 333, 335, 362, 370, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 393, 394], "plu": [2, 14, 15, 17, 47, 123, 130, 389], "enabl": [2, 7, 8, 63, 74, 75, 86, 95, 143, 222, 226, 266, 267, 268, 333, 335, 348, 377, 379, 387, 388, 389, 391], "three": [2, 25, 29, 35, 36, 40, 70, 370, 372, 377, 379, 380, 387, 388, 389, 391, 394], "flatstoragecheckpoint": 2, "discard": [2, 3, 54, 63, 65, 107, 189, 204, 334, 391, 394], "compress": 2, "At": [2, 228, 263, 376, 377, 378, 382, 386, 389, 390], "correct": [2, 4, 41, 43, 46, 103, 107, 123, 124, 130, 131, 163, 355, 377, 378], "addit": [2, 3, 4, 37, 63, 103, 107, 123, 124, 130, 131, 132, 150, 169, 183, 186, 187, 189, 191, 195, 220, 258, 259, 260, 266, 272, 282, 299, 315, 333, 371, 375, 376, 379, 387, 388, 391], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 37, 103, 107, 123, 124, 130, 131, 169, 189, 191, 195, 375, 389, 390, 394], "appar": [2, 3, 345], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 71, 72, 78, 103, 106, 107, 108, 123, 124, 130, 131, 139, 149, 154, 201, 214, 217, 232, 239, 243, 254, 258, 259, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 287, 289, 290, 291, 306, 307, 313, 370, 376, 377, 378, 379, 380, 381, 387, 388, 389, 393, 394], "assumpt": [2, 3, 389, 391], "accur": [2, 7, 63, 69, 376, 389, 391], "truncat": [2, 3, 14, 15, 16, 17, 30, 32, 37, 38, 44, 48, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 87, 88, 101, 102, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 156, 157, 164, 171, 174, 181, 187, 195, 205, 222, 226, 250, 266, 321, 375, 377, 378, 379, 380, 382, 383, 386, 387, 390, 391, 393, 394], "marl": [2, 116, 134, 146, 184, 232, 233, 234, 379, 387, 388], "extra": [2, 10, 37, 103, 107, 123, 124, 130, 131, 146, 193, 195, 204, 342, 370, 377, 378, 391], "fail": [2, 7, 22, 27, 33, 123, 140, 197], "concret": [2, 375, 377], "set_se": [2, 3, 14, 15, 16, 17, 21, 30, 37, 48, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 142, 165, 172, 177, 182, 184, 187, 195, 382, 384, 389, 393, 394], "manual_se": [2, 3, 30, 42, 45, 48, 50, 51, 64, 68, 69, 87, 88, 99, 100, 103, 107, 123, 124, 130, 131, 140, 142, 154, 165, 174, 177, 182, 184, 195, 230, 231, 240, 254, 262, 263, 264, 267, 268, 276, 283, 284, 286, 290, 297, 304, 382, 384, 387, 388, 389, 393, 394], "200": [2, 14, 15, 16, 21, 30, 37, 48, 61, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 174, 195, 210, 211, 218, 244, 245, 333, 335, 375, 378, 382, 384, 389, 391], "22": [2, 67, 87, 88, 192, 376, 389, 390], "rb_test": 2, "_storag": [2, 390, 391], "max_siz": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 89, 93, 95, 377, 382], "102": [2, 389], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 41, 43, 46, 120, 214, 230, 231, 232, 282, 333, 375, 377, 387, 388], "state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 193, 195, 304, 366, 372, 375, 376, 394], "load_state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 193, 195, 304, 372, 375], "drawback": 2, "struggl": 2, "big": [2, 377, 382, 391, 394], "sequenti": [2, 9, 37, 103, 107, 123, 124, 130, 131, 145, 163, 195, 255, 256, 257, 269, 274, 275, 280, 283, 284, 291, 297, 301, 302, 303, 304, 306, 370, 377, 378, 380, 388, 389, 390, 393, 394], "known": [2, 3, 5, 7, 8, 107, 322, 323, 375, 376, 379], "seamless": [2, 227], "integr": [2, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 213, 222, 226, 229, 272, 370, 379, 380, 382, 387, 388, 389, 390], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 375, 376, 381], "essenti": [2, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 376, 379, 387, 389, 391], "understand": [2, 3, 8, 375, 376, 379, 380, 387, 388], "purpos": [2, 3, 7, 11, 103, 107, 123, 124, 130, 131, 146, 220, 283, 285, 298, 301, 303, 362, 375, 377, 378, 381, 383, 387, 388, 390, 394], "guid": [2, 11, 125, 126, 128, 129, 182, 369, 375, 388], "explan": [2, 37, 103, 107, 123, 124, 130, 131, 195], "effect": [2, 3, 27, 37, 42, 45, 50, 51, 61, 67, 80, 82, 85, 87, 88, 103, 107, 123, 124, 130, 131, 142, 146, 187, 195, 352, 375, 380, 387, 391, 394], "realm": [2, 380], "As": [2, 3, 4, 37, 61, 103, 107, 116, 123, 124, 125, 126, 130, 131, 174, 273, 315, 370, 375, 376, 377, 378, 379, 381, 382, 387, 388, 389, 390, 391, 393, 394], "practition": 2, "often": [2, 3, 8, 234, 296, 299, 352, 375, 376, 379, 381, 389, 391, 394], "encount": [2, 4, 67, 266, 369, 376, 380, 389], "situat": [2, 117, 118], "sometim": [2, 3, 378, 394], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 64, 65, 68, 69, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 118, 121, 122, 127, 132, 133, 220, 221, 222, 224, 225, 226, 229, 255, 256, 257, 299, 302, 372, 376], "immedi": [2, 27, 33, 37, 103, 107, 123, 124, 130, 131, 195, 314, 387, 388], "199": [2, 375, 389], "info": [2, 3, 14, 15, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 85, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 189, 192, 194, 342, 379, 384, 387, 388, 391], "glanc": [2, 379], "seem": [2, 375, 378, 379], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 47, 103, 107, 116, 123, 124, 125, 126, 130, 131, 146, 170, 220, 222, 224, 226, 251, 255, 256, 257, 278, 370, 376, 378, 379, 387], "less": [2, 120, 252, 364, 365, 371, 377, 378, 391, 393], "omit": [2, 347, 377, 381, 389, 391], "proper": [2, 3, 4, 6, 7, 315, 316, 317, 318, 376, 377, 387, 388, 391, 394], "imposs": [2, 3, 93, 197, 283, 285, 298, 301, 303], "determin": [2, 42, 50, 63, 79, 80, 103, 107, 123, 124, 130, 131, 132, 133, 169, 191, 232, 267, 268, 376, 380, 387, 388], "complic": [2, 389, 391, 394], "matter": [2, 11, 28, 382], "inconsist": [2, 394], "miss": [2, 3, 4, 6, 7, 12, 27, 37, 103, 107, 123, 124, 130, 131, 187, 195, 204, 274, 275, 304, 369, 375, 378], "behavior": [2, 4, 37, 103, 107, 123, 124, 130, 131, 187, 195, 290, 297, 306, 378, 388, 389], "primari": [2, 382], "elimin": [2, 3, 379], "upon": [2, 3, 8, 387, 389], "canon": 2, "definit": [2, 40, 89, 232], "markov": [2, 3, 379, 394], "decis": [2, 3, 209, 241, 260, 288, 300, 378, 379, 380, 387, 388, 391, 394], "mdp": [2, 379, 389], "context": [2, 3, 5, 8, 37, 103, 104, 107, 122, 123, 124, 130, 131, 183, 188, 195, 233, 235, 260, 311, 312, 315, 316, 317, 318, 320, 328, 335, 348, 370, 371, 375, 376, 377, 387, 388, 389, 390, 391], "condit": [2, 54, 182, 193, 261, 262, 266, 270, 271, 282, 375, 387, 389, 391], "complet": [2, 7, 9, 86, 103, 106, 107, 108, 123, 124, 130, 131, 146, 181, 369, 371, 375, 377, 379, 386], "termin": [2, 3, 7, 14, 15, 16, 17, 30, 32, 37, 38, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 101, 102, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 142, 143, 156, 171, 195, 205, 206, 222, 226, 229, 266, 274, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 375, 376, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "reward": [2, 3, 14, 15, 16, 28, 30, 32, 37, 38, 41, 46, 47, 48, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 149, 150, 152, 153, 155, 156, 157, 163, 167, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 191, 193, 195, 201, 204, 206, 222, 229, 260, 266, 278, 283, 284, 286, 287, 289, 290, 291, 294, 297, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 345, 346, 348, 350, 366, 371, 372, 375, 376, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "imit": [2, 3], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 52, 53, 55, 56, 67, 103, 104, 107, 110, 113, 123, 124, 130, 131, 195, 207, 208, 227, 233, 370, 371, 372, 375, 376, 377, 378, 379, 387, 388, 389, 391], "stateless": [2, 3, 103, 107, 123, 124, 130, 131, 143, 186, 299, 333, 375, 379, 389, 394], "simul": [2, 3, 5, 7, 8, 99, 100, 109, 112, 113, 127, 132, 133, 137, 206, 229, 370, 375, 377, 379, 383, 387, 388], "furthermor": [2, 387, 388], "certain": [2, 4, 18, 19, 20, 21, 37, 54, 103, 107, 123, 124, 130, 131, 138, 160, 181, 187, 195, 221, 225, 263, 298, 370, 375, 376, 377, 384, 387, 388, 394], "composit": [2, 3, 27, 33, 85, 91, 98, 103, 107, 123, 124, 130, 131, 269, 377, 380, 389], "accommod": [2, 3, 379, 380], "uniform": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 53, 55, 56, 79, 80, 387], "unambigu": 2, "distinguish": [2, 117, 118, 132, 133], "happen": [2, 3, 103, 107, 123, 124, 130, 131, 259, 376, 381, 382, 383, 390, 394], "limit": [2, 47, 103, 107, 119, 123, 124, 130, 131, 146, 163, 283, 285, 298, 299, 301, 303, 371, 375, 376, 378, 387, 388, 389], "everyth": [2, 376, 377, 378, 383, 384], "belong": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 67, 192, 193, 370, 375, 382, 388], "rule": [2, 123, 152, 155, 273, 370, 377], "field": [2, 3, 14, 15, 16, 17, 23, 27, 30, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 152, 155, 156, 157, 167, 171, 172, 174, 178, 181, 183, 187, 195, 204, 206, 216, 217, 222, 226, 229, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 275, 277, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 356, 369, 370, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "taken": [2, 3, 25, 29, 35, 36, 40, 103, 107, 123, 124, 130, 131, 139, 173, 230, 231, 264, 371, 375, 377, 378, 380, 387, 388, 389], "is_shar": [2, 3, 14, 15, 16, 23, 27, 30, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 152, 155, 156, 157, 167, 171, 172, 174, 178, 181, 183, 193, 204, 206, 216, 217, 222, 226, 229, 242, 243, 251, 254, 255, 256, 257, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 275, 277, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 370, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "brought": [2, 377, 378, 380], "step_mdp": [2, 3, 103, 107, 123, 124, 130, 131, 222, 226, 368, 378, 379, 389, 393, 394], "count": [2, 3, 37, 103, 104, 181, 267, 268, 348, 352, 355, 375, 376, 377, 378, 391, 394], "trigger": [2, 7], "partial": [2, 3, 103, 107, 123, 124, 130, 131, 145, 146, 182, 183, 184, 269, 352, 378], "turn": [2, 18, 19, 20, 21, 41, 43, 46, 131, 161, 188, 192, 261, 333, 348, 371, 375, 376, 378, 380, 389, 390], "retain": 2, "regard": [2, 63, 69, 217, 262, 283, 292, 301, 375, 377, 389], "copi": [2, 3, 12, 18, 19, 20, 21, 37, 41, 43, 46, 47, 54, 67, 103, 107, 123, 124, 130, 131, 142, 172, 182, 187, 193, 195, 204, 222, 226, 234, 260, 299, 304, 333, 371, 375, 376, 378, 379, 387, 391], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 335, 371, 383, 391, 394], "eas": [2, 3, 387, 388], "flat": [2, 93], "manner": [2, 107, 169, 189, 370, 375, 376, 377, 382, 386, 389, 391], "ted2flat": [2, 30, 368], "flat2t": [2, 368], "unflatten": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 143, 266], "deseri": [2, 3, 30], "posit": [2, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 107, 123, 124, 130, 131, 159, 160, 180, 181, 184, 187, 188, 195, 237, 304, 371, 377, 387, 388, 389, 391], "both": [2, 3, 7, 37, 42, 45, 50, 51, 67, 103, 104, 106, 107, 117, 118, 123, 124, 125, 126, 130, 131, 139, 146, 172, 187, 195, 205, 207, 208, 222, 225, 226, 227, 232, 233, 255, 256, 257, 262, 271, 283, 285, 286, 290, 291, 297, 298, 299, 301, 302, 303, 304, 306, 307, 348, 370, 375, 377, 379, 381, 387, 388, 389, 390, 391, 394], "mark": [2, 3, 16, 69, 103, 107, 123, 124, 130, 131, 222, 226, 315, 317, 318, 382, 391], "identifi": [2, 44], "abov": [2, 3, 7, 37, 103, 107, 123, 124, 130, 131, 195, 223, 249, 250, 282, 371, 372, 375, 377, 379, 380, 387, 388, 389, 394], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 101, 102, 103, 106, 107, 108, 109, 113, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 143, 144, 146, 149, 150, 151, 152, 153, 155, 157, 163, 165, 169, 171, 172, 177, 178, 181, 184, 186, 187, 189, 191, 192, 195, 197, 205, 207, 208, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 232, 233, 237, 243, 252, 254, 255, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 333, 335, 343, 370, 371, 375, 376, 377, 378, 379, 380, 383, 386, 387, 388, 389, 390, 393, 394], "typic": [2, 3, 4, 8, 37, 103, 107, 123, 124, 130, 131, 156, 182, 195, 269, 284, 299, 301, 304, 370, 371, 372, 377, 379, 381, 382, 387, 388, 389], "adjust": [2, 11, 375, 387, 388, 389], "grumodul": [2, 145, 280], "lstmmodul": [2, 222, 378], "skip": [2, 3, 37, 61, 103, 107, 123, 124, 130, 131, 160, 187, 195, 197, 269, 273, 299, 304, 315, 316, 317, 318, 334, 335, 345, 348, 375, 376, 389], "accumul": [2, 8, 195], "upcom": [2, 299, 324, 325, 326, 327, 329, 330, 331, 332, 375], "popular": [2, 3, 370, 378, 381, 388], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 195, 368, 376], "shift": [2, 30, 32, 37, 38, 48, 71, 72, 78, 279, 315, 316, 317, 318, 377], "approxim": [2, 388, 394], "would": [2, 3, 11, 37, 47, 103, 107, 123, 124, 130, 131, 195, 220, 222, 224, 226, 227, 232, 372, 376, 377, 378, 379, 381, 382, 389, 391, 393, 394], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 146, 214, 241, 283, 288, 300, 301, 343, 366, 377, 378, 388, 391], "2x": 2, "small": [2, 189, 375, 377, 387, 388, 394], "clearer": [2, 380], "lazi": [2, 33, 34, 58, 59, 103, 107, 123, 124, 130, 131, 132, 133, 169, 189, 207, 232, 235, 274, 275, 375, 376, 380, 382, 386, 391, 394], "certainli": 2, "benefici": 2, "welcom": [2, 379], "wrapper": [2, 3, 12, 17, 41, 43, 46, 47, 50, 51, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 192, 196, 237, 252, 259, 260, 264, 266, 268, 273, 278, 315, 340, 341, 342, 366, 368, 377, 378, 379, 387, 388, 390, 394], "around": [2, 5, 7, 17, 50, 51, 119, 196, 266, 273, 315, 375, 376, 388, 394], "selecttransform": [2, 103, 107, 123, 124, 130, 131], "excludetransform": [2, 68, 178, 391], "promptli": 2, "virtual": [2, 3, 106], "instal": [2, 3, 5, 10, 18, 19, 20, 63, 66, 103, 107, 123, 124, 125, 126, 128, 129, 130, 131, 337, 352, 369, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 394], "respons": [2, 3, 8, 80, 87, 103, 107, 123, 124, 130, 131, 352, 381, 382, 394], "d4rl": [2, 63, 69], "repositori": [2, 7, 64, 65, 66, 69, 133, 387, 388], "wheel": [2, 377], "publish": 2, "openml": [2, 66, 122], "scikit": [2, 66, 122], "panda": [2, 66], "raw": [2, 3, 4, 47, 223, 249, 250, 376, 382, 389], "go": [2, 3, 7, 116, 123, 170, 174, 260, 321, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "natur": [2, 3, 375, 378, 380, 381, 382, 391], "modifi": [2, 3, 7, 8, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 143, 150, 159, 163, 169, 183, 186, 187, 189, 191, 195, 234, 260, 267, 268, 272, 355, 371, 375, 376, 377, 379, 387, 388, 389], "fly": [2, 193, 298, 371, 377, 389, 391, 394], "least": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 103, 149, 383, 394], "pre": [2, 7, 22, 37, 54, 67, 75, 103, 107, 123, 124, 130, 131, 169, 189, 191, 195, 394], "appli": [2, 3, 4, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 168, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 187, 189, 190, 192, 193, 195, 220, 224, 234, 249, 261, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 304, 306, 307, 315, 333, 347, 372, 375, 376, 377, 382, 387, 389, 393, 394], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 64, 80, 87, 93, 111, 112, 113, 123, 125, 126, 149, 177, 207, 208, 218, 232, 233, 263, 266, 337, 352, 364, 365, 375, 376, 377, 378, 380, 381, 384, 387, 388, 391, 393], "pipelin": [2, 3, 7, 370, 377], "replac": [2, 3, 6, 7, 27, 33, 37, 61, 67, 80, 87, 88, 142, 154, 156, 162, 204, 263, 370, 387, 391], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 82, 103, 107, 123, 124, 130, 131, 142, 174, 187, 195, 258, 259, 264, 266, 267, 268, 350, 370, 372, 376, 377, 378, 380, 383, 389, 391, 394], "produc": [2, 139, 142, 143, 207, 208, 227, 233, 240, 255, 257, 260, 335, 377, 378, 379, 380, 382, 391, 394], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 71, 86, 103, 107, 123, 124, 125, 126, 130, 131, 187, 195, 283, 284, 297, 299, 301, 302, 303, 304, 306, 307, 377], "download": [2, 7, 10, 61, 63, 64, 65, 67, 68, 69, 111, 169, 191, 335, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 124, 376, 387, 388, 389], "robosetexperiencereplai": [2, 87, 88], "fk1": [2, 68], "v4": [2, 68, 107, 123, 139, 173, 324, 325, 326, 327, 329, 330, 331, 332, 375, 377, 390, 394], "expert": [2, 68], "fk1_microopenrandom_v2d": [2, 68], "func": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 194], "obs_norm": 2, "norm": [2, 4, 8, 99, 100, 352, 375, 376, 377, 387, 388, 389], "num_work": [2, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 130, 375, 376], "os": [2, 43, 54, 70, 376], "cpu_count": [2, 43, 54, 70], "num_chunk": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69], "1000": [2, 4, 45, 79, 87, 88, 103, 107, 123, 124, 130, 131, 146, 193, 258, 263, 267, 268, 269, 273, 296, 375, 376, 377, 378, 380, 382, 384, 390, 391], "mp_start_method": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 123, 130, 376, 393], "fork": [2, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 375, 376, 377, 378, 387, 388, 390, 393], "recreat": [2, 389], "customari": [2, 370], "moreov": [2, 3], "fine": [2, 3, 24, 80, 87, 103, 107, 123, 124, 130, 131, 143, 163, 382, 390], "grain": [2, 3, 80, 87, 103, 107, 123, 124, 130, 131, 143], "nomenclatur": 2, "compact": [2, 48, 71, 72, 78], "propos": [2, 146, 156, 228, 296, 305, 370, 378, 391], "replaybufferensembl": [2, 61, 85, 91, 98], "primit": [2, 3, 4, 67, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307], "individu": [2, 4, 18, 19, 20, 21, 37, 54, 80, 82, 93, 103, 107, 117, 118, 123, 124, 130, 131, 195, 375, 388], "dummi": [2, 3, 131, 333, 375, 382, 394], "semant": [2, 33, 34, 106, 108, 370], "ident": [2, 3, 14, 15, 16, 37, 41, 43, 46, 87, 103, 106, 107, 108, 120, 123, 124, 130, 131, 156, 232, 233, 284, 297, 302, 304, 306, 307, 315, 316, 317, 318, 364, 365, 376, 379, 387, 388], "another_kei": [2, 82], "renam": [2, 41, 43, 46, 82, 172, 174, 204, 375], "resiz": [2, 3, 69, 82, 146, 376, 378, 379, 391, 394], "imag": [2, 3, 4, 7, 11, 67, 148, 151, 169, 185, 191, 227, 333, 335, 375, 376, 379, 383, 388, 390, 394], "comops": 2, "totensorimag": [2, 3, 69, 82, 146, 173, 376, 378, 391, 393, 394], "renametransform": [2, 82, 103, 107, 123, 124, 130, 131], "rb0": [2, 82], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 159, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 187, 189, 191, 193, 206, 216, 222, 226, 229, 242, 251, 252, 254, 255, 256, 257, 260, 261, 266, 269, 270, 272, 273, 275, 276, 277, 280, 283, 284, 285, 286, 287, 289, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 334, 335, 362, 370, 375, 376, 377, 378, 380, 381, 384, 386, 387, 388, 389, 390, 391, 393, 394], "pixel": [2, 3, 7, 27, 69, 82, 101, 102, 106, 108, 109, 127, 146, 148, 151, 156, 159, 161, 165, 167, 169, 173, 185, 189, 191, 210, 238, 239, 333, 335, 370, 375, 376, 378, 383, 387, 390, 391, 393, 394], "rb1": [2, 82], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 159, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 189, 191, 193, 206, 216, 217, 222, 226, 229, 242, 243, 251, 252, 254, 255, 256, 257, 260, 262, 266, 269, 270, 271, 272, 273, 275, 276, 277, 280, 283, 284, 285, 290, 291, 297, 298, 301, 302, 303, 304, 306, 313, 315, 316, 317, 318, 333, 335, 348, 362, 370, 375, 376, 377, 378, 380, 384, 386, 387, 388, 389, 390, 391, 393, 394], "pixels33": [2, 82], "data0": [2, 82], "244": [2, 82, 169, 191, 389], "data1": [2, 82], "_": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 104, 111, 132, 133, 147, 152, 154, 155, 163, 165, 172, 185, 193, 195, 254, 272, 277, 282, 283, 284, 286, 290, 291, 297, 301, 302, 304, 306, 307, 315, 316, 317, 318, 337, 375, 376, 377, 378, 384, 387, 388, 389, 391, 393], "rang": [2, 3, 4, 8, 12, 29, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 103, 104, 107, 117, 118, 123, 124, 130, 131, 174, 185, 193, 195, 221, 225, 298, 306, 307, 371, 372, 375, 377, 378, 381, 382, 384, 387, 388, 389, 391, 393], "parent": [2, 3, 21, 27, 32, 33, 53, 62, 82, 91, 98, 103, 107, 123, 124, 130, 131, 139, 143, 146, 147, 150, 153, 156, 159, 160, 165, 169, 177, 181, 182, 183, 184, 186, 188, 189, 195, 222, 226, 255, 280, 299, 301, 319, 333, 335, 375, 382, 389, 393, 394], "basic": [2, 119, 370, 377, 381, 382, 384, 387, 394], "properti": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 142, 186, 187, 193, 195, 215, 223, 235, 240, 248, 249, 250, 266, 283, 299, 301, 303, 304, 380, 382, 389, 391], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 55, 56, 90, 96, 103, 107, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 204, 205, 207, 208, 210, 211, 212, 213, 216, 217, 220, 221, 222, 224, 225, 226, 227, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 249, 252, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 346, 350, 355, 362, 370, 371, 372, 375, 376, 377, 378, 379, 387, 388, 389, 393, 394], "send": [2, 3, 8, 342, 393], "receiv": [2, 3, 37, 47, 103, 107, 123, 124, 130, 131, 186, 187, 195, 227, 321, 371, 375, 377, 381, 386, 389], "spawn": [2, 3, 4, 18, 22, 111, 120, 123, 130, 376, 387, 388], "check_env_spec": [2, 3, 107, 123, 139, 171, 333, 368, 377, 387, 388, 389], "saniti": [2, 3, 7, 197, 377], "utmost": 2, "commonli": [2, 80, 87, 88, 394], "emploi": [2, 236], "languag": [2, 24, 47], "scarc": 2, "address": [2, 391], "subdomain": 2, "facilit": [2, 3, 7, 168, 169, 183, 189, 191, 255, 256, 257, 370, 375, 378, 380, 389], "extern": [2, 3, 152, 155, 387, 394], "token": [2, 43, 44, 47, 52, 54, 70], "dm": [3, 375, 394], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 54, 67, 84, 90, 93, 94, 96, 97, 99, 100, 103, 107, 111, 112, 113, 119, 120, 121, 123, 124, 130, 131, 132, 174, 183, 189, 190, 232, 234, 255, 265, 283, 284, 286, 287, 289, 290, 291, 293, 297, 301, 302, 303, 304, 306, 307, 342, 352, 370, 371, 372, 375, 376, 378, 379, 380, 381, 383, 387, 388, 389, 391, 394], "goal": [3, 4, 61, 62, 63, 64, 65, 66, 67, 68, 69, 182, 375, 376, 377, 378, 388, 389], "abl": [3, 116, 125, 126, 222, 226, 375, 377, 378, 380, 386, 387, 388, 389, 391, 393], "experi": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 79, 80, 197, 337, 338, 339, 340, 341, 342, 369, 376, 377, 382, 383, 387, 388, 391], "box": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 106, 108, 234, 299], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 103, 104, 107, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 146, 149, 156, 162, 163, 165, 167, 172, 174, 177, 183, 186, 192, 193, 195, 333, 362, 375, 376, 377, 378, 386, 387, 388, 390, 391, 393, 394], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 154, 156, 163, 169, 183, 186, 187, 189, 191, 195, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 237, 242, 243, 251, 254, 255, 256, 257, 260, 261, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 280, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 362, 370, 371, 375, 376, 377, 378, 380, 381, 384, 386, 387, 388, 389, 390, 393], "organis": [3, 68, 103, 107, 123, 124, 130, 131, 187, 376], "arbitrari": [3, 40, 45, 103, 107, 123, 124, 130, 131, 142, 370, 375, 376, 389, 391], "structur": [3, 7, 41, 42, 43, 45, 46, 47, 50, 51, 54, 93, 103, 107, 123, 124, 130, 131, 152, 155, 205, 232, 267, 268, 315, 316, 317, 318, 319, 368, 371, 375, 377, 378, 379, 382, 387, 388, 389, 390], "attribut": [3, 4, 24, 28, 30, 37, 41, 43, 46, 48, 54, 67, 103, 106, 107, 108, 123, 124, 130, 131, 139, 156, 169, 189, 193, 195, 222, 226, 273, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 375, 378, 387, 389], "live": [3, 13, 14, 15, 16, 17, 19, 20, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 156, 195], "actual": [3, 4, 7, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 192, 355, 371, 375, 377, 387, 388, 389], "retriev": [3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 103, 106, 107, 108, 123, 124, 130, 131, 147, 153, 156, 165, 204, 206, 207, 229, 266, 269, 273, 276, 280, 283, 284, 285, 287, 298, 301, 302, 304, 306, 307, 313, 315, 316, 317, 318, 366, 372, 376, 377, 380, 389, 394], "care": [3, 8, 103, 107, 123, 124, 130, 131, 186, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 335, 375, 377, 387, 388, 389, 391], "parametr": [3, 236, 273, 284, 290, 297, 304, 375, 377], "hardwar": 3, "observation_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 165, 167, 169, 171, 173, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 192, 193, 195, 206, 222, 226, 229, 356, 362, 375, 377, 381, 386, 387, 388, 389, 394], "compositespec": [3, 33, 34, 58, 103, 105, 107, 119, 123, 124, 130, 131, 140, 143, 152, 153, 154, 155, 157, 163, 171, 172, 178, 181, 183, 186, 195, 201, 205, 206, 229, 254, 258, 259, 269, 275, 276, 280, 368, 375, 377, 378, 387, 388, 389, 394], "pair": [3, 37, 41, 43, 46, 63, 101, 102, 103, 107, 123, 124, 130, 131, 174, 183, 222, 255, 269, 273, 299, 315, 316, 317, 318, 319, 370, 371, 375, 376, 377, 380, 381, 386, 389, 394], "state_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 206, 229, 389, 394], "reward_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 144, 149, 150, 152, 153, 155, 171, 175, 176, 177, 179, 186, 188, 195, 206, 229, 377, 387, 388, 389, 394], "done_spec": [3, 103, 107, 123, 124, 130, 131, 152, 153, 155, 156, 171, 186, 195, 205, 387, 388, 389, 394], "flag": [3, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 162, 267, 268, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 370, 387, 388, 389, 390], "input_spec": [3, 103, 107, 119, 123, 124, 130, 131, 139, 143, 150, 152, 153, 154, 165, 167, 171, 172, 177, 178, 181, 182, 183, 186, 187, 188, 190, 195, 377, 389], "full_action_spec": [3, 103, 107, 123, 124, 130, 131, 139, 206, 229, 377, 387, 388], "full_state_spec": [3, 103, 107, 123, 124, 130, 131, 139, 206, 229, 377], "lock": [3, 27, 33, 41, 43, 46, 103, 107, 123, 124, 130, 131, 143, 183, 193, 389], "output_spec": [3, 103, 107, 123, 124, 130, 131, 143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 187, 195, 389], "full_observation_spec": [3, 103, 107, 123, 124, 130, 131, 206, 229], "full_reward_spec": [3, 103, 107, 123, 124, 130, 131, 143, 153, 171, 387, 388], "full_done_spec": [3, 103, 107, 123, 124, 130, 131, 143, 153, 171, 205, 387, 388], "carri": [3, 21, 54, 103, 107, 123, 124, 130, 131, 183, 299, 376, 378, 387, 388, 389, 391], "nontensorspec": [3, 368], "importantli": [3, 269, 273], "action_s": 3, "help": [3, 4, 37, 103, 107, 123, 124, 130, 131, 156, 195, 283, 285, 298, 301, 303, 369, 371, 375, 376, 377, 378, 387, 388], "With": [3, 112, 113, 116, 182, 372, 376, 386, 387, 388, 391, 394], "necessarili": [3, 103, 107, 123, 124, 130, 131, 394], "present": [3, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 106, 107, 123, 124, 130, 131, 157, 174, 178, 183, 187, 195, 204, 205, 209, 210, 211, 212, 213, 219, 222, 224, 226, 236, 241, 266, 267, 268, 272, 273, 274, 275, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 366, 372, 375, 384, 386, 387, 388, 391, 393], "0s": [3, 61, 67, 183, 378], "step_and_maybe_reset": [3, 103, 107, 123, 124, 130, 131, 379], "done_kei": [3, 23, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 142, 146, 156, 174, 181, 195, 204, 387, 388], "assign": [3, 4, 14, 15, 17, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 195, 286, 287, 289, 304, 377, 380, 387, 388, 391], "_reset": [3, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 146, 152, 155, 162, 171, 205, 206, 229, 387], "data_": [3, 103, 107, 123, 124, 130, 131], "append": [3, 8, 11, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 123, 124, 130, 131, 142, 149, 150, 174, 183, 187, 192, 221, 222, 225, 226, 261, 270, 375, 376, 377, 378, 387, 388, 389, 390, 391, 393], "seed": [3, 14, 15, 16, 17, 21, 68, 103, 107, 119, 123, 124, 125, 126, 130, 131, 132, 133, 140, 143, 152, 155, 171, 187, 197, 333, 352, 387], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 203, 209, 218, 238, 245, 254, 264, 269, 272, 273, 276, 284, 299, 348, 370, 375, 376, 378, 380, 381, 384, 387, 389, 394], "preced": [3, 37, 378], "risk": [3, 170], "overlap": [3, 50, 93], "reproduc": [3, 146, 197, 375, 377, 388], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 44, 47, 52, 54, 70, 74, 75, 76, 79, 80, 95, 103, 107, 123, 124, 130, 131, 154, 175, 181, 182, 184, 248, 249, 250, 276, 284, 290, 291, 297, 299, 300, 304, 335, 349, 375, 376, 377, 378, 380, 387, 388, 391], "max_step": [3, 11, 93, 103, 107, 117, 118, 119, 123, 124, 130, 131, 132, 133, 181, 195, 333, 379, 380, 381, 383, 384, 387, 388, 393, 394], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 145, 163, 217, 222, 226, 229, 242, 243, 251, 252, 255, 256, 257, 259, 260, 261, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 278, 280, 284, 286, 290, 291, 293, 294, 295, 297, 299, 302, 304, 306, 307, 313, 314, 315, 316, 317, 318, 348, 362, 368, 375, 377, 378, 381, 384, 386, 387, 388, 389, 390, 394], "trail": [3, 193], "treat": [3, 37, 371, 380, 381], "figur": [3, 375, 377, 378, 388, 389, 394], "brief": [3, 377, 379, 381, 391], "deliveri": 3, "design": [3, 37, 40, 85, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 139, 146, 170, 187, 195, 260, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 375, 376, 377, 378, 379, 380, 381, 386, 387, 388, 389, 391, 394], "metaclass": 3, "everi": [3, 8, 27, 33, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 89, 103, 107, 123, 124, 130, 131, 181, 182, 193, 195, 201, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 233, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 299, 352, 372, 375, 376, 377, 378, 379, 380, 387, 388, 389], "flank": [3, 378], "dual": 3, "strictli": [3, 8, 37, 103, 107, 123, 124, 130, 131, 187, 195, 304, 375, 377], "refer": [3, 7, 8, 9, 11, 21, 24, 37, 47, 103, 106, 107, 108, 123, 124, 130, 131, 187, 193, 195, 206, 217, 218, 229, 230, 231, 232, 233, 234, 238, 239, 244, 245, 262, 283, 292, 293, 294, 295, 301, 304, 315, 320, 328, 374, 375, 377, 380, 381, 382, 383, 387, 388, 391, 394], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 79, 80, 103, 107, 123, 124, 130, 131, 165, 169, 174, 176, 189, 191, 193, 195, 204, 208, 215, 230, 231, 232, 233, 235, 236, 240, 242, 248, 249, 250, 251, 272, 289, 291, 296, 302, 305, 328, 346, 348, 349, 357, 358, 360, 362, 363, 364, 365, 366], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 134, 375], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 67, 80, 87, 88, 368], "adjac": [3, 23, 159, 266], "reli": [3, 11, 23, 183, 220, 221, 222, 224, 225, 226, 283, 371, 375, 377, 380, 382, 389, 394], "junction": 3, "inittrack": [3, 222, 226, 266, 375, 378], "tutori": [3, 124, 367, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394], "scratch": [3, 8, 376, 389], "gym3": 3, "envpool": [3, 120, 121], "interfac": [3, 110, 122, 227, 235, 370, 371, 375, 377, 383, 389, 391], "simultan": [3, 20, 120, 121, 123, 130, 389], "advantag": [3, 8, 219, 283, 285, 298, 301, 303, 315, 316, 317, 318, 319, 320, 322, 324, 326, 328, 329, 331, 371, 372, 375, 376, 377, 378, 388, 389, 394], "scale": [3, 4, 24, 63, 103, 107, 123, 124, 130, 131, 146, 163, 165, 176, 182, 185, 193, 218, 223, 237, 244, 245, 249, 250, 255, 256, 257, 269, 273, 275, 283, 284, 297, 301, 302, 303, 304, 350, 356, 366, 370, 375, 376, 377, 378, 380, 388, 393], "varieti": [3, 11], "inherit": [3, 103, 107, 123, 124, 130, 131, 228, 299, 372, 377, 387, 388], "Of": [3, 7, 369, 389, 394], "cours": [3, 4, 369, 389, 394], "from_pixel": [3, 11, 99, 100, 101, 102, 106, 108, 109, 112, 113, 127, 146, 173, 333, 335, 375, 376, 378, 379, 383, 384, 390, 391, 393, 394], "81": [3, 376, 389, 390], "simpli": [3, 6, 41, 43, 46, 54, 91, 93, 98, 157, 178, 192, 299, 370, 371, 375, 377, 381, 387, 388, 394], "d": [3, 42, 45, 50, 51, 64, 66, 68, 69, 70, 79, 80, 220, 224, 269, 273, 393], "privat": [3, 103, 107, 123, 124, 130, 131, 192, 389, 394], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 40, 41, 43, 46, 61, 88, 93, 285, 298, 301, 343, 345, 348, 352, 355, 356, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 47, 82, 85, 165, 176, 223, 235, 244, 249, 250, 313, 370, 380, 381, 387, 389, 391], "inner": [3, 103, 107, 123, 124, 130, 131, 154, 372, 376, 377, 388, 394], "logic": [3, 387], "nevertheless": [3, 377, 379, 391], "kept": [3, 23, 86, 88, 154, 178, 186, 197, 204, 223, 249, 250, 381, 387], "mind": [3, 61, 67, 80, 87, 88, 103, 107, 123, 124, 130, 131, 387, 388], "desig": 3, "wherev": 3, "expos": [3, 127, 152, 155, 274, 376], "modif": [3, 5, 27, 33, 37, 103, 107, 123, 124, 130, 131, 159, 195, 205, 299, 371, 377, 389], "lost": [3, 8, 192], "eras": [3, 80, 87, 103, 107, 123, 124, 130, 131, 187], "intern": [3, 373], "face": [3, 5, 8, 9, 379, 394], "NOT": [3, 71, 72, 78, 170], "outsid": [3, 16, 371, 383, 387, 388, 389], "right": [3, 6, 7, 23, 47, 80, 87, 376, 377, 388, 389, 394], "preliminari": 3, "warranti": 3, "affect": [3, 8, 37, 103, 107, 123, 124, 130, 131, 186, 187, 195, 197, 315, 316, 317, 318, 387], "preclud": 3, "presenc": [3, 381], "annihil": 3, "reason": [3, 4, 8, 37, 67, 103, 107, 123, 124, 125, 126, 130, 131, 169, 189, 195, 226, 371, 375, 376, 377, 381, 382, 387, 389, 391], "advanc": [3, 21, 42, 45, 50, 51, 107, 379, 382, 391], "explicitli": [3, 4, 71, 72, 78, 142, 269, 371, 376, 378, 382, 387, 388, 391], "superse": 3, "pettingzoowrapp": [3, 368], "group": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 103, 107, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 134, 370, 376, 380, 382, 388, 391], "associ": [3, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 195, 244, 366, 375, 391], "environemtn": 3, "__not__": [3, 269, 284, 297, 302, 304, 306, 307], "constrain": [3, 163, 222, 226, 301], "li": 3, "fact": [3, 7, 8, 375, 377, 379, 387, 388, 389, 390, 391, 394], "predict": [3, 37, 47, 216, 218, 228, 229, 260, 278, 283, 285, 289, 292, 294, 295, 298, 301, 303, 314, 370, 375, 376, 381], "know": [3, 4, 9, 42, 45, 50, 51, 106, 108, 258, 259, 299, 302, 348, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 391], "meaning": 3, "perfectli": [3, 372, 375, 389], "meaningless": 3, "val": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 381, 393], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 55, 56, 61, 103, 107, 123, 124, 130, 131, 142, 366, 370], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 152, 154, 155, 156, 157, 159, 163, 164, 165, 167, 169, 171, 172, 174, 176, 177, 178, 181, 183, 185, 187, 188, 189, 191, 193, 195, 197, 201, 204, 205, 206, 207, 208, 210, 211, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 249, 250, 254, 261, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 313, 315, 316, 317, 318, 321, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 342, 345, 346, 348, 349, 350, 352, 366, 376, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "500": [3, 375, 376, 389, 393, 394], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 61, 64, 123, 130], "bottleneck": [3, 8, 80, 87, 88], "great": [3, 7, 8, 387, 393], "speedup": [3, 8, 387, 394], "precis": [3, 152, 155, 204, 221, 225, 375, 377], "misspecifi": 3, "caus": [3, 7, 8, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 170, 394], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 134, 146, 158, 164, 174, 182, 183, 184, 187, 195, 197, 258, 259, 263, 264, 267, 268, 299, 304, 375, 377, 387, 388, 391, 394], "mismatch": [3, 376], "subprocess": [3, 14, 15, 17, 104, 123, 130], "multithreadedenv": [3, 368], "underneath": 3, "higher": [3, 4, 80, 149, 276, 375, 376, 377, 387, 391, 394], "flexibl": [3, 9, 120, 308, 371, 372, 375, 391, 394], "cover": [3, 106, 108, 369, 377, 379, 382, 383, 389, 393], "type": [3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 69, 70, 82, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 143, 150, 152, 153, 156, 157, 163, 169, 171, 172, 178, 181, 183, 186, 187, 189, 191, 193, 195, 199, 203, 207, 208, 227, 232, 233, 236, 242, 251, 258, 259, 261, 269, 272, 273, 280, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 309, 313, 321, 333, 364, 368, 370, 375, 376, 377, 382, 387, 388, 389, 391, 394], "atari": [3, 4, 61, 146, 335, 383, 394], "classic": [3, 119, 126, 376], "benchmark_batched_env": 3, "seamlessli": [3, 389], "infrastructur": [3, 387, 388], "act": [3, 4, 87, 88, 125, 126, 187, 216, 233, 284, 286, 297, 302, 304, 306, 307, 378, 387, 388, 391], "world": [3, 5, 119, 278, 294, 383, 387, 388, 389, 394], "paradigm": [3, 17, 388], "decpodp": 3, "game": [3, 4, 5, 61, 117, 118, 335, 383], "thank": [3, 375, 379], "carrier": [3, 377, 378, 379, 391], "particular": [3, 37, 54, 63, 64, 103, 107, 123, 124, 130, 131, 187, 195, 371, 372, 376, 378, 379, 386, 388, 391], "thu": [3, 298, 388], "let": [3, 6, 7, 11, 23, 37, 42, 45, 50, 51, 52, 103, 107, 123, 124, 125, 126, 130, 131, 146, 195, 222, 226, 232, 233, 261, 348, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "vma": [3, 132, 133, 333, 387, 388], "robot": [3, 5, 7, 67, 169, 189, 191, 388], "vmasenv": [3, 333, 368, 387, 388], "balanc": [3, 101, 102, 375, 376], "num_env": [3, 21, 106, 110, 121, 132, 133, 333, 387, 388], "n_agent": [3, 132, 133, 232, 233, 234, 242, 251, 313, 333, 387, 388], "ground_rew": 3, "pos_rew": [3, 388], "style": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69], "relat": [3, 4, 10, 42, 123, 159, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 376, 384, 389], "vari": [3, 106, 108, 109, 125, 126, 127, 132, 170, 388], "creation": [3, 123, 130, 394], "info_spec": [3, 123], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 25, 40, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 140, 171, 205, 287, 290, 291, 313, 368, 387, 388, 394], "simpl": [3, 9, 37, 40, 103, 107, 123, 124, 130, 131, 195, 210, 266, 273, 287, 289, 299, 303, 315, 370, 371, 375, 376, 377, 379, 380, 381, 387, 388, 391, 394], "prefix": [3, 23, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 187, 195, 269, 299, 304, 334, 378, 381, 394], "exactli": [3, 37, 103, 107, 109, 123, 124, 130, 131, 187, 195, 220, 224, 304, 375, 378, 382, 387, 388], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 103, 107, 123, 124, 130, 131, 139, 140, 154, 196, 204, 206, 228, 229, 258, 259, 263, 264, 266, 267, 268, 387, 388], "reward_kei": [3, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 195, 204, 206, 229, 346, 350, 387, 388], "set_kei": [3, 156, 283, 285, 287, 290, 291, 292, 297, 298, 299, 301, 302, 303, 304, 313, 319, 375, 387, 388], "awai": [3, 377, 379, 387, 388], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 162, 181, 273], "full": [3, 103, 107, 123, 124, 130, 131, 222, 226, 262, 343, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "autoresettransform": 3, "invalid": [3, 37, 93, 103, 107, 123, 124, 130, 131, 134, 195, 230, 231], "nan": [3, 142, 192], "auto_reset": [3, 103, 107, 123, 124, 130, 131, 142, 195, 389], "auto_reset_replac": [3, 142], "placehold": [3, 109, 156, 187], "set_gym_backend": [3, 103, 106, 107, 123, 124, 130, 131, 135, 142, 368, 379], "autoresettinggymenv": [3, 142], "_step": [3, 103, 107, 123, 124, 130, 131, 140, 142, 143, 152, 155, 159, 171, 172], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 150, 152, 155, 169, 171, 183, 186, 187, 189, 191, 195, 206, 217, 229, 242, 251, 258, 259, 263, 269, 272, 277, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 372, 375, 389, 393, 394], "super": [3, 119, 140, 142, 143, 152, 155, 171, 206, 217, 229, 277, 284, 286, 291, 297, 302, 304, 306, 307, 375, 387, 389, 393, 394], "td_reset": [3, 142], "exclud": [3, 8, 63, 68, 103, 107, 123, 124, 130, 131, 142, 146, 157, 204, 242, 387, 388, 391], "r": [3, 4, 37, 139, 140, 142, 149, 165, 179, 193, 221, 273, 282, 314, 333, 370, 376, 389, 394], "break_when_any_don": [3, 103, 107, 123, 124, 130, 131, 142, 195, 266, 388], "3633e": [3, 142], "02": [3, 103, 107, 123, 124, 130, 131, 142, 374, 375, 376, 377, 384, 389, 390, 392], "4877e": [3, 142], "01": [3, 142, 165, 267, 268, 279, 285, 298, 301, 374, 375, 376, 378, 388, 389, 390, 392], "2849e": [3, 142], "7584e": [3, 142], "6609e": [3, 142], "6166e": [3, 142], "8366e": [3, 142], "2761e": [3, 142], "5685e": [3, 142], "4102e": [3, 142], "8111e": [3, 142], "9959e": [3, 142], "0865e": [3, 142], "5644e": [3, 142], "2119e": [3, 142], "2542e": [3, 142], "03": [3, 103, 107, 123, 124, 130, 131, 142, 165, 374, 375, 376, 389, 390, 392], "9952e": [3, 142], "4059e": [3, 142], "2094e": [3, 142], "9009e": [3, 142], "5140e": [3, 142], "3554e": [3, 142], "2920e": [3, 142], "7893e": [3, 142], "6429e": [3, 142], "3057e": [3, 142], "2867e": [3, 142], "6963e": [3, 142], "3818e": [3, 142], "2576e": [3, 142], "2679e": [3, 142], "1640e": [3, 142], "00": [3, 99, 100, 142, 374, 375, 376, 377, 378, 388, 389, 390, 392], "6972e": [3, 142], "0212e": [3, 142], "5959e": [3, 142], "4637e": [3, 142], "3121e": [3, 142], "2168e": [3, 142], "5232e": [3, 142], "7704e": [3, 142], "7457e": [3, 142], "4127e": [3, 142], "1064e": [3, 142], "0854e": [3, 142], "5712e": [3, 142], "2189e": [3, 142], "5235e": [3, 142], "8289e": [3, 142], "0009e": [3, 142], "0257e": [3, 142], "8893e": [3, 142], "5872e": [3, 142], "9405e": [3, 142], "7766e": [3, 142], "0403e": [3, 142], "0626e": [3, 142], "2959e": [3, 142], "7263e": [3, 142], "2775e": [3, 142], "9564e": [3, 142], "0411e": [3, 142], "6769e": [3, 142], "6354e": [3, 142], "8698e": [3, 142], "1765e": [3, 142], "6292e": [3, 142], "5375e": [3, 142], "1820e": [3, 142], "7023e": [3, 142], "5836e": [3, 142], "9016e": [3, 142], "4826e": [3, 142], "6191e": [3, 142], "6387e": [3, 142], "8667e": [3, 142], "2056e": [3, 142], "1147e": [3, 142], "5991e": [3, 142], "0278e": [3, 142], "5219e": [3, 142], "3067e": [3, 142], "6617e": [3, 142], "3322e": [3, 142], "2629e": [3, 142], "4599e": [3, 142], "7298e": [3, 142], "5848e": [3, 142], "0148e": [3, 142], "5745e": [3, 142], "6982e": [3, 142], "7877e": [3, 142], "3527e": [3, 142], "7285e": [3, 142], "6668e": [3, 142], "0583e": [3, 142], "6956e": [3, 142], "3962e": [3, 142], "9845e": [3, 142], "5015e": [3, 142], "5903e": [3, 142], "9993e": [3, 142], "9418e": [3, 142], "0196e": [3, 142], "6557e": [3, 142], "2109e": [3, 142], "8997e": [3, 142], "1507e": [3, 142], "7363e": [3, 142], "0310e": [3, 142], "9574e": [3, 142], "8980e": [3, 142], "0090e": [3, 142], "forecast": 3, "awar": [3, 7, 74, 75, 76, 89, 91, 95, 222, 226, 376, 378], "detect": [3, 69, 299, 371], "return_contigu": [3, 103, 107, 123, 124, 130, 131, 197, 386], "unboundedcontinuoustensorspec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 152, 155, 171, 183, 201, 206, 229, 254, 272, 275, 277, 280, 303, 368, 377, 378, 387, 388, 389, 394], "boundedtensorspec": [3, 22, 27, 103, 107, 123, 124, 130, 131, 196, 263, 264, 267, 268, 269, 276, 283, 284, 286, 297, 301, 302, 304, 306, 307, 368, 377, 387, 388, 389, 393, 394], "binarydiscretetensorspec": [3, 140, 287, 290, 291, 313, 368], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 93, 103, 105, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 152, 153, 156, 157, 158, 159, 162, 163, 168, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 187, 192, 193, 195, 204, 205, 206, 222, 226, 228, 229, 258, 259, 260, 262, 263, 266, 267, 268, 271, 272, 273, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 314, 315, 316, 317, 318, 319, 352, 375, 387, 389], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 26, 28, 29, 37, 40, 42, 47, 50, 55, 67, 79, 80, 82, 103, 107, 123, 124, 130, 131, 139, 142, 146, 150, 152, 155, 163, 165, 169, 174, 175, 176, 182, 183, 185, 186, 187, 189, 191, 193, 195, 215, 218, 220, 223, 224, 227, 230, 231, 235, 236, 244, 245, 248, 250, 258, 259, 272, 276, 279, 281, 282, 283, 284, 285, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 350, 375, 376, 391, 394], "_set_se": [3, 140, 143, 152, 155, 171, 389], "lazystackedtensordict": [3, 33, 61, 103, 107, 119, 123, 124, 130, 131, 386], "float32": [3, 14, 15, 16, 27, 30, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 128, 129, 130, 131, 132, 133, 139, 143, 152, 155, 156, 157, 165, 167, 171, 172, 174, 178, 181, 183, 185, 201, 204, 206, 216, 217, 222, 226, 229, 242, 243, 251, 254, 255, 256, 257, 260, 261, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 313, 370, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394], "exclusive_field": [3, 61, 386], "stack_dim": [3, 61, 386], "dramat": 3, "carefulli": [3, 387, 388, 394], "against": [3, 5, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 195, 197, 254, 261, 262, 269, 270, 271, 272, 273, 284, 297, 302, 304, 306, 307, 377, 387, 388], "plain": [3, 8, 379], "larg": [3, 4, 29, 41, 43, 46, 152, 155, 189, 283, 285, 298, 301, 303, 376, 377, 387, 388, 391], "expens": [3, 80, 87, 88, 333, 391], "absent": [3, 27, 33, 63, 103, 107, 123, 124, 130, 131, 187], "torchvis": [3, 11, 169, 191, 337, 387, 393, 394], "base_env": [3, 100, 103, 107, 108, 113, 123, 124, 130, 131, 139, 140, 143, 149, 152, 154, 155, 163, 167, 171, 173, 179, 181, 183, 184, 187, 195, 335, 375, 376, 377, 387, 390, 393, 394], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 141, 143, 150, 156, 183, 187, 195, 207, 208, 227, 234, 282, 299, 333, 357, 358, 364, 365, 366, 376, 391], "bring": [3, 377, 379, 394], "signific": [3, 5, 8, 377, 394], "kind": [3, 45, 53, 204, 381, 387, 391], "consult": 3, "interest": [3, 269, 273, 370, 376, 377, 379, 388, 389, 394], "resize_par": 3, "easi": [3, 5, 11, 61, 66, 101, 102, 103, 107, 112, 113, 123, 124, 130, 131, 258, 259, 263, 264, 267, 268, 370, 371, 375, 376, 377, 388, 390, 391, 394], "graph": [3, 4, 8, 99, 100, 112, 113, 311, 312, 375, 389], "revers": [3, 224], "order": [3, 11, 16, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 88, 103, 107, 123, 124, 130, 131, 147, 152, 155, 167, 187, 195, 254, 261, 272, 274, 275, 277, 283, 284, 286, 290, 291, 297, 301, 302, 303, 304, 306, 307, 376, 387, 388], "chain": [3, 41, 42, 43, 45, 46, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 150, 154, 207, 208, 275, 394], "invers": [3, 4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 146, 152, 155, 157, 165, 174, 195, 281, 290, 297, 389], "in_keys_inv": [3, 136, 149, 152, 153, 155, 165, 166, 167, 171, 172, 174, 179, 186, 375, 386, 389, 394], "append_transform": [3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 136, 139, 145, 169, 183, 187, 189, 193, 222, 226, 333, 375, 378, 387, 389, 391, 393, 394], "doubletofloat": [3, 375, 377, 386], "float64": [3, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 139, 150, 152, 155, 169, 183, 186, 187, 189, 191, 195, 272, 386], "regist": [3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 106, 107, 108, 123, 124, 130, 131, 152, 155, 156, 177, 187, 195, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 333, 335, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 372, 375, 377, 379, 391], "manipul": [3, 4, 8, 101, 102, 169, 189], "third_transform": 3, "unexpect": [3, 37, 103, 107, 123, 124, 130, 131, 195, 394], "behviour": 3, "fortun": [3, 378, 379, 380, 383], "alreadi": [3, 8, 12, 37, 41, 43, 46, 54, 61, 103, 107, 123, 124, 130, 131, 183, 195, 205, 273, 315, 316, 317, 318, 375, 377, 383, 387, 388], "chang": [3, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 74, 75, 76, 80, 86, 87, 89, 91, 95, 103, 107, 123, 124, 130, 131, 143, 150, 152, 153, 155, 157, 163, 171, 172, 178, 181, 186, 187, 193, 195, 224, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 371, 375, 378, 387, 388, 389, 390, 391, 394], "catfram": [3, 266, 376], "hold": [3, 311, 312, 389, 391], "notic": [3, 93, 146, 377, 384, 389], "parenthood": 3, "henc": [3, 42, 170, 205, 232, 370, 375, 377, 387, 388, 389], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 123, 130, 333, 389], "discret": [3, 25, 29, 35, 36, 40, 56, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 154, 240, 243, 289, 290, 291, 292, 370, 376, 380, 387, 388, 389, 394], "might": [3, 41, 43, 44, 46, 339, 369, 375, 379, 394], "action_mask": [3, 112, 113, 125, 126, 128, 129, 140], "unavail": [3, 125, 126], "probabl": [3, 4, 8, 47, 82, 85, 215, 217, 220, 222, 224, 226, 227, 230, 231, 240, 249, 250, 263, 269, 273, 370, 376, 380, 393], "categor": [3, 29, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 156, 217, 240, 243, 261, 262, 269, 270, 271, 287, 290, 291, 313, 378], "probabilistictensordictmodul": [3, 163, 273, 274, 393], "tensordictsequenti": [3, 222, 226, 261, 263, 266, 267, 274, 280, 370, 375, 376, 378, 380, 384, 386, 387, 390, 393], "maskedcategor": [3, 231, 368], "linear": [3, 14, 15, 16, 17, 21, 37, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 163, 169, 183, 186, 187, 189, 191, 195, 206, 207, 208, 210, 211, 212, 213, 217, 219, 227, 229, 232, 233, 235, 236, 237, 243, 244, 245, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 362, 370, 376, 386, 390, 393], "in_feat": 3, "out_feat": 3, "logit": [3, 43, 47, 216, 230, 231, 240, 262, 269, 290, 291, 370], "dist": [3, 10, 230, 231, 240, 380], "distribution_class": [3, 163, 255, 256, 257, 260, 269, 273, 275, 283, 284, 290, 291, 297, 301, 302, 303, 304, 370, 375, 377, 380, 387, 388, 393], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 65, 99, 100, 103, 107, 108, 112, 113, 118, 121, 123, 124, 125, 126, 130, 131, 133, 195, 197, 222, 226, 252, 255, 256, 257, 259, 264, 266, 268, 270, 278, 299, 313, 370, 375, 376, 377, 378, 381, 384, 387, 388, 394], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 140, 170, 195], "enviorn": [3, 117, 125, 126, 132, 133], "itself": [3, 37, 103, 107, 123, 124, 130, 131, 135, 142, 195, 299, 306, 377, 379], "ey": 3, "report": [3, 99, 100, 112, 113, 383], "foremost": 3, "callback": [3, 103, 107, 123, 124, 130, 131, 388], "ad": [3, 4, 16, 23, 37, 42, 45, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 103, 107, 123, 124, 130, 131, 177, 187, 195, 235, 236, 267, 268, 283, 285, 287, 292, 298, 301, 304, 313, 376, 378, 380, 387, 391, 394], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 51, 79, 80, 86, 177, 193, 195, 266, 267, 268, 340, 345, 376, 378, 379, 382, 388, 389, 391], "tensordictrecord": [3, 368], "videorecord": [3, 11, 333, 368, 377, 383, 384, 387], "csvlogger": [3, 11, 333, 335, 368, 376, 383, 384, 387], "wandblogg": [3, 368, 383], "tensorboardlogg": [3, 362, 368, 383], "tag": [3, 7, 11, 333, 335, 337, 340, 366, 383, 384, 387], "mp4": [3, 333, 335, 337, 384, 387], "video_format": [3, 333, 335, 337, 384, 387], "whc": 3, "cwh": 3, "exp": [3, 237, 282], "al": [3, 24, 106, 108, 156, 167, 206, 394], "pong": [3, 61, 121, 167, 394], "v5": [3, 106, 108, 121, 156, 167, 394], "cach": [3, 41, 43, 54, 61, 63, 64, 65, 67, 68, 69, 70, 80, 87, 103, 107, 123, 124, 130, 131, 142, 152, 155, 169, 187, 191, 204, 344, 390], "grow": 3, "until": [3, 7, 21, 184, 186, 195, 377, 378, 384, 387, 388], "dumpi": 3, "tediou": [3, 379], "workspac": [3, 103, 107, 123, 124, 130, 131], "pixelrendertransform": [3, 368, 387], "stream": [3, 67], "alik": [3, 333], "envcreat": [3, 16, 22, 123, 130, 333, 362, 363, 366, 368, 375, 376, 393, 394], "render_mod": [3, 333, 389], "rgb_arrai": [3, 333, 387, 388, 389], "uncom": [3, 383], "line": [3, 7, 37, 61, 103, 107, 123, 124, 130, 131, 195, 376, 383, 387, 388, 394], "comment": [3, 372, 376, 393], "pixels_record": [3, 333], "close": [3, 16, 107, 120, 163, 283, 285, 298, 301, 333, 375, 376, 379, 386, 387, 389, 393], "mission": 3, "irrespect": [3, 272, 273], "dmcontrol": [3, 103, 107, 123, 124, 130, 131], "jumanji": [3, 103, 107, 112, 113, 123, 124, 130, 131], "special": [3, 368, 370, 375, 378, 394], "framework": [3, 4, 9, 22, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 220, 393, 394], "Its": [3, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 193, 195, 272, 319], "success": [3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 146, 186, 263, 306, 376, 382, 384, 389, 391, 393], "foundat": [3, 5, 125, 126, 377, 388], "inspir": [3, 389], "gone": [3, 4, 5, 266], "hard": [3, 7, 93, 101, 102, 123, 296, 376, 394], "prefer": [3, 14, 15, 17, 20, 23, 24, 42, 45, 50, 51, 170, 178, 301, 306, 349, 370, 377, 387, 388, 391], "maintain": [3, 5, 9, 28, 389], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 376, 377, 378, 382, 387, 388, 389, 391, 394], "decor": [3, 8, 12, 138, 299, 315, 316, 317, 318, 393], "relev": [3, 47, 315, 316, 317, 318, 319, 342, 389], "gym_backend": [3, 138, 368], "env1": [3, 386], "venv": 3, "python3": [3, 6, 7, 10, 387, 394], "site": [3, 6, 7, 68, 138, 387, 394], "env2": [3, 386], "_env": [3, 6, 106, 394], "classic_control": 3, "pendulumenv": [3, 368, 389], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 115, 135], "handi": [3, 103, 107, 123, 124, 130, 131, 383], "side": [3, 4, 394], "v0": [3, 14, 15, 103, 107, 109, 112, 113, 114, 115, 123, 124, 130, 131, 150, 187, 193, 362, 394], "26": [3, 103, 107, 123, 124, 130, 131, 374, 376, 377, 388, 389, 390, 392], "fun": [3, 12, 138, 377, 387, 388], "reveal": 4, "bug": [4, 393], "curv": 4, "exploit": [4, 380], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 163, 387, 388, 390], "coeffici": [4, 24, 28, 47, 163, 388], "bonu": [4, 283, 285, 298, 301], "beta": [4, 42, 50, 79, 80, 290, 297, 298, 375, 376, 391, 393], "reduc": [4, 6, 29, 93, 182, 249, 368, 376, 387], "downstream": [4, 371, 375], "formul": [4, 387, 388], "ob": [4, 8, 23, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 87, 88, 93, 103, 107, 123, 124, 130, 131, 140, 142, 152, 153, 155, 165, 179, 185, 201, 204, 210, 211, 212, 213, 232, 233, 234, 270, 277, 284, 286, 291, 297, 302, 304, 306, 307, 315, 316, 317, 318, 376, 386, 387, 389, 391, 393, 394], "rate": [4, 11, 61, 193, 314, 376, 377, 387, 388], "gradient": [4, 37, 103, 107, 123, 124, 130, 131, 187, 195, 223, 231, 236, 240, 249, 250, 283, 285, 286, 290, 291, 297, 298, 299, 301, 302, 303, 304, 306, 307, 314, 315, 316, 317, 318, 352, 375, 377, 387, 388, 389], "easier": [4, 370, 375], "local": [4, 7, 10, 16, 21, 37, 80, 87, 103, 107, 123, 124, 130, 131, 187, 195, 232, 233, 242, 251, 313, 340, 342, 383, 384, 387, 388], "optima": 4, "sens": [4, 41, 43, 46, 382, 389], "product": [4, 9, 220, 221, 224, 225, 364, 365], "sum": [4, 21, 36, 40, 93, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 145, 177, 230, 231, 249, 251, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 297, 298, 300, 301, 302, 303, 304, 306, 307, 314, 321, 371, 375, 376, 377, 378, 381, 384, 387, 388, 389, 394], "stat": [4, 165, 193, 356, 366, 376, 377], "w": [4, 82, 146, 148, 151, 173, 185, 220, 267, 268, 335, 376, 378, 391], "yield": [4, 16, 21, 37, 103, 107, 123, 124, 130, 131, 195, 299, 375, 381], "insight": 4, "auxiliari": [4, 381], "credit": 4, "futur": [4, 23, 37, 41, 43, 46, 71, 72, 78, 103, 107, 123, 124, 130, 131, 169, 187, 191, 195, 227, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 369, 393], "past": [4, 266, 376, 391], "spars": [4, 378], "intermedi": [4, 14, 15, 145, 222, 226, 262, 375, 390], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 375], "discov": 4, "score": [4, 47], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 393], "select": [4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 117, 118, 125, 126, 132, 133, 140, 142, 143, 145, 146, 147, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 168, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 193, 195, 196, 206, 222, 226, 261, 270, 351, 375, 379, 391], "fall": [4, 63], "explicit": [4, 12, 54, 82, 391], "mechan": [4, 37, 103, 107, 123, 124, 130, 131, 187, 195, 376, 381, 389], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 103, 107, 123, 124, 130, 131, 224, 290, 297, 377, 388], "addition": 4, "timestep": [4, 47, 63, 174, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 387, 388], "realli": 4, "huge": [4, 233, 378], "std": [4, 165, 193, 237, 241, 258, 259, 375, 394], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 374, 378, 379, 381, 382, 383, 384, 385, 386, 390, 391, 392], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 107, 123, 124, 130, 131, 145, 165, 169, 183, 186, 187, 189, 194, 195, 206, 220, 221, 224, 225, 229, 232, 233, 234, 235, 236, 258, 259, 263, 264, 266, 267, 268, 283, 284, 286, 287, 289, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 366, 370, 371, 375, 376, 378, 379, 380, 382, 387, 389, 394], "estim": [4, 61, 80, 87, 88, 156, 163, 210, 249, 255, 256, 257, 283, 284, 285, 286, 287, 289, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "unseen": 4, "extrins": 4, "wrong": [4, 80, 87], "bonus": 4, "denser": 4, "prior": [4, 245, 294, 388], "freshli": 4, "drop": [4, 86, 88, 204], "meant": [4, 37, 119], "encourag": [4, 123, 375, 376, 391], "measur": [4, 74, 75, 95, 99, 100, 112, 113, 377, 382], "novelti": 4, "revisit": 4, "previous": [4, 377, 394], "diminish": 4, "decreas": [4, 24, 380], "ideal": [4, 165, 389], "down": [4, 14, 15, 16, 17, 371, 378, 379], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 376, 377, 378, 381, 382, 387, 388, 389, 393, 394], "distil": 4, "nois": [4, 194, 236, 253, 267, 268, 302, 306, 307, 348, 366, 375, 387], "exploratori": [4, 283, 285, 298, 301], "misalign": 4, "trade": [4, 380], "unavoid": 4, "divers": [4, 123, 130], "bootstrap": [4, 292, 316, 322, 323, 375, 378], "noisi": [4, 235, 236, 253, 370], "unstabl": [4, 223, 249, 250], "inher": 4, "stochast": [4, 163, 218, 236, 238, 245, 284, 288, 290, 291, 297, 300, 302, 304, 370, 377, 380, 388], "enemi": 4, "pomdp": [4, 391], "loos": [4, 370, 376, 377], "nonexist": 4, "architectur": [4, 214, 381, 387, 388], "sequenc": [4, 14, 15, 16, 17, 24, 27, 33, 35, 36, 42, 44, 45, 47, 52, 54, 67, 70, 73, 82, 83, 85, 91, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 136, 144, 145, 146, 147, 148, 151, 152, 154, 155, 159, 161, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 182, 184, 185, 186, 193, 207, 208, 215, 217, 220, 224, 227, 230, 231, 232, 233, 240, 243, 247, 260, 274, 275, 288, 334, 335, 347, 348, 349, 351, 352, 370, 375, 377, 378, 386, 387, 388, 394], "lstm": [4, 183, 225, 226, 237], "rel": [4, 82, 183, 215, 248, 375, 376, 387, 388, 391], "tend": 4, "stabl": [4, 9, 10, 122], "compens": 4, "descent": [4, 236], "minimum": [4, 123, 130, 175, 218, 237, 248, 249, 250, 276, 279, 282, 284, 291, 299, 300, 304, 343, 375, 377, 384, 387, 388], "manual": [4, 11, 18, 20, 21, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 108, 375, 378, 391], "deviat": [4, 165, 193, 206, 218, 229, 235, 236, 241, 258, 259, 301, 306, 307, 375, 380, 388], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 80, 87, 142, 220, 221, 224, 225, 379, 380, 381, 382, 383, 384], "stabil": [4, 160, 283, 285, 298, 301, 303], "stage": [4, 375, 389], "never": [4, 14, 15, 17, 80, 382], "prevent": [4, 25, 27, 29, 33, 35, 36, 40, 72, 193, 223, 249, 250, 283, 285, 298, 301, 303, 350, 383, 391], "entir": [4, 67, 103, 107, 123, 124, 130, 131, 232, 377, 379, 389, 391], "submit": [4, 106, 143, 369, 393], "system": [4, 5, 72, 377, 387, 388, 389], "adequ": [4, 197, 377, 387, 388], "infeas": 4, "allevi": [4, 370], "prune": 4, "fire": [4, 37, 103, 107, 123, 124, 130, 131, 195], "illeg": 4, "move": [4, 37, 69, 103, 107, 123, 124, 130, 131, 139, 150, 153, 169, 183, 186, 187, 189, 191, 193, 195, 204, 227, 272, 350, 375, 376, 378, 379, 393, 394], "chess": 4, "combin": [4, 31, 186, 306, 376, 383, 391], "grasp": 4, "top": [4, 93, 99, 100, 112, 113, 151, 206, 229, 380], "wherein": 4, "cumul": [4, 177, 182, 206, 321, 377], "q": [4, 9, 103, 107, 123, 124, 130, 131, 210, 211, 212, 213, 216, 217, 219, 242, 243, 251, 257, 262, 270, 271, 284, 286, 287, 289, 290, 291, 292, 296, 297, 302, 304, 306, 307, 313, 368, 375, 381], "flow": [4, 375, 377, 387, 388, 389, 391], "reparameter": [4, 215, 231, 240], "soft": [4, 296, 304, 305, 387], "critic": [4, 8, 255, 265, 283, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 375, 381], "clip": [4, 47, 149, 175, 283, 285, 298, 301, 303, 306, 307, 352, 377, 388, 389], "oppos": [4, 54], "incorrect": 4, "thought": [4, 103, 107, 123, 124, 130, 131], "bound": [4, 21, 26, 27, 37, 103, 107, 123, 124, 130, 131, 149, 164, 193, 195, 244, 245, 254, 261, 262, 268, 269, 270, 271, 272, 273, 276, 306, 307, 370, 375, 376, 377, 387, 394], "region": 4, "squash": [4, 378, 393], "tanh": [4, 207, 208, 220, 221, 223, 224, 225, 227, 233, 248, 249, 250, 276, 377, 380, 387, 388, 389, 390, 393], "prob": [4, 230, 231, 240, 377, 388], "rememb": [4, 387], "remap": 4, "origin": [4, 8, 41, 43, 46, 47, 111, 153, 154, 163, 169, 187, 191, 195, 220, 269, 272, 273, 284, 296, 297, 299, 301, 302, 304, 306, 307, 375, 386, 389, 394], "histor": 5, "ceas": 5, "farama": [5, 65, 114, 115, 125, 126, 377, 389], "best": [5, 9, 111, 222, 226, 387, 388, 391, 393], "gymwrapp": [5, 103, 107, 123, 124, 130, 131, 157, 178, 181, 192, 368, 377, 393, 394], "feel": [5, 369, 384, 393], "free": [5, 7, 152, 155, 283, 294, 301, 372, 377, 384, 388, 393], "gladli": 5, "prepar": [6, 32, 64, 377], "conda": [6, 7, 369], "cmake": 6, "activ": [6, 7, 9, 207, 208, 214, 218, 227, 232, 233, 285, 298, 301, 370, 389, 393], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 64, 369], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 109], "y": [6, 7, 45, 122, 219, 232, 252, 375, 388, 391], "facebookresearch": [6, 64, 109], "subdirectori": 6, "verbos": [6, 384], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 58, 103, 107, 123, 124, 130, 131, 171, 180, 195, 299, 387, 388, 393, 394], "command": [6, 7, 10, 131, 377, 387, 388, 389, 394], "readm": [6, 7, 132], "md": [6, 7], "habitatenv": [6, 368], "_has_habitat": 6, "available_env": [6, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 394], "startswith": [6, 371, 375, 381], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 104, 299, 375], "env_nam": [6, 99, 101, 103, 106, 107, 109, 112, 114, 120, 123, 124, 127, 130, 131, 375, 377, 394], "llvmlite": 6, "config": [6, 7, 169, 191, 209, 214, 241, 356, 357, 358, 360, 363], "var": [6, 7, 37, 103, 107, 123, 124, 130, 131, 187, 195, 299, 304], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 261, 299], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 37, 103, 107, 123, 124, 130, 131, 187, 195, 299, 304, 391], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 103, 376, 384], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 63], "stand": [7, 31, 101, 102, 123, 130, 386, 389], "joint": [7, 376], "contact": [7, 44, 387], "engin": [7, 127, 389], "biomechan": 7, "graphic": 7, "anim": [7, 388], "area": 7, "demand": [7, 383, 394], "fast": [7, 9, 99, 100, 172, 204, 302, 375, 376, 377], "articul": 7, "acquir": [7, 377], "deepmind": [7, 8, 9, 67, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 156, 377, 379], "whomev": 7, "licenc": 7, "incorpor": [7, 103, 107, 123, 124, 130, 131, 258, 259, 263, 264, 267, 268, 306, 378, 380, 389], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 369], "tip": [7, 369], "glfw": [7, 375], "osmesa": 7, "egl": 7, "advic": [7, 67, 394], "sudo": [7, 369], "apt": [7, 388], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 255, 256, 257], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 25, 29, 40, 144, 217, 243, 261, 262, 270, 271, 287, 290, 291, 313], "mkdir": 7, "earlier": [7, 375, 377, 378, 387, 388, 391], "roboti": 7, "html": [7, 14, 15, 120, 122], "wget": 7, "mujoco210": 7, "tar": [7, 64], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 123, 130], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 41, 43, 54, 70], "bin": [7, 217, 262, 370], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 213, 269, 273, 375, 377, 391], "nvidia": [7, 111], "older": [7, 12], "hack": [7, 375], "adatp": 7, "script": [7, 64, 197, 362, 366, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "unnot": [7, 170], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 72, 376, 391], "troubleshoot": 7, "gl": 7, "h": [7, 82, 146, 148, 151, 173, 185, 220, 221, 222, 224, 225, 226, 229, 335, 376, 378, 391], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21], "directori": [7, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 74, 340, 342, 372, 375, 380, 383, 387], "devel": 7, "ubuntu": [7, 111], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 376, 378, 386], "libstdc": 7, "glibcxx_3": 7, "29": [7, 376, 389], "compil": [7, 23, 37, 80, 87, 88, 103, 107, 123, 124, 130, 131, 195, 220, 221, 224, 225], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 192, 377, 386], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 33, 37, 103, 107, 123, 124, 130, 131, 164, 187, 195, 304, 371, 394], "job": [7, 18, 19, 20, 22, 45, 391, 393], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 99, 100, 375, 376, 378, 389, 390], "114": [7, 389], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 389], "offscreenopenglcontext": 7, "opengl": [7, 387, 388], "global": [7, 37, 103, 107, 123, 124, 125, 126, 130, 131, 195, 242, 251, 269, 273, 313, 372, 375, 387, 388], "cuda_visible_devic": 7, "id": [7, 23, 47, 80, 82, 87, 88, 103, 106, 107, 123, 124, 130, 131, 267, 268, 302, 338, 342, 382, 391], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 387], "onscreen": 7, "101": [7, 389], "correctli": [7, 37, 103, 107, 123, 124, 130, 131, 195], "lgl": 7, "libegl": 7, "x11": [7, 388], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 372], "n_training_step": 8, "datapoint": [8, 54, 391], "n_data_per_train": 8, "no_grad": [8, 37, 103, 107, 123, 124, 130, 131, 163, 195, 220, 221, 224, 225, 315, 316, 317, 318, 377, 378, 388], "loss_fn": [8, 378, 381, 382, 393], "zero_grad": [8, 37, 103, 107, 123, 124, 130, 131, 195, 372, 375, 377, 378, 381, 384, 387, 388, 389], "backpropag": [8, 99, 100, 112, 113, 123, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 313, 381, 388, 389], "differenti": [8, 54, 99, 100, 163, 306, 315, 316, 317, 318, 378, 380, 381, 387, 388, 389], "denomin": 8, "artifact": 8, "numer": [8, 45, 107, 193, 223, 249, 250, 254, 261, 262, 269, 270, 271, 272, 273, 350, 377, 391, 394], "misconcept": 8, "freed": 8, "appear": [8, 11, 40, 61, 67, 80, 87, 88, 389, 391], "compuat": 8, "fix": [8, 28, 123, 183, 284, 300, 304, 376, 384, 389, 394], "retain_graph": [8, 99, 100], "discuss": [8, 9, 382, 387, 388], "inplac": [8, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 195, 375], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 247, 251, 252, 258, 259, 260, 262, 263, 266, 267, 268, 269, 271, 272, 273, 276, 277, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 315, 316, 317, 318, 319, 371, 389, 393], "submodul": [8, 37, 103, 107, 123, 124, 130, 131, 135, 183, 195, 222, 226, 280, 299], "param": [8, 37, 47, 103, 107, 119, 123, 124, 130, 131, 143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195, 215, 217, 234, 248, 260, 269, 272, 275, 299, 309, 312, 315, 316, 317, 318, 319, 375, 384, 387, 388, 389, 390, 393], "grad": [8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 195, 375, 377], "whose": [8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 237, 242, 272], "neg": [8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 50, 79, 80, 146, 159, 170, 188, 293, 315, 317, 318, 371, 377, 387, 388, 389], "factor": [8, 11, 24, 37, 174, 195, 223, 236, 249, 250, 258, 259, 263, 264, 267, 268, 284, 289, 292, 293, 295, 305, 321, 375, 376, 380, 384, 387, 388, 391, 394], "fit": [8, 12, 165, 183, 371, 372, 375], "bottlneck": 8, "brax": [8, 99, 100, 103, 107, 123, 124, 130, 131, 172, 379, 394], "jax": [8, 12, 99, 100, 112, 113], "improperli": 8, "underli": [8, 103, 107, 123, 124, 130, 131, 299, 379, 381, 383, 389], "tedeiou": 8, "priorit": [8, 42, 50, 79, 80, 286, 287, 289, 290, 291, 297, 302, 304, 306, 307, 375, 376, 382], "amount": [8, 267, 268, 376, 391], "costli": [8, 389], "constitut": [8, 376, 388, 389], "profil": 8, "frequent": [8, 391], "program": [8, 290, 297, 394], "functorch": [8, 10], "incl": 8, "suit": [8, 102, 377, 379, 393, 394], "mujoco_instal": 8, "valueerror": [8, 37, 103, 107, 123, 124, 130, 131, 195], "bad": 8, "fds_to_keep": 8, "expand": [8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 87, 88, 143, 272, 275, 284, 297, 299, 302, 304, 306, 307, 387, 388, 389, 391, 393], "new_shap": 8, "permut": [8, 86, 167, 393, 394], "idea": [9, 302, 372, 378, 380, 387, 388], "introductori": 9, "intro": [9, 377, 378], "dai": [9, 393], "2022": [9, 10, 389, 393], "spin": [9, 101, 102], "deep": [9, 146, 210, 211, 212, 213, 216, 267, 268, 283, 296, 304, 305, 375, 387], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 380], "summari": [9, 165, 193, 375, 376, 377, 378], "reddit": 9, "reagent": 9, "orient": [9, 69, 394], "baselines3": 9, "tf": 9, "bandit": [9, 122], "tensorflow": [9, 230, 231], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 384], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 393], "grade": 9, "factori": [9, 52, 375], "cherri": 9, "jaxrl": 9, "mbrl": [9, 119, 370], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 389], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 377, 378, 387, 388], "notebook": [10, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "24": [10, 68, 88, 106, 120, 121, 266, 375, 376, 377, 378, 387, 389], "pip3": [10, 375, 377, 378, 387, 388], "url": [10, 109], "org": [10, 14, 15, 24, 42, 64, 65, 67, 69, 79, 80, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 122, 127, 132, 133, 146, 169, 189, 209, 210, 211, 212, 213, 214, 217, 218, 219, 224, 229, 230, 231, 236, 238, 239, 242, 244, 245, 251, 262, 267, 268, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 301, 303, 304, 305, 306, 315, 320, 328, 367, 385, 390], "whl": 10, "u": [10, 66, 220, 221, 224, 225, 389], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 377, 387, 388, 389, 391], "power": [11, 376], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 368], "ultim": [11, 223, 249, 250], "ffmpeg": 11, "whatev": [11, 371, 375], "fed": [11, 388, 391], "feed": [11, 169, 191, 299, 370, 375, 387, 388, 391], "suppos": [11, 123, 348, 372, 394], "snippet": [11, 169, 189, 375], "gave": 11, "extrem": [11, 123, 130, 283, 285, 298, 301, 303], "blurri": 11, "stitch": 11, "exp_nam": [11, 335, 336, 337, 340, 341, 342, 362, 376, 383, 384], "my_exp": [11, 383], "pixels_onli": [11, 101, 102, 106, 108, 109, 127, 375, 376, 383, 384, 393, 394], "my_video": [11, 383], "record_env": [11, 383, 384], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 257, 370], "module_nam": [12, 299], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 82, 93, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 146, 156, 162, 163, 169, 173, 181, 182, 187, 189, 191, 192, 193, 195, 198, 202, 205, 206, 216, 217, 222, 226, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 251, 254, 261, 262, 269, 270, 271, 272, 273, 276, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 313, 314, 315, 316, 317, 318, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 360, 366, 376, 377], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 222, 226, 393], "longer": [12, 376, 384, 387, 388, 391], "x": [12, 23, 27, 37, 45, 47, 67, 88, 163, 185, 208, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 232, 233, 252, 261, 269, 270, 279, 282, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 352, 375, 387, 389, 391, 393], "23": [12, 68, 88, 376, 377, 389], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 68, 99, 100, 107, 112, 113, 225, 282, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 375, 376, 377, 378, 384, 387, 388, 389, 391, 394], "otherwis": [12, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 88, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 146, 147, 154, 165, 182, 183, 184, 187, 193, 195, 220, 223, 224, 232, 233, 249, 250, 261, 270, 276, 284, 294, 299, 300, 304, 315, 317, 318, 348, 349, 372, 375, 376, 377, 378, 389, 394], "classmethod": [12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 123, 124, 130, 131, 189, 209, 241], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 34, 35, 37, 41, 43, 45, 46, 68, 72, 80, 87, 88, 103, 104, 105, 106, 107, 108, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 134, 163, 183, 187, 192, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 219, 227, 241, 269, 273, 304, 339, 340, 348, 357, 358, 364, 365, 366, 375, 376, 377, 391, 394], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 104, 123, 130, 375, 393], "device_typ": [14, 16, 17, 29, 35, 39, 40, 207, 208, 209, 210, 211, 212, 213, 219, 227, 232, 233, 235, 236, 241], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 376], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 376], "create_env_kwarg": [14, 15, 16, 17, 21, 104, 120, 123, 130, 375, 394], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 37, 174, 376, 391], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 269, 299, 348, 375, 376, 377, 378, 380, 387, 393], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 199, 203, 269, 273, 348], "exploration_mod": [14, 16, 17, 18, 19, 20, 368, 370], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 41, 43, 46, 123, 130], "num_sub_thread": [14, 15, 17, 123, 130], "set_trunc": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131], "use_buff": [14, 15, 16, 123, 130], "datacollector": [14, 15, 16, 17, 37, 273, 301, 377, 382, 391], "recept": 14, "safe": [14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 254, 259, 261, 262, 268, 269, 270, 271, 272, 273, 275, 370, 393], "sota": [14, 15, 119, 160, 303, 343, 357, 375, 376, 393], "guard": [14, 15], "doc": [14, 15, 52, 109, 112, 113, 122, 127, 342, 376, 387, 388, 391, 394], "env_mak": [14, 15, 16, 21, 362, 394], "2000": [14, 15, 16, 37, 54, 110, 335, 377, 391], "50": [14, 15, 16, 21, 44, 47, 61, 69, 87, 88, 117, 118, 195, 374, 375, 376, 377, 378, 388, 389, 391, 392], "shutdown": [14, 15, 16, 17, 21, 143, 375, 393], "del": [14, 15, 16, 375, 376, 377, 386, 387, 393, 394], "int64": [14, 15, 16, 23, 25, 29, 30, 35, 36, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 103, 107, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 139, 143, 156, 167, 174, 181, 217, 243, 261, 262, 267, 268, 269, 270, 271, 370, 377, 378, 379, 380, 382, 383, 389, 391, 393], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 145, 252, 261, 266, 270, 378], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 54], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 376], "divis": [14, 15, 16, 17, 18, 19, 20, 61, 67, 80, 87, 88, 388], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 107, 142, 183, 192, 226, 378, 389, 390], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 354, 376], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 70, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 152, 155, 163, 169, 183, 186, 187, 189, 191, 193, 195, 272, 387, 394], "span": [14, 15, 16, 17, 18, 19, 20, 21, 67, 80, 87], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 37, 195, 266, 376, 377, 387, 388], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 47, 342, 370, 387, 388, 389], "round": [14, 15, 16, 17, 18, 19, 20, 21, 61], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 37, 65, 103, 107, 123, 124, 130, 131, 195], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 192, 393], "ratio": [14, 15, 17, 47, 375, 377], "finish": [14, 15, 17, 21, 107, 174, 394], "rest": [14, 15, 17, 370, 377, 378, 387, 389, 393], "earli": [14, 15, 17, 37, 107, 181, 393], "safeti": [14, 15, 17, 119, 123, 130], "harm": [14, 15, 17, 123, 130], "exclus": [14, 15, 57, 58, 61, 67, 80, 87, 88, 143, 157, 159, 220, 222, 224, 226, 230, 231, 261, 262, 270, 271, 305, 306, 307, 315, 316, 317, 318, 319, 342, 366, 370], "add_truncated_kei": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 187], "ordereddict": [14, 15, 16, 17, 21, 37, 103, 107, 123, 124, 130, 131, 187, 193, 195, 304, 376], "form": [14, 15, 17, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 103, 107, 123, 124, 130, 131, 193, 195, 220, 222, 224, 226, 282, 283, 285, 298, 301, 352, 370, 380, 388], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 103, 107, 123, 124, 130, 131, 187], "integ": [14, 15, 16, 17, 23, 35, 36, 37, 40, 47, 56, 80, 87, 88, 89, 103, 107, 123, 124, 130, 131, 139, 142, 156, 160, 165, 181, 207, 208, 227, 232, 233, 290, 297, 304, 391], "increment": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 165, 298], "env_fn": [14, 15, 16, 17, 104, 364, 365], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 87, 88, 212, 213, 389], "out_se": [14, 15, 16, 17, 394], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 82, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 143, 150, 169, 171, 180, 183, 186, 187, 188, 190, 191, 194, 195, 206, 207, 208, 210, 211, 212, 213, 216, 219, 222, 223, 226, 227, 228, 229, 232, 233, 234, 240, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 313, 314, 315, 316, 317, 318, 319, 333, 335, 339, 340, 342, 345, 352, 357, 358, 363, 364, 365, 371, 377, 388], "return_same_td": 16, "interruptor": 16, "cautious": [16, 301], "whole": [16, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 187, 195, 269, 304, 343, 375, 377], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 380], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 352], "respect": [18, 19, 20, 37, 103, 107, 123, 124, 130, 131, 144, 150, 152, 155, 169, 170, 179, 183, 186, 187, 189, 191, 195, 220, 224, 232, 245, 272, 277, 283, 285, 298, 301, 303, 315, 317, 318, 347, 377, 378, 387, 388], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 369, 376, 377, 380, 383, 386, 391], "fashion": [18, 20, 21, 41, 43, 46, 88], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 159], "seen": [18, 19, 20, 21, 27, 33, 103, 107, 123, 124, 130, 131, 371, 375, 376, 378, 381, 387, 388, 391], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 42, 45, 50, 51, 63, 103, 107, 123, 124, 130, 131, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279, 375], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 389], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 375], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 40, 61, 269, 273], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 364, 365, 375, 376], "coordin": [21, 151], "init": [21, 37, 103, 107, 123, 124, 130, 131, 193, 195, 232, 233, 234, 342, 376, 377], "autodetect": 21, "similarli": [21, 37, 86, 91, 103, 107, 123, 124, 130, 131, 195, 232, 274, 275, 290, 297, 394], "num_cpu": 21, "num_gpu": 21, "1024": [21, 214, 376, 391], "equat": [21, 67, 107, 193, 267, 268, 282, 285, 305, 377, 379, 389], "exce": [21, 391], "indefinit": [21, 60], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 352, 375, 377, 378], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 306, 381], "jump": [22, 379], "host": [22, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 209, 214, 241, 260], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 48, 53, 54, 55, 56, 80, 87, 88, 103, 107, 123, 124, 130, 131, 136, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 159, 161, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 193, 195, 196, 204, 205, 217, 243, 258, 259, 260, 263, 264, 266, 267, 268, 273, 287, 313, 333, 335], "as_nest": 23, "durat": [23, 388], "meta": [23, 41, 43, 46, 53, 63, 105, 109, 283, 285, 298, 301, 303, 372, 377, 387, 388, 391], "aren": [23, 182, 378], "deprec": [23, 37, 103, 107, 123, 124, 130, 131, 187, 195, 198, 202, 264, 283, 285, 287, 290, 291, 292, 297, 298, 301, 302, 303, 304, 313, 315, 316, 317, 318, 323, 394], "eventu": [23, 242, 378, 389], "supersed": 23, "recov": [23, 63, 65, 67, 68, 69, 87, 88, 259, 264, 268, 274, 290, 297, 386], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 106, 108], "stride": [23, 37, 103, 107, 123, 124, 130, 131, 195, 207, 208, 210, 211, 219, 232, 376, 387, 393], "jag": 23, "focu": [23, 375, 376, 377, 380, 381, 382, 387], "team": [23, 387, 388, 393], "cat": [23, 277, 284, 286, 297, 302, 304, 306, 307, 387, 391, 393], "arang": [23, 29, 40, 80, 139, 217, 231, 261, 343, 370, 391], "obs_": 23, "trajectory_id": 23, "int32": [23, 51, 61, 67, 87, 112, 113, 131, 201, 266, 391], "data_split": 23, "got": [23, 382], "init_kl_coef": 24, "horizon": [24, 117, 118, 132, 133, 206, 229, 377], "kl": [24, 28, 47, 163, 294, 298], "describ": [24, 53, 147, 186, 196, 248, 249, 287, 338, 371, 375, 377, 387, 388, 389, 394], "ziegler": 24, "et": [24, 206], "relax": [24, 333], "penalti": [24, 47, 298], "strai": [24, 47], "greater": [24, 61, 80, 87, 88, 222, 226, 375, 376, 393], "increas": [24, 72, 184, 267, 268, 387, 388], "pull": [24, 391], "toward": [24, 191], "aggress": 24, "kl_coef": [24, 28, 47], "arxiv": [24, 42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 146, 169, 189, 209, 210, 211, 212, 213, 214, 217, 218, 219, 224, 229, 236, 238, 239, 242, 244, 245, 251, 262, 267, 268, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 301, 304, 305, 306, 315, 320, 328, 390], "pdf": [24, 146, 209, 210, 211, 212, 213, 217, 262, 267, 268, 292, 302, 305, 306, 315, 320, 328], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 387, 388], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 163], "newest": 24, "int8": [25, 103, 116, 125, 126, 144], "assert_is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "clear_device_": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "op": [25, 26, 29, 35, 36, 39, 40, 53, 55, 56, 164, 192, 258, 259, 263, 335, 354], "is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 394], "encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 51, 53, 55, 56, 99, 100, 103, 106, 108, 109, 112, 113, 120, 121, 127, 139, 154, 239, 240, 244, 282, 370, 376, 377, 378, 380, 389, 391], "ndarrai": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 267, 268, 276, 333, 387], "ignore_devic": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "np": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 276, 333, 387, 389], "complient": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "singleton": [25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 207, 208, 227, 246, 247], "start_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "end_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "implements_for_spec": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "torch_funct": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "tensor_to_index": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "project": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 154, 224, 254, 258, 259, 261, 262, 267, 268, 269, 270, 271, 272, 273, 342, 370, 393, 394], "rand": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 112, 113, 119, 140, 143, 152, 155, 171, 196, 206, 229, 269, 283, 284, 286, 287, 289, 290, 291, 297, 299, 301, 302, 304, 306, 307, 389, 393, 394], "unbound": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 183, 201, 389, 391], "to_numpi": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131], "transformed_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 186, 187, 237, 248, 366], "check_spec_encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "to_one_hot": [25, 29, 35], "hot": [25, 29, 35, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 154, 217, 240, 243, 261, 262, 270, 271, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 378], "to_one_hot_spec": [25, 29, 35], "onehotdiscretetensorspec": [25, 29, 217, 243, 261, 270, 287, 289, 290, 291, 313, 368, 370, 380], "convert": [25, 29, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 152, 155, 169, 183, 186, 187, 189, 191, 193, 195, 272, 282, 299, 375, 376, 377, 389, 391], "type_check": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "update_mask": [25, 29, 35, 36, 40], "outcom": [25, 29, 35, 36, 40, 215, 248, 299, 387], "disabl": [25, 29, 35, 36, 37, 40, 103, 107, 123, 124, 130, 131, 187, 195, 223, 250, 333, 375, 387], "unmask": [25, 29, 35, 36, 40], "ts": [25, 29, 35, 36, 40], "upper": [26, 85, 164], "unnam": 27, "constraint": [27, 119, 377, 388], "pixels_spec": 27, "observation_vector_spec": 27, "composite_spec": 27, "observation_vector": [27, 147, 375], "td_project": 27, "is_empti": [27, 33, 389], "include_nest": [27, 33], "leaves_onli": [27, 33], "is_leaf": [27, 33], "_compositespecitemsview": [27, 33], "children": [27, 33, 37, 103, 107, 123, 124, 130, 131, 195], "_compositespeckeysview": [27, 33], "reflect": [27, 33, 108, 125, 126, 192, 204, 299, 355, 376, 377, 378, 388], "lock_": [27, 33], "recurs": [27, 33, 37, 57, 58, 103, 107, 123, 124, 130, 131, 195, 299], "succeed": [27, 33], "selected_kei": [27, 33, 178, 375], "unlock_": [27, 33], "unlock": [27, 33, 41, 43, 46], "_compositespecvaluesview": [27, 33], "multipli": [28, 220, 224, 284, 285, 291, 298, 300, 301, 302, 304, 350, 375, 387], "calcul": [28, 47, 174, 220, 283, 285, 289, 298, 301, 303, 306], "onehottensorspec": [29, 99, 100, 106, 108, 109, 112, 113, 120, 121, 127], "action_valu": [29, 40, 216, 217, 243, 261, 262, 270, 271, 291, 299, 313, 370, 378, 380, 384], "argmax": [29, 103, 107, 123, 124, 130, 131, 217, 243, 262, 271, 380], "chosen_action_valu": [29, 40, 242, 243, 251, 270, 271, 313, 370, 378, 380], "shift_kei": [30, 32, 38, 48], "is_full_kei": [30, 32, 38, 48], "is_ful": [30, 32, 38, 48], "tempfil": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 362, 375, 376, 387, 391], "register_save_hook": [30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "temporarydirectori": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 375, 376, 387, 391], "tmpdir": [30, 42, 45, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 375, 376, 387], "rb_load": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "register_load_hook": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "persist": [31, 37, 103, 107, 123, 124, 130, 131, 187, 195, 204, 304], "filesystem": [31, 391], "ted2nest": [32, 368], "drawn": [33, 34, 183, 263, 269, 273, 377, 387, 388], "heterogen": [33, 34, 116, 125, 126, 197, 232, 233, 375, 376], "thrown": [34, 37, 103, 107, 123, 124, 130, 131, 195, 391], "nvec": [35, 36], "remove_singleton": 35, "cardin": [35, 36, 217, 243, 261, 262, 271, 377], "ax": [35, 235, 236, 387], "m": [35, 37, 103, 107, 123, 124, 130, 131, 154, 195, 273, 370, 376, 389], "multionehotdiscretetensorspec": [35, 287, 290, 291, 313, 368], "neither": [35, 36, 67, 389], "use_regist": [36, 40], "to_categor": [36, 40], "to_categorical_spec": [36, 40], "multidiscretetensorspec": [36, 368], "gamma": [37, 174, 195, 229, 283, 284, 286, 287, 289, 291, 292, 293, 295, 297, 299, 301, 302, 303, 304, 306, 307, 308, 309, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 362, 371, 375, 376, 377, 387, 388, 393], "sutton": [37, 371, 387, 388], "1988": 37, "tempor": [37, 222, 226, 229, 316, 317, 322, 323], "44": [37, 375, 376, 377, 389, 390], "discount": [37, 67, 104, 174, 195, 284, 289, 292, 293, 295, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 371, 376, 377, 387, 388], "ahead": [37, 195, 394], "bias": [37, 220, 221, 224, 225, 279, 371, 375], "mitig": 37, "pleas": [37, 65, 103, 106, 107, 123, 124, 125, 126, 130, 131, 143, 146, 184, 187, 195, 232, 233, 234, 304, 369], "multisteptransform": [37, 368], "99": [37, 174, 193, 229, 295, 309, 314, 321, 362, 375, 376, 377, 381, 384, 387, 388, 389, 390, 393], "add_modul": [37, 103, 107, 123, 124, 130, 131, 195], "child": [37, 103, 107, 123, 124, 130, 131, 195, 376], "fn": [37, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 195, 237, 364, 365], "init_weight": [37, 103, 107, 123, 124, 130, 131, 195], "fill_": [37, 103, 107, 123, 124, 130, 131, 195, 376, 378, 394], "net": [37, 103, 107, 123, 124, 130, 131, 195, 211, 213, 216, 219, 233, 283, 284, 291, 297, 301, 302, 303, 304, 362, 376, 389, 390, 393], "in_featur": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 207, 208, 210, 211, 212, 213, 219, 227, 232, 233, 235, 236, 255, 272, 280, 287, 289, 380, 381, 393], "out_featur": [37, 103, 107, 119, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 206, 207, 208, 210, 211, 212, 213, 218, 219, 222, 226, 227, 229, 232, 233, 235, 236, 255, 261, 272, 280, 287, 289, 370, 375, 378, 380, 381, 384, 393], "bia": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 222, 224, 225, 226, 227, 233, 235, 236, 237, 263, 264, 267, 268, 272, 279, 281, 282, 299, 304, 371, 375, 376, 377, 378, 388, 393], "requires_grad": [37, 99, 100, 103, 107, 123, 124, 130, 131, 163, 187, 195, 304], "bfloat16": [37, 103, 107, 123, 124, 130, 131, 195], "datatyp": [37, 103, 107, 123, 124, 130, 131, 195, 391], "member": [37, 103, 107, 123, 124, 130, 131, 195, 299, 335], "xdoctest": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 299, 304], "buf": [37, 103, 107, 123, 124, 130, 131, 195], "20l": [37, 103, 107, 123, 124, 130, 131, 195, 299], "1l": [37, 103, 107, 123, 124, 130, 131, 195, 299], "5l": [37, 103, 107, 123, 124, 130, 131, 195, 299], "__call__": [37, 44, 103, 107, 123, 124, 130, 131, 195, 273, 372, 394], "doubl": [37, 55, 103, 107, 123, 124, 130, 131, 150, 152, 153, 155, 169, 183, 186, 187, 189, 191, 195, 272, 287, 292, 296, 302, 305, 313, 375, 376, 377, 378, 394], "eval": [37, 103, 107, 123, 124, 130, 131, 187, 193, 195, 375, 376, 377], "evalu": [37, 103, 107, 117, 118, 123, 124, 130, 131, 187, 195, 215, 230, 231, 240, 250, 302, 357, 358, 376, 377, 384], "dropout": [37, 103, 107, 123, 124, 130, 131, 187, 195, 220, 222, 224, 226, 227, 378], "batchnorm": [37, 103, 107, 123, 124, 130, 131, 187, 195], "comparison": [37, 103, 107, 123, 124, 130, 131, 187, 195, 299, 375, 376], "similar": [37, 41, 43, 45, 46, 67, 103, 107, 123, 124, 125, 126, 130, 131, 150, 169, 183, 186, 187, 189, 190, 191, 193, 195, 255, 257, 269, 272, 273, 371, 375, 376, 377, 378, 380, 381, 382, 383, 389, 391, 394], "extra_repr": [37, 103, 107, 123, 124, 130, 131, 195], "nontermin": 37, "original_reward": 37, "newli": [37, 103, 107, 123, 124, 130, 131], "OR": 37, "get_buff": [37, 103, 107, 123, 124, 130, 131, 195], "get_submodul": [37, 103, 107, 123, 124, 130, 131, 195], "qualifi": [37, 103, 107, 123, 124, 130, 131, 195], "referenc": [37, 103, 107, 123, 124, 130, 131, 195], "attributeerror": [37, 103, 107, 123, 124, 130, 131, 195, 387], "resolv": [37, 103, 107, 123, 124, 130, 131, 195], "someth": [37, 103, 107, 116, 123, 124, 130, 131, 195, 369, 376, 377, 389, 394], "get_extra_st": [37, 103, 107, 123, 124, 130, 131, 193, 195], "set_extra_st": [37, 103, 107, 123, 124, 130, 131, 193, 195], "picklabl": [37, 103, 107, 123, 124, 130, 131, 193, 195], "pickl": [37, 103, 107, 123, 124, 130, 131, 193, 195], "get_paramet": [37, 103, 107, 123, 124, 130, 131, 195], "net_b": [37, 103, 107, 123, 124, 130, 131, 195], "net_c": [37, 103, 107, 123, 124, 130, 131, 195], "conv": [37, 103, 107, 123, 124, 130, 131, 195, 207, 208, 376], "conv2d": [37, 103, 107, 123, 124, 130, 131, 195, 208, 210, 211, 219, 232, 393], "kernel_s": [37, 103, 107, 123, 124, 130, 131, 195, 207, 208, 210, 211, 219, 232, 238, 376, 393], "diagram": [37, 103, 107, 123, 124, 130, 131, 195], "degre": [37, 103, 107, 123, 124, 130, 131, 195], "named_modul": [37, 103, 107, 123, 124, 130, 131, 195], "o": [37, 103, 107, 123, 124, 130, 131, 195, 225], "half": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 375], "ipu": [37, 103, 107, 123, 124, 130, 131, 195], "strict": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 195, 304], "descend": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "get_swap_module_params_on_convers": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "enforc": [37, 86, 103, 107, 123, 124, 130, 131, 187, 195, 274, 304, 389], "preserv": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "missing_kei": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "unexpected_kei": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "namedtupl": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "l": [37, 103, 107, 123, 124, 130, 131, 195, 220, 224, 314, 377, 389], "idx": [37, 103, 107, 123, 124, 130, 131, 195], "mtia": [37, 103, 107, 123, 124, 130, 131, 195], "named_buff": [37, 103, 107, 123, 124, 130, 131, 195], "remove_dupl": [37, 103, 107, 123, 124, 130, 131, 195, 299], "prepend": [37, 103, 107, 123, 124, 130, 131, 195, 299], "running_var": [37, 103, 107, 123, 124, 130, 131, 195], "named_children": [37, 103, 107, 123, 124, 130, 131, 195], "conv4": [37, 103, 107, 123, 124, 130, 131, 195], "conv5": [37, 103, 107, 123, 124, 130, 131, 195], "memo": [37, 103, 107, 123, 124, 130, 131, 195], "named_paramet": [37, 103, 107, 123, 124, 130, 131, 163, 195, 299], "register_backward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "removablehandl": [37, 103, 107, 123, 124, 130, 131, 195], "favor": [37, 103, 107, 123, 124, 130, 131, 195, 377], "register_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_buff": [37, 103, 107, 123, 124, 130, 131, 195], "running_mean": [37, 103, 107, 123, 124, 130, 131, 195], "alongsid": [37, 103, 107, 123, 124, 130, 131, 195, 383], "num_featur": [37, 103, 107, 123, 124, 130, 131, 195], "register_forward_hook": [37, 103, 107, 123, 124, 130, 131, 195, 217, 243], "with_kwarg": [37, 103, 107, 123, 124, 130, 131, 195], "always_cal": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_forward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "regardless": [37, 103, 107, 123, 124, 130, 131, 195, 285, 298, 301], "register_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "invok": [37, 103, 107, 123, 124, 130, 131, 195], "And": [37, 103, 107, 123, 124, 130, 131, 195, 381], "forward_pr": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "grad_input": [37, 103, 107, 123, 124, 130, 131, 195], "grad_output": [37, 103, 107, 123, 124, 130, 131, 195], "subsequ": [37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 142, 195, 378, 387], "technic": [37, 103, 107, 123, 124, 130, 131, 195, 376, 378, 380], "caller": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "backward_pr": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_load_state_dict_post_hook": [37, 103, 107, 123, 124, 130, 131, 195], "incompatible_kei": [37, 103, 107, 123, 124, 130, 131, 195], "register_load_state_dict_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "local_metadata": [37, 103, 107, 123, 124, 130, 131, 195], "error_msg": [37, 103, 107, 123, 124, 130, 131, 195], "noqa": [37, 103, 107, 123, 124, 130, 131, 195], "b950": [37, 103, 107, 123, 124, 130, 131, 195], "register_modul": [37, 103, 107, 123, 124, 130, 131, 195, 372], "alia": [37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 107, 123, 124, 130, 131, 195], "register_paramet": [37, 103, 107, 123, 124, 130, 131, 195], "register_state_dict_post_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_state_dict_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "keep_var": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 195, 304], "requires_grad_": [37, 103, 107, 123, 124, 130, 131, 195], "autograd": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304], "freez": [37, 103, 107, 123, 124, 130, 131, 193, 195], "finetun": [37, 103, 107, 123, 124, 130, 131, 195], "gan": [37, 103, 107, 123, 124, 130, 131, 195], "set_submodul": [37, 103, 107, 123, 124, 130, 131, 195], "overid": [37, 103, 107, 123, 124, 130, 131, 195], "share_memori": [37, 103, 104, 107, 123, 124, 130, 131, 195, 375], "share_memory_": [37, 103, 107, 123, 124, 130, 131, 195, 393], "destin": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 145, 152, 153, 155, 187, 189, 193, 195, 204, 304, 335], "averag": [37, 103, 107, 123, 124, 130, 131, 187, 193, 195, 267, 268, 293, 294, 304, 350, 375, 377], "shallow": [37, 103, 107, 123, 124, 130, 131, 187, 195, 304, 378], "detach": [37, 103, 107, 123, 124, 130, 131, 187, 195, 299, 304, 306, 315, 316, 317, 318, 375], "non_block": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 378], "memory_format": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "channels_last": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "unchang": [37, 103, 107, 123, 124, 130, 131, 150, 154, 169, 183, 186, 187, 189, 191, 195, 263, 272, 349, 375, 391], "tri": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 383], "pin": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "4d": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "ignore_w": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "1913": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "3420": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "5113": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "2325": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "torch_doctest_cuda1": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "gpu1": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "1914": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 387], "5112": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 389], "2324": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "float16": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 221, 225, 272], "cdoubl": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "3741": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "j": [37, 42, 79, 80, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 372, 381], "2382": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "5593": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272, 389], "4443": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "complex128": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "6122": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "1150": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 272], "to_empti": [37, 103, 107, 123, 124, 130, 131, 195], "dst_type": [37, 103, 107, 123, 124, 130, 131, 195], "xpu": [37, 103, 107, 123, 124, 130, 131, 195], "set_to_non": [37, 103, 107, 123, 124, 130, 131, 195], "row": [38, 49, 112, 113], "unidimension": 40, "keepdim": 40, "user_regist": 40, "priori": 40, "uniqu": [40, 87, 88, 117, 118, 146, 156, 182, 183, 184, 266, 342, 382, 391], "discretebox": [40, 103, 107, 123, 124, 130, 131, 380, 387, 388, 394], "chosen_data": [41, 70], "rewarddata": [41, 70, 368], "rejected_data": [41, 70], "from_dataset": [41, 43, 70], "dataset_nam": [41, 43, 47, 54, 70, 122], "max_length": [41, 43, 44, 52, 54, 70, 384], "550": [41, 43, 47, 54, 70, 87, 88, 389], "root_dir": [41, 43, 54, 70], "from_disk": [41, 43, 54, 70], "carperai": [41, 43, 47, 54], "openai_summarize_comparison": [41, 43, 54], "sequen": [41, 43], "load_from_disk": [41, 43, 54, 70], "load_dataset": [41, 43, 54, 70], "attention_mask": [41, 43, 44, 46, 47, 52, 54, 70], "92534": 41, "input_id": [41, 43, 44, 46, 47, 52, 54, 70], "end_scor": [41, 46, 47, 70], "sub_data": [41, 43], "from_tensordict": [41, 43, 46], "non_tensordict": [41, 43, 46], "_nodefault": [41, 43, 46], "getattr": [41, 43, 46, 387], "tensorclass": [41, 43, 46, 70, 74, 75, 95], "proxi": [41, 43, 46, 231, 240, 269, 371], "load_memmap": [41, 43, 46], "load_": [41, 43, 46], "load_memmap_": [41, 43, 46], "fetch": [41, 43, 46, 99, 100, 101, 102, 163, 380, 390, 391], "fromkei": [41, 43, 46], "memmap": [41, 43, 46, 74, 123, 130, 193, 335, 337, 349, 391], "saved_td": [41, 43, 46], "td_load": [41, 43, 46], "fake": [41, 43, 46, 103, 107, 123, 124, 130, 131, 375, 376], "_subclass": [41, 43, 46], "faketensormod": [41, 43, 46], "faketensor": [41, 43, 46], "from_flatten": [41, 43, 46], "attemptedli": [41, 43, 46], "copy_exist": [41, 43, 46], "return_earli": [41, 43, 46], "share_non_tensor": [41, 43, 46], "mimic": [41, 43, 46, 103, 107, 123, 124, 130, 131], "cross": [41, 43, 46, 206], "anymor": [41, 43, 46, 187, 272], "tensordictfutur": [41, 43, 46], "deepli": [41, 43, 46], "insid": [41, 43, 46, 123, 394], "memmap_": [41, 43, 46, 193], "memmap_lik": [41, 43, 46], "contentless": [41, 43, 46], "1_000_000": [41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 375, 378, 387], "alloc": [41, 43, 46, 75, 230, 231, 375], "memmap_refresh_": [41, 43, 46], "refresh": [41, 43, 46, 384, 387, 388], "saved_path": [41, 43, 46], "setattr": [41, 43, 46], "tent": [41, 43, 46, 54], "to_tensordict": [41, 43, 46, 378], "unbind": [41, 42, 43, 45, 46, 50, 51, 222, 226], "alpha": [42, 50, 79, 80, 207, 208, 210, 211, 212, 213, 219, 232, 284, 291, 300, 302, 304, 306, 375, 391, 393], "ep": [42, 50, 79, 80, 165, 193, 267, 268, 285, 305, 350, 375, 376, 378, 381, 384], "1e": [42, 50, 79, 80, 165, 193, 215, 218, 237, 248, 375, 376, 377, 388], "08": [42, 50, 79, 80, 375, 376, 377, 388, 389], "pin_memori": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 168, 375, 393], "schaul": [42, 79, 80], "quan": [42, 79, 80], "antonogl": [42, 79, 80], "silver": [42, 79, 80], "2015": [42, 79, 80], "ab": [42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 145, 169, 189, 193, 209, 214, 218, 219, 224, 229, 236, 238, 239, 242, 244, 245, 251, 283, 284, 287, 288, 289, 290, 293, 294, 295, 296, 297, 300, 301, 304, 390], "1511": [42, 79, 80, 219], "05952": [42, 79, 80], "expon": [42, 50, 79, 80], "\u03b1": [42, 50, 79, 80], "delta": [42, 50, 79, 80, 220, 224, 248, 269, 273, 368, 371, 387], "null": [42, 50, 79, 80, 144], "1_000": [42, 45, 50, 51, 387, 391], "merg": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 389], "mini": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 388], "decid": [42, 45, 50, 51, 387, 393], "meth": [42, 45, 50, 51, 222, 226, 299, 389], "incompat": [42, 45, 50, 51, 303, 391], "drop_last": [42, 45, 50, 51, 86, 88], "notion": [42, 45, 50, 51], "caution": [42, 45, 50, 51, 86, 197, 394], "codebas": [42, 45, 50, 51, 389], "approach": [42, 45, 50, 51, 165, 306, 375, 377, 381, 382, 387, 394], "return_info": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 391], "tensordictprioritizedreplaybuff": [42, 368, 393], "simplifi": [42, 380, 389, 391], "_weight": [42, 50, 79, 80, 391, 393], "arrai": [42, 47, 79, 103, 107, 123, 124, 130, 131, 156, 220, 221, 224, 225, 375, 387, 391], "update_prior": [42, 79, 80, 349, 372, 376, 391, 393], "36278465": 42, "invert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 281, 377], "tqdm": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 352, 375, 377, 378, 387, 388, 389], "randomsampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 375, 387], "td_error": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 286, 287, 289, 290, 291, 292, 297, 299, 302, 304, 306, 307, 313, 375, 381, 391, 393], "update_tensordict_prior": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 375, 391, 393], "insert_transform": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 141, 187], "insert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 93, 94, 97, 98, 141, 150, 187, 188], "set_sampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_storag": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_writ": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "prompt_rindex": [43, 44, 47], "promptdatatldr": 43, "116722": 43, "prompt": [44, 47], "return_tensordict": [44, 52], "recip": [44, 103, 107, 123, 124, 130, 131, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279], "text": [44, 47, 52, 65, 220, 221, 224, 225, 267, 268, 377], "tensodict": [44, 52], "orign": [44, 52], "valid_sampl": 44, "eough": 44, "toknen": 44, "meet": 44, "criterion": 44, "autotoken": [44, 52, 54], "from_pretrain": [44, 47, 52], "gpt2": [44, 47, 52, 54, 209, 214, 241], "pad_token": [44, 52], "eos_token": 44, "enough": [44, 391], "inde": [44, 154, 377, 389], "storagecheckpointerbas": [45, 89], "roundrobinwrit": [45, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Not": [45, 99, 100, 112, 222, 226], "depth": [45, 103, 107, 119, 123, 124, 127, 130, 131, 206, 207, 208, 210, 211, 212, 213, 218, 219, 227, 229, 232, 233, 234, 238, 239, 261, 370, 376, 379, 381, 382, 386, 387, 388, 391], "_pytre": [45, 391], "tree_map": [45, 391], "did": [45, 192, 321, 376, 377, 382, 391, 394], "assert0": [45, 391], "ref_model": 47, "reward_model": [47, 278], "max_new_token": 47, "score_clip": 47, "kl_schedul": 47, "klcontrollerbas": 47, "num_step": 47, "causal": 47, "sentenc": 47, "frozen": [47, 163, 193], "gpt2rewardmodel": 47, "get_dataload": [47, 368], "promptdata": [47, 368], "gpt2lmheadmodel": 47, "dl": 47, "block_siz": [47, 70], "tensorclass_typ": [47, 70], "openai_summarize_tldr": 47, "config_class": 47, "model_path": 47, "rollout_from_model": 47, "rollout_from_data": 47, "600": [47, 383, 389, 391], "reward_kl": [47, 163], "reward_raw": 47, "sample_log_prob": [47, 255, 256, 257, 269, 273, 275, 301, 377, 380, 388, 393], "create_rollout_td": 47, "log_prob": [47, 215, 230, 231, 240, 250, 273], "log_ratio": 47, "replic": [47, 371], "rindex": 47, "eo": 47, "term": [47, 163, 224, 225, 235, 236, 282, 283, 291, 354, 376, 377, 379, 380, 388], "generation_config": 47, "generationconfig": 47, "ti": [47, 324, 325, 326, 327, 329, 330, 331, 332, 376], "log_probs_gen": 47, "logprobs_of_label": 47, "220": [48, 389], "priority_kei": [50, 51, 62, 79, 287, 290, 291, 292, 297, 299, 302, 304, 306, 307, 313, 391, 393], "reduct": [50, 79, 80, 93, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 304, 306, 307], "prioritizedreplaybuff": [50, 368, 393], "min": [50, 79, 80, 93, 249, 250, 267, 268, 284, 285, 291, 300, 302, 304, 376, 377], "median": [50, 79, 80, 93, 112, 113, 139, 269, 273], "include_info": [50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "huggingfac": [52, 64, 69, 265], "co": [52, 156, 389], "pad_trunc": 52, "am": 52, "me": 52, "reassur": 52, "ok": 52, "tokenizer_fn": 54, "tensordicttoken": [54, 368], "pre_tokenization_hook": 54, "valid_s": 54, "tokenizer_class": 54, "tokenizer_model_nam": 54, "tokein": 54, "elementwis": 54, "vocabulari": 54, "loader": [54, 377], "185068": 54, "dataset_to_tensordict": 54, "data_dir": 54, "batch_dim": [54, 366], "valid_mask_kei": 54, "conver": 54, "batch_dimens": 54, "filder": 54, "from_dict": 54, "data_memmap": 54, "recurse_through_entri": 58, "recurse_through_stack": 58, "consolid": 58, "dataset_id": [61, 63, 64, 65, 67, 68, 69], "num_proc": 61, "slice_len": [61, 67, 80, 87, 88, 335], "strict_len": 61, "arari": 61, "2600": 61, "million": [61, 378], "consequ": [61, 72, 224, 382], "50x10": 61, "available_dataset": [61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88], "ataridqn": 61, "immutabledatasetwrit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "shorter": [61, 67, 80, 87, 88], "Be": [61, 67, 80, 87, 88], "game_nam": 61, "krull": 61, "1d": [61, 79, 80, 87, 88, 93], "cheapli": 61, "nontensordata": [61, 67, 333], "invalid_rang": 61, "999998": 61, "999999": 61, "add_count": 61, "84": [61, 173, 375, 376, 378, 389, 390], "valueestim": [61, 283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 309, 313, 368, 371, 375, 387, 388], "convolut": [61, 207, 208, 210, 211, 232, 246, 380], "2657628": 61, "2657629": 61, "2657630": 61, "2657631": 61, "2657632": 61, "2657633": 61, "2657634": 61, "2657635": 61, "2657636": 61, "2657637": 61, "2657638": 61, "2657639": 61, "2657640": 61, "2657641": 61, "2657642": 61, "2657643": 61, "2657644": 61, "2657645": 61, "2657646": 61, "2657647": 61, "2657648": 61, "2657649": 61, "2657650": 61, "2657651": 61, "2657652": 61, "2657653": 61, "2657654": 61, "2657655": 61, "2657656": 61, "2657657": 61, "2657658": 61, "2657659": 61, "2657660": 61, "2657661": 61, "2657662": 61, "2657663": 61, "2657664": 61, "2657665": 61, "2657666": 61, "2657667": 61, "2657668": 61, "2657669": 61, "2657670": 61, "2657671": 61, "2657672": 61, "2657673": 61, "2657674": 61, "2657675": 61, "2657676": 61, "2657677": 61, "2657678": 61, "2657679": 61, "2657680": 61, "2657681": 61, "2657682": 61, "2657683": 61, "2657684": 61, "2657685": 61, "2657686": 61, "2657687": 61, "2657688": 61, "2657689": 61, "2657690": 61, "2657691": 61, "1995687": 61, "1995688": 61, "1995689": 61, "1995690": 61, "1995691": 61, "1995692": 61, "1995693": 61, "1995694": 61, "1995695": 61, "1995696": 61, "1995697": 61, "1995698": 61, "1995699": 61, "1995700": 61, "1995701": 61, "1995702": 61, "1995703": 61, "1995704": 61, "1995705": 61, "1995706": 61, "1995707": 61, "1995708": 61, "1995709": 61, "1995710": 61, "1995711": 61, "1995712": 61, "1995713": 61, "1995714": 61, "1995715": 61, "1995716": 61, "1995717": 61, "1995718": 61, "1995719": 61, "1995720": 61, "1995721": 61, "1995722": 61, "1995723": 61, "1995724": 61, "1995725": 61, "1995726": 61, "1995727": 61, "1995728": 61, "1995729": 61, "1995730": 61, "1995731": 61, "1995732": 61, "1995733": 61, "1995734": 61, "1995735": 61, "1995736": 61, "1995737": 61, "1995738": 61, "1995739": 61, "1995740": 61, "1995741": 61, "1995742": 61, "1995743": 61, "1995744": 61, "1995745": 61, "1995746": 61, "1995747": 61, "1995748": 61, "1995749": 61, "1995750": 61, "left": [61, 63, 67, 80, 87, 143, 150, 151, 152, 153, 157, 163, 169, 171, 172, 178, 181, 184, 186, 189, 191, 195, 232, 263, 376, 377, 382, 383], "untouch": [61, 67, 143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195], "_max_run": 61, "dataset_asterix": 61, "asterix": 61, "dataset_pong": 61, "sample_from_al": [61, 82, 85], "buffer_id": [61, 85, 91], "hidden": [61, 123, 130, 145, 210, 218, 220, 221, 222, 224, 225, 226, 238, 239, 244, 245, 255, 256, 257, 260, 272, 275, 285, 298, 301, 370, 378, 386, 393], "data_path": [61, 62, 63, 64, 65, 66, 67, 68, 69], "data_path_root": [61, 62, 63, 64, 65, 66, 67, 68, 69], "delet": [61, 62, 63, 64, 65, 66, 67, 68, 69, 147, 342], "chunksiz": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pool": [61, 62, 63, 64, 65, 66, 67, 68, 69, 184], "max_tasks_per_child": [61, 62, 63, 64, 65, 66, 67, 68, 69], "worker_thread": [61, 62, 63, 64, 65, 66, 67, 68, 69], "index_with_gener": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pbar": [61, 62, 63, 64, 65, 66, 67, 68, 69, 375, 377, 378, 387, 388, 389], "dest": [61, 62, 63, 64, 65, 66, 67, 68, 69, 169, 189, 191, 272], "num_fram": [61, 62, 63, 64, 65, 66, 67, 68, 69], "unitari": [61, 62, 63, 64, 65, 66, 67, 68, 69, 389], "minariexperiencereplai": [61, 62, 63, 64, 66, 67, 68, 69], "1000000": [61, 62, 63, 64, 65, 66, 67, 68, 69], "distance_from_origin": [61, 62, 63, 64, 65, 66, 67, 68, 69], "forward_reward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qpo": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qvel": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_ctrl": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "reward_forward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_surv": [61, 62, 63, 64, 65, 66, 67, 68, 69], "x_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "x_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "y_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "y_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69], "achieved_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "desired_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "27": [61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 123, 130, 376, 388, 389], "_collate_id": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x120e21dc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cattensor": [61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 375, 386, 389, 394], "cat_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cat_next_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "new_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "31": [61, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 375, 376, 389, 390], "full_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x168406fc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "from_env": 63, "use_truncated_as_don": 63, "direct_download": 63, "terminate_on_end": 63, "env_kwarg": [63, 68, 69, 143, 364, 365, 375], "reconstruct": [63, 87, 88, 294, 375, 394], "get_dataset": 63, "qlearning_dataset": 63, "fewer": [63, 80, 87], "possess": 63, "unexpectedli": 63, "traj_split": 63, "observationnorm": [63, 193, 366, 375, 376, 377, 378, 393], "maze2d": 63, "umaz": 63, "loc": [63, 103, 107, 123, 124, 130, 131, 163, 165, 176, 193, 223, 237, 249, 250, 255, 256, 257, 269, 273, 275, 283, 284, 297, 301, 302, 303, 304, 356, 366, 370, 375, 376, 377, 378, 380, 388, 393], "gen": 64, "dgrl": 64, "accompani": [64, 143, 181], "gap": 64, "2312": 64, "05742": 64, "gen_dgrl": 64, "procgen": 64, "bigfish": 64, "bossfight": 64, "categori": [64, 370, 372], "1m_e": 64, "1m_": 64, "comma": 64, "npy": 64, "extract": [64, 142, 265, 375, 377, 393], "mmap": [64, 68, 69], "minut": [64, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "internet": [64, 69], "connect": [64, 69], "minari": 65, "websit": [65, 67], "currenrtli": 65, "minari_data": 65, "door": 65, "torchrl_logg": [65, 384], "28": [65, 232, 375, 376, 389, 390], "door_body_po": 65, "dua": 66, "graff": 66, "2017": 66, "uci": 66, "archiv": 66, "ic": 66, "edu": 66, "ml": 66, "sklearn": [66, 122], "adult_num": [66, 122], "adult_onehot": [66, 122], "mushroom_num": [66, 122], "mushroom_onehot": [66, 122], "covertyp": [66, 122], "shuttl": [66, 122], "magic": [66, 122, 379], "shuffl": [67, 86, 88, 388], "embodi": [67, 390], "institut": 67, "demonstr": [67, 377, 382, 387, 388, 389, 391, 394], "527": [67, 389], "skill": 67, "160266": 67, "googl": [67, 68, 99, 100, 117, 118, 377, 378, 387, 388], "open_x_embodi": 67, "2310": [67, 127], "08864": 67, "language_instruct": 67, "get_non_tensor": 67, "nor": 67, "insuffici": 67, "chosen": [67, 132, 133, 182, 183, 242, 243, 251, 271, 335, 370, 383], "openx": 67, "__will": 67, "change__": 67, "randomli": [67, 86, 131, 164, 165, 183, 263, 269, 273, 380, 387, 388, 389, 391], "crop": [67, 148, 170, 335], "modal": [67, 375], "cmu_stretch": [67, 335], "is_init": [67, 69, 145, 162, 222, 226, 266, 267, 268, 280, 378], "language_embed": 67, "512": [67, 219, 376, 389], "lift": 67, "green": [67, 387], "garbag": 67, "lid": 67, "roboset": 68, "h5": [68, 69, 72], "roboh": [68, 127], "concis": [68, 381], "75": [68, 376, 378, 388, 389], "totensor": 69, "image_s": 69, "v": [69, 193, 220, 221, 224, 225, 255, 290, 297, 304, 370, 375, 376], "npz": 69, "2206": [69, 120, 121], "04779": [69, 284, 289], "vd4rl": 69, "squar": [69, 148, 151, 223, 249, 250, 335], "rectangular": [69, 207, 208], "walker_walk": 69, "64px": 69, "height": [69, 148, 151, 173], "veloc": [69, 101, 102, 103, 107, 123, 124, 130, 131, 146, 387, 388, 389, 394], "infinit": [70, 117, 118, 132, 133, 382, 391], "block": [70, 73, 98, 370, 378, 387], "pairwisedataset": [70, 368], "256": [70, 117, 118, 214, 376, 377, 387, 388, 389], "checkpoint_fil": 72, "h5_kwarg": 72, "iff": 72, "suffix": [72, 348], "h5py": 72, "create_dataset": 72, "temporarili": [72, 197, 382, 391], "immut": [73, 103, 107, 123, 130, 172, 187], "piec": [73, 83, 94, 97, 98, 375, 376, 377, 383, 387, 388, 389, 391], "scratch_dir": [74, 375, 391], "sent": [74, 75, 95, 193], "mistak": [74, 75, 95], "myclass": [74, 75, 95], "foo": [74, 75, 95, 260, 391, 394], "bar": [74, 75, 95, 260, 345, 346, 348, 352, 372, 376], "attach": [74, 75, 76, 89, 91, 95, 376], "entiti": [74, 75, 76, 89, 91, 95], "zero_": [75, 95, 201], "liststoag": 77, "max_capac": [79, 80, 375, 391], "max_priority_within_buff": [79, 80], "data_0": 79, "data_1": 79, "smoothen": 79, "tdrb": 79, "pack": [79, 220, 224, 377, 379, 394], "nd": [79, 80], "sum_tre": [79, 80], "min_tre": [79, 80], "end_kei": [80, 87, 88], "cache_valu": [80, 87, 88], "closer": 80, "readili": [80, 87, 88], "conjunct": [80, 87, 88, 376], "Will": [80, 87, 120, 335], "buffer0": [80, 87], "immutablewrit": [80, 87], "buffer1": [80, 87], "other_sampl": [80, 87], "short": [80, 87, 88, 99, 100, 112, 113, 123, 197, 224, 225, 376, 377, 379, 380, 388, 391], "unsqueez": [80, 140, 143, 146, 147, 185, 188, 201, 375, 378, 387, 388, 389], "tolist": 80, "120110917137936e": 80, "06": [80, 215, 248, 375, 376, 377, 388, 389, 390], "uniformli": [81, 299, 394], "storageensembl": [82, 85], "samplerensembl": 82, "writerensembl": [82, 91], "num_buffer_sampl": [82, 85], "ensembl": [82, 85, 91, 92, 98, 272, 302], "forbidden": 82, "collat": 82, "0x13a2ef430": 82, "0x13a2f9310": 82, "interpol": [82, 173, 376, 378], "interpolationmod": [82, 378], "bilinear": [82, 173, 378], "0x13a2f9220": 82, "0x13a2f9f70": 82, "0x13a2d9b50": 82, "0x13a2f95b0": 82, "0x128648260": 82, "kw": [83, 94], "roundrobin": [83, 94], "incomplet": [86, 88], "fresh": 86, "haven": [86, 390], "remain": [86, 145, 153, 154, 163, 182, 236, 381], "draw": [86, 263], "slicesamplerwithoutreplac": [87, 391], "320": [87, 88, 101, 102, 374, 376, 389, 392], "700": [87, 88], "dataid": [87, 88], "__len__": 89, "rank_kei": 93, "rank": [93, 206], "samplerwithoutreplac": [93, 377, 388, 391], "get_insert_index": 93, "convers": [99, 100, 112, 113, 371], "2106": [99, 100, 288, 306], "13281": [99, 100], "categorical_action_encod": [99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131], "frame_skip": [99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 127, 160, 345, 348, 355, 372, 375, 376, 377, 393], "repeat": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 206, 377, 387, 388, 389], "allow_done_after_reset": [99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127], "toler": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 215, 248], "availalb": [99, 100, 112, 113], "is_avail": [99, 100, 375, 376, 377, 378, 387, 388, 390], "els": [99, 100, 143, 220, 221, 224, 225, 238, 370, 372, 375, 376, 377, 378, 387, 388, 389, 390], "ant": [99, 100, 103, 107, 110, 123, 124, 130, 131, 390, 394], "87": [99, 100, 376, 389], "acrobot": [99, 100, 101, 102, 394], "advant": [99, 100, 112, 113], "timer": [99, 100, 112, 113], "timeit": [99, 100, 112, 113], "310": [99, 100, 389], "ms": [99, 100, 112, 113], "268": [99, 100, 389], "433": [99, 100, 389], "80": [99, 100, 375, 376, 377, 388, 389, 390], "213": [99, 100, 375, 389], "8605": [99, 100], "pipelineenv": 100, "get_environ": 100, "dm_control": [101, 102, 375, 386, 394], "2006": [101, 102, 284, 289, 389], "12983": [101, 102], "task_nam": [101, 103, 107, 123, 124, 130, 131], "cheetah": [101, 102, 103, 107, 123, 124, 130, 131, 335, 375], "240": [101, 102, 389, 393], "swingup": [101, 102, 394], "swingup_spars": [101, 102], "ball_in_cup": [101, 102], "catch": [101, 102], "balance_spars": [101, 102], "three_pol": [101, 102], "two_pol": [101, 102], "finger": [101, 102], "turn_easi": [101, 102], "turn_hard": [101, 102], "fish": [101, 102], "upright": [101, 102, 376], "swim": [101, 102], "hopper": [101, 102], "hop": [101, 102], "humanoid": [101, 102, 123, 130, 386], "walk": [101, 102, 123, 130, 376, 386], "run_pure_st": [101, 102], "bring_bal": [101, 102], "bring_peg": [101, 102], "insert_bal": [101, 102], "insert_peg": [101, 102], "point_mass": [101, 102], "reacher": [101, 102], "swimmer": [101, 102], "swimmer6": [101, 102], "swimmer15": [101, 102], "walker": [101, 102], "dog": [101, 102], "trot": [101, 102], "humanoid_cmu": [101, 102], "lqr": [101, 102], "lqr_2_1": [101, 102], "lqr_6_2": [101, 102], "quadrup": [101, 102], "escap": [101, 102], "stacker": [101, 102], "stack_2": [101, 102], "stack_4": [101, 102], "deviceless": 103, "run_type_check": [103, 119], "counterenv": 103, "continuousbox": [103, 107, 123, 124, 130, 131, 201, 377, 387, 388, 389, 393, 394], "sort": [103, 107, 123, 124, 130, 131, 147, 267, 268], "another_act": [103, 107, 123, 124, 130, 131], "mutabl": [103, 107, 123, 124, 130, 131], "_callabletransform": [103, 107, 123, 124, 130, 131], "batch_lock": [103, 105, 107, 123, 130, 143, 183, 187, 389], "done_keys_group": [103, 107, 123, 124, 130, 131], "outer": [103, 107, 123, 124, 130, 131, 372, 375, 376, 394], "another_don": [103, 107, 123, 124, 130, 131], "empty_cach": [103, 107, 123, 124, 130, 131, 187], "fake_tensordict": [103, 107, 123, 124, 130, 131, 376], "silent": [103, 107, 123, 124, 130, 131, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 234, 237, 238, 239, 241, 244, 245, 247, 252, 258, 259, 260, 262, 263, 266, 267, 268, 271, 276, 279], "braxenv": [103, 107, 123, 124, 130, 131, 172, 368, 379], "envnam": [103, 107, 123, 124, 130, 131], "pipeline_st": [103, 107, 123, 124, 130, 131], "attibut": [103, 107, 123, 124, 130, 131], "maybe_reset": [103, 107, 123, 124, 130, 131], "speak": [103, 107, 123, 124, 130, 131, 375], "rand_act": [103, 107, 116, 123, 124, 125, 126, 130, 131, 143, 379], "register_gym": [103, 107, 123, 124, 130, 131, 379], "entry_point": [103, 107, 123, 124, 130, 131], "info_kei": [103, 107, 123, 124, 130, 131], "reward_threshold": [103, 107, 123, 124, 130, 131], "nondeterminist": [103, 107, 123, 124, 130, 131], "max_episode_step": [103, 106, 107, 108, 123, 124, 130, 131], "order_enforc": [103, 107, 123, 124, 130, 131], "autoreset": [103, 107, 123, 124, 130, 131], "disable_env_check": [103, 106, 107, 120, 121, 123, 124, 130, 131], "apply_api_compat": [103, 107, 123, 124, 130, 131], "nasium": [103, 107, 123, 124, 130, 131], "scope": [103, 107, 123, 124, 130, 131, 394], "dmcontrolenv": [103, 107, 123, 124, 130, 131, 335, 368, 375, 379, 386, 394], "dmc": [103, 107, 123, 124, 130, 131], "removeemptyspec": [103, 107, 123, 124, 130, 131], "threshold": [103, 107, 123, 124, 130, 131, 263, 284, 285, 377], "learnt": [103, 107, 123, 124, 130, 131, 362], "knowledg": [103, 107, 123, 124, 130, 131, 381, 383], "checker": [103, 106, 107, 120, 121, 123, 124, 130, 131], "stepapicompat": [103, 107, 123, 124, 130, 131], "concept": [103, 107, 123, 124, 130, 131, 376, 391], "deem": [103, 107, 117, 118, 123, 124, 130, 131, 132, 133], "envgym": [103, 107, 123, 124, 130, 131], "0855": [103, 107, 123, 124, 130, 131], "0215": [103, 107, 123, 124, 130, 131], "0881": [103, 107, 123, 124, 130, 131], "0412": [103, 107, 123, 124, 130, 131], "1101": [103, 107, 123, 124, 130, 131], "0080": [103, 107, 123, 124, 130, 131], "0254": [103, 107, 123, 124, 130, 131], "0424": [103, 107, 123, 124, 130, 131], "9609e": [103, 107, 123, 124, 130, 131], "9776e": [103, 107, 123, 124, 130, 131], "04": [103, 107, 111, 123, 124, 130, 131, 374, 375, 376, 377, 389, 390, 392], "6347e": [103, 107, 123, 124, 130, 131], "3842e": [103, 107, 123, 124, 130, 131], "5338e": [103, 107, 123, 124, 130, 131], "3064e": [103, 107, 123, 124, 130, 131], "0381e": [103, 107, 123, 124, 130, 131], "6656e": [103, 107, 123, 124, 130, 131], "05": [103, 107, 123, 124, 130, 131, 375, 376, 389, 390], "0204e": [103, 107, 123, 124, 130, 131], "action_spac": [103, 107, 123, 124, 130, 131, 156, 217, 243, 261, 262, 270, 271, 283, 284, 286, 287, 289, 290, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 378, 380, 384], "0833": [103, 107, 123, 124, 130, 131], "0275": [103, 107, 123, 124, 130, 131], "0612": [103, 107, 123, 124, 130, 131], "0770": [103, 107, 123, 124, 130, 131, 389], "1256": [103, 107, 123, 124, 130, 131, 389], "0082": [103, 107, 123, 124, 130, 131], "0186": [103, 107, 123, 124, 130, 131], "0476": [103, 107, 123, 124, 130, 131], "2221": [103, 107, 123, 124, 130, 131], "2256": [103, 107, 123, 124, 130, 131], "5930": [103, 107, 123, 124, 130, 131], "6937": [103, 107, 123, 124, 130, 131], "5865": [103, 107, 123, 124, 130, 131], "5479": [103, 107, 123, 124, 130, 131], "0187": [103, 107, 123, 124, 130, 131], "6825": [103, 107, 123, 124, 130, 131, 389], "5224": [103, 107, 123, 124, 130, 131], "0018": [103, 107, 123, 124, 130, 131, 389], "1005": [103, 107, 123, 124, 130, 131], "0335": [103, 107, 123, 124, 130, 131], "0268": [103, 107, 123, 124, 130, 131, 389], "0133": [103, 107, 123, 124, 130, 131], "0627": [103, 107, 123, 124, 130, 131], "0074": [103, 107, 123, 124, 130, 131, 389], "0488": [103, 107, 123, 124, 130, 131, 389], "0353": [103, 107, 123, 124, 130, 131], "0075": [103, 107, 123, 124, 130, 131, 389], "0069": [103, 107, 123, 124, 130, 131, 389], "0098": [103, 107, 123, 124, 130, 131, 389], "0058": [103, 107, 123, 124, 130, 131, 389], "0033": [103, 107, 123, 124, 130, 131, 389], "0157": [103, 107, 123, 124, 130, 131], "0004": [103, 107, 123, 124, 130, 131, 389], "0381": [103, 107, 123, 124, 130, 131], "0452": [103, 107, 123, 124, 130, 131], "11355747": [103, 107, 123, 124, 130, 131], "04257728": [103, 107, 123, 124, 130, 131], "00408397": [103, 107, 123, 124, 130, 131], "04155852": [103, 107, 123, 124, 130, 131], "0389733": [103, 107, 123, 124, 130, 131], "01409826": [103, 107, 123, 124, 130, 131], "0978704": [103, 107, 123, 124, 130, 131], "08808327": [103, 107, 123, 124, 130, 131], "03970837": [103, 107, 123, 124, 130, 131], "00535434": [103, 107, 123, 124, 130, 131], "02353762": [103, 107, 123, 124, 130, 131], "05116226": [103, 107, 123, 124, 130, 131], "02788907": [103, 107, 123, 124, 130, 131], "06848346": [103, 107, 123, 124, 130, 131], "05154399": [103, 107, 123, 124, 130, 131], "0371798": [103, 107, 123, 124, 130, 131], "05128025": [103, 107, 123, 124, 130, 131], "dydact": [103, 107, 123, 124, 130, 131], "gym_env": [103, 107, 123, 124, 130, 131, 393], "reset_kei": [103, 107, 123, 124, 130, 131, 146, 177, 182, 183, 184, 387], "multitask": [103, 107, 123, 124, 130, 131], "multiag": [103, 107, 116, 123, 124, 125, 126, 130, 131, 205, 233, 242, 251, 313], "another_reward": [103, 107, 123, 124, 130, 131], "auto_cast_to_devic": [103, 107, 123, 124, 130, 131, 388], "soon": [103, 107, 123, 124, 125, 126, 130, 131], "__sort": [103, 107, 123, 124, 130, 131], "as__": [103, 107, 123, 124, 130, 131], "normal": [103, 107, 123, 124, 130, 131, 165, 193, 207, 208, 223, 227, 230, 231, 237, 249, 250, 258, 259, 269, 273, 285, 298, 301, 348, 350, 366, 370, 372, 378, 380, 388, 394], "argmaxmodul": [103, 107, 123, 124, 130, 131], "n_ob": [103, 107, 123, 124, 130, 131, 163, 266, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 381], "n_act": [103, 107, 123, 124, 130, 131, 163, 283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 381], "ourselv": [103, 107, 123, 124, 130, 131, 377, 394], "emul": [103, 107, 123, 124, 130, 131], "epoch": [103, 107, 123, 124, 130, 131, 352, 377, 387, 388], "input_td": [103, 107, 123, 124, 130, 131], "rollout_td": [103, 107, 123, 124, 130, 131], "state_kei": [103, 107, 123, 124, 130, 131], "prevail": [103, 107, 123, 124, 130, 131, 147, 177, 205], "creator": [104, 357, 358, 364, 365, 366], "substitut": [104, 182, 193, 380], "vecnorm": [104, 366], "env_creat": [104, 375], "test_env1": 104, "_td": 104, "observation_count": [104, 394], "test_env2": 104, "sleep": [104, 394], "ps": 104, "p1": 104, "p2": 104, "9934": 104, "env_str": 105, "device_map": 105, "accross": [106, 108], "registri": 106, "asyncvectorenv": 106, "involv": [106, 108, 109, 117, 118, 127, 143, 222, 226, 379, 381], "pixel_observ": [106, 108, 109, 127], "pixelobservationwrapp": [106, 108, 109, 127], "adventur": [106, 108], "airraid": [106, 108, 394], "alien": [106, 108], "time_limit": 106, "timelimit": [106, 117, 118, 132, 133], "default_info_dict_read": [106, 107, 108, 123], "reader": [106, 107, 108, 123, 376], "set_info_dict_read": [106, 107, 108, 123, 379], "info_dict": [106, 107, 108, 123], "auto_register_info_dict": [106, 107, 108, 123], "multibinari": [106, 108], "multidiscret": [106, 108], "rag": [106, 108], "gym_conversion_exampl": [106, 108], "info_dict_read": [107, 123], "ignore_priv": 107, "baseinfodictread": 107, "tensordictprim": [107, 123, 222, 226, 280, 378], "succe": [107, 123], "underscor": 107, "primer": [107, 183, 222, 226, 280, 378], "halfcheetah": [107, 123, 139, 173, 375], "reward_run": [107, 123], "read_act": 107, "read_don": 107, "nonsens": 107, "fallback": 107, "broken": [107, 197], "read_ob": 107, "dictat": [107, 269, 273, 301, 375, 389], "read_reward": 107, "hoc": [107, 123, 380], "dict_read": 107, "my_info_kei": 107, "some_env": 107, "vecenv": 108, "vectorenv": 108, "secur": 109, "habitat3": 109, "ai": [109, 390], "habitatrenderpick": 109, "isaacgym": [110, 111], "isaacgymwrapp": [110, 368], "isaacgymenv": [111, 368], "webpag": 111, "isaac": 111, "essenc": [111, 379], "instadeepai": [112, 113], "2306": [112, 113], "09884": [112, 113], "snake": [112, 113], "grid": [112, 113, 335], "bodi": [112, 113], "body_st": [112, 113], "fruit_posit": [112, 113], "col": [112, 113], "head_posit": [112, 113], "tail": [112, 113], "game2048": [112, 113], "maze": [112, 113], "cleaner": [112, 113], "cvrp": [112, 113], "multicvrp": [112, 113], "minesweep": [112, 113], "rubikscub": [112, 113], "knapsack": [112, 113], "sudoku": [112, 113], "tsp": [112, 113], "connector": [112, 113], "v2": [112, 113, 128, 129, 310, 324, 325, 326, 327, 329, 330, 331, 332, 378, 394], "mmst": [112, 113], "graphcolor": [112, 113], "partli": [112, 113], "scrambl": [112, 113], "robotwarehous": [112, 113], "tetri": [112, 113], "binpack": [112, 113], "jobshop": [112, 113], "0x1fca91910": 112, "122": [112, 113, 389, 391, 394], "0x1ff9baee0": 112, "134": [112, 113, 389], "0x1ff9ba7c0": 112, "172": [112, 113, 389], "drastic": [113, 123, 391], "rubric": [113, 165, 275], "mo": [114, 115], "minecart": [114, 115], "mo_gym": 115, "qualnam": 116, "leverag": [116, 125, 126, 375, 388, 394], "neural": [116, 125, 126, 207, 208, 246, 272, 370, 376, 377, 378, 380, 387, 388, 389, 394], "group_map": [116, 117, 118, 125, 126, 132, 133, 134, 387], "constructiuon": [116, 125, 126], "premad": [116, 117, 118, 125, 126, 132, 133, 313], "all_in_one_group": [116, 134], "agent_0": [116, 125, 126, 134, 387], "agent_1": [116, 125, 126, 134], "agent_2": [116, 125, 126, 134], "agent_3": 116, "one_group_per_ag": [116, 125, 126], "meltingpot": [117, 118], "2211": [117, 118, 374, 392], "13746": [117, 118], "melt": [117, 118], "pot": [117, 118], "novel": [117, 118, 381], "social": [117, 118], "familiar": [117, 118, 376, 388, 394], "unfamiliar": [117, 118], "broad": [117, 118], "cooper": [117, 118, 387, 388], "decept": [117, 118], "reciproc": [117, 118], "trust": [117, 118, 226], "stubborn": [117, 118], "substrat": [117, 118], "ml_collect": 117, "config_dict": 117, "configdict": 117, "categorical_act": [117, 118, 125, 126, 128, 129, 132, 133], "marlgroupmaptyp": [117, 118, 125, 126, 132, 133, 134, 368, 387], "agent_nam": [117, 118, 132, 133, 134], "agent_names_to_indices_map": [117, 118, 132, 133], "env_torchrl": [117, 118], "commons_harvest__open": [117, 118], "rgb": [117, 118], "144": [117, 118, 389], "192": [117, 118, 376, 389], "collective_reward": [117, 118], "ready_to_shoot": [117, 118], "88": [117, 118, 128, 129, 375, 376, 389, 390], "substrate_config": 118, "get_config": 118, "mp_env": 118, "build_from_config": 118, "default_player_rol": 118, "environn": 119, "mymbenv": [119, 206, 229], "world_model": [119, 206, 229, 294], "hidden_observ": [119, 206, 229], "mlp": [119, 206, 207, 208, 210, 211, 212, 213, 219, 222, 226, 229, 233, 234, 255, 261, 280, 287, 289, 370, 376, 380, 381, 384, 386, 390, 393], "worldmodelwrapp": [119, 206, 229], "activation_class": [119, 206, 207, 208, 210, 211, 212, 213, 218, 219, 227, 229, 232, 233, 376, 380, 387, 388, 393], "relu": [119, 206, 214, 229, 237, 282], "activate_last_lay": [119, 206, 213, 227, 229], "sail": [120, 121], "sg": [120, 121], "10558": [120, 121], "readthedoc": 120, "en": 120, "python_interfac": 120, "envpoolmixin": 121, "env_bas": 121, "task_id": 121, "env_typ": 121, "gym_reset_return_info": 121, "envpool_env": 121, "www": [122, 230, 231], "fetch_openml": 122, "106": [122, 389], "my_env_fun": [123, 130], "custom_attribute_list": [123, 130], "custom_attribut": [123, 130], "custom_method_list": [123, 130], "custom_method": [123, 130], "deploi": [123, 130, 143], "slight": [123, 130, 376], "share_individual_td": [123, 130], "shared_memori": [123, 130], "policy_proof": [123, 130], "ll": [123, 130, 220, 221, 224, 225, 375, 376, 377, 378, 379, 380, 381, 382, 384, 388, 394], "serial_for_singl": [123, 130, 376], "circular": [123, 130, 375], "list_of_kwarg": [123, 130], "com_veloc": [123, 130], "head_height": [123, 130], "joint_angl": [123, 130], "torso_vert": [123, 130], "stringent": [123, 377, 387, 388], "inter": 123, "penv": 123, "env_fix": 123, "influenc": 123, "thumb": [123, 377], "myenv": [123, 143, 152, 155], "pipe": 123, "update_kwarg": [123, 130], "th": [124, 159, 188, 220, 224, 389], "thdot": [124, 389], "max_spe": [124, 389], "max_torqu": [124, 389], "gen_param": [124, 389], "gravit": [124, 389], "torqu": [124, 389], "pettingzoo": [125, 126, 387, 388], "pet": [125, 126], "zoo": [125, 126], "__": [125, 126], "aecenv": [125, 126], "use_mask": [125, 126], "dead": [125, 126], "done_on_ani": [125, 126, 387], "compulsori": [125, 126], "adversary_0": [125, 126, 387], "adversari": [125, 126, 387], "vectoris": [125, 126, 220, 221, 224, 225], "sisl": 125, "multiwalker_v9": 125, "return_st": [125, 126], "aec": [125, 126], "n_piston": [125, 126], "pistonball_v6": [125, 126], "piston": [125, 126], "piston_0": [125, 126], "piston_1": [125, 126], "piston_20": [125, 126], "tictactoe_v3": [125, 126], "player": [125, 126, 131], "player_1": [125, 126], "player_2": [125, 126], "butterfli": 126, "parallel_env": [126, 375, 393, 394], "vikashplu": 127, "wiki": 127, "06828": 127, "from_depth": 127, "smacv2": [128, 129], "starcraft": [128, 129], "challeng": [128, 129, 379, 389, 390], "10gen_terran": [128, 129], "10gen_zerg": [128, 129], "10gen_protoss": [128, 129], "3m": [128, 129], "8m": [128, 129, 390], "25m": [128, 129], "5m_vs_6m": [128, 129], "8m_vs_9m": [128, 129], "10m_vs_11m": [128, 129], "27m_vs_30m": [128, 129], "mmm": [128, 129], "mmm2": [128, 129], "2s3z": [128, 129], "3s5z": [128, 129], "3s5z_vs_3s6z": [128, 129], "3s_vs_3z": [128, 129], "3s_vs_4z": [128, 129], "3s_vs_5z": [128, 129], "1c3s5z": [128, 129], "2m_vs_1z": [128, 129], "corridor": [128, 129], "6h_vs_8z": [128, 129], "2s_vs_1sc": [128, 129], "so_many_banel": [128, 129], "bane_vs_ban": [128, 129], "2c_vs_64zg": [128, 129], "old": [128, 129, 298, 394], "smac": [128, 129], "map_nam": [128, 129], "176": [128, 129, 389, 394], "battle_won": [128, 129], "dead_al": [128, 129], "dead_enemi": [128, 129], "episode_limit": [128, 129], "322": [128, 129, 389], "Or": [128, 129, 232], "procedur": [128, 129], "distribution_config": [128, 129], "n_unit": [128, 129], "n_enemi": [128, 129], "team_gen": [128, 129], "dist_typ": [128, 129], "weighted_team": [128, 129], "unit_typ": [128, 129], "marin": [128, 129], "maraud": [128, 129], "medivac": [128, 129], "exception_unit_typ": [128, 129], "start_posit": [128, 129], "surrounded_and_reflect": [128, 129], "map_x": [128, 129], "map_i": [128, 129], "capability_config": [128, 129], "131": [128, 129, 389], "starcraft2env": 129, "tic": 131, "tac": 131, "toe": 131, "single_play": 131, "player1": 131, "desired_batch_s": 131, "board": 131, "player0": 131, "proroklab": [132, 133], "vectorizedmultiagentsimul": [132, 133], "2207": [132, 133], "03530": [132, 133], "basescenario": 132, "descript": [132, 142, 376, 377], "perfrom": [132, 133], "defaultt": 132, "continuous_act": [132, 133, 333, 387, 388], "repositiori": 132, "sparsiti": 132, "unbatched_action_spec": [132, 133, 388], "unbatched_observation_spec": [132, 133], "unbatched_reward_spec": [132, 133], "het_spec": [132, 133], "het_specs_map": [132, 133], "flock": [132, 133, 333], "agent_collision_rew": [132, 133], "agent_distance_rew": [132, 133], "ca": 134, "environment4": 134, "get_group_map": 134, "sumbodul": 135, "model_bas": [136, 137, 206, 229], "out_keys_inv": [136, 149, 152, 153, 155, 165, 166, 167, 171, 172, 179, 186, 389], "decod": [136, 238], "model_based_env": [136, 293], "dreamerenv": [136, 293, 368], "model_based_env_ev": 136, "num_interv": 139, "out_action_kei": 139, "samplingstrategi": 139, "optino": 139, "intenum": 139, "interv": [139, 334, 335, 344, 354, 376, 389], "action_disc": 139, "transform_input_spec": [139, 143, 150, 152, 153, 154, 165, 167, 171, 172, 177, 181, 182, 183, 186, 188, 190, 195], "masker": 140, "tensor_spec": [140, 196, 205, 290, 291, 301, 303], "maskedenv": 140, "ones_lik": 140, "scatter": 140, "fill_float": 142, "fill_int": 142, "fill_bool": 142, "someenvclass": 142, "autoresetenv": 142, "argumet": 142, "fooenv": 142, "sign": [142, 179, 315, 387], "envtyp": 142, "reshape_fn": 143, "reset_func": 143, "environmt": 143, "request": [143, 170], "tensordict_batch_s": 143, "tensordict_reset": [143, 389], "transform_env_batch_s": [143, 150, 186, 195], "transform_output_spec": [143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195], "transform_observation_spec": [143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 192, 193, 195, 389], "transform_reward_spec": [143, 144, 149, 150, 152, 153, 157, 163, 171, 172, 175, 176, 177, 178, 179, 181, 186, 188, 195], "transformfull_done_spec": [143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195], "biner": 144, "burn_in": 145, "burn": 145, "date": [145, 338], "retur": 145, "burnt": 145, "gru_modul": [145, 222, 280], "input_s": [145, 220, 221, 222, 224, 225, 226, 280, 378], "hidden_s": [145, 220, 221, 222, 224, 225, 226, 280, 378], "set_recurrent_mod": [145, 222, 226, 378], "burn_in_transform": 145, "gru": [145, 183, 221, 222, 280], "num_lay": [145, 220, 222, 224, 226, 238, 239, 280], "86": [145, 376, 389], "3008": [145, 376], "0344": 145, "padding_valu": [146, 230, 231], "as_invers": 146, "movement": 146, "1312": [146, 376], "5602": 146, "unsqueezetransform": [146, 389, 391], "consumpt": [146, 368], "followin": 146, "pictur": 146, "pixels_trsf": [146, 391], "grayscal": [146, 376, 378, 391, 394], "data_exclud": [146, 391], "del_kei": [147, 189, 386, 389], "unsqueeze_if_oor": 147, "observation_posit": 147, "observation_veloc": 147, "key1": [147, 343, 351], "key2": [147, 343, 351], "center": [148, 335], "width": [148, 151, 173], "scalar": [149, 175, 211, 213, 235, 236, 258, 259, 263, 264, 267, 268, 279, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 313, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 370, 376, 381, 389], "permit": [149, 159, 188, 283, 285, 298, 301, 303], "rewardsc": [150, 187, 375, 376, 378], "rewardclip": 150, "transformed_env": [150, 186, 187, 379], "transform_env_devic": [150, 153, 186, 195], "dtype_in": 152, "dtype_out": 152, "scan": [152, 155, 274, 275], "resp": [152, 155], "not_transform": [152, 155], "constructedw": [152, 155], "orig_devic": 153, "unspecifi": 153, "transform_done_spec": [153, 186, 195], "num_actions_effect": 154, "max_act": 154, "include_forward": 154, "num_act": [154, 291, 380], "action_out": 154, "_call": [154, 159, 389], "eol_kei": 156, "lives_kei": 156, "eol_attribut": 156, "unwrap": 156, "breakout": 156, "210": [156, 167, 389], "160": [156, 167, 376, 389, 391], "eol_transform": 156, "eol": 156, "dqnloss": [156, 283, 284, 286, 289, 291, 292, 293, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 313, 359, 368, 371, 376, 378, 384], "register_kei": 156, "loss_or_advantag": 156, "lossmodul": [156, 352, 361, 362, 368, 371], "valueestimatorbas": [156, 299, 368], "excluded_kei": 157, "finit": [158, 380, 391], "first_dim": 159, "last_dim": 159, "allow_positive_dim": [159, 188], "frameskip": 159, "repeatedli": [160, 377, 388], "init_kei": [162, 266], "tracker": 162, "pi_curr": 163, "pi_0": 163, "overfit": 163, "probabilist": [163, 269, 368, 377, 393], "get_dist": [163, 273, 274], "mod": [163, 222, 226, 266, 276, 378, 384], "normalparamextractor": [163, 255, 256, 257, 269, 275, 283, 284, 291, 297, 301, 302, 303, 304, 306, 307, 370, 377, 380, 388, 393], "probabilisticactor": [163, 255, 256, 257, 260, 283, 284, 288, 290, 291, 297, 300, 301, 302, 303, 304, 306, 307, 370, 375, 377, 380, 387, 388], "tanhnorm": [163, 255, 256, 257, 269, 275, 283, 284, 297, 301, 302, 303, 304, 306, 307, 368, 377, 388, 393], "return_log_prob": [163, 255, 256, 257, 269, 273, 275, 303, 370, 377, 380, 387, 388, 393], "apply_": 163, "copy_": [163, 375], "formulat": 163, "diverg": [163, 222, 226, 269, 273, 294, 298], "noop": [164, 393], "trial": 164, "standard_norm": [165, 176, 193, 375, 376, 378], "affin": [165, 176, 193], "layer": [165, 193, 207, 208, 210, 211, 216, 218, 220, 221, 222, 224, 225, 226, 227, 232, 233, 235, 236, 238, 239, 246, 247, 253, 265, 276, 370, 376, 377, 378, 380, 387, 390], "epsilon": [165, 258, 259, 263, 264, 267, 268, 305, 350, 376, 377, 378, 380], "recover": 165, "set_default_tensor_typ": 165, "doubletensor": 165, "isclos": 165, "next_ob": [165, 315, 316, 317, 318, 393], "init_stat": [165, 375, 376, 377, 378], "3752e": 165, "5087e": 165, "9294e": 165, "9636": 165, "5608": 165, "6408": 165, "num_it": [165, 376, 377], "reduce_dim": [165, 375, 376, 377, 378], "cat_dim": [165, 375, 376, 377, 378], "keep_dim": [165, 376, 378], "statist": [165, 193, 303, 366, 375, 376, 377, 394], "gaussian": [165, 183, 206, 229, 235, 236, 241, 258, 259, 377, 387], "empir": [165, 206, 229, 269, 273, 375, 377, 388], "3d": [165, 207], "third": [165, 262, 387, 388], "reorder": 167, "in_keys_in": 167, "channel": [167, 185, 232, 238, 239, 376], "r3m": [169, 390], "resnet": [169, 189, 191], "visual": [169, 189, 191, 335, 377, 387, 389], "embed": [169, 189, 190, 191, 210, 242, 254, 255, 256, 257, 272, 277, 390], "ego4d": [169, 189, 191], "univers": [169, 189, 191, 379], "suraj": [169, 189], "nair": [169, 189], "aravind": [169, 189], "rajeswaran": [169, 189], "vikash": [169, 189, 191], "kumar": [169, 189, 191], "chelsea": [169, 189], "finn": [169, 189], "abhinav": [169, 189], "gupta": [169, 189], "2203": [169, 189, 229, 390], "12601": [169, 189, 390], "_init": [169, 189, 375], "resnet50": [169, 191, 390], "model_nam": [169, 189, 191, 338], "resnet34": 169, "resnet18": 169, "r3m_vec": [169, 390], "stack_imag": [169, 191], "tread": [169, 191], "separet": [169, 191], "hub": [169, 191, 379, 390], "resnet50_weight": [169, 191], "imagenet1k_v1": [169, 191], "download_path": [169, 191], "tensor_pixels_kei": [169, 191], "sub_seq_len": 170, "sample_dim": [170, 375], "primarili": [170, 380], "hesit": 170, "robust": 170, "mix": [170, 242, 251, 313, 375, 387, 388], "improp": 170, "dummyenv": 171, "another_oth": 171, "other_reward": 171, "create_copi": 172, "stuff": [172, 382], "newnam": 172, "r2g": 174, "reward_to_go": 174, "bernoulli_": 174, "9010": 174, "9404": [174, 321], "9701": [174, 321], "9900": [174, 321], "0000": [174, 184, 263, 264, 276, 321, 377, 378, 389, 393], "crash": 174, "clamp_min": 175, "clamp_max": 175, "clip_min": 175, "clip_max": 175, "episode_": 177, "reward1": 177, "reward2": 177, "episode_reward": [177, 387, 388], "keep_reward": 178, "keep_don": 178, "logical_or": 179, "squeeze_dim": 180, "step_count_kei": 181, "update_don": 181, "disjunct": 181, "recognis": 181, "target_return": 182, "subtract": 182, "default_valu": [183, 280, 378], "unit": [183, 206, 218, 220, 221, 238, 239, 244, 245, 377], "transfomedenv": 183, "mykei": 183, "__unless": 183, "exists__": 183, "get_primers_from_modul": [183, 222, 226, 368], "10th": 184, "0216": 184, "1149": 184, "1990": 184, "2749": 184, "3281": 184, "9290": 184, "3702": 184, "8978": 184, "from_int": 185, "shape_toler": 185, "permuat": 185, "ri": 185, "principl": 186, "cattransform": 186, "notabl": 186, "rewardsum": [186, 195, 204, 387, 388], "smoothli": 187, "add_1": 187, "cache_spec": 187, "set_missing_toler": 187, "keyerror": 187, "unsqueeze_dim": [188, 389], "danger": 188, "vc1": 189, "vc1_vec": 189, "untrain": 189, "make_noload_model": 189, "vip": [190, 191, 390], "implicit": [191, 290, 297, 391], "jason": 191, "ma": 191, "shagun": 191, "sodhani": 191, "dinesh": 191, "jayaraman": 191, "osbert": 191, "bastani": 191, "ami": 191, "zhang": 191, "vip_vec": 191, "final_nam": 192, "sb3": 192, "terminal_obs_read": 192, "truli": [192, 393], "till": 192, "shared_td": 193, "decai": [193, 258, 259, 263, 305, 350, 375, 376, 378, 394], "9999": [193, 389], "0001": [193, 218, 237, 377, 389], "to_observation_norm": 193, "frozen_copi": 193, "race": 193, "underflow": [193, 350], "build_td_for_shared_vecnorm": 193, "memmori": 193, "queue": [193, 391], "td_share": 193, "unfreez": 193, "train_env": 193, "eval_env": 193, "state_dim": [194, 209, 214, 241, 244, 245, 260], "action_dim": [194, 209, 210, 212, 214, 241, 260, 375, 386], "gsde": [194, 302, 366], "gsdemodul": 194, "rb_transform": 195, "resist": 195, "insensit": 195, "sensit": [195, 376], "_orig": 195, "95": [195, 229, 309, 375, 376, 377, 378, 389], "tdreset": [195, 386], "window": [195, 266, 387, 391, 393], "edit": [195, 382], "cube": 196, "check_dtyp": 197, "discrep": [197, 283, 285, 286, 287, 298, 301, 303, 313], "rng": [197, 389], "revert": [197, 380, 391], "unsqueeze_null_shap": 201, "probabilistictdmodul": [202, 203, 227, 269, 273, 314, 348], "next_tensordict": 204, "keep_oth": [204, 389], "exclude_reward": 204, "exclude_don": 204, "exclude_act": 204, "next_": 204, "funtion": 204, "_stepmdp": 204, "write_full_fals": 205, "_terminated_or_trunc": 205, "entropi": [206, 283, 284, 285, 290, 291, 297, 298, 300, 301, 302, 304, 306, 307, 388], "botev": 206, "2013": 206, "cem": 206, "plan": [206, 228, 229], "varianc": [206, 223, 237, 249, 250, 371, 375, 377, 388], "k": [206, 220, 221, 224, 225], "maximis": [206, 210, 212, 229, 370, 376, 377, 388], "modelbasedenv": [206, 229], "planning_horizon": [206, 229], "optim_step": [206, 229, 376, 384], "mpc": [206, 228, 229], "num_candid": [206, 229], "candid": [206, 229], "top_k": [206, 229], "modelbasedenvbas": [206, 228, 229, 368], "safemodul": [206, 228, 255, 257, 273, 283, 284, 290, 291, 297, 301, 302, 303, 304, 306, 307, 357, 358, 362, 368, 393], "num_cel": [207, 208, 210, 211, 212, 213, 218, 219, 222, 226, 227, 232, 233, 255, 280, 376, 377, 378, 380, 381, 384, 387, 388, 393], "elu": [207, 208, 210, 211, 212, 213, 218, 219, 232, 376, 393], "activation_kwarg": [207, 208, 227], "norm_class": [207, 208, 210, 211, 227], "norm_kwarg": [207, 208, 227], "bias_last_lay": [207, 208, 210, 211, 212, 213, 219, 227], "aggregator_class": [207, 208, 210, 211, 376, 378, 393], "squashdim": [207, 208, 210, 219, 232, 393], "aggregator_kwarg": [207, 208, 210, 211, 376, 378], "squeeze_output": [207, 208, 210, 211, 376, 378], "cell": [207, 208, 220, 221, 222, 224, 225, 226, 227, 232, 233, 377, 379, 380, 381, 382, 383, 384], "kernel": [207, 208, 219, 232], "cnet": [207, 208], "conv3d": 207, "lazyconv2d": [208, 210, 211, 219, 232, 393], "transformer_config": [209, 241, 260], "decisiontransform": [209, 241], "dtconfig": [209, 214, 241], "2202": [209, 214, 300], "05607": [209, 214, 300], "return_to_go": [209, 214, 241, 260], "conv_net_kwarg": [210, 211], "mlp_net_kwarg": [210, 211, 212], "use_avg_pool": [210, 211], "WITH": [210, 211, 212, 213, 267, 268, 305], "1509": [210, 211, 212, 213, 229, 267, 268, 287, 296, 305, 389], "02971": [210, 211, 212, 213, 267, 268, 305], "reus": [210, 342], "convnet": [210, 211, 219, 232, 378, 380, 393], "ndims_in": 210, "avgpool": [210, 211], "lazylinear": [210, 211, 212, 213, 219, 227, 370, 377, 380, 389, 390, 393], "2304": [210, 376], "adaptiveavgpool2d": [211, 376, 378], "output_s": [211, 376, 378], "squeeze2dlay": 211, "400": [212, 213, 383, 388, 389, 391], "mlp_net_kwargs_net1": 213, "mlp_net_kwargs_net2": 213, "mlp1": 213, "mlp2": 213, "decion": 214, "desdescrib": 214, "n_embd": 214, "n_layer": [214, 220, 224], "n_head": 214, "n_inner": 214, "n_posit": 214, "resid_pdrop": 214, "attn_pdrop": 214, "gpt2config": 214, "atol": [215, 248], "rtol": [215, 248], "batch_shap": [215, 248], "event_shap": [215, 248], "absolut": [215, 248, 375], "densiti": [215, 230, 231, 240, 250], "mass": [215, 230, 231, 240, 250, 389], "rsampl": [215, 231, 240, 273], "sample_shap": [215, 230, 231, 240], "softmax": [216, 231, 240, 261, 262], "var_num": [217, 243, 261, 262, 271], "action_value_kei": [217, 243, 261, 262, 270, 271, 299, 313], "action_mask_kei": [217, 243, 261, 262, 263, 264, 270, 271], "perspect": [217, 262, 292, 377], "1707": [217, 262, 292, 301], "06887": [217, 262, 292], "mult": [217, 233, 243, 261, 262, 270, 271], "tensordict_modul": [217, 220, 221, 224, 225, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 286, 290, 291, 297, 301, 302, 303, 304, 306, 307, 370], "nbin": [217, 261, 370], "customdistributionalqv": 217, "log_softmax": [217, 261], "from_modul": [217, 272, 275, 393], "one_hot": [217, 231, 243], "qvalue_actor": [217, 243, 261, 270, 370], "to_modul": [217, 272, 275, 375, 393], "std_bia": 218, "std_min_val": 218, "belief": [218, 238, 244, 245], "1912": [218, 293, 294, 295], "01603": [218, 293, 294, 295], "softplu": [218, 237, 279, 281, 282], "out_features_valu": 219, "cnn_kwarg": [219, 376], "mlp_kwarg": [219, 376], "duel": 219, "cnn": [219, 232, 376, 380, 393], "06581": 219, "batch_first": [220, 222, 224, 226, 378], "bidirect": [220, 224, 378], "cudnn": [220, 221, 224, 225, 378], "rnn": [220, 221, 222, 224, 225, 226, 378, 380], "device_count": [220, 221, 224, 225, 394], "n_in": [220, 221, 224, 225], "n_out": [220, 221, 224, 225], "h0": [220, 221, 224, 225], "h1": [220, 221, 224, 225], "call_gru": [220, 221], "h_out": [220, 221, 224, 225], "batched_cal": [220, 221, 224, 225], "gate": [220, 221, 224], "r_t": 220, "sigma": [220, 221, 223, 224, 225, 249, 250, 258, 259, 267, 268, 377, 387], "w_": [220, 221, 224, 225], "ir": [220, 221], "x_t": [220, 224], "b_": [220, 221, 224, 225], "hr": [220, 221, 224], "h_": [220, 221, 224], "z_t": 220, "iz": [220, 221], "hz": [220, 221], "n_t": 220, "odot": [220, 221, 224, 225], "hn": [220, 221, 224], "h_t": [220, 224], "sigmoid": [220, 221, 224, 225], "hadamard": [220, 221, 224, 225], "multilay": [220, 224], "_t": [220, 224, 388, 389], "ge": [220, 224], "bernoulli": [220, 224], "b_ih": [220, 221, 224, 225, 226], "b_hh": [220, 221, 224, 225, 226], "seq": [220, 222, 224, 226, 266, 378, 384, 386], "h_0": [220, 224, 225], "unbatch": [220, 224], "pack_padded_sequ": [220, 224], "pack_sequ": [220, 224], "num": [220, 224, 384], "_layer": [220, 224], "_size": [220, 221, 224, 225], "h_n": [220, 224], "packedsequ": [220, 224], "weight_ih_l": [220, 224], "learnabl": [220, 221, 224, 225], "w_ir": 220, "w_iz": 220, "w_in": 220, "num_direct": [220, 224], "weight_hh_l": [220, 224], "w_hr": 220, "w_hz": 220, "w_hn": 220, "bias_ih_l": [220, 224], "b_ir": 220, "b_iz": 220, "b_in": 220, "bias_hh_l": [220, 224], "b_hr": 220, "b_hz": 220, "b_hn": 220, "mathcal": [220, 221, 224, 225], "sqrt": [220, 221, 224, 225, 267, 268], "frac": [220, 221, 224, 225, 377], "seq_len": [220, 224], "subtli": 220, "matrix": [220, 224, 235, 236], "contrast": [220, 296, 391], "hx": [220, 221, 224, 225], "lstmcell": [221, 226], "gru_cel": 221, "z": 221, "weight_ih": [221, 225], "weight_hh": [221, 225], "bias_ih": [221, 225], "bias_hh": [221, 225], "rocm": [221, 225], "embedd": [222, 226], "grucel": [222, 272], "python_bas": [222, 226], "recurrent_st": [222, 226, 280, 378], "custom_kei": [222, 226], "recurrent_mod": [222, 226], "make_tensordict_prim": [222, 226, 378], "rs": [222, 375], "gru_module_train": 222, "policy_train": [222, 226], "traj_td": [222, 226], "supplementari": [222, 226, 377, 394], "That": [222, 226, 377, 387], "dealt": [222, 226], "poorli": [222, 226], "data_collector": [222, 226, 376], "policy_infer": [222, 226], "td_inf": [222, 226], "assert_clos": [222, 226], "upscal": [223, 249, 250], "tanh_loc": [223, 249, 250], "event_dim": [223, 248, 249], "poor": [223, 249, 250], "explos": [223, 249, 250], "switch": [223, 250, 333], "formula": [223, 249, 250, 283, 285, 298, 301, 371, 377], "proj_siz": 224, "c0": [224, 225], "c1": [224, 225], "call_lstm": [224, 225], "c_out": [224, 225], "i_t": 224, "ii": [224, 225], "hi": [224, 225], "f_t": 224, "hf": [224, 225], "g_t": 224, "ig": [224, 225], "hg": [224, 225], "o_t": 224, "ho": [224, 225], "c_t": 224, "c_": 224, "forget": 224, "1402": 224, "1128": 224, "c_0": [224, 225], "proj": 224, "c_n": 224, "w_ii": 224, "w_if": 224, "w_ig": 224, "w_io": 224, "w_hi": 224, "w_hf": 224, "w_hg": 224, "w_ho": 224, "b_ii": 224, "b_if": 224, "b_ig": 224, "b_io": 224, "b_hi": 224, "b_hf": 224, "b_hg": 224, "b_ho": 224, "weight_hr_l": 224, "_revers": 224, "analog": [224, 380], "cn": 224, "lstm_cell": 225, "h_1": 225, "c_1": 225, "time_step": [225, 266], "cx": 225, "correspont": 226, "recurrent_state_h": [226, 378], "recurrent_state_c": [226, 378], "triplet": [226, 270, 271], "lstm_modul": 226, "rs_h": 226, "rs_c": 226, "hidden0": 226, "hidden1": 226, "single_bias_last_lay": 227, "layer_class": 227, "layer_kwarg": 227, "perceptron": [227, 380], "aslo": 227, "42": [227, 283, 284, 286, 290, 297, 304, 376, 377, 389], "noisylinear": [227, 235, 368, 376], "noisylazylinear": [227, 368], "mpcplanner": 228, "tensordict_out": [228, 394], "mppi": 229, "covari": 229, "william": [229, 303], "aldrich": 229, "theodor": 229, "01149": 229, "hansen": 229, "wang": 229, "su": 229, "04955": 229, "valueoper": [229, 255, 256, 257, 283, 284, 285, 286, 291, 297, 298, 301, 302, 303, 304, 306, 307, 362, 370, 375, 377, 381], "tdlambdaestim": [229, 368, 375], "value_net": [229, 287, 289, 303, 315, 316, 317, 318, 377, 380, 381, 384], "adv": 229, "lmbda": [229, 309, 315, 318, 320, 326, 327, 328, 331, 332, 371, 375, 377, 388], "value_network": [229, 286, 287, 289, 290, 292, 297, 304, 315, 316, 317, 318, 371, 375, 377, 381, 384, 387], "temperatur": [229, 284, 290, 297], "neg_inf": [230, 231], "inf": [230, 231], "api_doc": [230, 231], "tf_agent": [230, 231], "event": [230, 231, 240, 324, 325, 326, 327, 329, 330, 331, 332, 391], "unnorm": [230, 231, 240], "sparse_mask": [230, 231], "dens": [230, 231], "0831": [230, 231], "1203": [230, 231], "0928": [230, 231], "1972": [230, 231], "grad_method": [231, 240], "reparamgradientstrategi": [231, 240], "passthrough": [231, 240], "relaxedonehot": [231, 240], "zeros_lik": [231, 389], "sample_non_valid": 231, "share_param": [232, 233, 234, 387, 388], "get_stateful_net": [232, 233, 234, 299, 370, 371], "from_stateful_net": [232, 233, 234, 299, 371], "homogen": [232, 233, 387, 388], "agent_network": [232, 233], "modulelist": [232, 233, 387, 393], "2592": [232, 376], "decentr": 232, "n_agent_input": [233, 234, 387, 388], "n_agent_output": [233, 234, 387, 388], "lazili": [233, 389], "toech": 233, "centalis": 233, "shown": [233, 370, 386, 387, 388, 391], "agent_dim": 234, "vmap_random": [234, 299, 371], "stateful_net": [234, 299], "Such": [234, 299], "deepcopi": [234, 299, 387], "multiagentmlp": [234, 387, 388], "snet": 234, "hasattr": [234, 375], "kaiming_normal_": 234, "reset_paramet": 234, "std_init": [235, 236], "initialize_paramet": 235, "isol": [235, 299], "1706": [236, 251], "10295v3": 236, "induc": 236, "aid": 236, "scale_map": 237, "biased_softplus_1": 237, "scale_lb": [237, 244, 245], "module_norm": 237, "1803": [238, 239, 242], "10122": [238, 239], "rnn_hidden": 238, "latent": 239, "excacli": 240, "inres": 241, "mu": [241, 267, 268, 377], "state_shap": [242, 313], "mixing_embed_dim": [242, 313], "qmix": [242, 387, 388], "mixer": [242, 251, 313], "monoton": 242, "hyper": 242, "11485": 242, "qmixerloss": [242, 251], "qmix_vdn": [242, 251], "vdn": [242, 251], "greedi": [243, 262, 263, 264, 271, 376, 378, 380], "hidden_dim": [244, 245], "posterior": [244, 294], "rssm": [244, 245, 294], "1811": [244, 245], "04551": [244, 245], "obs_embed": 244, "rnn_hidden_dim": 245, "dream": 245, "tanhtransform": 249, "get_mod": 249, "adam": [249, 375, 376, 377, 378, 381, 384, 387, 388, 389], "decomposit": 251, "05296": 251, "hide": [252, 377, 387, 388], "satisfi": [252, 370], "vmap_dim": 252, "lam": 252, "sample_in": 252, "sample_in_td": 252, "vm": 252, "translat": [254, 269], "character": [254, 261, 269, 270, 272, 391], "overflow": [254, 261, 262, 269, 270, 271, 272, 273], "td_modul": [254, 255, 256, 257, 269, 272, 273, 275, 277, 380, 393], "3635": 254, "0340": 254, "1476": 254, "3911": [254, 389], "1664": [254, 376, 389], "5455": 254, "2247": 254, "4583": 254, "2916": 254, "2160": 254, "5337": 254, "5193": 254, "grad_fn": [254, 263, 264, 393], "addmmbackward0": 254, "actorvalueoper": [255, 370, 380], "get_policy_oper": [255, 256, 257, 285, 298, 301, 370], "standalon": [255, 256, 257, 380], "tdmodul": [255, 256, 257, 362], "get_critic_oper": 255, "common_oper": [255, 257], "policy_oper": [255, 256, 257], "value_oper": [255, 256, 257], "module_hidden": [255, 257], "td_module_hidden": [255, 257], "module_act": [255, 257], "td_module_act": [255, 256, 257], "module_valu": [255, 256, 257], "td_module_valu": [255, 256, 257], "state_action_valu": [255, 277, 284, 290, 297, 304, 314, 362, 370, 375, 387, 393], "td_clone": [255, 256, 257], "tensordictmodulewrapp": [255, 357, 358, 362], "get_policy_head": [255, 256, 257], "safesequenti": [255, 256, 257, 313], "head": [255, 257, 280, 285, 298, 301], "get_value_head": [255, 256, 257], "get_value_oper": [255, 256, 257, 285, 298, 301], "action_modul": 256, "state_valu": [256, 257, 277, 285, 290, 297, 298, 301, 302, 304, 315, 316, 317, 318, 320, 322, 324, 326, 328, 329, 331, 370, 375, 377, 388], "actorcriticoper": [257, 285, 298, 301, 370, 380], "embeddig": 257, "refet": 257, "actorcriticwrapp": [257, 370, 375], "po": [258, 259, 264], "sigma_init": [258, 259, 387], "sigma_end": [258, 259, 387], "annealing_num_step": [258, 259, 263, 264, 267, 268, 375, 376, 378, 380, 384, 387], "captur": [258, 259, 263, 264, 267, 268], "omiss": [258, 259, 263, 264, 267, 268], "ommit": [258, 259, 263, 264, 267, 268], "inferec": 260, "set_tensor_kei": 260, "dt_inference_wrapp": 260, "baz": 260, "inference_context": 260, "obs_dim": 260, "tanhdelta": [260, 368, 375, 387], "dtactor": 260, "actor_modul": [260, 393], "dist_class": 260, "dist_kwarg": 260, "distribution_kwarg": [260, 269, 273, 377, 387, 388], "inference_actor": 260, "sequence_length": 260, "mask_context": 260, "out_act": 260, "qvaluemodul": [261, 270, 313, 378, 380, 384], "distributionaldqnnet": 261, "make_log_softmax": 261, "my_action_valu": [262, 271], "chanc": 262, "thid": 262, "eps_init": [263, 264, 267, 268, 376, 378, 380, 384], "eps_end": [263, 264, 267, 268, 376], "explorative_polici": [263, 264, 267, 268], "9055": [263, 264, 389], "9277": [263, 264], "6295": [263, 264], "2532": [263, 264], "addbackward0": [263, 264], "lmheadmodel": 265, "actor_head": [265, 285, 298, 301], "base_model": 265, "lm_head": 265, "macro": 266, "lookahead": 266, "n_action": [266, 284, 287, 289, 300, 304], "reshape_cat": 266, "actor_bas": 266, "obs_cat": 266, "obs_cat_reshap": 266, "action_orig": 266, "counter": [266, 345, 372], "ornstein": [267, 268, 375], "uhlenbeck": [267, 268, 375], "ou": [267, 268, 375], "correl": [267, 268], "noise_t": [267, 268], "noise_": [267, 268], "theta": [267, 268, 377, 389], "sigma_t": [267, 268], "sigma_": [267, 268], "anneal": [267, 268, 376, 380, 387], "ou_prev_nois": [267, 268], "ou_step": [267, 268], "x0": [267, 268], "sigma_min": [267, 268], "n_steps_ann": [267, 268], "is_init_kei": [267, 268], "_ou_prev_nois": [267, 268], "_ou_step": [267, 268], "default_interaction_typ": [269, 273, 380], "interaction_typ": [269, 273], "datacollectorbas": [269, 354, 357, 358, 362, 368], "set_interaction_typ": [269, 273], "compositedistribut": [269, 380], "distribution_map": 269, "name_map": 269, "cache_dist": [269, 273], "n_empirical_estim": [269, 273], "compound": [269, 380], "categ": 269, "chose": 271, "functionalmodul": 272, "functionalmodulewithbuff": 272, "td_fmodul": 272, "td_function": 272, "td_state": 272, "params_repeat": 272, "td_vmap": [272, 275], "random_sampl": [272, 273], "suppli": 273, "fist": 273, "log_prob_kei": [273, 388], "probabilistictensordictsequenti": [274, 283, 285, 298, 301, 303, 357, 358, 393], "partial_toler": [274, 275, 386], "who": [274, 275], "AND": [274, 275], "tensordictsequenci": 275, "tensordictsequ": 275, "safeprobabilisticmodul": [275, 370], "spec1": 275, "net1": 275, "module1": 275, "td_module1": 275, "spec2": 275, "module2": 275, "td_module2": 275, "clamp": [276, 294, 352, 387, 389], "boundari": [276, 377, 387, 388], "resolut": 276, "9944": 276, "9991": 276, "3020": 276, "2299": [276, 389], "5418": 276, "2989": 276, "6849": 276, "3169": 276, "2690": 276, "9649": [276, 389], "5686": 276, "8602": 276, "0315": 276, "8455": [276, 389], "6027": 276, "4746": 276, "7843": 276, "7782": 276, "2111": 276, "5115": 276, "4687": 276, "5760": 276, "custommodul": 277, "imaginari": 278, "imagin": 278, "transition_model": 278, "get_reward_oper": 278, "get_transition_model_oper": 278, "min_val": [279, 282], "_bia": 279, "surject": 282, "expln": 282, "biased_softplu": [282, 368], "beggin": 282, "biased_softplus_": 282, "syntax": [282, 375], "met": [282, 387, 389], "1602": 283, "01783v2": 283, "actor_network": [283, 284, 285, 286, 288, 290, 291, 297, 298, 300, 301, 302, 303, 304, 306, 307, 371, 375, 377, 381, 387, 388], "critic_network": [283, 285, 298, 301, 303, 377, 388], "entropy_bonu": [283, 285, 298, 301, 377], "favour": [283, 285, 298, 301], "samples_mc_entropi": [283, 285, 298, 300, 301], "mont": [283, 285, 298, 301, 375], "carlo": [283, 285, 298, 301, 375], "entropy_coef": [283, 285, 298, 301, 377, 388], "critic_coef": [283, 285, 298, 301, 377], "loss_critic_typ": [283, 285, 298, 301, 303, 377], "l1": [283, 285, 286, 287, 291, 298, 301, 302, 303, 306, 307, 310, 313, 370, 375], "l2": [283, 285, 286, 287, 288, 289, 291, 294, 295, 298, 301, 302, 303, 306, 307, 310, 313, 375, 387], "smooth_l1": [283, 284, 285, 286, 287, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 310, 313, 377], "separate_loss": [283, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307], "propag": [283, 285, 286, 290, 291, 297, 298, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 377, 387, 388], "advantage_kei": [283, 285, 298, 301, 303, 315, 316, 317, 318], "value_target_kei": [283, 285, 298, 301, 303, 315, 316, 317, 318], "value_target": [283, 285, 298, 301, 303, 315, 316, 317, 318, 377, 388], "ddp": [283, 285, 298, 301, 303], "fsdp": [283, 285, 298, 301, 303], "divid": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 304, 306, 307, 355, 370, 375, 387, 388, 389], "clip_valu": [283, 285, 298, 301, 303], "loss_crit": [283, 301, 377, 388], "loss_entropi": [283, 301, 377, 388], "loss_object": [283, 301, 377, 388], "recur": [283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318, 319, 380], "next_reward": [283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318], "next_don": [283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318], "next_termin": [283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 315, 316, 317, 318], "loss_obj": 283, "next_observ": [283, 284, 286, 287, 289, 290, 291, 297, 301, 302, 303, 304, 306, 307, 386], "sacloss": [283, 296, 305, 368], "select_out_kei": [283, 284, 286, 290, 291, 297, 301, 302, 304, 306, 307], "make_value_estim": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 308, 313, 371, 375, 376, 387, 388, 393], "value_typ": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 309, 313, 375], "hyperparam": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 375], "enum": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 309, 313, 375], "default_value_estim": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 375, 393], "default_value_kwarg": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 368, 375], "dqn_loss": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 308, 313], "td1": [283, 284, 286, 287, 289, 291, 292, 293, 297, 299, 301, 302, 303, 304, 306, 307, 313, 375], "conserv": [284, 289], "qvalue_network": [284, 290, 291, 297, 302, 304, 306, 307], "unti": [284, 297, 302, 304, 306, 307], "loss_funct": [284, 286, 287, 288, 289, 290, 291, 297, 302, 304, 306, 307, 310, 313, 375, 387], "alpha_init": [284, 291, 300, 302, 304], "min_alpha": [284, 291, 300, 302, 304], "max_alpha": [284, 291, 300, 302, 304], "fixed_alpha": [284, 291, 300, 302, 304], "target_entropi": [284, 291, 300, 302, 304], "prod": [284, 300, 304], "delay_actor": [284, 286, 304, 306, 307], "delay_qvalu": [284, 291, 302, 304, 306, 307], "min_q_weight": 284, "max_q_backup": 284, "backup": 284, "deterministic_backup": 284, "num_random": 284, "with_lagrang": 284, "lagrang": 284, "lagrange_thresh": 284, "valueclass": [284, 286, 291, 302, 304, 306, 307], "qvalu": [284, 290, 291, 297, 302, 304, 306, 307], "loss_actor": [284, 286, 290, 291, 297, 302, 303, 304, 306, 307, 347, 375, 381, 387, 393], "loss_actor_bc": 284, "loss_alpha": [284, 291, 302, 304], "loss_cql": [284, 289], "loss_qvalu": [284, 289, 290, 291, 297, 302, 304, 306, 307], "loss_alpha_prim": 284, "clip_epsilon": [285, 377, 388], "normalize_advantag": [285, 298, 301, 388], "value_kei": [285, 298, 301, 315, 316, 317, 318, 375], "somemodul": [285, 298, 301], "someactor": [285, 298, 301], "value_head": [285, 298, 301], "somevalu": [285, 298, 301], "loss_modul": [285, 296, 298, 299, 301, 305, 352, 361, 362, 371, 372, 375, 376, 377, 387, 388, 391], "ppoloss": [285, 298, 368], "delay_valu": [286, 287, 289, 292, 303, 304, 313, 376, 378, 384, 387], "loss_valu": [286, 290, 297, 303, 304, 375, 377, 381, 387, 388, 393], "pred_valu": [286, 289, 306, 307, 375, 381, 393], "pred_value_max": [286, 375, 381, 393], "target_valu": [286, 289, 302, 306, 307, 314, 371, 375, 381, 393], "target_value_max": [286, 375, 381, 393], "qvalueactor": [287, 289, 313, 370, 376, 378], "double_dqn": 287, "06461": [287, 296], "mult_one_hot": [287, 290, 291, 313], "loss_val": [287, 289, 371, 375, 377, 378, 381, 382, 384, 387, 388, 391], "01345": 288, "distanc": [289, 298, 310, 314, 315, 388], "dcql_loss": 289, "2110": [290, 297], "06169": [290, 297], "num_qvalue_net": [290, 291, 297, 302, 304, 306, 307], "expectil": [290, 297], "tau": [290, 297, 305, 375, 376, 387], "antmaz": [290, 297], "sticht": [290, 297], "onehotcategor": [290, 291, 368], "target_entropy_weight": 291, "disctount": 292, "distributionalqvalueactor": [292, 370], "input_tensordict": [292, 375], "actor_model": 293, "value_model": [293, 295], "imagination_horizon": 293, "unrol": [293, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332], "discount_loss": [293, 295], "lambda_kl": 294, "lambda_reco": 294, "lambda_reward": 294, "reco_loss": 294, "reward_loss": 294, "free_nat": 294, "nat": 294, "delayed_clamp": 294, "global_averag": 294, "value_loss": 295, "fake_data": 295, "ddpgloss": [296, 305, 362, 368, 375, 381, 387, 393], "td3loss": [296, 305, 368], "value_network_update_interv": 296, "qvalueclass": 297, "loss_value_diff": 297, "diff": 297, "old_polici": 298, "new_polici": 298, "apart": [298, 388], "dtarg": 298, "samples_mc_kl": 298, "analyt": 298, "decrement": 298, "loss_": [299, 347, 371, 375, 381], "equip": [299, 378, 380], "gh": 299, "_acceptedkei": 299, "dataclass": 299, "_forward_value_estimator_kei": 299, "alter": [299, 370], "value_estim": [299, 315, 316, 317, 318, 319, 371, 375, 388], "myloss": 299, "action2": 299, "augment": [299, 382, 384, 391], "set_exploration_mod": [299, 368], "deterministic_sampling_mod": 299, "convert_to_funct": [299, 375], "expand_dim": 299, "create_target_param": [299, 375], "compare_against": [299, 375], "_param": 299, "expans": 299, "resampl": 299, "_target_param": 299, "network_nam": 299, "blend": 299, "add_random_modul": [299, 371], "proxim": [301, 377, 388], "optimis": [301, 348, 377, 387, 388], "flavour": [301, 387, 388, 393], "clipppoloss": [301, 368, 377, 388], "klpenppoloss": [301, 368], "regularis": 301, "06347": 301, "gae": [301, 368, 371, 375, 377, 388], "ppo_loss": 301, "tdlambda": [301, 309, 371, 375], "base_lay": 301, "randn_lik": 301, "samplelogprob": 301, "openreview": 302, "ay8zfzm0tdd": 302, "sub_sample_len": 302, "subsampl": [302, 343, 372], "action_log_prob_actor": 302, "state_action_value_actor": [302, 306, 307], "connectionist": 303, "1992": 303, "doi": 303, "1007": 303, "bf00992696": 303, "actor_net": [303, 375, 377], "1801": 304, "01290": 304, "applic": [304, 313, 379, 380, 389], "1812": 304, "05905": 304, "redqloss": [305, 368], "math": 305, "theta_t": [305, 389], "theta_": [305, 389], "polyak": 305, "minimalist": 306, "06860": 306, "qvalue_loss": 306, "actor_loss": 306, "policy_nois": [306, 307], "noise_clip": [306, 307], "td3_bc": 306, "bc_loss": 306, "lmbd": 306, "next_state_valu": [306, 307, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 368], "td0": [308, 375, 387], "strict_shap": 310, "view_a": 310, "qmixer": [313, 368], "local_valu": 313, "visibl": [313, 388], "dafault": 313, "acceptedkei": 313, "global_valu": 313, "penultim": 313, "local_value_network": 313, "mixer_network": 313, "value_modul": [313, 377, 393], "qnet": [313, 375], "next_val_kei": 314, "pred_next_v": 314, "usus": 314, "mse": 314, "q_valu": 314, "n_steps_to_next": 314, "value_next_st": 314, "1506": [315, 320, 328], "02438": [315, 320, 328], "exponenti": [315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 350], "average_ga": [315, 377], "skip_exist": [315, 316, 317, 318], "time_dim": [315, 317, 318, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332], "advang": 315, "gradient_mod": 315, "value_error": [315, 316, 317, 318, 319], "target_param": [315, 316, 317, 318, 319, 375, 388], "98": [315, 316, 317, 318, 375, 376, 389], "94": [315, 318, 375, 376, 389, 390], "unpack": [315, 316, 317, 318], "tensor_kei": [315, 316, 317, 318, 319], "next_valu": [315, 316, 317, 318, 319], "aka": [316, 376, 387], "average_reward": [316, 317, 318], "tdestim": [316, 317, 319], "infti": 317, "valuefunctionbas": 319, "old_stat": [320, 322, 324, 326, 328, 329, 331], "new_stat": [320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "rolling_gamma": [324, 325, 326, 327, 329, 330, 331, 332], "g1": [324, 325, 326, 327, 329, 330, 331, 332], "g2": [324, 325, 326, 327, 329, 330, 331, 332], "g3": [324, 325, 326, 327, 329, 330, 331, 332], "g4": [324, 325, 326, 327, 329, 330, 331, 332], "v3": [324, 325, 326, 327, 329, 330, 331, 332, 394], "preproc": [333, 387], "as_non_tensor": [333, 387], "render_method": 333, "pass_tensordict": 333, "syntat": 333, "sugar": 333, "out_file_bas": 334, "skip_reset": 334, "center_crop": 335, "make_grid": 335, "csv": [335, 337, 339, 376, 383, 384], "wandb": [335, 339, 342, 383, 393], "tensorboard": [335, 339, 341, 383, 393], "log_dir": [335, 336, 337, 339, 341, 342, 376, 384], "cheetah_video": 335, "run_video": 335, "openxexperiencereplai": 335, "run_video_0": 335, "templat": 336, "pt": [337, 372, 390], "video_fp": 337, "minim": [337, 391], "dependeci": 337, "cur_dir": 337, "csv_log": 337, "add_video": 337, "video_": 337, "experiment_nam": [338, 339], "uuid": [338, 376, 394], "logger_typ": 339, "logger_nam": 339, "mlflow": [339, 340], "wandb_kwarg": 339, "mlflow_kwarg": 339, "tracking_uri": 340, "uri": 340, "datastor": 340, "tb_log": 341, "tensoarboard": 341, "td_log": 341, "save_dir": 342, "resum": 342, "uncategor": 342, "sub_traj_len": 343, "min_sub_traj_len": 343, "register_op": [343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 372, 376], "process_optim_batch": [343, 349, 350, 372], "td_out": [343, 351], "_process_optim_batch_hook": [343, 372], "batch_subsampl": 343, "clear_cuda": 344, "pre_optim_step": [344, 372], "log_pbar": [345, 346, 348, 350, 372, 376], "progress": [345, 346, 348, 352, 372, 376, 378, 394], "count_fram": 345, "pre_steps_log": [345, 346, 372], "count_frames_log": 345, "lognam": 346, "r_train": [346, 376], "log_reward": [346, 376], "loss_compon": 347, "appl": 347, "optimizer_hook": 347, "record_interv": [348, 375, 376], "record_fram": [348, 355, 375, 376], "policy_explor": [348, 362, 375, 376, 380, 384], "log_kei": [348, 376], "underestim": 348, "set_exploration_typ": [348, 368, 377, 378, 380, 387, 393], "r_evalu": [348, 375], "flatten_tensordict": [349, 376], "max_dim": 349, "rb_trainer": 349, "batch_process": [349, 350, 351, 372], "post_loss": [349, 372], "999": [350, 376], "jitter": 350, "finfo": 350, "default_dtyp": 350, "get_default_dtyp": 350, "reward_norm": 350, "update_reward_stat": 350, "normalize_reward": 350, "make_train": [351, 368], "_process_batch_hook": [351, 372], "select_kei": [351, 372], "versatil": [352, 379], "optim_steps_per_batch": [352, 372, 376], "clip_grad_norm": 352, "clip_norm": 352, "progress_bar": 352, "save_trainer_interv": 352, "log_interv": [352, 376], "save_trainer_fil": [352, 372], "update_weights_interv": [354, 376], "update_weight": 354, "post_step": [354, 372, 376], "cfg": [355, 356, 357, 358, 359, 360, 361, 362, 363, 366], "dictconfig": [355, 356, 357, 358, 360, 361, 362, 363, 366], "unknowingli": 355, "annealing_fram": [355, 375], "init_env_step": [355, 356, 375], "proof_environ": [356, 375], "sta": 356, "ot": 356, "actor_model_explor": [357, 358, 375], "make_env_kwarg": [357, 358], "targetnetupdat": [359, 361, 362], "replayargsconfig": 360, "target_net_updat": [362, 375, 376], "constitu": 362, "egreedywrapp": 362, "env_proof": 362, "obs_spec": 362, "net_valu": 362, "dir": [362, 372, 376], "gettempdir": 362, "argpars": [363, 366], "namespac": [363, 366, 394], "parser": [363, 366], "transformed_env_constructor": [363, 368], "num_env_per_collector": [364, 365], "video_tag": 366, "norm_obs_onli": 366, "use_env_cr": 366, "custom_env_mak": 366, "custom_env": 366, "return_transformed_env": 366, "action_dim_gsd": 366, "state_dim_gsd": 366, "obs_norm_state_dict": 366, "wheter": 366, "maker": [366, 376], "asyncdatacollector": 368, "distributedsyncdatacollector": 368, "submitit_delayed_launch": 368, "raycollector": 368, "rational": 368, "footnot": 368, "unboundeddiscretetensorspec": 368, "lazystackedtensorspec": 368, "lazystackedcompositespec": 368, "prompttensordicttoken": 368, "rolloutfrommodel": 368, "tokenizeddatasetload": 368, "create_infinite_iter": 368, "constantklcontrol": 368, "adaptiveklcontrol": 368, "consolidate_spec": 368, "check_no_exclusive_kei": 368, "contains_lazy_spec": 368, "nested2t": 368, "h5combin": 368, "h5split": 368, "tictactoeenv": 368, "check_marl_group": 368, "get_available_librari": 368, "make_composite_from_td": [368, 389], "terminated_or_trunc": 368, "dreamerdecod": 368, "braxwrapp": 368, "dmcontrolwrapp": 368, "jumanjienv": 368, "jumanjiwrapp": 368, "meltingpotenv": 368, "meltingpotwrapp": 368, "mogymenv": 368, "mogymwrapp": 368, "multithreadedenvwrapp": 368, "openmlenv": 368, "pettingzooenv": [368, 387], "robohiveenv": 368, "smacv2env": 368, "smacv2wrapp": 368, "vmaswrapp": 368, "qvaluehook": 368, "distributionalqvaluehook": 368, "reset_nois": 368, "cemplann": 368, "mpcplannerbas": 368, "mppiplann": 368, "independentnorm": 368, "normalparamwrapp": 368, "truncatednorm": 368, "maskedonehotcategor": 368, "inv_softplu": 368, "vmapmodul": 368, "distributionaldqnloss": [368, 376], "discretesacloss": 368, "iqlloss": 368, "discreteiqlloss": 368, "cqlloss": 368, "discretecqlloss": 368, "dtloss": 368, "onlinedtloss": 368, "td3bcloss": 368, "a2closs": 368, "reinforceloss": 368, "dreameractorloss": 368, "dreamermodelloss": 368, "dreamervalueloss": 368, "td0estim": [368, 375], "td1estim": [368, 375], "td0_return_estim": 368, "td0_advantage_estim": 368, "td1_return_estim": 368, "vec_td1_return_estim": 368, "td1_advantage_estim": 368, "vec_td1_advantage_estim": 368, "td_lambda_return_estim": 368, "vec_td_lambda_return_estim": 368, "td_lambda_advantage_estim": 368, "vec_td_lambda_advantage_estim": 368, "generalized_advantage_estim": 368, "vec_generalized_advantage_estim": 368, "reward2go": 368, "distance_loss": [368, 375], "hold_out_net": 368, "hold_out_param": [368, 375], "softupd": [368, 375, 376, 378, 381, 384, 387], "hardupd": [368, 375, 381], "batchsubsampl": [368, 372], "clearcudacach": 368, "countframeslog": 368, "logreward": [368, 372, 376], "optimizerhook": [368, 376], "replaybuffertrain": [368, 372, 376], "rewardnorm": 368, "selectkei": [368, 372], "trainerhookbas": [368, 372, 376], "updateweight": [368, 372, 376], "make_collector_offpolici": 368, "make_collector_onpolici": 368, "make_dqn_loss": 368, "make_replay_buff": [368, 375], "make_target_updat": 368, "parallel_env_constructor": [368, 375], "sync_async_collector": 368, "sync_sync_collector": 368, "correct_for_frame_skip": 368, "get_stats_random_rollout": 368, "mlflowlogg": 368, "get_logg": 368, "generate_exp_nam": 368, "journei": 369, "textbook": 369, "highlight": [369, 387], "ever": [369, 388], "bump": 369, "think": [369, 377, 387, 388, 394], "benefit": [369, 379, 387, 388, 391], "pr": 369, "ground": [370, 375, 389], "recycl": [370, 391], "impos": 370, "violat": 370, "noisier": 370, "Their": [370, 387, 388], "sd": 370, "prob_modul": 370, "pick": [370, 375, 376, 380], "hopefulli": [370, 376], "functional_modul": 370, "make_funct": 370, "mathbb": [370, 376], "rightarrow": [370, 376], "soften": 370, "backbon": [370, 378, 380, 386, 393], "make_actor": 370, "make_valu": 370, "shared_param": 370, "make_common": 370, "reusabl": [371, 375, 391], "swappabl": [371, 375], "characterist": [371, 375, 389], "trainabl": [371, 375, 381, 390], "smth": [371, 375], "metric": [371, 375], "plenti": 371, "amort": [371, 376, 377], "told": [371, 377], "pseudo": [371, 382, 389], "buri": 371, "str_valu": 371, "nutshel": [371, 375], "barto": [371, 387, 388], "chapter": [371, 383], "significantli": [371, 375, 376, 381, 388], "next_stat": 371, "value_net_loss": 371, "pow": [371, 375], "room": 371, "signifi": [371, 387, 388], "underperform": 371, "thin": 371, "intric": [371, 380], "believ": 372, "scheme": [372, 394], "substenti": 372, "_pre_steps_log_hook": 372, "_pre_optim_hook": 372, "sub_batch": 372, "_post_loss_hook": 372, "_post_optim_hook": 372, "post_optim": [372, 376], "_post_optim_log": 372, "post_optim_log": 372, "_post_steps_hook": 372, "_post_steps_log_hook": 372, "post_steps_log": 372, "reserv": 372, "logginghook": 372, "logging_hook": 372, "save_dict": 372, "some_valu": 372, "torchsnapshot": 372, "ckpt_backend": 372, "filepath": 372, "save_train": 372, "load_from_fil": 372, "152": [374, 389, 392], "galleri": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "mem": [374, 392], "mb": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394], "torchrl_demo": [374, 392, 393], "43": [374, 376, 377, 378, 379, 389, 392, 393], "926": [374, 392, 393], "324": [374, 375, 389, 392, 393], "rb_tutori": [374, 391, 392], "53": [374, 375, 376, 389, 390, 391, 392], "110": [374, 389, 391, 392], "521": [374, 389, 392], "477": [374, 389, 392], "316": [374, 380, 389, 392], "coding_dqn": [374, 376, 392], "294": [374, 376, 389, 392], "1017": [374, 392], "dqn_with_rnn": [374, 378, 392], "389": [374, 378, 389, 392], "multiagent_ppo": [374, 388, 392], "311": [374, 388, 389, 392], "319": [374, 388, 389, 392], "coding_ddpg": [374, 375, 392], "720": [374, 375, 392], "torchrl_env": [374, 392, 394], "426": [374, 389, 392, 394], "2872": [374, 392], "coding_ppo": [374, 377, 392], "25": [374, 375, 376, 377, 378, 381, 389, 392], "493": [374, 377, 387, 389, 392], "318": [374, 377, 382, 386, 389, 392], "multiagent_competitive_ddpg": [374, 387, 392], "58": [374, 375, 376, 387, 389, 390, 392], "3113": [374, 392], "pretrained_model": [374, 390, 392], "52": [374, 376, 389, 390, 392], "259": [374, 389, 390, 392], "2601": [374, 392], "multi_task": [374, 386, 392], "49": [374, 376, 386, 389, 390, 392], "699": [374, 386, 392], "317": [374, 379, 389, 392], "45": [374, 375, 376, 380, 389, 392], "165": [374, 380, 389, 392], "620": [374, 379, 389, 392], "352": [374, 376, 381, 389, 392], "853": [374, 382, 392], "760": [374, 384, 392], "804": [374, 383, 389, 392], "347": [374, 383, 389, 392], "author": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 391, 394], "vincent": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 391, 394], "moen": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 391, 394], "assembl": 375, "focus": [375, 381], "straightforward": [375, 376, 379, 380, 381, 382, 391], "maxim": [375, 381, 389], "transpar": [375, 378], "illustr": [375, 376, 380, 391], "bash": 375, "is_fork": [375, 376, 377, 378, 387, 388, 390], "get_start_method": [375, 376, 377, 378, 387, 388, 390], "collector_devic": 375, "loss_dict": 375, "oblivi": [375, 377, 391], "elementari": 375, "didact": 375, "dilut": 375, "pessimist": [375, 376, 377], "target_actor_network_param": 375, "actor_in_kei": 375, "actor_crit": 375, "noth": [375, 377], "compromis": 375, "hp": 375, "_value_estim": 375, "elif": [375, 376], "notimplementederror": 375, "unknown": 375, "_loss_actor": 375, "td_copi": 375, "actor_network_param": [375, 387], "value_network_param": [375, 387], "_loss_valu": 375, "pred_val": 375, "target_value_network_param": 375, "glue": 375, "_forward": 375, "ndimens": 375, "remaind": 375, "env_librari": 375, "env_task": 375, "env_arg": [375, 376], "friendli": 375, "torchr": 375, "rescal": 375, "presum": 375, "make_transformed_env": 375, "reward_sc": 375, "marker": 375, "env_per_collector": 375, "transform_state_dict": 375, "make_t_env": 375, "cheat": 375, "10m": 375, "cautiou": 375, "magnitud": [375, 387], "thousand": [375, 378], "get_env_stat": 375, "proof_env": 375, "5000": [375, 376, 377, 384], "recal": [375, 377, 391], "ddpgmlpactor": 375, "ddpgmlpqnet": 375, "materi": 375, "ornsteinuhlenbeckprocessmodul": [375, 380], "make_ddpg_actor": 375, "q_net": 375, "tight": 375, "decoupl": [375, 381], "10_000": [375, 377], "traj_len": [375, 378], "make_record": 375, "recorder_obj": 375, "flavor": 375, "buffer_s": [375, 376], "random_crop_len": 375, "prb": 375, "buffer_scratch_dir": 375, "temporari": 375, "dataflow": 375, "ceil_div": 375, "utd": [375, 378], "update_to_data": 375, "realiz": 375, "_must_": 375, "001": [375, 389], "outdat": 375, "trick": [375, 376], "despit": 375, "optimizer_actor": 375, "lr": [375, 376, 377, 378, 384, 387, 388, 389], "weight_decai": [375, 376], "optimizer_valu": 375, "total_collection_step": 375, "pretti": [375, 379, 383, 391], "rewards_ev": 375, "collected_fram": 375, "r0": 375, "numel": [375, 377, 378, 384, 387, 390, 391], "current_fram": [375, 387], "sampled_tensordict": 375, "gn1": 375, "clip_grad_norm_": [375, 377, 387, 388, 389], "gn2": 375, "gn": [375, 389], "td_record": 375, "rn": 375, "set_descript": [375, 377, 378, 387, 388, 389], "2f": 375, "800": [375, 376], "3199": 375, "66it": [375, 376], "1600": [375, 376], "09": [375, 376, 389], "898": 375, "25it": [375, 376, 389], "2400": [375, 376], "1345": 375, "54it": [375, 376, 389], "3200": [375, 376], "1762": [375, 393], "35it": 375, "4000": [375, 376, 377], "2120": 375, "81it": [375, 376, 377], "48": [375, 376, 389], "4800": [375, 376, 389], "2423": [375, 389], "38it": [375, 376, 389], "56": [375, 376, 389, 390], "5600": 375, "2658": 375, "77it": 375, "90": [375, 376, 377, 388, 389, 390], "72": [375, 376, 389, 390], "202": [375, 389], "97": [375, 376, 389, 390], "329": [375, 389], "60": [375, 376, 377, 388, 389, 390, 393], "6400": [375, 393], "938": 375, "14it": [375, 376, 377, 378], "227": [375, 389], "69": [375, 376, 389, 390], "7200": 375, "648": 375, "65": [375, 376, 389, 390], "57": [375, 376, 389, 390], "368": [375, 389], "8000": [375, 377], "538": [375, 389], "58it": [375, 376, 377, 389], "67": [375, 376, 386, 389, 390], "93": [375, 376, 389, 390], "111": [375, 389], "83": [375, 376, 389, 390], "154": [375, 389], "89": [375, 376, 389], "8800": 375, "482": [375, 389], "42it": [375, 376, 389], "68": [375, 376, 389, 390], "85": [375, 376, 388, 389], "96": [375, 376, 389, 390], "9600": 375, "380": [375, 389], "71": [375, 376, 389, 390, 391], "182": [375, 389, 394], "51": [375, 376, 389], "10400it": 375, "355": [375, 389], "06it": [375, 376, 389], "281": [375, 389], "243": [375, 389], "82": [375, 376, 389, 390, 391], "74": [375, 376, 389, 390], "73": [375, 376, 388, 389, 390], "plot": [375, 377, 378, 387, 388, 389], "mention": [375, 378, 391, 394], "matplotlib": [375, 377, 378, 387, 388, 389, 391, 394], "pyplot": [375, 377, 378, 387, 388, 389, 391, 394], "plt": [375, 377, 378, 387, 388, 389, 391, 394], "zip": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "legend": [375, 387], "xlabel": [375, 378, 388, 389], "ylabel": [375, 388], "tight_layout": 375, "takeawai": [375, 376], "distpatch": 375, "jupyt": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "ipynb": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394], "sphinx": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394], "road": 376, "aspect": [376, 381], "highest": [376, 380], "prerequisit": [376, 378], "lookup": 376, "cart": 376, "pole": 376, "un": 376, "actuat": 376, "frictionless": 376, "duelingcnndqnet": 376, "egreedymodul": [376, 378, 380, 384], "is_notebook": 376, "shell": 376, "get_ipython": 376, "__class__": 376, "zmqinteractiveshel": 376, "qtconsol": 376, "terminalinteractiveshel": 376, "ipython": [376, 388, 389], "nameerror": [376, 387], "umbrella": 376, "misplac": 376, "misus": 376, "orchestr": [376, 381, 383], "five": 376, "64x64": 376, "motion": [376, 389], "obs_norm_sd": 376, "mp_context": 376, "simpler": [376, 379], "get_norm_stat": 376, "test_env": 376, "make_model": 376, "dummy_env": 376, "init_bia": 376, "exploration_modul": [376, 378, 380, 384], "eps_greedy_v": 376, "eps_greedy_val_env": 376, "actor_explor": 376, "get_replay_buff": 376, "n_optim": [376, 381, 382], "themselv": 376, "parametriz": 376, "simplic": [376, 377, 382, 390, 391, 393], "get_collector": 376, "cl": 376, "bunch": 376, "ubiquit": [376, 379], "get_loss_modul": 376, "target_updat": [376, 387], "995": [376, 389], "variat": 376, "2e": [376, 389], "wd": 376, "upd": 376, "harder": [376, 393], "5_000": 376, "500000": 376, "100000": 376, "005": [376, 387], "mandatori": [376, 377, 388, 389], "fairer": 376, "budget": 376, "dqn_exp_": 376, "uuid1": [376, 394], "9895": 376, "0737": 376, "registr": [376, 394], "cumbersom": 376, "buffer_hook": 376, "weight_updat": 376, "aliv": 376, "total_reward": 376, "07": [376, 389], "27it": 376, "3688": [376, 389], "9434": 376, "73it": [376, 389], "46it": [376, 389], "43it": [376, 389], "3172": 376, "3808": 376, "98it": 376, "4295": [376, 389], "224": [376, 389], "3415": 376, "61": [376, 389, 390], "24it": 376, "288": [376, 389], "08it": 376, "36it": [376, 389], "77": [376, 389, 390], "01it": 376, "384": [376, 389], "86it": 376, "416": [376, 389], "29it": 376, "3991": 376, "448": [376, 389], "3899": 376, "480": [376, 389, 390], "90it": 376, "4173": 376, "34it": [376, 389], "544": [376, 389], "91": [376, 389], "37it": [376, 389], "576": [376, 389], "92": [376, 377, 389, 390], "05it": 376, "608": [376, 389], "640": 376, "16it": [376, 378], "672": 376, "47": [376, 388, 389], "51it": [376, 389], "3385": 376, "704": 376, "33it": [376, 377], "736": 376, "78it": 376, "4021": 376, "768": 376, "99it": 376, "3869": 376, "97it": [376, 389], "3718": 376, "832": 376, "4082": [376, 389], "864": 376, "896": 376, "40it": [376, 377, 389], "928": 376, "960": 376, "04it": 376, "992": [376, 389], "3778": 376, "1056": 376, "10it": [376, 378], "1088": 376, "07it": 376, "1120": 376, "3596": 376, "1152": 376, "41it": [376, 389], "1184": 376, "20it": 376, "1216": 376, "1248": 376, "28it": 376, "1280": 376, "85it": 376, "84it": [376, 378], "1344": 376, "1376": 376, "48it": [376, 389], "1408": 376, "1440": 376, "1472": 376, "56it": [376, 389], "1504": 376, "50it": [376, 389], "1536": 376, "03it": 376, "1568": 376, "23it": 376, "1632": 376, "55it": [376, 389], "12it": [376, 377], "1696": 376, "1728": 376, "1760": 376, "72it": 376, "1792": 376, "09it": 376, "1824": 376, "96it": 376, "1856": 376, "1888": 376, "74it": 376, "1920": 376, "69it": 376, "1952": 376, "1984": 376, "94it": [376, 389], "2016": 376, "2048": [376, 390], "53it": [376, 389], "2080": 376, "2112": [376, 389], "80it": 376, "2144": 376, "2176": 376, "17it": 376, "2208": 376, "70it": 376, "2240": 376, "2272": 376, "93it": 376, "2336": 376, "2368": 376, "64it": 376, "2432": 376, "2464": 376, "63it": 376, "2496": 376, "2528": [376, 389], "2560": 376, "2624": 376, "68it": 376, "2656": [376, 389], "54": [376, 388, 389, 390], "2688": 376, "67it": [376, 389], "2720": [376, 389], "55": [376, 389, 390, 391], "2752": 376, "32it": 376, "2784": 376, "2816": 376, "2848": 376, "2880": 376, "2912": 376, "59": [376, 389, 390], "2944": [376, 389], "19it": 376, "2976": [376, 389], "39it": 376, "11it": [376, 389], "3040": 376, "3072": 376, "62": [376, 389, 390], "3104": 376, "63": [376, 389], "3136": 376, "60it": [376, 389], "3168": 376, "15it": [376, 377, 389], "3232": [376, 389], "6667": 376, "3264": 376, "79it": 376, "66": [376, 389, 390, 391], "3296": 376, "3328": 376, "47it": [376, 389], "3360": 376, "3392": 376, "31it": [376, 377], "3424": 376, "3456": [376, 389], "70": [376, 377, 388, 389, 390, 391], "3488": 376, "3520": 376, "3552": 376, "79": [376, 388, 389], "3584": 376, "3616": 376, "02it": [376, 389], "3648": 376, "59it": [376, 389], "3680": 376, "3712": 376, "3744": 376, "76": [376, 388, 389, 390], "3776": 376, "52it": [376, 389], "3840": 376, "65it": 376, "3872": 376, "13it": 376, "78": [376, 388, 389, 390], "3904": 376, "3936": 376, "61it": [376, 389], "3968": 376, "21it": 376, "4032": 376, "4064": 376, "4096": 376, "45it": [376, 389], "4128": [376, 389], "4160": 376, "4192": 376, "4224": 376, "4256": [376, 389], "4288": [376, 389], "4320": 376, "4352": 376, "4384": 376, "4416": 376, "57it": [376, 389], "4448": 376, "92it": 376, "4480": 376, "4512": 376, "26it": [376, 389], "4544": 376, "4576": 376, "4608": 376, "4640": 376, "4672": [376, 389], "4704": 376, "4736": 376, "4768": 376, "4832": 376, "91it": 376, "4864": 376, "4896": 376, "4928": 376, "4960": 376, "4992": 376, "5024it": 376, "print_csv_files_in_fold": 376, "folder_path": 376, "csv_file": 376, "output_str": 376, "dirpath": 376, "endswith": 376, "strip": 376, "tmp": [376, 391], "tmprz_tomjh": 376, "dqn_exp_1f3ef74": 376, "4ec7": 376, "11ef": 376, "991e": 376, "0242ac110002": 376, "38084372878074646": 376, "37784188985824585": 376, "41726210713386536": 376, "36880600452423096": 376, "39912933111190796": 376, "39912936091423035": 376, "42945271730422974": 376, "13857470452785492": 376, "15926682949066162": 376, "1994696408510208": 376, "21946831047534943": 376, "25826987624168396": 376, "30737149715423584": 376, "24386540055274963": 376, "34079253673553467": 376, "2449716478586197": 376, "grad_norm_0": 376, "89058256149292": 376, "0029563903808594": 376, "236938714981079": 376, "1101794242858887": 376, "259946823120117": 376, "8765692710876465": 376, "375800609588623": 376, "7260398864746094": 376, "8490850925445557": 376, "10000000894069672": 376, "666667461395264": 376, "qvaluenetwork": 376, "worst": 376, "accuraci": 376, "fanci": [376, 382], "1018": 376, "talk": 377, "repetit": [377, 379, 382], "six": 377, "sophist": [377, 388], "invent": 377, "overview": [377, 381, 387, 388, 393], "theta_k": 377, "pi_": 377, "exceed": 377, "discourag": [377, 389], "indispens": 377, "analyz": 377, "lingua": 377, "franca": 377, "defaultdict": [377, 389], "3e": [377, 378, 387, 388], "max_grad_norm": [377, 387, 388], "sub_batch_s": 377, "num_epoch": [377, 388], "entropy_ep": [377, 388], "charact": 377, "inverteddoublependulum": 377, "transmit": 377, "stai": 377, "confid": [377, 387, 388], "ran": 377, "f_": 377, "mu_": 377, "difficulti": [377, 394], "d_ob": 377, "d_action": 377, "policy_modul": [377, 387, 388], "said": 377, "briefli": [377, 387, 388], "refil": [377, 388], "easiest": [377, 381, 387, 388], "mathemat": [377, 387, 388], "tradeoff": [377, 388], "advantage_modul": 377, "lr_schedul": [377, 389], "cosineannealinglr": [377, 389], "eval_str": 377, "tensordict_data": [377, 388], "data_view": [377, 388], "subdata": [377, 387, 388], "cum_reward_str": 377, "4f": [377, 378, 389], "stepcount_str": 377, "param_group": [377, 387], "lr_str": 377, "eval_rollout": 377, "nice": [377, 379, 382], "460": [377, 389], "4054": [377, 389], "0908": 377, "0003": [377, 389], "464": [377, 389], "44it": [377, 389], "1121": 377, "3000": 377, "1395": 377, "467": [377, 389], "00it": 377, "1736": 377, "0002": [377, 389], "470": [377, 389], "2139": [377, 389], "6000": 377, "472": [377, 389], "2239": 377, "7000": 377, "474": [377, 389], "2280": 377, "476": [377, 389], "2482": 377, "9000": 377, "2540": 377, "469": [377, 389], "2471": 377, "cap": [377, 391], "figsiz": [377, 389], "subplot": [377, 387, 389, 394], "titl": [377, 378, 388, 389], "bit": [377, 378, 379, 387, 388, 391], "84x84": 378, "accessori": 378, "stamp": 378, "assist": 378, "emb": 378, "n_cell": 378, "customiz": 378, "wouldn": 378, "qval": 378, "stoch_polici": 378, "opportun": [378, 387], "uniniti": 378, "again": [378, 379, 380, 382, 388, 390, 391, 394], "redund": 378, "strongli": 378, "sake": [378, 390, 391], "20_000": [378, 389], "longest": 378, "npai": 378, "action_spread": 378, "124": [378, 389, 391], "0006": [378, 389], "150": [378, 389], "0005": 378, "2212": 378, "topic": [379, 380, 381], "straight": 379, "backtrack": 379, "encapsul": [379, 380, 381], "reset_with_act": 379, "7025": 379, "tp": 379, "stepped_data": 379, "spatial": 379, "useless": 379, "policyless": 379, "appreci": 379, "monitor": 379, "examin": [379, 387], "tackl": 380, "delv": 380, "bypass": 380, "extractor": 380, "palliat": 380, "additivegaussianmodul": [380, 387], "had": [380, 382], "exploration_polici": [380, 387], "greedili": 380, "2d": [380, 387, 388], "innov": [380, 381], "rollout_explor": 380, "sole": 381, "tradit": [381, 387], "supervis": [381, 382, 391, 394], "n_collect": 381, "get_next_batch": 381, "ddpg_loss": 381, "total_loss": 381, "prove": 381, "reliev": 381, "concern": 381, "321": [381, 384, 389], "accustom": 382, "surprisingli": 382, "fundament": 382, "art": [382, 387, 388], "multirpocess": 382, "countless": 382, "yourself": [382, 387, 388], "lightweight": 383, "portabl": 383, "everywher": 383, "log_scalar": 383, "elaps": 383, "my_scalar": 383, "saw": [383, 389, 391], "excess": 383, "lesson": 384, "voluntarili": 384, "value_mlp": 384, "100_000": 384, "init_rand_step": 384, "training_loop": 384, "video_record": 384, "arbitrarili": 384, "total_count": 384, "total_episod": 384, "t0": 384, "t1": 384, "conclud": [384, 390], "tutorials_python": 385, "tutorials_jupyt": 385, "env1_obs_kei": 386, "observation_stand": 386, "env2_obs_kei": 386, "observation_walk": 386, "tdreset1": 386, "tdreset2": 386, "lazy_stack": 386, "policy_common": 386, "policy_stand": 386, "policy_walk": 386, "But": 386, "env1_mak": 386, "env2_mak": 386, "_single_task": 386, "td_rollout": 386, "matteo": [387, 388], "bettini": [387, 388], "benchmarl": [387, 388], "simple_tag": 387, "maddpg": [387, 388], "multiagentparticleenviron": 387, "mpe": 387, "centralis": [387, 388], "tie": [387, 388], "iddpg": [387, 388], "typical": 387, "richard": 387, "andrew": 387, "mit": 387, "press": 387, "2018": 387, "mathbf": [387, 388], "pi": [387, 388, 389], "decentralis": [387, 388], "literatur": [387, 388], "overcom": [387, 388], "stationari": [387, 388], "concurr": [387, 388], "establish": 387, "gui": [387, 388], "is_sphinx": 387, "__sphinx_build__": 387, "n_iter": [387, 388], "evad": 387, "iteration_when_stop_training_evad": 387, "memory_s": 387, "n_optimiser_step": 387, "train_batch_s": 387, "polyak_tau": 387, "chaser": 387, "red": 387, "circl": [387, 388], "touch": [387, 389], "penal": 387, "acceler": [387, 388], "obstacl": 387, "drag": [387, 388], "elast": [387, 388], "collis": [387, 388], "imped": 387, "n_chaser": 387, "n_evad": 387, "n_obstacl": 387, "use_vma": 387, "simple_tag_v3": 387, "num_good": 387, "num_adversari": 387, "num_obstacl": 387, "max_cycl": 387, "num_vmas_env": [387, 388], "num_good_ag": 387, "num_landmark": 387, "adversary_1": 387, "four": [387, 388, 389], "n_agents_in_that_group": 387, "stress": [387, 388], "paramount": [387, 388], "n_rollout_step": [387, 388], "evolut": [387, 388], "group_nam": 387, "n_agents_in_group": 387, "minor": 387, "agents_exploration_polici": 387, "utilis": [387, 388], "withing": 387, "n_obs_per_ag": [387, 388], "n_actions_per_ag": [387, 388], "share_parameters_polici": [387, 388], "policy_net": [387, 388], "_agent": 387, "grant": [387, 388], "converg": [387, 388], "share_parameters_crit": [387, 388], "obs_act": 387, "cat_modul": 387, "critic_modul": 387, "fantast": [387, 388], "reset_td": 387, "interfer": 387, "flatten_kei": 387, "process_batch": 387, "group_shap": 387, "get_item_shap": [387, 388], "nested_done_kei": 387, "nested_terminated_kei": 387, "desc": [387, 388], "episode_reward_mean_": 387, "episode_reward_mean_map": 387, "train_group_map": 387, "group_batch": 387, "_group": 387, "loss_nam": 387, "episode_reward_mean": [387, 388], "traceback": [387, 394], "820": 387, "1302": 387, "__getattr__": 387, "proce": 387, "screen": 387, "fig": 387, "set_ylabel": 387, "axvlin": 387, "color": 387, "orang": 387, "set_xlabel": 387, "video_logg": 387, "vmas_log": 387, "env_with_rend": 387, "vmas_rend": 387, "print_log_dir": 387, "profici": [387, 388], "3114": 387, "lidar": 388, "sensor": 388, "mappo": 388, "ippo": 388, "phase": [388, 391], "analys": 388, "visualis": 388, "vmas_devic": 388, "6_000": 388, "minibatch_s": 388, "generalis": 388, "simd": 388, "parallelis": 388, "warp": 388, "todai": 388, "surround": 388, "dot": [388, 389], "collid": 388, "penalis": 388, "scenario_nam": 388, "final_rew": 388, "agent_collis": 388, "denot": 388, "critic_net": 388, "minibatch": 388, "episode_reward_mean_list": 388, "critic_network_param": 388, "target_critic_network_param": 388, "4579917788505554": 388, "14524875581264496": 388, "168386459350586": 388, "3613134622573853": 388, "921463131904602": 388, "2106335163116455": 388, "1925103664398193": 388, "664064407348633": 388, "6539173126220703": 388, "743558168411255": 388, "xvfb": 388, "pyvirtualdisplai": 388, "1400": [388, 389], "900": 388, "pil": 388, "rendering_callback": 388, "fromarrai": 388, "gif": 388, "save_al": 388, "append_imag": 388, "freeli": 389, "undertaken": 389, "broader": 389, "wider": 389, "algebra": 389, "acquaint": 389, "avenu": 389, "_apply_to_composit": 389, "default_x": 389, "default_i": 389, "upward": 389, "angular": 389, "sin": 389, "rad": 389, "sec": 389, "angl": 389, "deleg": 389, "new_th": 389, "new_thdot": 389, "g_forc": 389, "angle_norm": 389, "albeit": 389, "high_th": 389, "high_thdot": 389, "low_th": 389, "low_thdot": 389, "trivial": 389, "shortcut": [389, 394], "irrelev": 389, "_make_spec": 389, "td_param": 389, "render_fp": 389, "random_": 389, "_make_step": 389, "staticmethod": 389, "showcas": 389, "skeleton": 389, "_apply_transform": [389, 394], "_inv_apply_transform": [389, 394], "subset": [389, 390], "sine": 389, "cosin": 389, "sintransform": 389, "costransform": 389, "t_sin": 389, "t_co": 389, "cat_transform": 389, "simple_rollout": 389, "unexplor": 389, "init_td": 389, "traj_return": 389, "last_reward": 389, "is_ipython": 389, "inlin": 389, "get_backend": 389, "ion": 389, "gcf": 389, "clear_output": 389, "625": 389, "0748": 389, "519": 389, "0499": 389, "4472": 389, "073": 389, "0685": 389, "0408": 389, "552": 389, "5154": 389, "9086": 389, "9385": 389, "155": 389, "49it": 389, "2568": 389, "4981": 389, "223": 389, "8929": 389, "4491": 389, "581": 389, "3233": 389, "0664": 389, "596": 389, "1021": 389, "5263": 389, "9579": 389, "5807": 389, "8075": 389, "212": 389, "2009": 389, "5525": 389, "914": 389, "2894": 389, "0115": 389, "0977": 389, "1845": 389, "1830": 389, "4858": 389, "233": 389, "2863": 389, "0297": 389, "4617": 389, "5997": 389, "904": 389, "1647": 389, "0777": 389, "901": 389, "4709": 389, "6813": 389, "8317": 389, "3221": 389, "5554": 389, "276": 389, "3353": 389, "701": 389, "8570": 389, "6656": 389, "463": 389, "7779": 389, "6911": 389, "875": 389, "0796": 389, "7082": 389, "308": 389, "0421": 389, "1496": 389, "5037": 389, "1755": 389, "5029": 389, "9454": 389, "665": 389, "9330": 389, "2118": 389, "444": 389, "0995": 389, "6294": 389, "3146": 389, "2909": 389, "461": 389, "9720": 389, "1298": 389, "9923": 389, "0345": 389, "3438": 389, "424": 389, "6953": 389, "5233": 389, "411": 389, "8011": 389, "5329": 389, "2677": 389, "6969": 389, "7010": 389, "376": 389, "9352": 389, "7707": 389, "6178": 389, "5646": 389, "348": 389, "7304": 389, "9407": 389, "942": 389, "3882": 389, "7604": 389, "3507": 389, "8928": 389, "258": 389, "6978": 389, "4641": 389, "549": 389, "6047": 389, "5005": 389, "4136": 389, "2993": 389, "3222": 389, "4046": 389, "7314": 389, "275": [389, 394], "6331": 389, "9318": 389, "961": 389, "8331": 389, "1604": 389, "4099": 389, "4761": 389, "125": 389, "4262": 389, "6363": 389, "382": 389, "3593": 389, "7377": 389, "2847": 389, "3443": 389, "867": 389, "3592": 389, "4760": 389, "441": 389, "9950": 389, "8021": 389, "3528": 389, "1214": 389, "708": 389, "4023": 389, "3583": 389, "041": 389, "3801": 389, "0310": 389, "120": 389, "4244": 389, "2039": 389, "4850": 389, "8748": 389, "706": 389, "4897": 389, "9210": 389, "8964": 389, "0832": 389, "3934": 389, "456": 389, "8971": 389, "2933": 389, "3377": 389, "6996": 389, "2274": 389, "8916": 389, "098": 389, "2660": 389, "9110": 389, "4503": 389, "6956": 389, "9172": 389, "4026": 389, "946": 389, "9229": 389, "5205": 389, "8872": 389, "6637": 389, "019": 389, "9281": 389, "2082": 389, "724": 389, "8561": 389, "6574": 389, "357": 389, "4138": 389, "5230": 389, "385": 389, "4065": 389, "5642": 389, "921": 389, "9786": 389, "4129": 389, "5831": 389, "266": 389, "7723": 389, "4152": 389, "0898": 389, "5155": 389, "5376": 389, "5616": 389, "4094": 389, "283": 389, "5333": 389, "4803": 389, "895": 389, "6566": 389, "2588": 389, "662": 389, "4732": 389, "7503": 389, "068": 389, "0714": 389, "3370": 389, "059": 389, "8612": 389, "1915": 389, "3855": 389, "0349": 389, "9644": 389, "4538": 389, "445": 389, "0392": 389, "4080": 389, "1648": 389, "9599": 389, "143": 389, "4284": 389, "5946": 389, "2590": 389, "9181": 389, "4621": 389, "9075": 389, "674": 389, "1772": 389, "9444": 389, "351": 389, "9391": 389, "5595": 389, "8673": 389, "6240": 389, "5919": 389, "1071": 389, "9127": 389, "251": 389, "9799": 389, "3131": 389, "9612": 389, "9705": 389, "8741": 389, "2230": 389, "0972": 389, "0337": 389, "0350": 389, "0654": 389, "2441": 389, "4596": 389, "362": 389, "103": [389, 391], "4362": 389, "171": 389, "104": 389, "4041": 389, "6907": 389, "105": 389, "4664": 389, "2760": 389, "0299": 389, "9712": 389, "349": 389, "107": 389, "3332": 389, "4479": 389, "772": 389, "108": 389, "4357": 389, "9591": 389, "543": 389, "109": 389, "6216": 389, "1353": 389, "692": 389, "6261": 389, "7086": 389, "496": 389, "7758": 389, "9818": 389, "112": 389, "7772": 389, "5055": 389, "113": [389, 391], "5840": 389, "3180": 389, "2083": 389, "115": 389, "5275": 389, "6873": 389, "116": 389, "4107": 389, "1624": 389, "117": 389, "6372": 389, "2571": 389, "118": 389, "4039": 389, "4428": 389, "119": 389, "4728": 389, "5628": 389, "6767": 389, "2466": 389, "522": [389, 391], "121": [389, 394], "5873": 389, "5072": 389, "6548": 389, "3766": 389, "123": 389, "5134": 389, "1955": 389, "2481": 389, "0591": 389, "4500": 389, "3368": 389, "126": 389, "9708": 389, "7059": 389, "127": 389, "3031": 389, "2534": 389, "843": 389, "3327": 389, "6193": 389, "129": 389, "4831": 389, "1172": 389, "2593": 389, "4219": 389, "962": 389, "8380": 389, "899": 389, "132": [389, 391], "2721": 389, "9048": 389, "166": 389, "133": 389, "2419": 389, "5248": 389, "4278": 389, "135": 389, "0690": 389, "5140": 389, "136": 389, "1140": 389, "7402": 389, "137": 389, "5356": 389, "1636": 389, "138": 389, "0671": 389, "8798": 389, "139": 389, "8918": 389, "3298": 389, "307": 389, "140": 389, "1779": 389, "141": 389, "1771": 389, "3624": 389, "936": 389, "142": [389, 391], "1683": 389, "4810": 389, "9373": 389, "4435": 389, "4396": 389, "8092": 389, "145": 389, "2572": 389, "146": 389, "4212": 389, "0260": 389, "147": 389, "0939": 389, "6478": 389, "605": 389, "148": 389, "6606": 389, "7289": 389, "149": [389, 391], "9300": 389, "7193": 389, "563": 389, "1166": 389, "8514": 389, "151": 389, "9108": 389, "0672": 389, "292": 389, "8591": 389, "3768": 389, "153": 389, "9976": 389, "0576": 389, "0067": 389, "935": 389, "4199": 389, "1722": 389, "156": 389, "8310": 389, "3466": 389, "157": 389, "8631": 389, "2492": 389, "158": 389, "8763": 389, "1277": 389, "159": 389, "5562": 389, "7446": 389, "1082": 389, "9830": 389, "161": 389, "0946": 389, "5229": 389, "162": 389, "4574": 389, "6900": 389, "163": [389, 390], "2229": 389, "0318": 389, "164": 389, "0543": 389, "0817": 389, "761": 389, "2809": 389, "5118": 389, "366": 389, "1142": 389, "5635": 389, "167": [389, 391], "1949": 389, "2327": 389, "982": 389, "168": 389, "0967": 389, "0387": 389, "457": 389, "169": 389, "0782": 389, "2150": 389, "170": 389, "5222": 389, "3725": 389, "9288": 389, "9837": 389, "1416": 389, "1099": 389, "173": 389, "8620": 389, "8475": 389, "174": 389, "1807": 389, "4375": 389, "175": 389, "1148": 389, "0645": 389, "2751": 389, "8313": 389, "177": 389, "88it": 389, "9286": 389, "9770": 389, "178": 389, "5735": 389, "2837": 389, "179": 389, "18it": 389, "2926": 389, "9489": 389, "180": 389, "1507": 389, "181": 389, "8724": 389, "3567": 389, "3574": 389, "6140": 389, "183": 389, "7895": 389, "2518": 389, "184": 389, "6146": 389, "185": 389, "8776": 389, "7358": 389, "186": 389, "3722": 389, "8428": 389, "187": [389, 394], "7955": 389, "188": 389, "0092": 389, "7106": 389, "829": 389, "189": 389, "2264": 389, "6919": 389, "190": 389, "1438": 389, "1362": 389, "191": 389, "0618": 389, "8217": 389, "9420": 389, "6765": 389, "193": 389, "7745": 389, "0709": 389, "194": 389, "9478": 389, "6867": 389, "195": 389, "6507": 389, "6225": 389, "196": 389, "2244": 389, "2195": 389, "197": 389, "5385": 389, "9263": 389, "198": 389, "1878": 389, "2374": 389, "8054": 389, "3504": 389, "557": 389, "0766": 389, "201": 389, "2011": 389, "8393": 389, "0803": 389, "7815": 389, "203": 389, "8363": 389, "2460": 389, "204": 389, "8643": 389, "2191": 389, "593": 389, "205": 389, "0773": 389, "1343": 389, "206": 389, "8657": 389, "207": 389, "9304": 389, "7584": 389, "208": 389, "8752": 389, "2307": 389, "209": 389, "5250": 389, "4869": 389, "7837": 389, "5762": 389, "211": 389, "6661": 389, "8600": 389, "2502": 389, "1752": 389, "3075": 389, "8871": 389, "214": 389, "9406": 389, "8090": 389, "215": 389, "6291": 389, "8923": 389, "876": 389, "216": 389, "9504": 389, "21e": 389, "217": 389, "7431": 389, "7880": 389, "218": 389, "4463": 389, "5432": 389, "219": [389, 394], "3793": 389, "3313": 389, "8843": 389, "0369": 389, "065": 389, "221": 389, "4828": 389, "8391": 389, "222": 389, "6265": 389, "2913": 389, "947": 389, "5541": 389, "1252": 389, "7342": 389, "2396": 389, "225": 389, "5936": 389, "1924": 389, "226": 389, "9975": 389, "2045": 389, "8367": 389, "9540": 389, "228": 389, "7259": 389, "6743": 389, "229": 389, "4827": 389, "7528": 389, "230": 389, "7361": 389, "8756": 389, "231": 389, "7646": 389, "1116": 389, "232": 389, "5426": 389, "8385": 389, "5662": 389, "8585": 389, "234": 389, "8234": 389, "7930": 389, "235": 389, "2648": 389, "9309": 389, "236": 389, "6817": 389, "237": 389, "0943": 389, "1533": 389, "238": 389, "3045": 389, "0483": 389, "239": 389, "6415": 389, "0201": 389, "241": 389, "4437": 389, "4365": 389, "242": 389, "0358": 389, "4943": 389, "1272": 389, "5003": 389, "1180": 389, "2637": 389, "245": 389, "7197": 389, "0873": 389, "246": 389, "2917": 389, "247": 389, "0160": 389, "0738": 389, "248": 389, "3689": 389, "0120": 389, "249": 389, "5570": 389, "0475": 389, "250": 389, "4423": 389, "2220": 389, "6803": 389, "252": 389, "1465": 389, "7214": 389, "253": 389, "8801": 389, "7034": 389, "254": 389, "9136": 389, "4076": 389, "7589": 389, "5013": 389, "8150": 389, "2241": 389, "257": 389, "0753": 389, "8081": 389, "1951": 389, "8314": 389, "0038": 389, "260": 389, "0889": 389, "4616": 389, "261": 389, "0655": 389, "262": 389, "8333": 389, "9476": 389, "263": 389, "7554": 389, "3798": 389, "264": 389, "3717": 389, "3947": 389, "529": 389, "265": 389, "3060": 389, "6495": 389, "7467": 389, "8889": 389, "267": 389, "8457": 389, "591": 389, "7137": 389, "0536": 389, "771": 389, "269": 389, "1651": 389, "388": 389, "270": 389, "8246": 389, "5709": 389, "271": 389, "7502": 389, "0521": 389, "032": 389, "272": 389, "5475": 389, "7253": 389, "273": 389, "2856": 389, "7130": 389, "274": 389, "2778": 389, "4122": 389, "8368": 389, "1841": 389, "9622": 389, "1603": 389, "003e": 389, "277": 389, "0247": 389, "346": 389, "278": 389, "2238": 389, "6418": 389, "279": 389, "0626": 389, "2538": 389, "280": 389, "0149": 389, "7380": 389, "2167": 389, "8911": 389, "282": 389, "8725": 389, "1983": 389, "8142": 389, "3709": 389, "284": 389, "4989": 389, "285": 389, "6464": 389, "6210": 389, "286": 389, "9726": 389, "0820": 389, "287": 389, "6975": 389, "9091": 389, "4926": 389, "4791": 389, "289": 389, "0905": 389, "3500": 389, "290": 389, "2287": 389, "291": 389, "9918": 389, "5543": 389, "9245": 389, "6444": 389, "631": 389, "293": 389, "0448": 389, "4769": 389, "8566": 389, "7208": 389, "295": 389, "0966": 389, "296": 389, "5303": 389, "1537": 389, "023": 389, "297": 389, "2682": 389, "564": 389, "298": 389, "4318": 389, "5063": 389, "299": 389, "7475": 389, "4190": 389, "8186": 389, "5077": 389, "301": 389, "1883": 389, "5291": 389, "302": 389, "3998": 389, "303": 389, "3622": 389, "0930": 389, "626": 389, "304": 389, "9500": 389, "5664": 389, "305": 389, "5697": 389, "3024": 389, "306": 389, "3117": 389, "0052": 389, "006": 389, "0981": 389, "9312": 389, "3873": 389, "309": 389, "0411": 389, "2650": 389, "1656": 389, "0228": 389, "004": 389, "1196": 389, "2478": 389, "312": 389, "7353": 389, "0812": 389, "313": 389, "3022": 389, "758": 389, "314": 389, "1406": 389, "4626": 389, "315": 389, "2156": 389, "851": 389, "1953": 389, "3774": 389, "6385": 389, "9917": 389, "2764": 389, "905": 389, "6391": 389, "9317": 389, "9748": 389, "2679": 389, "8495": 389, "5125": 389, "8177": 389, "6602": 389, "323": 389, "0704": 389, "5776": 389, "9833": [389, 393], "1339": 389, "402": 389, "325": 389, "1238": 389, "326": 389, "9299": 389, "0227": 389, "327": 389, "7727": 389, "1607": 389, "336": 389, "328": 389, "3958": 389, "3223": 389, "763": 389, "4742": 389, "1797": 389, "330": 389, "0144": 389, "0085": 389, "791": 389, "331": 389, "8284": 389, "0428": 389, "332": 389, "7365": 389, "333": 389, "4566": 389, "0781": 389, "086": 389, "334": 389, "3355": 389, "0230": 389, "335": 389, "9346": 389, "0423": 389, "076": 389, "3711": 389, "1335": 389, "6855": 389, "337": 389, "0304": 389, "0023": 389, "8459": 389, "338": 389, "9998": 389, "4399": 389, "339": 389, "2303": 389, "1346": 389, "340": 389, "2915": 389, "7116": 389, "341": 389, "5560": 389, "0487": 389, "342": 389, "5119": 389, "061": 389, "343": 389, "3305": 389, "3705": 389, "957": 389, "344": 389, "6068": 389, "345": 389, "5731": 389, "3897": 389, "0376": 389, "0434": 389, "012": 389, "1300": 389, "1215": 389, "0968": 389, "0885": 389, "350": 389, "1348": 389, "0073": 389, "5052": 389, "4184": 389, "2817": 389, "8887": 389, "353": 389, "4779": 389, "1009": 389, "354": 389, "0604": 389, "599": 389, "4486": 389, "1176": 389, "656": 389, "356": 389, "2436": 389, "0668": 389, "8849": 389, "0012": 389, "358": 389, "7511": 389, "8804": 389, "359": 389, "8870": 389, "6728": 389, "360": 389, "8841": 389, "5508": 389, "361": 389, "5242": 389, "0013": 389, "6185": 389, "363": 389, "1378": 389, "0204": 389, "364": 389, "0355": 389, "685": 389, "365": 389, "4884": 389, "0231": 389, "0014": 389, "6793": 389, "367": 389, "9834": 389, "863": 389, "6709": 389, "462": 389, "369": 389, "5199": 389, "9790": 389, "370": 389, "9401": 389, "7802": 389, "371": 389, "6723": 389, "372": 389, "2678": 389, "6201": 389, "373": 389, "2184": 389, "7385": 389, "374": 389, "6344": 389, "617": 389, "375": 389, "9945": 389, "0772": 389, "567": 389, "7576": 389, "0398": 389, "377": 389, "3396": 389, "0022": 389, "094": 389, "378": 389, "3073": 389, "4018": 389, "379": 389, "1869": 389, "0481": 389, "1117": 389, "381": 389, "6823": 389, "981": 389, "8305": 389, "0210": 389, "383": 389, "4908": 389, "0272": 389, "3267": 389, "0111": 389, "7965": 389, "1796": 389, "0039": 389, "5396": 389, "386": 389, "3757": 389, "0490": 389, "387": 389, "1394": 389, "4187": 389, "2986": 389, "7954": 389, "1274": 389, "0063": 389, "813": 389, "390": 389, "8706": 389, "0114": 389, "391": 389, "6922": 389, "392": 389, "9115": 389, "2602": [389, 390], "393": 389, "2449": 389, "0783": 389, "394": 389, "0631": 389, "0057": 389, "7444": 389, "395": 389, "3339": 389, "0167": 389, "396": 389, "4806": 389, "397": 389, "4171": 389, "067": 389, "398": 389, "2618": 389, "5809": 389, "399": 389, "0054": 389, "3364": 389, "8733": 389, "0184": 389, "401": 389, "9137": 389, "0113": 389, "025": 389, "0386": 389, "0625": 389, "403": 389, "1332": 389, "0582": 389, "7816": 389, "404": 389, "8341": 389, "0941": 389, "854": 389, "405": 389, "8615": 389, "588": 389, "406": 389, "3849": 389, "008": 389, "407": 389, "9395": 389, "0765": 389, "055": 389, "408": 389, "2685": 389, "2235": 389, "688": 389, "409": 389, "3052": 389, "4249": 389, "410": 389, "6806": 389, "6383": 389, "3721": 389, "9981": 389, "412": 389, "1862": 389, "822": 389, "413": 389, "9811": 389, "0171": 389, "013": 389, "414": 389, "0252": 389, "0049": 389, "6205": 389, "415": 389, "1108": 389, "4921": 389, "9142": 389, "8130": 389, "417": 389, "1725": 389, "0036": 389, "3196": 389, "418": 389, "7795": 389, "0242": 389, "799": 389, "419": 389, "7737": 389, "0138": 389, "420": 389, "1462": 389, "0053": 389, "421": 389, "9226": 389, "6139": 389, "422": 389, "9889": 389, "0403": 389, "423": 389, "6194": 389, "0032": 389, "3989": 389, "0104": 389, "425": 389, "9960": 389, "0009": 389, "6009": 389, "2697": 389, "0914": 389, "427": 389, "1114": 389, "428": 389, "9862": 389, "1932": 389, "429": 389, "0637": 389, "0623": 389, "082": 389, "430": 389, "9906": 389, "2031": 389, "431": 389, "9948": 389, "0895": 389, "432": 389, "1970": 389, "0256": 389, "4231": 389, "0449": 389, "644": 389, "434": 389, "1039": 389, "1973": 389, "435": 389, "4561": 389, "1225": 389, "436": 389, "0211": 389, "2125": 389, "437": 389, "3866": 389, "0050": 389, "7202": 389, "438": 389, "6388": 389, "0072": 389, "439": 389, "1187": 389, "0015": 389, "5116": 389, "440": 389, "0432": 389, "0025": 389, "7809": 389, "1925": 389, "0103": 389, "442": 389, "9570": 389, "443": 389, "0871": 389, "5601": 389, "0165": 389, "0047": 389, "6061": 389, "2746": 389, "0027": 389, "7887": 389, "446": 389, "1835": 389, "0035": 389, "855": 389, "447": 389, "8420": 389, "548": 389, "2653": 389, "0126": 389, "9736": 389, "449": 389, "0594": 389, "0119": 389, "6196": 389, "450": 389, "4509": 389, "0373": 389, "451": 389, "0620": 389, "452": 389, "6898": 389, "3235": 389, "687": 389, "453": 389, "5879": 389, "454": 389, "8406": 389, "0694": 389, "455": 389, "8259": 389, "0235": 389, "8500": 389, "0024": 389, "458": 389, "2027": 389, "0894": 389, "459": 389, "5966": 389, "6942": 389, "0016": 389, "4254": 389, "6703": 389, "0145": 389, "8124": 389, "0218": 389, "9196": 389, "0188": 389, "8986": 389, "0884": 389, "0084": 389, "5624": 389, "465": 389, "8862": 389, "5384": 389, "466": 389, "5837": 389, "8954": 389, "0101": 389, "6751": 389, "468": 389, "8063": 389, "0122": 389, "9635": 389, "0692": 389, "4216": 389, "1227": 389, "0586": 389, "162e": 389, "471": 389, "9690": 389, "4166": 389, "6324": 389, "473": 389, "0778": 389, "8548": 389, "0017": 389, "4408": 389, "475": 389, "8125": 389, "1515": 389, "2733": 389, "0044": 389, "2836": 389, "7497": 389, "7681": 389, "478": 389, "8547": 389, "0105": 389, "7212": 389, "479": 389, "9848": 389, "0019": 389, "6498": 389, "1987": 389, "0011": 389, "5473": 389, "481": 389, "8991": 389, "6091": 389, "9189": 389, "5771": 389, "483": 389, "6781": 389, "7542": 389, "484": 389, "5959": 389, "0064": 389, "485": 389, "2547": 389, "486": 389, "0636": 389, "547": 389, "487": 389, "0065": 389, "488": 389, "1694": 389, "0083": 389, "5759": 389, "489": 389, "0493": 389, "0021": 389, "7805": 389, "490": 389, "0950": 389, "497": 389, "491": 389, "9717": 389, "3672": 389, "492": 389, "0207": 389, "8266": 389, "5365": 389, "494": 389, "2623": 389, "5078": 389, "495": 389, "4545": 389, "09636": 389, "8754": 389, "0010": 389, "498": 389, "0031": 389, "8269": 389, "499": 389, "6642": 389, "2284": 389, "501": 389, "9130": 389, "0008": 389, "502": 389, "503": 389, "7624": 389, "0056": 389, "3858": 389, "504": 389, "0890": 389, "0042": 389, "505": 389, "7505": 389, "2157": 389, "506": 389, "8394": 389, "3413": 389, "507": 389, "9609": 389, "0041": 389, "6905": 389, "508": 389, "8467": 389, "4409": 389, "509": 389, "510": 389, "8128": 389, "3559": 389, "511": 389, "1479": 389, "0264": 389, "1589": 389, "566": 389, "513": 389, "2756": 389, "0046": 389, "5266": 389, "514": 389, "9873": 389, "0112": 389, "9314": 389, "515": 389, "3791": 389, "0721": 389, "516": 389, "4580": 389, "0758": 389, "6114": 389, "517": 389, "2431": 389, "518": 389, "1958": 389, "5553": 389, "8924": 389, "0097": 389, "520": 389, "3737": 389, "0234": 389, "9125": 389, "4623": 389, "3230": 389, "0589": 389, "3784": 389, "523": 389, "9482": 389, "0051": 389, "524": 389, "1979": 389, "0045": 389, "6401": 389, "525": 389, "1588": 389, "0048": 389, "6255": 389, "526": 389, "6084": 389, "3477": 389, "1475": 389, "0209": 389, "528": 389, "7611": 389, "1040": 389, "71it": 389, "0099": 389, "0173": 389, "643": 389, "530": 389, "8189": 389, "4358": 389, "531": 389, "9897": 389, "532": 389, "1548": 389, "9751": 389, "533": 389, "6362": 389, "7495": 389, "534": 389, "1749": 389, "9513": 389, "535": 389, "7708": 389, "0371": 389, "536": 389, "2649": 389, "0437": 389, "537": 389, "5491": 389, "0276": 389, "6426": 389, "7294": 389, "078e": 389, "539": 389, "9928": 389, "540": 389, "7937": 389, "0124": 389, "9664": 389, "541": 389, "3342": 389, "542": 389, "2046": 389, "5496": 389, "0956": 389, "0059": 389, "545": 389, "9028": 389, "5843": 389, "546": 389, "0674": 389, "0178": 389, "797": 389, "2815": 389, "0599": 389, "1587": 389, "9276": 389, "8228": 389, "6164": 389, "551": 389, "6850": 389, "9167": 389, "3092": 389, "0670": 389, "9177": 389, "553": 389, "1599": 389, "0043": 389, "554": 389, "6367": 389, "555": 389, "3657": 389, "556": 389, "6694": 389, "2622": 389, "0372": 389, "4841": 389, "558": 389, "2707": 389, "757": 389, "559": 389, "2267": 389, "5415": 389, "560": 389, "4556": 389, "0163": 389, "561": 389, "1839": 389, "0809": 389, "6262": 389, "562": 389, "0278": 389, "1112": 389, "6155": 389, "565": 389, "1427": 389, "3582": 389, "624": 389, "7870": 389, "9490": 389, "0439": 389, "8796": 389, "568": 389, "8026": 389, "612": 389, "569": [389, 394], "3147": 389, "8486": 389, "570": 389, "7917": 389, "0129": 389, "571": [389, 394], "9553": 389, "0020": 389, "6871": 389, "572": 389, "3132": 389, "0159": 389, "8646": 389, "573": 389, "5320": 389, "0269": 389, "574": 389, "2955": 389, "0245": 389, "575": 389, "3347": 389, "0179": 389, "9718": 389, "1629": 389, "577": 389, "4164": 389, "0070": 389, "4335": 389, "578": 389, "579": 389, "3049": 389, "9063": 389, "580": 389, "8785": 389, "3295": 389, "5184": 389, "0546": 389, "582": 389, "4589": 389, "583": 389, "4697": 389, "2476": 389, "584": 389, "2397": 389, "585": 389, "4953": 389, "1775": 389, "586": 389, "2258": 389, "0110": 389, "7671": 389, "587": 389, "3981": 389, "8590": 389, "0007": 389, "589": 389, "9820": 389, "4221": 389, "590": 389, "1293": 389, "0116": 389, "868": 389, "1675": 389, "5931": 389, "592": 389, "2910": 389, "5219": 389, "2124": 389, "1730": 389, "737": 389, "594": 389, "2914": 389, "0206": 389, "595": 389, "0172": 389, "3982": 389, "0945": 389, "0121": 389, "4789": 389, "597": 389, "3805": 389, "4074": 389, "598": 389, "3310": 389, "5065": 389, "6028": 389, "6316": 389, "6724": 389, "6523": 389, "601": 389, "0136": 389, "4298": 389, "602": 389, "3524": 389, "2629": 389, "603": 389, "2635": 389, "7839": 389, "604": 389, "6041": 389, "8027": 389, "4170": 389, "4675": 389, "606": 389, "3153": 389, "9316": 389, "607": 389, "0649": 389, "9722": 389, "7989": 389, "0329": 389, "609": 389, "1976": 389, "6852": 389, "610": 389, "4793": 389, "1255": 389, "611": 389, "4581": 389, "0394": 389, "2047": 389, "0326": 389, "613": 389, "8967": 389, "8619": 389, "614": 389, "5906": 389, "6491": 389, "615": 389, "6634": 389, "4394": 389, "616": 389, "0624": 389, "0061": 389, "5676": 389, "3259": 389, "0131": 389, "7733": 389, "618": 389, "7515": 389, "0189": 389, "5575": 389, "619": 389, "9313": 389, "6286": 389, "4325": 389, "7832": 389, "621": 389, "1134": 389, "622": 389, "4572": 389, "0500": 389, "5838": 389, "623": 389, "3818": 389, "8623": 389, "1253": 389, "6622": 389, "subject": 389, "explain": 390, "semat": 390, "r3mtransform": 390, "env_transform": [390, 394], "s3": 390, "amazonaw": 390, "r3m_50": 390, "374m": 390, "9m": 390, "139mb": 390, "2m": 390, "110mb": 390, "8mb": 390, "1mb": 390, "0m": 390, "3mb": 390, "5mb": 390, "2mb": 390, "104m": 390, "9mb": 390, "115m": 390, "4mb": 390, "130m": 390, "140m": 390, "148m": 390, "163m": 390, "173m": 390, "183m": 390, "195m": 390, "7mb": 390, "202m": 390, "0mb": 390, "212m": 390, "218m": 390, "6mb": 390, "229m": 390, "246m": 390, "262m": 390, "269m": 390, "277m": 390, "284m": 390, "293m": 390, "299m": 390, "310m": 390, "316m": 390, "328m": 390, "342m": 390, "350m": 390, "360m": 390, "373m": 390, "wiser": 390, "batteri": 391, "buffer_list": 391, "lowest": 391, "medium": 391, "buffer_lazytensor": 391, "buffer_lazymemmap": 391, "tempdir": 391, "tmpcavfrtwk": 391, "fullest": 391, "mydata": 391, "background": 391, "question": [391, 393], "_i": 391, "artifici": 391, "0893e": 391, "hamper": 391, "she": 391, "pars": 391, "proport": 391, "hist": 391, "barcontain": 391, "artist": 391, "reappear": 391, "unfold": 391, "problemat": 391, "4th": 391, "prioritizedslicesampl": 391, "tensordictmaxvaluewrit": 391, "demo": 393, "icml": 393, "vmoen": 393, "fb": 393, "invest": 393, "platform": 393, "media": 393, "predominantli": 393, "tensordict1": 393, "tensordict2": 393, "tensordict_sampl": 393, "_sampler": 393, "_sum_tre": 393, "modulenotfounderror": 393, "28791671991348267": 393, "noopresetenv": [393, 394], "backbone_modul": 393, "params_expand": 393, "exec_sequ": 393, "tensordict_exp": 393, "base_modul": 393, "0137": 393, "1524": 393, "0641": 393, "viewbackward0": 393, "asstridedbackward0": 393, "8728": 393, "1334": 393, "3494": 393, "6887": 393, "6402": 393, "_safetanhbackward": 393, "1132": 393, "3430": 393, "2668": 393, "2918": 393, "6239": 393, "roughli": 393, "tensordicts_prealloc": 393, "tensordicts_stack": 393, "tensordict_rollout": [393, 394], "disclaim": 393, "concatmodul": 393, "loss_td": 393, "year": 393, "roadmap": 393, "compris": 393, "contributor": 393, "curiou": 393, "nascent": 393, "unsupervis": 394, "unifi": 394, "_build_env": 394, "bipedalwalk": 394, "bipedalwalkerhardcor": 394, "blackjack": 394, "carrac": 394, "0797": 394, "deserv": 394, "__episode__": 394, "__trajectory__": 394, "void": 394, "reproduct": 394, "reset_data": 394, "tensordict_tprim": 394, "imshow": 394, "axesimag": 394, "0x7f6f9e77b4f0": 394, "1371": 394, "784": 394, "3047": 394, "1423": 394, "_check_version_exist": 394, "ns": 394, "_check_name_exist": 394, "_check_namespace_exist": 394, "namespacenotfound": 394, "suggestion_msg": 394, "wrapper1": 394, "wrapper2": 394, "obviou": 394, "truth": 394, "env0": 394, "env_transformed_bi": 394, "stanc": 394, "transformeddistribut": 394, "base_dist": 394, "concat": 394, "mofidi": 394, "transformedenviron": 394, "moderet": 394, "computation": 394, "legitim": 394, "incom": 394, "amongst": 394, "has_cuda": 394, "wor": 394, "convention": 394, "markovian": 394, "constain": 394, "bar_": 394, "get_someth": 394, "aargh": 394, "is_clos": 394, "foo_list": 394, "parallen": 394, "particularili": 394, "evolv": 394, "steadi": 394, "approx": 394, "_extra_st": 394, "observation_ssq": 394, "observation_sum": 394, "dispach": 394, "absor": 394, "2873": 394}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "BinaryDiscreteTensorSpec"], [26, 0, 1, "", "BoundedTensorSpec"], [27, 0, 1, "", "CompositeSpec"], [28, 0, 1, "", "ConstantKLController"], [29, 0, 1, "", "DiscreteTensorSpec"], [30, 0, 1, "", "Flat2TED"], [31, 0, 1, "", "H5Combine"], [32, 0, 1, "", "H5Split"], [33, 0, 1, "", "LazyStackedCompositeSpec"], [34, 0, 1, "", "LazyStackedTensorSpec"], [35, 0, 1, "", "MultiDiscreteTensorSpec"], [36, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [37, 0, 1, "", "MultiStep"], [38, 0, 1, "", "Nested2TED"], [39, 0, 1, "", "NonTensorSpec"], [40, 0, 1, "", "OneHotDiscreteTensorSpec"], [41, 0, 1, "", "PairwiseDataset"], [42, 0, 1, "", "PrioritizedReplayBuffer"], [43, 0, 1, "", "PromptData"], [44, 0, 1, "", "PromptTensorDictTokenizer"], [45, 0, 1, "", "ReplayBuffer"], [46, 0, 1, "", "RewardData"], [47, 0, 1, "", "RolloutFromModel"], [48, 0, 1, "", "TED2Flat"], [49, 0, 1, "", "TED2Nested"], [50, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [51, 0, 1, "", "TensorDictReplayBuffer"], [52, 0, 1, "", "TensorDictTokenizer"], [53, 0, 1, "", "TensorSpec"], [54, 0, 1, "", "TokenizedDatasetLoader"], [55, 0, 1, "", "UnboundedContinuousTensorSpec"], [56, 0, 1, "", "UnboundedDiscreteTensorSpec"], [57, 0, 1, "", "check_no_exclusive_keys"], [58, 0, 1, "", "consolidate_spec"], [59, 0, 1, "", "contains_lazy_spec"], [60, 0, 1, "", "create_infinite_iterator"], [70, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 3, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 3, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 3, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "mtia"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_load_state_dict_pre_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_post_hook"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 3, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_dataset"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 3, 1, "", "names"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dump"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "load"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "register_load_hook"], [42, 1, 1, "", "register_save_hook"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[43, 3, 1, "", "batch_size"], [43, 3, 1, "", "device"], [43, 1, 1, "", "from_dataset"], [43, 1, 1, "", "from_tensordict"], [43, 1, 1, "", "get"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_"], [43, 1, 1, "", "load_memmap"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "memmap"], [43, 1, 1, "", "memmap_"], [43, 1, 1, "", "memmap_like"], [43, 1, 1, "", "memmap_refresh_"], [43, 3, 1, "", "names"], [43, 1, 1, "", "save"], [43, 1, 1, "", "set"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to_tensordict"], [43, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "append_transform"], [45, 1, 1, "", "dump"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "empty"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "insert_transform"], [45, 1, 1, "", "load"], [45, 1, 1, "", "loads"], [45, 1, 1, "", "register_load_hook"], [45, 1, 1, "", "register_save_hook"], [45, 1, 1, "", "sample"], [45, 3, 1, "", "sampler"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set_sampler"], [45, 1, 1, "", "set_storage"], [45, 1, 1, "", "set_writer"], [45, 3, 1, "", "storage"], [45, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[46, 3, 1, "", "batch_size"], [46, 3, 1, "", "device"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 3, 1, "", "names"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[47, 1, 1, "", "create_rollout_td"], [47, 1, 1, "", "generate"], [47, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 3, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[54, 1, 1, "", "dataset_to_tensordict"], [54, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 3, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"]], "torchrl.data.datasets": [[61, 0, 1, "", "AtariDQNExperienceReplay"], [62, 0, 1, "", "BaseDatasetExperienceReplay"], [63, 0, 1, "", "D4RLExperienceReplay"], [64, 0, 1, "", "GenDGRLExperienceReplay"], [65, 0, 1, "", "MinariExperienceReplay"], [66, 0, 1, "", "OpenMLExperienceReplay"], [67, 0, 1, "", "OpenXExperienceReplay"], [68, 0, 1, "", "RobosetExperienceReplay"], [69, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 3, 1, "", "data_path"], [69, 3, 1, "", "data_path_root"], [69, 1, 1, "", "delete"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "preprocess"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[71, 0, 1, "", "FlatStorageCheckpointer"], [72, 0, 1, "", "H5StorageCheckpointer"], [73, 0, 1, "", "ImmutableDatasetWriter"], [74, 0, 1, "", "LazyMemmapStorage"], [75, 0, 1, "", "LazyTensorStorage"], [76, 0, 1, "", "ListStorage"], [77, 0, 1, "", "ListStorageCheckpointer"], [78, 0, 1, "", "NestedStorageCheckpointer"], [79, 0, 1, "", "PrioritizedSampler"], [80, 0, 1, "", "PrioritizedSliceSampler"], [81, 0, 1, "", "RandomSampler"], [82, 0, 1, "", "ReplayBufferEnsemble"], [83, 0, 1, "", "RoundRobinWriter"], [84, 0, 1, "", "Sampler"], [85, 0, 1, "", "SamplerEnsemble"], [86, 0, 1, "", "SamplerWithoutReplacement"], [87, 0, 1, "", "SliceSampler"], [88, 0, 1, "", "SliceSamplerWithoutReplacement"], [89, 0, 1, "", "Storage"], [90, 0, 1, "", "StorageCheckpointerBase"], [91, 0, 1, "", "StorageEnsemble"], [92, 0, 1, "", "StorageEnsembleCheckpointer"], [93, 0, 1, "", "TensorDictMaxValueWriter"], [94, 0, 1, "", "TensorDictRoundRobinWriter"], [95, 0, 1, "", "TensorStorage"], [96, 0, 1, "", "TensorStorageCheckpointer"], [97, 0, 1, "", "Writer"], [98, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[73, 1, 1, "", "add"], [73, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[76, 1, 1, "", "attach"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "load"], [76, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[80, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 3, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 3, 1, "", "storage"], [82, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"], [93, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[94, 1, 1, "", "add"], [94, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.envs": [[99, 2, 1, "", "BraxEnv"], [100, 2, 1, "", "BraxWrapper"], [101, 2, 1, "", "DMControlEnv"], [102, 2, 1, "", "DMControlWrapper"], [103, 0, 1, "", "EnvBase"], [104, 0, 1, "", "EnvCreator"], [105, 0, 1, "", "EnvMetaData"], [106, 2, 1, "", "GymEnv"], [107, 0, 1, "", "GymLikeEnv"], [108, 2, 1, "", "GymWrapper"], [109, 2, 1, "", "HabitatEnv"], [110, 2, 1, "", "IsaacGymEnv"], [111, 2, 1, "", "IsaacGymWrapper"], [112, 2, 1, "", "JumanjiEnv"], [113, 2, 1, "", "JumanjiWrapper"], [114, 2, 1, "", "MOGymEnv"], [115, 2, 1, "", "MOGymWrapper"], [116, 2, 1, "", "MarlGroupMapType"], [117, 2, 1, "", "MeltingpotEnv"], [118, 2, 1, "", "MeltingpotWrapper"], [119, 2, 1, "", "ModelBasedEnvBase"], [120, 2, 1, "", "MultiThreadedEnv"], [121, 2, 1, "", "MultiThreadedEnvWrapper"], [122, 2, 1, "", "OpenMLEnv"], [123, 0, 1, "", "ParallelEnv"], [124, 0, 1, "", "PendulumEnv"], [125, 2, 1, "", "PettingZooEnv"], [126, 2, 1, "", "PettingZooWrapper"], [127, 2, 1, "", "RoboHiveEnv"], [128, 2, 1, "", "SMACv2Env"], [129, 2, 1, "", "SMACv2Wrapper"], [130, 0, 1, "", "SerialEnv"], [131, 0, 1, "", "TicTacToeEnv"], [132, 2, 1, "", "VmasEnv"], [133, 2, 1, "", "VmasWrapper"], [134, 2, 1, "", "check_marl_grouping"], [135, 2, 1, "", "gym_backend"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "rollout"], [138, 2, 1, "", "set_gym_backend"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "add_truncated_keys"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "mtia"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "id0", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_load_state_dict_pre_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_post_hook"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "id1", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "id2", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "id3", "set_seed"], [103, 1, 1, "", "set_submodule"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_keys"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "id4", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 1, 1, "", "auto_register_info_dict"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "close"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "mtia"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "read_action"], [107, 1, 1, "", "read_done"], [107, 1, 1, "", "read_obs"], [107, 1, 1, "", "read_reward"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_load_state_dict_pre_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_post_hook"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_info_dict_reader"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "set_submodule"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_keys"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[123, 3, 1, "", "action_key"], [123, 3, 1, "", "action_keys"], [123, 3, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 3, 1, "", "batch_locked"], [123, 3, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 3, 1, "", "done_key"], [123, 3, 1, "", "done_keys"], [123, 3, 1, "", "done_keys_groups"], [123, 3, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 3, 1, "", "full_action_spec"], [123, 3, 1, "", "full_done_spec"], [123, 3, 1, "", "full_reward_spec"], [123, 3, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 3, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "mtia"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 3, 1, "", "observation_spec"], [123, 3, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_load_state_dict_pre_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_post_hook"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 3, 1, "", "reset_keys"], [123, 3, 1, "", "reward_key"], [123, 3, 1, "", "reward_keys"], [123, 3, 1, "", "reward_spec"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 3, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 3, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 3, 1, "", "state_keys"], [123, 3, 1, "", "state_spec"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "update_kwargs"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[124, 3, 1, "", "action_key"], [124, 3, 1, "", "action_keys"], [124, 3, 1, "", "action_spec"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 3, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 3, 1, "", "done_key"], [124, 3, 1, "", "done_keys"], [124, 3, 1, "", "done_keys_groups"], [124, 3, 1, "", "done_spec"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 3, 1, "", "full_action_spec"], [124, 3, 1, "", "full_done_spec"], [124, 3, 1, "", "full_reward_spec"], [124, 3, 1, "", "full_state_spec"], [124, 1, 1, "", "gen_params"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 3, 1, "", "input_spec"], [124, 1, 1, "", "ipu"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "mtia"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 3, 1, "", "observation_spec"], [124, 3, 1, "", "output_spec"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_load_state_dict_pre_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_post_hook"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "", "reset"], [124, 3, 1, "", "reset_keys"], [124, 3, 1, "", "reward_key"], [124, 3, 1, "", "reward_keys"], [124, 3, 1, "", "reward_spec"], [124, 1, 1, "", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "", "set_seed"], [124, 1, 1, "", "set_submodule"], [124, 3, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 3, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 3, 1, "", "state_keys"], [124, 3, 1, "", "state_spec"], [124, 1, 1, "", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[130, 3, 1, "", "action_key"], [130, 3, 1, "", "action_keys"], [130, 3, 1, "", "action_spec"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 3, 1, "", "batch_locked"], [130, 3, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 3, 1, "", "done_key"], [130, 3, 1, "", "done_keys"], [130, 3, 1, "", "done_keys_groups"], [130, 3, 1, "", "done_spec"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 3, 1, "", "full_action_spec"], [130, 3, 1, "", "full_done_spec"], [130, 3, 1, "", "full_reward_spec"], [130, 3, 1, "", "full_state_spec"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 3, 1, "", "input_spec"], [130, 1, 1, "", "ipu"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 3, 1, "", "observation_spec"], [130, 3, 1, "", "output_spec"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 3, 1, "", "reset_keys"], [130, 3, 1, "", "reward_key"], [130, 3, 1, "", "reward_keys"], [130, 3, 1, "", "reward_spec"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_submodule"], [130, 3, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 3, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 3, 1, "", "state_keys"], [130, 3, 1, "", "state_spec"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "update_kwargs"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[131, 3, 1, "", "action_key"], [131, 3, 1, "", "action_keys"], [131, 3, 1, "", "action_spec"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 3, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "children"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 3, 1, "", "done_key"], [131, 3, 1, "", "done_keys"], [131, 3, 1, "", "done_keys_groups"], [131, 3, 1, "", "done_spec"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 3, 1, "", "full_action_spec"], [131, 3, 1, "", "full_done_spec"], [131, 3, 1, "", "full_reward_spec"], [131, 3, 1, "", "full_state_spec"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 3, 1, "", "input_spec"], [131, 1, 1, "", "ipu"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "mtia"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 3, 1, "", "observation_spec"], [131, 3, 1, "", "output_spec"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_load_state_dict_pre_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_post_hook"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "", "reset"], [131, 3, 1, "", "reset_keys"], [131, 3, 1, "", "reward_key"], [131, 3, 1, "", "reward_keys"], [131, 3, 1, "", "reward_spec"], [131, 1, 1, "", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "set_submodule"], [131, 3, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 3, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 3, 1, "", "state_keys"], [131, 3, 1, "", "state_spec"], [131, 1, 1, "", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[136, 2, 1, "", "DreamerDecoder"], [137, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[139, 0, 1, "", "ActionDiscretizer"], [140, 0, 1, "", "ActionMask"], [141, 0, 1, "", "AutoResetEnv"], [142, 0, 1, "", "AutoResetTransform"], [143, 0, 1, "", "BatchSizeTransform"], [144, 0, 1, "", "BinarizeReward"], [145, 0, 1, "", "BurnInTransform"], [146, 0, 1, "", "CatFrames"], [147, 0, 1, "", "CatTensors"], [148, 0, 1, "", "CenterCrop"], [149, 0, 1, "", "ClipTransform"], [150, 0, 1, "", "Compose"], [151, 0, 1, "", "Crop"], [152, 0, 1, "", "DTypeCastTransform"], [153, 0, 1, "", "DeviceCastTransform"], [154, 0, 1, "", "DiscreteActionProjection"], [155, 0, 1, "", "DoubleToFloat"], [156, 0, 1, "", "EndOfLifeTransform"], [157, 0, 1, "", "ExcludeTransform"], [158, 0, 1, "", "FiniteTensorDictCheck"], [159, 0, 1, "", "FlattenObservation"], [160, 0, 1, "", "FrameSkipTransform"], [161, 0, 1, "", "GrayScale"], [162, 0, 1, "", "InitTracker"], [163, 0, 1, "", "KLRewardTransform"], [164, 0, 1, "", "NoopResetEnv"], [165, 0, 1, "", "ObservationNorm"], [166, 0, 1, "", "ObservationTransform"], [167, 0, 1, "", "PermuteTransform"], [168, 0, 1, "", "PinMemoryTransform"], [169, 0, 1, "", "R3MTransform"], [170, 0, 1, "", "RandomCropTensorDict"], [171, 0, 1, "", "RemoveEmptySpecs"], [172, 0, 1, "", "RenameTransform"], [173, 0, 1, "", "Resize"], [174, 0, 1, "", "Reward2GoTransform"], [175, 0, 1, "", "RewardClipping"], [176, 0, 1, "", "RewardScaling"], [177, 0, 1, "", "RewardSum"], [178, 0, 1, "", "SelectTransform"], [179, 0, 1, "", "SignTransform"], [180, 0, 1, "", "SqueezeTransform"], [181, 0, 1, "", "StepCounter"], [182, 0, 1, "", "TargetReturn"], [183, 0, 1, "", "TensorDictPrimer"], [184, 0, 1, "", "TimeMaxPool"], [185, 0, 1, "", "ToTensorImage"], [186, 0, 1, "", "Transform"], [187, 0, 1, "", "TransformedEnv"], [188, 0, 1, "", "UnsqueezeTransform"], [189, 0, 1, "", "VC1Transform"], [190, 0, 1, "", "VIPRewardTransform"], [191, 0, 1, "", "VIPTransform"], [192, 0, 1, "", "VecGymEnvTransform"], [193, 0, 1, "", "VecNorm"], [194, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[139, 0, 1, "", "SamplingStrategy"], [139, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[141, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_env_batch_size"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[144, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[145, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[148, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[150, 1, 1, "", "append"], [150, 1, 1, "", "forward"], [150, 1, 1, "", "insert"], [150, 1, 1, "", "to"], [150, 1, 1, "", "transform_env_batch_size"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[151, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_done_spec"], [153, 1, 1, "", "transform_env_device"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_output_spec"], [153, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[154, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "register_keys"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[158, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[160, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[165, 1, 1, "", "init_stats"], [165, 1, 1, "", "transform_input_spec"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[169, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_input_spec"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_input_spec"], [172, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[174, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[175, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[179, 1, 1, "", "transform_observation_spec"], [179, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"], [181, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "to"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[186, 3, 1, "", "container"], [186, 1, 1, "", "forward"], [186, 3, 1, "", "parent"], [186, 1, 1, "", "to"], [186, 1, 1, "", "transform_done_spec"], [186, 1, 1, "", "transform_env_batch_size"], [186, 1, 1, "", "transform_env_device"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_output_spec"], [186, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[187, 1, 1, "", "add_truncated_keys"], [187, 1, 1, "", "append_transform"], [187, 3, 1, "", "batch_locked"], [187, 3, 1, "", "batch_size"], [187, 1, 1, "", "empty_cache"], [187, 1, 1, "", "eval"], [187, 3, 1, "", "input_spec"], [187, 1, 1, "", "insert_transform"], [187, 1, 1, "", "load_state_dict"], [187, 3, 1, "", "output_spec"], [187, 1, 1, "", "set_missing_tolerance"], [187, 1, 1, "", "set_seed"], [187, 1, 1, "", "state_dict"], [187, 1, 1, "", "to"], [187, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"], [188, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "make_noload_model"], [189, 1, 1, "", "to"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[191, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[193, 1, 1, "", "build_td_for_shared_vecnorm"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "freeze"], [193, 1, 1, "", "frozen_copy"], [193, 1, 1, "", "get_extra_state"], [193, 3, 1, "", "loc"], [193, 3, 1, "", "scale"], [193, 1, 1, "", "set_extra_state"], [193, 3, 1, "", "standard_normal"], [193, 1, 1, "", "to_observation_norm"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[195, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "compile"], [195, 3, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 3, 1, "", "n_steps"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 3, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[196, 2, 1, "", "RandomPolicy"], [197, 2, 1, "", "check_env_specs"], [198, 2, 1, "", "exploration_mode"], [199, 2, 1, "", "exploration_type"], [200, 2, 1, "", "get_available_libraries"], [201, 2, 1, "", "make_composite_from_td"], [202, 2, 1, "", "set_exploration_mode"], [203, 2, 1, "", "set_exploration_type"], [204, 2, 1, "", "step_mdp"], [205, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[206, 0, 1, "", "CEMPlanner"], [207, 0, 1, "", "Conv3dNet"], [208, 0, 1, "", "ConvNet"], [209, 0, 1, "", "DTActor"], [210, 0, 1, "", "DdpgCnnActor"], [211, 0, 1, "", "DdpgCnnQNet"], [212, 0, 1, "", "DdpgMlpActor"], [213, 0, 1, "", "DdpgMlpQNet"], [214, 0, 1, "", "DecisionTransformer"], [215, 0, 1, "", "Delta"], [216, 0, 1, "", "DistributionalDQNnet"], [217, 0, 1, "", "DistributionalQValueHook"], [218, 0, 1, "", "DreamerActor"], [219, 0, 1, "", "DuelingCnnDQNet"], [220, 0, 1, "", "GRU"], [221, 0, 1, "", "GRUCell"], [222, 0, 1, "", "GRUModule"], [223, 0, 1, "", "IndependentNormal"], [224, 0, 1, "", "LSTM"], [225, 0, 1, "", "LSTMCell"], [226, 0, 1, "", "LSTMModule"], [227, 0, 1, "", "MLP"], [228, 0, 1, "", "MPCPlannerBase"], [229, 0, 1, "", "MPPIPlanner"], [230, 0, 1, "", "MaskedCategorical"], [231, 0, 1, "", "MaskedOneHotCategorical"], [232, 0, 1, "", "MultiAgentConvNet"], [233, 0, 1, "", "MultiAgentMLP"], [234, 0, 1, "", "MultiAgentNetBase"], [235, 0, 1, "", "NoisyLazyLinear"], [236, 0, 1, "", "NoisyLinear"], [237, 0, 1, "", "NormalParamWrapper"], [238, 0, 1, "", "ObsDecoder"], [239, 0, 1, "", "ObsEncoder"], [240, 0, 1, "", "OneHotCategorical"], [241, 0, 1, "", "OnlineDTActor"], [242, 0, 1, "", "QMixer"], [243, 0, 1, "", "QValueHook"], [244, 0, 1, "", "RSSMPosterior"], [245, 0, 1, "", "RSSMPrior"], [246, 0, 1, "", "Squeeze2dLayer"], [247, 0, 1, "", "SqueezeLayer"], [248, 0, 1, "", "TanhDelta"], [249, 0, 1, "", "TanhNormal"], [250, 0, 1, "", "TruncatedNormal"], [251, 0, 1, "", "VDNMixer"], [252, 0, 1, "", "VmapModule"], [253, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[206, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[207, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[208, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[209, 1, 1, "", "default_config"], [209, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[210, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[211, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[212, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[213, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[214, 0, 1, "", "DTConfig"], [214, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[215, 1, 1, "", "log_prob"], [215, 3, 1, "", "mean"], [215, 3, 1, "", "mode"], [215, 1, 1, "", "rsample"], [215, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[216, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[218, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[219, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[220, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[221, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[222, 1, 1, "", "forward"], [222, 1, 1, "id0", "make_tensordict_primer"], [222, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[223, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[224, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[225, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[226, 1, 1, "", "forward"], [226, 1, 1, "id0", "make_tensordict_primer"], [226, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[227, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[229, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[230, 1, 1, "", "log_prob"], [230, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[231, 1, 1, "", "log_prob"], [231, 1, 1, "", "rsample"], [231, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "from_stateful_net"], [234, 1, 1, "", "get_stateful_net"], [234, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[235, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[237, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[238, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[239, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[240, 1, 1, "", "log_prob"], [240, 3, 1, "", "mode"], [240, 1, 1, "", "rsample"], [240, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[241, 1, 1, "", "default_config"], [241, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[242, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[244, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[245, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[247, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[248, 3, 1, "", "mean"], [248, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[249, 1, 1, "", "get_mode"], [249, 3, 1, "", "mean"], [249, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[250, 1, 1, "", "log_prob"], [250, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[251, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[252, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[254, 0, 1, "", "Actor"], [255, 0, 1, "", "ActorCriticOperator"], [256, 0, 1, "", "ActorCriticWrapper"], [257, 0, 1, "", "ActorValueOperator"], [258, 0, 1, "", "AdditiveGaussianModule"], [259, 0, 1, "", "AdditiveGaussianWrapper"], [260, 0, 1, "", "DecisionTransformerInferenceWrapper"], [261, 0, 1, "", "DistributionalQValueActor"], [262, 0, 1, "", "DistributionalQValueModule"], [263, 0, 1, "", "EGreedyModule"], [264, 0, 1, "", "EGreedyWrapper"], [265, 0, 1, "", "LMHeadActorValueOperator"], [266, 0, 1, "", "MultiStepActorWrapper"], [267, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [268, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [269, 0, 1, "", "ProbabilisticActor"], [270, 0, 1, "", "QValueActor"], [271, 0, 1, "", "QValueModule"], [272, 0, 1, "", "SafeModule"], [273, 0, 1, "", "SafeProbabilisticModule"], [274, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [275, 0, 1, "", "SafeSequential"], [276, 0, 1, "", "TanhModule"], [277, 0, 1, "", "ValueOperator"], [278, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[255, 1, 1, "", "get_critic_operator"], [255, 1, 1, "", "get_policy_head"], [255, 1, 1, "", "get_value_head"], [255, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[256, 1, 1, "", "get_policy_head"], [256, 1, 1, "", "get_policy_operator"], [256, 1, 1, "", "get_value_head"], [256, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[257, 1, 1, "", "get_policy_head"], [257, 1, 1, "", "get_policy_operator"], [257, 1, 1, "", "get_value_head"], [257, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "mask_context"], [260, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[262, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[266, 1, 1, "", "forward"], [266, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[271, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[272, 1, 1, "", "random"], [272, 1, 1, "", "random_sample"], [272, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[273, 1, 1, "", "random"], [273, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[276, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[278, 1, 1, "", "get_reward_operator"], [278, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[279, 0, 1, "", "biased_softplus"], [280, 0, 1, "", "get_primers_from_module"], [281, 0, 1, "", "inv_softplus"], [282, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[279, 1, 1, "", "forward"]], "torchrl.objectives": [[283, 0, 1, "", "A2CLoss"], [284, 0, 1, "", "CQLLoss"], [285, 0, 1, "", "ClipPPOLoss"], [286, 0, 1, "", "DDPGLoss"], [287, 0, 1, "", "DQNLoss"], [288, 0, 1, "", "DTLoss"], [289, 0, 1, "", "DiscreteCQLLoss"], [290, 0, 1, "", "DiscreteIQLLoss"], [291, 0, 1, "", "DiscreteSACLoss"], [292, 0, 1, "", "DistributionalDQNLoss"], [293, 0, 1, "", "DreamerActorLoss"], [294, 0, 1, "", "DreamerModelLoss"], [295, 0, 1, "", "DreamerValueLoss"], [296, 0, 1, "", "HardUpdate"], [297, 0, 1, "", "IQLLoss"], [298, 0, 1, "", "KLPENPPOLoss"], [299, 0, 1, "", "LossModule"], [300, 0, 1, "", "OnlineDTLoss"], [301, 0, 1, "", "PPOLoss"], [302, 0, 1, "", "REDQLoss"], [303, 0, 1, "", "ReinforceLoss"], [304, 0, 1, "", "SACLoss"], [305, 0, 1, "", "SoftUpdate"], [306, 0, 1, "", "TD3BCLoss"], [307, 0, 1, "", "TD3Loss"], [308, 0, 1, "", "ValueEstimators"], [309, 0, 1, "", "default_value_kwargs"], [310, 0, 1, "", "distance_loss"], [311, 0, 1, "", "hold_out_net"], [312, 0, 1, "", "hold_out_params"], [314, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[283, 1, 1, "", "forward"], [283, 3, 1, "", "functional"], [283, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[285, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[288, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[290, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[292, 1, 1, "", "forward"], [292, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[294, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[295, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "loss_value_diff"], [297, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[298, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[299, 1, 1, "", "convert_to_functional"], [299, 1, 1, "", "forward"], [299, 1, 1, "", "from_stateful_net"], [299, 3, 1, "", "functional"], [299, 1, 1, "", "get_stateful_net"], [299, 1, 1, "", "make_value_estimator"], [299, 1, 1, "", "named_parameters"], [299, 1, 1, "", "parameters"], [299, 1, 1, "", "set_keys"], [299, 3, 1, "", "value_estimator"], [299, 3, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[300, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[301, 1, 1, "", "forward"], [301, 3, 1, "", "functional"], [301, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[303, 1, 1, "", "forward"], [303, 3, 1, "", "functional"], [303, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "load_state_dict"], [304, 1, 1, "", "make_value_estimator"], [304, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[306, 1, 1, "", "actor_loss"], [306, 1, 1, "", "forward"], [306, 1, 1, "", "make_value_estimator"], [306, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[313, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[315, 0, 1, "", "GAE"], [316, 0, 1, "", "TD0Estimator"], [317, 0, 1, "", "TD1Estimator"], [318, 0, 1, "", "TDLambdaEstimator"], [319, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "set_keys"], [319, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[320, 0, 1, "", "generalized_advantage_estimate"], [321, 0, 1, "", "reward2go"], [322, 0, 1, "", "td0_advantage_estimate"], [323, 0, 1, "", "td0_return_estimate"], [324, 0, 1, "", "td1_advantage_estimate"], [325, 0, 1, "", "td1_return_estimate"], [326, 0, 1, "", "td_lambda_advantage_estimate"], [327, 0, 1, "", "td_lambda_return_estimate"], [328, 0, 1, "", "vec_generalized_advantage_estimate"], [329, 0, 1, "", "vec_td1_advantage_estimate"], [330, 0, 1, "", "vec_td1_return_estimate"], [331, 0, 1, "", "vec_td_lambda_advantage_estimate"], [332, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[333, 2, 1, "", "PixelRenderTransform"], [334, 2, 1, "", "TensorDictRecorder"], [335, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[336, 2, 1, "", "Logger"], [338, 2, 1, "", "generate_exp_name"], [339, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[337, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[340, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[341, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[342, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[343, 0, 1, "", "BatchSubSampler"], [344, 0, 1, "", "ClearCudaCache"], [345, 0, 1, "", "CountFramesLog"], [346, 0, 1, "", "LogReward"], [347, 0, 1, "", "OptimizerHook"], [348, 0, 1, "", "Recorder"], [349, 0, 1, "", "ReplayBufferTrainer"], [350, 0, 1, "", "RewardNormalizer"], [351, 0, 1, "", "SelectKeys"], [352, 0, 1, "", "Trainer"], [353, 0, 1, "", "TrainerHookBase"], [354, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[343, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[344, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[345, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[346, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[347, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[348, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[349, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[350, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[351, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[353, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[354, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[355, 2, 1, "", "correct_for_frame_skip"], [356, 2, 1, "", "get_stats_random_rollout"], [357, 2, 1, "", "make_collector_offpolicy"], [358, 2, 1, "", "make_collector_onpolicy"], [359, 2, 1, "", "make_dqn_loss"], [360, 2, 1, "", "make_replay_buffer"], [361, 2, 1, "", "make_target_updater"], [362, 2, 1, "", "make_trainer"], [363, 2, 1, "", "parallel_env_constructor"], [364, 2, 1, "", "sync_async_collector"], [365, 2, 1, "", "sync_sync_collector"], [366, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 370, 371, 372, 373, 375, 376, 377, 380, 387, 388, 389, 393, 394], "instal": [0, 6, 7, 393], "get": [0, 379, 380, 381, 382, 383, 384], "start": [0, 379, 380, 381, 382, 383, 384], "tutori": [0, 377, 387, 388], "basic": [0, 391], "intermedi": [0, 8], "advanc": 0, "refer": [0, 368], "knowledg": [0, 369], "base": [0, 2, 7, 369], "indic": 0, "tabl": 0, "collector": [1, 375, 376, 377, 378, 382, 384, 387, 388, 393], "packag": [1, 2, 3, 370, 371, 372, 373], "batch": [1, 375, 389, 391], "size": [1, 375, 391], "replai": [1, 2, 375, 376, 377, 378, 382, 384, 387, 388, 391, 393], "buffer": [1, 2, 375, 376, 377, 378, 382, 384, 387, 388, 391, 393], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 375, 376, 377, 382, 384, 387, 388, 393], "distribut": [1, 370], "helper": [1, 3], "function": [1, 4, 371, 376, 377, 381, 387, 388, 393], "compos": [2, 150], "support": 2, "type": 2, "choos": 2, "storag": [2, 89, 375, 382, 391], "sampl": [2, 391], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 376, 391], "trajectori": [2, 391], "checkpoint": [2, 372], "episod": [2, 4], "format": 2, "ted": [2, 379], "The": [2, 375], "rational": 2, "behind": 2, "structur": [2, 391], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 370, 391, 393], "special": [2, 380, 393], "case": 2, "footnot": 2, "multi": [2, 3, 370, 371, 386, 387, 388], "agent": [2, 3, 4, 370, 371, 387, 388], "present": 2, "polici": [2, 4, 375, 377, 378, 380, 384, 386, 387, 388, 389], "rnn": 2, "transform": [2, 3, 186, 375, 377, 379, 387, 388, 389, 391, 393, 394], "step": [2, 375, 377, 379, 382, 387, 388, 391, 394], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 53], "reinforc": [2, 371, 377, 387, 388], "learn": [2, 4, 377, 387, 388], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 370, 371, 372, 387], "env": [3, 389, 393, 394], "vector": [3, 393], "custom": [3, 11, 389, 391], "nativ": 3, "environ": [3, 4, 6, 7, 375, 376, 377, 378, 379, 384, 386, 387, 388, 389, 393, 394], "auto": 3, "reset": [3, 389, 394], "dynam": [3, 4, 391], "spec": [3, 389, 394], "clone": [3, 7], "mask": 3, "action": [3, 4, 378, 389], "record": [3, 348, 372, 375, 383], "video": [3, 11, 383], "domain": [3, 370], "specif": [3, 370, 386], "librari": [3, 393], "thing": [4, 375, 389], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 379, 381, 393], "gener": [4, 11, 370], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 375, 384, 389], "algorithm": [4, 370], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 375, 376, 381, 384], "return": [4, 371], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 393], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 386], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 375, 376, 377], "standard": 4, "explor": [4, 370, 375, 376, 380], "valu": [4, 370, 371, 375, 377, 378, 380], "loss": [4, 375, 376, 377, 378, 384, 387, 388], "earli": 4, "train": [4, 8, 371, 375, 377, 378, 381, 384, 387, 388, 389], "roughli": 4, "uniformli": 4, "random": [4, 371, 387, 388], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 376], "increas": 4, "an": [4, 377, 378, 379, 389], "can": 4, "low": 4, "forward": [4, 375], "model": [4, 370, 375, 376, 378, 381, 390, 393], "also": 4, "us": [4, 6, 9, 378, 390, 391, 393], "offlin": 4, "observ": [4, 375], "space": 4, "effect": [4, 389], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 394], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 375], "render": [7, 11, 384, 387, 388, 394], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 375], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 389], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 376, 391], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binarydiscretetensorspec": 25, "boundedtensorspec": 26, "compositespec": 27, "constantklcontrol": 28, "discretetensorspec": 29, "flat2t": 30, "h5combin": 31, "h5split": 32, "lazystackedcompositespec": 33, "lazystackedtensorspec": 34, "multidiscretetensorspec": 35, "multionehotdiscretetensorspec": 36, "multistep": 37, "nested2t": 38, "nontensorspec": 39, "onehotdiscretetensorspec": 40, "pairwisedataset": 41, "prioritizedreplaybuff": 42, "promptdata": 43, "prompttensordicttoken": 44, "replaybuff": 45, "rewarddata": 46, "rolloutfrommodel": 47, "ted2flat": 48, "ted2nest": 49, "tensordictprioritizedreplaybuff": 50, "tensordictreplaybuff": 51, "tensordicttoken": 52, "tokenizeddatasetload": 54, "unboundedcontinuoustensorspec": 55, "unboundeddiscretetensorspec": 56, "check_no_exclusive_kei": 57, "consolidate_spec": 58, "contains_lazy_spec": 59, "create_infinite_iter": 60, "ataridqnexperiencereplai": 61, "basedatasetexperiencereplai": 62, "d4rlexperiencereplai": 63, "gendgrlexperiencereplai": 64, "minariexperiencereplai": 65, "openmlexperiencereplai": 66, "openxexperiencereplai": 67, "robosetexperiencereplai": 68, "vd4rlexperiencereplai": 69, "get_dataload": 70, "flatstoragecheckpoint": 71, "h5storagecheckpoint": 72, "immutabledatasetwrit": 73, "lazymemmapstorag": 74, "lazytensorstorag": 75, "liststorag": 76, "liststoragecheckpoint": 77, "nestedstoragecheckpoint": 78, "prioritizedsampl": 79, "prioritizedslicesampl": 80, "randomsampl": 81, "replaybufferensembl": 82, "roundrobinwrit": 83, "sampler": 84, "samplerensembl": 85, "samplerwithoutreplac": 86, "slicesampl": 87, "slicesamplerwithoutreplac": 88, "storagecheckpointerbas": 90, "storageensembl": 91, "storageensemblecheckpoint": 92, "tensordictmaxvaluewrit": 93, "tensordictroundrobinwrit": 94, "tensorstorag": 95, "tensorstoragecheckpoint": 96, "writer": 97, "writerensembl": 98, "braxenv": 99, "braxwrapp": 100, "dmcontrolenv": 101, "dmcontrolwrapp": 102, "envbas": [103, 389], "envcreat": 104, "envmetadata": 105, "gymenv": 106, "gymlikeenv": 107, "gymwrapp": 108, "habitatenv": 109, "isaacgymenv": 110, "isaacgymwrapp": 111, "jumanjienv": 112, "jumanjiwrapp": 113, "mogymenv": 114, "mogymwrapp": 115, "marlgroupmaptyp": 116, "meltingpotenv": 117, "meltingpotwrapp": 118, "modelbasedenvbas": 119, "multithreadedenv": 120, "multithreadedenvwrapp": 121, "openmlenv": 122, "parallelenv": 123, "pendulumenv": 124, "pettingzooenv": 125, "pettingzoowrapp": 126, "robohiveenv": 127, "smacv2env": 128, "smacv2wrapp": 129, "serialenv": 130, "tictactoeenv": 131, "vmasenv": 132, "vmaswrapp": 133, "check_marl_group": 134, "gym_backend": 135, "dreamerdecod": 136, "dreamerenv": 137, "set_gym_backend": 138, "actiondiscret": 139, "actionmask": 140, "autoresetenv": 141, "autoresettransform": 142, "batchsizetransform": 143, "binarizereward": 144, "burnintransform": 145, "catfram": [146, 391], "cattensor": 147, "centercrop": 148, "cliptransform": 149, "crop": 151, "dtypecasttransform": 152, "devicecasttransform": 153, "discreteactionproject": 154, "doubletofloat": 155, "endoflifetransform": 156, "excludetransform": 157, "finitetensordictcheck": 158, "flattenobserv": 159, "frameskiptransform": 160, "grayscal": 161, "inittrack": 162, "klrewardtransform": 163, "noopresetenv": 164, "observationnorm": 165, "observationtransform": 166, "permutetransform": 167, "pinmemorytransform": 168, "r3mtransform": 169, "randomcroptensordict": 170, "removeemptyspec": 171, "renametransform": 172, "resiz": 173, "reward2gotransform": 174, "rewardclip": 175, "rewardsc": 176, "rewardsum": 177, "selecttransform": 178, "signtransform": 179, "squeezetransform": 180, "stepcount": 181, "targetreturn": 182, "tensordictprim": 183, "timemaxpool": 184, "totensorimag": 185, "transformedenv": 187, "unsqueezetransform": 188, "vc1transform": 189, "viprewardtransform": 190, "viptransform": 191, "vecgymenvtransform": 192, "vecnorm": [193, 394], "gsdenois": 194, "multisteptransform": 195, "randompolici": 196, "check_env_spec": 197, "exploration_mod": 198, "exploration_typ": 199, "get_available_librari": 200, "make_composite_from_td": 201, "set_exploration_mod": 202, "set_exploration_typ": 203, "step_mdp": 204, "terminated_or_trunc": 205, "cemplann": 206, "conv3dnet": 207, "convnet": 208, "dtactor": 209, "ddpgcnnactor": 210, "ddpgcnnqnet": 211, "ddpgmlpactor": 212, "ddpgmlpqnet": 213, "decisiontransform": 214, "delta": 215, "distributionaldqnnet": 216, "distributionalqvaluehook": 217, "dreameractor": 218, "duelingcnndqnet": 219, "gru": 220, "grucel": 221, "grumodul": 222, "independentnorm": 223, "lstm": [224, 378], "lstmcell": 225, "lstmmodul": 226, "mlp": [227, 378], "mpcplannerbas": 228, "mppiplann": 229, "maskedcategor": 230, "maskedonehotcategor": 231, "multiagentconvnet": 232, "multiagentmlp": 233, "multiagentnetbas": 234, "noisylazylinear": 235, "noisylinear": 236, "normalparamwrapp": 237, "obsdecod": 238, "obsencod": 239, "onehotcategor": 240, "onlinedtactor": 241, "qmixer": [242, 371], "qvaluehook": 243, "rssmposterior": 244, "rssmprior": 245, "squeeze2dlay": 246, "squeezelay": 247, "tanhdelta": 248, "tanhnorm": 249, "truncatednorm": 250, "vdnmixer": 251, "vmapmodul": 252, "reset_nois": 253, "actor": [254, 370, 375, 380], "actorcriticoper": 255, "actorcriticwrapp": 256, "actorvalueoper": 257, "additivegaussianmodul": 258, "additivegaussianwrapp": 259, "decisiontransformerinferencewrapp": 260, "distributionalqvalueactor": 261, "distributionalqvaluemodul": 262, "egreedymodul": 263, "egreedywrapp": 264, "lmheadactorvalueoper": 265, "multistepactorwrapp": 266, "ornsteinuhlenbeckprocessmodul": 267, "ornsteinuhlenbeckprocesswrapp": 268, "probabilisticactor": 269, "qvalueactor": 270, "qvaluemodul": 271, "safemodul": [272, 370], "safeprobabilisticmodul": 273, "safeprobabilistictensordictsequenti": 274, "safesequenti": 275, "tanhmodul": 276, "valueoper": 277, "worldmodelwrapp": 278, "biased_softplu": 279, "get_primers_from_modul": 280, "inv_softplu": 281, "map": [282, 387], "a2closs": 283, "cqlloss": 284, "clipppoloss": 285, "ddpgloss": 286, "dqnloss": 287, "dtloss": 288, "discretecqlloss": 289, "discreteiqlloss": 290, "discretesacloss": 291, "distributionaldqnloss": 292, "dreameractorloss": 293, "dreamermodelloss": 294, "dreamervalueloss": 295, "hardupd": 296, "iqlloss": 297, "klpenppoloss": 298, "lossmodul": [299, 375, 381], "onlinedtloss": 300, "ppoloss": 301, "redqloss": 302, "reinforceloss": 303, "sacloss": 304, "softupd": 305, "td3bcloss": 306, "td3loss": 307, "valueestim": 308, "default_value_kwarg": 309, "distance_loss": 310, "hold_out_net": 311, "hold_out_param": 312, "qmixerloss": 313, "next_state_valu": 314, "gae": 315, "td0estim": 316, "td1estim": 317, "tdlambdaestim": 318, "valueestimatorbas": 319, "generalized_advantage_estim": 320, "reward2go": 321, "td0_advantage_estim": 322, "td0_return_estim": 323, "td1_advantage_estim": 324, "td1_return_estim": 325, "td_lambda_advantage_estim": 326, "td_lambda_return_estim": 327, "vec_generalized_advantage_estim": 328, "vec_td1_advantage_estim": 329, "vec_td1_return_estim": 330, "vec_td_lambda_advantage_estim": 331, "vec_td_lambda_return_estim": 332, "pixelrendertransform": 333, "tensordictrecord": 334, "videorecord": 335, "logger": [336, 372, 383, 384], "csvlogger": 337, "generate_exp_nam": 338, "get_logg": 339, "mlflowlogg": 340, "tensorboardlogg": 341, "wandblogg": 342, "batchsubsampl": 343, "clearcudacach": 344, "countframeslog": 345, "logreward": 346, "optimizerhook": 347, "replaybuffertrain": 349, "rewardnorm": 350, "selectkei": 351, "trainer": [352, 372, 376], "trainerhookbas": 353, "updateweight": 354, "correct_for_frame_skip": 355, "get_stats_random_rollout": 356, "make_collector_offpolici": 357, "make_collector_onpolici": 358, "make_dqn_loss": 359, "make_replay_buff": 360, "make_target_updat": 361, "make_train": 362, "parallel_env_constructor": 363, "sync_async_collector": 364, "sync_sync_collector": 365, "transformed_env_constructor": 366, "readm": [367, 385], "tuto": [367, 385], "api": 368, "contribut": [369, 393], "content": 369, "modul": [370, 375, 378, 380, 384, 393], "tensordictmodul": [370, 380, 393], "wrapper": [370, 380], "probabilist": [370, 380], "q": [370, 376, 378, 380], "oper": 370, "join": 370, "hook": [370, 372, 376], "regular": 370, "planner": 370, "object": [371, 375, 381, 393], "torch": 371, "vmap": 371, "dqn": [371, 376, 378], "ddpg": [371, 375, 387], "sac": 371, "redq": 371, "crossq": 371, "iql": 371, "cql": 371, "dt": 371, "td3": 371, "bc": 371, "ppo": [371, 377, 388], "a2c": 371, "dreamer": 371, "builder": 372, "_util": 373, "comput": [374, 376, 389, 392], "time": [374, 375, 392], "code": [375, 389], "overview": [375, 378], "setup": [375, 378], "__init__": 375, "method": 375, "estim": 375, "put": 375, "togeth": [375, 389], "call": 375, "parallel": [375, 386, 394], "execut": [375, 386, 389], "stat": 375, "build": [375, 376, 384, 391], "evalu": 375, "construct": 375, "target": [375, 376, 381], "network": [375, 376, 377, 378, 380, 387, 388], "updat": 375, "experi": [375, 389], "result": [375, 377, 387, 388], "conclus": [375, 376, 377, 378, 387, 388, 389, 391], "next": [375, 377, 379, 382, 387, 388, 391], "A": [376, 391], "deep": 376, "collect": [376, 377, 382], "paramet": [376, 377, 381], "hyperparamet": [376, 377, 387, 388], "regist": 376, "possibl": 376, "improv": 376, "defin": [377, 387, 388], "loop": [377, 378, 384, 387, 388, 389], "recurr": 378, "convolut": 378, "select": 378, "further": [378, 381], "read": 378, "creat": 379, "run": [379, 394], "rollout": [379, 386, 387, 388, 389, 394], "s": [380, 381], "output": 381, "consider": 381, "log": 383, "own": 384, "first": 384, "design": 384, "divers": 386, "competit": 387, "group": 387, "critic": [387, 388], "pendulum": 389, "write": 389, "_step": 389, "simul": 389, "_reset": 389, "metadata": 389, "_spec": 389, "shape": 389, "seed": [389, 394], "wrap": 389, "class": [389, 393], "test": 389, "our": 389, "simpl": 389, "pretrain": 390, "vanilla": 391, "integr": 391, "tensorclass": 391, "other": 391, "tensor": 391, "pytre": 391, "iter": 391, "over": 391, "fix": 391, "priorit": 391, "save": 391, "raw": 391, "imag": 391, "more": 391, "complex": 391, "introduct": 393, "config": 393, "sequenc": 393, "program": 393, "ensembl": 393, "meta": 393, "state": 393, "frame_skip": 394, "deepmind": 394, "control": 394, "devic": 394, "close": 394, "access": 394, "attribut": 394, "kwarg": 394}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})