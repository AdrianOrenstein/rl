Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 103, 105, 106, 108, 110, 111, 112, 114, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 144, 145, 147, 150, 151, 152, 153, 154, 157, 158, 159, 163, 169, 170, 172, 173, 175, 176, 178, 182, 184, 185, 188, 192, 196, 197, 201, 202, 203, 204, 206, 215, 216, 217, 218, 220, 221, 222, 225, 228, 229, 231, 233, 241, 245, 246, 248, 249, 250, 251, 253, 258, 259, 261, 263, 265, 266, 267, 271, 272, 274, 282, 287, 288, 290, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 315, 319, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 356, 357, 358, 359, 373, 375, 378, 382, 387, 388, 392, 393, 396, 403, 404, 405, 406, 409, 410, 411, 415, 416, 419, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435], "open": [0, 5, 7, 12, 52, 54, 59, 73, 89, 96, 416, 428, 429, 434], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "reinforc": [0, 3, 9, 86, 142, 143, 176, 243, 248, 249, 250, 251, 255, 282, 303, 320, 321, 323, 326, 327, 328, 330, 335, 336, 342, 343, 344, 345, 408, 414, 416, 420, 421, 426, 430, 433, 434], "learn": [0, 3, 7, 8, 9, 18, 46, 86, 87, 88, 90, 91, 127, 142, 143, 147, 150, 157, 176, 243, 248, 249, 250, 251, 255, 268, 275, 281, 282, 303, 320, 321, 323, 326, 327, 328, 330, 334, 335, 336, 341, 342, 343, 344, 345, 408, 411, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 432, 433, 434, 435], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 83, 144, 176, 215, 275, 297, 306, 314, 320, 322, 337, 338, 340, 342, 383, 407, 409, 410, 411, 412, 415, 416, 417, 423, 426, 428, 429, 431, 432, 435], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 55, 69, 124, 125, 126, 135, 145, 235, 408, 409, 410, 411, 413, 415, 416, 417, 419, 420, 421, 423, 428, 429, 430, 435], "pytorch": [0, 1, 2, 3, 23, 87, 124, 127, 131, 138, 150, 151, 157, 158, 161, 162, 176, 218, 233, 243, 259, 263, 274, 275, 392, 407, 409, 410, 412, 415, 417, 418, 422, 426, 428, 429, 430, 434, 435], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 46, 56, 57, 61, 66, 69, 86, 124, 127, 131, 135, 138, 141, 142, 143, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 168, 176, 195, 229, 231, 243, 263, 281, 310, 382, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 103, 105, 109, 110, 111, 116, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 167, 168, 169, 170, 172, 173, 175, 176, 179, 180, 182, 184, 185, 186, 192, 196, 197, 201, 202, 206, 209, 213, 214, 215, 216, 219, 220, 221, 222, 223, 225, 227, 229, 231, 233, 239, 242, 244, 245, 246, 248, 258, 259, 261, 262, 263, 265, 267, 268, 271, 272, 273, 275, 282, 291, 293, 297, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 373, 375, 382, 387, 404, 405, 406, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "directli": [0, 4, 8, 14, 15, 16, 23, 83, 105, 122, 123, 124, 127, 130, 131, 138, 144, 150, 151, 157, 158, 176, 192, 197, 206, 219, 223, 228, 310, 338, 345, 406, 416, 417, 419, 420, 428, 429, 430, 432], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 105, 108, 109, 110, 111, 112, 114, 116, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 172, 173, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 236, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 280, 281, 282, 283, 284, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 348, 353, 354, 355, 356, 357, 358, 361, 373, 374, 375, 383, 389, 392, 395, 396, 400, 402, 403, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435], "pypi": [0, 2, 434], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 103, 105, 110, 111, 124, 127, 131, 134, 137, 138, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 176, 180, 201, 216, 218, 220, 221, 222, 225, 227, 229, 230, 231, 243, 244, 245, 246, 259, 261, 262, 263, 265, 266, 272, 273, 274, 281, 283, 291, 292, 296, 298, 300, 306, 309, 310, 323, 334, 338, 345, 375, 382, 389, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 432, 434, 435], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 116, 124, 127, 130, 131, 132, 134, 135, 137, 138, 142, 143, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 176, 218, 225, 230, 231, 240, 241, 244, 255, 263, 266, 274, 297, 302, 303, 309, 310, 314, 320, 330, 338, 340, 355, 360, 368, 382, 388, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 434, 435], "about": [0, 3, 5, 7, 9, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 69, 71, 74, 75, 76, 77, 78, 87, 90, 91, 127, 150, 157, 410, 411, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 434, 435], "instruct": [0, 6, 7, 10, 22, 85, 184, 186, 411, 415, 416, 417, 418, 428, 429, 432], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 41, 58, 67, 68, 105, 150, 157, 298, 299, 300, 410, 415, 420, 422, 423, 425, 427, 429], "section": [0, 2, 3, 4, 24, 127, 259, 263, 416, 419, 420, 425, 428, 429], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 58, 61, 66, 74, 92, 111, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 220, 221, 222, 225, 227, 231, 245, 246, 259, 262, 263, 266, 272, 291, 306, 309, 389, 415, 416, 417, 418, 419, 420, 428, 430], "pip": [0, 10, 88, 419, 420, 421, 422, 423, 424, 425, 429, 434, 435], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 38, 39, 41, 42, 44, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 72, 73, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 99, 103, 104, 105, 108, 110, 111, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 169, 173, 175, 176, 177, 178, 179, 181, 182, 185, 189, 192, 196, 197, 199, 201, 202, 205, 206, 209, 210, 215, 216, 217, 219, 220, 222, 224, 225, 227, 228, 229, 231, 238, 239, 245, 246, 252, 253, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 293, 297, 301, 303, 305, 306, 307, 308, 310, 313, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 383, 389, 396, 402, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 61, 66, 73, 146, 159, 160, 168, 259, 260, 261, 263, 264, 265, 269, 270, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "first": [0, 1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 103, 110, 111, 116, 118, 124, 127, 130, 131, 132, 137, 138, 150, 151, 157, 158, 172, 173, 176, 177, 189, 197, 201, 202, 218, 222, 225, 246, 253, 259, 261, 263, 265, 266, 270, 272, 274, 277, 297, 301, 302, 303, 306, 307, 309, 310, 322, 332, 337, 338, 340, 374, 375, 391, 410, 414, 415, 416, 417, 418, 419, 420, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "low": [0, 3, 28, 31, 57, 66, 71, 74, 103, 124, 127, 131, 138, 150, 151, 157, 158, 169, 179, 184, 192, 195, 216, 223, 236, 289, 290, 291, 301, 303, 306, 310, 313, 415, 416, 417, 419, 428, 429, 430, 434], "high": [0, 3, 9, 28, 31, 52, 54, 59, 67, 73, 74, 103, 124, 127, 131, 138, 150, 151, 157, 158, 169, 179, 184, 192, 195, 196, 216, 223, 236, 289, 290, 291, 301, 303, 306, 310, 313, 355, 360, 368, 415, 416, 417, 428, 429, 430, 432, 434], "level": [0, 2, 3, 4, 22, 31, 32, 39, 53, 58, 63, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 130, 132, 176, 214, 261, 265, 337, 415, 416, 419, 423, 434], "abstract": [0, 3, 8, 70, 71, 83, 84, 88, 120, 127, 198, 267, 359, 384, 393, 412, 417, 419, 430, 434], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 105, 108, 109, 110, 111, 112, 114, 116, 118, 124, 127, 128, 130, 131, 132, 137, 138, 141, 142, 143, 144, 147, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 171, 172, 173, 175, 176, 179, 180, 182, 183, 184, 185, 186, 188, 189, 192, 194, 195, 196, 199, 201, 206, 209, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 236, 238, 239, 240, 242, 243, 251, 253, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 278, 283, 286, 296, 301, 302, 305, 306, 307, 309, 310, 311, 312, 313, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 350, 353, 354, 355, 356, 357, 358, 359, 373, 382, 389, 392, 402, 406, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 175, 184, 293, 338, 410, 434], "effici": [0, 1, 2, 4, 8, 124, 127, 131, 138, 150, 151, 157, 158, 259, 275, 323, 410, 415, 416, 417, 418, 419, 422, 423, 425, 427, 428, 429, 431, 432, 434], "modular": [0, 83, 312, 419, 432, 434], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 46, 56, 57, 61, 66, 89, 124, 127, 131, 138, 148, 149, 150, 151, 157, 158, 159, 160, 222, 231, 407, 416, 418, 419, 420, 423, 426, 434], "properli": [0, 1, 3, 74, 124, 127, 131, 138, 150, 151, 157, 158, 238, 261, 265, 417, 424, 428, 429, 430, 434], "test": [0, 3, 5, 122, 123, 124, 127, 131, 136, 137, 138, 142, 143, 150, 151, 157, 158, 220, 225, 233, 261, 265, 387, 402, 417, 418, 419, 431, 434], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 102, 103, 105, 108, 110, 111, 112, 116, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 167, 169, 172, 173, 175, 176, 180, 182, 185, 186, 187, 192, 195, 197, 199, 201, 206, 208, 209, 210, 213, 214, 215, 216, 220, 221, 222, 225, 227, 228, 229, 231, 233, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 255, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 275, 279, 281, 282, 284, 285, 286, 296, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 361, 373, 375, 377, 380, 381, 382, 383, 388, 402, 404, 405, 408, 410, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435], "code": [0, 3, 5, 7, 8, 14, 15, 57, 61, 89, 124, 127, 131, 137, 138, 150, 151, 157, 158, 201, 222, 225, 241, 259, 260, 261, 263, 264, 265, 306, 310, 312, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435], "aim": [0, 2, 3, 7, 41, 62, 63, 201, 225, 227, 266, 395, 409, 410, 411, 415, 416, 434], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 56, 59, 66, 73, 88, 91, 92, 96, 98, 112, 114, 118, 119, 121, 122, 123, 124, 130, 132, 136, 145, 147, 150, 152, 154, 173, 176, 186, 192, 197, 216, 217, 219, 221, 223, 235, 255, 279, 281, 290, 293, 302, 303, 306, 309, 312, 330, 338, 355, 356, 357, 358, 380, 408, 410, 412, 417, 418, 420, 421, 429, 430, 432, 434], "research": [0, 7, 9, 142, 143, 241, 434], "most": [0, 1, 2, 3, 7, 8, 14, 15, 46, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 184, 228, 233, 415, 417, 419, 420, 421, 422, 423, 424, 425, 430, 434, 435], "written": [0, 1, 2, 3, 12, 35, 52, 53, 54, 56, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 103, 105, 110, 111, 124, 125, 126, 127, 130, 131, 132, 133, 138, 150, 151, 154, 157, 158, 169, 176, 186, 194, 195, 209, 214, 217, 222, 228, 231, 238, 239, 244, 282, 297, 306, 309, 310, 314, 320, 322, 337, 340, 342, 354, 373, 374, 375, 410, 411, 412, 415, 418, 419, 421, 427, 430, 434], "highli": [0, 2, 420, 434, 435], "wai": [0, 1, 2, 3, 4, 83, 87, 105, 116, 135, 176, 201, 204, 220, 227, 228, 261, 263, 265, 340, 355, 356, 357, 358, 410, 415, 416, 417, 419, 420, 422, 423, 427, 428, 429, 430, 431, 432, 434, 435], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 411, 415, 416, 417, 420, 421, 422, 425, 428, 429, 434, 435], "swap": [0, 1, 3, 130, 228, 417, 419, 431, 434], "compon": [0, 1, 2, 3, 53, 57, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 105, 112, 114, 118, 255, 284, 302, 303, 308, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 388, 392, 415, 416, 417, 418, 419, 421, 422, 425, 427, 428, 429, 430, 431, 434], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 53, 55, 58, 60, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 105, 114, 119, 124, 127, 128, 131, 138, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 244, 247, 248, 252, 255, 256, 261, 265, 280, 283, 284, 290, 292, 301, 304, 305, 313, 316, 317, 319, 326, 339, 373, 375, 389, 406, 408, 414, 416, 418, 419, 421, 423, 424, 425, 426, 431, 433], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 53, 55, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 116, 121, 124, 127, 128, 131, 135, 138, 141, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 182, 185, 192, 195, 216, 219, 222, 223, 229, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 292, 293, 301, 303, 305, 308, 313, 316, 337, 375, 415, 416, 418, 419, 420, 421, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "write": [0, 2, 3, 8, 23, 41, 46, 52, 53, 54, 55, 58, 59, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 110, 114, 121, 127, 131, 179, 199, 200, 209, 211, 214, 218, 224, 239, 297, 309, 310, 312, 314, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 354, 359, 375, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 105, 109, 124, 127, 131, 138, 145, 150, 151, 155, 156, 157, 158, 173, 209, 213, 221, 229, 231, 238, 239, 253, 259, 261, 265, 282, 309, 310, 315, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 382, 411, 415, 417, 420, 422, 428, 429, 430, 434, 435], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 110, 111, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 177, 180, 182, 183, 185, 197, 201, 206, 213, 216, 221, 222, 225, 227, 231, 232, 243, 269, 270, 281, 293, 309, 320, 321, 323, 324, 336, 340, 341, 343, 345, 346, 361, 415, 417, 419, 428, 429, 430, 432, 434, 435], "littl": [0, 1, 3, 69, 124, 127, 131, 138, 150, 151, 157, 158, 222, 243, 320, 322, 337, 340, 342, 417, 418, 419, 423, 432, 434, 435], "effort": [0, 3, 430, 432, 434], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 114, 116, 118, 119, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 147, 150, 151, 152, 153, 157, 158, 159, 161, 162, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 373, 374, 382, 383, 385, 387, 389, 392, 394, 395, 396, 402, 406, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "repo": [0, 6, 85, 176, 217, 225, 409, 429, 434], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 110, 111, 124, 125, 126, 127, 130, 131, 132, 133, 138, 150, 151, 154, 157, 158, 238, 243, 310, 325, 328, 336, 353, 411, 422, 434], "align": [0, 259, 263, 434], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 96, 124, 127, 131, 138, 150, 151, 157, 158, 177, 183, 220, 222, 231, 253, 310, 323, 343, 396, 406, 428, 429, 434, 435], "ecosystem": [0, 419, 423, 434], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 89, 96, 98, 105, 108, 110, 116, 118, 124, 127, 128, 131, 135, 138, 142, 143, 150, 151, 157, 158, 161, 162, 173, 176, 214, 215, 216, 217, 219, 220, 222, 231, 240, 259, 261, 263, 265, 271, 273, 290, 303, 305, 310, 320, 323, 337, 338, 340, 342, 375, 411, 415, 416, 417, 418, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "dataset": [0, 37, 41, 52, 53, 54, 55, 58, 59, 60, 65, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 103, 105, 108, 110, 111, 147, 229, 375, 408, 415, 416, 420, 431, 432, 434, 435], "pillar": [0, 434], "environ": [0, 1, 2, 5, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 61, 62, 63, 71, 73, 74, 75, 76, 77, 78, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 170, 172, 173, 175, 176, 177, 182, 183, 184, 185, 190, 196, 197, 201, 202, 203, 206, 209, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 228, 229, 233, 242, 244, 261, 265, 267, 268, 305, 327, 331, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 383, 385, 387, 395, 396, 397, 398, 402, 403, 404, 405, 406, 408, 409, 410, 411, 414, 419, 421, 422, 423, 424, 426, 431, 432, 433], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 124, 127, 131, 138, 144, 150, 151, 157, 158, 176, 182, 201, 216, 225, 227, 230, 231, 245, 246, 247, 252, 254, 261, 265, 266, 267, 268, 272, 273, 280, 283, 292, 298, 299, 300, 304, 309, 315, 317, 320, 321, 322, 323, 325, 326, 327, 328, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 353, 392, 397, 398, 399, 408, 409, 411, 412, 414, 417, 420, 423, 426, 428, 429, 430, 432, 433, 435], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 170, 173, 175, 176, 182, 183, 185, 187, 192, 194, 197, 203, 206, 213, 214, 219, 222, 223, 228, 231, 232, 233, 236, 239, 242, 243, 255, 258, 261, 265, 268, 271, 272, 282, 284, 293, 296, 297, 302, 305, 306, 307, 309, 310, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 375, 382, 383, 389, 392, 394, 397, 402, 404, 405, 406, 408, 410, 411, 412, 414, 418, 419, 420, 421, 422, 426, 430, 431, 432, 433, 435], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 46, 56, 57, 58, 60, 61, 66, 110, 111, 122, 123, 124, 127, 131, 136, 137, 138, 143, 150, 151, 152, 153, 157, 158, 163, 176, 201, 206, 216, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 252, 259, 261, 263, 265, 316, 317, 318, 319, 338, 402, 408, 413, 415, 417, 419, 421, 422, 423, 429, 430, 432, 434, 435], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 96, 98, 102, 103, 116, 118, 124, 127, 128, 131, 138, 150, 151, 157, 158, 161, 173, 175, 177, 180, 181, 189, 192, 195, 197, 201, 209, 216, 220, 221, 222, 225, 227, 231, 233, 259, 261, 262, 263, 265, 268, 272, 284, 290, 291, 296, 301, 303, 305, 306, 308, 309, 310, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 373, 383, 395, 405, 410, 411, 416, 417, 419, 421, 422, 424, 428, 429, 431, 432, 434, 435], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 116, 124, 127, 128, 131, 138, 150, 151, 157, 158, 161, 173, 175, 177, 180, 189, 192, 195, 197, 201, 209, 216, 220, 221, 222, 225, 227, 231, 233, 259, 261, 262, 263, 264, 265, 268, 272, 290, 291, 301, 306, 309, 310, 323, 343, 354, 364, 365, 366, 367, 369, 370, 371, 372, 373, 405, 410, 411, 416, 417, 419, 421, 424, 428, 429, 430, 431, 432, 434, 435], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 46, 60, 64, 83, 89, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 173, 176, 206, 214, 231, 232, 243, 261, 265, 282, 389, 392, 394, 397, 398, 402, 404, 405, 408, 411, 412, 419, 432, 435], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 102, 103, 105, 106, 108, 110, 111, 112, 117, 120, 121, 124, 127, 131, 138, 144, 150, 151, 157, 158, 169, 176, 180, 182, 185, 192, 201, 213, 216, 220, 221, 222, 225, 227, 228, 229, 231, 238, 239, 242, 245, 246, 259, 260, 263, 264, 266, 268, 271, 272, 297, 302, 303, 306, 308, 309, 310, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 361, 379, 383, 395, 402, 403, 404, 405, 406, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 41, 46, 56, 57, 61, 66, 71, 89, 124, 127, 131, 138, 150, 151, 157, 158, 194, 213, 222, 231, 266, 272, 290, 411, 416, 417, 423, 432, 434, 435], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 109, 112, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 167, 169, 172, 176, 182, 185, 186, 194, 196, 197, 213, 214, 219, 220, 221, 222, 229, 231, 233, 239, 240, 243, 245, 246, 266, 271, 272, 273, 282, 293, 305, 311, 312, 320, 322, 337, 340, 342, 345, 349, 350, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 383, 392, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "few": [0, 2, 8, 111, 131, 375, 383, 417, 418, 421, 428, 429, 432, 434, 435], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 52, 54, 74, 124, 127, 130, 131, 132, 133, 138, 150, 151, 154, 157, 158, 161, 162, 182, 185, 310, 314, 340, 377, 410, 415, 417, 418, 428, 429, 430, 434, 435], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 86, 89, 91, 97, 103, 110, 116, 124, 127, 131, 138, 150, 151, 157, 158, 169, 180, 201, 216, 220, 221, 222, 225, 227, 231, 245, 246, 259, 260, 263, 264, 309, 373, 387, 392, 410, 415, 417, 418, 419, 421, 423, 424, 428, 429, 430, 432, 434, 435], "standard": [0, 2, 3, 124, 197, 208, 229, 240, 241, 242, 256, 268, 274, 275, 280, 301, 322, 337, 340, 345, 346, 355, 356, 357, 358, 415, 416, 420, 421, 429, 432, 434], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 132, 138, 150, 151, 157, 158, 192, 218, 223, 392, 419, 430, 432, 434, 435], "common": [0, 2, 3, 4, 71, 131, 136, 170, 298, 299, 300, 304, 320, 321, 322, 323, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 402, 409, 410, 411, 412, 415, 417, 421, 424, 427, 428, 429, 430, 431, 434, 435], "openai": [0, 7, 24, 130, 132, 138, 154, 417, 430, 434, 435], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 124, 127, 128, 130, 131, 132, 133, 135, 138, 142, 143, 145, 146, 150, 151, 154, 157, 158, 161, 162, 164, 167, 168, 172, 176, 179, 186, 193, 194, 197, 199, 204, 206, 209, 216, 221, 228, 229, 231, 402, 409, 415, 416, 417, 418, 420, 424, 425, 430, 431, 432], "onli": [0, 1, 2, 3, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 102, 103, 105, 110, 111, 118, 124, 125, 126, 127, 130, 131, 132, 133, 135, 137, 138, 145, 146, 150, 151, 152, 153, 154, 157, 158, 169, 172, 176, 177, 179, 180, 182, 184, 185, 189, 197, 201, 202, 206, 213, 214, 215, 216, 217, 220, 221, 222, 225, 227, 229, 231, 243, 263, 265, 271, 272, 297, 301, 302, 306, 307, 309, 310, 311, 312, 320, 322, 323, 324, 328, 329, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 375, 382, 396, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 434, 435], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 201, 202, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 289, 290, 291, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 380, 382, 383, 385, 386, 387, 388, 389, 390, 392, 396, 397, 398, 399, 401, 402, 404, 405, 406, 410, 418, 420, 423, 428, 429, 430, 432, 434], "On": [0, 3, 7, 18, 19, 20, 21, 31, 86, 260, 264, 410, 416, 428, 429], "end": [0, 2, 3, 14, 15, 17, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 103, 105, 109, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 186, 192, 199, 214, 215, 220, 222, 231, 245, 246, 259, 260, 263, 264, 267, 305, 323, 343, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "come": [0, 1, 2, 3, 8, 41, 46, 116, 124, 127, 131, 137, 138, 141, 150, 151, 157, 158, 182, 185, 296, 297, 298, 299, 300, 306, 314, 320, 322, 337, 340, 342, 375, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 432, 434, 435], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 105, 109, 112, 118, 124, 127, 129, 131, 132, 137, 138, 142, 143, 144, 150, 151, 152, 153, 157, 158, 161, 162, 168, 170, 172, 173, 176, 177, 180, 182, 185, 192, 193, 194, 195, 201, 206, 214, 215, 216, 217, 220, 221, 222, 225, 227, 229, 231, 233, 237, 239, 259, 261, 263, 265, 267, 271, 272, 279, 281, 282, 290, 296, 301, 309, 310, 322, 323, 329, 334, 337, 338, 340, 343, 359, 375, 383, 387, 389, 398, 406, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 422, 423, 427, 428, 429, 430, 431, 432, 434, 435], "re": [0, 2, 3, 8, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 109, 124, 127, 131, 138, 150, 151, 157, 158, 231, 265, 269, 270, 273, 306, 310, 382, 412, 415, 417, 418, 420, 422, 427, 428, 430, 434, 435], "usabl": [0, 412, 418, 434], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 105, 112, 114, 118, 124, 127, 128, 131, 132, 138, 150, 151, 157, 158, 167, 168, 172, 173, 182, 185, 192, 219, 220, 222, 223, 229, 231, 233, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 276, 277, 278, 280, 282, 285, 286, 288, 291, 293, 298, 299, 300, 301, 303, 305, 306, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 392, 402, 408, 410, 415, 418, 419, 420, 421, 424, 427, 430, 432, 435], "cost": [0, 2, 30, 89, 97, 320, 322, 337, 340, 342, 411, 415, 416, 419, 428, 429, 430, 432], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 103, 105, 106, 108, 110, 111, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 158, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 238, 239, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 283, 285, 286, 289, 290, 291, 292, 294, 297, 298, 299, 300, 301, 305, 306, 308, 309, 310, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 379, 392, 395, 397, 402, 403, 404, 405, 406, 408, 410, 412, 415, 416, 417, 419, 421, 422, 424, 427, 428, 429, 430, 431, 432, 434, 435], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 86, 90, 91, 98, 102, 103, 106, 110, 118, 124, 127, 128, 131, 135, 138, 141, 145, 150, 151, 152, 153, 157, 158, 175, 176, 182, 185, 192, 216, 218, 220, 229, 231, 261, 265, 271, 272, 282, 303, 308, 408, 412, 415, 416, 418, 419, 420, 428, 429, 430, 431, 432, 434, 435], "good": [0, 1, 4, 9, 150, 415, 417, 418, 419, 421, 429, 434, 435], "runtim": [0, 2, 3, 23, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 430], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 150, 151, 154, 157, 158, 161, 162, 163, 182, 185, 192, 196, 220, 222, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 273, 276, 277, 280, 281, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 322, 323, 332, 340, 343, 387, 392, 411, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 430, 435], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 103, 105, 110, 111, 114, 121, 122, 123, 124, 127, 130, 131, 132, 136, 137, 138, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 176, 214, 216, 229, 231, 244, 261, 265, 282, 298, 299, 300, 310, 323, 329, 334, 338, 345, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 53, 55, 58, 60, 63, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 102, 105, 112, 114, 118, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 170, 172, 173, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 199, 200, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 224, 225, 226, 228, 229, 231, 239, 244, 278, 297, 298, 299, 300, 302, 305, 306, 309, 310, 312, 314, 315, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 356, 357, 358, 359, 375, 387, 392, 410, 415, 416, 417, 419, 420, 421, 427, 428, 429, 430, 431, 434, 435], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 412, 415, 420, 423, 427, 431, 435], "beyond": [0, 41, 124, 127, 131, 138, 150, 151, 157, 158, 419], "api": [0, 2, 3, 5, 23, 31, 32, 39, 41, 56, 63, 66, 71, 124, 127, 152, 153, 154, 201, 227, 229, 243, 410, 411, 412, 419, 420, 421, 422, 423, 424, 428, 429, 430, 432, 434, 435], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 79, 81, 93, 94, 101, 110, 124, 127, 128, 130, 131, 132, 138, 144, 150, 151, 157, 158, 163, 176, 177, 188, 194, 202, 216, 218, 222, 231, 233, 253, 261, 265, 297, 302, 303, 306, 307, 308, 309, 310, 323, 334, 345, 375, 407, 410, 411, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "paper": [0, 86, 89, 122, 123, 125, 126, 133, 136, 137, 142, 143, 145, 146, 154, 161, 162, 201, 225, 227, 246, 259, 283, 292, 327, 335, 345, 415, 417, 428, 429], "releas": [0, 4, 7, 10, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 343], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 394, 402, 412, 415], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 192, 216, 220, 229, 231, 243, 311, 312, 375, 415, 417, 418, 422, 425, 428, 429, 430, 435], "make": [0, 2, 3, 4, 7, 11, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 108, 112, 114, 121, 124, 127, 131, 132, 135, 137, 138, 140, 146, 150, 151, 157, 158, 169, 187, 195, 197, 201, 202, 206, 210, 214, 225, 231, 233, 238, 241, 244, 259, 260, 261, 263, 264, 265, 271, 272, 274, 302, 310, 320, 322, 337, 340, 342, 355, 356, 357, 358, 373, 389, 398, 406, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "sure": [0, 3, 4, 7, 88, 112, 124, 131, 135, 206, 302, 406, 410, 415, 417, 418, 419, 422, 428, 429, 430, 432, 434, 435], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 38, 46, 56, 57, 61, 66, 71, 74, 83, 92, 93, 94, 101, 124, 127, 131, 138, 150, 151, 157, 158, 194, 196, 229, 231, 330, 338, 410, 411, 416, 417, 418, 419, 428, 429, 430, 432], "enjoi": [0, 2, 3, 89, 423], "latest": [0, 2, 3, 10, 145, 148, 149, 152, 153, 389, 417, 428, 429, 430, 434], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 50, 56, 66, 71, 72, 87, 103, 110, 111, 124, 127, 131, 138, 141, 150, 151, 152, 153, 155, 156, 157, 158, 173, 176, 189, 194, 199, 216, 217, 224, 229, 233, 241, 245, 246, 256, 257, 259, 260, 261, 263, 264, 265, 266, 271, 274, 275, 310, 317, 320, 322, 337, 340, 342, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 406, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 425, 430, 432, 434, 435], "recent": [0, 7, 12, 228, 435], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 54, 56, 57, 60, 61, 66, 75, 76, 77, 78, 86, 91, 110, 124, 127, 130, 131, 132, 133, 138, 145, 146, 150, 151, 152, 154, 157, 158, 161, 162, 176, 219, 228, 229, 231, 238, 241, 261, 265, 273, 279, 300, 320, 322, 337, 338, 340, 342, 343, 355, 358, 409, 410, 411, 415, 417, 418, 419, 420, 422, 425, 428, 429, 430, 431, 435], "although": [0, 1, 3, 8, 27, 38, 56, 57, 61, 66, 74, 124, 127, 131, 138, 150, 151, 157, 158, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 411, 412, 415, 416, 423, 432], "core": [0, 2, 3, 8, 412, 418, 421, 434], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 99, 112, 114, 118, 124, 127, 131, 138, 150, 151, 157, 158, 220, 229, 231, 310, 423], "backward": [0, 8, 27, 38, 46, 56, 57, 61, 66, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231, 259, 260, 263, 264, 281, 310, 320, 321, 323, 324, 328, 329, 336, 340, 341, 342, 343, 345, 346, 415, 417, 418, 419, 422, 423, 425, 428, 429, 430], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 61, 66, 85, 97, 105, 108, 110, 111, 112, 116, 124, 127, 131, 133, 138, 147, 150, 151, 157, 158, 176, 214, 225, 229, 231, 259, 260, 261, 263, 264, 265, 307, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 349, 415, 418, 432], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 102, 103, 105, 110, 111, 116, 118, 122, 123, 124, 127, 128, 131, 136, 137, 138, 141, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 172, 173, 175, 177, 180, 182, 183, 184, 185, 194, 195, 197, 199, 201, 203, 206, 209, 213, 214, 215, 216, 220, 221, 222, 225, 227, 229, 231, 236, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 280, 281, 282, 290, 293, 301, 302, 303, 305, 309, 313, 314, 320, 321, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 383, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 427, 428, 429, 430, 432, 433, 434, 435], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 105, 110, 111, 118, 122, 123, 124, 127, 130, 131, 133, 134, 136, 137, 138, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 169, 170, 172, 174, 176, 177, 179, 180, 181, 183, 184, 194, 195, 196, 197, 201, 206, 209, 211, 213, 215, 216, 217, 218, 220, 221, 222, 225, 227, 228, 229, 231, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 278, 281, 282, 285, 286, 289, 290, 291, 293, 297, 301, 303, 308, 309, 310, 312, 313, 316, 317, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 361, 362, 363, 383, 390, 402, 406, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 53, 56, 58, 66, 67, 68, 85, 87, 88, 89, 90, 91, 97, 131, 150, 157, 195, 201, 204, 221, 227, 323, 326, 338, 411, 412, 415, 416, 417, 418, 421, 423, 432, 434, 435], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 108, 110, 111, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 175, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 238, 239, 240, 242, 243, 244, 254, 255, 258, 261, 265, 267, 268, 271, 272, 282, 283, 284, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 373, 374, 383, 387, 388, 389, 391, 392, 408, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 435], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 194, 203, 220, 298, 299, 300, 309, 328, 336, 345, 408, 415, 428, 430, 434], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 105, 113, 119, 124, 127, 131, 138, 150, 151, 157, 158, 159, 168, 201, 227, 231, 268, 377, 382, 392, 412, 416, 419, 425, 428], "root": [0, 2, 3, 31, 32, 39, 41, 53, 58, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 105, 124, 127, 131, 138, 150, 151, 157, 158, 176, 217, 238, 261, 262, 265, 290, 291, 411, 418, 420, 428, 429, 430, 432, 435], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 53, 69, 83, 86, 87, 88, 89, 90, 91, 102, 103, 122, 123, 125, 126, 133, 135, 136, 137, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 159, 160, 161, 162, 176, 201, 225, 241, 247, 248, 249, 250, 251, 252, 255, 256, 257, 263, 268, 269, 270, 275, 276, 277, 281, 282, 283, 285, 286, 292, 303, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 355, 360, 368, 407, 426, 431, 434], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 89, 122, 123, 125, 126, 130, 133, 136, 137, 142, 143, 145, 146, 148, 149, 152, 153, 154, 159, 160, 161, 162, 173, 176, 225, 241, 421, 425, 428, 429, 434], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 86, 89, 90, 122, 123, 125, 126, 133, 135, 136, 137, 142, 143, 145, 146, 148, 149, 152, 153, 154, 159, 160, 161, 162, 176, 241, 434], "setup": [0, 7, 122, 123, 135, 136, 137, 159], "py": [0, 3, 24, 130, 132, 168, 176, 253, 283, 292, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435], "develop": [0, 3, 4, 7, 41, 135, 415, 434], "A": [0, 1, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 112, 116, 117, 118, 119, 120, 124, 127, 129, 131, 133, 134, 138, 150, 151, 154, 157, 158, 165, 169, 171, 172, 173, 175, 176, 179, 184, 190, 194, 201, 202, 204, 211, 216, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 238, 240, 242, 244, 245, 246, 255, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 281, 293, 301, 302, 303, 305, 306, 307, 310, 312, 313, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 353, 355, 356, 357, 358, 359, 361, 373, 376, 377, 380, 382, 385, 392, 394, 402, 408, 411, 414, 415, 417, 419, 421, 422, 423, 426, 430, 433, 435], "seri": [0, 2, 3, 7, 8, 50, 95, 106, 116, 117, 120, 121, 157, 196, 221, 375, 410, 411, 415, 416, 417, 424, 425, 428, 429, 432, 435], "quick": [0, 83, 419], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 41, 60, 85, 91, 124, 127, 131, 138, 150, 151, 157, 158, 172, 175, 195, 217, 221, 231, 241, 340, 409, 410, 411, 415, 416, 417, 418, 421, 425, 428, 429, 430, 432, 434, 435], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 103, 105, 106, 108, 109, 110, 111, 116, 118, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 137, 138, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 167, 169, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 192, 194, 195, 196, 197, 201, 202, 205, 206, 209, 210, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 231, 238, 239, 244, 245, 246, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 282, 293, 297, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 369, 370, 371, 372, 373, 379, 382, 388, 389, 392, 394, 396, 402, 406, 409, 411, 415, 416, 417, 418, 419, 420, 422, 424, 425, 427, 428, 429, 430, 432, 434, 435], "hurri": [0, 420], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 85, 109, 110, 111, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 150, 151, 154, 157, 158, 169, 172, 175, 189, 197, 202, 215, 217, 218, 240, 245, 246, 258, 259, 261, 263, 265, 266, 269, 270, 276, 287, 290, 293, 301, 305, 310, 323, 355, 357, 358, 416, 417, 418, 419, 420, 421, 428, 429, 430, 431, 432, 434, 435], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 103, 105, 109, 116, 169, 188, 269, 270, 324, 325, 327, 383, 411, 412, 415, 417, 418, 422, 423, 428, 429, 430, 432], "navig": [0, 429], "previou": [0, 3, 4, 10, 46, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 150, 151, 157, 158, 216, 231, 239, 259, 263, 286, 301, 417, 418, 419, 420, 421, 425, 430, 435], "whenev": [0, 1, 2, 3, 23, 46, 53, 56, 58, 66, 67, 68, 73, 83, 89, 102, 103, 110, 111, 125, 126, 130, 132, 133, 142, 143, 154, 161, 162, 168, 193, 222, 228, 338, 355, 356, 357, 358, 373, 394, 410, 424, 432], "want": [0, 2, 3, 6, 7, 8, 56, 66, 111, 176, 197, 281, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 410, 415, 416, 417, 418, 419, 420, 422, 423, 424, 428, 429, 430, 431, 432, 434, 435], "ted": [0, 35, 47, 64, 65, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 408, 414, 426, 433], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 110, 111, 116, 122, 123, 124, 127, 131, 135, 136, 137, 138, 142, 143, 145, 150, 151, 152, 153, 157, 158, 161, 162, 176, 180, 192, 201, 214, 216, 218, 219, 220, 221, 222, 225, 227, 229, 231, 233, 240, 243, 245, 246, 253, 258, 261, 265, 270, 271, 272, 275, 281, 283, 290, 292, 298, 300, 303, 305, 306, 309, 310, 313, 321, 323, 328, 334, 336, 338, 343, 345, 355, 356, 357, 358, 359, 373, 410, 411, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 116, 122, 123, 124, 127, 131, 138, 141, 144, 147, 150, 151, 157, 158, 168, 175, 180, 184, 186, 192, 194, 201, 202, 215, 216, 220, 221, 222, 225, 227, 229, 230, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 353, 355, 356, 357, 358, 359, 373, 392, 399, 402, 408, 411, 412, 414, 416, 417, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "optim": [0, 1, 2, 8, 27, 38, 46, 56, 57, 60, 61, 66, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 242, 268, 274, 275, 281, 290, 321, 323, 338, 339, 340, 343, 350, 387, 388, 392, 402, 411, 412, 414, 417, 418, 419, 420, 421, 423, 426, 428, 429, 430, 433], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 109, 124, 127, 131, 138, 150, 151, 154, 157, 158, 173, 176, 197, 201, 227, 233, 282, 305, 321, 324, 327, 329, 341, 343, 345, 346, 375, 383, 389, 392, 394, 395, 396, 402, 412, 414, 415, 418, 419, 420, 421, 422, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435], "storag": [0, 1, 8, 27, 35, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 110, 111, 113, 114, 115, 116, 118, 119, 124, 127, 129, 131, 138, 150, 151, 157, 158, 175, 176, 182, 185, 206, 231, 408, 412, 414, 416, 417, 418, 419, 420, 422, 425, 426, 428, 429, 431, 433], "log": [0, 3, 4, 8, 11, 60, 253, 254, 255, 269, 270, 278, 290, 291, 302, 303, 306, 310, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 346, 353, 382, 385, 386, 387, 392, 402, 410, 411, 412, 414, 415, 416, 417, 420, 421, 425, 426, 428, 429, 430, 433, 434], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 135, 138, 141, 150, 151, 152, 153, 157, 158, 229, 231, 310, 406, 409, 410, 411, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429, 432, 433, 434], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 231, 375, 411, 414, 416, 417, 420, 426, 428, 429, 430, 433], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 83, 86, 92, 124, 127, 131, 138, 142, 143, 150, 151, 152, 153, 157, 158, 182, 190, 201, 215, 219, 222, 225, 227, 231, 233, 240, 241, 243, 248, 250, 258, 261, 265, 282, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 392, 394, 402, 408, 410, 412, 414, 416, 420, 423, 424, 426, 431, 432, 433, 434, 435], "loop": [0, 8, 52, 54, 59, 73, 124, 127, 131, 138, 150, 151, 157, 158, 240, 258, 281, 282, 340, 392, 411, 412, 414, 415, 416, 420, 422, 423, 424, 426, 427, 432, 433, 434], "ppo": [0, 4, 8, 306, 310, 322, 337, 340, 408, 410, 414, 415, 416, 419, 421, 422, 426, 428, 433], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 116, 124, 125, 126, 127, 128, 130, 131, 132, 138, 145, 150, 151, 157, 158, 176, 179, 180, 187, 193, 194, 197, 204, 206, 210, 211, 214, 216, 217, 220, 221, 222, 223, 229, 231, 244, 261, 265, 402, 410, 414, 416, 417, 420, 421, 422, 426, 433, 434, 435], "introduct": [0, 411, 414, 420, 426, 428, 429, 433, 435], "multi": [0, 1, 7, 9, 27, 38, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 93, 94, 101, 124, 127, 131, 138, 142, 143, 150, 151, 155, 156, 157, 158, 195, 222, 231, 259, 261, 263, 265, 266, 271, 272, 273, 305, 310, 353, 355, 356, 357, 358, 408, 414, 415, 416, 417, 418, 420, 421, 426, 430, 433, 434], "agent": [0, 9, 62, 63, 141, 142, 143, 148, 149, 152, 153, 155, 156, 159, 160, 161, 162, 163, 195, 213, 214, 215, 269, 270, 271, 272, 273, 275, 283, 292, 322, 337, 340, 353, 408, 414, 420, 426, 430, 433], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 41, 46, 56, 57, 60, 61, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 261, 265, 267, 268, 305, 309, 338, 373, 374, 375, 396, 397, 398, 402, 404, 405, 406, 408, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 101, 102, 103, 104, 105, 110, 111, 116, 118, 122, 123, 124, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 197, 201, 202, 203, 204, 206, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 231, 233, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 278, 280, 281, 282, 283, 284, 290, 291, 292, 293, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 368, 373, 375, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 402, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 435], "pretrain": [0, 414, 426, 433], "recurr": [0, 2, 175, 259, 260, 261, 263, 265, 286, 296, 414, 416, 421, 426, 432, 433], "dqn": [0, 2, 83, 169, 186, 246, 255, 302, 303, 320, 321, 323, 324, 325, 327, 329, 330, 331, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 353, 399, 408, 410, 414, 419, 421, 422, 425, 426, 433], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 46, 64, 122, 123, 124, 127, 131, 138, 144, 150, 151, 157, 158, 184, 194, 215, 232, 237, 240, 243, 244, 255, 258, 261, 265, 271, 272, 275, 282, 284, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 320, 321, 322, 323, 324, 328, 329, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 387, 394, 397, 398, 402, 404, 405, 408, 410, 412, 414, 416, 420, 422, 423, 426, 431, 432, 433, 434, 435], "replai": [0, 8, 16, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 116, 117, 121, 175, 176, 184, 202, 206, 216, 231, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 389, 392, 400, 402, 408, 411, 412, 414, 419, 426, 430, 431, 433], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 121, 124, 127, 131, 138, 144, 150, 151, 157, 158, 175, 176, 180, 184, 192, 201, 202, 206, 216, 220, 221, 222, 225, 227, 231, 240, 282, 301, 309, 312, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 355, 356, 357, 358, 359, 389, 392, 400, 402, 408, 411, 412, 414, 419, 424, 426, 430, 431, 433, 435], "export": [0, 6, 7, 414, 426, 433], "competit": [0, 3, 142, 143, 414, 426, 429, 433], "ddpg": [0, 248, 249, 250, 251, 324, 335, 344, 408, 410, 414, 416, 422, 426, 429, 433], "task": [0, 2, 3, 9, 60, 62, 63, 72, 86, 89, 124, 125, 126, 127, 131, 134, 138, 142, 143, 150, 151, 152, 153, 154, 157, 158, 161, 162, 201, 214, 222, 225, 227, 328, 336, 414, 415, 416, 417, 418, 420, 421, 426, 428, 429, 430, 433, 435], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 148, 149, 150, 151, 157, 158, 161, 167, 216, 252, 261, 265, 301, 320, 338, 340, 342, 375, 392, 408, 411, 412, 414, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 46, 48, 52, 54, 56, 57, 59, 61, 66, 71, 72, 73, 96, 97, 98, 99, 105, 108, 112, 114, 118, 121, 124, 127, 131, 136, 138, 150, 151, 157, 158, 169, 182, 185, 186, 192, 195, 197, 201, 220, 221, 222, 225, 229, 231, 232, 261, 265, 268, 271, 272, 283, 290, 292, 297, 298, 306, 309, 310, 311, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 396, 397, 398, 401, 402, 406, 408, 410, 412, 414, 416, 417, 418, 419, 423, 425, 426, 428, 429, 430, 432, 433, 435], "loss": [0, 3, 8, 54, 186, 281, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 355, 388, 392, 399, 402, 411, 412, 414, 419, 420, 422, 423, 424, 426, 430, 432, 433], "trainer": [0, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 414, 415, 426, 433], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 105, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 197, 199, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 229, 231, 232, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 278, 280, 281, 282, 283, 284, 292, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 348, 353, 355, 356, 357, 358, 361, 373, 375, 383, 384, 385, 386, 388, 389, 390, 391, 394, 402, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435], "packag": [0, 6, 7, 10, 168, 408, 409, 435], "batch": [0, 2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 46, 50, 53, 55, 58, 60, 67, 68, 69, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 103, 104, 105, 109, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 144, 145, 147, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 173, 176, 180, 189, 197, 199, 202, 206, 213, 216, 221, 222, 224, 228, 229, 231, 239, 241, 253, 259, 260, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 278, 282, 283, 289, 293, 296, 305, 309, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 383, 386, 389, 390, 391, 392, 394, 404, 405, 406, 408, 410, 411, 412, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 431, 434, 435], "size": [0, 2, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 104, 105, 109, 110, 111, 112, 118, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 173, 175, 176, 177, 180, 181, 182, 185, 186, 187, 189, 192, 195, 199, 201, 203, 204, 206, 210, 212, 213, 214, 216, 218, 221, 222, 223, 224, 227, 229, 231, 236, 238, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 292, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 375, 383, 389, 408, 410, 411, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 435], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 96, 124, 127, 131, 138, 150, 151, 157, 158, 172, 176, 192, 204, 215, 220, 222, 229, 231, 238, 261, 265, 273, 301, 323, 338, 343, 373, 408, 411, 415, 416, 418, 420, 428, 432, 434], "interoper": [0, 14, 15, 408], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 36, 38, 39, 41, 44, 46, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 105, 111, 116, 124, 127, 130, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 169, 176, 177, 195, 201, 206, 220, 222, 227, 231, 245, 246, 259, 260, 261, 263, 264, 265, 266, 272, 308, 312, 321, 322, 323, 325, 327, 329, 330, 336, 337, 340, 341, 343, 345, 346, 350, 355, 356, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 373, 406, 408, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 434], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 41, 52, 54, 59, 63, 73, 91, 138, 220, 408, 423, 434], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 58, 67, 68, 105, 124, 152, 153, 194, 197, 240, 242, 253, 254, 255, 256, 262, 268, 269, 270, 278, 279, 280, 281, 285, 286, 289, 290, 291, 301, 302, 303, 306, 310, 311, 320, 321, 322, 323, 328, 329, 330, 336, 337, 340, 341, 342, 343, 345, 346, 408, 411, 412, 416, 417, 419, 421, 423, 428, 429, 430, 434, 435], "helper": [0, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 415, 416, 418, 428, 430], "compos": [0, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 105, 106, 107, 116, 117, 124, 127, 131, 138, 150, 151, 157, 158, 176, 192, 205, 220, 221, 222, 229, 231, 304, 305, 323, 332, 343, 375, 408, 415, 416, 417, 418, 419, 423, 427, 429, 431, 432, 434, 435], "episod": [0, 3, 41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 172, 206, 209, 215, 238, 242, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 408, 416, 420, 425, 428, 429, 432], "format": [0, 3, 27, 35, 38, 44, 45, 46, 47, 50, 51, 56, 57, 61, 64, 65, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 108, 116, 124, 127, 131, 138, 150, 151, 152, 157, 158, 176, 180, 201, 216, 221, 222, 225, 227, 231, 309, 375, 408, 415, 416, 419, 420, 422, 424, 434, 435], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 124, 127, 131, 138, 144, 150, 151, 157, 158, 161, 162, 169, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 193, 194, 195, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 239, 240, 258, 282, 286, 297, 301, 302, 303, 306, 307, 308, 309, 310, 311, 313, 321, 323, 325, 328, 329, 341, 343, 345, 346, 353, 408, 430], "tree": [0, 1, 41, 52, 54, 59, 124, 127, 131, 138, 150, 151, 157, 158, 176, 408, 428, 432], "forest": [0, 41, 408], "human": [0, 24, 87, 408, 430], "feedback": [0, 408, 425, 434], "rlhf": [0, 60, 72, 92, 194, 408, 410], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 122, 123, 124, 127, 129, 130, 131, 132, 133, 136, 137, 138, 144, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 167, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 197, 199, 201, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 236, 238, 239, 240, 255, 258, 261, 265, 282, 284, 286, 297, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 408, 410, 411, 415, 416, 417, 418, 419, 420, 421, 425, 427, 428, 429, 434], "lock": [0, 31, 32, 39, 52, 54, 59, 63, 73, 124, 127, 131, 137, 138, 150, 151, 157, 158, 173, 216, 229, 408, 411, 430], "method": [0, 1, 2, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 105, 110, 111, 112, 113, 114, 116, 118, 124, 127, 130, 131, 132, 133, 137, 138, 150, 151, 154, 157, 158, 167, 172, 173, 176, 180, 182, 183, 186, 187, 189, 194, 197, 201, 203, 204, 205, 206, 210, 214, 216, 219, 221, 222, 223, 225, 227, 231, 232, 240, 242, 243, 244, 253, 258, 261, 265, 271, 272, 273, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 317, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 334, 336, 338, 340, 341, 342, 343, 345, 346, 353, 359, 373, 374, 403, 408, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 430, 432, 435], "vector": [0, 1, 8, 25, 50, 122, 123, 132, 136, 137, 141, 152, 153, 154, 161, 162, 184, 228, 248, 250, 259, 260, 263, 264, 266, 355, 358, 368, 369, 370, 371, 372, 408, 410, 411, 415, 416, 418, 427, 428, 429, 430, 431, 435], "custom": [0, 2, 5, 27, 38, 46, 56, 57, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 225, 231, 271, 272, 313, 319, 330, 340, 347, 406, 408, 410, 415, 416, 417, 418, 421, 422, 424, 428, 429], "nativ": [0, 1, 7, 9, 87, 124, 127, 131, 138, 150, 151, 157, 158, 176, 375, 408, 418, 432], "auto": [0, 98, 118, 127, 171, 172, 228, 282, 321, 323, 329, 339, 341, 343, 345, 346, 408, 411, 428, 429], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 111, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 171, 172, 173, 176, 186, 189, 193, 196, 201, 209, 214, 215, 216, 217, 220, 221, 222, 225, 228, 229, 231, 233, 239, 244, 259, 261, 265, 273, 282, 295, 305, 338, 374, 408, 411, 415, 416, 417, 418, 420, 423, 427, 428, 429, 434], "dynam": [0, 2, 7, 14, 15, 16, 86, 89, 91, 124, 127, 131, 138, 150, 151, 157, 158, 231, 233, 328, 336, 408, 417, 420, 430], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 170, 202, 231, 243, 244, 255, 258, 269, 270, 284, 301, 302, 303, 307, 308, 329, 343, 389, 408, 416, 418, 419, 435], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 41, 50, 60, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 169, 170, 173, 179, 180, 182, 183, 184, 185, 186, 187, 190, 192, 194, 196, 197, 199, 203, 204, 206, 210, 214, 216, 219, 221, 222, 223, 224, 228, 231, 232, 236, 238, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 261, 265, 266, 267, 268, 269, 270, 271, 280, 282, 283, 284, 286, 289, 290, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 402, 406, 408, 410, 412, 415, 416, 417, 419, 420, 421, 422, 427, 428, 429, 431, 434, 435], "record": [0, 2, 11, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 165, 169, 194, 231, 340, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 402, 408, 416, 417, 421, 425, 428], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 184, 192, 216, 223, 236, 297, 302, 303, 306, 307, 308, 309, 310, 311, 312, 317, 408, 417, 422, 428, 429, 430, 434, 435], "actor": [0, 3, 4, 21, 194, 232, 242, 247, 248, 250, 255, 256, 258, 268, 280, 282, 284, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 353, 408, 411, 416, 418, 420, 422, 425, 428, 431, 434], "explor": [0, 1, 230, 240, 243, 258, 275, 282, 297, 302, 303, 306, 307, 308, 309, 310, 320, 338, 387, 397, 398, 402, 408, 417, 418, 419, 420, 422, 423, 425, 428, 429, 430], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 103, 105, 110, 111, 116, 124, 127, 131, 138, 141, 150, 151, 157, 158, 168, 169, 172, 174, 176, 177, 179, 182, 183, 184, 185, 186, 192, 196, 197, 201, 202, 205, 206, 207, 209, 211, 213, 216, 217, 221, 222, 227, 229, 231, 236, 238, 239, 240, 241, 244, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 268, 269, 270, 271, 272, 274, 275, 278, 282, 283, 284, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 383, 385, 386, 387, 388, 389, 392, 402, 408, 412, 416, 419, 422, 423, 424, 427, 428, 429, 430, 432, 434, 435], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 56, 58, 60, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 107, 109, 124, 127, 128, 131, 138, 142, 143, 144, 147, 150, 151, 152, 153, 155, 156, 157, 158, 173, 180, 182, 183, 187, 194, 197, 203, 204, 209, 210, 214, 216, 219, 221, 223, 228, 231, 239, 243, 244, 253, 261, 265, 269, 270, 278, 297, 306, 310, 314, 315, 334, 341, 348, 355, 360, 368, 378, 392, 408, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "hook": [0, 2, 27, 35, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 119, 124, 127, 131, 138, 150, 151, 157, 158, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 284, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 408], "planner": [0, 242, 268, 408], "torch": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 105, 106, 109, 110, 111, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 174, 175, 177, 180, 182, 183, 184, 185, 186, 187, 192, 194, 195, 197, 199, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 225, 227, 229, 231, 232, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 318, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 383, 390, 391, 402, 408, 410, 412, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 434, 435], "vmap": [0, 259, 260, 263, 264, 273, 293, 309, 312, 338, 408, 410], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 60, 62, 63, 71, 74, 75, 76, 77, 78, 89, 91, 104, 116, 124, 127, 131, 138, 144, 150, 151, 157, 158, 169, 184, 196, 197, 216, 222, 232, 233, 244, 258, 259, 261, 263, 265, 306, 309, 310, 317, 321, 338, 341, 387, 396, 408, 410, 415, 416, 417, 419, 420, 421, 423, 430, 431, 432, 434, 435], "sac": [0, 329, 341, 343, 408], "redq": [0, 341, 408], "crossq": [0, 323, 408], "iql": [0, 328, 336, 408, 415, 428, 429], "cql": [0, 321, 327, 408], "gail": [0, 334, 408], "dt": [0, 151, 282, 408, 430], "td3": [0, 345, 346, 408], "bc": [0, 5, 345, 408], "a2c": [0, 320, 408], "dreamer": [0, 165, 166, 256, 331, 332, 333, 408, 410], "checkpoint": [0, 58, 94, 96, 100, 112, 113, 115, 119, 408, 432], "builder": [0, 408, 416, 435], "logger": [0, 3, 11, 373, 375, 377, 378, 379, 380, 381, 382, 386, 392, 402, 406, 408, 416, 428], "_util": [0, 3, 12, 150, 408, 419, 425], "implement_for": [0, 3, 408], "thing": [0, 3, 7, 8, 124, 127, 131, 138, 150, 151, 157, 158, 271, 272, 329, 343, 409, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 432, 435], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 96, 98, 110, 111, 118, 124, 127, 131, 138, 150, 151, 157, 158, 176, 184, 229, 231, 253, 271, 272, 289, 321, 323, 336, 341, 343, 345, 346, 355, 357, 358, 409, 411, 415, 420, 421, 422, 430, 432], "when": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 112, 114, 118, 124, 127, 128, 130, 131, 132, 137, 138, 141, 142, 143, 145, 147, 150, 151, 152, 153, 157, 158, 161, 162, 170, 172, 175, 176, 180, 182, 184, 185, 194, 195, 196, 197, 201, 202, 209, 216, 220, 221, 222, 225, 227, 228, 229, 231, 237, 238, 241, 242, 253, 255, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 281, 284, 290, 305, 306, 309, 310, 312, 316, 321, 322, 323, 325, 329, 330, 336, 337, 338, 340, 341, 343, 345, 346, 347, 353, 354, 355, 356, 357, 358, 373, 374, 375, 377, 380, 382, 389, 406, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 423, 424, 428, 429, 430, 431, 432, 434, 435], "debug": [0, 6, 8, 60, 83, 84, 85, 86, 87, 88, 89, 90, 91, 409, 435], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 46, 56, 57, 58, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 103, 108, 110, 111, 114, 121, 124, 127, 130, 131, 132, 135, 138, 150, 151, 154, 157, 158, 167, 176, 177, 194, 201, 220, 225, 228, 229, 231, 238, 245, 246, 266, 303, 308, 313, 322, 337, 340, 392, 409, 410, 415, 416, 417, 418, 420, 423, 427, 428, 429, 430, 431, 432, 434, 435], "habitat": [0, 3, 133, 409, 431], "lab": [0, 3, 125, 126, 133, 409], "mujoco": [0, 6, 8, 154, 409, 415, 417, 418], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 73, 96, 124, 127, 131, 138, 150, 151, 157, 158, 159, 163, 202, 220, 231, 233, 338, 409, 411, 415, 417, 428, 429, 435], "solut": [0, 2, 3, 6, 7, 9, 21, 110, 409, 410, 412, 419, 434], "resourc": [0, 1, 21, 133, 409, 415, 417, 419, 428, 429], "issu": [0, 2, 3, 4, 5, 8, 83, 87, 94, 96, 98, 110, 118, 124, 127, 130, 131, 135, 138, 150, 151, 157, 158, 176, 202, 217, 238, 297, 302, 303, 306, 307, 308, 309, 310, 409, 434], "customis": [0, 409, 416, 424], "video": [0, 4, 9, 375, 377, 380, 382, 387, 406, 408, 409, 425, 428, 429], "render": [0, 3, 8, 137, 161, 373, 375, 387, 409, 415, 416, 417, 419, 420, 424], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 102, 103, 105, 106, 108, 110, 114, 116, 117, 118, 120, 121, 124, 127, 131, 138, 142, 143, 148, 149, 150, 151, 157, 158, 161, 162, 171, 176, 180, 184, 222, 238, 269, 270, 408, 420, 427, 428, 429, 432, 434], "search": [0, 2, 31, 32, 39, 63, 73, 147, 239, 416], "page": [0, 7, 24, 382, 422], "somewhat": [1, 2, 411, 421, 435], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 122, 123, 124, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 173, 183, 186, 222, 231, 255, 263, 266, 284, 302, 303, 307, 308, 340, 389, 423, 434, 435], "dataload": [1, 92, 109, 111, 416, 423, 432], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 124, 127, 131, 138, 150, 151, 157, 158, 176, 188, 206, 215, 216, 217, 220, 222, 231, 240, 258, 259, 261, 263, 265, 278, 282, 320, 323, 338, 340, 343, 375, 410, 415, 416, 420, 428, 432, 434, 435], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 103, 105, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 190, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 229, 231, 232, 236, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 278, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 369, 370, 372, 373, 375, 383, 387, 389, 390, 402, 406, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 124, 127, 130, 131, 132, 138, 141, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 172, 175, 188, 194, 201, 210, 221, 222, 227, 231, 265, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 389, 392, 410, 411, 412, 415, 416, 417, 418, 419, 422, 427, 428, 429, 430, 431, 432, 434, 435], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 89, 103, 105, 109, 110, 111, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 169, 184, 197, 209, 217, 231, 238, 278, 281, 290, 293, 312, 330, 332, 338, 361, 373, 395, 410, 412, 415, 416, 417, 419, 420, 421, 422, 423, 428, 429, 430, 435], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 46, 48, 49, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 89, 97, 99, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 173, 174, 176, 180, 189, 201, 213, 216, 221, 222, 223, 224, 225, 227, 231, 238, 244, 259, 261, 263, 265, 271, 309, 310, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 410, 415, 418, 419, 428, 429, 430, 432, 435], "static": [1, 12, 56, 60, 66, 72, 103, 110, 111, 133, 151, 229, 336, 420, 430, 432], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 41, 46, 48, 53, 56, 57, 58, 61, 63, 66, 67, 68, 72, 99, 105, 111, 124, 127, 128, 131, 133, 138, 141, 150, 151, 152, 153, 157, 158, 176, 186, 216, 218, 231, 233, 259, 263, 272, 304, 310, 320, 322, 337, 340, 341, 342, 410, 411, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 62, 66, 92, 97, 116, 119, 124, 127, 130, 131, 132, 133, 137, 138, 150, 151, 154, 157, 158, 175, 182, 184, 185, 192, 196, 204, 216, 220, 222, 231, 237, 258, 261, 265, 282, 322, 323, 337, 338, 340, 343, 375, 389, 394, 404, 405, 406, 410, 411, 415, 416, 417, 418, 423, 428, 429, 430, 432], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 74, 86, 87, 90, 91, 92, 124, 127, 131, 138, 144, 150, 151, 157, 158, 171, 176, 180, 189, 192, 201, 209, 213, 216, 220, 221, 222, 223, 224, 225, 227, 231, 266, 293, 309, 310, 311, 323, 343, 375, 412, 417, 419, 420, 424, 432, 434, 435], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 89, 105, 109, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 173, 197, 201, 220, 227, 231, 251, 259, 261, 263, 265, 271, 272, 287, 290, 310, 337, 345, 349, 387, 392, 411, 415, 416, 417, 418, 419, 420, 421, 423, 424, 427, 428, 429, 430, 432, 434, 435], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 91, 128, 176, 310, 392, 410, 411, 415, 416, 427, 434, 435], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 102, 103, 105, 108, 109, 110, 111, 114, 116, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 145, 146, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 172, 173, 176, 177, 179, 180, 183, 192, 201, 209, 210, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 231, 238, 240, 241, 244, 245, 246, 258, 259, 261, 263, 265, 266, 269, 270, 271, 272, 274, 282, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 348, 353, 355, 356, 357, 358, 359, 363, 373, 374, 375, 380, 382, 385, 392, 395, 402, 403, 406, 415, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 432, 434, 435], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 105, 108, 109, 110, 111, 112, 114, 124, 125, 126, 127, 130, 131, 132, 133, 138, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 174, 175, 179, 182, 183, 185, 192, 194, 195, 197, 199, 201, 209, 211, 218, 219, 220, 222, 224, 225, 227, 229, 231, 238, 244, 245, 246, 248, 254, 257, 261, 265, 266, 269, 270, 276, 284, 303, 305, 307, 308, 310, 312, 313, 314, 321, 323, 336, 338, 341, 343, 345, 346, 352, 355, 358, 373, 374, 387, 389, 404, 405, 411, 415, 417, 420, 421, 422, 423, 427, 428, 430, 431, 432, 434, 435], "constructor": [1, 2, 3, 16, 18, 19, 20, 21, 58, 72, 89, 102, 116, 124, 127, 131, 138, 145, 150, 151, 157, 158, 161, 172, 176, 220, 221, 245, 246, 266, 296, 306, 310, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 403, 406, 410, 415, 416, 417, 420, 423, 428, 429, 432, 434], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 99, 105, 109, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 187, 197, 210, 231, 241, 243, 244, 245, 246, 266, 271, 272, 288, 297, 302, 306, 307, 309, 311, 312, 314, 338, 352, 387, 391, 392, 411, 412, 415, 417, 418, 423, 425, 428, 429, 430], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 105, 110, 111, 122, 123, 124, 127, 128, 131, 132, 133, 135, 136, 137, 138, 144, 145, 150, 151, 154, 157, 158, 159, 170, 222, 231, 258, 259, 261, 263, 265, 273, 296, 305, 311, 312, 338, 345, 396, 406, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 432, 433, 434, 435], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 60, 73, 83, 93, 94, 101, 103, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 170, 175, 189, 193, 197, 214, 215, 216, 217, 220, 222, 228, 231, 238, 239, 240, 241, 242, 256, 258, 259, 261, 263, 265, 267, 268, 281, 282, 305, 306, 310, 320, 331, 340, 354, 355, 356, 357, 358, 361, 362, 363, 374, 377, 383, 387, 392, 412, 416, 418, 419, 421, 422, 424, 425, 427, 430, 431, 434], "queri": [1, 2, 3, 14, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 97, 124, 127, 131, 138, 150, 151, 157, 158, 201, 221, 225, 229, 231, 312, 411, 415, 422, 430, 434], "defin": [1, 2, 3, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 124, 127, 131, 138, 150, 151, 157, 158, 202, 215, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 273, 276, 277, 280, 281, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 317, 325, 327, 338, 355, 356, 357, 358, 359, 374, 403, 410, 415, 416, 418, 422, 425, 430, 432, 435], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 105, 108, 110, 111, 118, 122, 123, 124, 127, 130, 131, 132, 136, 137, 138, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 161, 162, 169, 175, 176, 184, 190, 196, 197, 208, 214, 217, 220, 222, 229, 231, 240, 241, 242, 245, 246, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 276, 277, 282, 283, 285, 286, 289, 290, 291, 292, 297, 301, 305, 306, 309, 310, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 380, 382, 383, 385, 387, 392, 394, 395, 396, 404, 405, 406, 410, 411, 415, 416, 417, 418, 420, 421, 423, 425, 428, 429, 430, 431, 432, 435], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 38, 41, 42, 43, 46, 56, 57, 61, 66, 72, 73, 88, 109, 111, 116, 124, 127, 131, 132, 138, 150, 151, 157, 158, 169, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 233, 243, 259, 261, 265, 266, 274, 275, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 356, 357, 358, 389, 415, 417, 418, 419, 423, 424, 428, 429, 430, 432, 435], "deliv": [1, 2, 3, 16, 89, 415, 416, 420, 423, 434], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 102, 105, 124, 127, 130, 131, 132, 138, 141, 150, 151, 152, 153, 157, 158, 176, 229, 259, 261, 263, 264, 265, 305, 311, 312, 321, 323, 336, 341, 343, 345, 346, 374, 383, 408, 416, 419, 420, 427, 428, 430, 434], "user": [1, 2, 3, 5, 8, 23, 27, 38, 46, 56, 57, 61, 66, 83, 85, 89, 91, 103, 111, 124, 127, 131, 138, 150, 151, 157, 158, 159, 177, 192, 215, 220, 222, 231, 233, 252, 323, 340, 343, 345, 375, 403, 411, 412, 415, 416, 420, 422, 423, 430, 434, 435], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 60, 109, 124, 127, 131, 137, 138, 142, 143, 150, 151, 157, 158, 161, 162, 214, 240, 258, 282, 415, 417, 425, 428, 429, 434, 435], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 63, 64, 66, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 103, 105, 110, 111, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 176, 182, 183, 185, 186, 187, 192, 196, 197, 199, 203, 204, 206, 208, 210, 213, 214, 216, 217, 220, 221, 222, 223, 229, 231, 238, 239, 242, 259, 261, 265, 268, 290, 305, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 410, 411, 415, 417, 418, 419, 420, 422, 423, 425, 427, 428, 429, 430, 432, 434, 435], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 41, 46, 53, 56, 57, 58, 60, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 105, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 172, 175, 176, 177, 179, 180, 183, 186, 192, 197, 204, 214, 215, 219, 220, 221, 222, 223, 224, 229, 231, 233, 238, 239, 242, 247, 252, 256, 259, 260, 261, 263, 264, 265, 266, 268, 273, 276, 280, 283, 285, 286, 292, 298, 305, 309, 315, 320, 322, 323, 327, 329, 337, 338, 340, 341, 342, 343, 353, 354, 355, 356, 357, 358, 359, 392, 406, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 430, 435], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 73, 83, 98, 105, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 238, 240, 241, 258, 259, 261, 265, 274, 302, 307, 323, 332, 343, 345, 416, 417, 418, 419, 420, 421, 423, 425, 428, 429, 430, 431, 432, 435], "predefin": [1, 375, 416, 418, 423, 432, 434], "becaus": [1, 2, 3, 4, 7, 52, 54, 59, 60, 73, 83, 97, 124, 127, 131, 138, 150, 151, 157, 158, 186, 194, 214, 221, 228, 231, 251, 272, 297, 302, 303, 305, 306, 307, 308, 309, 310, 320, 340, 410, 415, 416, 418, 419, 421, 422, 423, 427, 428, 429, 430, 432, 435], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 430, 432], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 46, 56, 57, 60, 61, 66, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 197, 211, 222, 226, 231, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 276, 277, 278, 280, 282, 285, 286, 288, 290, 291, 293, 298, 301, 303, 305, 306, 308, 310, 313, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 396, 411, 415, 417, 418, 419, 420, 421, 427, 428, 429, 431, 432], "heavi": [1, 8, 83, 432], "crucial": [1, 2, 3, 240, 258, 282, 328, 336, 338, 415, 416, 417, 418, 420, 422, 424, 428, 429, 430, 434, 435], "configur": [1, 8, 21, 22, 60, 124, 194, 247, 252, 280, 338, 340, 410, 415, 416, 417, 422, 428, 429, 430], "hyperparamet": [1, 108, 231, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 415, 424, 430, 432], "appropri": [1, 3, 4, 7, 95, 106, 116, 117, 120, 121, 138, 150, 157, 186, 403, 406, 415, 424, 432], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 112, 114, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 410, 411, 415, 418, 419, 421, 425, 428, 429, 430, 431, 434], "take": [1, 2, 3, 8, 23, 27, 38, 41, 56, 57, 60, 61, 66, 86, 113, 119, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 179, 214, 217, 221, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 304, 305, 306, 308, 310, 313, 316, 319, 340, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 383, 394, 410, 412, 415, 416, 417, 419, 420, 421, 422, 428, 429, 430, 432, 435], "consider": [1, 2, 3, 8, 130, 132, 416, 428, 429, 432], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 105, 106, 118, 124, 127, 131, 137, 138, 142, 143, 144, 150, 151, 152, 153, 157, 158, 161, 162, 172, 182, 185, 215, 220, 222, 229, 231, 239, 245, 246, 261, 265, 266, 310, 314, 320, 321, 322, 323, 324, 325, 327, 329, 330, 334, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 358, 406, 415, 416, 417, 419, 420, 428, 429, 430, 434, 435], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 103, 105, 110, 111, 112, 116, 119, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 141, 144, 150, 151, 152, 153, 157, 158, 161, 162, 169, 172, 173, 176, 179, 180, 182, 183, 186, 187, 189, 192, 194, 195, 197, 202, 203, 204, 206, 209, 210, 214, 215, 217, 219, 221, 222, 223, 228, 229, 231, 233, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 306, 308, 309, 310, 313, 316, 320, 322, 323, 329, 335, 337, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 375, 377, 387, 388, 389, 392, 402, 404, 405, 406, 410, 411, 412, 415, 416, 417, 418, 419, 421, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "occur": [1, 8, 15, 56, 62, 63, 66, 73, 83, 124, 127, 131, 133, 138, 150, 151, 157, 158, 177, 187, 197, 202, 228, 239, 241, 297, 302, 303, 306, 307, 308, 309, 310, 332, 419, 432, 435], "serial": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 150, 151, 157, 158, 220, 229, 231], "parallel": [1, 3, 8, 124, 127, 130, 131, 132, 138, 150, 151, 152, 153, 157, 158, 222, 228, 233, 261, 265, 320, 403, 404, 405, 406, 416, 417, 428, 429, 434], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 46, 64, 173, 176, 206, 243, 261, 265, 402, 405, 408, 415, 416, 417, 418, 419, 423, 425, 428, 429, 432], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 137, 138, 141, 144, 147, 150, 151, 152, 153, 154, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 404, 405, 406, 410, 411, 412, 415, 416, 417, 418, 420, 421, 422, 423, 424, 428, 429, 432, 435], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 52, 54, 59, 71, 72, 73, 86, 91, 92, 128, 145, 150, 157, 220, 229, 404, 405, 406, 415, 416, 417, 434, 435], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 243, 405, 408, 417, 423, 434], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 37, 39, 52, 54, 63, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 103, 110, 111, 141, 152, 153, 259, 263, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 410, 412, 417, 421, 432, 434], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 57, 58, 61, 67, 68, 103, 110, 111, 122, 123, 125, 126, 130, 132, 133, 135, 136, 137, 145, 146, 150, 154, 158, 220, 229, 231, 261, 265, 271, 281, 282, 338, 394, 408, 410, 411, 415, 420, 424, 428, 429, 430], "aggreg": [1, 3, 27, 56, 83, 103, 116, 152, 153, 195, 239, 245, 246, 248, 249, 312, 411, 429], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 109, 110, 111, 124, 127, 128, 131, 138, 150, 151, 157, 158, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 238, 239, 240, 243, 258, 259, 261, 263, 265, 266, 271, 284, 290, 301, 303, 308, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 394, 411, 416, 418, 420, 421, 424, 425, 430, 431, 434, 435], "final": [1, 2, 3, 4, 21, 41, 52, 54, 59, 60, 73, 216, 228, 240, 258, 259, 261, 263, 265, 271, 282, 304, 311, 355, 387, 410, 415, 416, 417, 419, 424, 425, 428, 429, 430, 435], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 243, 404, 408, 415, 416, 417, 423, 434], "sever": [1, 2, 3, 8, 27, 38, 42, 46, 56, 57, 61, 66, 72, 86, 124, 127, 131, 138, 150, 151, 157, 158, 177, 179, 195, 222, 231, 340, 415, 417, 419, 424, 425, 432, 435], "gather": [1, 3, 18, 20, 21, 41, 72, 92, 96, 98, 103, 110, 118, 202, 270, 273, 278, 338, 354, 396, 409, 416, 417, 418, 423, 428, 429, 430, 432, 434, 435], "continu": [1, 2, 3, 9, 28, 31, 41, 74, 75, 76, 111, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 161, 162, 169, 192, 216, 223, 236, 248, 249, 250, 251, 281, 282, 312, 317, 321, 344, 355, 360, 368, 410, 415, 417, 421, 428, 429, 432], "concomitantli": [1, 124, 127, 131, 138, 150, 151, 157, 158], "network": [1, 4, 8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 231, 245, 246, 248, 249, 250, 251, 254, 256, 257, 263, 266, 271, 272, 273, 275, 276, 277, 279, 281, 283, 285, 286, 287, 292, 298, 299, 300, 301, 309, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 351, 353, 355, 356, 357, 358, 359, 401, 402, 410, 411, 412, 419, 422, 425, 427, 430, 435], "impli": [1, 73, 435], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 60, 61, 66, 103, 105, 108, 122, 123, 124, 127, 131, 138, 150, 151, 155, 156, 157, 158, 180, 192, 195, 201, 216, 220, 221, 222, 225, 227, 231, 259, 260, 261, 263, 264, 265, 271, 273, 275, 309, 320, 321, 322, 323, 329, 332, 343, 345, 394, 401, 410, 412, 415, 416, 417, 427, 430, 432, 434], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 85, 91, 94, 97, 103, 110, 124, 127, 130, 131, 132, 133, 138, 150, 151, 154, 157, 158, 194, 197, 210, 220, 222, 224, 229, 231, 233, 241, 261, 265, 266, 271, 310, 322, 329, 337, 340, 343, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 430, 431, 432, 435], "slightli": [1, 23, 83, 411, 418, 419, 428, 430, 431, 432, 435], "lag": [1, 415, 416, 417], "therefor": [1, 2, 3, 7, 53, 58, 67, 68, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 206, 340, 353, 419, 422, 428, 435], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 176], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 41, 47, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 98, 103, 105, 110, 111, 116, 118, 119, 124, 127, 131, 138, 141, 144, 147, 150, 151, 152, 153, 157, 158, 167, 169, 170, 173, 176, 186, 194, 201, 206, 209, 214, 215, 216, 217, 221, 222, 224, 227, 228, 238, 239, 240, 258, 259, 260, 261, 263, 264, 265, 269, 270, 271, 279, 281, 282, 301, 306, 309, 310, 319, 320, 321, 322, 323, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 411, 412, 415, 416, 417, 419, 420, 427, 428, 429, 430, 432, 435], "asynchron": [1, 9, 15, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309, 320, 404, 415, 416, 417], "off": [1, 2, 4, 262, 291, 302, 343, 373, 387, 397, 410, 412, 415, 416, 417, 421, 422, 428, 429, 431, 434, 435], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 103, 105, 110, 118, 124, 127, 130, 131, 132, 137, 138, 150, 151, 152, 153, 157, 158, 159, 161, 176, 182, 185, 189, 197, 215, 222, 228, 231, 233, 255, 259, 261, 263, 265, 272, 274, 298, 300, 301, 303, 307, 320, 328, 330, 336, 340, 387, 410, 411, 412, 415, 416, 417, 418, 420, 421, 423, 424, 428, 429, 430, 431, 432, 435], "remot": [1, 2, 18, 19, 20, 21, 150, 157, 435], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 41, 60, 66, 73, 116, 122, 123, 124, 127, 131, 133, 134, 136, 137, 138, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 169, 170, 172, 173, 176, 179, 182, 185, 186, 187, 192, 194, 195, 199, 203, 204, 209, 210, 211, 214, 215, 217, 220, 223, 229, 231, 233, 242, 243, 244, 261, 265, 268, 282, 305, 320, 373, 375, 396, 410, 415, 417, 418, 421, 422, 423, 424, 425, 431, 432, 434], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 210, 341, 355, 356, 357, 358, 359, 411, 415, 417, 421, 422, 423], "synchronis": [1, 128, 428, 429], "either": [1, 2, 5, 22, 25, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 105, 124, 127, 131, 138, 150, 151, 157, 158, 214, 215, 231, 315, 338, 345, 346, 379, 412, 415, 416, 418, 428, 431, 432, 434, 435], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 415, 429, 434], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 103, 105, 106, 108, 109, 110, 111, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 175, 176, 177, 180, 184, 187, 189, 192, 193, 194, 195, 196, 197, 201, 202, 204, 205, 208, 209, 210, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 233, 236, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 289, 290, 291, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 382, 385, 386, 387, 389, 392, 406, 410, 411, 412, 415, 416, 417, 418, 419, 421, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "second": [1, 2, 3, 8, 23, 41, 42, 43, 44, 45, 83, 86, 116, 150, 173, 192, 259, 261, 263, 265, 303, 322, 337, 340, 343, 375, 377, 380, 382, 391, 415, 417, 423, 428, 429, 430, 432, 434, 435], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 110, 111, 118, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 169, 173, 180, 182, 183, 185, 186, 187, 192, 194, 195, 199, 200, 201, 203, 204, 206, 210, 213, 214, 216, 218, 221, 222, 223, 225, 227, 229, 231, 236, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 274, 275, 280, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 389, 394, 400, 410, 415, 416, 417, 418, 419, 428, 429, 430, 431, 434], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 97, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 173, 189, 194, 219, 221, 223, 231, 254, 255, 260, 264, 298, 299, 300, 302, 303, 304, 309, 315, 320, 322, 324, 325, 330, 337, 340, 342, 353, 354, 355, 356, 357, 358, 392, 408, 411, 412, 415, 416, 417, 418, 419, 420, 421, 427, 428, 429, 430, 435], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 101, 103, 105, 110, 111, 118, 124, 126, 127, 128, 130, 131, 132, 138, 144, 150, 151, 157, 158, 197, 216, 221, 222, 229, 231, 233, 236, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 316, 321, 323, 325, 328, 329, 336, 338, 341, 343, 345, 346, 353, 355, 356, 357, 358, 373, 375, 379, 387, 396, 397, 398, 402, 404, 405, 410, 411, 412, 415, 417, 418, 419, 420, 421, 430, 432, 435], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 110, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 169, 173, 180, 182, 183, 185, 186, 187, 192, 195, 199, 201, 203, 204, 206, 210, 213, 214, 216, 221, 222, 223, 225, 227, 231, 236, 238, 242, 244, 254, 259, 260, 261, 263, 264, 265, 268, 274, 275, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 373, 410, 415, 416, 417, 418, 428, 429, 430, 431, 434], "slower": [1, 428], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 56, 73, 83, 85, 89, 103, 110, 111, 114, 116, 124, 127, 131, 135, 138, 148, 149, 150, 151, 154, 157, 158, 195, 204, 240, 251, 261, 263, 265, 266, 293, 297, 302, 309, 310, 314, 338, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 409, 410, 411, 415, 416, 417, 419, 420, 422, 428, 429, 430, 432, 434, 435], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 105, 106, 110, 111, 112, 114, 116, 117, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 170, 173, 176, 179, 182, 183, 184, 185, 192, 195, 196, 197, 201, 206, 209, 212, 213, 215, 216, 217, 221, 222, 224, 227, 229, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 272, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 288, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 316, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 350, 353, 355, 356, 357, 358, 362, 363, 375, 377, 385, 387, 388, 392, 396, 406, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 435], "cuda": [1, 2, 3, 7, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 122, 123, 124, 127, 131, 133, 134, 135, 138, 150, 151, 157, 158, 180, 194, 200, 201, 216, 221, 222, 225, 227, 231, 259, 260, 263, 264, 309, 384, 415, 416, 417, 418, 428, 429, 431, 435], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 56, 58, 67, 68, 69, 73, 98, 105, 106, 118, 122, 123, 136, 137, 150, 157, 158, 177, 179, 184, 193, 196, 206, 209, 213, 214, 220, 221, 229, 259, 263, 265, 271, 274, 275, 297, 302, 306, 307, 309, 310, 313, 322, 329, 337, 340, 350, 361, 406, 410, 411, 412, 415, 416, 417, 420, 422, 423, 428, 429, 430, 432, 434], "infer": [1, 3, 124, 127, 131, 138, 150, 151, 157, 158, 176, 229, 261, 265, 274, 301, 306, 310, 327, 373, 415, 417, 419, 423, 425, 432, 434], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 83, 86, 103, 110, 111, 122, 123, 124, 125, 126, 127, 130, 131, 136, 137, 138, 144, 145, 146, 150, 151, 157, 158, 192, 196, 197, 213, 220, 222, 229, 231, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 310, 311, 312, 313, 316, 323, 329, 343, 375, 382, 387, 404, 405, 406, 409, 410, 411, 412, 415, 416, 417, 418, 421, 422, 423, 424, 425, 428, 429, 430, 434], "dispatch": [1, 18, 19, 20, 21, 56, 66, 293, 305, 375, 415, 435], "avail": [1, 2, 3, 4, 6, 21, 53, 58, 67, 68, 83, 86, 91, 103, 109, 110, 111, 122, 123, 125, 126, 135, 136, 137, 142, 143, 148, 149, 150, 152, 153, 154, 159, 160, 161, 162, 169, 172, 175, 194, 255, 284, 306, 310, 338, 375, 404, 405, 415, 416, 417, 418, 419, 420, 421, 428, 429, 430, 432, 435], "speed": [1, 2, 4, 8, 30, 124, 127, 131, 138, 150, 151, 157, 158, 411, 415, 416, 417, 418, 428, 429, 430, 432, 434], "avoid": [1, 2, 3, 27, 38, 46, 56, 57, 61, 66, 96, 98, 110, 118, 124, 127, 131, 138, 150, 151, 157, 158, 168, 176, 192, 220, 222, 229, 231, 241, 290, 297, 309, 314, 322, 323, 337, 340, 343, 395, 417, 419, 429], "oom": [1, 3, 52, 54, 59, 73, 96, 98, 118], "choic": [1, 2, 85, 91, 150, 410, 411, 415, 416, 422, 428, 429], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 60, 61, 63, 66, 67, 68, 71, 72, 83, 86, 87, 89, 90, 91, 94, 96, 98, 103, 105, 110, 111, 116, 118, 124, 127, 128, 129, 131, 132, 138, 141, 145, 150, 151, 152, 153, 157, 158, 161, 172, 173, 176, 182, 185, 192, 195, 204, 220, 221, 224, 229, 231, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 274, 276, 277, 280, 282, 283, 285, 286, 288, 292, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 321, 322, 323, 336, 337, 338, 340, 341, 343, 345, 346, 355, 356, 357, 358, 359, 373, 389, 392, 404, 405, 406, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 432, 434, 435], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 62, 63, 66, 67, 71, 72, 74, 75, 76, 77, 78, 89, 102, 111, 124, 127, 131, 135, 138, 147, 150, 151, 157, 158, 169, 176, 189, 213, 224, 229, 239, 261, 265, 301, 410, 411, 416, 429], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 41, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 102, 103, 105, 110, 116, 118, 124, 127, 131, 138, 150, 151, 157, 158, 176, 228, 229, 231, 240, 242, 243, 268, 282, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 382, 408, 412, 415, 417, 418, 421, 423, 425, 428, 429, 431, 435], "while": [1, 2, 3, 7, 8, 23, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 206, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 328, 336, 337, 340, 410, 411, 415, 417, 418, 421, 423, 424, 428, 429, 430, 431, 432, 434], "wait": [1, 20, 21, 22, 159, 418, 430], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 66, 67, 71, 73, 83, 86, 87, 89, 90, 91, 92, 96, 97, 98, 103, 105, 110, 111, 116, 118, 124, 127, 131, 137, 138, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 167, 168, 172, 173, 175, 176, 184, 192, 197, 204, 206, 209, 210, 214, 216, 220, 222, 223, 231, 238, 245, 246, 259, 263, 266, 286, 305, 306, 311, 312, 313, 320, 321, 323, 324, 325, 327, 328, 329, 334, 336, 340, 343, 345, 355, 362, 363, 373, 375, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 432, 434, 435], "impact": [1, 2, 3, 89, 137, 182, 185, 241, 320, 322, 337, 340, 342, 416, 418, 428, 429], "memori": [1, 3, 8, 21, 27, 30, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 94, 96, 97, 101, 124, 127, 128, 131, 135, 138, 150, 151, 157, 158, 176, 180, 201, 216, 221, 222, 225, 227, 229, 231, 253, 263, 264, 309, 406, 408, 412, 415, 416, 418, 428, 432, 434], "manag": [1, 8, 124, 127, 131, 138, 150, 151, 157, 158, 243, 261, 265, 296, 351, 352, 355, 356, 357, 358, 387, 410, 418, 419, 422, 434], "kei": [1, 2, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 93, 102, 103, 105, 108, 110, 111, 116, 124, 127, 131, 136, 137, 138, 150, 151, 152, 153, 157, 158, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 206, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 238, 239, 240, 242, 244, 254, 255, 258, 261, 265, 267, 268, 282, 284, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 373, 375, 386, 387, 388, 390, 391, 392, 396, 411, 412, 415, 417, 418, 419, 420, 422, 427, 428, 429, 430, 432, 434, 435], "control": [1, 3, 5, 8, 16, 23, 24, 31, 32, 33, 39, 58, 63, 67, 68, 103, 105, 110, 124, 125, 126, 127, 131, 137, 138, 141, 150, 151, 152, 153, 157, 158, 184, 238, 248, 249, 250, 251, 261, 265, 267, 268, 282, 286, 293, 309, 310, 311, 320, 322, 323, 337, 338, 340, 344, 355, 360, 368, 373, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 432, 434], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 105, 108, 109, 116, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 142, 143, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 176, 177, 182, 185, 190, 192, 194, 195, 196, 197, 201, 202, 204, 214, 216, 217, 219, 221, 222, 223, 225, 229, 231, 233, 254, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 279, 281, 291, 298, 299, 300, 301, 305, 306, 309, 310, 311, 312, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 373, 375, 383, 388, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 435], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 416, 429], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 53, 54, 57, 58, 60, 61, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99, 103, 105, 108, 110, 124, 127, 128, 131, 137, 138, 150, 151, 152, 153, 157, 158, 172, 173, 176, 179, 182, 185, 187, 190, 192, 199, 211, 213, 216, 219, 220, 222, 223, 224, 229, 231, 241, 243, 244, 261, 265, 272, 355, 357, 358, 387, 392, 411, 415, 416, 417, 418, 421, 422, 423, 425, 428, 429, 430, 432, 435], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 240, 305, 310, 415, 419, 423, 435], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 85, 108, 116, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 220, 275, 340, 345, 354, 355, 356, 357, 358, 359, 374, 409, 410, 411, 412, 415, 416, 417, 418, 421, 423, 424, 429, 432, 435], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 85, 89, 109, 110, 111, 114, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 145, 146, 150, 151, 152, 153, 154, 157, 158, 169, 176, 182, 184, 185, 190, 192, 195, 196, 197, 213, 220, 221, 222, 229, 231, 245, 246, 260, 261, 264, 265, 266, 269, 270, 271, 272, 282, 290, 301, 313, 321, 323, 336, 338, 341, 343, 345, 346, 350, 411, 415, 416, 417, 420, 421, 423, 427, 428, 429, 431, 432, 435], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 102, 103, 105, 106, 108, 109, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 189, 192, 194, 195, 196, 197, 199, 201, 202, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 284, 285, 286, 288, 289, 290, 291, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 402, 406, 411, 412, 415, 416, 417, 418, 421, 428, 431, 432, 434, 435], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 89, 124, 127, 131, 138, 150, 151, 157, 158, 177, 182, 185, 197, 202, 215, 222, 231, 238, 241, 261, 262, 265, 291, 328, 336, 345, 373, 387, 410, 416, 418, 428, 429, 430, 432], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 176, 182, 185, 192, 197, 216, 217, 219, 223, 265, 281, 306, 310, 311, 312, 394, 404, 405, 410, 415, 416, 420, 421, 429, 430, 435], "choos": [1, 11, 124, 141, 261, 265, 340, 408, 411, 415, 416, 417, 419, 428, 429, 432, 434], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 86, 87, 88, 89, 90, 91, 103, 110, 111, 122, 123, 124, 127, 130, 131, 132, 136, 137, 138, 144, 147, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 167, 172, 176, 194, 201, 225, 229, 231, 245, 246, 259, 261, 263, 265, 266, 303, 306, 307, 308, 319, 320, 321, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 375, 392, 410, 411, 412, 415, 416, 417, 418, 419, 422, 423, 427, 428, 429, 430, 432, 434, 435], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 395, 415, 417, 434], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 46, 83, 176, 190, 231, 240, 258, 282, 305, 374, 375, 377, 380, 382, 385, 387, 392, 395, 396, 415, 416, 417, 418, 421, 428, 429, 432, 434, 435], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 103, 104, 105, 109, 110, 112, 114, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 172, 173, 176, 179, 180, 184, 187, 189, 192, 193, 194, 197, 199, 200, 201, 209, 211, 213, 216, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 233, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 272, 273, 274, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 309, 310, 312, 313, 316, 322, 323, 337, 338, 340, 343, 345, 354, 355, 356, 357, 358, 373, 374, 377, 387, 411, 412, 416, 417, 418, 419, 420, 421, 423, 424, 428, 429, 430, 432, 434, 435], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 173, 176, 206, 261, 265, 395, 415, 416, 417, 418, 419, 423, 425, 428, 429, 432, 434], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 37, 38, 39, 41, 42, 44, 46, 47, 56, 57, 58, 60, 61, 63, 65, 66, 67, 73, 83, 85, 86, 89, 103, 105, 108, 110, 111, 113, 116, 124, 127, 128, 131, 138, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 169, 193, 195, 201, 206, 209, 214, 215, 216, 217, 220, 227, 229, 231, 240, 255, 258, 259, 260, 261, 263, 265, 271, 272, 276, 283, 284, 292, 296, 302, 303, 308, 310, 312, 361, 364, 365, 366, 367, 369, 370, 371, 372, 375, 387, 389, 404, 405, 411, 415, 416, 417, 418, 421, 422, 423, 425, 428, 429, 430, 431, 432, 434, 435], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 395, 415, 416, 419, 425], "rand_step": [1, 2, 3, 35, 64, 124, 125, 126, 127, 128, 130, 131, 132, 138, 139, 140, 144, 145, 146, 150, 151, 157, 158, 193, 216, 229, 430, 434, 435], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 415], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 85, 87, 89, 90, 91, 415, 416, 417], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 46, 47, 65, 67, 73, 83, 85, 86, 87, 89, 90, 91, 102, 103, 110, 111, 116, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 176, 202, 214, 220, 221, 231, 242, 265, 268, 282, 340, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 383, 408, 411, 415, 416, 417, 418, 420, 423, 425, 430, 434, 435], "pad": [1, 2, 3, 23, 55, 69, 85, 87, 89, 90, 91, 176, 219, 245, 246, 248, 249, 265, 269, 270, 271, 389], "along": [1, 2, 3, 14, 15, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 98, 103, 105, 110, 111, 116, 118, 130, 132, 175, 176, 177, 197, 199, 202, 209, 213, 218, 265, 266, 269, 270, 275, 302, 306, 309, 310, 323, 338, 345, 415, 416, 418, 420, 422, 428, 429, 430, 432, 434], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 88, 95, 102, 103, 106, 116, 117, 120, 121, 124, 127, 128, 131, 138, 150, 151, 157, 158, 169, 172, 175, 176, 180, 201, 215, 216, 218, 220, 221, 222, 225, 227, 231, 267, 309, 319, 330, 392, 409, 416, 417, 427, 428, 429, 430, 432, 434, 435], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 103, 110, 111, 131, 172, 202, 214, 239, 269, 270, 282, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 412, 418], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 41, 63, 64, 66, 67, 73, 87, 97, 124, 125, 126, 127, 130, 131, 132, 138, 150, 151, 157, 158, 161, 162, 190, 202, 229, 231, 255, 269, 270, 284, 290, 302, 303, 307, 308, 349, 355, 389, 410, 415, 417, 418, 419, 420, 421, 422, 428, 429], "valid": [1, 2, 3, 23, 52, 54, 55, 72, 73, 92, 116, 124, 127, 131, 138, 150, 151, 157, 158, 163, 172, 202, 220, 222, 231, 240, 245, 246, 266, 269, 270, 282, 322, 329, 337, 340, 343, 355, 356, 357, 358, 389, 412, 419, 435], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 387, 408, 410, 415, 416], "strategi": [1, 2, 16, 89, 108, 141, 169, 258, 270, 278, 410, 412, 415, 416, 419, 421, 428, 429, 432, 434], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 80, 98, 105, 110, 111, 124, 127, 131, 137, 138, 144, 150, 151, 152, 153, 157, 158, 161, 163, 173, 175, 176, 186, 192, 194, 214, 215, 216, 220, 221, 222, 228, 229, 231, 240, 245, 246, 261, 265, 269, 270, 271, 272, 281, 302, 306, 307, 310, 313, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 346, 353, 375, 392, 402, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435], "organ": [1, 2, 430, 432], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 102, 103, 111, 124, 127, 130, 131, 132, 138, 150, 151, 154, 157, 158, 173, 176, 182, 185, 186, 206, 214, 220, 228, 229, 231, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 296, 301, 303, 305, 308, 310, 313, 316, 317, 325, 330, 345, 353, 373, 375, 410, 411, 416, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 89, 105, 108, 122, 123, 124, 127, 128, 131, 136, 137, 138, 141, 150, 151, 152, 153, 157, 158, 172, 176, 183, 184, 195, 197, 204, 213, 220, 222, 224, 231, 255, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 273, 284, 310, 336, 338, 340, 349, 355, 356, 357, 361, 362, 363, 387, 392, 394, 404, 405, 410, 411, 412, 415, 416, 417, 419, 420, 422, 424, 427, 428, 429, 430, 431, 432, 434, 435], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 46, 53, 56, 57, 61, 66, 67, 89, 102, 103, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 192, 195, 231, 273, 306, 320, 322, 335, 337, 338, 340, 375, 377, 392, 409, 410, 415, 416, 417, 418, 419, 420, 421, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "tabl": [1, 27, 410, 416, 421], "summar": [1, 3, 430], "what": [1, 3, 8, 11, 33, 53, 71, 83, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 186, 216, 220, 233, 238, 307, 323, 334, 338, 345, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 432, 434, 435], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 41, 46, 56, 57, 58, 61, 66, 71, 72, 103, 109, 110, 124, 127, 131, 138, 144, 147, 150, 151, 157, 158, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 193, 194, 195, 197, 199, 201, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 259, 260, 261, 263, 264, 265, 271, 272, 282, 303, 309, 312, 320, 321, 322, 323, 324, 325, 327, 328, 329, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 350, 353, 396, 409, 410, 411, 412, 415, 417, 418, 420, 421, 422, 423, 428, 429, 430, 432, 435], "n": [1, 2, 3, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 176, 184, 189, 224, 231, 259, 260, 263, 268, 279, 281, 282, 305, 310, 320, 321, 329, 338, 354, 389, 412, 416, 418, 419, 432, 434, 435], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 52, 54, 56, 58, 59, 60, 61, 63, 66, 67, 68, 73, 96, 97, 116, 124, 192, 223, 259, 260, 263, 264, 271, 272, 274, 275, 283, 292, 313, 355, 356, 357, 358, 359, 361, 375, 416, 432], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 109, 110, 111, 116, 124, 127, 128, 130, 131, 138, 145, 146, 150, 151, 157, 158, 169, 172, 176, 182, 185, 186, 192, 201, 205, 206, 215, 217, 220, 227, 229, 231, 233, 238, 259, 261, 263, 265, 282, 302, 309, 320, 344, 355, 356, 357, 358, 359, 361, 375, 382, 392, 394, 406, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "p": [1, 2, 4, 105, 108, 128, 155, 156, 243, 244], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 46, 56, 57, 61, 66, 83, 85, 87, 89, 90, 91, 111, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 152, 153, 157, 158, 180, 182, 183, 185, 193, 201, 206, 210, 215, 216, 218, 220, 221, 222, 225, 227, 228, 231, 259, 262, 263, 266, 271, 286, 290, 291, 309, 310, 312, 319, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 394, 404, 405, 406, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 435], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 102, 103, 105, 116, 124, 127, 130, 131, 138, 150, 151, 157, 158, 182, 183, 185, 193, 197, 216, 218, 222, 223, 233, 265, 266, 272, 273, 306, 309, 310, 312, 313, 319, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 375, 383, 394, 404, 405, 406, 408, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 424, 428, 429, 430, 432, 434, 435], "dimens": [1, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 58, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 96, 97, 98, 103, 110, 111, 116, 118, 124, 125, 126, 127, 130, 131, 132, 133, 138, 150, 151, 157, 158, 161, 162, 169, 175, 176, 177, 189, 197, 199, 202, 209, 212, 213, 216, 218, 224, 229, 245, 246, 247, 252, 253, 261, 263, 265, 266, 269, 270, 271, 274, 275, 280, 283, 287, 288, 289, 290, 293, 302, 305, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 406, 408, 411, 415, 416, 417, 418, 420, 428, 429, 430, 432], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 105, 116, 122, 123, 124, 127, 128, 131, 136, 137, 138, 141, 147, 150, 151, 152, 153, 154, 157, 158, 168, 175, 176, 177, 202, 209, 216, 217, 220, 222, 229, 231, 238, 244, 256, 259, 263, 265, 282, 296, 305, 310, 321, 322, 323, 329, 332, 336, 337, 338, 340, 341, 343, 345, 346, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 392, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 434, 435], "adapt": [1, 24, 170, 214, 241, 337, 415, 419, 430], "equal": [1, 14, 15, 17, 27, 73, 83, 103, 110, 111, 124, 145, 148, 149, 150, 157, 196, 197, 245, 246, 259, 261, 263, 265, 266, 270, 272, 344, 349, 383, 404, 405, 415, 417, 431], "introduc": [1, 2, 150, 157, 259, 261, 263, 265, 282, 415, 428], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 85, 91, 96, 98, 105, 116, 118, 122, 123, 124, 127, 130, 131, 132, 136, 137, 138, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 172, 201, 216, 222, 225, 231, 233, 248, 261, 265, 288, 310, 311, 312, 375, 383, 395, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 432, 434, 435], "confus": [1, 25, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 89, 90, 91, 96, 97, 98, 99, 105, 108, 109, 110, 111, 112, 114, 118, 124, 127, 130, 131, 132, 138, 144, 150, 151, 157, 158, 179, 183, 184, 203, 210, 218, 225, 229, 231, 243, 258, 259, 261, 265, 275, 296, 301, 303, 308, 310, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 373, 389, 404, 405, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435], "better": [1, 3, 8, 9, 14, 15, 23, 137, 261, 265, 411, 417, 420, 430, 434], "consist": [1, 2, 3, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 73, 86, 89, 124, 127, 131, 138, 150, 151, 157, 158, 194, 228, 231, 243, 246, 266, 415, 416, 417, 430, 431, 435], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 89, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 222, 306, 310, 415, 417, 419, 420, 421, 423, 428, 429, 430, 435], "keep": [1, 2, 3, 4, 7, 8, 15, 53, 58, 67, 68, 105, 109, 116, 124, 150, 157, 197, 201, 227, 229, 231, 238, 282, 375, 385, 392, 415, 416, 417, 418, 423, 424, 425, 429, 430, 432, 435], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 39, 63, 83, 86, 176, 201, 227, 321, 324, 327, 329, 341, 343, 345, 346, 411, 415, 416, 421, 422, 428, 429, 432, 435], "interchang": [1, 271, 272, 417, 420, 424, 431, 432], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 103, 105, 106, 109, 110, 111, 118, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 184, 196, 207, 220, 222, 229, 231, 233, 245, 246, 254, 259, 261, 265, 266, 271, 272, 303, 306, 310, 320, 322, 323, 324, 327, 328, 329, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 355, 387, 392, 411, 415, 416, 418, 419, 423, 428, 429, 430, 432, 435], "wherea": [1, 2, 22, 27, 38, 46, 56, 57, 61, 66, 89, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 150, 151, 154, 157, 158, 184, 220, 222, 231, 323, 338, 343, 412, 424], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 86, 89, 91, 102, 103, 124, 127, 131, 138, 144, 150, 151, 157, 158, 176, 192, 201, 216, 220, 222, 227, 229, 231, 243, 258, 261, 263, 265, 269, 270, 282, 306, 310, 323, 325, 328, 329, 343, 353, 355, 356, 357, 358, 359, 410, 415, 416, 417, 419, 420, 422, 423, 424, 428, 429, 430, 431], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 31, 32, 39, 63, 83, 89, 103, 110, 116, 150, 157, 202, 220, 311, 312, 383, 392, 410, 411, 415, 416, 417, 423, 427, 434, 435], "doesn": [1, 4, 12, 116, 145, 182, 185, 419, 420], "understood": [1, 415], "serv": [1, 18, 20, 21, 133, 432, 434, 435], "basi": [1, 116, 271, 432, 434], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 41, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 85, 89, 91, 96, 109, 111, 116, 122, 123, 124, 127, 128, 131, 135, 136, 137, 138, 150, 151, 157, 158, 176, 194, 201, 204, 210, 220, 225, 228, 229, 231, 233, 242, 265, 271, 272, 273, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 375, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "anoth": [1, 2, 3, 8, 41, 66, 71, 89, 97, 103, 110, 124, 127, 130, 131, 132, 135, 138, 150, 151, 157, 158, 173, 182, 183, 185, 216, 221, 266, 306, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 411, 415, 417, 418, 419, 421, 422, 427, 428, 429, 430, 435], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 85, 87, 89, 97, 102, 103, 110, 111, 124, 127, 131, 135, 138, 145, 150, 151, 154, 157, 158, 173, 176, 180, 192, 201, 213, 216, 220, 221, 222, 225, 227, 231, 243, 261, 265, 266, 273, 293, 309, 310, 311, 312, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 373, 375, 377, 410, 412, 415, 416, 417, 418, 420, 421, 422, 424, 428, 429, 430, 432, 434, 435], "op": [1, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 196, 228, 240, 243, 258, 375, 394], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 91, 102, 103, 111, 116, 124, 127, 131, 138, 150, 151, 152, 153, 154, 157, 158, 231, 233, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 302, 303, 305, 307, 308, 313, 316, 373, 375, 411, 415, 416, 417, 418, 420, 421, 422, 428, 430, 431, 432, 434, 435], "goal": [1, 3, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 138, 215, 415, 416, 417, 418, 429, 430], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 416], "explicitli": [1, 2, 3, 4, 30, 72, 93, 94, 101, 105, 172, 281, 306, 411, 416, 418, 423, 428, 429, 432], "do": [1, 2, 3, 4, 7, 91, 124, 127, 131, 138, 150, 151, 157, 158, 161, 162, 169, 202, 216, 220, 228, 229, 238, 261, 265, 272, 274, 299, 310, 338, 355, 375, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 434, 435], "deepcopi": [1, 273, 338, 428], "structur": [1, 3, 7, 41, 52, 53, 54, 58, 59, 60, 67, 68, 71, 72, 73, 97, 116, 124, 127, 131, 138, 150, 151, 157, 158, 182, 185, 239, 271, 282, 320, 329, 340, 343, 355, 356, 357, 358, 359, 408, 411, 415, 417, 418, 420, 423, 428, 429, 430, 431], "place": [1, 2, 3, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 96, 98, 105, 108, 110, 118, 124, 127, 128, 131, 138, 150, 151, 157, 158, 161, 162, 172, 180, 186, 201, 216, 221, 222, 225, 227, 228, 229, 231, 239, 273, 301, 305, 309, 389, 394, 395, 411, 416, 417, 421, 424, 428, 429, 430, 432], "instanti": [1, 2, 3, 14, 15, 21, 52, 53, 54, 58, 59, 67, 68, 71, 73, 102, 103, 135, 137, 172, 192, 216, 221, 272, 355, 356, 357, 358, 359, 373, 415, 416, 421, 422, 424, 428, 429, 430, 432, 435], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 142, 143, 144, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 169, 175, 176, 179, 180, 182, 183, 185, 188, 194, 196, 197, 201, 209, 211, 213, 216, 217, 221, 222, 225, 227, 229, 231, 235, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 296, 301, 303, 305, 308, 309, 310, 312, 313, 316, 317, 320, 321, 323, 332, 336, 338, 340, 341, 342, 343, 345, 346, 350, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 388, 392, 395, 404, 405, 406, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435], "graph": [1, 3, 4, 8, 56, 66, 122, 123, 136, 137, 351, 352, 415, 419, 430], "reli": [1, 2, 3, 11, 23, 57, 61, 216, 259, 260, 261, 263, 264, 265, 320, 340, 411, 415, 417, 419, 421, 423, 430, 435], "third": [1, 197, 303, 428, 429], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 52, 54, 59, 63, 73, 415, 416, 417, 418, 419, 422, 423, 428, 429, 430, 434, 435], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 144, 150, 151, 157, 158, 176, 194, 320, 322, 337, 338, 340, 342, 411, 415, 416, 418, 428, 429, 430], "chart": 1, "show": [1, 2, 11, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 272, 375, 415, 417, 418, 419, 428, 429, 430, 432, 434], "decis": [1, 2, 3, 247, 252, 280, 301, 326, 339, 410, 418, 420, 421, 428, 429, 432, 435], "simplest": [1, 56, 66, 116, 313, 415, 417, 418, 421, 428, 429, 432, 435], "scenario": [1, 2, 142, 143, 150, 161, 162, 220, 373, 415, 421, 428, 429, 430], "transit": [1, 27, 38, 46, 56, 57, 61, 66, 85, 89, 103, 111, 116, 124, 127, 131, 138, 150, 151, 157, 158, 231, 241, 243, 315, 415, 418, 420, 421, 423, 428, 430, 432], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 114, 116, 118, 124, 127, 131, 138, 144, 147, 150, 151, 157, 158, 169, 175, 176, 202, 206, 222, 234, 237, 240, 242, 253, 258, 262, 268, 269, 270, 278, 280, 281, 282, 285, 290, 291, 294, 297, 302, 303, 304, 306, 307, 308, 309, 310, 320, 321, 322, 323, 324, 325, 327, 337, 339, 340, 345, 346, 383, 389, 392, 395, 408, 410, 411, 415, 416, 417, 418, 419, 420, 421, 423, 425, 428, 429, 431, 434, 435], "attent": [1, 2, 8, 176, 415, 418, 435], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 110, 111, 124, 127, 131, 138, 144, 148, 149, 150, 151, 157, 158, 159, 160, 180, 184, 192, 197, 201, 216, 219, 221, 222, 223, 225, 227, 229, 231, 238, 240, 242, 244, 255, 256, 258, 259, 261, 263, 265, 268, 273, 284, 288, 297, 302, 303, 305, 308, 309, 310, 311, 312, 314, 319, 324, 325, 327, 338, 354, 355, 356, 357, 358, 359, 361, 384, 387, 402, 410, 411, 412, 415, 416, 417, 420, 421, 422, 423, 424, 429, 430, 435], "built": [1, 2, 3, 5, 7, 105, 122, 123, 130, 136, 137, 147, 148, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353, 400, 402, 403, 406, 415, 416, 417, 418, 419, 422, 424, 430, 432, 435], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 116, 173, 189, 389, 408, 418, 429], "suffici": [1, 3, 4, 415], "preprocess": [1, 2, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 416, 419], "popul": [1, 2, 3, 14, 15, 16, 53, 58, 65, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 193, 216, 253, 273, 338, 415, 417, 418, 421, 423, 430, 432], "replaybuff": [1, 2, 14, 15, 16, 35, 53, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 103, 104, 105, 110, 111, 120, 176, 202, 206, 231, 325, 330, 353, 400, 402, 408, 417, 419, 423, 425, 428, 429, 431, 432, 434], "lazytensorstorag": [1, 2, 53, 58, 66, 67, 68, 102, 110, 111, 116, 206, 231, 417, 419, 425, 428, 429, 432], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 56, 58, 66, 116, 124, 127, 128, 131, 138, 150, 151, 157, 158, 168, 173, 192, 194, 216, 223, 231, 244, 293, 302, 305, 306, 307, 331, 333, 334, 345, 355, 358, 366, 367, 371, 372, 373, 402, 411, 415, 416, 419, 428, 429, 431, 432, 434, 435], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 89, 110, 116, 173, 261, 265, 266, 281, 373, 417, 428, 429], "extend": [1, 2, 8, 35, 41, 53, 56, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 99, 102, 103, 105, 106, 110, 111, 114, 116, 117, 120, 121, 175, 206, 231, 241, 338, 389, 411, 412, 415, 416, 417, 418, 419, 423, 425, 428, 429, 431, 432, 434], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 110, 111, 169, 175, 176, 432], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 53, 54, 58, 59, 67, 68, 73, 110, 116, 135, 176, 273, 411, 423, 428, 429], "achiev": [1, 2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 135, 138, 150, 151, 157, 158, 215, 231, 239, 244, 306, 389, 412, 415, 416, 417, 418, 419, 428, 429, 430, 432, 434, 435], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 105, 116, 124, 127, 128, 131, 135, 138, 150, 151, 152, 157, 158, 161, 162, 173, 176, 192, 201, 220, 221, 222, 225, 228, 229, 231, 236, 238, 245, 246, 248, 249, 250, 251, 252, 253, 257, 261, 265, 266, 267, 271, 272, 301, 310, 317, 323, 325, 330, 341, 343, 353, 375, 389, 396, 397, 398, 402, 404, 405, 410, 415, 416, 417, 418, 419, 421, 424, 428, 429, 430, 431, 432, 434, 435], "multidimension": [1, 2, 67, 102, 103, 432], "slicesampl": [1, 2, 83, 103, 111, 176, 432], "sampler": [1, 2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 116, 118, 176, 202, 281, 325, 330, 353, 415, 417, 428, 429, 432], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 34, 39, 44, 45, 50, 51, 63, 72, 116, 122, 123, 150, 157, 176, 206, 225, 240, 278, 309, 313, 344, 349, 379, 415, 416, 432, 435], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 103, 105, 110, 111, 112, 113, 114, 116, 118, 122, 124, 127, 128, 131, 136, 138, 148, 150, 151, 152, 153, 154, 157, 158, 159, 161, 167, 169, 172, 173, 176, 179, 186, 190, 192, 194, 197, 199, 210, 213, 215, 216, 217, 219, 220, 222, 223, 224, 229, 231, 245, 246, 255, 261, 265, 266, 269, 270, 271, 272, 284, 297, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 411, 415, 416, 417, 418, 421, 427, 430, 432], "ensur": [1, 2, 3, 27, 38, 46, 53, 56, 57, 61, 66, 67, 73, 102, 103, 109, 124, 127, 131, 138, 150, 151, 157, 158, 169, 176, 201, 214, 222, 225, 229, 231, 261, 265, 302, 410, 416, 417, 430, 432], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 105, 110, 116, 118, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 169, 173, 175, 177, 182, 185, 186, 187, 192, 194, 195, 197, 199, 203, 204, 206, 210, 213, 214, 216, 218, 223, 229, 230, 231, 233, 236, 238, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 383, 389, 392, 402, 410, 411, 415, 416, 417, 418, 419, 421, 422, 425, 427, 428, 429, 431, 432, 434, 435], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 83, 262, 290, 291, 319, 409, 415, 416, 417, 418, 419, 422, 428, 429, 431, 435], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 61, 66, 71, 112, 116, 124, 127, 131, 135, 138, 141, 150, 151, 152, 153, 157, 158, 176, 179, 189, 195, 201, 204, 217, 220, 222, 227, 229, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 274, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 306, 307, 308, 309, 313, 316, 319, 329, 342, 343, 354, 359, 375, 392, 406, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 434, 435], "dimension": [1, 53, 57, 58, 66, 67, 68, 184, 261, 265, 355, 360, 368, 411, 429], "num_slic": [1, 2, 83, 89, 103, 110, 111, 432], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 41, 44, 45, 46, 50, 53, 56, 58, 60, 61, 63, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 105, 110, 111, 118, 122, 123, 124, 125, 126, 127, 131, 136, 137, 138, 139, 140, 141, 144, 146, 150, 151, 155, 156, 157, 158, 169, 170, 172, 173, 176, 186, 206, 213, 214, 215, 220, 229, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 266, 268, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 373, 374, 410, 414, 415, 416, 417, 418, 424, 428, 429, 430, 432, 433, 434, 435], "trajectory_kei": [1, 23, 110, 111], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 64, 173, 206, 423, 432], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 173, 176, 206, 392, 395, 402, 412, 415, 416, 417, 418, 419, 423, 425, 428, 429, 432, 434], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 176, 177, 199, 212, 213, 216, 224, 229, 264, 288, 293, 305, 406, 411, 416, 417, 419, 428, 430, 432], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 96, 98, 102, 103, 116, 118, 124, 127, 131, 138, 150, 151, 157, 158, 231, 305], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 116, 124, 127, 131, 138, 145, 151, 152, 153, 154, 157, 158, 220, 261, 265, 373, 403, 408, 415, 416, 417, 420, 427, 434, 435], "make_env": [1, 3, 150, 157, 162, 220, 229, 373, 397, 398, 415, 416, 434, 435], "regular": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 102, 108, 124, 127, 131, 138, 150, 151, 157, 158, 222, 241, 243, 254, 261, 265, 284, 303, 307, 308, 309, 310, 330, 340, 394, 408, 412, 415, 416, 419, 420, 421, 425, 432, 435], "behav": [1, 3, 133, 144, 259, 263, 278, 328, 336, 338, 419, 431], "accordingli": [1, 2, 103, 214, 215, 263, 307, 418], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 103, 105, 110, 111, 116, 118, 124, 125, 126, 127, 130, 131, 132, 133, 134, 138, 141, 142, 143, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 170, 172, 173, 176, 180, 184, 186, 187, 192, 194, 197, 199, 201, 203, 204, 206, 209, 210, 213, 214, 215, 216, 218, 220, 221, 222, 223, 225, 227, 231, 232, 236, 241, 242, 244, 245, 246, 248, 249, 250, 252, 255, 257, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 273, 278, 281, 283, 293, 297, 298, 299, 300, 302, 303, 306, 308, 309, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 391, 410, 412, 414, 415, 416, 417, 418, 420, 421, 423, 424, 428, 429, 430, 432, 433, 434, 435], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 89, 102, 116, 124, 127, 131, 138, 150, 151, 157, 158, 172, 186, 192, 233, 302, 309, 421, 422, 424, 428, 429], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 103, 105, 111, 124, 127, 131, 133, 138, 145, 148, 149, 150, 151, 157, 158, 172, 173, 176, 192, 202, 215, 216, 217, 220, 221, 222, 231, 234, 238, 256, 282, 286, 290, 294, 305, 320, 322, 323, 330, 337, 340, 342, 343, 378, 412, 415, 416, 417, 418, 422, 428, 429, 430, 432, 435], "fulli": [1, 8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 260, 264, 416, 419, 422, 430, 432], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 105, 106, 109, 111, 112, 114, 116, 117, 118, 120, 121, 124, 127, 128, 131, 138, 145, 150, 151, 152, 153, 157, 158, 159, 161, 162, 170, 172, 189, 192, 201, 202, 206, 220, 222, 223, 225, 229, 231, 233, 239, 244, 245, 246, 252, 253, 266, 275, 281, 301, 305, 309, 310, 311, 312, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 355, 357, 358, 373, 375, 380, 392, 409, 411, 415, 416, 417, 418, 419, 421, 422, 428, 429, 430, 432, 434, 435], "consecut": [1, 3, 83, 109, 135, 265, 282, 375, 418, 420, 423, 429, 432, 435], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 124, 127, 128, 130, 131, 138, 145, 146, 150, 151, 157, 158, 201, 227, 231, 320, 392, 406, 416, 417, 420, 421], "therebi": [1, 24, 373, 411, 415, 416], "interrupt": [1, 2, 131, 305, 361], "These": [1, 2, 7, 41, 60, 86, 91, 119, 161, 201, 227, 410, 411, 415, 417, 428, 429, 430, 432, 435], "tool": [1, 2, 3, 5, 410, 411, 418, 420, 428, 430, 432, 435], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 73, 124, 127, 130, 131, 138, 150, 151, 157, 158, 164, 168, 412, 415, 417, 418, 419, 420, 423, 424, 430], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 408], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 408], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 58, 67, 68, 83, 91, 97, 105, 128, 129, 150, 157, 229, 415, 416, 417, 418, 423, 428, 429, 430, 431, 435], "synchron": [1, 14, 15, 16, 19, 21, 52, 54, 59, 73, 145, 404, 405, 416, 417, 428], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 145, 150, 151, 157, 158, 182, 185, 215, 222, 229, 231, 243, 253, 261, 262, 265, 270, 278, 289, 290, 291, 296, 306, 310, 338, 373, 387, 410, 411, 415, 416, 428, 429, 434, 435], "find": [1, 4, 6, 7, 18, 19, 20, 53, 55, 69, 110, 111, 240, 263, 282, 386, 390, 415, 416, 419, 421, 422, 428, 429], "folder": [1, 2, 52, 54, 59, 73, 161, 176, 416], "variou": [1, 2, 3, 124, 261, 265, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 347, 353, 375, 404, 405, 415, 416, 417, 419, 420, 421, 422, 424, 428, 429, 432, 435], "machin": [1, 2, 7, 18, 19, 20, 46, 88, 135, 428, 429, 434], "wonder": 1, "why": [1, 2, 3, 238, 411, 428, 430, 435], "instead": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 25, 27, 30, 38, 46, 56, 57, 61, 66, 70, 73, 89, 124, 127, 131, 137, 138, 150, 151, 157, 158, 176, 189, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 320, 322, 323, 325, 328, 329, 330, 336, 337, 340, 341, 342, 343, 353, 355, 359, 363, 406, 411, 419, 420, 421, 425, 430, 432, 435], "lower": [1, 2, 3, 21, 27, 28, 179, 229, 285, 286, 313, 417, 428, 430], "io": [1, 11, 83, 89, 136, 137, 145, 148, 149, 159, 160, 263, 264, 419], "footprint": [1, 2, 432], "commun": [1, 2, 3, 138, 150, 157, 409, 417, 435], "yet": [1, 122, 123, 136, 431], "plai": [1, 3, 152, 153, 158, 176, 416, 417, 422, 432, 435], "role": [1, 3, 143, 416, 422, 435], "opposit": [1, 428], "direct": [1, 2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 259, 263, 338, 416, 422], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 90, 91, 145, 355, 356, 357, 358, 418, 419, 428, 429], "share": [1, 3, 6, 8, 23, 52, 54, 58, 59, 67, 68, 71, 73, 94, 96, 97, 98, 99, 103, 105, 106, 110, 112, 114, 118, 128, 150, 157, 213, 220, 229, 261, 265, 271, 272, 298, 299, 300, 320, 321, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 406, 408, 410, 411, 417, 419, 425, 427, 428, 429, 434, 435], "among": [1, 3, 152, 153, 220, 329, 343, 411, 428, 429], "prohibit": [1, 3, 116], "slow": [1, 3, 4, 11, 52, 54, 59, 73, 97, 110, 111], "compar": [1, 3, 89, 116, 321, 323, 336, 341, 343, 345, 346, 387, 411, 415, 417, 419, 421, 422, 428, 429, 432, 435], "gpu": [1, 7, 8, 27, 38, 46, 56, 57, 61, 66, 96, 98, 118, 124, 127, 131, 132, 135, 138, 150, 151, 157, 158, 231, 415, 417, 418, 428, 429, 435], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 67, 71, 73, 83, 97, 102, 103, 110, 111, 116, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 172, 197, 220, 229, 240, 241, 242, 253, 256, 259, 261, 263, 265, 268, 280, 281, 289, 290, 306, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 410, 411, 415, 416, 417, 419, 421, 428, 429, 430, 432, 435], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 102, 103, 105, 108, 110, 111, 114, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 142, 143, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 172, 173, 176, 177, 179, 180, 183, 192, 201, 209, 210, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 231, 240, 241, 244, 258, 261, 265, 269, 270, 271, 272, 282, 297, 301, 302, 305, 306, 307, 309, 310, 313, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 348, 353, 355, 356, 357, 358, 359, 363, 373, 375, 380, 382, 392, 403, 415, 416, 417, 419, 421, 424, 428, 429, 432, 434, 435], "build": [1, 2, 3, 7, 23, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 122, 123, 124, 127, 131, 132, 133, 136, 137, 138, 142, 143, 145, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 206, 229, 231, 242, 261, 265, 268, 304, 306, 310, 392, 399, 400, 401, 410, 411, 412, 417, 418, 419, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435], "mani": [1, 2, 3, 4, 58, 122, 123, 125, 126, 127, 130, 132, 133, 136, 137, 145, 146, 154, 320, 322, 329, 337, 340, 410, 415, 416, 417, 419, 420, 421, 423, 425, 428, 429, 430, 432, 434, 435], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 99, 112, 114, 118, 124, 125, 126, 127, 130, 131, 132, 133, 135, 138, 150, 151, 154, 157, 158, 184, 214, 222, 271, 301, 375], "gymnasium": [1, 2, 3, 5, 12, 66, 124, 127, 130, 131, 132, 138, 139, 140, 150, 151, 157, 158, 164, 168, 187, 210, 214, 228, 416, 417, 419, 430, 434], "warn": [1, 3, 57, 61, 124, 127, 131, 138, 150, 151, 157, 158, 240, 258, 282, 416], "quickli": [1, 3, 416, 428, 429, 435], "becom": [1, 2, 3, 4, 21, 259, 263, 428, 429, 435], "quit": [1, 3, 11, 83, 124, 127, 131, 138, 150, 151, 157, 158, 415, 416, 417, 419, 421, 428, 429, 435], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 50, 63, 124, 125, 126, 127, 130, 131, 132, 133, 138, 142, 143, 150, 151, 152, 153, 154, 157, 158, 161, 162, 293, 310, 338, 387, 406, 411, 415, 418, 428, 431, 432, 435], "filter": [1, 2, 3, 4, 72, 103, 110, 111, 320, 321, 323, 324, 328, 329, 336, 340, 341, 343, 420], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 85, 89, 94, 103, 110, 111, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 213, 216, 231, 233, 240, 259, 260, 263, 269, 270, 273, 274, 275, 297, 301, 302, 303, 306, 307, 308, 309, 310, 338, 351, 352, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 432, 434, 435], "still": [1, 2, 3, 9, 56, 66, 73, 74, 89, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 220, 282, 337, 338, 411, 415, 416, 418, 427, 430, 432, 435], "wish": [1, 3, 11, 14, 15, 17, 89, 168, 422, 432], "displai": [1, 3, 7, 124, 127, 131, 138, 150, 151, 157, 158, 392, 412, 415, 416, 429, 430], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 176, 177, 180, 182, 185, 186, 187, 189, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 206, 208, 209, 210, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 233, 238, 239, 240, 241, 242, 244, 245, 246, 248, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 282, 283, 284, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 382, 385, 386, 387, 389, 390, 392, 406, 410, 411, 412, 415, 416, 417, 419, 424, 425, 427, 428, 429, 430, 431, 434, 435], "central": [2, 271, 272, 273, 415, 416, 420, 428, 429, 432], "part": [2, 3, 4, 8, 27, 38, 46, 56, 57, 60, 61, 66, 73, 83, 86, 87, 89, 90, 91, 122, 124, 127, 131, 136, 138, 148, 150, 151, 157, 158, 175, 197, 206, 209, 231, 238, 261, 265, 314, 383, 406, 411, 415, 417, 418, 419, 425, 428, 430, 435], "algorithm": [2, 3, 8, 9, 144, 169, 213, 320, 340, 341, 343, 408, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 428, 429, 431, 432, 434], "implement": [2, 3, 9, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 70, 71, 74, 75, 76, 77, 78, 100, 112, 113, 124, 127, 131, 138, 144, 145, 150, 151, 157, 158, 173, 180, 182, 183, 187, 190, 194, 203, 204, 210, 214, 219, 221, 222, 223, 229, 231, 243, 245, 259, 260, 261, 262, 263, 264, 265, 289, 290, 291, 320, 321, 323, 326, 327, 328, 334, 336, 338, 339, 340, 342, 343, 345, 373, 383, 397, 410, 412, 415, 416, 417, 418, 419, 428, 429, 430, 434], "wide": [2, 3, 5, 434], "give": [2, 3, 7, 67, 86, 124, 127, 131, 138, 144, 150, 151, 157, 158, 176, 409, 411, 415, 416, 419, 428, 429, 430, 431, 434], "abil": [2, 338, 430, 432], "panel": [2, 417], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 85, 91, 94, 116, 173, 176, 186, 243, 261, 265, 323, 328, 336, 343, 347, 410, 415, 417, 418, 421, 422, 424, 428, 429, 432], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 112, 114, 118, 124, 127, 131, 138, 144, 148, 149, 150, 151, 157, 158, 192, 215, 220, 222, 229, 231, 261, 265, 320, 323, 338, 343, 395, 410, 412, 415, 416, 417, 418, 419, 428, 429, 430, 432, 435], "almost": [2, 270, 418], "physic": [2, 6, 7, 94, 150, 151, 154, 412, 415, 428, 429, 430], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 99, 112, 114, 118, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 216, 231, 273, 282, 325, 338, 353, 415, 416, 418, 428, 429, 431, 432, 434], "liststorag": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 105, 432], "veri": [2, 3, 136, 137, 416, 420, 423, 428, 430, 432, 434, 435], "ineffici": [2, 4], "allow": [2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 89, 97, 103, 105, 108, 110, 111, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 172, 173, 204, 231, 238, 266, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 349, 353, 410, 412, 415, 417, 418, 419, 420, 421, 422, 428, 429, 430, 432, 434, 435], "complex": [2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309, 415, 416, 420, 421], "tensor": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 110, 111, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 169, 170, 172, 173, 175, 176, 177, 180, 182, 184, 185, 186, 187, 189, 192, 193, 195, 197, 199, 201, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 229, 231, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 320, 321, 323, 324, 325, 327, 328, 329, 332, 333, 336, 338, 340, 341, 342, 343, 345, 346, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 428, 429, 430, 434, 435], "contigu": [2, 3, 8, 28, 31, 38, 74, 86, 89, 90, 97, 124, 127, 131, 138, 150, 151, 157, 158, 192, 195, 216, 223, 236, 430, 432, 434], "tensorstorag": [2, 58, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 102, 103, 116, 119, 423, 432], "lazymemmapstorag": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 110, 111, 175, 176, 415, 416, 418, 423, 428, 431, 432], "citizen": 2, "pytre": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 105, 119], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 99, 103, 105, 110, 114, 116, 124, 125, 126, 127, 130, 131, 132, 138, 150, 151, 157, 158, 176, 192, 194, 197, 231, 244, 248, 254, 255, 261, 264, 265, 266, 273, 280, 283, 284, 302, 303, 307, 308, 313, 320, 321, 322, 323, 324, 328, 329, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 386, 387, 390, 399, 432, 434], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 103, 108, 110, 111, 124, 127, 130, 131, 132, 138, 142, 143, 150, 151, 157, 158, 161, 162, 192, 216, 220, 222, 231, 306, 310, 323, 343, 345, 387, 404, 405, 406, 412, 416, 417, 420, 422, 428, 430, 435], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 46, 47, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 73, 79, 96, 97, 98, 101, 105, 118, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 176, 214, 217, 220, 231, 239, 305, 355, 356, 357, 358, 359, 373, 412, 416, 417, 419, 429, 430, 432, 434], "construct": [2, 3, 5, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 105, 124, 127, 128, 130, 131, 138, 150, 151, 152, 157, 158, 182, 185, 231, 233, 261, 265, 286, 310, 392, 410, 416, 417, 418, 421, 428, 430, 432, 435], "ram": [2, 130, 132, 424, 432], "prealloc": [2, 3, 150, 157, 430], "ve": [2, 60, 415, 418, 425], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 105, 109, 124, 127, 131, 135, 138, 142, 143, 150, 151, 157, 158, 194, 214, 215, 221, 259, 261, 263, 265, 273, 305, 320, 338, 340, 342, 415, 416, 417, 418, 427, 428, 429, 430, 432, 434, 435], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 90, 91, 116, 124, 125, 126, 127, 131, 135, 138, 150, 151, 152, 153, 157, 158, 176, 220, 273, 382, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 425, 428, 429, 430, 432, 434, 435], "start": [2, 3, 4, 5, 14, 21, 24, 41, 71, 72, 73, 83, 91, 103, 110, 111, 124, 127, 128, 131, 138, 141, 150, 151, 157, 158, 181, 238, 388, 414, 415, 416, 419, 426, 429, 430, 432, 433, 435], "replay_buff": [2, 8, 14, 15, 16, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 176, 389, 402, 415, 416, 417, 423, 428, 429, 432], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 105, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 140, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 170, 172, 173, 175, 176, 179, 186, 187, 192, 193, 194, 195, 197, 199, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 223, 227, 229, 231, 232, 236, 238, 239, 242, 244, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 273, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 373, 375, 385, 387, 402, 410, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "rb": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 102, 103, 105, 110, 111, 116, 176, 206, 231, 416, 418, 419, 423, 425, 429, 431, 432, 434], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 42, 46, 53, 58, 60, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 102, 105, 110, 111, 116, 118, 122, 123, 124, 127, 128, 131, 136, 137, 138, 144, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 169, 170, 173, 175, 176, 215, 217, 218, 231, 242, 244, 247, 248, 250, 252, 254, 258, 259, 260, 261, 263, 264, 265, 268, 270, 280, 282, 293, 306, 310, 313, 317, 321, 325, 327, 334, 340, 341, 342, 346, 353, 355, 356, 357, 358, 361, 375, 383, 412, 415, 416, 417, 418, 419, 420, 421, 425, 428, 430, 432, 434, 435], "add": [2, 3, 4, 6, 21, 27, 31, 32, 38, 39, 41, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 102, 105, 106, 116, 117, 120, 121, 124, 127, 131, 138, 150, 151, 157, 158, 176, 192, 194, 219, 222, 231, 261, 265, 274, 304, 320, 388, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 434], "string": [2, 18, 19, 20, 27, 38, 41, 46, 55, 56, 57, 61, 66, 72, 73, 92, 97, 124, 127, 131, 138, 142, 148, 150, 151, 157, 158, 168, 192, 201, 214, 219, 227, 231, 261, 265, 302, 305, 306, 307, 319, 374, 391, 411, 415, 417, 418, 432], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 42, 44, 50, 52, 53, 54, 58, 59, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 102, 103, 105, 110, 111, 116, 118, 147, 150, 157, 169, 176, 202, 211, 215, 216, 240, 245, 246, 259, 260, 263, 296, 297, 302, 305, 309, 310, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 383, 411, 415, 417, 421, 423, 432, 435], "30": [2, 3, 58, 66, 87, 110, 111, 172, 196, 285, 286, 373, 377, 380, 382, 423, 429, 430, 432], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 108, 110, 111, 112, 114, 116, 118, 124, 127, 128, 130, 131, 138, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 191, 192, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 290, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 402, 404, 405, 406, 410, 412, 415, 416, 418, 419, 430, 432, 434], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 110, 111, 112, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 157, 158, 161, 162, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 184, 189, 190, 192, 196, 197, 199, 201, 202, 205, 212, 213, 214, 217, 219, 222, 224, 225, 227, 231, 233, 236, 240, 241, 242, 245, 246, 247, 248, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 301, 302, 303, 305, 306, 308, 309, 310, 320, 321, 322, 329, 331, 332, 337, 338, 339, 340, 341, 345, 346, 355, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 380, 382, 383, 384, 385, 387, 389, 392, 394, 400, 404, 405, 406, 419, 430, 432], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 41, 46, 52, 54, 55, 56, 57, 59, 61, 63, 64, 66, 72, 73, 80, 85, 86, 87, 88, 90, 91, 110, 111, 124, 125, 126, 127, 130, 131, 132, 133, 138, 142, 143, 150, 151, 154, 157, 158, 161, 162, 172, 176, 178, 179, 181, 182, 183, 185, 186, 189, 193, 195, 197, 199, 201, 204, 206, 209, 211, 213, 214, 215, 216, 220, 222, 224, 227, 229, 231, 238, 239, 261, 269, 270, 301, 302, 305, 307, 308, 321, 323, 343, 355, 356, 357, 358, 410, 415, 417, 418, 420, 421, 422, 424, 428, 429, 430, 431, 432, 434, 435], "onto": [2, 8, 50, 52, 54, 59, 73, 183, 236, 240, 282, 297, 302, 303, 306, 307, 308, 309, 310, 418, 430], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 103, 105, 106, 108, 109, 110, 111, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 150, 151, 154, 157, 158, 161, 162, 169, 176, 177, 214, 215, 216, 217, 222, 231, 239, 245, 246, 266, 269, 270, 272, 282, 305, 307, 308, 316, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 396, 406, 409, 412, 417, 418, 419, 423, 424, 425, 430, 432, 435], "without": [2, 3, 7, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 83, 85, 89, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 161, 162, 170, 172, 182, 185, 218, 231, 259, 260, 263, 264, 299, 300, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 359, 402, 409, 410, 415, 416, 417, 419, 420, 421, 422, 423, 428, 429, 430, 432, 435], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 53, 54, 56, 57, 59, 60, 61, 66, 67, 73, 102, 103, 124, 127, 131, 138, 144, 150, 151, 152, 153, 157, 158, 159, 160, 170, 172, 173, 182, 184, 185, 192, 203, 214, 215, 220, 222, 226, 229, 231, 239, 240, 242, 243, 258, 259, 261, 265, 268, 273, 282, 306, 307, 308, 309, 310, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 387, 392, 394, 397, 398, 401, 402, 412, 416, 417, 418, 419, 422, 425, 428, 429, 430, 432, 435], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 60, 62, 63, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 89, 92, 103, 110, 111, 114, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 169, 176, 195, 202, 229, 242, 245, 246, 248, 250, 252, 259, 263, 266, 268, 271, 272, 297, 309, 314, 383, 389, 415, 417, 418, 423, 425, 430, 432, 435], "cursor": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "afterward": [2, 27, 38, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 428, 435], "tell": [2, 3, 4, 7, 152, 153, 220, 415, 418, 423, 428, 429], "our": [2, 3, 7, 8, 11, 18, 41, 58, 176, 375, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434], "far": [2, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 262, 290, 291, 425, 430, 435], "restrict": [2, 3, 411, 416, 431, 432, 435], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 105, 124, 127, 131, 137, 138, 147, 150, 151, 157, 158, 182, 185, 201, 203, 217, 222, 225, 227, 231, 236, 379, 415, 430], "64": [2, 3, 52, 54, 59, 73, 83, 89, 105, 176, 205, 248, 249, 257, 261, 265, 272, 273, 283, 353, 415, 416, 417, 418, 419, 421, 425, 427, 430, 432, 434, 435], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 110, 111, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 167, 169, 170, 173, 174, 180, 182, 183, 184, 185, 186, 187, 192, 194, 195, 197, 199, 201, 203, 204, 206, 210, 213, 214, 216, 218, 221, 222, 223, 225, 227, 231, 233, 236, 238, 239, 242, 244, 254, 255, 259, 260, 261, 263, 264, 265, 268, 274, 275, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 361, 410, 419, 427, 430, 432, 434, 435], "unit8": 2, "img": 2, "randint": [2, 72, 105, 218, 432], "255": [2, 105, 218, 432], "uint8": [2, 3, 31, 52, 54, 59, 73, 83, 89, 125, 126, 142, 143, 186, 192, 199, 218, 416, 432], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 41, 46, 53, 58, 60, 63, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 103, 105, 110, 111, 116, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 142, 143, 144, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 162, 169, 172, 173, 175, 176, 182, 185, 186, 187, 192, 193, 194, 195, 199, 203, 204, 206, 209, 210, 214, 216, 220, 223, 228, 229, 231, 236, 238, 242, 260, 261, 264, 265, 268, 286, 305, 315, 317, 320, 321, 323, 324, 325, 327, 328, 329, 330, 336, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 375, 386, 387, 390, 416, 418, 419, 421, 425, 430, 431, 434, 435], "ask": [2, 8, 83, 89, 103, 110, 111, 375, 417, 418, 420, 421, 428, 429, 431, 435], "automat": [2, 3, 5, 28, 41, 71, 74, 91, 96, 98, 105, 111, 118, 124, 127, 130, 131, 132, 138, 150, 151, 152, 153, 157, 158, 172, 182, 185, 197, 216, 228, 245, 261, 265, 297, 305, 306, 310, 373, 410, 415, 417, 420, 421, 428, 429, 430, 432, 434], "hand": [2, 3, 7, 21, 31, 428, 429, 430], "look": [2, 3, 5, 7, 8, 27, 38, 46, 56, 57, 61, 66, 103, 124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 201, 202, 225, 231, 243, 306, 310, 311, 312, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 61, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 93, 94, 101, 110, 124, 127, 131, 138, 150, 151, 157, 158, 175, 178, 181, 189, 201, 202, 209, 216, 222, 225, 227, 236, 244, 261, 265, 293, 296, 313, 325, 329, 330, 343, 353, 364, 365, 366, 367, 369, 370, 371, 372, 375, 415, 417, 427, 430], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 46, 53, 58, 63, 67, 68, 73, 85, 109, 124, 125, 126, 127, 130, 131, 132, 133, 138, 150, 151, 157, 158, 216, 262, 283, 290, 291, 296, 415, 418, 419, 428, 429, 430, 432, 434], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 58, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 210, 233, 239, 411, 415, 423, 432], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 105, 114, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 150, 151, 157, 158, 169, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 193, 194, 195, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 245, 246, 253, 261, 265, 266, 271, 272, 289, 297, 301, 302, 306, 307, 309, 310, 313, 314, 321, 323, 329, 337, 339, 341, 343, 389, 394, 410, 411, 415, 417, 419, 427, 429, 430, 432, 435], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 176, 416, 417, 419, 423, 432, 434, 435], "throw": [2, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 231, 435], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 41, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 105, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 169, 173, 175, 176, 180, 182, 185, 186, 187, 192, 199, 203, 204, 206, 210, 213, 214, 216, 221, 222, 223, 231, 238, 239, 242, 244, 252, 253, 254, 255, 258, 261, 265, 268, 282, 283, 284, 292, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 375, 383, 389, 410, 411, 415, 416, 417, 418, 423, 428, 429, 430, 432, 434, 435], "max": [2, 23, 50, 54, 67, 72, 92, 102, 103, 116, 137, 184, 217, 282, 321, 322, 323, 329, 339, 341, 343, 415, 417, 418, 419, 425], "label": [2, 54, 55, 60, 72, 73, 415, 428, 432], "100": [2, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 105, 110, 111, 116, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 179, 186, 197, 206, 211, 214, 231, 270, 271, 303, 305, 375, 384, 402, 416, 417, 419, 420, 422, 425, 427, 428, 429, 430, 432, 434, 435], "rb_pytre": 2, "randn": [2, 53, 56, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 103, 105, 110, 111, 118, 175, 197, 236, 244, 247, 248, 252, 254, 255, 259, 260, 263, 264, 269, 270, 271, 278, 280, 284, 297, 298, 299, 300, 301, 302, 306, 307, 309, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 391, 410, 419, 432, 434, 435], "c": [2, 3, 6, 7, 31, 52, 54, 56, 58, 59, 66, 67, 68, 73, 88, 97, 197, 218, 223, 263, 264, 416, 432], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 105, 110, 111, 116, 118, 124, 127, 131, 138, 150, 151, 157, 158, 173, 175, 177, 182, 184, 185, 197, 203, 206, 213, 231, 236, 238, 241, 242, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 269, 270, 272, 273, 282, 283, 292, 308, 310, 316, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 361, 418, 419, 432, 434, 435], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 116, 124, 127, 131, 134, 138, 150, 151, 157, 158, 168, 169, 173, 176, 179, 182, 185, 194, 204, 211, 229, 233, 236, 244, 272, 293, 355, 356, 357, 358, 383, 391, 423, 427, 432, 435], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 105, 118, 199, 245, 246, 266, 272, 415, 419, 423, 425, 428, 430, 431, 432, 434], "ambigu": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 114, 124, 127, 131, 138, 150, 151, 157, 158, 167, 173, 180, 201, 216, 221, 222, 225, 227, 231, 309, 411, 415, 419, 420, 430], "deal": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 338, 411, 415, 417, 429, 432], "interpret": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 416], "put": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 131, 142, 143, 158, 161, 162, 229, 382, 406, 410, 416, 417, 418, 420, 428, 430], "solv": [2, 4, 7, 9, 10, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 409, 415, 416, 417, 423, 425, 428, 429, 430, 432], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 135, 138, 150, 151, 157, 158, 231, 384, 420, 423], "cut": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "distinct": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 173, 176, 422, 427], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 150, 151, 157, 158, 170, 231, 255, 259, 263, 266, 420, 430, 432, 434, 435], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 53, 57, 58, 61, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 122, 123, 124, 127, 130, 131, 132, 135, 136, 137, 138, 141, 150, 151, 152, 153, 157, 158, 172, 182, 185, 202, 244, 266, 283, 305, 306, 310, 311, 312, 316, 319, 338, 355, 356, 357, 358, 410, 411, 415, 416, 417, 420, 422, 427, 428, 429, 430, 431, 432, 435], "collate_fn": [2, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 432, 434], "__init__": [2, 3, 7, 127, 144, 159, 168, 170, 173, 182, 185, 203, 242, 253, 255, 259, 263, 268, 314, 321, 323, 324, 329, 336, 341, 343, 345, 346, 412, 430, 435], "major": 2, "worri": [2, 69, 435], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 97, 98, 99, 103, 110, 112, 114, 118, 124, 127, 128, 131, 135, 138, 150, 151, 157, 158, 172, 239, 415, 417, 420, 428, 429, 430, 435], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 266, 417, 428, 429], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 56, 60, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 196, 216, 262, 290, 291, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 416, 421, 424, 430, 432, 435], "latter": [2, 18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 85, 124, 127, 131, 138, 150, 151, 157, 158, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 340, 404, 405], "inv": [2, 3, 179, 184, 187, 192, 199, 206, 211, 213, 224, 430], "obvious": [2, 419], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 78, 94, 124, 127, 131, 138, 150, 151, 157, 158, 184, 187, 210, 218, 231, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 355, 432], "multithread": [2, 3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 145, 146, 423, 432], "thread": [2, 14, 15, 17, 52, 54, 59, 73, 122, 123, 136, 137, 150, 157], "prefetch": [2, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 415, 416, 418, 432], "advis": [2, 11, 86, 424, 435], "benchmark": [2, 3, 9, 122, 123, 136, 137], "techniqu": [2, 8, 150, 157, 416, 419, 423, 432], "real": [2, 5, 89, 310, 411, 418, 419, 430, 431], "life": [2, 186, 431], "adopt": [2, 3, 5, 415, 435], "throughput": [2, 9, 137, 415], "constant": [2, 11, 33, 176, 197, 215, 412, 415, 417, 418, 435], "throughout": [2, 3, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 417, 428, 435], "further": [2, 3, 5, 24, 415, 417, 419, 420], "refin": [2, 89, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353], "coupl": [2, 418, 421, 422, 430, 432], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 41, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 73, 83, 85, 89, 96, 98, 103, 110, 111, 112, 114, 116, 118, 124, 127, 128, 131, 138, 150, 151, 157, 158, 170, 175, 177, 182, 184, 185, 194, 197, 202, 215, 216, 218, 222, 229, 258, 297, 306, 307, 310, 317, 355, 356, 357, 358, 359, 375, 379, 410, 411, 414, 415, 416, 417, 418, 419, 426, 428, 429, 430, 432, 433, 434, 435], "first_elt": 2, "128": [2, 83, 85, 89, 111, 122, 123, 136, 137, 249, 252, 416, 418, 419, 425, 428, 431, 432], "wa": [2, 3, 5, 7, 31, 32, 39, 41, 53, 56, 58, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 109, 110, 124, 127, 131, 138, 150, 151, 157, 158, 176, 222, 233, 239, 263, 320, 322, 335, 337, 340, 342, 344, 361, 411, 416, 417, 420, 421, 427, 428, 432, 434], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 103, 105, 110, 111, 116, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 164, 168, 169, 172, 173, 176, 177, 182, 183, 184, 185, 193, 197, 203, 204, 206, 209, 214, 216, 217, 218, 229, 231, 236, 238, 239, 245, 246, 248, 249, 250, 251, 252, 255, 257, 258, 261, 265, 266, 269, 270, 271, 272, 278, 281, 282, 284, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 312, 314, 317, 338, 373, 402, 410, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 177], "larger": [2, 4, 66, 261, 265, 328, 336, 434], "volum": 2, "due": [2, 3, 5, 23, 422, 431, 432, 435], "memorymappedtensor": [2, 35, 52, 54, 64, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 377, 423], "well": [2, 3, 8, 12, 21, 23, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 103, 108, 112, 119, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 243, 248, 263, 285, 286, 310, 338, 340, 345, 359, 410, 415, 416, 418, 419, 420, 421, 422, 424, 431, 432, 434, 435], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 142, 143, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 181, 182, 183, 185, 209, 212, 215, 219, 223, 224, 231, 242, 263, 309, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 382, 410, 415, 417, 418, 419, 423, 428], "file": [2, 6, 7, 8, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 94, 161, 374, 375, 377, 392, 412, 414, 416, 428, 432, 433], "locat": [2, 7, 52, 54, 59, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 167, 181, 186, 197, 208, 262, 290, 291, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 415, 416, 417, 424, 428, 429, 432], "improv": [2, 4, 11, 190, 320, 411, 419, 428, 429, 432], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 150, 157, 417, 428, 432], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 110, 111, 124, 125, 126, 127, 130, 131, 132, 135, 138, 150, 151, 157, 158, 170, 176, 195, 206, 209, 217, 229, 231, 239, 258, 271, 272, 306, 310, 337, 338, 340, 411, 415, 416, 418, 419, 420, 422, 424, 430, 432, 434], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 62, 63, 71, 74, 75, 76, 77, 78, 96, 103, 148, 149, 184, 220, 241, 263, 264, 328, 418, 419, 423, 432], "sharabl": [2, 150, 157], "collabor": [2, 89], "rather": [2, 4, 114, 148, 149, 204, 410, 411, 415, 416, 417, 420, 422, 428, 429, 432], "incur": [2, 122, 123, 136, 137], "transmiss": 2, "overhead": [2, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 238, 310], "content": [2, 8, 16, 31, 32, 39, 52, 53, 54, 58, 59, 63, 67, 68, 73, 109, 110, 111, 124, 127, 130, 131, 132, 138, 145, 150, 151, 157, 158, 203, 245, 246, 266, 271, 272, 306, 338, 417, 430, 434], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 102, 103, 124, 127, 131, 138, 141, 142, 143, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 169, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 236, 255, 297, 298, 299, 300, 302, 306, 307, 309, 310, 312, 313, 314, 315, 323, 343, 353, 387, 408, 410, 411, 415, 416, 417, 418, 421, 422, 431], "writer": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 98, 103, 105, 106, 110, 116, 117, 118, 121, 417, 432], "tensordictroundrobinwrit": [2, 105], "goe": [2, 4, 73, 152, 153, 415, 417, 428, 429, 435], "prioritizedsampl": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 105, 325, 330, 353, 415, 432], "access": [2, 3, 7, 8, 11, 27, 38, 46, 53, 56, 57, 61, 66, 86, 88, 97, 124, 127, 131, 138, 150, 151, 157, 158, 167, 176, 201, 225, 231, 406, 409, 415, 420, 428, 429, 430, 432, 434], "tensordictreplaybuff": [2, 53, 58, 67, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 105, 110, 111, 116, 175, 176, 389, 402, 408, 415, 416, 418, 432], "mp": [2, 18, 19, 20, 83, 84, 85, 86, 87, 88, 89, 90, 91, 128, 229], "def": [2, 3, 12, 22, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 128, 131, 138, 144, 150, 151, 157, 158, 167, 168, 170, 172, 173, 182, 185, 203, 220, 222, 231, 242, 255, 259, 260, 263, 264, 268, 273, 305, 306, 314, 321, 323, 324, 329, 336, 338, 341, 343, 345, 346, 373, 411, 412, 415, 416, 419, 427, 428, 429, 430, 432, 434, 435], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 52, 53, 54, 56, 58, 59, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 105, 116, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 139, 140, 148, 149, 150, 151, 157, 158, 159, 160, 170, 173, 175, 177, 182, 183, 184, 185, 193, 194, 195, 197, 206, 209, 213, 216, 218, 222, 229, 232, 238, 242, 244, 254, 255, 258, 261, 265, 267, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 306, 307, 309, 312, 314, 353, 356, 357, 358, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 374, 383, 391, 410, 411, 415, 416, 418, 429, 430, 431, 434], "__name__": [2, 3, 14, 15, 22, 128, 373, 416, 434], "__main__": [2, 3, 14, 15, 22, 128, 373, 434], "21": [2, 89, 90, 110, 111, 150, 152, 153, 157], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 46, 56, 57, 61, 66, 124, 127, 128, 131, 138, 150, 151, 157, 158, 215, 221, 231, 281, 309, 310, 320, 321, 322, 323, 324, 325, 327, 329, 330, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 359, 395, 401, 402, 411, 412, 418, 419, 425, 428, 430], "arg": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 103, 105, 110, 111, 112, 114, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 170, 171, 180, 192, 201, 203, 212, 216, 220, 221, 222, 224, 226, 227, 231, 240, 242, 244, 245, 246, 253, 254, 258, 261, 265, 266, 267, 268, 282, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 382, 385, 389, 392, 406, 416, 419], "join": [2, 128, 408, 416, 417, 419, 428], "now": [2, 3, 7, 53, 58, 67, 68, 105, 148, 149, 150, 176, 210, 272, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 431, 432, 435], "20": [2, 66, 72, 90, 110, 111, 116, 124, 127, 131, 135, 138, 148, 149, 150, 151, 157, 158, 215, 231, 257, 259, 260, 263, 264, 281, 301, 383, 418, 432, 435], "_data": [2, 430], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 85, 91, 97, 105, 108, 116, 121, 124, 127, 131, 133, 138, 144, 145, 150, 151, 152, 153, 157, 158, 161, 162, 173, 175, 176, 186, 192, 194, 197, 202, 215, 220, 222, 228, 231, 233, 238, 240, 248, 250, 256, 258, 271, 272, 281, 282, 283, 285, 286, 292, 293, 303, 305, 308, 310, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 344, 346, 353, 354, 355, 373, 382, 387, 409, 410, 411, 415, 416, 418, 419, 420, 428, 429, 430, 431, 432, 434, 435], "difficult": [2, 4, 150, 424], "pai": [2, 8, 176, 415], "word": [2, 3, 11, 60, 83, 85, 87, 89, 90, 91, 338, 415, 423, 430, 435], "1m": [2, 83, 89, 395, 415, 417, 418], "doe": [2, 3, 18, 52, 53, 54, 59, 67, 72, 73, 83, 85, 89, 93, 94, 101, 102, 103, 110, 112, 114, 121, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 229, 243, 252, 253, 259, 260, 261, 263, 264, 265, 274, 281, 293, 301, 311, 312, 320, 322, 330, 337, 338, 340, 354, 392, 411, 412, 415, 416, 417, 418, 420, 423, 428, 430, 432, 435], "howev": [2, 3, 5, 7, 27, 38, 46, 56, 57, 61, 66, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 176, 192, 209, 215, 220, 222, 231, 320, 322, 323, 337, 340, 342, 343, 410, 415, 416, 418, 419, 422, 430, 432, 435], "capac": [2, 53, 58, 67, 68, 96, 98, 102, 110, 118, 417, 423], "There": [2, 10, 105, 243, 261, 265, 320, 340, 410, 411, 412, 417, 418, 419, 421, 423, 428, 429, 430, 432, 434, 435], "circumv": 2, "account": [2, 96, 98, 118, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 172, 269, 270, 410, 416, 418, 432, 435], "save": [2, 3, 8, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 105, 112, 113, 114, 118, 119, 124, 127, 131, 138, 150, 151, 157, 158, 228, 231, 374, 375, 377, 382, 392, 412, 419, 423, 424, 425, 428, 429], "convent": [2, 3, 83, 85, 86, 87, 88, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 161, 162, 411, 415, 418, 428, 429, 430], "overridden": [2, 3, 27, 38, 56, 57, 61, 66, 83, 86, 87, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 355, 357, 358, 418, 428], "dim_extend": [2, 53, 58, 67, 68], "obtain": [2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 83, 124, 127, 131, 138, 150, 151, 157, 158, 175, 201, 215, 227, 242, 244, 281, 283, 389, 415, 417, 420, 421, 422, 428, 429], "counterpart": [2, 3, 176], "desir": [2, 3, 11, 27, 30, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 171, 173, 180, 197, 199, 201, 202, 216, 221, 222, 225, 227, 231, 237, 245, 246, 253, 266, 272, 297, 302, 303, 306, 307, 308, 309, 310, 410, 415, 419, 428, 429, 430, 432], "diversifi": 2, "offer": [2, 3, 7, 122, 123, 124, 127, 131, 136, 137, 138, 142, 143, 150, 151, 157, 158, 220, 373, 410, 415, 416, 419, 420, 422, 423, 428, 430, 432, 435], "accomplish": [2, 124, 127, 131, 138, 150, 151, 157, 158, 233, 420], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 84, 86, 124, 127, 131, 138, 150, 151, 157, 158, 176, 233, 321, 327, 328, 336, 345, 382, 412, 420, 431, 432], "docstr": [2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 420, 421], "extens": [2, 53, 58, 67, 68, 111, 243, 412, 432], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 218, 222, 231, 243, 255, 259, 263, 273, 281, 303, 320, 330, 338, 340, 409, 412, 416, 419, 423, 427, 432], "happi": [2, 419], "concaten": [2, 8, 14, 15, 21, 41, 42, 44, 73, 89, 176, 177, 197, 213, 221, 263, 266, 312, 415, 416, 421, 428, 429, 430, 432, 435], "schedul": [2, 4, 7, 60, 387, 417, 430], "transformedenv": [2, 3, 11, 46, 124, 127, 128, 131, 138, 150, 151, 157, 158, 169, 170, 173, 176, 179, 180, 182, 185, 186, 187, 189, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 220, 221, 229, 231, 261, 265, 305, 375, 415, 416, 417, 418, 419, 420, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "stepcount": [2, 41, 46, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 220, 221, 231, 244, 415, 416, 417, 418, 419, 420, 425, 428, 429, 434], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 41, 46, 64, 66, 116, 124, 127, 128, 131, 133, 138, 150, 151, 157, 158, 169, 172, 173, 176, 179, 180, 186, 192, 193, 194, 197, 199, 204, 205, 206, 209, 211, 215, 216, 217, 220, 221, 222, 223, 229, 231, 244, 261, 265, 305, 373, 375, 402, 408, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 431, 432, 434, 435], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46, 176, 206, 408, 423, 432], "cartpol": [2, 3, 11, 35, 46, 64, 66, 124, 125, 126, 127, 128, 131, 138, 150, 151, 157, 158, 172, 173, 176, 209, 215, 229, 231, 305, 373, 416, 418, 421, 423, 424, 425, 432, 435], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 46, 64, 66, 85, 87, 116, 124, 127, 128, 130, 131, 132, 136, 137, 138, 145, 150, 151, 157, 158, 172, 173, 176, 179, 187, 193, 194, 197, 204, 206, 209, 210, 211, 214, 215, 216, 217, 220, 221, 223, 229, 231, 244, 261, 265, 305, 349, 364, 365, 366, 367, 369, 370, 371, 372, 373, 410, 416, 418, 420, 421, 422, 423, 424, 425, 430, 432, 434, 435], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 46, 122, 123, 124, 127, 131, 136, 137, 138, 144, 150, 151, 152, 153, 157, 158, 169, 170, 173, 176, 180, 182, 183, 185, 194, 197, 203, 206, 221, 222, 223, 224, 231, 232, 242, 255, 268, 284, 286, 297, 302, 306, 307, 321, 323, 325, 327, 341, 343, 345, 346, 402, 410, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 434, 435], "8": [2, 3, 6, 7, 31, 32, 39, 46, 52, 54, 58, 59, 63, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 110, 111, 122, 123, 124, 125, 126, 127, 131, 138, 148, 149, 150, 151, 157, 158, 159, 169, 172, 215, 223, 245, 246, 248, 249, 257, 266, 298, 299, 300, 306, 309, 312, 336, 415, 416, 430, 432, 434], "traj_kei": [2, 103, 110, 111, 432], "truncated_kei": [2, 103, 110, 111, 206, 214], "strict_length": [2, 83, 89, 103, 110, 111, 375], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 46, 53, 56, 57, 58, 61, 63, 64, 66, 68, 69, 73, 96, 98, 102, 103, 110, 111, 118, 124, 127, 131, 138, 150, 151, 157, 158, 181, 201, 206, 209, 220, 222, 227, 231, 260, 261, 264, 265, 284, 296, 303, 305, 306, 308, 309, 310, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 383, 395, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 428, 429, 430, 432, 434, 435], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 64, 66, 68, 71, 74, 75, 76, 77, 78, 111, 124, 127, 131, 138, 150, 151, 157, 158, 231, 347, 411, 415, 416, 417, 418, 425, 428, 432, 434], "break": [2, 5, 14, 15, 16, 21, 27, 38, 46, 56, 57, 58, 61, 66, 68, 83, 86, 87, 89, 90, 91, 92, 103, 110, 111, 116, 124, 127, 131, 138, 150, 151, 157, 158, 173, 176, 206, 229, 231, 261, 265, 290, 375, 416, 419, 423, 425, 432, 434], "step_count": [2, 14, 15, 16, 46, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 214, 231, 417, 418, 419, 420, 425], "32": [2, 22, 31, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 111, 137, 155, 156, 161, 162, 176, 192, 245, 246, 247, 248, 249, 251, 252, 257, 266, 271, 272, 276, 277, 280, 283, 292, 353, 373, 416, 418, 419, 421, 422, 430, 431, 432, 434, 435], "33": [2, 27, 31, 38, 46, 56, 57, 61, 66, 105, 124, 127, 131, 138, 150, 151, 157, 158, 231, 245, 246, 266], "34": [2, 245, 246, 266], "35": [2, 245, 246, 266], "36": 2, "37": [2, 175], "38": [2, 7, 41], "39": [2, 87, 136, 137], "40": [2, 66, 136, 137], "41": [2, 110], "11": [2, 10, 23, 50, 66, 72, 96, 97, 98, 102, 111, 118, 128, 169, 218, 231, 242, 268], "12": [2, 7, 10, 41, 66, 90, 96, 98, 111, 118, 136, 137, 150, 155, 156, 157, 231, 375, 432], "13": [2, 5, 12, 66, 110, 111, 154, 228, 231], "14": [2, 6, 12, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 197, 231], "15": [2, 23, 83, 84, 85, 86, 87, 88, 89, 90, 91, 111, 124, 127, 131, 138, 150, 151, 157, 158, 231, 282, 301, 331, 432], "16": [2, 3, 27, 38, 46, 56, 57, 61, 66, 90, 103, 111, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 176, 231, 418, 432], "17": [2, 11, 90, 110, 111, 131, 150, 169, 231], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 310, 416, 417, 424, 428, 429, 431, 435], "sai": [2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 271, 428, 431, 435], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 44, 50, 58, 67, 68, 98, 99, 103, 106, 110, 111, 118, 124, 127, 130, 131, 132, 135, 138, 150, 151, 157, 158, 182, 185, 202, 209, 220, 271, 272, 307, 320, 323, 340, 416, 417, 418, 419, 428, 429, 430], "handl": [2, 3, 21, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 228, 229, 231, 265, 266, 320, 338, 340, 392, 404, 405, 415, 416, 417, 418, 420, 422, 429, 432], "suggest": [2, 353, 415, 429], "serialenv": [2, 3, 124, 127, 131, 138, 150, 151, 158, 216, 231, 244, 305, 408, 434, 435], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 172, 173, 176, 212, 215, 245, 246, 287, 288, 415, 419, 430, 432], "6": [2, 3, 7, 14, 15, 16, 17, 23, 41, 46, 58, 61, 66, 83, 90, 91, 103, 111, 125, 126, 131, 150, 155, 156, 169, 172, 197, 199, 215, 220, 244, 245, 246, 248, 249, 250, 253, 257, 260, 266, 271, 272, 273, 276, 289, 305, 306, 314, 416, 419, 434], "5": [2, 3, 14, 15, 23, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 50, 53, 58, 61, 63, 66, 67, 68, 83, 105, 110, 111, 116, 124, 127, 128, 131, 136, 137, 138, 142, 143, 145, 150, 151, 155, 156, 157, 158, 161, 162, 169, 172, 173, 175, 195, 206, 213, 214, 215, 220, 231, 241, 242, 243, 244, 245, 246, 248, 249, 254, 255, 256, 257, 259, 262, 263, 266, 268, 271, 272, 276, 281, 284, 290, 291, 301, 302, 305, 307, 313, 337, 340, 342, 345, 346, 373, 410, 414, 415, 416, 419, 421, 425, 428, 429, 430, 432, 433, 434, 435], "7": [2, 3, 6, 10, 41, 46, 50, 53, 58, 66, 67, 103, 111, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 169, 172, 215, 242, 244, 245, 246, 249, 266, 268, 271, 361, 415, 432, 434], "9": [2, 3, 7, 23, 27, 41, 46, 53, 58, 66, 67, 90, 91, 103, 111, 116, 125, 126, 141, 152, 153, 158, 169, 172, 215, 229, 231, 270, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353, 411, 415, 416, 428, 429], "18": [2, 41, 90, 110, 111, 155, 156, 161, 162, 220, 231, 272], "19": [2, 90, 110, 111, 116, 231, 414, 433], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 86, 150, 157, 216, 221, 224, 243, 272, 296, 320, 340, 411, 412, 415, 416, 429, 432, 434], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 83, 86, 88, 91, 92, 122, 124, 125, 127, 131, 136, 138, 141, 142, 143, 145, 148, 150, 151, 152, 153, 154, 157, 158, 161, 162, 163, 167, 183, 184, 187, 192, 204, 209, 210, 214, 219, 220, 222, 225, 228, 231, 239, 261, 265, 302, 307, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 357, 358, 359, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 412, 415, 416, 417, 418, 419, 422, 423, 424, 428, 429, 430, 431, 435], "randomcroptensordict": [2, 415], "unlik": [2, 25, 109, 131, 142, 143, 161, 162, 241, 243, 305, 330, 340, 375, 410, 416, 419, 421, 423, 434], "stop": [2, 3, 16, 21, 60, 91, 103, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 417, 423, 428, 429, 434, 435], "signal": [2, 3, 14, 15, 16, 17, 23, 41, 83, 85, 87, 89, 90, 91, 103, 110, 111, 116, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 176, 186, 195, 214, 217, 239, 411, 415, 417, 428, 429, 432, 435], "disk": [2, 3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 105, 392, 412, 415, 416, 418, 419, 423, 424, 428, 432], "dump": [2, 3, 11, 35, 52, 53, 54, 58, 59, 64, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 105, 112, 114, 118, 373, 374, 375, 424, 425, 428], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 105, 112, 113, 114, 118, 119, 124, 126, 127, 131, 138, 150, 151, 157, 158, 159, 168, 229, 231, 392, 406, 412, 415, 417, 419, 432], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 85, 124, 127, 128, 131, 138, 150, 151, 157, 158, 323, 345, 417, 420, 422, 423, 428, 429, 435], "anticip": [2, 182, 185], "compli": [2, 89, 243, 410], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 71, 74, 75, 76, 77, 78, 85, 124, 127, 131, 138, 150, 151, 157, 158, 219, 228, 233, 273, 297, 302, 303, 306, 307, 308, 309, 310, 417, 419, 428, 429, 430, 432], "exact": [2, 3, 23, 150, 263], "statu": [2, 3, 127], "prioriti": [2, 4, 53, 67, 68, 96, 97, 98, 99, 102, 103, 112, 114, 118, 323, 324, 325, 327, 328, 329, 330, 336, 341, 343, 345, 346, 353, 412, 415, 416, 432], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 41, 46, 56, 57, 60, 61, 66, 83, 85, 86, 87, 89, 90, 91, 124, 125, 126, 127, 130, 131, 132, 133, 138, 150, 151, 154, 157, 158, 195, 213, 231, 243, 297, 302, 303, 306, 307, 308, 309, 310, 338, 355, 356, 357, 358, 359, 375, 411, 415, 416, 421, 428, 430, 435], "hood": [2, 3, 21, 83, 124, 127, 131, 138, 150, 151, 157, 158, 243, 430], "naiv": [2, 225, 420], "just": [2, 3, 4, 12, 73, 114, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 172, 179, 239, 272, 383, 412, 415, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 432, 434, 435], "public": [2, 88, 113, 201, 227], "serializ": 2, "consum": [2, 109, 111, 305, 416, 417, 423, 429, 432], "much": [2, 8, 14, 15, 17, 53, 67, 89, 102, 103, 150, 157, 337, 340, 417, 419, 420, 424, 428, 429, 430, 432, 435], "duplic": [2, 27, 38, 46, 56, 57, 61, 66, 109, 124, 127, 131, 138, 150, 151, 157, 158, 231, 321, 323, 325, 330, 336, 338, 341, 343, 345, 346, 353], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 41, 46, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 103, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 165, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 191, 192, 193, 194, 197, 198, 199, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 238, 244, 247, 248, 249, 250, 251, 252, 255, 258, 261, 265, 271, 276, 277, 280, 281, 282, 284, 285, 297, 298, 299, 300, 301, 302, 305, 306, 307, 314, 315, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 337, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 375, 402, 410, 411, 412, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 432, 434, 435], "plu": [2, 14, 15, 17, 60, 150, 157, 430], "enabl": [2, 7, 8, 85, 96, 98, 109, 118, 173, 261, 265, 282, 305, 373, 375, 387, 417, 420, 428, 429, 430, 432], "three": [2, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 56, 92, 323, 410, 412, 417, 419, 420, 421, 428, 429, 430, 432, 435], "flatstoragecheckpoint": 2, "discard": [2, 3, 72, 85, 87, 131, 225, 238, 374, 432, 435], "compress": 2, "At": [2, 258, 267, 416, 417, 418, 423, 427, 430, 431], "correct": [2, 4, 52, 54, 59, 73, 124, 127, 131, 138, 150, 151, 157, 158, 176, 194, 395, 417, 418], "addit": [2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 73, 85, 124, 127, 128, 131, 138, 150, 151, 157, 158, 161, 176, 180, 201, 216, 219, 221, 222, 225, 227, 231, 240, 259, 301, 305, 309, 319, 338, 355, 373, 375, 411, 415, 416, 419, 420, 428, 429, 432], "nestedstoragecheckpoint": 2, "represent": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 97, 124, 127, 131, 138, 150, 151, 157, 158, 201, 225, 227, 231, 320, 340, 415, 430, 431, 435], "appar": [2, 3, 385], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 93, 94, 101, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 167, 169, 179, 184, 192, 195, 216, 223, 236, 240, 246, 252, 255, 271, 277, 282, 284, 297, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 325, 327, 328, 329, 340, 345, 346, 353, 410, 411, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 435], "assumpt": [2, 3, 71, 430, 432], "accur": [2, 7, 85, 91, 416, 430, 432], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 41, 46, 47, 55, 64, 66, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 103, 110, 111, 124, 125, 126, 127, 130, 131, 132, 138, 142, 143, 150, 151, 152, 153, 157, 158, 159, 161, 162, 169, 186, 187, 192, 196, 203, 206, 210, 214, 216, 222, 223, 231, 239, 261, 265, 291, 305, 361, 415, 417, 420, 428, 435], "marl": [2, 141, 163, 176, 213, 217, 271, 272, 273, 329, 343, 411, 420, 428, 429], "extra": [2, 10, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 176, 229, 231, 238, 382, 410, 417, 418, 432], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 170, 233], "concret": [2, 415, 417], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 41, 46, 64, 66, 122, 123, 124, 127, 131, 136, 137, 138, 144, 150, 151, 157, 158, 172, 197, 204, 209, 215, 217, 222, 231, 419, 423, 425, 430, 434, 435], "manual_se": [2, 3, 25, 35, 42, 43, 53, 58, 64, 66, 67, 68, 86, 90, 91, 97, 110, 111, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 170, 172, 184, 197, 206, 209, 215, 217, 231, 258, 269, 270, 278, 281, 282, 297, 303, 310, 313, 320, 321, 323, 324, 328, 336, 343, 419, 423, 425, 428, 429, 430, 434, 435], "200": [2, 14, 15, 16, 21, 27, 35, 38, 46, 56, 57, 61, 64, 66, 83, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 161, 162, 206, 231, 248, 249, 256, 285, 286, 373, 375, 415, 418, 419, 423, 425, 432], "22": [2, 89, 110, 111, 228], "rb_test": 2, "_storag": [2, 431, 432], "max_siz": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 110, 111, 112, 116, 118, 417, 423], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 52, 54, 59, 73, 145, 220, 252, 269, 270, 271, 319, 323, 373, 415, 417, 419, 428, 429], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 229, 231, 271, 272, 323, 343, 406, 412, 415, 416, 435], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 229, 231, 323, 343, 412, 415], "drawback": 2, "struggl": 2, "big": [2, 417, 423, 432, 435], "sequenti": [2, 9, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 175, 194, 231, 296, 298, 299, 300, 306, 311, 312, 317, 320, 321, 323, 329, 336, 340, 341, 342, 343, 345, 410, 417, 418, 421, 429, 430, 431, 434, 435], "known": [2, 3, 5, 7, 8, 66, 131, 216, 362, 363, 415, 416, 420], "seamless": [2, 266], "integr": [2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 251, 261, 265, 268, 309, 410, 420, 421, 423, 428, 429, 430, 431], "indiffer": 2, "particularli": [2, 419, 434, 435], "heavili": [2, 11], "smooth": [2, 241, 415, 416, 422], "essenti": [2, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 416, 420, 428, 430, 432], "understand": [2, 8, 415, 416, 419, 420, 421, 428, 429], "purpos": [2, 3, 7, 11, 124, 127, 131, 138, 150, 151, 157, 158, 176, 259, 320, 322, 334, 337, 340, 342, 402, 415, 417, 418, 419, 422, 424, 428, 429, 431, 435], "guid": [2, 11, 152, 153, 155, 156, 215, 409, 415, 429, 434], "explan": [2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 243], "effect": [2, 3, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 89, 103, 105, 108, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 172, 176, 222, 231, 243, 392, 410, 415, 421, 428, 432, 435], "realm": [2, 421], "As": [2, 3, 4, 46, 58, 67, 68, 71, 83, 105, 124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 206, 253, 310, 355, 410, 415, 416, 417, 418, 419, 420, 422, 423, 428, 429, 430, 431, 432, 434, 435], "practition": 2, "often": [2, 3, 8, 273, 335, 338, 392, 415, 416, 420, 422, 430, 432, 435], "encount": [2, 4, 89, 305, 409, 416, 421, 430], "situat": [2, 142, 143], "sometim": [2, 3, 71, 418, 435], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 61, 62, 63, 71, 74, 75, 76, 77, 78, 83, 86, 87, 90, 91, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 142, 143, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 259, 260, 261, 263, 264, 265, 268, 298, 299, 300, 338, 341, 412, 416], "immedi": [2, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 354, 428, 429], "199": 2, "info": [2, 3, 14, 15, 53, 58, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 105, 108, 110, 111, 124, 125, 126, 127, 130, 131, 132, 133, 138, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 192, 223, 225, 228, 230, 382, 420, 425, 428, 429, 432, 434], "glanc": [2, 420], "seem": [2, 415, 418, 420], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 60, 62, 63, 97, 124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 176, 202, 213, 259, 261, 263, 265, 292, 298, 299, 300, 315, 410, 416, 418, 420, 428], "less": [2, 145, 293, 404, 405, 411, 417, 418, 432, 434], "omit": [2, 138, 240, 258, 282, 388, 417, 422, 430, 432], "proper": [2, 3, 4, 6, 7, 355, 356, 357, 358, 416, 417, 428, 429, 430, 432], "imposs": [2, 3, 116, 124, 127, 131, 138, 150, 151, 157, 158, 233, 320, 322, 337, 340, 342], "determin": [2, 41, 53, 67, 73, 85, 102, 103, 124, 127, 131, 138, 150, 151, 157, 158, 161, 162, 201, 227, 233, 271, 282, 323, 416, 421, 428, 429], "complic": [2, 56, 66, 430, 432, 435], "matter": [2, 33, 423], "inconsist": [2, 435], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 41, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 238, 311, 312, 320, 323, 343, 409, 415, 418], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 138, 423], "elimin": [2, 3, 420], "upon": [2, 3, 8, 428, 430], "canon": 2, "definit": [2, 50, 112, 271], "markov": [2, 3, 420, 435], "mdp": [2, 238, 420, 430], "context": [2, 3, 5, 8, 27, 38, 46, 56, 57, 61, 66, 111, 124, 127, 128, 131, 138, 147, 150, 151, 157, 158, 216, 224, 231, 243, 261, 265, 272, 274, 296, 301, 351, 352, 355, 356, 357, 358, 360, 368, 375, 387, 410, 411, 415, 416, 417, 418, 419, 428, 429, 430, 431, 432, 434], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 215, 229, 302, 303, 305, 307, 308, 319, 411, 415, 428, 430, 432], "complet": [2, 7, 9, 109, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 176, 214, 409, 411, 415, 417, 420, 427], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 41, 46, 47, 60, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 110, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 169, 172, 173, 186, 192, 203, 216, 223, 231, 239, 242, 261, 265, 268, 305, 311, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 415, 416, 417, 428, 429, 430, 434, 435], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 41, 46, 47, 52, 59, 60, 64, 66, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 103, 116, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 169, 170, 173, 174, 179, 180, 182, 183, 185, 186, 187, 192, 194, 195, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 221, 222, 223, 224, 226, 227, 229, 231, 236, 238, 242, 261, 268, 301, 305, 315, 320, 321, 323, 324, 325, 327, 328, 329, 332, 336, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 385, 386, 387, 390, 406, 411, 412, 415, 416, 417, 418, 419, 420, 424, 428, 429, 430, 434, 435], "imit": [2, 3, 334], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 89, 124, 127, 128, 131, 134, 137, 138, 150, 151, 157, 158, 231, 244, 245, 246, 266, 272, 410, 411, 412, 415, 416, 417, 418, 419, 420, 428, 429, 430, 432, 434], "stateless": [2, 3, 41, 124, 127, 131, 138, 150, 151, 157, 158, 173, 221, 338, 373, 415, 420, 430, 435], "simul": [2, 3, 5, 7, 8, 71, 122, 123, 124, 133, 136, 137, 154, 161, 162, 166, 242, 268, 410, 415, 417, 419, 420, 424, 428, 429], "furthermor": [2, 428, 429], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 124, 127, 131, 138, 150, 151, 157, 158, 168, 190, 214, 222, 231, 258, 260, 264, 337, 415, 416, 417, 419, 425, 428, 429, 435], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 80, 108, 114, 121, 124, 127, 129, 131, 138, 144, 150, 151, 157, 158, 170, 173, 182, 183, 184, 185, 187, 192, 194, 203, 204, 210, 214, 216, 219, 220, 221, 223, 231, 236, 239, 240, 242, 268, 297, 306, 310, 312, 313, 317, 320, 340, 408, 415, 417, 421, 430], "accommod": [2, 3, 420, 421], "uniform": [2, 53, 67, 102, 103, 428], "unambigu": 2, "distinguish": [2, 142, 143, 161, 162], "happen": [2, 3, 12, 124, 127, 131, 138, 150, 151, 157, 158, 282, 416, 419, 422, 423, 424, 431, 435], "everyth": [2, 416, 417, 418, 424, 425], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 89, 228, 229, 310, 415, 423, 429], "rule": [2, 66, 150, 182, 185, 310, 410, 417], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 102, 110, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 169, 173, 182, 185, 186, 187, 192, 199, 203, 204, 206, 210, 213, 214, 216, 220, 222, 223, 231, 238, 242, 244, 254, 255, 261, 265, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 396, 409, 410, 416, 430], "taken": [2, 3, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 124, 127, 131, 138, 150, 151, 157, 158, 169, 205, 269, 270, 411, 415, 417, 418, 421, 428, 429, 430], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 41, 52, 54, 55, 56, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 110, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 169, 173, 182, 185, 186, 187, 192, 199, 203, 204, 206, 210, 213, 214, 216, 223, 229, 238, 242, 244, 254, 255, 261, 265, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 410, 430], "envbas": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 73, 124, 128, 131, 138, 150, 151, 157, 158, 170, 173, 182, 185, 196, 203, 204, 221, 222, 229, 231, 233, 238, 242, 261, 265, 267, 268, 387, 396, 397, 398, 402, 404, 405, 406, 408, 420], "brought": [2, 417, 418, 421], "step_mdp": [2, 3, 124, 127, 131, 138, 150, 151, 157, 158, 261, 265, 408, 418, 420, 430, 434, 435], "count": [2, 3, 41, 46, 73, 127, 128, 214, 220, 282, 387, 392, 395, 415, 416, 417, 418, 432, 435], "trigger": [2, 7, 56, 66], "partial": [2, 3, 124, 127, 131, 138, 150, 151, 157, 158, 175, 176, 215, 216, 217, 306, 392, 418], "turn": [2, 18, 19, 20, 21, 31, 32, 39, 52, 54, 57, 59, 61, 63, 73, 124, 137, 150, 158, 191, 224, 228, 302, 373, 387, 411, 415, 416, 418, 421, 430, 431], "retain": [2, 124, 127, 131, 138, 150, 151, 157, 158], "regard": [2, 85, 91, 255, 303, 320, 330, 340, 415, 417, 430], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 110, 111, 173, 216, 253, 309, 312, 321, 323, 336, 338, 341, 343, 345, 346, 428, 429, 430, 432, 434], "recur": [2, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 359, 421], "anyth": [2, 4, 14, 15, 16, 17, 18, 19, 20, 21, 411], "els": [2, 122, 123, 173, 259, 260, 263, 264, 276, 410, 412, 415, 416, 417, 418, 428, 429, 430, 431], "repetit": [2, 417, 420, 423], "embed": [2, 201, 225, 226, 227, 248, 283, 297, 298, 299, 300, 309, 310, 314, 431], "strictli": [2, 3, 8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 195, 220, 222, 231, 323, 343, 415, 417], "enforc": [2, 27, 38, 46, 56, 57, 61, 66, 109, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 311, 323, 343, 430], "n_action": [2, 305, 321, 323, 325, 327, 339, 343], "rightmost": [2, 411], "n_ob": [2, 124, 127, 131, 138, 150, 151, 157, 158, 194, 305, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 422], "estim": [2, 4, 83, 103, 110, 111, 186, 194, 248, 290, 298, 299, 300, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 411, 416, 417, 421, 422, 428, 429], "subsequ": [2, 27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 172, 231, 418, 428], "proce": [2, 428], "state_valu": [2, 299, 300, 314, 322, 328, 336, 337, 340, 341, 343, 355, 356, 357, 358, 360, 362, 364, 366, 368, 369, 371, 410, 415, 429], "f": [2, 12, 90, 122, 123, 131, 136, 137, 264, 319, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 415, 416, 417, 418, 425, 428, 429, 430, 432, 435], "next_state_valu": [2, 345, 346, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 408], "broadcast": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 253, 329, 343], "left": [2, 83, 85, 89, 103, 110, 173, 180, 181, 182, 183, 187, 194, 201, 203, 204, 210, 214, 217, 219, 221, 223, 225, 227, 231, 258, 271, 416, 417, 419, 423, 424], "would": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 259, 261, 263, 265, 266, 271, 310, 411, 412, 416, 417, 418, 420, 422, 423, 430, 432, 434, 435], "best": [2, 5, 9, 135, 261, 265, 428, 429, 432, 434], "bug": [2, 4], "worst": [2, 416], "twice": [2, 8, 111], "feasibl": 2, "mostli": [2, 3, 17, 281, 375, 411, 424, 432, 435], "eas": [2, 3, 428, 429], "flat": [2, 116], "manner": [2, 131, 201, 225, 410, 415, 416, 417, 423, 427, 430, 432], "ted2flat": [2, 35, 408], "flat2t": [2, 408], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 173, 305], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 125, 126, 127, 131, 138, 150, 151, 157, 158, 189, 190, 192, 212, 213, 214, 217, 220, 222, 224, 231, 323, 343, 411, 417, 428, 429, 430, 432], "both": [2, 3, 7, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 89, 124, 127, 128, 130, 131, 138, 142, 143, 150, 151, 152, 153, 157, 158, 159, 169, 176, 192, 204, 219, 220, 222, 231, 239, 245, 246, 261, 264, 265, 266, 271, 272, 298, 299, 300, 303, 308, 320, 322, 323, 324, 328, 329, 336, 337, 338, 340, 341, 342, 343, 345, 346, 387, 410, 415, 417, 419, 420, 422, 428, 429, 430, 431, 432, 435], "mark": [2, 3, 16, 91, 124, 127, 131, 138, 150, 151, 157, 158, 261, 265, 355, 357, 358, 423, 432], "identifi": [2, 55, 124, 127, 131, 138, 150, 151, 157, 158], "abov": [2, 3, 7, 27, 38, 46, 56, 57, 61, 66, 74, 124, 127, 131, 138, 150, 151, 157, 158, 231, 262, 290, 291, 319, 411, 412, 415, 417, 419, 420, 421, 428, 429, 430, 435], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 85, 86, 87, 88, 89, 90, 91, 103, 110, 111, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 173, 174, 176, 179, 180, 181, 182, 183, 185, 187, 192, 194, 197, 201, 203, 204, 209, 210, 213, 214, 217, 219, 221, 222, 223, 225, 227, 228, 231, 233, 239, 240, 245, 246, 247, 248, 249, 252, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 271, 272, 279, 281, 282, 284, 293, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 375, 383, 410, 411, 415, 416, 417, 418, 419, 420, 421, 424, 427, 428, 429, 430, 431, 434, 435], "typic": [2, 3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 186, 215, 231, 279, 281, 306, 321, 323, 338, 340, 343, 410, 411, 412, 417, 419, 420, 422, 423, 428, 429, 430], "adjust": [2, 11, 216, 415, 428, 429, 430], "grumodul": [2, 175, 216, 296, 317, 418], "lstmmodul": [2, 261, 296, 418, 419], "skip": [2, 3, 27, 38, 46, 56, 57, 61, 66, 83, 124, 127, 131, 138, 150, 151, 157, 158, 190, 192, 220, 222, 231, 233, 306, 310, 323, 338, 343, 355, 356, 357, 358, 374, 375, 385, 387, 415, 416, 430], "accumul": [2, 8, 231], "upcom": [2, 338, 364, 365, 366, 367, 369, 370, 371, 372, 415], "popular": [2, 3, 410, 418, 422, 429], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 231, 408, 416], "shift": [2, 35, 37, 46, 47, 64, 93, 94, 101, 316, 355, 356, 357, 358, 417], "approxim": [2, 429, 435], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 176, 252, 280, 320, 326, 339, 340, 383, 406, 417, 418, 429, 432], "2x": 2, "small": [2, 111, 225, 241, 415, 417, 419, 428, 429, 435], "clearer": [2, 419, 421], "lazi": [2, 62, 63, 80, 81, 124, 127, 131, 138, 150, 151, 157, 158, 161, 162, 201, 225, 245, 271, 274, 311, 312, 415, 416, 421, 423, 427, 432, 435], "certainli": 2, "benefici": 2, "welcom": [2, 420], "wrapper": [2, 3, 12, 17, 52, 54, 59, 60, 67, 68, 73, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 228, 232, 243, 244, 293, 301, 305, 310, 315, 355, 380, 381, 382, 406, 408, 417, 418, 420, 428, 429, 431, 434, 435], "around": [2, 5, 7, 17, 67, 68, 124, 127, 131, 138, 144, 150, 151, 157, 158, 232, 243, 281, 305, 310, 355, 415, 416, 429, 435], "selecttransform": [2, 124, 127, 131, 138, 150, 151, 157, 158], "excludetransform": [2, 90, 210, 432], "promptli": 2, "virtual": [2, 3, 130], "instal": [2, 3, 5, 10, 18, 19, 20, 57, 66, 85, 88, 124, 127, 131, 138, 150, 151, 152, 153, 155, 156, 157, 158, 377, 392, 409, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 435], "respons": [2, 3, 8, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 392, 422, 423, 435], "d4rl": [2, 85, 91], "repositori": [2, 7, 86, 87, 88, 91, 161, 162, 428, 429], "wheel": [2, 417], "publish": 2, "openml": [2, 88, 147], "scikit": [2, 88, 147], "panda": [2, 88], "raw": [2, 3, 4, 60, 192, 219, 223, 262, 290, 291, 416, 419, 423, 430], "go": [2, 3, 7, 48, 97, 141, 150, 202, 206, 301, 361, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "natur": [2, 3, 415, 421, 422, 423, 432], "modifi": [2, 3, 7, 8, 27, 38, 46, 56, 57, 61, 66, 72, 124, 127, 131, 138, 150, 151, 157, 158, 173, 176, 180, 189, 192, 194, 201, 216, 221, 222, 225, 227, 231, 273, 282, 301, 309, 310, 395, 411, 415, 416, 417, 419, 420, 428, 429, 430], "fly": [2, 176, 229, 337, 411, 417, 430, 432, 435], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 179, 424, 435], "pre": [2, 7, 22, 27, 38, 46, 56, 57, 61, 66, 72, 89, 98, 124, 127, 131, 138, 150, 151, 157, 158, 201, 219, 225, 227, 231, 435], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 150, 151, 157, 158, 170, 172, 173, 175, 176, 177, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 200, 202, 203, 204, 206, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 243, 259, 263, 273, 290, 302, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 355, 373, 388, 412, 415, 416, 417, 423, 428, 430, 434, 435], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 86, 103, 110, 116, 135, 136, 137, 150, 152, 153, 179, 209, 245, 246, 256, 258, 271, 272, 305, 375, 377, 380, 382, 392, 404, 405, 415, 416, 417, 418, 419, 421, 422, 425, 428, 429, 432, 434], "pipelin": [2, 3, 7, 410, 411, 417], "replac": [2, 3, 6, 7, 46, 83, 89, 103, 110, 111, 172, 184, 186, 193, 238, 258, 410, 428, 432, 434], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 105, 124, 127, 131, 138, 150, 151, 157, 158, 172, 206, 222, 231, 240, 282, 305, 390, 410, 412, 416, 417, 418, 421, 424, 430, 432, 435], "produc": [2, 3, 31, 32, 39, 41, 63, 110, 169, 172, 173, 245, 246, 266, 272, 278, 298, 300, 301, 310, 375, 417, 418, 419, 420, 421, 423, 432, 435], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 89, 93, 109, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 220, 222, 231, 243, 320, 321, 323, 336, 338, 340, 341, 342, 343, 345, 346, 417], "download": [2, 7, 10, 83, 85, 86, 87, 89, 90, 91, 135, 201, 227, 375, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 151, 416, 428, 429, 430], "robosetexperiencereplai": [2, 110, 111], "fk1": [2, 90], "v4": [2, 90, 131, 150, 169, 205, 364, 365, 366, 367, 369, 370, 371, 372, 415, 417, 431, 434], "expert": [2, 90], "fk1_microopenrandom_v2d": [2, 90], "func": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 230], "obs_norm": 2, "norm": [2, 4, 8, 122, 123, 241, 392, 415, 416, 417, 428, 429, 430], "num_work": [2, 52, 54, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 145, 150, 157, 415, 416], "os": [2, 54, 72, 92, 416], "cpu_count": [2, 54, 72, 92], "num_chunk": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91], "1000": [2, 4, 41, 58, 66, 96, 97, 102, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 176, 229, 240, 258, 281, 282, 306, 310, 335, 415, 416, 417, 418, 419, 421, 423, 425, 430, 431, 432], "mp_start_method": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 150, 157, 220, 416, 434], "fork": [2, 5, 83, 84, 85, 86, 87, 88, 89, 90, 91, 415, 416, 417, 418, 428, 429, 431, 434], "recreat": [2, 430], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 58, 67, 68, 103, 105, 110, 124, 127, 131, 138, 150, 151, 157, 158, 173, 194, 419, 423, 431], "grain": [2, 3, 58, 67, 68, 103, 105, 110, 124, 127, 131, 138, 150, 151, 157, 158, 173], "nomenclatur": 2, "compact": [2, 41, 64, 93, 94, 101], "propos": [2, 176, 186, 243, 267, 335, 344, 410, 418, 432], "replaybufferensembl": [2, 83, 108, 114, 121], "primit": [2, 3, 4, 89, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 103, 105, 116, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 231, 415, 429], "dummi": [2, 3, 158, 373, 415, 419, 423, 435], "semant": [2, 62, 63, 130, 132, 431], "ident": [2, 3, 14, 15, 16, 46, 52, 54, 58, 59, 66, 67, 68, 73, 96, 105, 110, 124, 127, 130, 131, 132, 138, 145, 150, 151, 157, 158, 186, 213, 241, 271, 272, 321, 323, 336, 341, 343, 345, 346, 355, 356, 357, 358, 404, 405, 416, 420, 428, 429], "another_kei": [2, 105], "renam": [2, 3, 52, 54, 59, 73, 105, 204, 206, 238, 415], "resiz": [2, 3, 91, 105, 176, 416, 418, 419, 420, 432, 435], "imag": [2, 3, 4, 7, 11, 89, 176, 178, 181, 201, 218, 227, 266, 373, 375, 415, 416, 419, 420, 424, 429, 431, 435], "comops": 2, "totensorimag": [2, 3, 91, 105, 176, 205, 416, 418, 419, 432, 434, 435], "renametransform": [2, 3, 105, 124, 127, 131, 138, 150, 151, 157, 158, 176], "rb0": [2, 105], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 122, 123, 124, 127, 131, 138, 144, 150, 151, 157, 158, 165, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 191, 192, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 242, 244, 254, 261, 265, 268, 283, 292, 293, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 334, 336, 337, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 374, 375, 402, 410, 415, 416, 417, 418, 419, 421, 422, 425, 427, 428, 429, 430, 431, 432, 434, 435], "pixel": [2, 3, 7, 31, 91, 105, 124, 125, 126, 130, 132, 133, 154, 176, 178, 181, 186, 189, 191, 197, 199, 201, 205, 218, 225, 227, 248, 276, 277, 373, 375, 415, 416, 418, 419, 424, 428, 431, 432, 434, 435], "rb1": [2, 105], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 122, 123, 124, 127, 131, 138, 144, 150, 151, 157, 158, 165, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 189, 191, 192, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 242, 244, 254, 255, 261, 265, 268, 283, 284, 292, 293, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 322, 323, 328, 329, 334, 336, 337, 340, 341, 342, 343, 345, 353, 355, 356, 357, 358, 373, 375, 387, 402, 410, 415, 416, 417, 418, 419, 421, 425, 427, 428, 429, 430, 431, 432, 434, 435], "pixels33": [2, 105], "data0": [2, 97, 105], "244": [2, 105, 201, 227], "data1": [2, 97, 105, 434], "_": [2, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 105, 124, 128, 135, 161, 162, 177, 182, 184, 185, 194, 197, 204, 218, 229, 231, 281, 297, 309, 310, 314, 319, 320, 321, 323, 324, 328, 329, 336, 340, 341, 343, 345, 346, 355, 356, 357, 358, 377, 415, 416, 417, 418, 419, 425, 428, 429, 430, 432, 434], "rang": [2, 3, 4, 8, 12, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 105, 116, 124, 127, 128, 131, 138, 142, 143, 150, 151, 157, 158, 206, 218, 229, 231, 260, 264, 281, 337, 345, 346, 411, 412, 415, 417, 418, 419, 422, 423, 425, 428, 429, 430, 432, 434], "parent": [2, 3, 21, 37, 71, 73, 84, 105, 114, 121, 124, 127, 131, 138, 150, 151, 157, 158, 169, 173, 176, 177, 180, 183, 186, 189, 190, 197, 201, 209, 214, 215, 216, 217, 220, 221, 224, 225, 231, 261, 265, 298, 317, 338, 340, 359, 373, 375, 415, 423, 430, 434, 435], "basic": [2, 144, 410, 417, 422, 423, 425, 428, 434, 435], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 144, 150, 151, 157, 158, 172, 220, 221, 222, 229, 231, 253, 262, 270, 274, 278, 289, 290, 291, 305, 320, 323, 338, 340, 342, 343, 421, 423, 430, 432], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 113, 119, 124, 127, 131, 138, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 238, 239, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 274, 275, 282, 284, 285, 286, 287, 288, 290, 293, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 386, 390, 395, 402, 410, 411, 412, 415, 416, 417, 418, 419, 420, 428, 429, 430, 434, 435], "send": [2, 3, 8, 382, 434], "receiv": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 221, 222, 231, 266, 361, 411, 415, 417, 422, 427, 430], "spawn": [2, 3, 4, 18, 22, 135, 145, 150, 157, 220, 416, 428, 429], "check_env_spec": [2, 3, 124, 127, 131, 138, 150, 151, 157, 158, 169, 192, 203, 223, 373, 408, 417, 428, 429, 430], "saniti": [2, 3, 7, 124, 127, 131, 138, 150, 151, 157, 158, 233, 417], "make_composite_from_td": [2, 71, 408, 430], "fall": [2, 4, 85], "categori": [2, 31, 86, 410, 412], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 46, 56, 57, 61, 66, 74, 124, 127, 131, 138, 150, 151, 157, 158, 179, 196, 229, 231, 232, 240, 258, 282, 285, 286, 297, 302, 303, 306, 307, 308, 309, 310, 313, 320, 321, 323, 324, 336, 340, 341, 343, 345, 346, 408, 410, 415, 416, 417, 419, 428, 430, 434, 435], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 144, 150, 151, 157, 158, 170, 173, 182, 185, 203, 216, 236, 242, 268, 297, 309, 312, 314, 342, 408, 430, 432], "boundeddiscret": [2, 28, 31], "boundedcontinu": [2, 22, 28, 31, 124, 127, 131, 138, 150, 151, 157, 158, 192, 195, 223], "unboundeddiscret": [2, 74, 151, 192, 408], "unboundedcontinu": [2, 74, 124, 127, 131, 138, 150, 151, 157, 158, 203, 216, 236, 312, 317, 408], "implicitli": 2, "onehot": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 51, 62, 63, 71, 74, 75, 76, 77, 78, 122, 123, 130, 132, 133, 136, 137, 145, 146, 148, 149, 154, 159, 160, 255, 284, 302, 307, 325, 327, 328, 329, 353, 408, 410], "multionehot": [2, 42, 43, 45, 325, 328, 329, 353, 408], "multicategor": [2, 43, 44, 45, 408], "binari": [2, 3, 7, 26, 27, 50, 159, 170, 174, 255, 284, 302, 303, 307, 308, 325, 328, 329, 353, 408], "concept": [2, 3, 124, 127, 131, 138, 150, 151, 157, 158, 281, 416, 432], "arbitrari": [2, 3, 25, 50, 58, 124, 127, 131, 137, 138, 150, 151, 157, 158, 172, 411, 415, 416, 430, 432], "combin": [2, 4, 36, 57, 221, 345, 416, 419, 424, 432, 434], "relat": [2, 3, 4, 10, 53, 150, 189, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 416, 425, 430], "nevertheless": [2, 3, 417, 420, 432], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 103, 105, 110, 111, 122, 123, 124, 127, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 176, 177, 184, 192, 197, 215, 216, 217, 220, 222, 229, 231, 241, 243, 259, 262, 263, 271, 272, 290, 291, 296, 302, 307, 310, 313, 321, 323, 332, 338, 339, 343, 355, 357, 358, 387, 389, 411, 412, 415, 416, 417, 418, 430, 435], "similarli": [2, 3, 21, 27, 38, 46, 56, 57, 61, 66, 109, 114, 124, 127, 131, 138, 150, 151, 157, 158, 231, 271, 311, 312, 328, 336, 435], "possess": [2, 71, 85], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 103, 170, 173, 176, 177, 218, 224, 236, 415, 418, 419, 428, 429, 430], "move": [2, 4, 27, 38, 46, 56, 57, 61, 66, 71, 91, 124, 127, 131, 132, 138, 150, 151, 157, 158, 169, 180, 183, 201, 216, 221, 222, 225, 227, 229, 231, 238, 266, 309, 390, 415, 416, 418, 420, 435], "unbind": [2, 52, 53, 54, 58, 59, 67, 68, 73, 261, 265], "said": [2, 417], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 56, 67, 71, 102, 103, 176, 189, 202, 213, 224, 322, 331, 337, 340, 355, 357, 358, 411, 417, 428, 429, 430], "seen": [2, 3, 18, 19, 20, 21, 31, 32, 39, 63, 124, 127, 131, 138, 150, 151, 157, 158, 183, 411, 415, 416, 418, 422, 428, 429, 432], "predict": [2, 3, 46, 60, 254, 256, 267, 268, 301, 315, 320, 322, 327, 330, 332, 333, 337, 340, 342, 354, 415, 416, 422], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 56, 57, 61, 66, 76, 78, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 261, 265, 320, 322, 323, 325, 328, 329, 330, 336, 337, 340, 341, 342, 343, 353, 355, 356, 357, 358, 363, 435], "mont": [2, 320, 322, 337, 340, 415], "carlo": [2, 320, 322, 337, 340, 415], "mct": [2, 41], "act": [2, 3, 4, 110, 111, 152, 153, 222, 254, 272, 321, 323, 324, 336, 341, 343, 345, 346, 418, 419, 428, 429, 432, 434], "tradit": [2, 422, 428], "integ": [2, 14, 15, 16, 17, 23, 38, 42, 44, 46, 50, 56, 57, 60, 61, 73, 103, 110, 111, 112, 124, 127, 131, 138, 150, 151, 157, 158, 169, 172, 186, 190, 197, 214, 245, 246, 266, 271, 272, 323, 328, 336, 343, 411, 419, 432], "advanc": [2, 3, 21, 53, 58, 67, 68, 124, 127, 131, 138, 150, 151, 157, 158, 420, 423, 432], "rebuild": [2, 41], "initi": [2, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 116, 124, 127, 131, 138, 148, 149, 150, 151, 157, 158, 159, 175, 197, 201, 216, 221, 222, 225, 230, 231, 240, 241, 242, 258, 259, 260, 263, 264, 268, 271, 272, 273, 274, 275, 282, 305, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 406, 410, 411, 415, 416, 418, 420, 421, 423, 428, 430, 435], "pair": [2, 3, 46, 52, 54, 56, 59, 66, 73, 85, 124, 125, 126, 127, 131, 138, 150, 151, 157, 158, 206, 216, 220, 261, 298, 306, 310, 338, 355, 356, 357, 358, 359, 410, 411, 415, 416, 417, 421, 422, 427, 430, 435], "term": [2, 60, 97, 194, 263, 264, 274, 275, 319, 320, 329, 394, 416, 417, 420, 421, 429], "pseudocod": [2, 3], "next_stat": [2, 411], "associ": [2, 3, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 220, 231, 285, 406, 415, 432], "sens": [2, 4, 52, 54, 59, 73, 176, 423, 430], "hard": [2, 3, 7, 116, 125, 126, 150, 335, 416, 435], "let": [2, 3, 6, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 176, 192, 231, 261, 265, 271, 272, 302, 387, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435], "know": [2, 3, 4, 9, 53, 58, 67, 68, 130, 132, 192, 240, 338, 341, 387, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 432], "next_td": 2, "Of": [2, 3, 7, 409, 430, 435], "cours": [2, 3, 4, 409, 430, 435], "handi": [2, 3, 124, 127, 131, 138, 150, 151, 157, 158, 424], "undertaken": [2, 73, 411, 430], "link": [2, 6, 7, 127, 416, 425], "hash": [2, 38, 41, 56, 57, 61, 66, 73, 124, 138], "past": [2, 4, 176, 305, 416, 432], "node_map": [2, 41], "_index": [2, 56, 66], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 228, 417, 427], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 68, 102, 103, 109, 124, 209, 229, 231, 282, 305, 380, 385, 416, 418, 420, 423, 429, 430, 432], "next_data": [2, 124, 127, 131, 138, 150, 151, 157, 158], "data_map": [2, 41], "form": [2, 14, 15, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231, 259, 261, 263, 265, 310, 319, 320, 322, 337, 340, 392, 410, 421, 429], "figur": [2, 3, 73, 138, 415, 417, 418, 429, 430, 435], "flowchart": 2, "o": [2, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 264], "get_tre": [2, 41], "vertex": [2, 73], "longer": [2, 12, 73, 416, 425, 428, 429, 432], "vertic": [2, 73], "branch": [2, 41, 73], "repeat": [2, 73, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 150, 151, 154, 157, 158, 242, 253, 417, 428, 429, 430], "depth": [2, 58, 71, 124, 127, 131, 138, 144, 150, 151, 154, 157, 158, 242, 245, 246, 248, 249, 250, 251, 256, 257, 266, 268, 271, 272, 273, 276, 277, 302, 410, 416, 420, 422, 423, 427, 428, 429, 432], "until": [2, 3, 7, 21, 137, 217, 221, 231, 417, 418, 425, 428, 429], "anymor": [2, 52, 54, 59, 73, 222, 309], "utmost": 2, "commonli": [2, 103, 110, 111, 435], "emploi": [2, 275], "languag": [2, 24, 60], "scarc": 2, "address": [2, 432], "subdomain": 2, "facilit": [2, 3, 7, 200, 201, 216, 225, 227, 298, 299, 300, 410, 415, 418, 421, 430], "extern": [2, 3, 182, 185, 428, 435], "token": [2, 54, 55, 60, 69, 72, 92, 138], "dm": [3, 415, 435], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 53, 58, 61, 67, 68, 72, 89, 107, 113, 116, 117, 119, 120, 122, 123, 124, 127, 131, 135, 136, 137, 138, 144, 145, 146, 150, 151, 157, 158, 161, 183, 206, 219, 225, 226, 238, 261, 265, 271, 273, 298, 304, 320, 321, 323, 324, 325, 327, 328, 329, 331, 336, 340, 341, 342, 343, 345, 346, 382, 392, 410, 411, 412, 415, 416, 418, 420, 421, 422, 424, 428, 429, 430, 432, 435], "abl": [3, 41, 141, 152, 153, 261, 265, 415, 417, 418, 421, 427, 428, 429, 430, 432], "experi": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 102, 103, 124, 127, 131, 138, 150, 151, 157, 158, 233, 377, 378, 379, 380, 381, 382, 409, 416, 417, 419, 423, 424, 428, 429, 432], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 130, 132, 273, 338], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 124, 127, 128, 131, 138, 142, 143, 150, 151, 152, 153, 155, 156, 157, 158, 176, 179, 186, 193, 194, 197, 199, 204, 206, 209, 216, 221, 228, 229, 231, 373, 402, 415, 416, 417, 418, 427, 429, 431, 432, 434, 435], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 122, 123, 124, 127, 131, 138, 144, 150, 151, 157, 158, 180, 184, 186, 194, 201, 216, 221, 222, 225, 227, 231, 242, 244, 245, 246, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 311, 312, 314, 317, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 402, 410, 411, 415, 416, 417, 418, 419, 421, 422, 425, 427, 428, 429, 430, 431, 434], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 56, 57, 61, 66, 74, 105, 124, 127, 131, 138, 150, 151, 157, 158, 171, 172, 221, 228, 233, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 309, 310, 311, 313, 316, 338, 340, 416, 418, 423, 430, 432], "organis": [3, 90, 124, 127, 131, 138, 150, 151, 157, 158, 222, 416], "attribut": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 124, 127, 130, 131, 132, 137, 138, 150, 151, 157, 158, 169, 186, 201, 222, 225, 229, 231, 261, 265, 310, 320, 321, 323, 324, 325, 327, 329, 330, 331, 334, 336, 338, 340, 341, 342, 343, 345, 346, 353, 415, 418, 430], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 144, 150, 151, 157, 158, 186, 231], "actual": [3, 4, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 83, 85, 86, 87, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 228, 395, 411, 415, 417, 419, 428, 429, 430], "retriev": [3, 41, 52, 53, 54, 56, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 108, 110, 111, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 177, 183, 186, 197, 238, 242, 245, 268, 305, 306, 310, 313, 317, 320, 321, 322, 323, 325, 337, 340, 341, 343, 345, 346, 353, 355, 356, 357, 358, 406, 412, 416, 417, 421, 430, 435], "care": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 221, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 375, 415, 417, 419, 428, 429, 430, 432], "parametr": [3, 275, 310, 321, 323, 328, 336, 343, 415, 417], "hardwar": [3, 419], "observation_spec": [3, 41, 124, 127, 131, 138, 144, 150, 151, 157, 158, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 191, 192, 193, 194, 197, 199, 201, 203, 205, 209, 211, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 228, 229, 231, 242, 261, 265, 268, 396, 402, 415, 417, 422, 427, 428, 429, 430, 435], "state_spec": [3, 124, 127, 131, 138, 144, 150, 151, 157, 158, 170, 180, 183, 197, 221, 223, 224, 231, 242, 268, 430, 435], "reward_spec": [3, 124, 127, 131, 138, 144, 150, 151, 157, 158, 170, 173, 174, 179, 180, 182, 183, 185, 195, 203, 207, 208, 209, 211, 213, 221, 223, 224, 231, 242, 268, 417, 428, 429, 430, 435], "done_spec": [3, 124, 127, 131, 138, 150, 151, 157, 158, 182, 183, 185, 186, 203, 213, 221, 223, 231, 239, 428, 429, 430, 435], "flag": [3, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162, 193, 282, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 410, 428, 429, 430, 431], "input_spec": [3, 73, 124, 127, 131, 138, 144, 150, 151, 157, 158, 169, 173, 180, 182, 183, 184, 199, 203, 204, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 226, 231, 417, 430], "full_action_spec": [3, 73, 124, 127, 131, 138, 148, 149, 150, 151, 157, 158, 159, 160, 169, 183, 242, 268, 428, 429], "full_state_spec": [3, 41, 73, 124, 127, 131, 138, 150, 151, 157, 158, 169, 183, 242, 268], "output_spec": [3, 73, 124, 127, 131, 138, 150, 151, 157, 158, 173, 180, 182, 183, 187, 194, 203, 204, 210, 214, 219, 221, 222, 223, 231, 430], "full_observation_spec": [3, 73, 124, 127, 131, 138, 150, 151, 157, 158, 242, 268], "full_reward_spec": [3, 73, 124, 127, 131, 138, 150, 151, 157, 158, 173, 183, 203, 428, 429], "full_done_spec": [3, 73, 124, 127, 131, 138, 150, 151, 157, 158, 173, 183, 203, 239, 428, 429], "carri": [3, 21, 44, 72, 124, 127, 131, 138, 150, 151, 157, 158, 216, 338, 416, 418, 428, 429, 430, 432], "nontensor": [3, 49, 192, 223, 408], "spec_lock": [3, 127], "modif": [3, 5, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 124, 127, 131, 138, 150, 151, 157, 158, 189, 192, 231, 239, 338, 411, 417, 430], "children": [3, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 231], "unlock": [3, 31, 32, 39, 52, 54, 59, 63, 73, 124, 127, 131, 138, 150, 151, 157, 158], "set_spec_lock_": [3, 124, 127, 131, 138, 150, 151, 157, 158], "reason": [3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 89, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 201, 225, 231, 265, 411, 415, 416, 417, 422, 423, 428, 430, 432], "easi": [3, 5, 11, 83, 88, 124, 125, 126, 127, 131, 136, 137, 138, 150, 151, 157, 158, 240, 258, 282, 410, 411, 415, 416, 417, 429, 431, 432, 434, 435], "cach": [3, 52, 54, 72, 83, 85, 86, 87, 89, 90, 91, 92, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 172, 182, 185, 201, 222, 227, 238, 243, 384], "principl": [3, 221], "new_spec": 3, "eras": [3, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 222], "relock": 3, "previous": [3, 4, 41, 417, 435], "importantli": [3, 306, 310], "action_s": 3, "help": [3, 4, 27, 38, 46, 56, 57, 61, 66, 71, 124, 127, 131, 138, 150, 151, 157, 158, 176, 186, 231, 320, 322, 337, 340, 342, 409, 411, 415, 416, 417, 418, 428, 429], "With": [3, 136, 137, 141, 215, 412, 416, 427, 428, 429, 432, 435], "necessarili": [3, 124, 127, 131, 138, 150, 151, 157, 158, 435], "present": [3, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 105, 109, 124, 127, 130, 131, 138, 150, 151, 157, 158, 187, 206, 210, 216, 220, 222, 231, 238, 239, 246, 247, 248, 249, 250, 251, 257, 261, 263, 265, 275, 280, 282, 305, 309, 310, 311, 312, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 406, 412, 415, 425, 427, 428, 429, 432, 434], "0s": [3, 83, 89, 216, 418], "step_and_maybe_reset": [3, 124, 127, 131, 138, 150, 151, 157, 158, 420], "done_kei": [3, 23, 35, 37, 41, 47, 64, 93, 94, 101, 110, 124, 127, 131, 138, 150, 151, 157, 158, 172, 176, 186, 206, 214, 231, 238, 428, 429], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 74, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 324, 325, 327, 343, 417, 421, 428, 429, 432], "_reset": [3, 124, 127, 131, 138, 144, 150, 151, 157, 158, 170, 172, 173, 176, 182, 185, 193, 203, 239, 242, 268, 428], "data_": [3, 124, 127, 131, 138, 150, 151, 157, 158], "append": [3, 8, 11, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 128, 131, 138, 150, 151, 157, 158, 172, 179, 180, 206, 216, 222, 228, 260, 261, 264, 265, 302, 307, 415, 416, 417, 418, 419, 428, 429, 430, 431, 432, 434], "seed": [3, 14, 15, 16, 17, 21, 58, 67, 68, 90, 105, 124, 127, 131, 138, 144, 150, 151, 152, 153, 157, 158, 161, 162, 170, 173, 182, 185, 192, 203, 222, 233, 373, 392, 428], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 237, 247, 256, 276, 286, 297, 306, 309, 310, 313, 321, 338, 387, 410, 415, 416, 417, 418, 419, 421, 422, 425, 428, 430, 434, 435], "preced": [3, 46, 124, 176, 418], "risk": [3, 202], "overlap": [3, 67, 116], "reproduc": [3, 57, 61, 124, 127, 131, 138, 150, 151, 157, 158, 176, 192, 233, 415, 417, 419, 429], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 46, 52, 54, 55, 60, 66, 69, 72, 73, 74, 92, 96, 97, 98, 99, 102, 103, 118, 124, 127, 131, 138, 150, 151, 157, 158, 184, 207, 214, 215, 217, 241, 289, 290, 291, 313, 321, 323, 328, 329, 336, 338, 339, 343, 375, 389, 410, 415, 416, 417, 418, 421, 428, 429, 432], "max_step": [3, 11, 116, 124, 127, 131, 138, 142, 143, 144, 150, 151, 157, 158, 161, 162, 214, 220, 231, 373, 420, 421, 422, 424, 425, 428, 429, 434, 435], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 56, 60, 66, 122, 123, 124, 127, 131, 138, 144, 150, 151, 157, 158, 175, 194, 244, 255, 261, 265, 268, 283, 284, 292, 293, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 312, 313, 315, 317, 321, 323, 324, 328, 329, 331, 332, 333, 334, 336, 338, 341, 343, 345, 346, 353, 354, 355, 356, 357, 358, 387, 402, 408, 415, 417, 418, 422, 425, 427, 428, 429, 430, 431, 435], "trail": [3, 229], "treat": [3, 46, 411, 421, 422], "brief": [3, 417, 420, 422, 432], "deliveri": 3, "design": [3, 27, 38, 46, 50, 56, 57, 61, 66, 108, 114, 121, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 169, 176, 192, 202, 220, 222, 231, 301, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 415, 416, 417, 418, 420, 421, 422, 427, 428, 429, 430, 432, 434, 435], "metaclass": [3, 127], "everi": [3, 8, 27, 31, 32, 38, 39, 46, 50, 53, 56, 57, 58, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 112, 124, 127, 131, 138, 150, 151, 157, 158, 214, 215, 229, 231, 236, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 338, 392, 412, 415, 416, 417, 418, 420, 421, 428, 429, 430], "flank": [3, 411, 418], "dual": 3, "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 176, 192, 220, 222, 229, 231, 242, 255, 256, 268, 269, 270, 271, 272, 273, 276, 277, 285, 286, 300, 303, 320, 323, 330, 331, 332, 333, 340, 343, 355, 360, 368, 414, 415, 417, 419, 421, 422, 423, 424, 428, 429, 432], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 102, 103, 124, 127, 131, 138, 150, 151, 157, 158, 197, 201, 206, 208, 225, 227, 229, 231, 246, 253, 269, 270, 271, 272, 274, 275, 278, 283, 289, 290, 291, 292, 309, 327, 329, 335, 341, 344, 368, 386, 387, 392, 397, 398, 400, 402, 403, 404, 405, 406], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 63, 142, 143, 163, 415], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 83, 89, 103, 110, 111, 408], "adjac": [3, 23, 189, 305], "junction": 3, "inittrack": [3, 261, 265, 305, 415, 418], "tutori": [3, 151, 407, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435], "scratch": [3, 8, 416, 430], "gym3": 3, "envpool": [3, 145, 146], "interfac": [3, 134, 147, 266, 274, 410, 411, 415, 417, 419, 424, 430, 432], "simultan": [3, 20, 137, 145, 146, 150, 157, 430], "advantag": [3, 8, 257, 320, 322, 337, 340, 342, 355, 356, 357, 358, 359, 360, 362, 364, 366, 368, 369, 371, 411, 412, 415, 416, 417, 418, 429, 430, 435], "scale": [3, 4, 24, 85, 124, 127, 131, 138, 150, 151, 157, 158, 176, 194, 197, 208, 215, 218, 229, 241, 256, 262, 285, 286, 290, 291, 298, 299, 300, 306, 310, 312, 320, 321, 323, 336, 340, 341, 342, 343, 390, 396, 406, 410, 415, 416, 417, 418, 421, 429, 434], "varieti": [3, 11], "inherit": [3, 124, 127, 131, 138, 150, 151, 157, 158, 267, 271, 272, 338, 412, 417, 428, 429], "from_pixel": [3, 11, 122, 123, 125, 126, 130, 132, 133, 136, 137, 154, 176, 205, 373, 375, 415, 416, 418, 420, 424, 425, 431, 432, 434, 435], "81": [3, 110], "simpli": [3, 6, 52, 54, 59, 72, 73, 114, 116, 121, 187, 210, 228, 338, 355, 410, 411, 415, 417, 422, 428, 429, 435], "d": [3, 53, 56, 58, 66, 67, 68, 86, 88, 90, 91, 92, 102, 103, 241, 259, 263, 306, 310, 434], "privat": [3, 124, 127, 131, 138, 150, 151, 157, 158, 228, 430, 435], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 42, 44, 50, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 111, 116, 322, 337, 340, 383, 385, 387, 392, 395, 396, 414, 415, 416, 417, 418, 422, 428, 429, 431, 432, 433, 434], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 60, 73, 105, 108, 124, 127, 131, 138, 150, 151, 157, 158, 159, 160, 197, 208, 262, 274, 285, 290, 291, 353, 410, 411, 421, 422, 428, 430, 432], "inner": [3, 124, 127, 131, 138, 150, 151, 157, 158, 184, 412, 416, 417, 429, 435], "logic": [3, 428], "kept": [3, 23, 109, 111, 124, 127, 131, 138, 150, 151, 157, 158, 184, 210, 221, 233, 238, 262, 290, 291, 422, 428], "mind": [3, 83, 89, 103, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 428, 429], "wherev": 3, "lost": [3, 8, 228], "intern": [3, 41, 70, 124, 127, 131, 138, 150, 151, 157, 158, 413], "face": [3, 5, 8, 9, 420, 435], "NOT": [3, 93, 94, 101, 111, 202], "right": [3, 6, 7, 23, 60, 103, 110, 416, 417, 419, 429, 430, 435], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 221, 222, 231, 233, 355, 356, 357, 358, 428], "preclud": 3, "presenc": [3, 56, 66, 124, 127, 131, 138, 150, 151, 157, 158, 233, 422], "annihil": 3, "supersed": [3, 23], "pettingzoowrapp": [3, 408], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 83, 124, 127, 131, 138, 141, 142, 143, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 195, 213, 350, 410, 416, 421, 423, 429, 432], "__not__": [3, 306, 321, 323, 336, 341, 343, 345, 346], "constrain": [3, 194, 261, 265, 340, 435], "li": 3, "fact": [3, 7, 8, 415, 417, 420, 428, 429, 430, 431, 432, 435], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "perfectli": [3, 412, 415, 419, 430], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 422, 434], "agent0": [3, 419], "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 58, 62, 63, 71, 74, 75, 76, 77, 78, 83, 124, 127, 131, 138, 150, 151, 157, 158, 172, 253, 375, 406, 410], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 110, 111, 112, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 176, 177, 182, 184, 185, 186, 187, 189, 192, 194, 196, 197, 199, 201, 203, 204, 206, 208, 209, 210, 213, 214, 216, 218, 219, 220, 222, 223, 224, 225, 227, 229, 231, 233, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 274, 275, 289, 290, 291, 296, 297, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 382, 385, 386, 387, 389, 390, 392, 406, 416, 417, 419, 430, 434, 435], "500": [3, 415, 416], "note": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 167, 182, 185, 220, 229, 231, 239, 243, 259, 261, 263, 265, 282, 306, 310, 330, 408, 411, 416, 419, 421, 427, 428, 429, 435], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 83, 86, 150, 157], "bottleneck": [3, 8, 103, 110, 111], "great": [3, 7, 8, 419, 428, 434], "speedup": [3, 8, 428, 435], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 182, 185, 238, 260, 264, 415, 417], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 16, 96, 98, 118, 124, 127, 131, 135, 138, 150, 151, 157, 158, 202, 435], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 96, 124, 127, 131, 138, 150, 151, 157, 158, 159, 163, 176, 188, 196, 206, 215, 216, 217, 220, 222, 231, 233, 240, 258, 282, 323, 338, 343, 415, 417, 428, 429, 432], "mismatch": [3, 56, 416], "subprocess": [3, 14, 15, 17, 128, 150, 157], "multithreadedenv": [3, 408], "underneath": 3, "higher": [3, 4, 103, 179, 313, 415, 416, 417, 428, 432, 435], "flexibl": [3, 9, 145, 347, 411, 412, 415, 419, 432, 435], "cover": [3, 130, 132, 409, 417, 420, 423, 424, 430, 434], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 41, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 72, 73, 74, 91, 92, 105, 124, 127, 131, 138, 141, 144, 147, 150, 151, 152, 153, 157, 158, 167, 173, 176, 180, 182, 183, 186, 187, 192, 194, 201, 203, 204, 210, 214, 216, 219, 220, 221, 222, 223, 225, 227, 229, 231, 234, 237, 238, 240, 245, 246, 266, 271, 272, 275, 283, 292, 294, 302, 306, 309, 310, 317, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 350, 353, 361, 373, 404, 408, 410, 415, 416, 417, 419, 423, 428, 429, 430, 432, 435], "atari": [3, 4, 83, 85, 86, 87, 89, 90, 91, 176, 246, 375, 419, 424, 435], "classic": [3, 144, 153, 416], "benchmark_batched_env": 3, "seamlessli": [3, 430], "infrastructur": [3, 428, 429], "paradigm": [3, 17, 429], "decpodp": 3, "game": [3, 4, 5, 83, 124, 142, 143, 148, 149, 246, 375, 419, 424], "thank": [3, 415, 419, 420, 434], "carrier": [3, 417, 418, 420, 432], "particular": [3, 27, 38, 46, 56, 57, 61, 66, 72, 73, 85, 86, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 411, 412, 416, 418, 420, 427, 429, 432], "thu": [3, 337, 429], "vma": [3, 161, 162, 373, 428, 429], "robot": [3, 5, 7, 89, 201, 225, 227, 419, 429], "vmasenv": [3, 373, 408, 428, 429], "balanc": [3, 125, 126, 415, 416], "num_env": [3, 21, 130, 134, 146, 161, 162, 373, 428, 429], "n_agent": [3, 161, 162, 271, 272, 273, 283, 292, 353, 373, 411, 428, 429], "ground_rew": 3, "pos_rew": 3, "style": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91], "vari": [3, 130, 132, 133, 152, 153, 154, 161, 202, 411, 419, 429], "creation": [3, 150, 157, 435], "info_spec": [3, 150], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 28, 29, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 122, 123, 124, 127, 130, 131, 132, 133, 136, 137, 138, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 170, 186, 203, 239, 255, 278, 281, 284, 302, 303, 306, 307, 308, 325, 328, 329, 353, 408, 418], "simpl": [3, 9, 27, 38, 46, 50, 56, 57, 61, 66, 71, 124, 127, 131, 138, 150, 151, 157, 158, 231, 248, 305, 310, 325, 327, 338, 342, 411, 415, 416, 417, 420, 421, 422, 428, 429, 432, 435], "prefix": [3, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 306, 323, 338, 343, 374, 418, 422, 435], "exactli": [3, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 133, 138, 150, 151, 157, 158, 220, 222, 231, 259, 263, 278, 323, 343, 415, 418, 423, 428, 429], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 124, 127, 131, 138, 150, 151, 157, 158, 169, 170, 184, 232, 238, 240, 242, 258, 267, 268, 282, 305, 411, 428, 429], "reward_kei": [3, 35, 37, 41, 47, 64, 93, 94, 101, 124, 127, 131, 138, 150, 151, 157, 158, 231, 238, 242, 268, 386, 390, 428, 429], "set_kei": [3, 186, 320, 322, 323, 325, 328, 329, 330, 336, 337, 338, 340, 341, 342, 343, 353, 359, 415, 428, 429], "awai": [3, 417, 420, 428, 429, 434], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 44, 45, 48, 49, 50, 51, 63, 71, 73, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 193, 214, 310], "full": [3, 124, 127, 131, 138, 150, 151, 157, 158, 243, 261, 265, 303, 310, 383, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "autoresettransform": 3, "invalid": [3, 27, 38, 46, 56, 57, 61, 66, 116, 124, 127, 131, 138, 150, 151, 157, 158, 163, 231, 269, 270], "nan": [3, 172, 228], "auto_reset": [3, 41, 124, 127, 131, 137, 138, 150, 151, 157, 158, 172, 231, 430], "auto_reset_replac": [3, 172], "placehold": [3, 133, 186, 222], "set_gym_backend": [3, 124, 127, 130, 131, 138, 150, 151, 157, 158, 164, 172, 408, 420, 434], "autoresettinggymenv": [3, 172], "_step": [3, 124, 127, 131, 138, 150, 151, 157, 158, 170, 172, 173, 182, 185, 189, 203, 204], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 124, 127, 131, 138, 144, 150, 151, 157, 158, 170, 172, 173, 180, 182, 185, 201, 203, 216, 221, 222, 225, 227, 231, 240, 242, 255, 258, 261, 265, 268, 271, 272, 283, 292, 306, 309, 314, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 412, 415, 430, 434], "super": [3, 144, 170, 172, 173, 182, 185, 203, 242, 255, 268, 314, 321, 323, 324, 329, 336, 341, 343, 345, 346, 415, 430, 434], "td_reset": [3, 172], "exclud": [3, 8, 41, 66, 85, 90, 124, 127, 131, 138, 150, 151, 157, 158, 172, 176, 187, 238, 283, 322, 337, 340, 428, 429, 432], "r": [3, 4, 41, 46, 124, 169, 170, 172, 179, 197, 211, 220, 229, 241, 244, 260, 310, 319, 354, 373, 416, 430, 435], "break_when_any_don": [3, 124, 127, 131, 138, 150, 151, 157, 158, 172, 220, 231, 244, 305, 429], "3633e": [3, 172], "02": [3, 124, 127, 131, 138, 150, 151, 157, 158, 172, 416, 425], "4877e": [3, 172], "01": [3, 172, 197, 241, 282, 316, 320, 322, 337, 340], "2849e": [3, 172], "7584e": [3, 172], "6609e": [3, 172], "6166e": [3, 172], "8366e": [3, 172], "2761e": [3, 172], "5685e": [3, 172], "4102e": [3, 172], "8111e": [3, 172], "9959e": [3, 172], "0865e": [3, 172], "5644e": [3, 172], "2119e": [3, 172], "2542e": [3, 172], "03": [3, 124, 127, 131, 138, 150, 151, 157, 158, 172, 197], "9952e": [3, 172], "4059e": [3, 172], "2094e": [3, 172], "9009e": [3, 172], "5140e": [3, 172], "3554e": [3, 172], "2920e": [3, 172], "7893e": [3, 172], "6429e": [3, 172], "3057e": [3, 172], "2867e": [3, 172], "6963e": [3, 172], "3818e": [3, 172], "2576e": [3, 172], "2679e": [3, 172], "1640e": [3, 172], "00": [3, 122, 123, 172, 414, 433], "6972e": [3, 172], "0212e": [3, 172], "5959e": [3, 172], "4637e": [3, 172], "3121e": [3, 172], "2168e": [3, 172], "5232e": [3, 172], "7704e": [3, 172], "7457e": [3, 172], "4127e": [3, 172], "1064e": [3, 172], "0854e": [3, 172], "5712e": [3, 172], "2189e": [3, 172], "5235e": [3, 172], "8289e": [3, 172], "0009e": [3, 172], "0257e": [3, 172], "8893e": [3, 172], "5872e": [3, 172], "9405e": [3, 172], "7766e": [3, 172], "0403e": [3, 172], "0626e": [3, 172], "2959e": [3, 172], "7263e": [3, 172], "2775e": [3, 172], "9564e": [3, 172], "0411e": [3, 172], "6769e": [3, 172], "6354e": [3, 172], "8698e": [3, 172], "1765e": [3, 172], "6292e": [3, 172], "5375e": [3, 172], "1820e": [3, 172], "7023e": [3, 172], "5836e": [3, 172], "9016e": [3, 172], "4826e": [3, 172], "6191e": [3, 172], "6387e": [3, 172], "8667e": [3, 172], "2056e": [3, 172], "1147e": [3, 172], "5991e": [3, 172], "0278e": [3, 172], "5219e": [3, 172], "3067e": [3, 172], "6617e": [3, 172], "3322e": [3, 172], "2629e": [3, 172], "4599e": [3, 172], "7298e": [3, 172], "5848e": [3, 172], "0148e": [3, 172], "5745e": [3, 172], "6982e": [3, 172], "7877e": [3, 172], "3527e": [3, 172], "7285e": [3, 172], "6668e": [3, 172], "0583e": [3, 172], "6956e": [3, 172], "3962e": [3, 172], "9845e": [3, 172], "5015e": [3, 172], "5903e": [3, 172], "9993e": [3, 172], "9418e": [3, 172], "0196e": [3, 172], "6557e": [3, 172], "2109e": [3, 172], "8997e": [3, 172], "1507e": [3, 172], "7363e": [3, 172], "0310e": [3, 172], "9574e": [3, 172], "8980e": [3, 172], "0090e": [3, 172], "forecast": 3, "awar": [3, 7, 96, 97, 98, 99, 112, 114, 118, 261, 265, 416, 418], "detect": [3, 91, 338, 411], "return_contigu": [3, 124, 127, 131, 138, 150, 151, 157, 158, 233, 427], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 116, 124, 127, 129, 131, 138, 150, 151, 157, 158, 170, 172, 173, 175, 176, 177, 180, 182, 183, 186, 187, 188, 189, 193, 194, 200, 202, 203, 204, 206, 209, 210, 213, 214, 215, 216, 217, 220, 221, 222, 223, 228, 229, 231, 233, 238, 239, 240, 242, 258, 261, 265, 267, 268, 282, 301, 303, 305, 308, 309, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 392, 415, 428, 430], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 46, 50, 53, 56, 57, 60, 61, 66, 67, 74, 89, 102, 103, 105, 124, 127, 131, 138, 150, 151, 157, 158, 169, 172, 176, 180, 182, 185, 194, 195, 197, 201, 206, 207, 208, 215, 216, 218, 221, 222, 225, 227, 229, 231, 240, 241, 243, 244, 253, 256, 259, 262, 263, 266, 269, 270, 274, 275, 281, 285, 286, 289, 291, 309, 313, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 390, 415, 416, 432, 435], "_set_se": [3, 170, 173, 182, 185, 203, 430], "lazystackedtensordict": [3, 41, 63, 83, 97, 124, 127, 131, 138, 144, 150, 151, 157, 158, 427], "float32": [3, 14, 15, 16, 28, 31, 35, 41, 52, 53, 54, 56, 59, 60, 64, 66, 67, 68, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 102, 103, 110, 118, 122, 123, 124, 127, 130, 131, 132, 136, 137, 138, 144, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 162, 169, 173, 182, 185, 186, 187, 192, 195, 197, 199, 203, 204, 206, 210, 213, 214, 216, 218, 223, 236, 238, 242, 244, 254, 255, 261, 265, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 410, 430], "exclusive_field": [3, 41, 83, 97], "stack_dim": [3, 41, 83, 97], "dramat": 3, "carefulli": [3, 428, 429, 435], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 231, 233, 297, 302, 303, 306, 307, 308, 309, 310, 321, 323, 336, 341, 343, 345, 346, 417, 428, 429], "plain": [3, 8, 420], "larg": [3, 4, 30, 52, 54, 59, 73, 110, 111, 182, 185, 225, 320, 322, 337, 340, 342, 416, 417, 428, 429, 432], "expens": [3, 103, 110, 111, 373, 432], "absent": [3, 31, 32, 39, 63, 66, 85, 124, 127, 131, 138, 150, 151, 157, 158, 210, 222], "torchvis": [3, 11, 201, 227, 377, 428, 434, 435], "base_env": [3, 123, 124, 127, 131, 132, 137, 138, 149, 150, 151, 157, 158, 160, 169, 170, 173, 179, 182, 184, 185, 194, 199, 203, 205, 211, 214, 216, 217, 220, 222, 231, 375, 415, 416, 417, 419, 428, 431, 434, 435], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 128, 131, 138, 144, 150, 151, 157, 158, 168, 171, 173, 180, 186, 192, 216, 222, 223, 231, 245, 246, 266, 273, 310, 319, 338, 373, 397, 398, 404, 405, 406, 416, 432], "bring": [3, 417, 420, 435], "signific": [3, 5, 8, 417, 434, 435], "kind": [3, 58, 71, 422, 428, 432], "consult": 3, "interest": [3, 306, 310, 410, 416, 417, 420, 429, 430, 435], "resize_par": 3, "revers": [3, 263], "order": [3, 11, 16, 27, 38, 46, 50, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 109, 111, 124, 127, 131, 138, 150, 151, 157, 158, 177, 182, 185, 192, 199, 213, 220, 222, 231, 281, 297, 302, 309, 311, 312, 314, 320, 321, 323, 324, 328, 329, 336, 340, 341, 342, 343, 345, 346, 416, 428, 429], "chain": [3, 52, 53, 54, 58, 59, 67, 68, 73, 83, 85, 86, 87, 88, 89, 90, 91, 138, 180, 184, 245, 246, 312, 435], "in_keys_inv": [3, 165, 179, 182, 183, 185, 192, 197, 198, 199, 203, 204, 206, 211, 219, 221, 223, 224, 415, 427, 430, 435], "append_transform": [3, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 150, 151, 157, 158, 165, 169, 175, 192, 201, 216, 220, 222, 223, 225, 229, 244, 261, 265, 373, 415, 418, 428, 430, 432, 434, 435], "doubletofloat": [3, 415, 417, 427], "float64": [3, 27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 124, 125, 126, 127, 131, 138, 142, 143, 150, 151, 157, 158, 169, 180, 182, 185, 201, 216, 221, 222, 225, 227, 231, 309], "paragraph": 3, "think": [3, 409, 417, 428, 429, 435], "in_": 3, "out_": 3, "perspect": [3, 255, 303, 330, 417, 419], "outer": [3, 124, 127, 131, 138, 150, 151, 157, 158, 412, 415, 416, 435], "ob": [3, 4, 8, 23, 31, 32, 39, 53, 58, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 105, 110, 111, 116, 124, 127, 131, 138, 150, 151, 157, 158, 170, 172, 182, 183, 185, 197, 211, 213, 218, 236, 238, 248, 249, 250, 251, 271, 272, 273, 307, 314, 321, 323, 324, 329, 336, 341, 343, 345, 346, 355, 356, 357, 358, 416, 419, 427, 428, 430, 432, 434, 435], "obs_standard": 3, "out_keys_inv": [3, 165, 179, 182, 183, 185, 192, 197, 198, 199, 203, 204, 211, 213, 219, 221, 223, 224, 430], "illustr": [3, 415, 416, 421, 432], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 99, 103, 109, 110, 112, 114, 118, 124, 127, 131, 138, 150, 151, 157, 158, 173, 180, 182, 183, 185, 187, 194, 203, 204, 210, 214, 219, 221, 222, 223, 229, 231, 263, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 411, 415, 418, 428, 429, 430, 431, 432, 435], "schemat": [3, 411], "outermost": 3, "innermost": 3, "similar": [3, 27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 89, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 180, 201, 216, 221, 222, 225, 226, 227, 229, 231, 298, 300, 306, 309, 310, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 430, 432, 434, 435], "transform_action_spec": [3, 180, 183, 197, 221, 223, 224, 231], "spec_from_random_valu": 3, "_apply_transform": [3, 430, 435], "rand": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 105, 122, 123, 136, 137, 144, 148, 149, 159, 160, 170, 173, 182, 185, 203, 213, 232, 242, 268, 306, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 343, 345, 346, 430, 434, 435], "approach": [3, 53, 58, 67, 68, 176, 197, 241, 271, 272, 345, 415, 417, 422, 423, 428, 435], "insid": [3, 52, 54, 59, 73, 150, 435], "did": [3, 58, 228, 361, 416, 417, 423, 432, 435], "_inv_apply_transform": [3, 430, 435], "actiondiscret": 3, "rand_act": [3, 124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 173, 222, 420], "action_discret": 3, "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 130, 131, 132, 138, 150, 151, 157, 158, 159, 160, 167, 182, 185, 186, 209, 220, 222, 231, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 373, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 412, 415, 417, 420, 432], "manipul": [3, 4, 8, 125, 126, 201, 225], "third_transform": 3, "unexpect": [3, 14, 15, 16, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 435], "behviour": 3, "fortun": [3, 418, 419, 420, 421, 424], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 83, 96, 124, 127, 131, 138, 150, 151, 157, 158, 216, 231, 239, 310, 355, 356, 357, 358, 415, 417, 424, 428, 429], "catfram": [3, 305, 416], "hold": [3, 351, 352, 430, 432], "notic": [3, 116, 176, 411, 417, 425, 430], "parenthood": 3, "henc": [3, 53, 202, 239, 271, 415, 417, 428, 429, 430], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 150, 157, 373, 430], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 130, 131, 132, 138, 142, 143, 150, 151, 152, 153, 157, 158, 161, 162, 169, 184, 192, 278, 281, 284, 327, 328, 329, 330, 410, 416, 421, 429], "might": [3, 52, 54, 55, 59, 73, 379, 409, 415, 420, 435], "action_mask": [3, 124, 136, 137, 152, 153, 155, 156, 170], "unavail": [3, 152, 153], "probabl": [3, 4, 8, 60, 105, 108, 243, 244, 253, 255, 258, 259, 261, 263, 265, 266, 269, 270, 278, 290, 291, 306, 310, 323, 340, 410, 411, 416, 419, 421, 434], "probabilistictensordictmodul": [3, 194, 310, 311, 411, 434], "tensordictsequenti": [3, 56, 66, 244, 258, 261, 265, 282, 302, 305, 311, 312, 317, 410, 415, 416, 418, 419, 421, 425, 427, 428, 431, 434], "maskedcategor": [3, 270, 408], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 122, 123, 124, 127, 131, 138, 144, 150, 151, 157, 158, 180, 194, 201, 216, 221, 222, 225, 227, 231, 242, 244, 245, 246, 248, 249, 250, 251, 255, 257, 258, 266, 268, 271, 272, 274, 275, 282, 284, 285, 286, 297, 298, 299, 300, 304, 305, 306, 307, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 402, 410, 416, 427, 431, 434], "in_feat": 3, "out_feat": 3, "logit": [3, 54, 60, 254, 269, 270, 278, 281, 303, 306, 328, 329, 410], "dist": [3, 10, 269, 270, 278, 310, 411, 421], "distribution_class": [3, 194, 298, 299, 300, 301, 306, 310, 312, 320, 321, 323, 328, 329, 336, 340, 341, 342, 343, 410, 415, 417, 421, 428, 429, 434], "wrap": [3, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 87, 122, 123, 124, 127, 131, 132, 136, 137, 138, 143, 146, 148, 149, 150, 151, 152, 153, 157, 158, 160, 162, 167, 220, 231, 233, 261, 265, 293, 298, 299, 300, 305, 307, 310, 315, 338, 353, 410, 415, 416, 417, 418, 422, 425, 428, 429, 435], "actionmask": [3, 124], "your_base_env": 3, "mask_kei": [3, 23, 170, 202, 231], "itself": [3, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 164, 172, 231, 338, 345, 417, 420], "ey": 3, "report": [3, 122, 123, 136, 137, 424], "foremost": 3, "callback": [3, 124, 127, 131, 138, 150, 151, 157, 158, 429], "ad": [3, 4, 16, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 105, 124, 127, 131, 138, 150, 151, 157, 158, 176, 192, 209, 220, 222, 231, 241, 274, 275, 282, 319, 320, 322, 323, 325, 330, 337, 340, 343, 353, 416, 418, 419, 421, 428, 432, 434, 435], "tensordictrecord": [3, 408], "videorecord": [3, 11, 373, 408, 417, 424, 425, 428], "csvlogger": [3, 11, 373, 375, 408, 416, 424, 425, 428], "wandblogg": [3, 408, 424], "tensorboardlogg": [3, 402, 408, 424], "tag": [3, 7, 11, 373, 375, 377, 380, 406, 424, 425, 428], "mp4": [3, 373, 375, 377, 425, 428], "video_format": [3, 373, 375, 377, 425, 428], "whc": 3, "cwh": 3, "exp": [3, 319, 411], "al": [3, 24, 130, 132, 186, 199, 242, 419, 435], "pong": [3, 83, 146, 199, 419, 435], "v5": [3, 130, 132, 146, 186, 199, 419, 435], "grow": [3, 97], "tediou": [3, 420], "workspac": [3, 73, 124, 127, 131, 138, 150, 151, 157, 158, 192], "pixelrendertransform": [3, 408, 428], "stream": [3, 89], "alik": [3, 373], "envcreat": [3, 16, 22, 150, 157, 220, 373, 402, 403, 406, 408, 415, 416, 434, 435], "render_mod": [3, 373, 430], "rgb_arrai": [3, 373, 428, 429, 430], "uncom": [3, 424], "line": [3, 7, 27, 38, 46, 56, 57, 61, 66, 83, 124, 127, 131, 138, 150, 151, 157, 158, 231, 416, 424, 428, 429], "comment": [3, 412, 416, 434], "pixels_record": [3, 373], "close": [3, 16, 131, 145, 194, 320, 322, 337, 340, 373, 415, 416, 420, 427, 428, 430, 434], "mission": 3, "irrespect": [3, 309, 310], "dmcontrol": [3, 124, 127, 131, 138, 150, 151, 157, 158], "jumanji": [3, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158], "special": [3, 75, 77, 408, 415, 418, 419, 435], "framework": [3, 4, 9, 22, 122, 123, 124, 127, 131, 136, 137, 138, 144, 150, 151, 157, 158, 259, 434, 435], "Its": [3, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 229, 231, 309, 359], "success": [3, 83, 84, 85, 86, 87, 88, 89, 90, 91, 176, 221, 258, 323, 345, 416, 423, 425, 430, 432, 434], "foundat": [3, 5, 152, 153, 417, 429], "inspir": [3, 419, 430], "gone": [3, 4, 5, 305], "prefer": [3, 14, 15, 17, 20, 23, 24, 53, 58, 67, 68, 110, 111, 202, 210, 340, 345, 389, 410, 417, 428, 429, 432, 434], "maintain": [3, 5, 9, 33, 176, 430], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 416, 417, 418, 423, 428, 429, 430, 432, 435], "decor": [3, 8, 12, 167, 168, 261, 265, 296, 338, 355, 356, 357, 358, 418, 434], "relev": [3, 60, 124, 127, 131, 138, 150, 151, 157, 158, 355, 356, 357, 358, 359, 382, 419, 430], "gym_backend": [3, 168, 408], "env1": [3, 244, 427], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 90, 124, 168], "env2": [3, 427], "_env": [3, 6, 130, 435], "classic_control": 3, "pendulumenv": [3, 41, 408, 430], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 140, 164, 195], "side": [3, 4, 435], "v0": [3, 14, 15, 31, 32, 39, 52, 54, 59, 63, 73, 124, 127, 131, 133, 136, 137, 138, 139, 140, 150, 151, 157, 158, 180, 195, 222, 229, 402], "26": [3, 111, 124, 127, 131, 138, 150, 151, 157, 158], "fun": [3, 12, 168, 417, 428, 429], "reveal": 4, "curv": 4, "exploit": [4, 421], "cv": 4, "flip": [4, 137], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 176, 182, 185, 187, 192, 197, 204, 206, 219, 223, 231, 318, 328, 336, 408, 430], "prescript": 4, "tune": [4, 24, 194, 428, 429, 431], "coeffici": [4, 24, 33, 60, 194, 429], "bonu": [4, 320, 322, 337, 340], "beta": [4, 53, 67, 102, 103, 328, 336, 337, 415, 416, 432, 434], "reduc": [4, 6, 30, 116, 124, 127, 131, 138, 150, 151, 157, 158, 176, 215, 238, 241, 243, 290, 408, 416, 428], "downstream": [4, 411, 415], "formul": [4, 428, 429], "rate": [4, 11, 83, 229, 354, 416, 417, 428, 429], "gradient": [4, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 243, 262, 270, 275, 278, 290, 291, 310, 320, 322, 323, 324, 328, 329, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 392, 415, 417, 428, 429, 430], "easier": [4, 57, 410, 415, 434], "local": [4, 7, 10, 16, 21, 27, 38, 46, 56, 57, 61, 66, 103, 110, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 271, 272, 283, 292, 353, 380, 382, 419, 424, 425, 428, 429], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 259, 260, 263, 264, 404, 405], "sum": [4, 21, 27, 44, 50, 66, 116, 122, 123, 125, 126, 130, 132, 133, 136, 137, 145, 146, 154, 175, 195, 209, 269, 270, 290, 292, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 354, 361, 411, 415, 416, 417, 418, 419, 422, 425, 428, 429, 430, 435], "stat": [4, 197, 229, 396, 406, 416, 417], "w": [4, 105, 124, 148, 149, 176, 178, 181, 205, 218, 259, 282, 375, 416, 432], "yield": [4, 14, 15, 16, 21, 27, 38, 46, 56, 57, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338, 415, 422], "insight": [4, 419], "auxiliari": [4, 422], "credit": 4, "futur": [4, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 93, 94, 101, 124, 127, 131, 138, 150, 151, 157, 158, 192, 201, 220, 222, 227, 231, 266, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 409], "spars": [4, 418], "intermedi": [4, 14, 15, 41, 56, 66, 175, 244, 261, 265, 303, 415, 419, 431], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 415], "discov": 4, "score": [4, 60, 279, 281], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 53, 56, 58, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 142, 143, 152, 153, 161, 162, 170, 172, 173, 175, 176, 177, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 196, 200, 202, 203, 204, 206, 209, 210, 213, 214, 215, 216, 217, 220, 221, 225, 226, 228, 229, 231, 232, 242, 261, 265, 302, 307, 391, 410, 411, 415, 419, 420, 428, 432], "explicit": [4, 12, 14, 15, 16, 432], "mechan": [4, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 416, 422, 430], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 124, 127, 131, 138, 150, 151, 157, 158, 263, 328, 336, 417, 429], "addition": [4, 253], "timestep": [4, 60, 85, 206, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 428, 429], "realli": 4, "huge": [4, 272, 418], "std": [4, 197, 229, 240, 280, 415, 435], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 414, 418, 420, 422, 423, 424, 425, 426, 427, 431, 432, 433], "unseen": 4, "extrins": 4, "wrong": [4, 103, 110], "bonus": 4, "denser": 4, "prior": [4, 61, 286, 332, 429], "freshli": 4, "drop": [4, 109, 111, 238], "meant": [4, 46, 144], "encourag": [4, 150, 281, 415, 416, 432], "measur": [4, 96, 98, 118, 122, 123, 136, 137, 417, 423], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 24, 421], "ideal": [4, 197, 430], "down": [4, 14, 15, 16, 17, 411, 418, 420], "distil": 4, "nois": [4, 230, 275, 282, 295, 341, 345, 346, 387, 406, 415, 428], "exploratori": [4, 320, 322, 337, 340], "misalign": 4, "trade": [4, 421], "unavoid": 4, "divers": [4, 150, 157], "bootstrap": [4, 330, 356, 362, 363, 415, 418], "noisi": [4, 274, 275, 295, 410], "unstabl": [4, 262, 290, 291], "inher": [4, 320, 340], "stochast": [4, 194, 256, 275, 276, 286, 321, 323, 326, 328, 329, 334, 336, 339, 341, 343, 410, 417, 421, 429], "enemi": 4, "pomdp": [4, 432], "loos": [4, 310, 410, 416, 417], "nonexist": 4, "architectur": [4, 252, 422, 428, 429, 434], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 42, 44, 52, 53, 54, 55, 56, 58, 60, 63, 66, 69, 72, 73, 89, 92, 95, 105, 106, 108, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 150, 151, 154, 157, 158, 165, 174, 175, 176, 177, 178, 181, 182, 184, 185, 189, 191, 192, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 217, 218, 219, 221, 223, 229, 245, 246, 253, 255, 259, 263, 266, 269, 270, 271, 272, 278, 284, 288, 301, 311, 312, 326, 374, 375, 387, 388, 389, 391, 392, 410, 415, 417, 418, 419, 427, 428, 429, 435], "lstm": [4, 216, 264, 265, 419], "rel": [4, 105, 216, 253, 289, 415, 416, 428, 429, 432], "tend": 4, "stabl": [4, 9, 10, 147], "compens": 4, "descent": [4, 275], "minimum": [4, 74, 150, 157, 207, 256, 289, 290, 291, 313, 316, 319, 321, 323, 329, 338, 339, 343, 383, 411, 415, 417, 425, 428, 429], "manual": [4, 11, 18, 20, 21, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 131, 132, 415, 418, 432], "deviat": [4, 197, 229, 240, 242, 256, 268, 274, 275, 280, 281, 340, 345, 346, 415, 421, 429], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 103, 110, 172, 259, 260, 263, 264, 319, 411, 419, 420, 421, 422, 423, 424, 425], "stabil": [4, 190, 243, 320, 322, 337, 340, 342], "stage": [4, 415, 430], "never": [4, 14, 15, 17, 28, 74, 103, 423, 434], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 42, 43, 44, 45, 50, 51, 63, 94, 229, 262, 290, 291, 320, 322, 337, 340, 342, 390, 424, 432], "entir": [4, 89, 124, 127, 131, 138, 150, 151, 157, 158, 176, 271, 417, 420, 430, 432], "submit": [4, 130, 173, 409, 434], "system": [4, 5, 94, 417, 428, 429, 430], "adequ": [4, 124, 127, 131, 138, 150, 151, 157, 158, 233, 417, 428, 429], "infeas": 4, "allevi": [4, 410], "prune": [4, 138], "fire": [4, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "illeg": 4, "chess": [4, 124, 148, 149], "grasp": 4, "top": [4, 116, 122, 123, 136, 137, 181, 242, 268, 421], "wherein": 4, "cumul": [4, 209, 215, 242, 361, 417], "q": [4, 9, 124, 127, 131, 138, 150, 151, 157, 158, 248, 249, 250, 251, 254, 255, 257, 283, 284, 292, 300, 303, 307, 308, 321, 323, 324, 325, 327, 328, 329, 330, 335, 336, 341, 343, 345, 346, 353, 408, 415, 422], "flow": [4, 415, 417, 428, 429, 430, 432], "reparameter": [4, 253, 270, 278], "soft": [4, 335, 343, 344, 428], "critic": [4, 8, 298, 304, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 415, 422], "clip": [4, 60, 179, 207, 320, 322, 337, 340, 342, 345, 346, 392, 417, 429, 430], "oppos": [4, 72], "incorrect": [4, 110], "thought": [4, 124, 127, 131, 138, 150, 151, 157, 158], "region": 4, "squash": [4, 418, 434], "tanh": [4, 245, 246, 259, 260, 262, 263, 264, 266, 272, 289, 290, 291, 313, 417, 421, 428, 429, 430, 431], "prob": [4, 269, 270, 278, 281, 417, 429], "rememb": [4, 428], "remap": 4, "origin": [4, 8, 52, 54, 55, 56, 59, 60, 66, 69, 73, 135, 183, 184, 194, 201, 222, 227, 231, 259, 306, 309, 310, 321, 323, 335, 336, 338, 340, 341, 343, 345, 346, 415, 419, 427, 430, 435], "world": [5, 144, 315, 332, 419, 424, 428, 429, 430, 435], "histor": 5, "ceas": 5, "farama": [5, 87, 139, 140, 152, 153, 417, 430], "gymwrapp": [5, 124, 127, 131, 138, 150, 151, 157, 158, 187, 210, 214, 228, 408, 417, 434], "feel": [5, 409, 425, 434], "free": [5, 7, 182, 185, 238, 320, 332, 340, 412, 417, 425, 429, 434], "gladli": 5, "prepar": [6, 37, 86, 417], "conda": [6, 7, 409], "cmake": 6, "activ": [6, 7, 9, 41, 245, 246, 252, 256, 266, 271, 272, 322, 337, 340, 410, 430, 434], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 86, 409], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 133], "y": [6, 7, 56, 58, 66, 147, 257, 271, 293, 415, 429, 432], "facebookresearch": [6, 86, 133], "subdirectori": 6, "verbos": [6, 425], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 80, 124, 127, 131, 138, 150, 151, 157, 158, 203, 212, 231, 338, 428, 429, 434, 435], "command": [6, 7, 10, 158, 417, 428, 429, 430, 435], "readm": [6, 7, 161, 434], "md": [6, 7], "habitatenv": [6, 408], "_has_habitat": 6, "available_env": [6, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 435], "startswith": [6, 244, 411, 415, 422], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 128, 338, 415], "env_nam": [6, 122, 124, 125, 127, 128, 130, 131, 133, 136, 138, 139, 145, 150, 151, 154, 157, 158, 415, 417, 435], "llvmlite": 6, "config": [6, 7, 201, 227, 247, 252, 280, 396, 397, 398, 400, 403], "var": [6, 7, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 338, 343], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 302, 338], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 338, 343, 419, 432], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 85, 419], "stand": [7, 36, 125, 126, 150, 157, 427, 430], "joint": [7, 416], "contact": [7, 55, 428], "engin": [7, 154, 430], "biomechan": 7, "graphic": 7, "anim": [7, 429], "area": 7, "demand": [7, 424, 435], "fast": [7, 9, 97, 122, 123, 204, 238, 341, 415, 416, 417, 434], "articul": 7, "acquir": [7, 417], "deepmind": [7, 8, 9, 89, 124, 125, 126, 127, 131, 138, 142, 143, 148, 149, 150, 151, 157, 158, 186, 417, 420], "whomev": 7, "licenc": 7, "incorpor": [7, 124, 127, 131, 138, 150, 151, 157, 158, 240, 258, 282, 345, 418, 421, 430], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 409], "tip": [7, 409], "glfw": [7, 415], "osmesa": 7, "egl": 7, "advic": [7, 89, 435], "sudo": [7, 409], "apt": [7, 429], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 138, 298, 299, 300], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 411, 415, 417, 418, 428, 429, 432], "roboti": 7, "html": [7, 14, 15, 145, 147, 148, 149], "wget": 7, "mujoco210": 7, "tar": [7, 86], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 150, 157], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 52, 54, 72, 92], "bin": [7, 255, 281, 303, 410], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 251, 306, 310, 415, 417, 419, 432], "nvidia": [7, 135, 419], "older": [7, 12], "hack": [7, 415], "adatp": 7, "script": [7, 86, 124, 127, 131, 138, 150, 151, 157, 158, 233, 402, 406, 410, 411, 412, 415, 416, 419, 424, 428, 429, 430, 432], "unnot": [7, 202], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 94, 416, 432], "troubleshoot": 7, "gl": 7, "h": [7, 105, 176, 178, 181, 205, 218, 259, 260, 261, 263, 264, 265, 268, 375, 416, 432], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 44, 45, 50, 51], "directori": [7, 52, 54, 59, 72, 73, 83, 85, 86, 87, 89, 90, 91, 96, 380, 382, 411, 412, 415, 421, 424, 428], "devel": 7, "ubuntu": [7, 135], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 416, 418, 427], "libstdc": 7, "glibcxx_3": 7, "29": [7, 110, 111], "compil": [7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 95, 96, 97, 98, 99, 103, 106, 110, 111, 112, 117, 118, 120, 124, 127, 131, 138, 150, 151, 157, 158, 231, 259, 260, 263, 264, 290, 355], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 124, 127, 131, 138, 150, 151, 157, 158, 196, 220, 222, 231, 323, 343, 411, 435], "job": [7, 18, 19, 20, 22, 58, 67, 68, 105, 432, 434], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 110, 122, 123], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 428, 429], "global": [7, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 105, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 220, 231, 283, 292, 306, 310, 353, 412, 415, 428, 429], "cuda_visible_devic": 7, "id": [7, 23, 60, 73, 103, 105, 110, 111, 124, 127, 130, 131, 138, 150, 151, 157, 158, 159, 160, 282, 323, 341, 378, 382, 423, 432], "slurm_step_gpu": 7, "black": [7, 124, 428], "onscreen": 7, "101": 7, "correctli": [7, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "lgl": 7, "libegl": 7, "x11": [7, 429], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 412], "n_training_step": 8, "datapoint": [8, 72, 432], "n_data_per_train": 8, "no_grad": [8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 194, 231, 243, 259, 260, 263, 264, 355, 356, 357, 358, 417, 418, 419, 429], "loss_fn": [8, 418, 422, 423, 434], "zero_grad": [8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 281, 412, 415, 417, 418, 419, 422, 425, 428, 429, 430], "backpropag": [8, 122, 123, 136, 137, 150, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 422, 429, 430], "differenti": [8, 72, 122, 123, 194, 323, 345, 355, 356, 357, 358, 418, 421, 422, 428, 429, 430], "denomin": 8, "artifact": 8, "numer": [8, 58, 131, 229, 262, 290, 291, 297, 302, 303, 306, 307, 308, 309, 310, 390, 417, 432, 435], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 50, 73, 74, 83, 89, 103, 110, 111, 127, 411, 430, 432], "compuat": 8, "fix": [8, 33, 150, 216, 321, 323, 339, 343, 416, 425, 430, 435], "retain_graph": [8, 122, 123], "discuss": [8, 9, 423, 428, 429], "inplac": [8, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 231, 415], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 124, 127, 131, 138, 150, 151, 157, 158, 170, 172, 173, 175, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 197, 200, 201, 202, 203, 204, 206, 209, 210, 213, 214, 215, 216, 217, 220, 221, 225, 226, 228, 229, 231, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 274, 276, 277, 280, 282, 283, 285, 286, 288, 292, 293, 301, 303, 305, 306, 308, 309, 310, 313, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 408, 411, 418, 430, 434], "submodul": [8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 164, 216, 231, 261, 265, 317, 338], "param": [8, 27, 38, 46, 56, 57, 60, 61, 66, 124, 127, 131, 138, 144, 150, 151, 157, 158, 173, 180, 182, 183, 187, 194, 203, 204, 210, 214, 219, 221, 223, 231, 253, 255, 271, 272, 273, 289, 301, 306, 309, 312, 338, 348, 352, 355, 356, 357, 358, 359, 415, 419, 425, 428, 429, 430, 431, 434], "grad": [8, 27, 38, 46, 56, 57, 61, 66, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 231, 310, 415, 417], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 152, 153, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 283, 309], "factor": [8, 11, 24, 46, 206, 231, 240, 241, 258, 262, 275, 282, 290, 291, 321, 327, 330, 331, 333, 344, 361, 415, 416, 419, 421, 425, 428, 429, 432, 435], "fit": [8, 12, 57, 197, 216, 411, 412, 415], "brax": [8, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 204, 420, 435], "jax": [8, 12, 122, 123, 136, 137], "improperli": 8, "underli": [8, 124, 127, 128, 131, 138, 150, 151, 157, 158, 338, 418, 420, 422, 424, 430], "tedeiou": 8, "priorit": [8, 53, 67, 102, 103, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 415, 416, 423, 434], "amount": [8, 150, 282, 416, 432], "costli": [8, 430], "constitut": [8, 416, 429, 430], "profil": 8, "frequent": [8, 41, 432], "program": [8, 328, 336, 419, 435], "functorch": [8, 10], "incl": 8, "suit": [8, 126, 417, 420, 434, 435], "mujoco_instal": 8, "valueerror": [8, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 109, 199, 218, 419, 434, 435], "idea": [9, 341, 412, 418, 421, 428, 429], "introductori": 9, "intro": [9, 417, 418], "dai": [9, 434], "2022": [9, 10, 243, 434], "spin": [9, 125, 126], "deep": [9, 176, 195, 248, 249, 250, 251, 254, 282, 320, 323, 335, 343, 344, 415, 428], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 421], "summari": [9, 197, 229, 415, 416, 417, 418], "reddit": 9, "reagent": 9, "orient": [9, 91, 435], "baselines3": 9, "tf": 9, "bandit": [9, 147], "tensorflow": [9, 269, 270], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 419, 425], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 434], "grade": 9, "factori": [9, 69, 415], "cherri": 9, "jaxrl": 9, "mbrl": [9, 144, 410], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 417, 418, 428, 429], "notebook": [10, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "24": [10, 90, 111, 130, 145, 146, 281, 305, 375, 428], "pip3": [10, 415, 417, 418, 428, 429], "url": [10, 133], "org": [10, 14, 15, 24, 53, 86, 87, 89, 91, 102, 103, 122, 123, 125, 126, 133, 136, 137, 142, 143, 145, 146, 147, 154, 161, 162, 176, 201, 225, 241, 247, 248, 249, 250, 251, 252, 255, 256, 257, 263, 268, 269, 270, 275, 276, 277, 281, 282, 283, 285, 286, 292, 303, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 342, 343, 344, 345, 355, 360, 368, 407, 426, 431], "whl": 10, "u": [10, 88, 259, 260, 263, 264, 430], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 176, 417, 428, 429, 430, 432], "power": [11, 416], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 210, 408], "ultim": [11, 262, 290, 291], "ffmpeg": 11, "whatev": [11, 411, 415], "fed": [11, 429, 432], "feed": [11, 201, 227, 338, 410, 415, 428, 429, 432], "suppos": [11, 150, 387, 412, 435], "snippet": [11, 201, 225, 415], "gave": 11, "extrem": [11, 150, 157, 320, 322, 337, 340, 342], "blurri": [11, 419], "stitch": 11, "exp_nam": [11, 375, 376, 377, 380, 381, 382, 402, 416, 424, 425], "my_exp": [11, 424], "pixels_onli": [11, 125, 126, 130, 132, 133, 154, 415, 416, 424, 425, 434, 435], "my_video": [11, 424], "record_env": [11, 424, 425], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 300, 410], "module_nam": [12, 338], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 102, 103, 105, 116, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 172, 176, 186, 192, 193, 194, 201, 205, 214, 215, 219, 220, 222, 223, 225, 227, 228, 229, 231, 237, 239, 242, 254, 255, 261, 265, 267, 268, 271, 272, 273, 274, 275, 283, 284, 292, 297, 302, 303, 306, 307, 308, 309, 310, 313, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 400, 406, 416, 417, 419], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": [12, 41], "vs": [12, 261, 265], "x": [12, 23, 46, 56, 57, 58, 60, 61, 66, 89, 111, 138, 192, 194, 218, 223, 241, 243, 244, 246, 255, 257, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 293, 302, 306, 307, 316, 319, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 392, 415, 419, 428, 430, 432, 434], "23": [12, 90, 111], "import_modul": 12, "get_class_that_defined_method": 12, "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 192, 225, 246, 247, 280], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 46, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 90, 94, 103, 110, 111, 124, 127, 128, 129, 130, 131, 132, 138, 142, 143, 145, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 192, 194, 216, 220, 222, 228, 229, 231, 245, 246, 247, 248, 249, 250, 251, 252, 257, 266, 280, 306, 310, 323, 343, 345, 375, 379, 380, 387, 392, 397, 398, 404, 405, 406, 410, 415, 416, 417, 432, 434, 435], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 128, 150, 157, 415, 434], "device_typ": [14, 16, 17, 25, 30, 42, 48, 50, 245, 246, 247, 248, 249, 250, 251, 257, 266, 271, 272, 274, 275, 280, 389], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 416], "create_env_kwarg": [14, 15, 16, 17, 21, 128, 145, 150, 157, 220, 415, 435], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 46, 206, 416, 432], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 306, 338, 387, 410, 415, 416, 417, 418, 421, 428, 434], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 234, 237, 306, 310, 387], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 52, 54, 59, 73, 150, 157], "num_sub_thread": [14, 15, 17, 150, 157], "set_trunc": [14, 15, 16, 17, 124, 127, 131, 138, 150, 151, 157, 158], "use_buff": [14, 15, 16, 150, 157], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 124, 127, 131, 138, 150, 151, 157, 158], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "no_cuda_sync": [14, 15, 16], "datacollector": [14, 15, 16, 17, 46, 340, 417, 423, 432], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 103, 110, 240, 282, 289, 290, 297, 302, 303, 306, 307, 308, 309, 310, 312, 410, 434], "sota": [14, 15, 144, 190, 342, 383, 397, 415, 416, 434], "guard": [14, 15], "doc": [14, 15, 69, 133, 136, 137, 147, 154, 382, 411, 416, 428, 429, 432], "env_mak": [14, 15, 16, 21, 402, 435], "2000": [14, 15, 16, 46, 72, 134, 281, 375, 432], "50": [14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 60, 62, 63, 71, 74, 75, 76, 77, 78, 83, 91, 110, 111, 142, 143, 231, 418, 432], "shutdown": [14, 15, 16, 17, 21, 173, 415, 416, 432, 434], "del": [14, 15, 16, 415, 416, 417, 427, 428, 432, 434, 435], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 41, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 59, 60, 64, 67, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 110, 124, 127, 131, 138, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 169, 173, 186, 199, 206, 214, 255, 282, 284, 302, 303, 306, 307, 308, 410, 430], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 175, 293, 302, 305, 307, 418], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 72], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 416], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 83, 89, 103, 110, 111, 241, 429], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 131, 172, 216, 228, 265, 418, 430, 431], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 394, 416], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 92, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 180, 182, 185, 194, 201, 216, 221, 222, 225, 227, 229, 231, 309, 428, 435], "span": [14, 15, 16, 17, 18, 19, 20, 21, 89, 103, 110, 111], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 46, 231, 305, 416, 417, 428, 429], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 60, 382, 410, 428, 429, 430], "round": [14, 15, 16, 17, 18, 19, 20, 21, 83, 124], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 87, 124, 127, 131, 138, 150, 151, 157, 158, 231], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 228], "ratio": [14, 15, 17, 60, 415, 417], "finish": [14, 15, 17, 21, 131, 206, 435], "rest": [14, 15, 17, 243, 410, 417, 418, 428, 430, 434], "earli": [14, 15, 17, 46, 131, 214, 434], "safeti": [14, 15, 17, 144, 150, 157], "harm": [14, 15, 17, 150, 157], "exclus": [14, 15, 79, 80, 83, 89, 103, 110, 111, 173, 187, 189, 259, 261, 263, 265, 269, 270, 302, 303, 307, 308, 344, 345, 346, 355, 356, 357, 358, 359, 382, 406, 410], "add_truncated_kei": [14, 15, 16, 17, 124, 127, 131, 138, 150, 151, 157, 158, 222], "trust": [14, 15, 16, 124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 265], "cudagraphmodul": [14, 15, 16, 124, 127, 131, 138, 150, 151, 157, 158], "behaviour": [14, 15, 16, 56, 66, 418, 419, 434], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 110, 111, 112, 114, 116, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 170, 171, 173, 180, 201, 203, 212, 216, 220, 221, 222, 224, 226, 227, 230, 231, 240, 242, 244, 245, 246, 248, 249, 250, 251, 254, 257, 258, 261, 262, 265, 266, 267, 268, 271, 272, 273, 278, 282, 291, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 353, 354, 355, 356, 357, 358, 359, 373, 375, 379, 380, 382, 385, 392, 397, 398, 403, 404, 405, 411, 417, 419, 429], "bypass": [14, 15, 16, 421], "isaaclab": [14, 15, 16, 132], "maniskil": [14, 15, 16], "crash": [14, 15, 16, 206], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 229, 231, 323, 343], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 124, 127, 131, 138, 150, 151, 157, 158, 222], "increment": [14, 15, 16, 17, 124, 127, 131, 138, 150, 151, 157, 158, 197, 337], "env_fn": [14, 15, 16, 17, 128, 404, 405], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 110, 111, 250, 251], "out_se": [14, 15, 16, 17, 435], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 340], "whole": [16, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 306, 323, 343, 383, 415, 417], "_interruptor": 16, "outsid": [16, 183, 220, 411, 424, 428, 429, 430], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 421], "policy_state_dict": 16, "env_state_dict": 16, "mere": [17, 419], "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 70, 253, 392], "respect": [18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 174, 180, 182, 185, 201, 202, 211, 216, 221, 222, 225, 227, 231, 259, 263, 271, 286, 309, 314, 320, 322, 337, 340, 342, 355, 357, 358, 388, 411, 417, 418, 428, 429], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 409, 416, 417, 419, 421, 424, 432, 434], "fashion": [18, 20, 21, 52, 54, 59, 73, 111], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 41, 83, 86, 87, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 189], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 53, 56, 57, 58, 61, 66, 67, 68, 85, 124, 127, 131, 138, 150, 151, 157, 158, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 415], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 430], "visit": [18, 19, 20, 73], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 159], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 281, 415], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 50, 83, 306, 310], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 404, 405, 415, 416], "coordin": [21, 181], "init": [21, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231, 271, 272, 273, 382, 416, 417], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 252, 432], "equat": [21, 56, 73, 89, 131, 229, 282, 319, 322, 344, 417, 420, 430], "exce": [21, 432], "indefinit": [21, 82], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 150, 241, 392, 418], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 345, 422], "jump": [22, 420], "host": [22, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 247, 252, 280, 301], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 103, 110, 111, 124, 127, 131, 138, 150, 151, 157, 158, 165, 169, 170, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 229, 231, 232, 238, 239, 240, 244, 255, 258, 282, 284, 301, 305, 310, 325, 353, 373, 375], "as_nest": 23, "durat": [23, 429], "meta": [23, 52, 54, 59, 71, 73, 85, 129, 133, 320, 322, 337, 340, 342, 412, 417, 428, 429, 432], "aren": [23, 215, 418], "eventu": [23, 283, 418, 430], "recov": [23, 85, 87, 89, 90, 91, 110, 111, 192, 311, 328, 336, 427], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 130, 132], "stride": [23, 27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 245, 246, 248, 249, 257, 271, 416, 428, 434], "jag": 23, "focu": [23, 415, 416, 417, 419, 421, 422, 423, 428], "team": [23, 428, 429, 434], "cat": [23, 41, 314, 321, 323, 324, 336, 341, 343, 345, 346, 428, 432, 434], "arang": [23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 103, 110, 111, 169, 255, 270, 302, 383, 410, 432], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 41, 68, 74, 83, 89, 110, 136, 137, 148, 149, 158, 236, 305], "data_split": 23, "got": [23, 423], "init_kl_coef": 24, "horizon": [24, 142, 143, 161, 162, 242, 268, 417], "kl": [24, 33, 60, 194, 332, 337], "describ": [24, 52, 54, 59, 71, 73, 177, 221, 232, 289, 290, 325, 378, 411, 415, 417, 428, 429, 430, 435], "ziegler": 24, "et": [24, 242], "relax": [24, 373], "penalti": [24, 60, 334, 337], "strai": [24, 60], "greater": [24, 83, 103, 110, 111, 195, 261, 265, 323, 415, 416], "increas": [24, 94, 176, 217, 243, 282, 428, 429], "pull": [24, 432], "toward": [24, 227], "aggress": 24, "kl_coef": [24, 33, 60], "arxiv": [24, 53, 86, 89, 91, 102, 103, 122, 123, 125, 126, 136, 137, 142, 143, 145, 146, 154, 161, 162, 176, 201, 225, 241, 247, 248, 249, 250, 251, 252, 255, 256, 257, 263, 268, 275, 276, 277, 281, 282, 283, 285, 286, 292, 303, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 343, 344, 345, 355, 360, 368, 431], "pdf": [24, 176, 247, 248, 249, 250, 251, 255, 281, 282, 303, 323, 330, 334, 341, 344, 345, 355, 360, 368], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 428, 429], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 194], "newest": 24, "int8": [25, 127, 141, 152, 153, 174], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 122, 123, 127, 130, 132, 133, 136, 137, 145, 146, 148, 149, 154, 159, 160, 169, 184, 277, 278, 281, 285, 319, 416, 417, 418, 421, 430, 432], "null": [25, 28, 29, 31, 32, 39, 40, 48, 49, 53, 62, 63, 67, 71, 74, 75, 76, 77, 78, 102, 103, 174, 192], "denot": [25, 429], "clariti": [25, 41], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "cardin": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 255, 284, 302, 303, 308, 417], "outcom": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 253, 270, 289, 338, 428], "cartesian": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 435], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 131, 313, 373, 419, 428, 430], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 131, 282, 313, 373, 419, 428], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 60, 62, 63, 71, 74, 75, 76, 77, 78, 102, 124, 127, 131, 132, 138, 150, 151, 157, 158, 186, 259, 260, 263, 264, 415, 428], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 245, 246, 266, 287, 288, 408, 411], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "index_typ": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 48, 49, 62, 63, 71, 74, 75, 76, 77, 78], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "exanpl": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "one_hot": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 255, 270, 284], "categ": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 306], "to_categorical_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "idx_one_hot": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "idx_categ": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_categor": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 122, 123, 124, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 180, 182, 185, 201, 216, 221, 222, 225, 227, 229, 231, 309, 319, 338, 415, 416, 417, 430, 432], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 430, 435], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 415], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 410], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 270, 278, 306, 411], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 62, 63, 71, 74, 75, 76, 77, 78, 184, 240, 263, 282, 297, 302, 303, 306, 307, 308, 309, 310, 382, 410, 434, 435], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 104, 338, 435], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158, 197, 229, 240, 241, 245, 246, 262, 266, 269, 270, 290, 291, 306, 310, 322, 323, 337, 340, 387, 390, 406, 410, 412, 418, 421, 429, 435], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 216, 258, 306, 310, 417, 428, 429], "set_provisional_n": [25, 26, 30, 34, 42, 43], "temporarili": [25, 26, 30, 34, 42, 43, 94, 124, 127, 131, 138, 150, 151, 157, 158, 233, 423, 432], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 201, 225, 227, 309], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 124, 127, 131, 138, 150, 151, 157, 158], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 221, 222, 289, 406], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_one_hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 122, 123, 130, 132, 133, 136, 137, 142, 143, 145, 146, 148, 149, 152, 153, 154, 159, 160, 161, 162, 169, 170, 184, 255, 278, 279, 284, 302, 303, 307, 308, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 418], "categ_sampl": [25, 26, 30, 34, 44, 45, 50, 51], "onehot_sampl": [25, 26, 30, 34, 44, 45], "to_one_hot_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "categoricalbox": [25, 26, 30, 34, 44, 45, 50, 51, 151], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "update_mask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "disabl": [25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 262, 291, 373, 415, 428, 429], "unmask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "ts": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 192, 417, 418, 420, 428, 429, 432], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "child": [27, 38, 41, 46, 56, 57, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 231, 416], "fn": [27, 38, 46, 55, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 192, 223, 231, 404, 405], "recurs": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 79, 80, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338, 419], "init_weight": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "m": [27, 38, 42, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 184, 231, 244, 310, 416, 430], "fill_": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 416, 418], "net": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 249, 251, 254, 257, 272, 320, 321, 323, 329, 336, 340, 341, 342, 343, 402, 416, 430, 431, 434], "in_featur": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 245, 246, 248, 249, 250, 251, 257, 266, 271, 272, 274, 275, 298, 309, 317, 325, 327, 419, 421, 422], "out_featur": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 144, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 242, 245, 246, 248, 249, 250, 251, 256, 257, 261, 265, 266, 268, 271, 272, 274, 275, 298, 302, 309, 317, 325, 327, 410, 415, 418, 419, 421, 422, 425, 434], "bia": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 192, 201, 216, 220, 221, 222, 225, 227, 231, 241, 245, 246, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 272, 274, 275, 282, 309, 316, 318, 319, 323, 338, 343, 411, 415, 416, 417, 418, 429], "requires_grad": [27, 38, 46, 56, 57, 61, 66, 122, 123, 124, 127, 131, 138, 150, 151, 157, 158, 194, 220, 222, 231, 281, 310, 323, 343], "bfloat16": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "datatyp": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 432], "member": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338, 375], "xdoctest": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 192, 201, 216, 220, 221, 222, 225, 227, 231, 309, 323, 338, 343], "buf": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "20l": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338], "1l": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338], "5l": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338], "__call__": [27, 38, 46, 55, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 310, 412], "doubl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 182, 183, 185, 201, 216, 221, 222, 225, 227, 231, 309, 325, 330, 335, 341, 344, 353, 415, 416, 417, 418, 435], "eval": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 229, 231, 243, 410, 415, 416, 417], "evalu": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 132, 138, 142, 143, 150, 151, 157, 158, 222, 231, 243, 253, 269, 270, 278, 291, 341, 397, 398, 416, 417, 425], "dropout": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 243, 244, 259, 261, 263, 265, 266, 410, 418], "batchnorm": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 241], "comparison": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 222, 231, 338, 415, 416], "extra_repr": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "recip": [27, 38, 55, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316], "silent": [27, 38, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316], "get_buff": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "get_submodul": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "qualifi": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "referenc": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "resolv": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "someth": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 141, 150, 151, 157, 158, 231, 409, 416, 417, 430, 435], "get_extra_st": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231], "set_extra_st": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231], "picklabl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231], "pickl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231], "get_paramet": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "net_b": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "net_c": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "conv": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 245, 246, 416], "conv2d": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 246, 248, 249, 257, 271], "kernel_s": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 245, 246, 248, 249, 257, 271, 276, 416, 434], "diagram": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "degre": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "named_modul": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "half": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309, 415], "ipu": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "strict": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343, 419], "descend": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343], "get_swap_module_params_on_convers": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343], "persist": [27, 36, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 238, 323, 343], "preserv": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343], "missing_kei": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343], "unexpected_kei": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343], "namedtupl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 220, 222, 231, 323, 343], "l": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 259, 263, 354, 417, 430], "idx": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "mtia": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "named_buff": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "remove_dupl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338], "prepend": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 338, 419], "running_var": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "named_children": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "conv4": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "conv5": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "memo": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "named_paramet": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 194, 231, 338], "register_backward_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "removablehandl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "favor": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 417], "register_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_buff": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "running_mean": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "alongsid": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 231, 424], "num_featur": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 241], "register_forward_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 255, 284], "with_kwarg": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "always_cal": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_module_forward_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "regardless": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 322, 337, 340], "register_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "invok": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "And": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 422], "forward_pr": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_module_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "grad_input": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "grad_output": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "technic": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 416, 418, 419, 421], "caller": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_module_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "backward_pr": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_module_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_load_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "incompatible_kei": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "thrown": [27, 38, 46, 56, 57, 61, 62, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 432], "register_load_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "local_metadata": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "error_msg": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "noqa": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "b950": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_modul": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 412], "alia": [27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 105, 112, 114, 118, 124, 127, 131, 138, 150, 151, 157, 158, 231, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 345, 346, 353, 359], "register_paramet": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "register_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "keep_var": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 343], "requires_grad_": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 419], "autograd": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 343], "freez": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 229, 231], "finetun": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "gan": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "set_submodul": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "overid": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "share_memori": [27, 38, 46, 56, 57, 61, 66, 124, 127, 128, 131, 138, 150, 151, 157, 158, 231, 415], "share_memory_": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231, 434], "destin": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 175, 182, 183, 185, 192, 220, 222, 225, 229, 231, 238, 323, 343, 375], "averag": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 229, 231, 282, 323, 331, 332, 343, 390, 415, 417], "shallow": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 343, 418], "pleas": [27, 38, 46, 56, 57, 61, 66, 70, 87, 124, 127, 130, 131, 138, 150, 151, 152, 153, 157, 158, 173, 176, 192, 217, 220, 222, 231, 271, 272, 273, 323, 343, 409], "detach": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 192, 220, 222, 231, 323, 334, 338, 343, 345, 355, 356, 357, 358, 415], "non_block": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309, 418], "memory_format": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "channels_last": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "unchang": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 184, 201, 216, 221, 222, 225, 227, 231, 258, 309, 375, 389, 415, 432], "tri": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309, 424], "pin": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "4d": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "ignore_w": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "1913": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "3420": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "5113": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "2325": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "torch_doctest_cuda1": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "gpu1": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "1914": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "5112": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "2324": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "float16": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 260, 264, 309], "cdoubl": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "3741": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "j": [27, 38, 46, 53, 56, 57, 61, 66, 102, 103, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309, 412, 422], "2382": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "5593": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "4443": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "complex128": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "6122": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "1150": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 180, 201, 216, 221, 222, 225, 227, 231, 309], "to_empti": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "dst_type": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "xpu": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "set_to_non": [27, 38, 46, 56, 57, 61, 66, 124, 127, 131, 138, 150, 151, 157, 158, 231], "upper": [28, 108, 196], "continuousbox": [28, 31, 74, 124, 127, 131, 138, 150, 151, 157, 158, 192, 195, 216, 223, 236], "provision": 30, "descript": [31, 161, 172, 416, 417], "akin": 31, "unnam": 31, "compositespec": [31, 408, 430, 435], "constraint": [31, 144, 290, 417, 428, 429], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 177, 415], "_nodefault": [31, 32, 39, 63], "is_empti": [31, 32, 39, 63, 430], "include_nest": [31, 32, 39, 63], "leaves_onli": [31, 32, 39, 63], "is_leaf": [31, 32, 39, 63], "_compositespecitemsview": [31, 32, 39, 63], "_compositespeckeysview": [31, 32, 39, 63], "reflect": [31, 32, 39, 63, 132, 152, 153, 192, 228, 238, 338, 395, 416, 417, 418, 429], "lock_": [31, 32, 39, 63], "propag": [31, 32, 39, 63, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 417, 428, 429], "succeed": [31, 32, 39, 63, 192, 223], "pop": [31, 32, 39, 63], "keyerror": [31, 32, 39, 63, 222], "extract": [31, 32, 39, 63, 86, 172, 192, 219, 223, 304, 415, 417, 434], "selected_kei": [31, 32, 39, 63, 210, 415], "unlock_": [31, 32, 39, 63], "_compositespecvaluesview": [31, 32, 39, 63], "multipli": [33, 243, 259, 263, 320, 321, 322, 323, 329, 337, 339, 340, 341, 343, 390, 415, 428], "calcul": [33, 60, 206, 259, 320, 322, 327, 337, 340, 342, 345], "shift_kei": [35, 37, 47, 64], "is_full_kei": [35, 37, 47, 64], "is_ful": [35, 37, 47, 64], "tempfil": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 105, 402, 415, 416, 418, 419, 423, 428, 431, 432], "register_save_hook": [35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "temporarydirectori": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 415, 416, 418, 419, 423, 428, 431, 432], "tmpdir": [35, 53, 58, 64, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 415, 416, 419, 428], "rb_load": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "register_load_hook": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "filesystem": [36, 432], "ted2nest": [37, 408], "stackedcomposit": [39, 408], "tensordictmap": [41, 408], "observation_kei": [41, 124, 127, 131, 138, 150, 151, 157, 158], "excluded_kei": [41, 187], "consolid": [41, 66, 80, 98], "lazili": [41, 97, 272, 430], "from_tensordict_pair": [41, 66], "querymodul": [41, 66], "get_keys_from_env": 41, "cattensor": [41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 124, 127, 131, 138, 150, 151, 157, 158, 415, 427, 430, 435], "unsqueezetransform": [41, 176, 430, 432], "oracl": 41, "obs_kei": 41, "state_kei": [41, 124, 127, 131, 138, 150, 151, 157, 158], "reset_st": 41, "rollout0": 41, "rollout1": 41, "rollout1b": 41, "collaps": 41, "max_length": [41, 52, 54, 55, 69, 72, 73, 92, 219, 419, 425], "valid_path": [41, 73], "assert_clos": [41, 261, 265], "subtre": [41, 73], "Or": [41, 155, 156, 271], "rollout_from_path": [41, 73], "plot": [41, 73, 415, 417, 418, 428, 429, 430], "return_nod": 41, "diverg": [41, 194, 261, 265, 306, 310, 332, 337], "endpoint": 41, "noth": [41, 138, 415, 417], "r0": [41, 415], "123": 41, "392": 41, "989": 41, "809": 41, "847": 41, "r1": 41, "235": 41, "td_root": 41, "node_data": [41, 73], "node_id": [41, 73], "nontensordata": [41, 48, 83, 89, 124, 148, 149, 192, 219, 223, 373], "_parent": [41, 73], "nontensorstack": [41, 97, 124, 138, 192, 219, 223], "weakref": [41, 73], "0x716eeb78fbf0": 41, "0x": 41, "4341220243998689835": 41, "6745467818783115365": 41, "win": [41, 73], "nvec": [42, 44], "remove_singleton": 42, "ax": [42, 274, 275, 428], "Not": [42, 43, 58, 122, 123, 136, 220, 261, 265], "neither": [42, 43, 44, 45, 89, 159, 430], "use_regist": [44, 50], "mone_hot": [44, 45], "boxlist": [44, 45], "gamma": [46, 206, 231, 268, 320, 321, 323, 324, 325, 327, 329, 330, 331, 333, 336, 338, 340, 341, 342, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 402, 411, 415, 416, 417, 428, 429, 434], "sutton": [46, 411, 428, 429], "1988": 46, "tempor": [46, 261, 265, 268, 356, 357, 362, 363], "44": [46, 110], "discount": [46, 89, 128, 206, 231, 321, 327, 330, 331, 333, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 411, 416, 417, 428, 429], "ahead": [46, 231, 435], "bias": [46, 259, 260, 263, 264, 316, 411, 415], "mitig": [46, 176], "multisteptransform": [46, 408], "99": [46, 206, 229, 268, 333, 348, 354, 361, 402, 415, 416, 417, 419, 422, 425, 428, 429, 434], "nontermin": 46, "original_reward": 46, "newli": [46, 124, 127, 131, 138, 150, 151, 157, 158], "OR": 46, "row": [47, 65, 136, 137, 195], "example_data": 48, "shae": 48, "unidimension": 50, "action_valu": [50, 254, 255, 284, 302, 303, 307, 308, 323, 329, 338, 353, 410, 418, 419, 421, 425], "keepdim": 50, "chosen_action_valu": [50, 283, 284, 292, 307, 308, 353, 410, 418, 421], "priori": 50, "uniqu": [50, 73, 110, 111, 138, 142, 143, 176, 186, 215, 216, 217, 220, 305, 382, 423, 432], "tensor_spec": [50, 170, 232, 239, 328, 329, 340, 342], "one_hot_sampl": [50, 51], "chosen_data": [52, 92], "rewarddata": [52, 92, 408], "rejected_data": [52, 92], "copy_exist": [52, 54, 59, 73], "return_earli": [52, 54, 59, 73], "share_non_tensor": [52, 54, 59, 73], "memmap": [52, 54, 59, 73, 96, 150, 157, 229, 375, 377, 389], "dataclass": [52, 54, 59, 71, 73, 338], "from_dataset": [52, 54, 92], "dataset_nam": [52, 54, 60, 72, 92, 147], "550": [52, 54, 60, 72, 92, 110, 111], "root_dir": [52, 54, 72, 92], "from_disk": [52, 54, 72, 92], "carperai": [52, 54, 60, 72], "openai_summarize_comparison": [52, 54, 72], "load_from_disk": [52, 54, 72, 92], "load_dataset": [52, 54, 72, 92], "attention_mask": [52, 54, 55, 59, 60, 69, 72, 92], "92534": 52, "input_id": [52, 54, 55, 59, 60, 69, 72, 92, 138], "end_scor": [52, 59, 60, 92], "sub_data": [52, 54], "from_tensordict": [52, 54, 59, 73], "non_tensordict": [52, 54, 59, 73], "getattr": [52, 54, 59, 73], "tensorclass": [52, 54, 59, 73, 92, 96, 98, 118], "load_memmap": [52, 54, 59, 73], "load_": [52, 54, 59, 73], "load_memmap_": [52, 54, 59, 73], "fetch": [52, 54, 59, 73, 122, 123, 125, 126, 194, 421, 431, 432], "fromkei": [52, 54, 59, 73], "saved_td": [52, 54, 59, 73], "td_load": [52, 54, 59, 73], "fake": [52, 54, 59, 73, 124, 127, 131, 138, 150, 151, 157, 158, 415, 416, 419], "_subclass": [52, 54, 59, 73], "faketensormod": [52, 54, 59, 73], "faketensor": [52, 54, 59, 73], "from_flatten": [52, 54, 59, 73], "attemptedli": [52, 54, 59, 73], "existsok": [52, 54, 59, 73, 96], "mimic": [52, 54, 59, 73, 124, 127, 131, 138, 150, 151, 157, 158], "cross": [52, 54, 59, 73, 242], "tensordictfutur": [52, 54, 59, 73], "serialis": [52, 54, 59, 73], "deepli": [52, 54, 59, 73], "memmap_": [52, 54, 59, 73, 229], "memmap_lik": [52, 54, 59, 73], "contentless": [52, 54, 59, 73], "1_000_000": [52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 110, 415, 418, 428], "alloc": [52, 54, 59, 73, 98, 253, 269, 270, 415], "memmap_refresh_": [52, 54, 59, 73], "refresh": [52, 54, 59, 73, 425, 428, 429], "saved_path": [52, 54, 59, 73], "setattr": [52, 54, 59, 73], "tent": [52, 54, 59, 72, 73], "to_tensordict": [52, 54, 59, 73, 418], "retain_non": [52, 54, 59, 73], "discrard": [52, 54, 59, 73], "switch": [52, 54, 59, 73, 262, 291, 373], "alpha": [53, 67, 102, 103, 245, 246, 248, 249, 250, 251, 257, 271, 321, 323, 329, 339, 341, 343, 345, 415, 432, 434], "ep": [53, 67, 102, 103, 197, 229, 241, 282, 322, 344, 390, 411, 415, 416, 418, 419, 422, 425], "1e": [53, 67, 102, 103, 197, 229, 241, 253, 256, 289, 415, 416, 417, 429], "08": [53, 67, 102, 103], "pin_memori": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 200, 415, 434], "schaul": [53, 102, 103], "quan": [53, 102, 103], "antonogl": [53, 102, 103], "silver": [53, 102, 103], "2015": [53, 102, 103], "ab": [53, 86, 89, 91, 102, 103, 122, 123, 125, 126, 136, 137, 142, 143, 145, 146, 154, 161, 162, 175, 201, 225, 229, 241, 247, 252, 256, 257, 263, 268, 275, 276, 277, 283, 285, 286, 292, 320, 321, 325, 326, 327, 328, 331, 332, 333, 335, 336, 339, 340, 343, 431], "1511": [53, 102, 103, 257], "05952": [53, 102, 103], "expon": [53, 67, 102, 103], "\u03b1": [53, 67, 102, 103], "delta": [53, 67, 102, 103, 259, 263, 289, 306, 310, 408, 411, 428], "1_000": [53, 58, 67, 68, 428, 432], "merg": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 430], "mini": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 429], "decid": [53, 58, 67, 68, 428, 434], "incompat": [53, 58, 67, 68, 342, 432], "drop_last": [53, 58, 67, 68, 109, 111], "notion": [53, 58, 67, 68, 281], "caution": [53, 58, 67, 68, 109, 124, 127, 131, 138, 150, 151, 157, 158, 233, 435], "codebas": [53, 58, 67, 68, 430], "return_info": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103, 105, 432], "tensordictprioritizedreplaybuff": [53, 408, 434], "simplifi": [53, 167, 421, 430, 432], "_weight": [53, 67, 102, 103], "update_prior": [53, 102, 103, 389, 412, 416, 432, 434], "36278465": 53, "invert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 318, 417], "tqdm": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 392, 415, 417, 418, 428, 429, 430], "randomsampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 415, 428], "td_error": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 323, 324, 325, 327, 328, 329, 330, 336, 338, 341, 343, 345, 346, 353, 415, 432, 434], "update_tensordict_prior": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 415, 432, 434], "insert_transform": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 171, 222], "insert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 105, 106, 116, 117, 120, 121, 171, 176, 180, 213, 222, 224], "set_sampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "set_storag": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "set_writ": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "write_count": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105], "prompt_rindex": [54, 55, 60], "promptdatatldr": 54, "116722": 54, "prompt": [55, 60], "return_tensordict": [55, 69], "text": [55, 60, 69, 87, 138, 259, 260, 263, 264, 282, 417], "tensodict": [55, 69], "valid_sampl": 55, "eough": 55, "toknen": 55, "meet": 55, "criterion": 55, "autotoken": [55, 69, 72], "from_pretrain": [55, 60, 69, 138], "gpt2": [55, 60, 69, 72, 138, 247, 252, 280], "pad_token": [55, 69], "eos_token": 55, "enough": [55, 432], "inde": [55, 184, 417, 419, 430], "index_kei": [56, 66], "hash_kei": 56, "_hash": 56, "hash_modul": [56, 61, 66], "siphash": [56, 57, 66, 138], "hash_to_int": 56, "hashtoint": 56, "query_modul": [56, 66], "key1": [56, 66, 177, 213, 383, 391, 434], "key2": [56, 66, 177, 213, 383, 391, 434], "write_hash": 56, "is_tdmodule_compat": [56, 66], "reset_out_kei": [56, 66], "orign": [56, 66], "mod": [56, 66, 194, 244, 261, 265, 305, 310, 313, 418, 419, 425], "select_out_kei": [56, 66, 320, 321, 323, 324, 328, 329, 336, 340, 341, 343, 345, 346, 419], "reset_parameters_recurs": [56, 66, 338], "relu": [56, 66, 144, 242, 252, 268, 319], "old_param": [56, 66], "bork": [56, 66], "dork": [56, 66], "reset_paramet": [56, 66, 273], "from_modul": [56, 66, 255, 309, 312, 434], "rid": [56, 66], "out_keys_sourc": [56, 66], "rubric": [56, 66, 197, 312], "revert": [56, 66, 124, 127, 131, 138, 150, 151, 157, 158, 233, 421, 432], "seq": [56, 66, 244, 259, 261, 263, 265, 305, 418, 419, 425, 427], "z": [56, 66, 260], "n_compon": 57, "dtype_cast": 57, "as_tensor": [57, 61, 419], "init_method": 57, "emb": [57, 418], "sklearn": [57, 88, 147], "byte": [57, 61], "builtin": [57, 61], "pythonhashse": [57, 61], "todo": 57, "storagecheckpointerbas": [58, 112], "roundrobinwrit": [58, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_pytre": [58, 432], "tree_map": [58, 432], "assert0": [58, 432], "ref_model": 60, "reward_model": [60, 315], "max_new_token": 60, "score_clip": 60, "kl_schedul": 60, "klcontrollerbas": 60, "num_step": [60, 419], "causal": 60, "sentenc": 60, "frozen": [60, 194, 229], "gpt2rewardmodel": 60, "get_dataload": [60, 408], "promptdata": [60, 408], "gpt2lmheadmodel": 60, "dl": 60, "block_siz": [60, 92], "tensorclass_typ": [60, 92], "openai_summarize_tldr": 60, "config_class": 60, "model_path": 60, "rollout_from_model": 60, "rollout_from_data": 60, "600": 60, "reward_kl": [60, 194], "reward_raw": 60, "sample_log_prob": [60, 298, 299, 300, 306, 310, 312, 340], "create_rollout_td": 60, "log_prob": [60, 253, 269, 270, 278, 281, 291, 310, 323, 411], "log_ratio": 60, "replic": [60, 411], "rindex": 60, "eo": 60, "generation_config": 60, "generationconfig": 60, "ti": [60, 364, 365, 366, 367, 369, 370, 371, 372, 416], "log_probs_gen": 60, "logprobs_of_label": 60, "hash_a": 61, "4669941682990263259": 61, "3778166555168484291": 61, "9122128731510687521": 61, "hash_b": 61, "heterogen": [62, 63, 97, 124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 233, 271, 272, 415, 416], "220": 64, "resembl": 66, "tensormap": 66, "collat": [66, 105], "subtyp": 66, "embedding_storag": 66, "tensor_dict_storag": 66, "new_index": 66, "key3": 66, "retrieve_valu": 66, "storage_constructor": 66, "write_fn": 66, "tensordictstorag": 66, "thumb": [66, 150, 417], "lazydynamicstorag": 66, "fixedstorag": 66, "randomprojectionhash": 66, "priority_kei": [67, 68, 84, 102, 323, 325, 328, 329, 330, 336, 338, 341, 343, 345, 346, 353, 432, 434], "reduct": [67, 102, 103, 116, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346], "prioritizedreplaybuff": [67, 408, 434], "min": [67, 102, 103, 116, 282, 321, 322, 323, 329, 339, 341, 343, 416, 417], "median": [67, 102, 103, 116, 136, 137, 169, 306, 310], "include_info": [67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "huggingfac": [69, 86, 91, 304], "co": [69, 186, 430], "pad_trunc": 69, "am": 69, "me": 69, "reassur": 69, "ok": 69, "primarili": [71, 202, 421], "educ": 71, "guess": 71, "knowledg": [71, 124, 127, 131, 138, 150, 151, 157, 158, 422, 424], "tokenizer_fn": 72, "tensordicttoken": [72, 408], "pre_tokenization_hook": 72, "valid_s": 72, "tokenizer_class": 72, "tokenizer_model_nam": 72, "tokein": 72, "elementwis": 72, "vocabulari": [72, 138, 219], "loader": [72, 417], "185068": 72, "dataset_to_tensordict": 72, "data_dir": 72, "batch_dim": [72, 124, 127, 131, 138, 150, 151, 157, 158, 406], "valid_mask_kei": 72, "batch_dimens": 72, "filder": 72, "from_dict": 72, "data_memmap": 72, "ref": 73, "branching_act": 73, "prev_act": 73, "edg": [73, 419], "travers": 73, "breadth": 73, "bf": 73, "fully_expand": 73, "get_vertex_by_hash": 73, "get_vertex_by_id": 73, "is_termin": 73, "make_nod": 73, "node_observ": 73, "bag": 73, "num_children": 73, "num_vertic": 73, "count_repeat": 73, "recustruct": 73, "scope": [73, 124, 127, 131, 138, 150, 151, 157, 158, 419, 435], "plotli": 73, "make_label": 73, "visual": [73, 201, 225, 227, 375, 417, 428, 430], "notimplementederror": [73, 415], "unsupport": 73, "selected_act": 73, "key_typ": 73, "liter": [73, 296], "recurse_through_entri": 80, "recurse_through_stack": 80, "dataset_id": [83, 85, 86, 87, 89, 90, 91], "num_proc": 83, "slice_len": [83, 89, 103, 110, 111, 375], "strict_len": 83, "arari": 83, "2600": 83, "million": [83, 418], "consequ": [83, 94, 263, 423], "50x10": 83, "available_dataset": [83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 111], "ataridqn": 83, "immutabledatasetwrit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "shorter": [83, 89, 103, 110, 111], "Be": [83, 89, 103, 110, 111], "game_nam": 83, "krull": 83, "1d": [83, 102, 103, 110, 111, 116], "cheapli": 83, "invalid_rang": 83, "999998": 83, "999999": 83, "add_count": 83, "84": [83, 110, 205, 418, 419], "valueestim": [83, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 353, 408, 411, 415, 428, 429], "convolut": [83, 245, 246, 248, 249, 271, 287, 419, 421], "2657628": 83, "2657629": 83, "2657630": 83, "2657631": 83, "2657632": 83, "2657633": 83, "2657634": 83, "2657635": 83, "2657636": 83, "2657637": 83, "2657638": 83, "2657639": 83, "2657640": 83, "2657641": 83, "2657642": 83, "2657643": 83, "2657644": 83, "2657645": 83, "2657646": 83, "2657647": 83, "2657648": 83, "2657649": 83, "2657650": 83, "2657651": 83, "2657652": 83, "2657653": 83, "2657654": 83, "2657655": 83, "2657656": 83, "2657657": 83, "2657658": 83, "2657659": 83, "2657660": 83, "2657661": 83, "2657662": 83, "2657663": 83, "2657664": 83, "2657665": 83, "2657666": 83, "2657667": 83, "2657668": 83, "2657669": 83, "2657670": 83, "2657671": 83, "2657672": 83, "2657673": 83, "2657674": 83, "2657675": 83, "2657676": 83, "2657677": 83, "2657678": 83, "2657679": 83, "2657680": 83, "2657681": 83, "2657682": 83, "2657683": 83, "2657684": 83, "2657685": 83, "2657686": 83, "2657687": 83, "2657688": 83, "2657689": 83, "2657690": 83, "2657691": 83, "1995687": 83, "1995688": 83, "1995689": 83, "1995690": 83, "1995691": 83, "1995692": 83, "1995693": 83, "1995694": 83, "1995695": 83, "1995696": 83, "1995697": 83, "1995698": 83, "1995699": 83, "1995700": 83, "1995701": 83, "1995702": 83, "1995703": 83, "1995704": 83, "1995705": 83, "1995706": 83, "1995707": 83, "1995708": 83, "1995709": 83, "1995710": 83, "1995711": 83, "1995712": 83, "1995713": 83, "1995714": 83, "1995715": 83, "1995716": 83, "1995717": 83, "1995718": 83, "1995719": 83, "1995720": 83, "1995721": 83, "1995722": 83, "1995723": 83, "1995724": 83, "1995725": 83, "1995726": 83, "1995727": 83, "1995728": 83, "1995729": 83, "1995730": 83, "1995731": 83, "1995732": 83, "1995733": 83, "1995734": 83, "1995735": 83, "1995736": 83, "1995737": 83, "1995738": 83, "1995739": 83, "1995740": 83, "1995741": 83, "1995742": 83, "1995743": 83, "1995744": 83, "1995745": 83, "1995746": 83, "1995747": 83, "1995748": 83, "1995749": 83, "1995750": 83, "untouch": [83, 89, 173, 180, 182, 183, 187, 194, 203, 204, 210, 214, 219, 221, 223, 231], "_max_run": 83, "dataset_asterix": 83, "asterix": 83, "dataset_pong": 83, "sample_from_al": [83, 105, 108], "buffer_id": [83, 108, 114], "hidden": [83, 150, 157, 175, 248, 256, 259, 260, 261, 263, 264, 265, 276, 277, 285, 286, 298, 299, 300, 301, 309, 312, 322, 337, 340, 410, 418, 427, 434], "data_path": [83, 84, 85, 86, 87, 88, 89, 90, 91], "data_path_root": [83, 84, 85, 86, 87, 88, 89, 90, 91], "delet": [83, 84, 85, 86, 87, 88, 89, 90, 91, 177, 213, 382], "chunksiz": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pool": [83, 84, 85, 86, 87, 88, 89, 90, 91, 217], "max_tasks_per_child": [83, 84, 85, 86, 87, 88, 89, 90, 91], "worker_thread": [83, 84, 85, 86, 87, 88, 89, 90, 91], "index_with_gener": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pbar": [83, 84, 85, 86, 87, 88, 89, 90, 91, 415, 417, 418, 428, 429, 430], "num_fram": [83, 84, 85, 86, 87, 88, 89, 90, 91], "unitari": [83, 84, 85, 86, 87, 88, 89, 90, 91, 430], "minariexperiencereplai": [83, 84, 85, 86, 88, 89, 90, 91], "1000000": [83, 84, 85, 86, 87, 88, 89, 90, 91], "distance_from_origin": [83, 84, 85, 86, 87, 88, 89, 90, 91], "forward_reward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qpo": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qvel": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_ctrl": [83, 84, 85, 86, 87, 88, 89, 90, 91, 131, 150], "reward_forward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_surv": [83, 84, 85, 86, 87, 88, 89, 90, 91], "x_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91, 131, 150], "x_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91, 131, 150], "y_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "y_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91], "achieved_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "desired_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "27": [83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 111, 122, 123, 150, 157], "_collate_id": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x120e21dc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_next_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "new_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "31": [83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 136, 137], "full_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x168406fc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "from_env": 85, "use_truncated_as_don": 85, "direct_download": 85, "terminate_on_end": 85, "env_kwarg": [85, 90, 91, 173, 404, 405, 415], "reconstruct": [85, 110, 111, 332, 415, 435], "get_dataset": 85, "qlearning_dataset": 85, "fewer": [85, 103, 110], "unexpectedli": 85, "traj_split": 85, "observationnorm": [85, 229, 406, 415, 416, 417, 418, 434], "maze2d": 85, "umaz": 85, "loc": [85, 124, 127, 131, 138, 150, 151, 157, 158, 194, 197, 208, 229, 262, 290, 291, 298, 299, 300, 306, 310, 312, 320, 321, 323, 336, 340, 341, 342, 343, 396, 406, 410, 415, 416, 417, 418, 421, 429, 434], "gen": 86, "dgrl": 86, "accompani": [86, 173, 214], "gap": 86, "2312": 86, "05742": 86, "gen_dgrl": 86, "procgen": 86, "bigfish": 86, "bossfight": 86, "1m_e": 86, "1m_": 86, "comma": [86, 419], "npy": 86, "mmap": [86, 90, 91], "minut": 86, "internet": [86, 91], "connect": [86, 91, 159], "minari": 87, "websit": [87, 89], "currenrtli": 87, "minari_data": 87, "door": 87, "torchrl_logg": [87, 425], "28": [87, 110, 111, 271], "door_body_po": 87, "dua": 88, "graff": 88, "2017": 88, "uci": [88, 124], "archiv": 88, "ic": 88, "edu": 88, "ml": [88, 159, 160], "adult_num": [88, 147], "adult_onehot": [88, 147], "mushroom_num": [88, 147], "mushroom_onehot": [88, 147], "covertyp": [88, 147], "shuttl": [88, 147], "magic": [88, 147, 419, 420], "shuffl": [89, 109, 111, 429], "embodi": [89, 431], "institut": 89, "demonstr": [89, 417, 419, 423, 428, 429, 430, 432, 435], "527": 89, "skill": 89, "160266": 89, "googl": [89, 90, 122, 123, 142, 143, 148, 149, 241, 417, 418, 428, 429], "open_x_embodi": 89, "2310": [89, 154], "08864": 89, "language_instruct": 89, "get_non_tensor": 89, "nor": [89, 159], "insuffici": 89, "chosen": [89, 161, 162, 215, 216, 283, 284, 292, 308, 375, 410, 424], "openx": 89, "__will": 89, "change__": 89, "randomli": [89, 109, 158, 196, 197, 216, 258, 306, 310, 421, 428, 429, 430, 432], "crop": [89, 178, 202, 375], "modal": [89, 415], "cmu_stretch": [89, 375], "is_init": [89, 91, 175, 193, 261, 265, 282, 305, 317, 418, 419], "language_embed": 89, "512": [89, 257], "lift": 89, "green": [89, 428], "garbag": 89, "lid": 89, "roboset": 90, "h5": [90, 91, 94], "roboh": [90, 154], "concis": [90, 422], "75": [90, 110], "totensor": 91, "image_s": 91, "v": [91, 229, 259, 260, 263, 264, 298, 328, 336, 343, 415, 416], "npz": 91, "2206": [91, 145, 146], "04779": [91, 321, 327], "vd4rl": 91, "squar": [91, 178, 181, 262, 290, 291, 375], "rectangular": [91, 245, 246], "walker_walk": 91, "64px": 91, "height": [91, 178, 181, 205], "veloc": [91, 124, 125, 126, 127, 131, 138, 150, 151, 157, 158, 176, 428, 429, 430, 435], "infinit": [92, 142, 143, 161, 162, 423, 432], "block": [92, 95, 121, 410, 415, 418, 419, 422, 423, 428, 432], "pairwisedataset": [92, 408], "256": [92, 142, 143, 192, 252, 416, 417, 419, 428, 429], "checkpoint_fil": 94, "h5_kwarg": 94, "iff": 94, "suffix": [94, 387], "h5py": 94, "create_dataset": 94, "immut": [95, 124, 127, 131, 138, 150, 157, 204, 222], "piec": [95, 106, 117, 120, 121, 415, 416, 417, 424, 428, 429, 430, 432], "scratch_dir": [96, 415, 416, 418, 423, 428, 431, 432], "sent": [96, 98, 118, 229], "mistak": [96, 98, 118], "overewritten": 96, "tensorstoragecheckpoint": 96, "pathlib": [96, 419], "main_ckpt_dir": 96, "rb_memmap": 96, "10_000_000": 96, "myclass": [96, 98, 118], "foo": [96, 98, 118, 301, 432, 435], "bar": [96, 98, 118, 301, 385, 386, 387, 392, 412, 416], "attach": [96, 97, 98, 99, 112, 114, 118, 416], "entiti": [96, 97, 98, 99, 112, 114, 118], "lazystacktensordict": 97, "heterougen": 97, "linearli": 97, "densifi": 97, "unlimit": [97, 99], "st": 97, "expans": [98, 338], "zero_": [98, 118, 236], "liststoag": 100, "max_capac": [102, 103, 415, 432], "max_priority_within_buff": [102, 103], "data_0": 102, "data_1": 102, "smoothen": 102, "tdrb": 102, "pack": [102, 259, 263, 417, 420, 435], "nd": [102, 103], "sum_tre": [102, 103], "min_tre": [102, 103], "end_kei": [103, 110, 111], "cache_valu": [103, 110, 111], "closer": [103, 434], "readili": [103, 110, 111, 310], "conjunct": [103, 110, 111, 416], "Will": [103, 110, 145, 375], "buffer0": [103, 110], "immutablewrit": [103, 110], "buffer1": [103, 110], "other_sampl": [103, 110], "short": [103, 110, 111, 122, 123, 124, 127, 131, 136, 137, 138, 150, 151, 157, 158, 233, 263, 264, 416, 417, 420, 421, 429, 432], "tolist": 103, "120110917137936e": 103, "06": [103, 253, 289], "storageensembl": [105, 108], "samplerensembl": 105, "writerensembl": [105, 114], "num_buffer_sampl": [105, 108], "ensembl": [105, 108, 114, 115, 121, 309, 341], "forbidden": 105, "0x13a2ef430": 105, "0x13a2f9310": 105, "interpol": [105, 205, 416, 419], "interpolationmod": 105, "bilinear": [105, 205], "0x13a2f9220": 105, "0x13a2f9f70": 105, "0x13a2d9b50": 105, "0x13a2f95b0": 105, "0x128648260": 105, "roundrobin": [106, 117], "incomplet": [109, 111], "fresh": 109, "haven": [109, 431], "remain": [109, 175, 183, 184, 194, 215, 275, 422], "draw": [109, 258], "use_gpu": [110, 111], "slicesamplerwithoutreplac": [110, 432], "acceler": [110, 111, 428, 429], "significantli": [110, 111, 176, 411, 415, 416, 422, 429], "ep_1": [110, 111], "ep_2": [110, 111], "73": 110, "74": 110, "76": 110, "77": 110, "42": [110, 266, 281, 320, 321, 323, 324, 328, 336, 343], "43": 110, "45": 110, "67": [110, 427], "68": 110, "69": 110, "70": 110, "71": 110, "80": [110, 122, 123], "82": 110, "83": 110, "78": 110, "79": 110, "320": [110, 111, 125, 126], "700": [110, 111], "dataid": [110, 111], "counter": [111, 220, 305, 385, 412, 419], "request": [111, 173, 202], "51": 111, "__len__": 112, "rank_kei": 116, "rank": [116, 242], "samplerwithoutreplac": [116, 417, 429, 432], "get_insert_index": 116, "convers": [122, 123, 136, 137, 167, 411], "2106": [122, 123, 326, 345], "13281": [122, 123], "categorical_action_encod": [122, 123, 124, 127, 130, 131, 132, 133, 136, 137, 138, 145, 146, 150, 151, 154, 157, 158, 167, 419], "frame_skip": [122, 123, 125, 126, 130, 131, 132, 133, 136, 137, 139, 140, 145, 146, 154, 190, 385, 387, 395, 412, 415, 416, 417, 434], "allow_done_after_reset": [122, 123, 125, 126, 127, 130, 132, 133, 136, 137, 145, 146, 148, 149, 154, 159, 160], "toler": [122, 123, 125, 126, 130, 132, 133, 136, 137, 145, 146, 148, 149, 154, 159, 160, 253, 289], "is_avail": [122, 123, 415, 416, 417, 418, 428, 429, 431], "ant": [122, 123, 124, 127, 131, 134, 138, 150, 151, 157, 158, 431], "87": [122, 123], "acrobot": [122, 123, 125, 126, 435], "advant": [122, 123, 136, 137], "timer": [122, 123, 136, 137], "timeit": [122, 123, 136, 137, 419], "310": [122, 123], "ms": [122, 123, 136, 137], "268": [122, 123], "433": [122, 123], "213": [122, 123], "8605": [122, 123], "pipelineenv": 123, "get_environ": 123, "san": 124, "fen": [124, 148, 149], "pgn": 124, "legal": 124, "board": [124, 158], "include_san": 124, "algebra": [124, 430], "notat": 124, "include_fen": 124, "forsyth": 124, "edward": 124, "include_pgn": 124, "portabl": [124, 424], "include_legal_mov": 124, "include_hash": 124, "mask_act": 124, "subset": [124, 430, 431], "29275": 124, "rnbqkbnr": [124, 148, 149], "pppppppp": [124, 148, 149], "kqkq": [124, 148, 149], "legal_mov": 124, "219": 124, "5p2": 124, "ppppp1pp": 124, "event": [124, 269, 270, 278, 364, 365, 366, 367, 369, 370, 371, 372, 432], "date": [124, 175, 378], "white": 124, "f4": 124, "96": 124, "kq": 124, "5n2": 124, "rnbqkb1r": 124, "nf3": 124, "na6": 124, "c4": 124, "f6": 124, "h4": 124, "rb8": 124, "na3": 124, "ra": 124, "_nestedkei": [124, 127, 131, 138, 150, 151, 157, 158], "sort": [124, 127, 131, 138, 150, 151, 157, 158, 177, 282], "another_act": [124, 127, 131, 138, 150, 151, 157, 158], "discretebox": [124, 127, 131, 138, 150, 151, 157, 158], "mutabl": [124, 127, 131, 138, 150, 151, 157, 158], "action_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158, 417, 429], "had": [124, 127, 131, 138, 150, 151, 157, 158, 421, 423], "all_act": [124, 127, 131, 138, 150, 151, 157, 158], "_callabletransform": [124, 127, 131, 138, 150, 151, 157, 158], "auto_specs_": [124, 127, 131, 138, 150, 151, 157, 158], "batch_lock": [124, 127, 129, 131, 138, 150, 157, 173, 216, 222, 430], "action_spac": [124, 127, 131, 138, 150, 151, 157, 158, 186, 255, 284, 302, 303, 307, 308, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 418, 419, 421, 425], "check_dtyp": [124, 127, 131, 138, 150, 151, 157, 158, 233], "discrep": [124, 127, 131, 138, 150, 151, 157, 158, 233, 320, 322, 324, 325, 337, 340, 342, 353], "broken": [124, 127, 131, 138, 150, 151, 157, 158, 233], "rng": [124, 127, 131, 138, 150, 151, 157, 158, 233, 430], "done_keys_group": [124, 127, 131, 138, 150, 151, 157, 158], "another_don": [124, 127, 131, 138, 150, 151, 157, 158], "done_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "empty_cach": [124, 127, 131, 138, 150, 151, 157, 158, 222], "fake_tensordict": [124, 127, 131, 138, 150, 151, 157, 158, 416, 419], "braxenv": [124, 127, 131, 138, 150, 151, 157, 158, 204, 408, 420], "envnam": [124, 127, 131, 138, 150, 151, 157, 158], "full_action_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158, 428, 429], "full_done_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "full_observation_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "full_reward_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "pipeline_st": [124, 127, 131, 138, 150, 151, 157, 158], "full_state_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "get_legal_mov": 124, "input_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "is_spec_lock": [124, 127, 131, 138, 150, 151, 157, 158], "maybe_reset": [124, 127, 131, 138, 150, 151, 157, 158], "speak": [124, 127, 131, 138, 150, 151, 157, 158, 310, 415], "observation_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "output_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "register_gym": [124, 127, 131, 138, 150, 151, 157, 158, 420], "entry_point": [124, 127, 131, 138, 150, 151, 157, 158], "info_kei": [124, 127, 131, 138, 150, 151, 157, 158], "reward_threshold": [124, 127, 131, 138, 150, 151, 157, 158], "nondeterminist": [124, 127, 131, 138, 150, 151, 157, 158], "max_episode_step": [124, 127, 130, 131, 132, 138, 150, 151, 157, 158], "order_enforc": [124, 127, 131, 138, 150, 151, 157, 158], "autoreset": [124, 127, 131, 138, 150, 151, 157, 158], "disable_env_check": [124, 127, 130, 131, 138, 145, 146, 150, 151, 157, 158], "apply_api_compat": [124, 127, 131, 138, 150, 151, 157, 158], "nasium": [124, 127, 131, 138, 150, 151, 157, 158, 167], "dmcontrolenv": [124, 127, 131, 138, 150, 151, 157, 158, 375, 408, 415, 420, 427, 435], "dmc": [124, 127, 131, 138, 150, 151, 157, 158], "cheetah": [124, 125, 126, 127, 131, 138, 150, 151, 157, 158, 375, 415], "removeemptyspec": [124, 127, 131, 138, 150, 151, 157, 158], "threshold": [124, 127, 131, 138, 150, 151, 157, 158, 258, 321, 322, 417], "learnt": [124, 127, 131, 138, 150, 151, 157, 158, 402], "checker": [124, 127, 130, 131, 138, 145, 146, 150, 151, 157, 158], "stepapicompat": [124, 127, 131, 138, 150, 151, 157, 158], "deem": [124, 127, 131, 138, 142, 143, 150, 151, 157, 158, 161, 162], "task_nam": [124, 125, 127, 131, 138, 150, 151, 157, 158], "envgym": [124, 127, 131, 138, 150, 151, 157, 158], "0855": [124, 127, 131, 138, 150, 151, 157, 158], "0215": [124, 127, 131, 138, 150, 151, 157, 158], "0881": [124, 127, 131, 138, 150, 151, 157, 158], "0412": [124, 127, 131, 138, 150, 151, 157, 158], "1101": [124, 127, 131, 138, 150, 151, 157, 158], "0080": [124, 127, 131, 138, 150, 151, 157, 158], "0254": [124, 127, 131, 138, 150, 151, 157, 158], "0424": [124, 127, 131, 138, 150, 151, 157, 158], "9609e": [124, 127, 131, 138, 150, 151, 157, 158], "9776e": [124, 127, 131, 138, 150, 151, 157, 158], "04": [124, 127, 131, 135, 138, 150, 151, 157, 158], "6347e": [124, 127, 131, 138, 150, 151, 157, 158], "3842e": [124, 127, 131, 138, 150, 151, 157, 158], "5338e": [124, 127, 131, 138, 150, 151, 157, 158], "3064e": [124, 127, 131, 138, 150, 151, 157, 158], "0381e": [124, 127, 131, 138, 150, 151, 157, 158], "6656e": [124, 127, 131, 138, 150, 151, 157, 158], "05": [124, 127, 131, 138, 150, 151, 157, 158, 241, 430], "0204e": [124, 127, 131, 138, 150, 151, 157, 158], "0833": [124, 127, 131, 138, 150, 151, 157, 158], "0275": [124, 127, 131, 138, 150, 151, 157, 158], "0612": [124, 127, 131, 138, 150, 151, 157, 158], "0770": [124, 127, 131, 138, 150, 151, 157, 158], "1256": [124, 127, 131, 138, 150, 151, 157, 158], "0082": [124, 127, 131, 138, 150, 151, 157, 158], "0186": [124, 127, 131, 138, 150, 151, 157, 158], "0476": [124, 127, 131, 138, 150, 151, 157, 158], "2221": [124, 127, 131, 138, 150, 151, 157, 158], "2256": [124, 127, 131, 138, 150, 151, 157, 158], "5930": [124, 127, 131, 138, 150, 151, 157, 158], "6937": [124, 127, 131, 138, 150, 151, 157, 158], "5865": [124, 127, 131, 138, 150, 151, 157, 158], "5479": [124, 127, 131, 138, 150, 151, 157, 158], "0187": [124, 127, 131, 138, 150, 151, 157, 158], "6825": [124, 127, 131, 138, 150, 151, 157, 158], "5224": [124, 127, 131, 138, 150, 151, 157, 158], "0018": [124, 127, 131, 138, 150, 151, 157, 158], "1005": [124, 127, 131, 138, 150, 151, 157, 158], "0335": [124, 127, 131, 138, 150, 151, 157, 158], "0268": [124, 127, 131, 138, 150, 151, 157, 158], "0133": [124, 127, 131, 138, 150, 151, 157, 158], "0627": [124, 127, 131, 138, 150, 151, 157, 158], "0074": [124, 127, 131, 138, 150, 151, 157, 158], "0488": [124, 127, 131, 138, 150, 151, 157, 158], "0353": [124, 127, 131, 138, 150, 151, 157, 158], "0075": [124, 127, 131, 138, 150, 151, 157, 158], "0069": [124, 127, 131, 138, 150, 151, 157, 158], "0098": [124, 127, 131, 138, 150, 151, 157, 158], "0058": [124, 127, 131, 138, 150, 151, 157, 158], "0033": [124, 127, 131, 138, 150, 151, 157, 158], "0157": [124, 127, 131, 138, 150, 151, 157, 158], "0004": [124, 127, 131, 138, 150, 151, 157, 158], "0381": [124, 127, 131, 138, 150, 151, 157, 158], "0452": [124, 127, 131, 138, 150, 151, 157, 158], "11355747": [124, 127, 131, 138, 150, 151, 157, 158], "04257728": [124, 127, 131, 138, 150, 151, 157, 158], "00408397": [124, 127, 131, 138, 150, 151, 157, 158], "04155852": [124, 127, 131, 138, 150, 151, 157, 158], "0389733": [124, 127, 131, 138, 150, 151, 157, 158], "01409826": [124, 127, 131, 138, 150, 151, 157, 158], "0978704": [124, 127, 131, 138, 150, 151, 157, 158], "08808327": [124, 127, 131, 138, 150, 151, 157, 158], "03970837": [124, 127, 131, 138, 150, 151, 157, 158], "00535434": [124, 127, 131, 138, 150, 151, 157, 158], "02353762": [124, 127, 131, 138, 150, 151, 157, 158], "05116226": [124, 127, 131, 138, 150, 151, 157, 158], "02788907": [124, 127, 131, 138, 150, 151, 157, 158], "06848346": [124, 127, 131, 138, 150, 151, 157, 158], "05154399": [124, 127, 131, 138, 150, 151, 157, 158], "0371798": [124, 127, 131, 138, 150, 151, 157, 158], "05128025": [124, 127, 131, 138, 150, 151, 157, 158], "dydact": [124, 127, 131, 138, 150, 151, 157, 158], "gym_env": [124, 127, 131, 138, 150, 151, 157, 158, 434], "reset_kei": [124, 127, 131, 138, 150, 151, 157, 158, 176, 209, 215, 216, 217, 428], "multitask": [124, 127, 131, 138, 150, 151, 157, 158], "multiag": [124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 239, 272, 283, 292, 322, 337, 340, 353], "another_reward": [124, 127, 131, 138, 150, 151, 157, 158], "reward_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "auto_cast_to_devic": [124, 127, 131, 138, 150, 151, 157, 158, 429], "break_when_all_don": [124, 127, 131, 137, 138, 150, 151, 157, 158], "soon": [124, 127, 131, 138, 150, 151, 152, 153, 157, 158], "__sort": [124, 127, 131, 138, 150, 151, 157, 158], "as__": [124, 127, 131, 138, 150, 151, 157, 158], "argmaxmodul": [124, 127, 131, 138, 150, 151, 157, 158], "argmax": [124, 127, 131, 138, 150, 151, 157, 158, 255, 284, 303, 308, 419, 421], "n_act": [124, 127, 131, 138, 150, 151, 157, 158, 194, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 422], "ourselv": [124, 127, 131, 138, 150, 151, 157, 158, 417, 435], "emul": [124, 127, 131, 138, 150, 151, 157, 158], "epoch": [124, 127, 131, 138, 150, 151, 157, 158, 392, 417, 428, 429], "input_td": [124, 127, 131, 138, 150, 151, 157, 158], "rollout_td": [124, 127, 131, 138, 150, 151, 157, 158], "state_spec_unbatch": [124, 127, 131, 138, 150, 151, 157, 158], "prevail": [124, 127, 131, 138, 150, 151, 157, 158, 177, 209, 239], "next_tensordict": [124, 127, 131, 138, 150, 151, 157, 158, 238], "precomput": [124, 127, 131, 138, 150, 151, 157, 158], "_stepmdp": [124, 127, 131, 138, 150, 151, 157, 158, 238], "exclude_act": [124, 127, 131, 138, 150, 151, 157, 158, 238], "leverag": [124, 127, 131, 138, 141, 150, 151, 152, 153, 157, 158, 415, 429, 435], "minim": [124, 127, 131, 138, 150, 151, 157, 158, 377, 432], "reset_data": [124, 127, 131, 138, 150, 151, 157, 158, 435], "dm_control": [125, 126, 415, 427, 435], "2006": [125, 126, 321, 327], "12983": [125, 126], "240": [125, 126, 434], "swingup": [125, 126, 435], "swingup_spars": [125, 126], "ball_in_cup": [125, 126], "catch": [125, 126, 419], "balance_spars": [125, 126], "three_pol": [125, 126], "two_pol": [125, 126], "finger": [125, 126], "turn_easi": [125, 126], "turn_hard": [125, 126], "fish": [125, 126], "upright": [125, 126, 416], "swim": [125, 126], "hopper": [125, 126], "hop": [125, 126], "humanoid": [125, 126, 150, 157, 427], "walk": [125, 126, 150, 157, 416, 427], "run_pure_st": [125, 126], "bring_bal": [125, 126], "bring_peg": [125, 126], "insert_bal": [125, 126], "insert_peg": [125, 126], "point_mass": [125, 126], "reacher": [125, 126], "swimmer": [125, 126], "swimmer6": [125, 126], "swimmer15": [125, 126], "walker": [125, 126], "dog": [125, 126], "trot": [125, 126], "humanoid_cmu": [125, 126], "lqr": [125, 126], "lqr_2_1": [125, 126], "lqr_6_2": [125, 126], "quadrup": [125, 126], "escap": [125, 126], "stacker": [125, 126], "stack_2": [125, 126], "stack_4": [125, 126], "deviceless": 127, "run_type_check": [127, 144], "hint": 127, "counterenv": 127, "creator": [128, 397, 398, 404, 405, 406], "substitut": [128, 215, 229, 421], "vecnorm": [128, 406], "env_creat": [128, 415], "test_env1": 128, "_td": 128, "observation_count": [128, 435], "test_env2": 128, "sleep": [128, 435], "ps": 128, "p1": 128, "p2": 128, "9934": 128, "make_vari": [128, 220], "variant": [128, 220, 243, 410], "trajcount": 128, "env_creator_pendulum": 128, "env_creator_cartpol": 128, "env_str": 129, "device_map": 129, "registri": [130, 159], "asyncvectorenv": 130, "involv": [130, 132, 133, 142, 143, 154, 173, 176, 220, 261, 265, 420, 422], "pixel_observ": [130, 132, 133, 154], "pixelobservationwrapp": [130, 132, 133, 154], "adventur": [130, 132], "airraid": [130, 132, 435], "alien": [130, 132], "time_limit": 130, "timelimit": [130, 142, 143, 161, 162], "default_info_dict_read": [130, 131, 132, 150], "reader": [130, 131, 132, 150, 416], "set_info_dict_read": [130, 131, 132, 150, 420], "info_dict": [130, 131, 132, 150], "gymlikeenv": [130, 132, 408], "auto_register_info_dict": [130, 131, 132, 150], "multibinari": [130, 132], "multidiscret": [130, 132], "rag": [130, 132], "gym_conversion_exampl": [130, 132], "info_dict_read": [131, 150], "ignore_priv": 131, "baseinfodictread": 131, "tensordictprim": [131, 150, 244, 261, 265, 317, 410, 418], "succe": [131, 150], "underscor": 131, "primer": [131, 216, 244, 261, 265, 317, 418], "halfcheetah": [131, 150, 169, 205, 415, 434], "reward_run": [131, 150], "read_act": 131, "read_don": 131, "nonsens": 131, "fallback": 131, "read_ob": 131, "dictat": [131, 195, 306, 310, 340, 415, 430], "read_reward": 131, "hoc": [131, 150, 421], "dict_read": 131, "my_info_kei": 131, "some_env": 131, "vecenv": 132, "vectorenv": 132, "convert_actions_to_numpi": 132, "secur": 133, "habitat3": 133, "ai": [133, 431], "habitatrenderpick": 133, "isaacgym": [134, 135], "isaacgymwrapp": [134, 408], "isaacgymenv": [135, 408], "webpag": 135, "isaac": 135, "essenc": [135, 420], "instadeepai": [136, 137], "2306": [136, 137], "09884": [136, 137], "snake": [136, 137], "grid": [136, 137, 375], "bodi": [136, 137], "body_st": [136, 137], "fruit_posit": [136, 137], "col": [136, 137], "head_posit": [136, 137], "tail": [136, 137], "game2048": [136, 137], "maze": [136, 137], "cleaner": [136, 137], "cvrp": [136, 137], "multicvrp": [136, 137], "minesweep": [136, 137], "rubikscub": [136, 137], "knapsack": [136, 137], "sudoku": [136, 137], "tsp": [136, 137], "connector": [136, 137], "v2": [136, 137, 155, 156, 349, 364, 365, 366, 367, 369, 370, 371, 372, 418], "mmst": [136, 137], "graphcolor": [136, 137], "partli": [136, 137], "scrambl": [136, 137], "robotwarehous": [136, 137], "tetri": [136, 137], "binpack": [136, 137], "jobshop": [136, 137], "0x1fca91910": 136, "122": [136, 137, 435], "0x1ff9baee0": 136, "134": [136, 137], "0x1ff9ba7c0": 136, "172": [136, 137], "jit": 137, "eager": 137, "tdreset": [137, 231, 427], "whichev": 137, "drastic": [137, 150, 432], "mctsforest": [138, 408], "overview": [138, 417, 419, 422, 428, 429, 434], "vocab_s": 138, "hashing_modul": 138, "text_output": 138, "decod": [138, 165, 276], "batch_decod": 138, "text_kei": 138, "gpt2token": 138, "make_tensordict": 138, "mo": [139, 140], "minecart": [139, 140], "mo_gym": [140, 195], "qualnam": 141, "neural": [141, 152, 153, 245, 246, 279, 281, 287, 309, 410, 416, 417, 418, 421, 428, 429, 430, 435], "group_map": [141, 142, 143, 148, 149, 152, 153, 159, 160, 161, 162, 163, 428], "constructiuon": [141, 152, 153], "premad": [141, 142, 143, 152, 153, 161, 162, 353], "all_in_one_group": [141, 148, 149, 163], "agent_0": [141, 152, 153, 159, 163, 213], "agent_1": [141, 152, 153, 159, 163, 213], "agent_2": [141, 152, 153, 159, 163], "agent_3": [141, 159], "one_group_per_ag": [141, 152, 153], "meltingpot": [142, 143], "2211": [142, 143], "13746": [142, 143], "melt": [142, 143], "pot": [142, 143], "novel": [142, 143, 422], "social": [142, 143], "familiar": [142, 143, 416, 429, 435], "unfamiliar": [142, 143], "broad": [142, 143], "cooper": [142, 143, 428, 429], "decept": [142, 143], "reciproc": [142, 143], "stubborn": [142, 143], "substrat": [142, 143], "ml_collect": 142, "config_dict": 142, "configdict": 142, "categorical_act": [142, 143, 148, 149, 152, 153, 155, 156, 159, 160, 161, 162], "marlgroupmaptyp": [142, 143, 148, 149, 152, 153, 159, 160, 161, 162, 163, 408, 428], "agent_nam": [142, 143, 161, 162, 163], "agent_names_to_indices_map": [142, 143, 161, 162], "env_torchrl": [142, 143], "commons_harvest__open": [142, 143], "rgb": [142, 143], "144": [142, 143], "192": [142, 143], "collective_reward": [142, 143], "ready_to_shoot": [142, 143], "88": [142, 143, 155, 156], "substrate_config": 143, "get_config": 143, "mp_env": 143, "build_from_config": 143, "default_player_rol": 143, "mymbenv": [144, 242, 268], "world_model": [144, 242, 268, 332], "hidden_observ": [144, 242, 268], "mlp": [144, 242, 245, 246, 248, 249, 250, 251, 257, 261, 265, 268, 272, 273, 298, 302, 317, 325, 327, 410, 416, 419, 421, 422, 425, 427, 431, 434], "worldmodelwrapp": [144, 242, 268], "activation_class": [144, 242, 245, 246, 248, 249, 250, 251, 256, 257, 266, 268, 271, 272, 416, 421, 428, 429, 434], "activate_last_lay": [144, 242, 251, 266, 268], "sail": [145, 146], "sg": [145, 146], "10558": [145, 146], "readthedoc": [145, 148, 149], "en": [145, 148, 149], "python_interfac": 145, "envpoolmixin": 146, "env_bas": 146, "task_id": 146, "env_typ": 146, "gym_reset_return_info": 146, "envpool_env": 146, "www": [147, 269, 270], "fetch_openml": 147, "106": 147, "openspiel": [148, 149], "open_spiel": [148, 149], "game_str": 148, "return_st": [148, 149, 152, 153], "4672": [148, 149], "current_play": [148, 149], "674": 148, "2048": [148, 149], "add_nois": [148, 149], "amazon": [148, 149], "backgammon": [148, 149], "restor": [148, 149], "td_restor": [148, 149], "pyspiel": 149, "load_gam": 149, "new_initial_st": 149, "3009": 149, "my_env_fun": [150, 157], "custom_attribute_list": [150, 157], "custom_attribut": [150, 157], "custom_method_list": [150, 157], "custom_method": [150, 157], "deploi": [150, 157, 173, 419], "slight": [150, 157, 416], "share_individual_td": [150, 157], "shared_memori": [150, 157], "policy_proof": [150, 157], "ll": [150, 157, 259, 260, 263, 264, 415, 416, 417, 418, 420, 421, 422, 423, 425, 429, 435], "serial_for_singl": [150, 157, 416], "circular": [150, 157, 415], "list_of_kwarg": [150, 157], "com_veloc": [150, 157], "head_height": [150, 157], "joint_angl": [150, 157], "torso_vert": [150, 157], "timeout": 150, "idl": 150, "batched_pipe_timeout": 150, "stringent": [150, 417, 428, 429], "inter": 150, "penv": [150, 220], "env_fix": 150, "influenc": 150, "myenv": [150, 173, 182, 185], "pipe": 150, "update_kwarg": [150, 157], "th": [151, 189, 224, 259, 263, 430], "thdot": [151, 430], "max_spe": [151, 430], "max_torqu": [151, 430], "gen_param": [151, 430], "gravit": [151, 430], "torqu": [151, 430], "pettingzoo": [152, 153, 428, 429], "pet": [152, 153], "zoo": [152, 153], "__": [152, 153], "aecenv": [152, 153], "use_mask": [152, 153], "dead": [152, 153], "done_on_ani": [152, 153, 428], "compulsori": [152, 153], "adversary_0": [152, 153], "adversari": [152, 153, 334, 428], "sisl": 152, "multiwalker_v9": 152, "aec": [152, 153], "n_piston": [152, 153], "pistonball_v6": [152, 153], "piston": [152, 153], "piston_0": [152, 153], "piston_1": [152, 153], "piston_20": [152, 153], "tictactoe_v3": [152, 153], "player": [152, 153, 158], "player_1": [152, 153], "player_2": [152, 153], "butterfli": 153, "parallel_env": [153, 415, 434, 435], "expos": [154, 182, 185, 311, 416], "vikashplu": 154, "wiki": 154, "06828": 154, "from_depth": 154, "smacv2": [155, 156], "starcraft": [155, 156], "challeng": [155, 156, 420, 430, 431], "10gen_terran": [155, 156], "10gen_zerg": [155, 156], "10gen_protoss": [155, 156], "3m": [155, 156], "8m": [155, 156], "25m": [155, 156], "5m_vs_6m": [155, 156], "8m_vs_9m": [155, 156], "10m_vs_11m": [155, 156], "27m_vs_30m": [155, 156], "mmm": [155, 156], "mmm2": [155, 156], "2s3z": [155, 156], "3s5z": [155, 156], "3s5z_vs_3s6z": [155, 156], "3s_vs_3z": [155, 156], "3s_vs_4z": [155, 156], "3s_vs_5z": [155, 156], "1c3s5z": [155, 156], "2m_vs_1z": [155, 156], "corridor": [155, 156], "6h_vs_8z": [155, 156], "2s_vs_1sc": [155, 156], "so_many_banel": [155, 156], "bane_vs_ban": [155, 156], "2c_vs_64zg": [155, 156], "old": [155, 156, 337, 435], "smac": [155, 156], "map_nam": [155, 156], "176": [155, 156], "battle_won": [155, 156], "dead_al": [155, 156], "dead_enemi": [155, 156], "episode_limit": [155, 156], "322": [155, 156], "procedur": [155, 156], "distribution_config": [155, 156], "n_unit": [155, 156], "n_enemi": [155, 156], "team_gen": [155, 156], "dist_typ": [155, 156], "weighted_team": [155, 156], "unit_typ": [155, 156], "marin": [155, 156], "maraud": [155, 156], "medivac": [155, 156], "exception_unit_typ": [155, 156], "start_posit": [155, 156], "surrounded_and_reflect": [155, 156], "map_x": [155, 156], "map_i": [155, 156], "capability_config": [155, 156], "131": [155, 156], "starcraft2env": 156, "tic": 158, "tac": 158, "toe": 158, "single_play": 158, "player1": 158, "desired_batch_s": 158, "player0": 158, "uniti": [159, 160], "technolog": [159, 160], "llapi": [159, 160], "mlagents_env": [159, 160], "unityenviron": [159, 160], "file_nam": 159, "registered_nam": 159, "localhost": 159, "3dball": 159, "group_0": 159, "vectorsensor_size8": 159, "continuous_act": [159, 161, 162, 373, 428, 429], "agent_10": 159, "agent_11": 159, "agent_4": 159, "agent_5": 159, "agent_6": 159, "agent_7": 159, "agent_8": 159, "agent_9": 159, "group_reward": 159, "proroklab": [161, 162], "vectorizedmultiagentsimul": [161, 162], "2207": [161, 162], "03530": [161, 162], "basescenario": 161, "defaultt": 161, "sparsiti": 161, "unbatched_action_spec": [161, 162], "unbatched_observation_spec": [161, 162], "unbatched_reward_spec": [161, 162], "het_spec": [161, 162], "het_specs_map": [161, 162], "flock": [161, 162, 373], "agent_collision_rew": [161, 162], "agent_distance_rew": [161, 162], "ca": 163, "environment4": 163, "get_group_map": 163, "sumbodul": 164, "model_bas": [165, 166, 242, 268], "model_based_env": [165, 331], "dreamerenv": [165, 331, 408], "model_based_env_ev": 165, "spec_typ": 167, "convert_specnam": 167, "remap_state_to_observ": 167, "spectyp": 167, "unus": 167, "num_interv": 169, "out_action_kei": 169, "samplingstrategi": 169, "optino": 169, "intenum": 169, "interv": [169, 374, 375, 384, 394, 416, 430], "action_disc": 169, "transform_input_spec": [169, 173, 180, 182, 183, 184, 199, 203, 204, 209, 213, 214, 215, 216, 219, 221, 223, 226, 231], "masker": 170, "maskedenv": 170, "ones_lik": 170, "scatter": 170, "fill_float": 172, "fill_int": 172, "fill_bool": 172, "someenvclass": 172, "autoresetenv": 172, "fooenv": 172, "sign": [172, 211, 355, 428], "envtyp": 172, "reshape_fn": [173, 419], "reset_func": 173, "tensordict_batch_s": 173, "tensordict_reset": [173, 430], "transform_env_batch_s": [173, 180, 221, 231], "transform_output_spec": [173, 180, 182, 183, 187, 194, 203, 204, 210, 214, 219, 221, 223, 231], "transform_observation_spec": [173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 191, 193, 194, 197, 199, 203, 204, 205, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 231, 430], "transform_reward_spec": [173, 174, 179, 180, 182, 183, 187, 194, 195, 203, 204, 207, 208, 209, 210, 211, 213, 214, 219, 221, 223, 224, 231], "transform_full_done_spec": [173, 180, 182, 183, 187, 194, 203, 204, 210, 214, 219, 221, 223, 231], "biner": 174, "burn_in": 175, "burn": 175, "burnt": 175, "gru_modul": [175, 261, 317], "input_s": [175, 216, 259, 260, 261, 263, 264, 265, 317, 418, 419], "hidden_s": [175, 216, 259, 260, 261, 263, 264, 265, 317, 418, 419], "default_recurrent_mod": [175, 261, 265], "burn_in_transform": 175, "gru": [175, 216, 260, 261, 317, 419], "num_lay": [175, 259, 261, 263, 265, 276, 277, 317, 419], "86": 175, "3008": 175, "0344": 175, "padding_valu": [176, 269, 270], "as_invers": 176, "movement": 176, "1312": 176, "5602": 176, "consumpt": [176, 408], "pictur": 176, "pixels_trsf": [176, 432], "grayscal": [176, 416, 418, 419, 432, 435], "data_exclud": [176, 432], "make_rb_transform_and_sampl": 176, "sampler_kwarg": 176, "redund": [176, 418], "del_kei": [177, 213, 225, 427, 430], "unsqueeze_if_oor": 177, "observation_posit": 177, "observation_veloc": 177, "center": [178, 281, 375], "width": [178, 181, 205], "scalar": [179, 207, 240, 249, 251, 258, 274, 275, 282, 316, 320, 321, 322, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 410, 416, 422, 430], "permit": [179, 189, 213, 224, 320, 322, 337, 340, 342], "rewardsc": [180, 222, 415, 416, 418], "rewardclip": 180, "transformed_env": [180, 221, 222, 420], "transform_env_devic": [180, 183, 221, 231], "transform_state_spec": [180, 183, 197, 221, 223, 224, 231], "dtype_in": 182, "dtype_out": 182, "scan": [182, 185, 311, 312], "resp": [182, 185], "not_transform": [182, 185], "orig_devic": 183, "unspecifi": 183, "transform_done_spec": [183, 213, 221, 223, 231], "num_actions_effect": 184, "max_act": 184, "include_forward": 184, "num_act": [184, 246, 329, 419, 421], "action_out": 184, "_call": [184, 189, 430], "eol_kei": 186, "lives_kei": 186, "eol_attribut": 186, "unwrap": 186, "breakout": 186, "210": [186, 199], "160": [186, 199], "eol_transform": 186, "eol": 186, "dqnloss": [186, 320, 321, 323, 324, 327, 329, 330, 331, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 353, 399, 408, 411, 416, 418, 419, 425], "register_kei": 186, "loss_or_advantag": 186, "lossmodul": [186, 392, 401, 402, 408, 411], "valueestimatorbas": [186, 338, 408], "finit": [188, 281, 421, 432], "first_dim": 189, "last_dim": 189, "allow_positive_dim": [189, 213, 224], "frameskip": 189, "repeatedli": [190, 417, 429], "hash_fn": 192, "use_raw_nontensor": [192, 219, 223], "repertoir": 192, "reproducible_hash": 192, "unarytransform": 192, "observation_str": 192, "tobyt": [192, 223], "observation_hash": 192, "x08": 192, "x8b": 192, "xbexav": 192, "xbf": 192, "x00": 192, "xee": 192, "xb5": 192, "x17": 192, "x8f": 192, "xbe": [192, 223], "x88": 192, "xccu": 192, "xc0vr": 192, "init_kei": [193, 305], "tracker": 193, "pi_curr": 194, "pi_0": 194, "overfit": 194, "probabilist": [194, 306, 320, 340, 408, 417, 434], "get_dist": [194, 310, 311], "normalparamextractor": [194, 298, 299, 300, 306, 312, 320, 321, 323, 329, 336, 340, 341, 342, 343, 345, 346, 410, 417, 421, 429, 434], "probabilisticactor": [194, 298, 299, 300, 301, 320, 321, 323, 326, 328, 329, 336, 339, 340, 341, 342, 343, 345, 346, 410, 415, 417, 421, 428, 429], "tanhnorm": [194, 298, 299, 300, 306, 312, 320, 321, 323, 336, 340, 341, 342, 343, 345, 346, 408, 417, 429, 434], "return_log_prob": [194, 298, 299, 300, 306, 310, 312, 342, 410, 417, 421, 428, 429, 434], "apply_": 194, "copy_": [194, 415], "formula": [194, 262, 290, 291, 320, 322, 337, 340, 411, 417], "mogymwrapp": [195, 408], "mo_env": 195, "sea": 195, "treasur": 195, "so_env": 195, "noop": 196, "trial": 196, "standard_norm": [197, 208, 229, 415, 416, 418], "affin": [197, 208, 229], "layer": [197, 229, 241, 245, 246, 248, 249, 254, 256, 259, 260, 261, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 287, 288, 295, 304, 313, 410, 416, 417, 418, 419, 421, 428, 431], "epsilon": [197, 240, 258, 282, 344, 390, 416, 417, 418, 421], "recover": 197, "set_default_tensor_typ": 197, "doubletensor": 197, "isclos": 197, "next_ob": [197, 355, 356, 357, 358, 434], "init_stat": [197, 415, 416, 417, 418], "3752e": 197, "5087e": 197, "9294e": 197, "9636": 197, "5608": 197, "6408": 197, "num_it": [197, 416, 417], "reduce_dim": [197, 415, 416, 417, 418], "cat_dim": [197, 415, 416, 417, 418], "keep_dim": [197, 416, 418], "statist": [197, 229, 241, 342, 406, 415, 416, 417, 435], "gaussian": [197, 216, 240, 242, 268, 274, 275, 280, 417, 419, 428], "empir": [197, 242, 268, 306, 310, 415, 417, 429], "3d": [197, 245], "reorder": 199, "in_keys_in": [199, 224], "channel": [199, 218, 271, 276, 277, 416], "r3m": [201, 431], "resnet": [201, 225, 227], "ego4d": [201, 225, 227], "univers": [201, 225, 227, 420], "suraj": [201, 225], "nair": [201, 225], "aravind": [201, 225], "rajeswaran": [201, 225], "vikash": [201, 225, 227], "kumar": [201, 225, 227], "chelsea": [201, 225], "finn": [201, 225], "abhinav": [201, 225], "gupta": [201, 225], "2203": [201, 225, 268, 431], "12601": [201, 225, 431], "_init": [201, 225, 415], "resnet50": [201, 227, 431], "model_nam": [201, 225, 227, 378], "resnet34": 201, "resnet18": 201, "r3m_vec": [201, 431], "stack_imag": [201, 227], "tread": [201, 227], "hub": [201, 227, 420], "resnet50_weight": [201, 227], "imagenet1k_v1": [201, 227], "download_path": [201, 227], "tensor_pixels_kei": [201, 227], "sub_seq_len": 202, "sample_dim": [202, 415], "hesit": 202, "robust": [202, 241], "mix": [202, 283, 292, 353, 415, 428, 429], "improp": 202, "dummyenv": 203, "another_oth": 203, "other_reward": 203, "create_copi": 204, "stuff": [204, 423], "newnam": 204, "r2g": 206, "reward_to_go": 206, "bernoulli_": 206, "9010": 206, "9404": [206, 361], "9701": [206, 361], "9900": [206, 361], "0000": [206, 217, 258, 281, 313, 361], "clamp_min": 207, "clamp_max": 207, "clip_min": 207, "clip_max": 207, "episode_": 209, "reward1": 209, "reward2": 209, "episode_reward": [209, 428, 429], "keep_reward": 210, "keep_don": 210, "logical_or": 211, "in_key_inv": 213, "unstack": 213, "step_count_kei": 214, "update_don": 214, "disjunct": 214, "recognis": 214, "target_return": 215, "subtract": 215, "default_valu": [216, 317], "expand_spec": 216, "unit": [216, 242, 256, 259, 260, 276, 277, 285, 286, 417], "mykei": 216, "__unless": 216, "exists__": 216, "get_primers_from_modul": [216, 244, 261, 265, 408], "recurrent_st": [216, 261, 265, 317, 418], "10th": 217, "0216": 217, "1149": 217, "1990": 217, "2749": 217, "3281": 217, "9290": 217, "3702": 217, "8978": 217, "from_int": 218, "shape_toler": 218, "ri": 218, "pretrainedtokenizerbas": 219, "additional_token": 219, "skip_special_token": 219, "add_special_token": 219, "bert": 219, "uncas": 219, "traj_count": 220, "traj": 220, "countingenv": 220, "mocking_class": 220, "make_env_c0": 220, "make_env_c1": 220, "cattransform": 221, "notabl": 221, "rewardsum": [221, 231, 238, 428, 429], "smoothli": [222, 241], "add_1": 222, "cache_spec": 222, "set_missing_toler": 222, "inv_fn": 223, "unari": 223, "durin": 223, "ommit": 223, "observation_trsf": 223, "xbc": 223, "x7f": 223, "x859": 223, "x81": 223, "x9a": 223, "xbd": 223, "xb8t8": 223, "test_input_spec": 223, "test_output_spec": 223, "danger": 224, "vc1": 225, "vc1_vec": 225, "untrain": 225, "make_noload_model": 225, "vip": [226, 227, 431], "implicit": [227, 328, 336, 432], "jason": 227, "ma": 227, "shagun": 227, "sodhani": 227, "dinesh": 227, "jayaraman": 227, "osbert": 227, "bastani": 227, "ami": 227, "zhang": 227, "vip_vec": 227, "final_nam": 228, "sb3": 228, "terminal_obs_read": 228, "truli": [228, 434], "till": 228, "shared_td": 229, "decai": [229, 240, 258, 344, 390, 415, 416, 418, 435], "9999": 229, "0001": [229, 256], "to_observation_norm": 229, "frozen_copi": 229, "race": 229, "underflow": [229, 390], "build_td_for_shared_vecnorm": 229, "memmori": 229, "queue": [229, 432, 434], "td_share": 229, "unfreez": 229, "train_env": 229, "eval_env": 229, "state_dim": [230, 247, 252, 280, 285, 286, 301], "action_dim": [230, 247, 248, 250, 252, 280, 301, 415, 427], "gsde": [230, 341, 406], "gsdemodul": 230, "rb_transform": 231, "resist": 231, "insensit": 231, "sensit": [231, 416, 418], "_orig": 231, "95": [231, 268, 348, 417, 418], "window": [231, 305, 428, 432, 434], "edit": [231, 423], "cube": 232, "unsqueeze_null_shap": 236, "probabilistictdmodul": [237, 266, 306, 310, 354, 387], "keep_oth": [238, 430], "exclude_reward": 238, "exclude_don": 238, "next_": 238, "write_full_fals": 239, "_terminated_or_trunc": 239, "po": 240, "sigma_init": [240, 428], "sigma_end": [240, 428], "annealing_num_step": [240, 258, 282, 415, 416, 418, 419, 421, 425, 428], "sigma": [240, 259, 260, 262, 263, 264, 282, 290, 291, 417, 428], "captur": [240, 258, 282, 419], "omiss": [240, 258, 282], "momentum": 241, "max_r": 241, "max_d": 241, "warmup_step": 241, "batchrenorm": 241, "1702": 241, "03275": 241, "corenet": 241, "enhanc": 241, "warmup": 241, "phase": [241, 243, 429, 432], "outlier": 241, "period": 241, "varianc": [241, 242, 243, 262, 290, 291, 411, 415, 417, 429], "warm": 241, "renorm": 241, "entropi": [242, 278, 320, 321, 322, 323, 328, 329, 336, 337, 339, 340, 341, 343, 345, 346, 429], "botev": 242, "2013": 242, "cem": 242, "plan": [242, 267, 268], "k": [242, 244, 259, 260, 263, 264], "maximis": [242, 248, 250, 268, 416, 417, 429], "modelbasedenv": [242, 268], "planning_horizon": [242, 268], "optim_step": [242, 268, 419, 425], "mpc": [242, 267, 268], "num_candid": [242, 268], "candid": [242, 268], "top_k": [242, 268], "modelbasedenvbas": [242, 267, 268, 408], "safemodul": [242, 267, 298, 300, 310, 320, 321, 323, 328, 329, 336, 340, 341, 342, 343, 345, 346, 397, 398, 402, 408, 434], "hausknecht": 243, "wagen": 243, "reus": [243, 248, 382], "consistentdropoutmodul": [243, 410], "capit": 243, "themselv": [243, 416], "conceptu": 243, "devianc": 243, "set_exploration_typ": [243, 338, 387, 408, 410, 417, 418, 419, 421, 428, 434], "_main_async_collector": 243, "asyncdatacollector": [243, 408], "ditto": 243, "consistentdropout": 244, "input_shap": 244, "batcht": 244, "make_tensordict_prim": [244, 261, 265, 418], "input_dtyp": 244, "get_default_dtyp": [244, 390], "mask_6127171760": 244, "env0": [244, 435], "num_cel": [245, 246, 248, 249, 250, 251, 256, 257, 261, 265, 266, 271, 272, 298, 317, 416, 417, 418, 419, 421, 422, 425, 428, 429, 434], "elu": [245, 246, 248, 249, 250, 251, 256, 257, 271, 416, 434], "activation_kwarg": [245, 246, 266], "norm_class": [245, 246, 248, 249, 266], "norm_kwarg": [245, 246, 266], "bias_last_lay": [245, 246, 248, 249, 250, 251, 257, 266], "aggregator_class": [245, 246, 248, 249, 416, 418, 434], "squashdim": [245, 246, 248, 257, 271, 434], "aggregator_kwarg": [245, 246, 248, 249, 416, 418], "squeeze_output": [245, 246, 248, 249, 416, 418], "cell": [245, 246, 259, 260, 261, 263, 264, 265, 266, 271, 272, 417, 419, 420, 421, 422, 423, 424, 425], "kernel": [245, 246, 271], "cnet": [245, 246], "conv3d": 245, "lazyconv2d": [246, 248, 249, 257, 271], "default_atari_dqn": [246, 419], "semin": 246, "transformer_config": [247, 280, 301], "decisiontransform": [247, 280], "dtconfig": [247, 252, 280], "2202": [247, 252, 339], "05607": [247, 252, 339], "return_to_go": [247, 252, 280, 301], "conv_net_kwarg": [248, 249], "mlp_net_kwarg": [248, 249, 250], "use_avg_pool": [248, 249], "WITH": [248, 249, 250, 251, 282, 344], "1509": [248, 249, 250, 251, 268, 282, 325, 335, 344], "02971": [248, 249, 250, 251, 282, 344], "convnet": [248, 249, 257, 271, 418, 419, 421, 434], "ndims_in": 248, "avgpool": [248, 249], "lazylinear": [248, 249, 250, 251, 257, 266, 410, 417, 421, 430, 431], "2304": 248, "adaptiveavgpool2d": [249, 416, 418], "output_s": [249, 416, 418], "squeeze2dlay": 249, "400": [250, 251, 429], "mlp_net_kwargs_net1": 251, "mlp_net_kwargs_net2": 251, "mlp1": 251, "mlp2": 251, "desdescrib": 252, "n_embd": 252, "n_layer": [252, 259, 263], "n_head": 252, "n_inner": 252, "n_posit": 252, "resid_pdrop": 252, "attn_pdrop": 252, "gpt2config": 252, "atol": [253, 289], "rtol": [253, 289], "batch_shap": [253, 278, 289], "event_shap": [253, 289], "absolut": [253, 289, 415], "_instanc": 253, "densiti": [253, 269, 270, 278, 291], "mass": [253, 269, 270, 278, 291, 430], "rsampl": [253, 270, 278, 310], "sample_shap": [253, 269, 270, 278], "softmax": [254, 270, 278, 302, 303], "var_num": [255, 284, 302, 303, 308], "action_value_kei": [255, 284, 302, 303, 307, 308, 323, 338, 353], "action_mask_kei": [255, 258, 284, 302, 303, 307, 308], "1707": [255, 303, 330, 340], "06887": [255, 303, 330], "mult": [255, 272, 284, 302, 303, 307, 308], "tensordict_modul": [255, 259, 260, 263, 264, 284, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 323, 324, 328, 329, 336, 340, 341, 342, 343, 345, 346, 410], "nbin": [255, 302, 410], "customdistributionalqv": 255, "log_softmax": [255, 302], "qvalue_actor": [255, 284, 302, 307, 410], "to_modul": [255, 309, 312, 415, 434], "std_bia": 256, "std_min_val": 256, "belief": [256, 276, 285, 286], "1912": [256, 331, 332, 333], "01603": [256, 331, 332, 333], "softplu": [256, 316, 318, 319], "out_features_valu": 257, "cnn_kwarg": [257, 416], "mlp_kwarg": [257, 416], "duel": 257, "cnn": [257, 271, 416, 419, 421, 434], "06581": 257, "greedi": [258, 284, 303, 308, 416, 418, 419, 421], "eps_init": [258, 282, 416, 418, 419, 421, 425], "eps_end": [258, 282, 416], "explorative_polici": [258, 282], "9055": 258, "9277": 258, "6295": 258, "2532": 258, "grad_fn": [258, 297, 310], "addbackward0": 258, "batch_first": [259, 261, 263, 265, 418], "bidirect": [259, 263, 418], "cudnn": [259, 260, 261, 263, 264, 265, 418, 419], "rnn": [259, 260, 261, 263, 264, 265, 296, 329, 343, 418, 419, 421], "device_count": [259, 260, 263, 264, 435], "n_in": [259, 260, 263, 264], "n_out": [259, 260, 263, 264], "h0": [259, 260, 263, 264], "h1": [259, 260, 263, 264], "vectoris": [259, 260, 263, 264], "call_gru": [259, 260], "h_out": [259, 260, 263, 264], "batched_cal": [259, 260, 263, 264], "gate": [259, 260, 263], "r_t": 259, "w_": [259, 260, 263, 264], "ir": [259, 260], "x_t": [259, 263], "b_": [259, 260, 263, 264], "hr": [259, 260, 263], "h_": [259, 260, 263], "z_t": 259, "iz": [259, 260], "hz": [259, 260], "n_t": 259, "odot": [259, 260, 263, 264], "hn": [259, 260, 263], "h_t": [259, 263], "sigmoid": [259, 260, 263, 264], "hadamard": [259, 260, 263, 264], "multilay": [259, 263], "_t": [259, 263, 429, 430], "ge": [259, 263], "bernoulli": [259, 263], "b_ih": [259, 260, 263, 264, 265], "b_hh": [259, 260, 263, 264, 265], "h_0": [259, 263, 264], "unbatch": [259, 263], "pack_padded_sequ": [259, 263], "pack_sequ": [259, 263], "num": [259, 263, 425], "_layer": [259, 263], "_size": [259, 260, 263, 264], "h_n": [259, 263], "packedsequ": [259, 263], "weight_ih_l": [259, 263], "learnabl": [259, 260, 263, 264], "w_ir": 259, "w_iz": 259, "w_in": 259, "num_direct": [259, 263], "weight_hh_l": [259, 263], "w_hr": 259, "w_hz": 259, "w_hn": 259, "bias_ih_l": [259, 263], "b_ir": 259, "b_iz": 259, "b_in": 259, "bias_hh_l": [259, 263], "b_hr": 259, "b_hz": 259, "b_hn": 259, "mathcal": [259, 260, 263, 264], "sqrt": [259, 260, 263, 264, 282], "frac": [259, 260, 263, 264, 417], "seq_len": [259, 263], "subtli": 259, "matrix": [259, 263, 274, 275], "contrast": [259, 281, 335, 432], "hx": [259, 260, 263, 264], "lstmcell": [260, 265, 419], "gru_cel": 260, "weight_ih": [260, 264], "weight_hh": [260, 264], "bias_ih": [260, 264], "bias_hh": [260, 264], "rocm": [260, 264], "embedd": [261, 265], "grucel": [261, 309], "python_bas": [261, 265], "custom_kei": [261, 265], "hasn": [261, 265], "set_recurrent_mod": [261, 265, 418], "recurrent_mod": [261, 265, 296], "rs": [261, 415], "gru_module_train": 261, "policy_train": [261, 265], "traj_td": [261, 265], "make_cudnn_bas": [261, 265], "make_python_bas": [261, 265, 419], "supplementari": [261, 265, 417, 435], "That": [261, 265, 417, 428], "dealt": [261, 265], "poorli": [261, 265], "meth": [261, 265, 338, 430], "data_collector": [261, 265, 416], "policy_infer": [261, 265], "td_inf": [261, 265], "upscal": [262, 290, 291], "tanh_loc": [262, 290, 291], "event_dim": [262, 289, 290], "poor": [262, 290, 291], "explos": [262, 290, 291], "proj_siz": 263, "c0": [263, 264], "c1": [263, 264], "call_lstm": [263, 264], "c_out": [263, 264], "i_t": 263, "ii": [263, 264], "hi": [263, 264], "f_t": 263, "hf": [263, 264], "g_t": 263, "ig": [263, 264], "hg": [263, 264], "o_t": 263, "ho": [263, 264], "c_t": 263, "c_": 263, "forget": 263, "1402": 263, "1128": 263, "c_0": [263, 264], "proj": 263, "c_n": 263, "w_ii": 263, "w_if": 263, "w_ig": 263, "w_io": 263, "w_hi": 263, "w_hf": 263, "w_hg": 263, "w_ho": 263, "b_ii": 263, "b_if": 263, "b_ig": 263, "b_io": 263, "b_hi": 263, "b_hf": 263, "b_hg": 263, "b_ho": 263, "weight_hr_l": 263, "_revers": 263, "analog": [263, 421], "cn": 263, "lstm_cell": 264, "h_1": 264, "c_1": 264, "time_step": [264, 305], "cx": 264, "recurrent_state_h": 265, "recurrent_state_c": 265, "triplet": [265, 307, 308], "lstm_modul": 265, "rs_h": 265, "rs_c": 265, "hidden0": [265, 419], "hidden1": [265, 419], "single_bias_last_lay": 266, "layer_class": 266, "layer_kwarg": 266, "perceptron": [266, 421], "noisylinear": [266, 274, 408, 416], "noisylazylinear": [266, 408], "mpcplanner": 267, "tensordict_out": [267, 435], "mppi": 268, "covari": 268, "william": [268, 342], "aldrich": 268, "theodor": 268, "01149": 268, "hansen": 268, "wang": 268, "su": 268, "04955": 268, "valueoper": [268, 298, 299, 300, 320, 321, 322, 323, 324, 329, 336, 337, 340, 341, 342, 343, 345, 346, 402, 410, 415, 417, 422], "tdlambdaestim": [268, 408, 415], "value_net": [268, 325, 327, 342, 355, 356, 357, 358, 417, 419, 421, 422, 425], "adv": 268, "lmbda": [268, 348, 355, 358, 360, 366, 367, 368, 371, 372, 411, 415, 417, 429], "value_network": [268, 324, 325, 327, 328, 330, 336, 343, 355, 356, 357, 358, 411, 415, 417, 419, 422, 425, 428], "temperatur": [268, 321, 328, 336], "neg_inf": [269, 270], "inf": [269, 270], "api_doc": [269, 270], "tf_agent": [269, 270], "unnorm": [269, 270, 278], "sparse_mask": [269, 270], "dens": [269, 270], "0831": [269, 270], "1203": [269, 270], "0928": [269, 270], "1972": [269, 270], "grad_method": [270, 278], "reparamgradientstrategi": [270, 278], "passthrough": [270, 278], "relaxedonehot": [270, 278], "sample_non_valid": 270, "zeros_lik": [270, 430], "share_param": [271, 272, 273, 428, 429], "use_td_param": [271, 272, 273], "get_stateful_net": [271, 272, 273, 338, 410, 411], "from_stateful_net": [271, 272, 273, 338, 411], "homogen": [271, 272, 428, 429], "tensordictparam": [271, 272, 310], "_empty_net": [271, 272], "roughli": [271, 272, 434], "agent_network": [271, 272], "modulelist": [271, 272], "2592": 271, "decentr": 271, "n_agent_input": [272, 273, 428, 429], "n_agent_output": [272, 273, 428, 429], "toech": 272, "centalis": 272, "shown": [272, 410, 419, 427, 428, 429, 432], "agent_dim": 273, "vmap_random": [273, 338, 411], "stateful_net": [273, 338], "Such": [273, 338], "multiagentmlp": [273, 428, 429], "snet": 273, "hasattr": [273, 415], "kaiming_normal_": 273, "std_init": [274, 275], "initialize_paramet": 274, "isol": [274, 338, 419], "1706": [275, 292], "10295v3": 275, "induc": [275, 310], "aid": 275, "1803": [276, 277, 283], "10122": [276, 277], "rnn_hidden": 276, "latent": 277, "ordin": [279, 408], "parametris": [279, 281], "inres": 280, "mu": [280, 282, 417], "impos": [281, 410], "proxim": [281, 340, 417, 429], "atom": 281, "tang": 281, "agraw": 281, "2020": 281, "1901": 281, "10500": 281, "discretis": 281, "num_atom": 281, "num_sampl": 281, "middl": 281, "adam": [281, 290, 415, 416, 417, 418, 419, 422, 425, 428, 429, 430], "lr": [281, 415, 416, 417, 418, 425, 428, 429, 430], "optimis": [281, 428, 429], "minimis": 281, "penalis": 281, "0308": 281, "1586": 281, "4727": 281, "2260": 281, "1120": 281, "histogram": 281, "return_typ": 281, "hist": [281, 432], "158": 281, "478": 281, "228": 281, "112": 281, "bin_edg": 281, "8000": 281, "6000": 281, "4000": 281, "ornstein": [282, 415, 419], "uhlenbeck": [282, 415, 419], "ou": [282, 415], "correl": 282, "noise_t": 282, "noise_": 282, "theta": [282, 417, 430], "sigma_t": 282, "sigma_": 282, "anneal": [282, 416, 421, 428], "ou_prev_nois": 282, "ou_step": 282, "x0": 282, "sigma_min": 282, "n_steps_ann": 282, "is_init_kei": 282, "_ou_prev_nois": 282, "_ou_step": 282, "state_shap": [283, 353], "mixing_embed_dim": [283, 353], "qmix": [283, 428, 429], "mixer": [283, 292, 353], "monoton": 283, "hyper": 283, "11485": 283, "qmixerloss": [283, 292], "qmix_vdn": [283, 292], "vdn": [283, 292], "hidden_dim": [285, 286], "scale_lb": [285, 286], "posterior": [285, 332], "rssm": [285, 286, 332], "1811": [285, 286], "04551": [285, 286], "obs_embed": 285, "rnn_hidden_dim": 286, "dream": 286, "safe_tanh": 290, "tanhtransform": 290, "overflow": [290, 297, 302, 303, 306, 307, 308, 309, 310], "get_mod": [290, 310], "decomposit": 292, "05296": 292, "hide": [293, 417, 428, 429], "satisfi": [293, 410], "vmap_dim": 293, "lam": 293, "sample_in": 293, "sample_in_td": 293, "vm": 293, "translat": [297, 306], "character": [297, 302, 306, 307, 309, 432], "td_modul": [297, 298, 299, 300, 306, 309, 310, 312, 314, 421, 434], "3635": 297, "0340": 297, "1476": 297, "3911": 297, "1664": 297, "5455": 297, "2247": 297, "4583": 297, "2916": 297, "2160": 297, "5337": 297, "5193": 297, "addmmbackward0": 297, "actorvalueoper": [298, 322, 337, 340, 410, 421], "get_policy_oper": [298, 299, 300, 322, 337, 340, 410], "standalon": [298, 299, 300, 419, 421], "tdmodul": [298, 299, 300, 402], "get_critic_oper": 298, "common_oper": [298, 300], "policy_oper": [298, 299, 300], "value_oper": [298, 299, 300], "module_hidden": [298, 300], "td_module_hidden": [298, 300], "module_act": [298, 300], "td_module_act": [298, 299, 300], "module_valu": [298, 299, 300], "td_module_valu": [298, 299, 300], "state_action_valu": [298, 314, 321, 323, 328, 336, 343, 354, 402, 410, 415, 428, 434], "td_clone": [298, 299, 300], "tensordictmodulewrapp": [298, 397, 398, 402], "get_policy_head": [298, 299, 300], "safesequenti": [298, 299, 300, 353], "head": [298, 300, 310, 317, 322, 337, 340, 408], "get_value_head": [298, 299, 300], "get_value_oper": [298, 299, 300, 322, 337, 340], "action_modul": 299, "actorcriticoper": [300, 410, 421], "actorcriticwrapp": [300, 410, 415], "inferec": 301, "set_tensor_kei": 301, "dt_inference_wrapp": 301, "baz": 301, "inference_context": 301, "obs_dim": 301, "tanhdelta": [301, 408, 415, 428], "dtactor": 301, "actor_modul": [301, 434], "dist_class": 301, "dist_kwarg": 301, "distribution_kwarg": [301, 306, 310, 417, 428, 429], "inference_actor": 301, "sequence_length": 301, "mask_context": 301, "out_act": 301, "qvaluemodul": [302, 307, 353, 418, 419, 421, 425], "distributionaldqnnet": 302, "make_log_softmax": 302, "my_action_valu": [303, 308], "chanc": 303, "lmheadmodel": 304, "actor_head": [304, 322, 337, 340], "base_model": 304, "lm_head": 304, "macro": 305, "lookahead": 305, "reshape_cat": 305, "actor_bas": 305, "obs_cat": 305, "obs_cat_reshap": 305, "action_orig": 305, "default_interaction_typ": [306, 310, 421], "interaction_typ": [306, 310], "datacollectorbas": [306, 310, 394, 397, 398, 402, 408], "set_interaction_typ": [306, 310], "compositedistribut": [306, 310, 320, 340, 411, 421], "distribution_map": [306, 310], "name_map": [306, 310], "cache_dist": [306, 310], "n_empirical_estim": [306, 310], "compound": [306, 421], "chose": 308, "functionalmodul": 309, "functionalmodulewithbuff": 309, "td_fmodul": 309, "td_function": 309, "td_state": 309, "params_repeat": 309, "td_vmap": [309, 312], "random_sampl": [309, 310], "suppli": 310, "paliat": 310, "get_median": 310, "get_mean": 310, "transfer": 310, "log_prob_kei": [310, 411], "sample_key_nam": 310, "_log_prob": 310, "composite_lp_aggreg": 310, "clampbackward0": 310, "clamp": [310, 313, 332, 392, 411, 428, 430], "anihil": 310, "probabilistictensordictsequenti": [311, 320, 322, 337, 340, 342, 397, 398, 411, 434], "partial_toler": [311, 312, 427], "AND": [311, 312, 323], "tensordictsequ": 312, "safeprobabilisticmodul": [312, 410], "spec1": 312, "net1": 312, "module1": 312, "td_module1": 312, "spec2": 312, "module2": 312, "td_module2": 312, "boundari": [313, 417, 419, 428, 429], "resolut": 313, "9944": 313, "9991": 313, "3020": 313, "2299": 313, "5418": 313, "2989": 313, "6849": 313, "3169": 313, "2690": 313, "9649": 313, "5686": 313, "8602": 313, "0315": 313, "8455": 313, "6027": 313, "4746": 313, "7843": 313, "7782": 313, "2111": 313, "5115": 313, "4687": 313, "5760": 313, "custommodul": 314, "imaginari": 315, "imagin": 315, "transition_model": 315, "get_reward_oper": 315, "get_transition_model_oper": 315, "min_val": [316, 319], "_bia": 316, "surject": 319, "expln": 319, "biased_softplu": [319, 408], "biased_softplus_": 319, "syntax": [319, 415], "met": [319, 428, 430], "add_custom_map": 319, "1602": 320, "01783v2": 320, "actor_network": [320, 321, 322, 323, 324, 326, 328, 329, 336, 337, 339, 340, 341, 342, 343, 345, 346, 411, 415, 417, 422, 428, 429], "critic_network": [320, 322, 337, 340, 342, 417, 429], "entropy_bonu": [320, 322, 337, 340, 417], "favour": [320, 322, 337, 340], "samples_mc_entropi": [320, 322, 337, 339, 340], "entropy_coef": [320, 322, 337, 340, 417, 429], "critic_coef": [320, 322, 337, 340, 417], "loss_critic_typ": [320, 322, 337, 340, 342, 417], "l1": [320, 322, 324, 325, 329, 337, 340, 341, 342, 345, 346, 349, 353, 410, 415], "l2": [320, 322, 324, 325, 326, 327, 329, 332, 333, 337, 340, 341, 342, 345, 346, 349, 353, 415, 428], "smooth_l1": [320, 321, 322, 323, 324, 325, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 349, 353, 417], "separate_loss": [320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346], "advantage_kei": [320, 322, 337, 340, 342, 355, 356, 357, 358], "value_target_kei": [320, 322, 337, 340, 342, 355, 356, 357, 358], "value_target": [320, 322, 337, 340, 342, 355, 356, 357, 358, 417, 429], "ddp": [320, 322, 337, 340, 342], "fsdp": [320, 322, 337, 340, 342], "divid": [320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 395, 415, 428, 429, 430], "clip_valu": [320, 322, 337, 340, 342], "loss_crit": [320, 340, 417, 429], "loss_entropi": [320, 340, 417, 429], "loss_object": [320, 340, 417, 429], "next_reward": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358], "next_don": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358], "next_termin": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358], "loss_obj": 320, "next_observ": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 427], "sacloss": [320, 335, 344, 408], "default_kei": [320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 345, 346, 353, 359], "_acceptedkei": [320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 353, 359], "fraction": 320, "make_value_estim": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353, 411, 415, 416, 428, 429, 434], "value_typ": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 353, 415], "hyperparam": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 415], "enum": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 353, 415], "default_value_estim": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 415, 434], "default_value_kwarg": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 408, 415], "dqn_loss": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353], "td1": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 415], "conserv": [321, 327], "qvalue_network": [321, 323, 328, 329, 336, 341, 343, 345, 346], "unti": [321, 323, 336, 341, 343, 345, 346], "loss_funct": [321, 323, 324, 325, 326, 327, 328, 329, 336, 341, 343, 345, 346, 349, 353, 415, 428], "alpha_init": [321, 323, 329, 339, 341, 343], "min_alpha": [321, 323, 329, 339, 341, 343], "max_alpha": [321, 323, 329, 339, 341, 343], "fixed_alpha": [321, 323, 329, 339, 341, 343], "target_entropi": [321, 323, 329, 339, 341, 343], "prod": [321, 323, 339, 343], "delay_actor": [321, 324, 343, 345, 346], "delay_qvalu": [321, 329, 341, 343, 345, 346], "min_q_weight": 321, "max_q_backup": 321, "backup": 321, "deterministic_backup": 321, "num_random": 321, "with_lagrang": 321, "lagrang": 321, "lagrange_thresh": 321, "valueclass": [321, 323, 324, 329, 341, 343, 345, 346], "qvalu": [321, 323, 328, 329, 336, 341, 343, 345, 346], "loss_actor": [321, 323, 324, 328, 329, 336, 341, 342, 343, 345, 346, 388, 415, 428], "loss_actor_bc": 321, "loss_alpha": [321, 323, 329, 341, 343], "loss_cql": [321, 327], "loss_qvalu": [321, 323, 327, 328, 329, 336, 341, 343, 345, 346], "loss_alpha_prim": 321, "clip_epsilon": [322, 417, 429], "normalize_advantag": [322, 337, 340, 429], "normalize_advantage_exclude_dim": [322, 337, 340], "multiobject": [322, 337, 340], "value_kei": [322, 337, 340, 355, 356, 357, 358, 415], "somemodul": [322, 337, 340], "someactor": [322, 337, 340], "value_head": [322, 337, 340], "somevalu": [322, 337, 340], "loss_modul": [322, 335, 337, 338, 340, 344, 392, 401, 402, 411, 412, 415, 416, 417, 428, 429, 432], "IN": 323, "FOR": 323, "simplic": [323, 416, 417, 423, 431, 432, 434], "openreview": [323, 341], "pczqttstix": 323, "qvalue_loss": [323, 345], "actor_loss": [323, 345], "alpha_loss": 323, "num_qvalue_net": [323, 328, 329, 336, 341, 343, 345, 346], "maybe_init_target_entropi": 323, "fault_toler": 323, "target_entropy_buff": 323, "delay_valu": [324, 325, 327, 330, 342, 343, 353, 416, 418, 419, 425, 428], "loss_valu": [324, 328, 336, 342, 343, 415, 417, 428, 429], "pred_valu": [324, 327, 345, 346, 415], "pred_value_max": [324, 415], "target_valu": [324, 327, 341, 345, 346, 354, 411, 415], "target_value_max": [324, 415], "qvalueactor": [325, 327, 353, 416, 418], "double_dqn": 325, "06461": [325, 335], "mult_one_hot": [325, 328, 329, 353], "loss_val": [325, 327, 411, 415, 417, 418, 419, 422, 423, 425, 428, 429, 432], "01345": 326, "distanc": [327, 337, 349, 354, 355, 429], "dcql_loss": 327, "2110": [328, 336], "06169": [328, 336], "expectil": [328, 336], "tau": [328, 336, 344, 415, 416, 428], "antmaz": [328, 336], "sticht": [328, 336], "onehotcategor": [328, 329, 408], "target_entropy_weight": 329, "skip_done_st": [329, 343], "disctount": 330, "distributionalqvalueactor": [330, 410], "input_tensordict": [330, 415], "actor_model": 331, "value_model": [331, 333], "imagination_horizon": 331, "unrol": [331, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372], "discount_loss": [331, 333], "lambda_kl": 332, "lambda_reco": 332, "lambda_reward": 332, "reco_loss": 332, "reward_loss": 332, "free_nat": 332, "nat": 332, "delayed_clamp": 332, "global_averag": 332, "value_loss": 333, "fake_data": 333, "1606": 334, "03476": 334, "discriminator_network": 334, "use_grad_penalti": 334, "gp_lambda": 334, "discrimin": 334, "ddpgloss": [335, 344, 402, 408, 415, 422, 428, 434], "td3loss": [335, 344, 408], "value_network_update_interv": 335, "qvalueclass": 336, "loss_value_diff": 336, "diff": 336, "old_polici": 337, "new_polici": 337, "apart": [337, 429], "dtarg": 337, "samples_mc_kl": 337, "analyt": 337, "decrement": 337, "loss_": [338, 388, 411, 415, 422], "equip": [338, 418, 419, 421], "gh": 338, "_forward_value_estimator_kei": 338, "alter": [338, 410], "value_estim": [338, 355, 356, 357, 358, 359, 411, 415, 429], "myloss": 338, "action2": 338, "augment": [338, 423, 425, 432], "deterministic_sampling_mod": 338, "convert_to_funct": [338, 415], "expand_dim": 338, "create_target_param": [338, 415], "compare_against": [338, 415], "_param": 338, "resampl": 338, "_target_param": 338, "network_nam": 338, "blend": 338, "add_random_modul": [338, 411], "flavor": [340, 415, 428, 429, 434], "clipppoloss": [340, 408, 417, 429], "klpenppoloss": [340, 408], "06347": 340, "gae": [340, 408, 411, 415, 417, 429], "ppo_loss": 340, "tdlambda": [340, 348, 411, 415], "base_lay": 340, "randn_lik": 340, "samplelogprob": 340, "ay8zfzm0tdd": 341, "sub_sample_len": 341, "subsampl": [341, 383, 412], "action_log_prob_actor": 341, "state_action_value_actor": [341, 345, 346], "connectionist": 342, "1992": 342, "doi": 342, "1007": 342, "bf00992696": 342, "actor_net": [342, 415, 417], "1801": 343, "01290": 343, "applic": [343, 353, 420, 421, 430], "1812": 343, "05905": 343, "redqloss": [344, 408], "math": 344, "theta_t": [344, 430], "theta_": [344, 430], "polyak": 344, "minimalist": 345, "06860": 345, "policy_nois": [345, 346], "noise_clip": [345, 346], "td3_bc": 345, "bc_loss": 345, "lmbd": 345, "td0": [347, 415, 428], "strict_shap": 349, "view_a": 349, "qmixer": [353, 408], "local_valu": 353, "visibl": [353, 429], "acceptedkei": 353, "global_valu": 353, "penultim": 353, "local_value_network": 353, "mixer_network": 353, "value_modul": [353, 417, 434], "qnet": [353, 415], "next_val_kei": 354, "pred_next_v": 354, "mse": 354, "q_valu": 354, "n_steps_to_next": 354, "value_next_st": 354, "1506": [355, 360, 368], "02438": [355, 360, 368], "exponenti": [355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 390], "average_ga": [355, 417], "skip_exist": [355, 356, 357, 358], "get_default_devic": [355, 356, 357, 358, 359], "time_dim": [355, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372], "gradient_mod": 355, "value_error": [355, 356, 357, 358, 359], "target_param": [355, 356, 357, 358, 359, 415, 429], "98": [355, 356, 357, 358], "94": [355, 358], "unpack": [355, 356, 357, 358], "tensor_kei": [355, 356, 357, 358, 359], "next_valu": [355, 356, 357, 358, 359], "aka": [356, 416, 428], "average_reward": [356, 357, 358], "tdestim": [356, 357, 359], "infti": 357, "valuefunctionbas": 359, "old_stat": [360, 362, 364, 366, 368, 369, 371], "new_stat": [360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "rolling_gamma": [364, 365, 366, 367, 369, 370, 371, 372], "g1": [364, 365, 366, 367, 369, 370, 371, 372], "g2": [364, 365, 366, 367, 369, 370, 371, 372], "g3": [364, 365, 366, 367, 369, 370, 371, 372], "g4": [364, 365, 366, 367, 369, 370, 371, 372], "v3": [364, 365, 366, 367, 369, 370, 371, 372], "preproc": [373, 419, 428], "as_non_tensor": [373, 428], "render_method": 373, "pass_tensordict": 373, "syntact": 373, "sugar": 373, "out_file_bas": 374, "skip_reset": 374, "center_crop": 375, "make_grid": 375, "fp": [375, 380, 382], "log_video": 375, "csv": [375, 377, 379, 416, 424, 425], "wandb": [375, 379, 382, 424, 434], "tensorboard": [375, 379, 381, 424, 434], "log_dir": [375, 376, 377, 379, 381, 382, 416, 425], "cheetah_video": 375, "run_video": 375, "openxexperiencereplai": 375, "sec": [375, 430], "video_fp": [375, 377, 380], "run_video_0": 375, "templat": 376, "pt": [377, 412], "cur_dir": 377, "csv_log": 377, "add_video": 377, "video_": 377, "experiment_nam": [378, 379], "uuid": [378, 416, 435], "logger_typ": 379, "logger_nam": 379, "mlflow": [379, 380], "wandb_kwarg": 379, "mlflow_kwarg": 379, "tracking_uri": 380, "uri": 380, "datastor": 380, "tb_log": 381, "tensoarboard": 381, "td_log": 381, "save_dir": 382, "resum": 382, "uncategor": 382, "sub_traj_len": 383, "min_sub_traj_len": 383, "register_op": [383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 412, 416], "process_optim_batch": [383, 389, 390, 412], "td_out": [383, 391], "_process_optim_batch_hook": [383, 412], "batch_subsampl": 383, "clear_cuda": 384, "pre_optim_step": [384, 412], "log_pbar": [385, 386, 387, 390, 412, 416], "progress": [385, 386, 387, 392, 412, 416, 418, 435], "count_fram": 385, "pre_steps_log": [385, 386, 412], "count_frames_log": 385, "lognam": 386, "r_train": 386, "log_reward": [386, 416], "record_interv": [387, 415, 416], "record_fram": [387, 395, 415, 416], "policy_explor": [387, 402, 415, 416, 419, 421, 425], "log_kei": [387, 416], "underestim": 387, "r_evalu": [387, 415], "loss_compon": 388, "appl": 388, "optimizer_hook": 388, "flatten_tensordict": [389, 416], "max_dim": 389, "rb_trainer": 389, "batch_process": [389, 390, 391, 412], "post_loss": [389, 412], "999": [390, 416], "jitter": 390, "finfo": 390, "default_dtyp": 390, "reward_norm": 390, "update_reward_stat": 390, "normalize_reward": 390, "make_train": [391, 408], "_process_batch_hook": [391, 412], "select_kei": [391, 412], "versatil": [392, 420], "optim_steps_per_batch": [392, 412, 416], "clip_grad_norm": 392, "clip_norm": 392, "progress_bar": 392, "save_trainer_interv": 392, "log_interv": [392, 416], "save_trainer_fil": [392, 412], "load_from_fil": [392, 412], "update_weights_interv": [394, 416], "update_weight": 394, "post_step": [394, 412, 416], "cfg": [395, 396, 397, 398, 399, 400, 401, 402, 403, 406], "dictconfig": [395, 396, 397, 398, 400, 401, 402, 403, 406], "unknowingli": 395, "annealing_fram": [395, 415], "init_env_step": [395, 396, 415], "proof_environ": [396, 415], "sta": 396, "ot": 396, "actor_model_explor": [397, 398, 415], "make_env_kwarg": [397, 398], "targetnetupdat": [399, 401, 402], "replayargsconfig": 400, "target_net_updat": [402, 415, 416], "constitu": 402, "egreedywrapp": 402, "env_proof": 402, "obs_spec": 402, "net_valu": 402, "dir": [402, 412, 416], "gettempdir": 402, "argpars": [403, 406], "namespac": [403, 406], "parser": [403, 406], "transformed_env_constructor": [403, 408], "num_env_per_collector": [404, 405], "video_tag": 406, "norm_obs_onli": 406, "use_env_cr": 406, "custom_env_mak": 406, "custom_env": 406, "return_transformed_env": 406, "action_dim_gsd": 406, "state_dim_gsd": 406, "obs_norm_state_dict": 406, "maker": [406, 416], "distributedsyncdatacollector": 408, "submitit_delayed_launch": 408, "raycollector": 408, "rational": 408, "footnot": 408, "binarydiscretetensorspec": 408, "boundedtensorspec": 408, "discretetensorspec": 408, "lazystackedcompositespec": 408, "lazystackedtensorspec": 408, "multidiscretetensorspec": 408, "multionehotdiscretetensorspec": 408, "nontensorspec": 408, "onehotdiscretetensorspec": 408, "unboundedcontinuoustensorspec": 408, "unboundeddiscretetensorspec": 408, "prompttensordicttoken": 408, "rolloutfrommodel": 408, "tokenizeddatasetload": 408, "create_infinite_iter": 408, "constantklcontrol": 408, "adaptiveklcontrol": 408, "consolidate_spec": 408, "check_no_exclusive_kei": 408, "contains_lazy_spec": 408, "nested2t": 408, "h5combin": 408, "h5split": 408, "envmetadata": 408, "chessenv": 408, "tictactoeenv": 408, "llmhashingenv": 408, "check_marl_group": 408, "get_available_librari": 408, "terminated_or_trunc": 408, "dreamerdecod": 408, "braxwrapp": 408, "dmcontrolwrapp": 408, "jumanjienv": 408, "jumanjiwrapp": 408, "meltingpotenv": 408, "meltingpotwrapp": 408, "mogymenv": 408, "multithreadedenvwrapp": 408, "openmlenv": 408, "openspielwrapp": 408, "openspielenv": 408, "pettingzooenv": [408, 428], "robohiveenv": 408, "smacv2env": 408, "smacv2wrapp": 408, "unitymlagentsenv": 408, "unitymlagentswrapp": 408, "vmaswrapp": 408, "register_gym_spec_convers": 408, "qvaluehook": 408, "distributionalqvaluehook": 408, "reset_nois": 408, "cemplann": 408, "mpcplannerbas": 408, "mppiplann": 408, "independentnorm": 408, "truncatednorm": 408, "maskedonehotcategor": 408, "onehotordin": 408, "inv_softplu": 408, "vmapmodul": 408, "distributionaldqnloss": [408, 416], "discretesacloss": 408, "crossqloss": 408, "iqlloss": 408, "discreteiqlloss": 408, "cqlloss": 408, "discretecqlloss": 408, "gailloss": 408, "dtloss": 408, "onlinedtloss": 408, "td3bcloss": 408, "ppoloss": 408, "a2closs": 408, "reinforceloss": 408, "dreameractorloss": 408, "dreamermodelloss": 408, "dreamervalueloss": 408, "td0estim": [408, 415], "td1estim": [408, 415], "td0_return_estim": 408, "td0_advantage_estim": 408, "td1_return_estim": 408, "vec_td1_return_estim": 408, "td1_advantage_estim": 408, "vec_td1_advantage_estim": 408, "td_lambda_return_estim": 408, "vec_td_lambda_return_estim": 408, "td_lambda_advantage_estim": 408, "vec_td_lambda_advantage_estim": 408, "generalized_advantage_estim": 408, "vec_generalized_advantage_estim": 408, "reward2go": 408, "hardupd": [408, 415, 422], "softupd": [408, 415, 416, 418, 419, 422, 425, 428], "distance_loss": [408, 415], "group_optim": 408, "hold_out_net": 408, "hold_out_param": [408, 415], "batchsubsampl": [408, 412], "clearcudacach": 408, "countframeslog": 408, "logscalar": [408, 412, 416], "optimizerhook": [408, 416], "logvalidationreward": [408, 412, 415, 416], "replaybuffertrain": [408, 412, 416], "rewardnorm": 408, "selectkei": [408, 412], "trainerhookbas": [408, 412, 416], "updateweight": [408, 412, 416], "make_collector_offpolici": 408, "make_collector_onpolici": 408, "make_dqn_loss": 408, "make_replay_buff": [408, 415], "make_target_updat": 408, "parallel_env_constructor": [408, 415], "sync_async_collector": 408, "sync_sync_collector": 408, "correct_for_frame_skip": 408, "get_stats_random_rollout": 408, "mlflowlogg": 408, "get_logg": 408, "generate_exp_nam": 408, "journei": 409, "textbook": 409, "highlight": [409, 428], "ever": [409, 429], "bump": 409, "benefit": [409, 420, 428, 429, 432], "pr": 409, "ground": [410, 415, 430], "recycl": [410, 432], "noisier": 410, "Their": [410, 428, 429], "sd": [410, 435], "prob_modul": 410, "uncertainti": 410, "soften": 410, "backbon": [410, 418, 421, 427, 434], "make_actor": 410, "make_valu": 410, "shared_param": 410, "make_common": 410, "reusabl": [411, 415, 432], "swappabl": [411, 415], "characterist": [411, 415, 430], "trainabl": [411, 415, 422, 431], "smth": [411, 415], "metric": [411, 415], "plenti": [411, 419], "amort": [411, 416, 417], "told": [411, 417], "pseudo": [411, 423, 430], "buri": 411, "str_valu": 411, "nutshel": [411, 415], "barto": [411, 428, 429], "chapter": [411, 424], "value_net_loss": 411, "pow": [411, 415], "room": 411, "signifi": [411, 428, 429], "underperform": 411, "thin": 411, "intric": [411, 421], "set_composite_lp_aggreg": [411, 429], "action_td": 411, "action0": 411, "f0": 411, "action1": 411, "f1": 411, "f2": 411, "legitim": [411, 435], "f3": 411, "action0_log_prob": 411, "action1_log_prob": 411, "inferior": 411, "multivari": 411, "dirichlet": 411, "contrari": 411, "prev_log_prob": 411, "new_log_prob": 411, "log_weight": 411, "appreci": [411, 420], "multihead": 411, "believ": 412, "scheme": [412, 435], "substanti": 412, "_pre_steps_log_hook": 412, "_pre_optim_hook": 412, "sub_batch": 412, "_post_loss_hook": 412, "_post_optim_hook": 412, "post_optim": [412, 416], "_post_optim_log": 412, "post_optim_log": 412, "_post_steps_hook": 412, "_post_steps_log_hook": 412, "post_steps_log": 412, "reserv": 412, "logginghook": 412, "logging_hook": 412, "save_dict": 412, "some_valu": 412, "torchsnapshot": 412, "ckpt_backend": 412, "filepath": 412, "save_train": 412, "000": [414, 433], "galleri": [414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "mem": [414, 433], "mb": [414, 433], "coding_ddpg": [414, 415, 433], "coding_dqn": [414, 416, 433], "coding_ppo": [414, 417, 433], "dqn_with_rnn": [414, 418, 433], "multi_task": [414, 427, 433], "multiagent_competitive_ddpg": [414, 428, 433], "multiagent_ppo": [414, 429, 433], "pretrained_model": [414, 431, 433], "rb_tutori": [414, 432, 433], "torchrl_demo": [414, 433, 434], "torchrl_env": [414, 433, 435], "author": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 435], "vincent": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 432, 435], "moen": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 432, 435], "assembl": 415, "focus": [415, 422], "straightforward": [415, 416, 420, 421, 422, 423, 432], "maxim": [415, 422, 430], "transpar": [415, 418], "bash": 415, "is_fork": [415, 416, 417, 418, 428, 429, 431], "get_start_method": [415, 416, 417, 418, 428, 429, 431], "collector_devic": 415, "loss_dict": 415, "oblivi": [415, 417, 432], "elementari": 415, "didact": [415, 419], "dilut": 415, "pessimist": [415, 416, 417], "target_actor_network_param": 415, "actor_in_kei": 415, "actor_crit": 415, "compromis": 415, "hp": 415, "_value_estim": 415, "elif": [415, 416], "unknown": 415, "_loss_actor": 415, "td_copi": 415, "actor_network_param": [415, 428], "value_network_param": [415, 428], "_loss_valu": 415, "pred_val": 415, "target_value_network_param": 415, "glue": 415, "_forward": 415, "remaind": 415, "env_librari": 415, "env_task": 415, "env_arg": [415, 416], "friendli": 415, "torchr": 415, "rescal": 415, "presum": 415, "make_transformed_env": 415, "reward_sc": 415, "marker": 415, "env_per_collector": 415, "transform_state_dict": 415, "make_t_env": 415, "cheat": 415, "10m": 415, "cautiou": 415, "magnitud": [415, 428], "thousand": [415, 418], "get_env_stat": 415, "proof_env": 415, "5000": [415, 419, 425], "recal": [415, 417, 432], "ddpgmlpactor": 415, "ddpgmlpqnet": 415, "materi": 415, "ornsteinuhlenbeckprocessmodul": [415, 421], "make_ddpg_actor": 415, "q_net": 415, "tight": 415, "decoupl": [415, 422, 434], "10_000": [415, 417], "traj_len": [415, 418], "make_record": 415, "recorder_obj": 415, "pick": [415, 416, 421], "buffer_s": [415, 416], "random_crop_len": 415, "prb": 415, "buffer_scratch_dir": [415, 416, 418, 423, 431], "temporari": 415, "25": 415, "dataflow": 415, "ceil_div": 415, "utd": [415, 418], "update_to_data": 415, "realiz": 415, "_must_": 415, "001": [415, 430], "outdat": 415, "trick": [415, 416], "despit": 415, "optimizer_actor": 415, "weight_decai": [415, 416], "optimizer_valu": 415, "total_collection_step": 415, "pretti": [415, 420, 424, 432], "rewards_ev": 415, "collected_fram": 415, "numel": [415, 417, 418, 419, 425, 428, 431, 432], "current_fram": [415, 428], "sampled_tensordict": 415, "gn1": 415, "clip_grad_norm_": [415, 417, 428, 429, 430], "gn2": 415, "gn": [415, 430], "td_record": 415, "rn": 415, "set_descript": [415, 417, 418, 428, 429, 430], "2f": 415, "mention": [415, 418, 432, 435], "matplotlib": [415, 417, 418, 419, 428, 429, 430, 432, 435], "pyplot": [415, 417, 418, 419, 428, 429, 430, 432, 435], "plt": [415, 417, 418, 419, 428, 429, 430, 432, 435], "zip": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "legend": [415, 428], "xlabel": [415, 418, 429, 430], "ylabel": [415, 429], "tight_layout": 415, "takeawai": [415, 416, 419], "distpatch": 415, "jupyt": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "ipynb": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435], "sphinx": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435], "road": 416, "aspect": [416, 422], "highest": [416, 421], "prerequisit": [416, 418], "lookup": 416, "cart": 416, "pole": 416, "un": 416, "actuat": 416, "frictionless": 416, "duelingcnndqnet": 416, "egreedymodul": [416, 418, 419, 421, 425], "is_notebook": 416, "shell": 416, "get_ipython": 416, "__class__": 416, "zmqinteractiveshel": 416, "qtconsol": 416, "terminalinteractiveshel": 416, "ipython": [416, 429, 430], "nameerror": [416, 428], "umbrella": 416, "misplac": 416, "misus": 416, "orchestr": [416, 422, 424], "five": 416, "64x64": 416, "motion": [416, 430], "obs_norm_sd": 416, "mp_context": 416, "simpler": [416, 420], "get_norm_stat": 416, "test_env": 416, "mathbb": 416, "rightarrow": 416, "make_model": 416, "dummy_env": 416, "init_bia": 416, "exploration_modul": [416, 418, 419, 421, 425], "eps_greedy_v": 416, "eps_greedy_val_env": 416, "actor_explor": 416, "get_replay_buff": 416, "n_optim": [416, 422, 423], "parametriz": 416, "get_collector": 416, "cl": 416, "bunch": 416, "ubiquit": [416, 420], "get_loss_modul": 416, "target_updat": [416, 428], "995": 416, "hopefulli": 416, "variat": 416, "2e": [416, 430], "wd": 416, "upd": 416, "harder": [416, 434], "5_000": 416, "500000": 416, "100000": 416, "005": [416, 428], "mandatori": [416, 417, 429, 430], "fairer": 416, "budget": 416, "dqn_exp_": 416, "uuid1": [416, 435], "registr": 416, "cumbersom": 416, "buffer_hook": 416, "weight_updat": 416, "aliv": 416, "total_reward": 416, "print_csv_files_in_fold": 416, "folder_path": 416, "csv_file": 416, "output_str": 416, "dirpath": 416, "endswith": 416, "strip": 416, "qvaluenetwork": 416, "accuraci": 416, "fanci": [416, 423], "talk": 417, "six": 417, "sophist": [417, 429], "invent": 417, "theta_k": 417, "pi_": 417, "exceed": 417, "discourag": [417, 430], "indispens": 417, "analyz": 417, "lingua": 417, "franca": 417, "defaultdict": [417, 430], "3e": [417, 418, 428, 429], "max_grad_norm": [417, 428, 429], "sub_batch_s": 417, "num_epoch": [417, 429], "entropy_ep": [417, 429], "charact": [417, 419], "inverteddoublependulum": 417, "transmit": 417, "stai": 417, "confid": [417, 428, 429], "ran": 417, "f_": 417, "mu_": 417, "difficulti": [417, 435], "d_ob": 417, "d_action": 417, "policy_modul": [417, 428, 429], "briefli": [417, 428, 429], "refil": [417, 429], "easiest": [417, 422, 428, 429], "mathemat": [417, 428, 429], "tradeoff": [417, 429], "advantage_modul": 417, "lr_schedul": [417, 430], "cosineannealinglr": [417, 430], "eval_str": 417, "tensordict_data": [417, 429], "data_view": [417, 429], "subdata": [417, 428, 429], "cum_reward_str": 417, "4f": [417, 418, 430], "stepcount_str": 417, "param_group": [417, 428], "lr_str": 417, "eval_rollout": 417, "nice": [417, 420, 423], "cap": [417, 432], "figsiz": [417, 430], "subplot": [417, 428, 430, 435], "titl": [417, 418, 419, 429, 430], "84x84": [418, 419], "accessori": 418, "stamp": 418, "assist": 418, "n_cell": 418, "customiz": 418, "wouldn": 418, "qval": 418, "stoch_polici": 418, "opportun": [418, 428], "uniniti": 418, "again": [418, 419, 420, 421, 423, 429, 431, 432, 435], "strongli": 418, "sake": [418, 431, 432], "20_000": [418, 430], "longest": 418, "npai": 418, "action_spread": 418, "rom": 419, "licens": 419, "strong": 419, "impress": 419, "arduino": 419, "raspberri": 419, "pi": [419, 428, 429, 430], "alon": 419, "examplifi": 419, "ship": 419, "stick": 419, "nearest": 419, "value_mlp": [419, 425], "100_000": [419, 425], "init_rand_step": [419, 425], "total_count": [419, 425], "total_episod": [419, 425], "t0": [419, 425], "screen": [419, 428], "color": [419, 428], "unblock": 419, "policy_transform": 419, "fake_td": 419, "exported_polici": 419, "div": 419, "graph_modul": 419, "print_read": 419, "group0": 419, "group0_agent0_ob": 419, "collid": [419, 429], "group0_agent0": 419, "agent0_ob": 419, "digress": 419, "exported_stochastic_polici": 419, "trace": 419, "batchsizetransform": 419, "recurrent_polici": 419, "fake_ob": 419, "fake_hidden0": 419, "fake_hidden1": 419, "fake_is_init": 419, "exported_recurrent_polici": 419, "platform": [419, 434], "aoti": 419, "_inductor": 419, "aoti_compile_and_packag": 419, "aoti_load_packag": 419, "pt2": 419, "pkg_path": 419, "package_path": 419, "compiled_modul": 419, "onnxruntim": 419, "showcas": [419, 430], "web": 419, "explain": [419, 431], "tensorrt": 419, "android": 419, "ale_pi": 419, "aleinterfac": 419, "loadrom": 419, "reset_gam": 419, "screen_ob": 419, "getscreenrgb": 419, "tick_param": 419, "bottom": 419, "labelleft": 419, "labelbottom": 419, "imshow": [419, 435], "dynamo_export": 419, "onnx_policy_export": 419, "onnx_file_path": 419, "ort_sess": 419, "inferencesess": 419, "cpuexecutionprovid": 419, "onnxruntime_input": 419, "get_input": 419, "onnx_polici": 419, "lightweight": [419, 424], "onnxruntime_output": 419, "deploy": 419, "topic": [420, 421, 422], "straight": 420, "backtrack": 420, "encapsul": [420, 421, 422], "reset_with_act": 420, "stepped_data": 420, "spatial": 420, "useless": 420, "policyless": 420, "monitor": 420, "examin": [420, 428], "tackl": 421, "delv": 421, "extractor": 421, "palliat": 421, "additivegaussianmodul": [421, 428], "exploration_polici": [421, 428], "greedili": 421, "2d": [421, 428, 429], "innov": [421, 422], "rollout_explor": 421, "sole": 422, "supervis": [422, 423, 432, 435], "n_collect": 422, "get_next_batch": 422, "ddpg_loss": 422, "total_loss": 422, "prove": 422, "reliev": 422, "concern": 422, "accustom": 423, "surprisingli": 423, "fundament": 423, "art": [423, 428, 429], "countless": 423, "yourself": [423, 428, 429], "everywher": 424, "log_scalar": 424, "elaps": 424, "my_scalar": 424, "saw": [424, 430, 432], "excess": 424, "lesson": 425, "voluntarili": 425, "training_loop": 425, "video_record": 425, "arbitrarili": 425, "t1": 425, "conclud": [425, 431], "tutorials_python": 426, "tutorials_jupyt": 426, "env1_obs_kei": 427, "observation_stand": 427, "env2_obs_kei": 427, "observation_walk": 427, "tdreset1": 427, "tdreset2": 427, "lazy_stack": 427, "policy_common": 427, "policy_stand": 427, "policy_walk": 427, "But": 427, "env1_mak": 427, "env2_mak": 427, "_single_task": 427, "td_rollout": 427, "matteo": [428, 429], "bettini": [428, 429], "benchmarl": [428, 429], "simple_tag": 428, "maddpg": [428, 429], "multiagentparticleenviron": 428, "mpe": 428, "centralis": [428, 429], "tie": [428, 429], "iddpg": [428, 429], "richard": 428, "andrew": 428, "mit": 428, "press": 428, "2018": 428, "mathbf": [428, 429], "decentralis": [428, 429], "literatur": [428, 429], "overcom": [428, 429], "stationari": [428, 429], "concurr": [428, 429], "establish": 428, "gui": [428, 429], "is_sphinx": 428, "__sphinx_build__": 428, "n_iter": [428, 429, 430], "evad": 428, "iteration_when_stop_training_evad": 428, "memory_s": 428, "n_optimiser_step": 428, "train_batch_s": 428, "polyak_tau": 428, "chaser": 428, "red": 428, "circl": [428, 429], "touch": [428, 430], "penal": [428, 429], "obstacl": 428, "drag": [428, 429], "elast": [428, 429], "collis": [428, 429], "imped": 428, "n_chaser": 428, "n_evad": 428, "n_obstacl": 428, "use_vma": 428, "simple_tag_v3": 428, "num_good": 428, "num_adversari": 428, "num_obstacl": 428, "max_cycl": 428, "num_vmas_env": [428, 429], "num_good_ag": 428, "num_landmark": 428, "four": [428, 429, 430], "n_agents_in_that_group": 428, "stress": [428, 429], "paramount": [428, 429], "n_rollout_step": [428, 429], "evolut": [428, 429], "group_nam": 428, "n_agents_in_group": 428, "minor": 428, "agents_exploration_polici": 428, "utilis": [428, 429], "n_obs_per_ag": [428, 429], "n_actions_per_ag": [428, 429], "share_parameters_polici": [428, 429], "policy_net": [428, 429], "_agent": 428, "grant": [428, 429], "converg": [428, 429], "share_parameters_crit": [428, 429], "obs_act": 428, "cat_modul": 428, "critic_modul": 428, "fantast": [428, 429], "reset_td": 428, "interfer": 428, "subject": [428, 430], "flatten_kei": 428, "process_batch": 428, "group_shap": 428, "get_item_shap": [428, 429], "nested_done_kei": 428, "nested_terminated_kei": 428, "desc": [428, 429], "episode_reward_mean_": 428, "episode_reward_mean_map": 428, "train_group_map": 428, "group_batch": 428, "_group": 428, "loss_nam": 428, "episode_reward_mean": [428, 429], "fig": [428, 432], "set_ylabel": 428, "axvlin": 428, "orang": 428, "set_xlabel": 428, "video_logg": 428, "vmas_log": 428, "env_with_rend": 428, "vmas_rend": 428, "print_log_dir": 428, "profici": [428, 429], "lidar": 429, "sensor": 429, "mappo": 429, "ippo": 429, "analys": 429, "visualis": 429, "vmas_devic": 429, "6_000": 429, "minibatch_s": 429, "generalis": 429, "simd": 429, "warp": 429, "todai": 429, "surround": 429, "dot": [429, 430], "scenario_nam": 429, "critic_net": 429, "minibatch": 429, "episode_reward_mean_list": 429, "critic_network_param": 429, "target_critic_network_param": 429, "xvfb": 429, "pyvirtualdisplai": 429, "1400": 429, "900": 429, "pil": 429, "rendering_callback": 429, "fromarrai": 429, "gif": 429, "save_al": 429, "append_imag": 429, "freeli": 430, "broader": 430, "wider": 430, "acquaint": 430, "avenu": 430, "_apply_to_composit": 430, "default_x": 430, "default_i": 430, "upward": 430, "angular": 430, "sin": 430, "rad": 430, "angl": 430, "deleg": 430, "new_th": 430, "new_thdot": 430, "g_forc": 430, "angle_norm": 430, "albeit": 430, "high_th": 430, "high_thdot": 430, "low_th": 430, "low_thdot": 430, "trivial": 430, "irrelev": 430, "_make_spec": 430, "td_param": 430, "render_fp": 430, "random_": 430, "_make_step": 430, "staticmethod": 430, "skeleton": 430, "sine": 430, "cosin": 430, "sintransform": 430, "costransform": 430, "t_sin": 430, "t_co": 430, "cat_transform": 430, "simple_rollout": 430, "unexplor": 430, "init_td": 430, "traj_return": 430, "last_reward": 430, "is_ipython": 430, "inlin": 430, "get_backend": 430, "ion": 430, "gcf": 430, "clear_output": 430, "r3mtransform": 431, "env_transform": [431, 435], "wiser": 431, "batteri": 432, "buffer_list": 432, "lowest": 432, "medium": 432, "buffer_lazytensor": 432, "tempdir": 432, "buffer_lazymemmap": 432, "fullest": 432, "mydata": 432, "buffer_lazi": 432, "background": 432, "question": [432, 434], "_i": 432, "artifici": 432, "hamper": 432, "she": 432, "pars": 432, "proport": 432, "reappear": 432, "unfold": 432, "problemat": 432, "4th": 432, "gc": 432, "prioritizedslicesampl": 432, "tensordictmaxvaluewrit": 432, "demo": 434, "icml": 434, "vmoen": 434, "fb": 434, "invest": 434, "media": 434, "predominantli": 434, "data2": 434, "sub_key1": 434, "scturctur": 434, "data_stack": 434, "data_sampl": 434, "_sampler": 434, "_sum_tre": 434, "modulenotfounderror": 434, "noopresetenv": [434, 435], "backbone_modul": 434, "tailor": 434, "params_expand": 434, "exec_sequ": 434, "tensordict_exp": 434, "base_modul": 434, "tensordicts_prealloc": 434, "tensordicts_stack": 434, "tensordict_rollout": [434, 435], "automatical": 434, "60": 434, "particularili": 434, "concatmodul": 434, "loss_td": 434, "contributor": 434, "curiou": 434, "nascent": 434, "unsupervis": 435, "unifi": 435, "_build_env": 435, "deserv": 435, "__episode__": 435, "__trajectory__": 435, "void": 435, "reproduct": 435, "tensordict_tprim": 435, "wrapper1": 435, "wrapper2": 435, "obviou": 435, "truth": 435, "env_transformed_bi": 435, "stanc": 435, "transformeddistribut": 435, "base_dist": 435, "concat": 435, "mofidi": 435, "transformedenviron": 435, "moderet": 435, "computation": 435, "incom": 435, "amongst": 435, "has_cuda": 435, "convention": 435, "markovian": 435, "bar_": 435, "get_someth": 435, "aargh": 435, "is_clos": 435, "foo_list": 435, "121": 435, "evolv": 435, "steadi": 435, "approx": 435, "absor": 435, "_extra_st": 435}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MCTSForest"], [42, 0, 1, "", "MultiCategorical"], [43, 0, 1, "", "MultiDiscreteTensorSpec"], [44, 0, 1, "", "MultiOneHot"], [45, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [46, 0, 1, "", "MultiStep"], [47, 0, 1, "", "Nested2TED"], [48, 0, 1, "", "NonTensor"], [49, 0, 1, "", "NonTensorSpec"], [50, 0, 1, "", "OneHot"], [51, 0, 1, "", "OneHotDiscreteTensorSpec"], [52, 0, 1, "", "PairwiseDataset"], [53, 0, 1, "", "PrioritizedReplayBuffer"], [54, 0, 1, "", "PromptData"], [55, 0, 1, "", "PromptTensorDictTokenizer"], [56, 0, 1, "", "QueryModule"], [57, 0, 1, "", "RandomProjectionHash"], [58, 0, 1, "", "ReplayBuffer"], [59, 0, 1, "", "RewardData"], [60, 0, 1, "", "RolloutFromModel"], [61, 0, 1, "", "SipHash"], [62, 0, 1, "", "Stacked"], [63, 0, 1, "", "StackedComposite"], [64, 0, 1, "", "TED2Flat"], [65, 0, 1, "", "TED2Nested"], [66, 0, 1, "", "TensorDictMap"], [67, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [68, 0, 1, "", "TensorDictReplayBuffer"], [69, 0, 1, "", "TensorDictTokenizer"], [70, 0, 1, "", "TensorMap"], [71, 0, 1, "", "TensorSpec"], [72, 0, 1, "", "TokenizedDatasetLoader"], [73, 0, 1, "", "Tree"], [74, 0, 1, "", "Unbounded"], [75, 0, 1, "", "UnboundedContinuous"], [76, 0, 1, "", "UnboundedContinuousTensorSpec"], [77, 0, 1, "", "UnboundedDiscrete"], [78, 0, 1, "", "UnboundedDiscreteTensorSpec"], [79, 0, 1, "", "check_no_exclusive_keys"], [80, 0, 1, "", "consolidate_spec"], [81, 0, 1, "", "contains_lazy_spec"], [82, 0, 1, "", "create_infinite_iterator"], [92, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "set"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "set"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "set"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[41, 4, 1, "", "action_keys"], [41, 4, 1, "", "done_keys"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "get_keys_from_env"], [41, 4, 1, "", "observation_keys"], [41, 4, 1, "", "reward_keys"]], "torchrl.data.MultiCategorical": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "set_provisional_n"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "set_provisional_n"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "cardinality"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 3, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "compile"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "mtia"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_load_state_dict_pre_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "register_state_dict_post_hook"], [46, 1, 1, "", "register_state_dict_pre_hook"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_submodule"], [46, 1, 1, "", "share_memory"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 3, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 4, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_categorical"], [50, 1, 1, "", "to_categorical_spec"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "to_one_hot"], [50, 1, 1, "", "to_one_hot_spec"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "update_mask"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 3, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 4, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[52, 4, 1, "", "device"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "fields"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dump"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "load"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "register_load_hook"], [53, 1, 1, "", "register_save_hook"], [53, 1, 1, "", "sample"], [53, 4, 1, "", "sampler"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 4, 1, "", "storage"], [53, 4, 1, "", "write_count"], [53, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[54, 4, 1, "", "device"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "fields"], [54, 1, 1, "", "from_dataset"], [54, 1, 1, "", "from_tensordict"], [54, 1, 1, "", "get"], [54, 1, 1, "", "load"], [54, 1, 1, "", "load_"], [54, 1, 1, "", "load_memmap"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "memmap"], [54, 1, 1, "", "memmap_"], [54, 1, 1, "", "memmap_like"], [54, 1, 1, "", "memmap_refresh_"], [54, 1, 1, "", "save"], [54, 1, 1, "", "set"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to_tensordict"], [54, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "is_tdmodule_compatible"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "reset_out_keys"], [56, 1, 1, "", "reset_parameters_recursive"], [56, 1, 1, "", "select_out_keys"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[57, 1, 1, "", "add_module"], [57, 1, 1, "", "apply"], [57, 1, 1, "", "bfloat16"], [57, 1, 1, "", "buffers"], [57, 1, 1, "", "children"], [57, 1, 1, "", "compile"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 1, 1, "", "double"], [57, 1, 1, "", "eval"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "float"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "get_buffer"], [57, 1, 1, "", "get_extra_state"], [57, 1, 1, "", "get_parameter"], [57, 1, 1, "", "get_submodule"], [57, 1, 1, "", "half"], [57, 1, 1, "", "ipu"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "modules"], [57, 1, 1, "", "mtia"], [57, 1, 1, "", "named_buffers"], [57, 1, 1, "", "named_children"], [57, 1, 1, "", "named_modules"], [57, 1, 1, "", "named_parameters"], [57, 1, 1, "", "parameters"], [57, 1, 1, "", "register_backward_hook"], [57, 1, 1, "", "register_buffer"], [57, 1, 1, "", "register_forward_hook"], [57, 1, 1, "", "register_forward_pre_hook"], [57, 1, 1, "", "register_full_backward_hook"], [57, 1, 1, "", "register_full_backward_pre_hook"], [57, 1, 1, "", "register_load_state_dict_post_hook"], [57, 1, 1, "", "register_load_state_dict_pre_hook"], [57, 1, 1, "", "register_module"], [57, 1, 1, "", "register_parameter"], [57, 1, 1, "", "register_state_dict_post_hook"], [57, 1, 1, "", "register_state_dict_pre_hook"], [57, 1, 1, "", "requires_grad_"], [57, 1, 1, "", "set_extra_state"], [57, 1, 1, "", "set_submodule"], [57, 1, 1, "", "share_memory"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_empty"], [57, 1, 1, "", "train"], [57, 1, 1, "", "type"], [57, 1, 1, "", "xpu"], [57, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dump"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "load"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "register_load_hook"], [58, 1, 1, "", "register_save_hook"], [58, 1, 1, "", "sample"], [58, 4, 1, "", "sampler"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 4, 1, "", "storage"], [58, 4, 1, "", "write_count"], [58, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[59, 4, 1, "", "device"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "fields"], [59, 1, 1, "", "from_tensordict"], [59, 1, 1, "", "get"], [59, 1, 1, "", "load"], [59, 1, 1, "", "load_"], [59, 1, 1, "", "load_memmap"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "memmap"], [59, 1, 1, "", "memmap_"], [59, 1, 1, "", "memmap_like"], [59, 1, 1, "", "memmap_refresh_"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to_tensordict"], [59, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[60, 1, 1, "", "create_rollout_td"], [60, 1, 1, "", "generate"], [60, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "cardinality"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "cardinality"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "get"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_empty"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "items"], [63, 1, 1, "", "keys"], [63, 1, 1, "", "lock_"], [63, 1, 1, "", "make_neg_dim"], [63, 4, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "pop"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "separates"], [63, 1, 1, "", "set"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unlock_"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "values"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "from_tensordict_pair"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 4, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 4, 1, "", "storage"], [67, 4, 1, "", "write_count"], [67, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 4, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 4, 1, "", "storage"], [68, 4, 1, "", "write_count"], [68, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "cardinality"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "enumerate"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[72, 1, 1, "", "dataset_to_tensordict"], [72, 1, 1, "", "load"]], "torchrl.data.Tree": [[73, 4, 1, "", "branching_action"], [73, 4, 1, "", "device"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "edges"], [73, 1, 1, "", "fields"], [73, 1, 1, "", "from_tensordict"], [73, 4, 1, "", "full_action_spec"], [73, 4, 1, "", "full_done_spec"], [73, 4, 1, "", "full_observation_spec"], [73, 4, 1, "", "full_reward_spec"], [73, 4, 1, "", "full_state_spec"], [73, 1, 1, "", "fully_expanded"], [73, 1, 1, "", "get"], [73, 1, 1, "", "get_vertex_by_hash"], [73, 1, 1, "", "get_vertex_by_id"], [73, 4, 1, "", "is_terminal"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "make_node"], [73, 1, 1, "", "max_length"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 4, 1, "", "node_observation"], [73, 4, 1, "", "node_observations"], [73, 4, 1, "", "num_children"], [73, 1, 1, "", "num_vertices"], [73, 4, 1, "", "parent"], [73, 1, 1, "", "plot"], [73, 4, 1, "", "prev_action"], [73, 1, 1, "", "rollout_from_path"], [73, 1, 1, "", "save"], [73, 4, 1, "", "selected_actions"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"], [73, 1, 1, "", "valid_paths"], [73, 1, 1, "", "vertices"], [73, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 4, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 4, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "cardinality"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[83, 0, 1, "", "AtariDQNExperienceReplay"], [84, 0, 1, "", "BaseDatasetExperienceReplay"], [85, 0, 1, "", "D4RLExperienceReplay"], [86, 0, 1, "", "GenDGRLExperienceReplay"], [87, 0, 1, "", "MinariExperienceReplay"], [88, 0, 1, "", "OpenMLExperienceReplay"], [89, 0, 1, "", "OpenXExperienceReplay"], [90, 0, 1, "", "RobosetExperienceReplay"], [91, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[89, 1, 1, "", "add"], [89, 1, 1, "", "append_transform"], [89, 4, 1, "", "data_path"], [89, 4, 1, "", "data_path_root"], [89, 1, 1, "", "delete"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "dumps"], [89, 1, 1, "", "empty"], [89, 1, 1, "", "extend"], [89, 1, 1, "", "insert_transform"], [89, 1, 1, "", "load"], [89, 1, 1, "", "loads"], [89, 1, 1, "", "preprocess"], [89, 1, 1, "", "register_load_hook"], [89, 1, 1, "", "register_save_hook"], [89, 1, 1, "", "sample"], [89, 4, 1, "", "sampler"], [89, 1, 1, "", "save"], [89, 1, 1, "", "set_sampler"], [89, 1, 1, "", "set_storage"], [89, 1, 1, "", "set_writer"], [89, 4, 1, "", "storage"], [89, 4, 1, "", "write_count"], [89, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[90, 1, 1, "", "add"], [90, 1, 1, "", "append_transform"], [90, 4, 1, "", "data_path"], [90, 4, 1, "", "data_path_root"], [90, 1, 1, "", "delete"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "dumps"], [90, 1, 1, "", "empty"], [90, 1, 1, "", "extend"], [90, 1, 1, "", "insert_transform"], [90, 1, 1, "", "load"], [90, 1, 1, "", "loads"], [90, 1, 1, "", "preprocess"], [90, 1, 1, "", "register_load_hook"], [90, 1, 1, "", "register_save_hook"], [90, 1, 1, "", "sample"], [90, 4, 1, "", "sampler"], [90, 1, 1, "", "save"], [90, 1, 1, "", "set_sampler"], [90, 1, 1, "", "set_storage"], [90, 1, 1, "", "set_writer"], [90, 4, 1, "", "storage"], [90, 4, 1, "", "write_count"], [90, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[91, 1, 1, "", "add"], [91, 1, 1, "", "append_transform"], [91, 4, 1, "", "data_path"], [91, 4, 1, "", "data_path_root"], [91, 1, 1, "", "delete"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "dumps"], [91, 1, 1, "", "empty"], [91, 1, 1, "", "extend"], [91, 1, 1, "", "insert_transform"], [91, 1, 1, "", "load"], [91, 1, 1, "", "loads"], [91, 1, 1, "", "preprocess"], [91, 1, 1, "", "register_load_hook"], [91, 1, 1, "", "register_save_hook"], [91, 1, 1, "", "sample"], [91, 4, 1, "", "sampler"], [91, 1, 1, "", "save"], [91, 1, 1, "", "set_sampler"], [91, 1, 1, "", "set_storage"], [91, 1, 1, "", "set_writer"], [91, 4, 1, "", "storage"], [91, 4, 1, "", "write_count"], [91, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[93, 0, 1, "", "FlatStorageCheckpointer"], [94, 0, 1, "", "H5StorageCheckpointer"], [95, 0, 1, "", "ImmutableDatasetWriter"], [96, 0, 1, "", "LazyMemmapStorage"], [97, 0, 1, "", "LazyStackStorage"], [98, 0, 1, "", "LazyTensorStorage"], [99, 0, 1, "", "ListStorage"], [100, 0, 1, "", "ListStorageCheckpointer"], [101, 0, 1, "", "NestedStorageCheckpointer"], [102, 0, 1, "", "PrioritizedSampler"], [103, 0, 1, "", "PrioritizedSliceSampler"], [104, 0, 1, "", "RandomSampler"], [105, 0, 1, "", "ReplayBufferEnsemble"], [106, 0, 1, "", "RoundRobinWriter"], [107, 0, 1, "", "Sampler"], [108, 0, 1, "", "SamplerEnsemble"], [109, 0, 1, "", "SamplerWithoutReplacement"], [110, 0, 1, "", "SliceSampler"], [111, 0, 1, "", "SliceSamplerWithoutReplacement"], [112, 0, 1, "", "Storage"], [113, 0, 1, "", "StorageCheckpointerBase"], [114, 0, 1, "", "StorageEnsemble"], [115, 0, 1, "", "StorageEnsembleCheckpointer"], [116, 0, 1, "", "TensorDictMaxValueWriter"], [117, 0, 1, "", "TensorDictRoundRobinWriter"], [118, 0, 1, "", "TensorStorage"], [119, 0, 1, "", "TensorStorageCheckpointer"], [120, 0, 1, "", "Writer"], [121, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[97, 1, 1, "", "attach"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "load"], [97, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[99, 1, 1, "", "attach"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "load"], [99, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[102, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[103, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[105, 1, 1, "", "add"], [105, 1, 1, "", "append_transform"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "dumps"], [105, 1, 1, "", "empty"], [105, 1, 1, "", "extend"], [105, 1, 1, "", "insert_transform"], [105, 1, 1, "", "load"], [105, 1, 1, "", "loads"], [105, 1, 1, "", "register_load_hook"], [105, 1, 1, "", "register_save_hook"], [105, 1, 1, "", "sample"], [105, 4, 1, "", "sampler"], [105, 1, 1, "", "save"], [105, 1, 1, "", "set_sampler"], [105, 1, 1, "", "set_storage"], [105, 1, 1, "", "set_writer"], [105, 4, 1, "", "storage"], [105, 4, 1, "", "write_count"], [105, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[106, 1, 1, "", "add"], [106, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[112, 1, 1, "", "attach"], [112, 1, 1, "", "dump"], [112, 1, 1, "", "load"], [112, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"], [116, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[118, 1, 1, "", "attach"], [118, 1, 1, "", "dump"], [118, 1, 1, "", "load"], [118, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[120, 1, 1, "", "add"], [120, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[121, 1, 1, "", "add"], [121, 1, 1, "", "extend"]], "torchrl.envs": [[122, 2, 1, "", "BraxEnv"], [123, 2, 1, "", "BraxWrapper"], [124, 0, 1, "", "ChessEnv"], [125, 2, 1, "", "DMControlEnv"], [126, 2, 1, "", "DMControlWrapper"], [127, 0, 1, "", "EnvBase"], [128, 0, 1, "", "EnvCreator"], [129, 0, 1, "", "EnvMetaData"], [130, 2, 1, "", "GymEnv"], [131, 0, 1, "", "GymLikeEnv"], [132, 2, 1, "", "GymWrapper"], [133, 2, 1, "", "HabitatEnv"], [134, 2, 1, "", "IsaacGymEnv"], [135, 2, 1, "", "IsaacGymWrapper"], [136, 2, 1, "", "JumanjiEnv"], [137, 2, 1, "", "JumanjiWrapper"], [138, 0, 1, "", "LLMHashingEnv"], [139, 2, 1, "", "MOGymEnv"], [140, 2, 1, "", "MOGymWrapper"], [141, 2, 1, "", "MarlGroupMapType"], [142, 2, 1, "", "MeltingpotEnv"], [143, 2, 1, "", "MeltingpotWrapper"], [144, 2, 1, "", "ModelBasedEnvBase"], [145, 2, 1, "", "MultiThreadedEnv"], [146, 2, 1, "", "MultiThreadedEnvWrapper"], [147, 2, 1, "", "OpenMLEnv"], [148, 2, 1, "", "OpenSpielEnv"], [149, 2, 1, "", "OpenSpielWrapper"], [150, 0, 1, "", "ParallelEnv"], [151, 0, 1, "", "PendulumEnv"], [152, 2, 1, "", "PettingZooEnv"], [153, 2, 1, "", "PettingZooWrapper"], [154, 2, 1, "", "RoboHiveEnv"], [155, 2, 1, "", "SMACv2Env"], [156, 2, 1, "", "SMACv2Wrapper"], [157, 0, 1, "", "SerialEnv"], [158, 0, 1, "", "TicTacToeEnv"], [159, 2, 1, "", "UnityMLAgentsEnv"], [160, 2, 1, "", "UnityMLAgentsWrapper"], [161, 2, 1, "", "VmasEnv"], [162, 2, 1, "", "VmasWrapper"], [163, 2, 1, "", "check_marl_grouping"], [164, 2, 1, "", "gym_backend"], [144, 1, 1, "", "rand_step"], [167, 2, 1, "", "register_gym_spec_conversion"], [144, 1, 1, "", "reset"], [144, 1, 1, "", "rollout"], [168, 2, 1, "", "set_gym_backend"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "step"]], "torchrl.envs.ChessEnv": [[124, 4, 1, "", "action_key"], [124, 4, 1, "", "action_keys"], [124, 4, 1, "", "action_spec"], [124, 4, 1, "", "action_spec_unbatched"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "all_actions"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 1, 1, "", "auto_specs_"], [124, 4, 1, "", "batch_dims"], [124, 4, 1, "", "batch_locked"], [124, 4, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "cardinality"], [124, 1, 1, "", "check_env_specs"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 4, 1, "", "done_key"], [124, 4, 1, "", "done_keys"], [124, 4, 1, "", "done_keys_groups"], [124, 4, 1, "", "done_spec"], [124, 4, 1, "", "done_spec_unbatched"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 4, 1, "", "full_action_spec"], [124, 4, 1, "", "full_action_spec_unbatched"], [124, 4, 1, "", "full_done_spec"], [124, 4, 1, "", "full_done_spec_unbatched"], [124, 4, 1, "", "full_observation_spec_unbatched"], [124, 4, 1, "", "full_reward_spec"], [124, 4, 1, "", "full_reward_spec_unbatched"], [124, 4, 1, "", "full_state_spec"], [124, 4, 1, "", "full_state_spec_unbatched"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_legal_moves"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 4, 1, "", "input_spec"], [124, 4, 1, "", "input_spec_unbatched"], [124, 1, 1, "", "ipu"], [124, 4, 1, "", "is_spec_locked"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "mtia"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 4, 1, "", "observation_keys"], [124, 4, 1, "", "observation_spec"], [124, 4, 1, "", "observation_spec_unbatched"], [124, 4, 1, "", "output_spec"], [124, 4, 1, "", "output_spec_unbatched"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_load_state_dict_pre_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_post_hook"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "", "reset"], [124, 4, 1, "", "reset_keys"], [124, 4, 1, "", "reward_key"], [124, 4, 1, "", "reward_keys"], [124, 4, 1, "", "reward_spec"], [124, 4, 1, "", "reward_spec_unbatched"], [124, 1, 1, "", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "", "set_seed"], [124, 1, 1, "", "set_spec_lock_"], [124, 1, 1, "", "set_submodule"], [124, 4, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 4, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 4, 1, "", "state_keys"], [124, 4, 1, "", "state_spec"], [124, 4, 1, "", "state_spec_unbatched"], [124, 1, 1, "", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "step_mdp"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[127, 4, 1, "", "action_key"], [127, 4, 1, "", "action_keys"], [127, 4, 1, "", "action_spec"], [127, 4, 1, "", "action_spec_unbatched"], [127, 1, 1, "", "add_module"], [127, 1, 1, "", "add_truncated_keys"], [127, 1, 1, "", "all_actions"], [127, 1, 1, "", "append_transform"], [127, 1, 1, "", "apply"], [127, 1, 1, "", "auto_specs_"], [127, 4, 1, "", "batch_dims"], [127, 4, 1, "", "batch_locked"], [127, 4, 1, "", "batch_size"], [127, 1, 1, "", "bfloat16"], [127, 1, 1, "", "buffers"], [127, 1, 1, "", "cardinality"], [127, 1, 1, "", "check_env_specs"], [127, 1, 1, "", "children"], [127, 1, 1, "", "compile"], [127, 1, 1, "", "cpu"], [127, 1, 1, "", "cuda"], [127, 4, 1, "", "done_key"], [127, 4, 1, "", "done_keys"], [127, 4, 1, "", "done_keys_groups"], [127, 4, 1, "", "done_spec"], [127, 4, 1, "", "done_spec_unbatched"], [127, 1, 1, "", "double"], [127, 1, 1, "", "empty_cache"], [127, 1, 1, "", "eval"], [127, 1, 1, "", "extra_repr"], [127, 1, 1, "", "fake_tensordict"], [127, 1, 1, "", "float"], [127, 1, 1, "", "forward"], [127, 4, 1, "", "full_action_spec"], [127, 4, 1, "", "full_action_spec_unbatched"], [127, 4, 1, "", "full_done_spec"], [127, 4, 1, "", "full_done_spec_unbatched"], [127, 4, 1, "", "full_observation_spec_unbatched"], [127, 4, 1, "", "full_reward_spec"], [127, 4, 1, "", "full_reward_spec_unbatched"], [127, 4, 1, "", "full_state_spec"], [127, 4, 1, "", "full_state_spec_unbatched"], [127, 1, 1, "", "get_buffer"], [127, 1, 1, "", "get_extra_state"], [127, 1, 1, "", "get_parameter"], [127, 1, 1, "", "get_submodule"], [127, 1, 1, "", "half"], [127, 4, 1, "", "input_spec"], [127, 4, 1, "", "input_spec_unbatched"], [127, 1, 1, "", "ipu"], [127, 4, 1, "", "is_spec_locked"], [127, 1, 1, "", "load_state_dict"], [127, 1, 1, "", "maybe_reset"], [127, 1, 1, "", "modules"], [127, 1, 1, "", "mtia"], [127, 1, 1, "", "named_buffers"], [127, 1, 1, "", "named_children"], [127, 1, 1, "", "named_modules"], [127, 1, 1, "", "named_parameters"], [127, 4, 1, "", "observation_keys"], [127, 4, 1, "", "observation_spec"], [127, 4, 1, "", "observation_spec_unbatched"], [127, 4, 1, "", "output_spec"], [127, 4, 1, "", "output_spec_unbatched"], [127, 1, 1, "", "parameters"], [127, 1, 1, "", "rand_action"], [127, 1, 1, "id0", "rand_step"], [127, 1, 1, "", "register_backward_hook"], [127, 1, 1, "", "register_buffer"], [127, 1, 1, "", "register_forward_hook"], [127, 1, 1, "", "register_forward_pre_hook"], [127, 1, 1, "", "register_full_backward_hook"], [127, 1, 1, "", "register_full_backward_pre_hook"], [127, 1, 1, "", "register_gym"], [127, 1, 1, "", "register_load_state_dict_post_hook"], [127, 1, 1, "", "register_load_state_dict_pre_hook"], [127, 1, 1, "", "register_module"], [127, 1, 1, "", "register_parameter"], [127, 1, 1, "", "register_state_dict_post_hook"], [127, 1, 1, "", "register_state_dict_pre_hook"], [127, 1, 1, "", "requires_grad_"], [127, 1, 1, "id1", "reset"], [127, 4, 1, "", "reset_keys"], [127, 4, 1, "", "reward_key"], [127, 4, 1, "", "reward_keys"], [127, 4, 1, "", "reward_spec"], [127, 4, 1, "", "reward_spec_unbatched"], [127, 1, 1, "id2", "rollout"], [127, 1, 1, "", "set_extra_state"], [127, 1, 1, "id3", "set_seed"], [127, 1, 1, "", "set_spec_lock_"], [127, 1, 1, "", "set_submodule"], [127, 4, 1, "", "shape"], [127, 1, 1, "", "share_memory"], [127, 4, 1, "", "specs"], [127, 1, 1, "", "state_dict"], [127, 4, 1, "", "state_keys"], [127, 4, 1, "", "state_spec"], [127, 4, 1, "", "state_spec_unbatched"], [127, 1, 1, "id4", "step"], [127, 1, 1, "", "step_and_maybe_reset"], [127, 1, 1, "", "step_mdp"], [127, 1, 1, "", "to"], [127, 1, 1, "", "to_empty"], [127, 1, 1, "", "train"], [127, 1, 1, "", "type"], [127, 1, 1, "", "xpu"], [127, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[128, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[131, 4, 1, "", "action_key"], [131, 4, 1, "", "action_keys"], [131, 4, 1, "", "action_spec"], [131, 4, 1, "", "action_spec_unbatched"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "all_actions"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 1, 1, "", "auto_register_info_dict"], [131, 1, 1, "", "auto_specs_"], [131, 4, 1, "", "batch_dims"], [131, 4, 1, "", "batch_locked"], [131, 4, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "cardinality"], [131, 1, 1, "", "check_env_specs"], [131, 1, 1, "", "children"], [131, 1, 1, "", "close"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 4, 1, "", "done_key"], [131, 4, 1, "", "done_keys"], [131, 4, 1, "", "done_keys_groups"], [131, 4, 1, "", "done_spec"], [131, 4, 1, "", "done_spec_unbatched"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 4, 1, "", "full_action_spec"], [131, 4, 1, "", "full_action_spec_unbatched"], [131, 4, 1, "", "full_done_spec"], [131, 4, 1, "", "full_done_spec_unbatched"], [131, 4, 1, "", "full_observation_spec_unbatched"], [131, 4, 1, "", "full_reward_spec"], [131, 4, 1, "", "full_reward_spec_unbatched"], [131, 4, 1, "", "full_state_spec"], [131, 4, 1, "", "full_state_spec_unbatched"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 4, 1, "", "input_spec"], [131, 4, 1, "", "input_spec_unbatched"], [131, 1, 1, "", "ipu"], [131, 4, 1, "", "is_spec_locked"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "mtia"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 4, 1, "", "observation_keys"], [131, 4, 1, "", "observation_spec"], [131, 4, 1, "", "observation_spec_unbatched"], [131, 4, 1, "", "output_spec"], [131, 4, 1, "", "output_spec_unbatched"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "read_action"], [131, 1, 1, "", "read_done"], [131, 1, 1, "", "read_obs"], [131, 1, 1, "", "read_reward"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_load_state_dict_pre_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_post_hook"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "", "reset"], [131, 4, 1, "", "reset_keys"], [131, 4, 1, "", "reward_key"], [131, 4, 1, "", "reward_keys"], [131, 4, 1, "", "reward_spec"], [131, 4, 1, "", "reward_spec_unbatched"], [131, 1, 1, "", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "set_info_dict_reader"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "set_spec_lock_"], [131, 1, 1, "", "set_submodule"], [131, 4, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 4, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 4, 1, "", "state_keys"], [131, 4, 1, "", "state_spec"], [131, 4, 1, "", "state_spec_unbatched"], [131, 1, 1, "", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "step_mdp"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[138, 4, 1, "", "action_key"], [138, 4, 1, "", "action_keys"], [138, 4, 1, "", "action_spec"], [138, 4, 1, "", "action_spec_unbatched"], [138, 1, 1, "", "add_module"], [138, 1, 1, "", "add_truncated_keys"], [138, 1, 1, "", "all_actions"], [138, 1, 1, "", "append_transform"], [138, 1, 1, "", "apply"], [138, 1, 1, "", "auto_specs_"], [138, 4, 1, "", "batch_dims"], [138, 4, 1, "", "batch_locked"], [138, 4, 1, "", "batch_size"], [138, 1, 1, "", "bfloat16"], [138, 1, 1, "", "buffers"], [138, 1, 1, "", "cardinality"], [138, 1, 1, "", "check_env_specs"], [138, 1, 1, "", "children"], [138, 1, 1, "", "compile"], [138, 1, 1, "", "cpu"], [138, 1, 1, "", "cuda"], [138, 4, 1, "", "done_key"], [138, 4, 1, "", "done_keys"], [138, 4, 1, "", "done_keys_groups"], [138, 4, 1, "", "done_spec"], [138, 4, 1, "", "done_spec_unbatched"], [138, 1, 1, "", "double"], [138, 1, 1, "", "empty_cache"], [138, 1, 1, "", "eval"], [138, 1, 1, "", "extra_repr"], [138, 1, 1, "", "fake_tensordict"], [138, 1, 1, "", "float"], [138, 1, 1, "", "forward"], [138, 4, 1, "", "full_action_spec"], [138, 4, 1, "", "full_action_spec_unbatched"], [138, 4, 1, "", "full_done_spec"], [138, 4, 1, "", "full_done_spec_unbatched"], [138, 4, 1, "", "full_observation_spec_unbatched"], [138, 4, 1, "", "full_reward_spec"], [138, 4, 1, "", "full_reward_spec_unbatched"], [138, 4, 1, "", "full_state_spec"], [138, 4, 1, "", "full_state_spec_unbatched"], [138, 1, 1, "", "get_buffer"], [138, 1, 1, "", "get_extra_state"], [138, 1, 1, "", "get_parameter"], [138, 1, 1, "", "get_submodule"], [138, 1, 1, "", "half"], [138, 4, 1, "", "input_spec"], [138, 4, 1, "", "input_spec_unbatched"], [138, 1, 1, "", "ipu"], [138, 4, 1, "", "is_spec_locked"], [138, 1, 1, "", "load_state_dict"], [138, 1, 1, "", "make_tensordict"], [138, 1, 1, "", "maybe_reset"], [138, 1, 1, "", "modules"], [138, 1, 1, "", "mtia"], [138, 1, 1, "", "named_buffers"], [138, 1, 1, "", "named_children"], [138, 1, 1, "", "named_modules"], [138, 1, 1, "", "named_parameters"], [138, 4, 1, "", "observation_keys"], [138, 4, 1, "", "observation_spec"], [138, 4, 1, "", "observation_spec_unbatched"], [138, 4, 1, "", "output_spec"], [138, 4, 1, "", "output_spec_unbatched"], [138, 1, 1, "", "parameters"], [138, 1, 1, "", "rand_action"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "register_backward_hook"], [138, 1, 1, "", "register_buffer"], [138, 1, 1, "", "register_forward_hook"], [138, 1, 1, "", "register_forward_pre_hook"], [138, 1, 1, "", "register_full_backward_hook"], [138, 1, 1, "", "register_full_backward_pre_hook"], [138, 1, 1, "", "register_gym"], [138, 1, 1, "", "register_load_state_dict_post_hook"], [138, 1, 1, "", "register_load_state_dict_pre_hook"], [138, 1, 1, "", "register_module"], [138, 1, 1, "", "register_parameter"], [138, 1, 1, "", "register_state_dict_post_hook"], [138, 1, 1, "", "register_state_dict_pre_hook"], [138, 1, 1, "", "requires_grad_"], [138, 1, 1, "", "reset"], [138, 4, 1, "", "reset_keys"], [138, 4, 1, "", "reward_key"], [138, 4, 1, "", "reward_keys"], [138, 4, 1, "", "reward_spec"], [138, 4, 1, "", "reward_spec_unbatched"], [138, 1, 1, "", "rollout"], [138, 1, 1, "", "set_extra_state"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "set_spec_lock_"], [138, 1, 1, "", "set_submodule"], [138, 4, 1, "", "shape"], [138, 1, 1, "", "share_memory"], [138, 4, 1, "", "specs"], [138, 1, 1, "", "state_dict"], [138, 4, 1, "", "state_keys"], [138, 4, 1, "", "state_spec"], [138, 4, 1, "", "state_spec_unbatched"], [138, 1, 1, "", "step"], [138, 1, 1, "", "step_and_maybe_reset"], [138, 1, 1, "", "step_mdp"], [138, 1, 1, "", "to"], [138, 1, 1, "", "to_empty"], [138, 1, 1, "", "train"], [138, 1, 1, "", "type"], [138, 1, 1, "", "xpu"], [138, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[150, 4, 1, "", "action_key"], [150, 4, 1, "", "action_keys"], [150, 4, 1, "", "action_spec"], [150, 4, 1, "", "action_spec_unbatched"], [150, 1, 1, "", "add_module"], [150, 1, 1, "", "add_truncated_keys"], [150, 1, 1, "", "all_actions"], [150, 1, 1, "", "append_transform"], [150, 1, 1, "", "apply"], [150, 1, 1, "", "auto_specs_"], [150, 4, 1, "", "batch_dims"], [150, 4, 1, "", "batch_locked"], [150, 4, 1, "", "batch_size"], [150, 1, 1, "", "bfloat16"], [150, 1, 1, "", "buffers"], [150, 1, 1, "", "cardinality"], [150, 1, 1, "", "check_env_specs"], [150, 1, 1, "", "children"], [150, 1, 1, "", "compile"], [150, 1, 1, "", "cpu"], [150, 1, 1, "", "cuda"], [150, 4, 1, "", "done_key"], [150, 4, 1, "", "done_keys"], [150, 4, 1, "", "done_keys_groups"], [150, 4, 1, "", "done_spec"], [150, 4, 1, "", "done_spec_unbatched"], [150, 1, 1, "", "double"], [150, 1, 1, "", "empty_cache"], [150, 1, 1, "", "eval"], [150, 1, 1, "", "extra_repr"], [150, 1, 1, "", "fake_tensordict"], [150, 1, 1, "", "float"], [150, 1, 1, "", "forward"], [150, 4, 1, "", "full_action_spec"], [150, 4, 1, "", "full_action_spec_unbatched"], [150, 4, 1, "", "full_done_spec"], [150, 4, 1, "", "full_done_spec_unbatched"], [150, 4, 1, "", "full_observation_spec_unbatched"], [150, 4, 1, "", "full_reward_spec"], [150, 4, 1, "", "full_reward_spec_unbatched"], [150, 4, 1, "", "full_state_spec"], [150, 4, 1, "", "full_state_spec_unbatched"], [150, 1, 1, "", "get_buffer"], [150, 1, 1, "", "get_extra_state"], [150, 1, 1, "", "get_parameter"], [150, 1, 1, "", "get_submodule"], [150, 1, 1, "", "half"], [150, 4, 1, "", "input_spec"], [150, 4, 1, "", "input_spec_unbatched"], [150, 1, 1, "", "ipu"], [150, 4, 1, "", "is_spec_locked"], [150, 1, 1, "", "load_state_dict"], [150, 1, 1, "", "maybe_reset"], [150, 1, 1, "", "modules"], [150, 1, 1, "", "mtia"], [150, 1, 1, "", "named_buffers"], [150, 1, 1, "", "named_children"], [150, 1, 1, "", "named_modules"], [150, 1, 1, "", "named_parameters"], [150, 4, 1, "", "observation_keys"], [150, 4, 1, "", "observation_spec"], [150, 4, 1, "", "observation_spec_unbatched"], [150, 4, 1, "", "output_spec"], [150, 4, 1, "", "output_spec_unbatched"], [150, 1, 1, "", "parameters"], [150, 1, 1, "", "rand_action"], [150, 1, 1, "", "rand_step"], [150, 1, 1, "", "register_backward_hook"], [150, 1, 1, "", "register_buffer"], [150, 1, 1, "", "register_forward_hook"], [150, 1, 1, "", "register_forward_pre_hook"], [150, 1, 1, "", "register_full_backward_hook"], [150, 1, 1, "", "register_full_backward_pre_hook"], [150, 1, 1, "", "register_gym"], [150, 1, 1, "", "register_load_state_dict_post_hook"], [150, 1, 1, "", "register_load_state_dict_pre_hook"], [150, 1, 1, "", "register_module"], [150, 1, 1, "", "register_parameter"], [150, 1, 1, "", "register_state_dict_post_hook"], [150, 1, 1, "", "register_state_dict_pre_hook"], [150, 1, 1, "", "requires_grad_"], [150, 1, 1, "", "reset"], [150, 4, 1, "", "reset_keys"], [150, 4, 1, "", "reward_key"], [150, 4, 1, "", "reward_keys"], [150, 4, 1, "", "reward_spec"], [150, 4, 1, "", "reward_spec_unbatched"], [150, 1, 1, "", "rollout"], [150, 1, 1, "", "set_extra_state"], [150, 1, 1, "", "set_seed"], [150, 1, 1, "", "set_spec_lock_"], [150, 1, 1, "", "set_submodule"], [150, 4, 1, "", "shape"], [150, 1, 1, "", "share_memory"], [150, 4, 1, "", "specs"], [150, 1, 1, "", "state_dict"], [150, 4, 1, "", "state_keys"], [150, 4, 1, "", "state_spec"], [150, 4, 1, "", "state_spec_unbatched"], [150, 1, 1, "", "step"], [150, 1, 1, "", "step_and_maybe_reset"], [150, 1, 1, "", "step_mdp"], [150, 1, 1, "", "to"], [150, 1, 1, "", "to_empty"], [150, 1, 1, "", "train"], [150, 1, 1, "", "type"], [150, 1, 1, "", "update_kwargs"], [150, 1, 1, "", "xpu"], [150, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[151, 4, 1, "", "action_key"], [151, 4, 1, "", "action_keys"], [151, 4, 1, "", "action_spec"], [151, 4, 1, "", "action_spec_unbatched"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "all_actions"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 1, 1, "", "auto_specs_"], [151, 4, 1, "", "batch_dims"], [151, 4, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "cardinality"], [151, 1, 1, "", "check_env_specs"], [151, 1, 1, "", "children"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 4, 1, "", "done_key"], [151, 4, 1, "", "done_keys"], [151, 4, 1, "", "done_keys_groups"], [151, 4, 1, "", "done_spec"], [151, 4, 1, "", "done_spec_unbatched"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 4, 1, "", "full_action_spec"], [151, 4, 1, "", "full_action_spec_unbatched"], [151, 4, 1, "", "full_done_spec"], [151, 4, 1, "", "full_done_spec_unbatched"], [151, 4, 1, "", "full_observation_spec_unbatched"], [151, 4, 1, "", "full_reward_spec"], [151, 4, 1, "", "full_reward_spec_unbatched"], [151, 4, 1, "", "full_state_spec"], [151, 4, 1, "", "full_state_spec_unbatched"], [151, 1, 1, "", "gen_params"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 4, 1, "", "input_spec"], [151, 4, 1, "", "input_spec_unbatched"], [151, 1, 1, "", "ipu"], [151, 4, 1, "", "is_spec_locked"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 4, 1, "", "observation_keys"], [151, 4, 1, "", "observation_spec"], [151, 4, 1, "", "observation_spec_unbatched"], [151, 4, 1, "", "output_spec"], [151, 4, 1, "", "output_spec_unbatched"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 4, 1, "", "reset_keys"], [151, 4, 1, "", "reward_key"], [151, 4, 1, "", "reward_keys"], [151, 4, 1, "", "reward_spec"], [151, 4, 1, "", "reward_spec_unbatched"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_spec_lock_"], [151, 1, 1, "", "set_submodule"], [151, 4, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 4, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 4, 1, "", "state_keys"], [151, 4, 1, "", "state_spec"], [151, 4, 1, "", "state_spec_unbatched"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "step_mdp"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[157, 4, 1, "", "action_key"], [157, 4, 1, "", "action_keys"], [157, 4, 1, "", "action_spec"], [157, 4, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "all_actions"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "auto_specs_"], [157, 4, 1, "", "batch_dims"], [157, 4, 1, "", "batch_locked"], [157, 4, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 4, 1, "", "done_key"], [157, 4, 1, "", "done_keys"], [157, 4, 1, "", "done_keys_groups"], [157, 4, 1, "", "done_spec"], [157, 4, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 4, 1, "", "full_action_spec"], [157, 4, 1, "", "full_action_spec_unbatched"], [157, 4, 1, "", "full_done_spec"], [157, 4, 1, "", "full_done_spec_unbatched"], [157, 4, 1, "", "full_observation_spec_unbatched"], [157, 4, 1, "", "full_reward_spec"], [157, 4, 1, "", "full_reward_spec_unbatched"], [157, 4, 1, "", "full_state_spec"], [157, 4, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 4, 1, "", "input_spec"], [157, 4, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 4, 1, "", "is_spec_locked"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 4, 1, "", "observation_keys"], [157, 4, 1, "", "observation_spec"], [157, 4, 1, "", "observation_spec_unbatched"], [157, 4, 1, "", "output_spec"], [157, 4, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 4, 1, "", "reset_keys"], [157, 4, 1, "", "reward_key"], [157, 4, 1, "", "reward_keys"], [157, 4, 1, "", "reward_spec"], [157, 4, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_spec_lock_"], [157, 1, 1, "", "set_submodule"], [157, 4, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 4, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 4, 1, "", "state_keys"], [157, 4, 1, "", "state_spec"], [157, 4, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "update_kwargs"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[158, 4, 1, "", "action_key"], [158, 4, 1, "", "action_keys"], [158, 4, 1, "", "action_spec"], [158, 4, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "auto_specs_"], [158, 4, 1, "", "batch_dims"], [158, 4, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 4, 1, "", "done_key"], [158, 4, 1, "", "done_keys"], [158, 4, 1, "", "done_keys_groups"], [158, 4, 1, "", "done_spec"], [158, 4, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 4, 1, "", "full_action_spec"], [158, 4, 1, "", "full_action_spec_unbatched"], [158, 4, 1, "", "full_done_spec"], [158, 4, 1, "", "full_done_spec_unbatched"], [158, 4, 1, "", "full_observation_spec_unbatched"], [158, 4, 1, "", "full_reward_spec"], [158, 4, 1, "", "full_reward_spec_unbatched"], [158, 4, 1, "", "full_state_spec"], [158, 4, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 4, 1, "", "input_spec"], [158, 4, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 4, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 4, 1, "", "observation_keys"], [158, 4, 1, "", "observation_spec"], [158, 4, 1, "", "observation_spec_unbatched"], [158, 4, 1, "", "output_spec"], [158, 4, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 4, 1, "", "reset_keys"], [158, 4, 1, "", "reward_key"], [158, 4, 1, "", "reward_keys"], [158, 4, 1, "", "reward_spec"], [158, 4, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 4, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 4, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 4, 1, "", "state_keys"], [158, 4, 1, "", "state_spec"], [158, 4, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[165, 2, 1, "", "DreamerDecoder"], [166, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[169, 0, 1, "", "ActionDiscretizer"], [170, 0, 1, "", "ActionMask"], [171, 0, 1, "", "AutoResetEnv"], [172, 0, 1, "", "AutoResetTransform"], [173, 0, 1, "", "BatchSizeTransform"], [174, 0, 1, "", "BinarizeReward"], [175, 0, 1, "", "BurnInTransform"], [176, 0, 1, "", "CatFrames"], [177, 0, 1, "", "CatTensors"], [178, 0, 1, "", "CenterCrop"], [179, 0, 1, "", "ClipTransform"], [180, 0, 1, "", "Compose"], [181, 0, 1, "", "Crop"], [182, 0, 1, "", "DTypeCastTransform"], [183, 0, 1, "", "DeviceCastTransform"], [184, 0, 1, "", "DiscreteActionProjection"], [185, 0, 1, "", "DoubleToFloat"], [186, 0, 1, "", "EndOfLifeTransform"], [187, 0, 1, "", "ExcludeTransform"], [188, 0, 1, "", "FiniteTensorDictCheck"], [189, 0, 1, "", "FlattenObservation"], [190, 0, 1, "", "FrameSkipTransform"], [191, 0, 1, "", "GrayScale"], [192, 0, 1, "", "Hash"], [193, 0, 1, "", "InitTracker"], [194, 0, 1, "", "KLRewardTransform"], [195, 0, 1, "", "LineariseRewards"], [196, 0, 1, "", "NoopResetEnv"], [197, 0, 1, "", "ObservationNorm"], [198, 0, 1, "", "ObservationTransform"], [199, 0, 1, "", "PermuteTransform"], [200, 0, 1, "", "PinMemoryTransform"], [201, 0, 1, "", "R3MTransform"], [202, 0, 1, "", "RandomCropTensorDict"], [203, 0, 1, "", "RemoveEmptySpecs"], [204, 0, 1, "", "RenameTransform"], [205, 0, 1, "", "Resize"], [206, 0, 1, "", "Reward2GoTransform"], [207, 0, 1, "", "RewardClipping"], [208, 0, 1, "", "RewardScaling"], [209, 0, 1, "", "RewardSum"], [210, 0, 1, "", "SelectTransform"], [211, 0, 1, "", "SignTransform"], [212, 0, 1, "", "SqueezeTransform"], [213, 0, 1, "", "Stack"], [214, 0, 1, "", "StepCounter"], [215, 0, 1, "", "TargetReturn"], [216, 0, 1, "", "TensorDictPrimer"], [217, 0, 1, "", "TimeMaxPool"], [218, 0, 1, "", "ToTensorImage"], [219, 0, 1, "", "Tokenizer"], [220, 0, 1, "", "TrajCounter"], [221, 0, 1, "", "Transform"], [222, 0, 1, "", "TransformedEnv"], [223, 0, 1, "", "UnaryTransform"], [224, 0, 1, "", "UnsqueezeTransform"], [225, 0, 1, "", "VC1Transform"], [226, 0, 1, "", "VIPRewardTransform"], [227, 0, 1, "", "VIPTransform"], [228, 0, 1, "", "VecGymEnvTransform"], [229, 0, 1, "", "VecNorm"], [230, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[169, 0, 1, "", "SamplingStrategy"], [169, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[171, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_env_batch_size"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[175, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "make_rb_transform_and_sampler"], [176, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[178, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[179, 1, 1, "", "transform_observation_spec"], [179, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[180, 1, 1, "", "append"], [180, 1, 1, "", "forward"], [180, 1, 1, "", "insert"], [180, 1, 1, "", "to"], [180, 1, 1, "", "transform_action_spec"], [180, 1, 1, "", "transform_env_batch_size"], [180, 1, 1, "", "transform_env_device"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"], [180, 1, 1, "", "transform_output_spec"], [180, 1, 1, "", "transform_reward_spec"], [180, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.Crop": [[181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"], [182, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_action_spec"], [183, 1, 1, "", "transform_done_spec"], [183, 1, 1, "", "transform_env_device"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"], [183, 1, 1, "", "transform_reward_spec"], [183, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[184, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "register_keys"], [186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[188, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[190, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[192, 1, 1, "", "reproducible_hash"], [192, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[195, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ObservationNorm": [[197, 1, 1, "", "init_stats"], [197, 1, 1, "", "transform_action_spec"], [197, 1, 1, "", "transform_observation_spec"], [197, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[200, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[201, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[202, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "transform_input_spec"], [203, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[205, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[206, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[207, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[208, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_done_spec"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"], [213, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_observation_spec"], [214, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "to"], [216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[218, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[219, 1, 1, "", "transform_input_spec"], [219, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TrajCounter": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "load_state_dict"], [220, 1, 1, "", "state_dict"], [220, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[221, 4, 1, "", "container"], [221, 1, 1, "", "forward"], [221, 4, 1, "", "parent"], [221, 1, 1, "", "to"], [221, 1, 1, "", "transform_action_spec"], [221, 1, 1, "", "transform_done_spec"], [221, 1, 1, "", "transform_env_batch_size"], [221, 1, 1, "", "transform_env_device"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_observation_spec"], [221, 1, 1, "", "transform_output_spec"], [221, 1, 1, "", "transform_reward_spec"], [221, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[222, 1, 1, "", "add_truncated_keys"], [222, 1, 1, "", "append_transform"], [222, 4, 1, "", "batch_locked"], [222, 4, 1, "", "batch_size"], [222, 1, 1, "", "empty_cache"], [222, 1, 1, "", "eval"], [222, 4, 1, "", "input_spec"], [222, 1, 1, "", "insert_transform"], [222, 1, 1, "", "load_state_dict"], [222, 4, 1, "", "output_spec"], [222, 1, 1, "", "rand_action"], [222, 1, 1, "", "set_missing_tolerance"], [222, 1, 1, "", "set_seed"], [222, 1, 1, "", "state_dict"], [222, 1, 1, "", "to"], [222, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[223, 1, 1, "", "transform_action_spec"], [223, 1, 1, "", "transform_done_spec"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_output_spec"], [223, 1, 1, "", "transform_reward_spec"], [223, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[224, 1, 1, "", "transform_action_spec"], [224, 1, 1, "", "transform_observation_spec"], [224, 1, 1, "", "transform_reward_spec"], [224, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_noload_model"], [225, 1, 1, "", "to"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[227, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[229, 1, 1, "", "build_td_for_shared_vecnorm"], [229, 1, 1, "", "forward"], [229, 1, 1, "", "freeze"], [229, 1, 1, "", "frozen_copy"], [229, 1, 1, "", "get_extra_state"], [229, 4, 1, "", "loc"], [229, 4, 1, "", "scale"], [229, 1, 1, "", "set_extra_state"], [229, 4, 1, "", "standard_normal"], [229, 1, 1, "", "to_observation_norm"], [229, 1, 1, "", "transform_observation_spec"], [229, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[231, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[231, 1, 1, "", "add_module"], [231, 1, 1, "", "apply"], [231, 1, 1, "", "bfloat16"], [231, 1, 1, "", "buffers"], [231, 1, 1, "", "children"], [231, 1, 1, "", "compile"], [231, 4, 1, "", "container"], [231, 1, 1, "", "cpu"], [231, 1, 1, "", "cuda"], [231, 1, 1, "", "double"], [231, 1, 1, "", "eval"], [231, 1, 1, "", "extra_repr"], [231, 1, 1, "", "float"], [231, 1, 1, "", "forward"], [231, 1, 1, "", "get_buffer"], [231, 1, 1, "", "get_extra_state"], [231, 1, 1, "", "get_parameter"], [231, 1, 1, "", "get_submodule"], [231, 1, 1, "", "half"], [231, 1, 1, "", "ipu"], [231, 1, 1, "", "load_state_dict"], [231, 1, 1, "", "modules"], [231, 1, 1, "", "mtia"], [231, 4, 1, "", "n_steps"], [231, 1, 1, "", "named_buffers"], [231, 1, 1, "", "named_children"], [231, 1, 1, "", "named_modules"], [231, 1, 1, "", "named_parameters"], [231, 1, 1, "", "parameters"], [231, 4, 1, "", "parent"], [231, 1, 1, "", "register_backward_hook"], [231, 1, 1, "", "register_buffer"], [231, 1, 1, "", "register_forward_hook"], [231, 1, 1, "", "register_forward_pre_hook"], [231, 1, 1, "", "register_full_backward_hook"], [231, 1, 1, "", "register_full_backward_pre_hook"], [231, 1, 1, "", "register_load_state_dict_post_hook"], [231, 1, 1, "", "register_load_state_dict_pre_hook"], [231, 1, 1, "", "register_module"], [231, 1, 1, "", "register_parameter"], [231, 1, 1, "", "register_state_dict_post_hook"], [231, 1, 1, "", "register_state_dict_pre_hook"], [231, 1, 1, "", "requires_grad_"], [231, 1, 1, "", "set_extra_state"], [231, 1, 1, "", "set_submodule"], [231, 1, 1, "", "share_memory"], [231, 1, 1, "", "state_dict"], [231, 1, 1, "", "to"], [231, 1, 1, "", "to_empty"], [231, 1, 1, "", "train"], [231, 1, 1, "", "transform_action_spec"], [231, 1, 1, "", "transform_done_spec"], [231, 1, 1, "", "transform_env_batch_size"], [231, 1, 1, "", "transform_env_device"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"], [231, 1, 1, "", "transform_reward_spec"], [231, 1, 1, "", "transform_state_spec"], [231, 1, 1, "", "type"], [231, 1, 1, "", "xpu"], [231, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[232, 2, 1, "", "RandomPolicy"], [233, 2, 1, "", "check_env_specs"], [234, 2, 1, "", "exploration_type"], [235, 2, 1, "", "get_available_libraries"], [236, 2, 1, "", "make_composite_from_td"], [237, 2, 1, "", "set_exploration_type"], [238, 2, 1, "", "step_mdp"], [239, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[240, 0, 1, "", "AdditiveGaussianModule"], [241, 0, 1, "", "BatchRenorm1d"], [242, 0, 1, "", "CEMPlanner"], [243, 0, 1, "", "ConsistentDropout"], [244, 0, 1, "", "ConsistentDropoutModule"], [245, 0, 1, "", "Conv3dNet"], [246, 0, 1, "", "ConvNet"], [247, 0, 1, "", "DTActor"], [248, 0, 1, "", "DdpgCnnActor"], [249, 0, 1, "", "DdpgCnnQNet"], [250, 0, 1, "", "DdpgMlpActor"], [251, 0, 1, "", "DdpgMlpQNet"], [252, 0, 1, "", "DecisionTransformer"], [253, 0, 1, "", "Delta"], [254, 0, 1, "", "DistributionalDQNnet"], [255, 0, 1, "", "DistributionalQValueHook"], [256, 0, 1, "", "DreamerActor"], [257, 0, 1, "", "DuelingCnnDQNet"], [258, 0, 1, "", "EGreedyModule"], [259, 0, 1, "", "GRU"], [260, 0, 1, "", "GRUCell"], [261, 0, 1, "", "GRUModule"], [262, 0, 1, "", "IndependentNormal"], [263, 0, 1, "", "LSTM"], [264, 0, 1, "", "LSTMCell"], [265, 0, 1, "", "LSTMModule"], [266, 0, 1, "", "MLP"], [267, 0, 1, "", "MPCPlannerBase"], [268, 0, 1, "", "MPPIPlanner"], [269, 0, 1, "", "MaskedCategorical"], [270, 0, 1, "", "MaskedOneHotCategorical"], [271, 0, 1, "", "MultiAgentConvNet"], [272, 0, 1, "", "MultiAgentMLP"], [273, 0, 1, "", "MultiAgentNetBase"], [274, 0, 1, "", "NoisyLazyLinear"], [275, 0, 1, "", "NoisyLinear"], [276, 0, 1, "", "ObsDecoder"], [277, 0, 1, "", "ObsEncoder"], [278, 0, 1, "", "OneHotCategorical"], [279, 0, 1, "", "OneHotOrdinal"], [280, 0, 1, "", "OnlineDTActor"], [281, 0, 1, "", "Ordinal"], [282, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [283, 0, 1, "", "QMixer"], [284, 0, 1, "", "QValueHook"], [285, 0, 1, "", "RSSMPosterior"], [286, 0, 1, "", "RSSMPrior"], [287, 0, 1, "", "Squeeze2dLayer"], [288, 0, 1, "", "SqueezeLayer"], [289, 0, 1, "", "TanhDelta"], [290, 0, 1, "", "TanhNormal"], [291, 0, 1, "", "TruncatedNormal"], [292, 0, 1, "", "VDNMixer"], [293, 0, 1, "", "VmapModule"], [294, 0, 1, "", "recurrent_mode"], [295, 0, 1, "", "reset_noise"], [296, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[241, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[242, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[243, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[245, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[246, 1, 1, "", "default_atari_dqn"], [246, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[247, 1, 1, "", "default_config"], [247, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[248, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[249, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[250, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[251, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[252, 0, 1, "", "DTConfig"], [252, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[253, 1, 1, "", "expand"], [253, 1, 1, "", "log_prob"], [253, 4, 1, "", "mean"], [253, 4, 1, "", "mode"], [253, 1, 1, "", "rsample"], [253, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[254, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[256, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[257, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "step"]], "torchrl.modules.GRU": [[259, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[260, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_cudnn_based"], [261, 1, 1, "", "make_python_based"], [261, 1, 1, "id0", "make_tensordict_primer"], [261, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[262, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[263, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[264, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_cudnn_based"], [265, 1, 1, "", "make_python_based"], [265, 1, 1, "id0", "make_tensordict_primer"], [265, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[266, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[268, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[269, 1, 1, "", "log_prob"], [269, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[270, 1, 1, "", "log_prob"], [270, 4, 1, "", "mode"], [270, 1, 1, "", "rsample"], [270, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "from_stateful_net"], [273, 1, 1, "", "get_stateful_net"], [273, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[274, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[276, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[277, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[278, 1, 1, "", "entropy"], [278, 1, 1, "", "log_prob"], [278, 4, 1, "", "mode"], [278, 1, 1, "", "rsample"], [278, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[280, 1, 1, "", "default_config"], [280, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[283, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[285, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[286, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[288, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[289, 4, 1, "", "mean"], [289, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[290, 1, 1, "", "get_mode"], [290, 4, 1, "", "mean"], [290, 4, 1, "", "mode"], [290, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[291, 1, 1, "", "log_prob"], [291, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[292, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[293, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[297, 0, 1, "", "Actor"], [298, 0, 1, "", "ActorCriticOperator"], [299, 0, 1, "", "ActorCriticWrapper"], [300, 0, 1, "", "ActorValueOperator"], [301, 0, 1, "", "DecisionTransformerInferenceWrapper"], [302, 0, 1, "", "DistributionalQValueActor"], [303, 0, 1, "", "DistributionalQValueModule"], [304, 0, 1, "", "LMHeadActorValueOperator"], [305, 0, 1, "", "MultiStepActorWrapper"], [306, 0, 1, "", "ProbabilisticActor"], [307, 0, 1, "", "QValueActor"], [308, 0, 1, "", "QValueModule"], [309, 0, 1, "", "SafeModule"], [310, 0, 1, "", "SafeProbabilisticModule"], [311, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [312, 0, 1, "", "SafeSequential"], [313, 0, 1, "", "TanhModule"], [314, 0, 1, "", "ValueOperator"], [315, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[298, 1, 1, "", "get_critic_operator"], [298, 1, 1, "", "get_policy_head"], [298, 1, 1, "", "get_value_head"], [298, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[299, 1, 1, "", "get_policy_head"], [299, 1, 1, "", "get_policy_operator"], [299, 1, 1, "", "get_value_head"], [299, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[300, 1, 1, "", "get_policy_head"], [300, 1, 1, "", "get_policy_operator"], [300, 1, 1, "", "get_value_head"], [300, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "mask_context"], [301, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[303, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[305, 1, 1, "", "forward"], [305, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[308, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[309, 1, 1, "", "random"], [309, 1, 1, "", "random_sample"], [309, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[310, 1, 1, "", "random"], [310, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[313, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[315, 1, 1, "", "get_reward_operator"], [315, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[316, 0, 1, "", "biased_softplus"], [317, 0, 1, "", "get_primers_from_module"], [318, 0, 1, "", "inv_softplus"], [319, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[316, 1, 1, "", "forward"]], "torchrl.objectives": [[320, 0, 1, "", "A2CLoss"], [321, 0, 1, "", "CQLLoss"], [322, 0, 1, "", "ClipPPOLoss"], [323, 0, 1, "", "CrossQLoss"], [324, 0, 1, "", "DDPGLoss"], [325, 0, 1, "", "DQNLoss"], [326, 0, 1, "", "DTLoss"], [327, 0, 1, "", "DiscreteCQLLoss"], [328, 0, 1, "", "DiscreteIQLLoss"], [329, 0, 1, "", "DiscreteSACLoss"], [330, 0, 1, "", "DistributionalDQNLoss"], [331, 0, 1, "", "DreamerActorLoss"], [332, 0, 1, "", "DreamerModelLoss"], [333, 0, 1, "", "DreamerValueLoss"], [334, 0, 1, "", "GAILLoss"], [335, 0, 1, "", "HardUpdate"], [336, 0, 1, "", "IQLLoss"], [337, 0, 1, "", "KLPENPPOLoss"], [338, 0, 1, "", "LossModule"], [339, 0, 1, "", "OnlineDTLoss"], [340, 0, 1, "", "PPOLoss"], [341, 0, 1, "", "REDQLoss"], [342, 0, 1, "", "ReinforceLoss"], [343, 0, 1, "", "SACLoss"], [344, 0, 1, "", "SoftUpdate"], [345, 0, 1, "", "TD3BCLoss"], [346, 0, 1, "", "TD3Loss"], [347, 0, 1, "", "ValueEstimators"], [348, 0, 1, "", "default_value_kwargs"], [349, 0, 1, "", "distance_loss"], [350, 0, 1, "", "group_optimizers"], [351, 0, 1, "", "hold_out_net"], [352, 0, 1, "", "hold_out_params"], [354, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[320, 3, 1, "", "default_keys"], [320, 1, 1, "", "forward"], [320, 4, 1, "", "functional"], [320, 1, 1, "", "loss_critic"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[321, 3, 1, "", "default_keys"], [321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[322, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[323, 1, 1, "", "actor_loss"], [323, 1, 1, "", "alpha_loss"], [323, 3, 1, "", "default_keys"], [323, 1, 1, "", "forward"], [323, 1, 1, "", "load_state_dict"], [323, 1, 1, "", "make_value_estimator"], [323, 1, 1, "", "maybe_init_target_entropy"], [323, 1, 1, "", "qvalue_loss"], [323, 1, 1, "", "set_keys"], [323, 1, 1, "", "state_dict"], [323, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[324, 3, 1, "", "default_keys"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[325, 3, 1, "", "default_keys"], [325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[326, 3, 1, "", "default_keys"], [326, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[327, 3, 1, "", "default_keys"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[328, 3, 1, "", "default_keys"], [328, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[329, 3, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[330, 3, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[331, 3, 1, "", "default_keys"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[332, 3, 1, "", "default_keys"], [332, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[333, 3, 1, "", "default_keys"], [333, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[334, 3, 1, "", "default_keys"], [334, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[336, 3, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "loss_value_diff"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[337, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[338, 1, 1, "", "convert_to_functional"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "from_stateful_net"], [338, 4, 1, "", "functional"], [338, 1, 1, "", "get_stateful_net"], [338, 1, 1, "", "make_value_estimator"], [338, 1, 1, "", "named_parameters"], [338, 1, 1, "", "parameters"], [338, 1, 1, "", "reset_parameters_recursive"], [338, 1, 1, "", "set_keys"], [338, 4, 1, "", "value_estimator"], [338, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[339, 3, 1, "", "default_keys"], [339, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[340, 3, 1, "", "default_keys"], [340, 1, 1, "", "forward"], [340, 4, 1, "", "functional"], [340, 1, 1, "", "loss_critic"], [340, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[341, 3, 1, "", "default_keys"], [341, 1, 1, "", "forward"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[342, 3, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 4, 1, "", "functional"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[343, 3, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 1, 1, "", "load_state_dict"], [343, 1, 1, "", "make_value_estimator"], [343, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[345, 1, 1, "", "actor_loss"], [345, 3, 1, "", "default_keys"], [345, 1, 1, "", "forward"], [345, 1, 1, "", "make_value_estimator"], [345, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[346, 3, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[353, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[353, 3, 1, "", "default_keys"], [353, 1, 1, "", "forward"], [353, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[355, 0, 1, "", "GAE"], [356, 0, 1, "", "TD0Estimator"], [357, 0, 1, "", "TD1Estimator"], [358, 0, 1, "", "TDLambdaEstimator"], [359, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[355, 1, 1, "", "forward"], [355, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[356, 1, 1, "", "forward"], [356, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[357, 1, 1, "", "forward"], [357, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[358, 1, 1, "", "forward"], [358, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[359, 3, 1, "", "default_keys"], [359, 1, 1, "", "forward"], [359, 1, 1, "", "set_keys"], [359, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[360, 0, 1, "", "generalized_advantage_estimate"], [361, 0, 1, "", "reward2go"], [362, 0, 1, "", "td0_advantage_estimate"], [363, 0, 1, "", "td0_return_estimate"], [364, 0, 1, "", "td1_advantage_estimate"], [365, 0, 1, "", "td1_return_estimate"], [366, 0, 1, "", "td_lambda_advantage_estimate"], [367, 0, 1, "", "td_lambda_return_estimate"], [368, 0, 1, "", "vec_generalized_advantage_estimate"], [369, 0, 1, "", "vec_td1_advantage_estimate"], [370, 0, 1, "", "vec_td1_return_estimate"], [371, 0, 1, "", "vec_td_lambda_advantage_estimate"], [372, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[373, 2, 1, "", "PixelRenderTransform"], [374, 2, 1, "", "TensorDictRecorder"], [375, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[376, 2, 1, "", "Logger"], [378, 2, 1, "", "generate_exp_name"], [379, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[377, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[380, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[381, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[382, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[383, 0, 1, "", "BatchSubSampler"], [384, 0, 1, "", "ClearCudaCache"], [385, 0, 1, "", "CountFramesLog"], [386, 0, 1, "", "LogScalar"], [387, 0, 1, "", "LogValidationReward"], [388, 0, 1, "", "OptimizerHook"], [389, 0, 1, "", "ReplayBufferTrainer"], [390, 0, 1, "", "RewardNormalizer"], [391, 0, 1, "", "SelectKeys"], [392, 0, 1, "", "Trainer"], [393, 0, 1, "", "TrainerHookBase"], [394, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[383, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[384, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[385, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[386, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[387, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[388, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[389, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[390, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[391, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[392, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[393, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[394, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[395, 2, 1, "", "correct_for_frame_skip"], [396, 2, 1, "", "get_stats_random_rollout"], [397, 2, 1, "", "make_collector_offpolicy"], [398, 2, 1, "", "make_collector_onpolicy"], [399, 2, 1, "", "make_dqn_loss"], [400, 2, 1, "", "make_replay_buffer"], [401, 2, 1, "", "make_target_updater"], [402, 2, 1, "", "make_trainer"], [403, 2, 1, "", "parallel_env_constructor"], [404, 2, 1, "", "sync_async_collector"], [405, 2, 1, "", "sync_sync_collector"], [406, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 410, 411, 412, 413, 415, 416, 417, 419, 421, 428, 429, 430, 434, 435], "instal": [0, 6, 7, 434], "get": [0, 420, 421, 422, 423, 424, 425], "start": [0, 420, 421, 422, 423, 424, 425], "tutori": [0, 417, 428, 429], "basic": [0, 432], "intermedi": [0, 8], "advanc": 0, "refer": [0, 408], "knowledg": [0, 409], "base": [0, 2, 7, 409, 419], "indic": 0, "tabl": 0, "collector": [1, 415, 416, 417, 418, 423, 425, 428, 429, 434], "packag": [1, 2, 3, 410, 411, 412, 413], "batch": [1, 3, 415, 430, 432], "size": [1, 3, 415, 432], "polici": [1, 2, 4, 411, 415, 417, 418, 419, 421, 425, 427, 428, 429, 430], "copi": 1, "replai": [1, 2, 415, 416, 417, 418, 423, 425, 428, 429, 432, 434], "buffer": [1, 2, 415, 416, 417, 418, 423, 425, 428, 429, 432, 434], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 415, 416, 417, 423, 425, 428, 429, 434], "distribut": [1, 410], "helper": [1, 3], "function": [1, 4, 411, 416, 417, 422, 428, 429, 434], "compos": [2, 180], "support": 2, "type": 2, "choos": 2, "storag": [2, 112, 415, 423, 432], "sampl": [2, 432], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 416, 432], "trajectori": [2, 432], "checkpoint": [2, 412], "episod": [2, 4], "format": 2, "ted": [2, 420], "The": [2, 415], "rational": 2, "behind": 2, "structur": [2, 432], "A": [2, 416, 432], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 410, 432, 434], "special": [2, 421, 434], "case": 2, "footnot": 2, "multi": [2, 3, 410, 411, 427, 428, 429], "agent": [2, 3, 4, 410, 411, 428, 429], "present": 2, "rnn": 2, "transform": [2, 3, 221, 415, 417, 420, 428, 429, 430, 432, 434, 435], "step": [2, 415, 417, 420, 423, 428, 429, 432, 435], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 71], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": [2, 73], "forest": 2, "tensordictmap": [2, 66], "mctsforest": [2, 41], "reinforc": [2, 411, 417, 428, 429], "learn": [2, 4, 410, 417, 428, 429], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 410, 411, 412, 428], "env": [3, 430, 434, 435], "spec": [3, 430, 435], "lock": 3, "method": [3, 415], "vector": [3, 434], "custom": [3, 11, 430, 432], "nativ": 3, "environ": [3, 4, 6, 7, 415, 416, 417, 418, 420, 425, 427, 428, 429, 430, 434, 435], "auto": 3, "reset": [3, 430, 435], "dynam": [3, 4, 432], "forward": [3, 4, 415], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 432], "expos": 3, "outsid": 3, "world": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 411, 418, 430], "record": [3, 412, 415, 424], "video": [3, 11, 424], "domain": [3, 410], "specif": [3, 410, 427], "librari": [3, 434], "thing": [4, 415, 430], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 420, 422, 434], "gener": [4, 11, 410], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 415, 419, 425, 430], "algorithm": [4, 410], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 415, 416, 422, 425], "return": [4, 411], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 434], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 427], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 415, 416, 417], "standard": 4, "explor": [4, 410, 415, 416, 421], "valu": [4, 410, 411, 415, 417, 418, 421], "loss": [4, 415, 416, 417, 418, 425, 428, 429], "earli": 4, "train": [4, 8, 411, 415, 417, 418, 419, 422, 425, 428, 429, 430], "roughli": 4, "uniformli": 4, "random": [4, 411, 428, 429], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 416], "increas": 4, "an": [4, 417, 418, 420, 430], "can": 4, "low": 4, "model": [4, 410, 415, 416, 418, 419, 422, 431, 434], "also": 4, "us": [4, 6, 9, 411, 418, 431, 432, 434], "offlin": 4, "observ": [4, 415], "space": 4, "effect": [4, 430], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 419], "gym": [5, 434, 435], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 415], "render": [7, 11, 425, 428, 429, 435], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 415], "pytorch": [8, 9, 10, 419], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 430], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 416, 432], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 419], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 42, "multidiscretetensorspec": 43, "multionehot": 44, "multionehotdiscretetensorspec": 45, "multistep": 46, "nested2t": 47, "nontensor": 48, "nontensorspec": 49, "onehot": 50, "onehotdiscretetensorspec": 51, "pairwisedataset": 52, "prioritizedreplaybuff": 53, "promptdata": 54, "prompttensordicttoken": 55, "querymodul": 56, "randomprojectionhash": 57, "replaybuff": 58, "rewarddata": 59, "rolloutfrommodel": 60, "siphash": 61, "stack": [62, 213], "stackedcomposit": 63, "ted2flat": 64, "ted2nest": 65, "tensordictprioritizedreplaybuff": 67, "tensordictreplaybuff": 68, "tensordicttoken": 69, "tensormap": 70, "tokenizeddatasetload": 72, "unbound": 74, "unboundedcontinu": 75, "unboundedcontinuoustensorspec": 76, "unboundeddiscret": 77, "unboundeddiscretetensorspec": 78, "check_no_exclusive_kei": 79, "consolidate_spec": 80, "contains_lazy_spec": 81, "create_infinite_iter": 82, "ataridqnexperiencereplai": 83, "basedatasetexperiencereplai": 84, "d4rlexperiencereplai": 85, "gendgrlexperiencereplai": 86, "minariexperiencereplai": 87, "openmlexperiencereplai": 88, "openxexperiencereplai": 89, "robosetexperiencereplai": 90, "vd4rlexperiencereplai": 91, "get_dataload": 92, "flatstoragecheckpoint": 93, "h5storagecheckpoint": 94, "immutabledatasetwrit": 95, "lazymemmapstorag": 96, "lazystackstorag": 97, "lazytensorstorag": 98, "liststorag": 99, "liststoragecheckpoint": 100, "nestedstoragecheckpoint": 101, "prioritizedsampl": 102, "prioritizedslicesampl": 103, "randomsampl": 104, "replaybufferensembl": 105, "roundrobinwrit": 106, "sampler": 107, "samplerensembl": 108, "samplerwithoutreplac": 109, "slicesampl": 110, "slicesamplerwithoutreplac": 111, "storagecheckpointerbas": 113, "storageensembl": 114, "storageensemblecheckpoint": 115, "tensordictmaxvaluewrit": 116, "tensordictroundrobinwrit": 117, "tensorstorag": 118, "tensorstoragecheckpoint": 119, "writer": 120, "writerensembl": 121, "braxenv": 122, "braxwrapp": 123, "chessenv": 124, "dmcontrolenv": 125, "dmcontrolwrapp": 126, "envbas": [127, 430], "envcreat": 128, "envmetadata": 129, "gymenv": 130, "gymlikeenv": 131, "gymwrapp": 132, "habitatenv": 133, "isaacgymenv": 134, "isaacgymwrapp": 135, "jumanjienv": 136, "jumanjiwrapp": 137, "llmhashingenv": 138, "mogymenv": 139, "mogymwrapp": 140, "marlgroupmaptyp": 141, "meltingpotenv": 142, "meltingpotwrapp": 143, "modelbasedenvbas": 144, "multithreadedenv": 145, "multithreadedenvwrapp": 146, "openmlenv": 147, "openspielenv": 148, "openspielwrapp": 149, "parallelenv": 150, "pendulumenv": 151, "pettingzooenv": 152, "pettingzoowrapp": 153, "robohiveenv": 154, "smacv2env": 155, "smacv2wrapp": 156, "serialenv": 157, "tictactoeenv": 158, "unitymlagentsenv": 159, "unitymlagentswrapp": 160, "vmasenv": 161, "vmaswrapp": 162, "check_marl_group": 163, "gym_backend": 164, "dreamerdecod": 165, "dreamerenv": 166, "register_gym_spec_convers": 167, "set_gym_backend": 168, "actiondiscret": 169, "actionmask": 170, "autoresetenv": 171, "autoresettransform": 172, "batchsizetransform": 173, "binarizereward": 174, "burnintransform": 175, "catfram": [176, 432], "cattensor": 177, "centercrop": 178, "cliptransform": 179, "crop": 181, "dtypecasttransform": 182, "devicecasttransform": 183, "discreteactionproject": 184, "doubletofloat": 185, "endoflifetransform": 186, "excludetransform": 187, "finitetensordictcheck": 188, "flattenobserv": 189, "frameskiptransform": 190, "grayscal": 191, "hash": 192, "inittrack": 193, "klrewardtransform": 194, "linearisereward": 195, "noopresetenv": 196, "observationnorm": 197, "observationtransform": 198, "permutetransform": 199, "pinmemorytransform": 200, "r3mtransform": 201, "randomcroptensordict": 202, "removeemptyspec": 203, "renametransform": 204, "resiz": 205, "reward2gotransform": 206, "rewardclip": 207, "rewardsc": 208, "rewardsum": 209, "selecttransform": 210, "signtransform": 211, "squeezetransform": 212, "stepcount": 214, "targetreturn": 215, "tensordictprim": 216, "timemaxpool": 217, "totensorimag": 218, "token": 219, "trajcount": 220, "transformedenv": 222, "unarytransform": 223, "unsqueezetransform": 224, "vc1transform": 225, "viprewardtransform": 226, "viptransform": 227, "vecgymenvtransform": 228, "vecnorm": [229, 435], "gsdenois": 230, "multisteptransform": 231, "randompolici": 232, "check_env_spec": 233, "exploration_typ": 234, "get_available_librari": 235, "make_composite_from_td": 236, "set_exploration_typ": 237, "step_mdp": 238, "terminated_or_trunc": 239, "additivegaussianmodul": 240, "batchrenorm1d": 241, "cemplann": 242, "consistentdropout": 243, "consistentdropoutmodul": 244, "conv3dnet": 245, "convnet": 246, "dtactor": 247, "ddpgcnnactor": 248, "ddpgcnnqnet": 249, "ddpgmlpactor": 250, "ddpgmlpqnet": 251, "decisiontransform": 252, "delta": 253, "distributionaldqnnet": 254, "distributionalqvaluehook": 255, "dreameractor": 256, "duelingcnndqnet": 257, "egreedymodul": 258, "gru": 259, "grucel": 260, "grumodul": 261, "independentnorm": 262, "lstm": [263, 418], "lstmcell": 264, "lstmmodul": 265, "mlp": [266, 418], "mpcplannerbas": 267, "mppiplann": 268, "maskedcategor": 269, "maskedonehotcategor": 270, "multiagentconvnet": 271, "multiagentmlp": 272, "multiagentnetbas": 273, "noisylazylinear": 274, "noisylinear": 275, "obsdecod": 276, "obsencod": 277, "onehotcategor": 278, "onehotordin": 279, "onlinedtactor": 280, "ordin": 281, "ornsteinuhlenbeckprocessmodul": 282, "qmixer": [283, 411], "qvaluehook": 284, "rssmposterior": 285, "rssmprior": 286, "squeeze2dlay": 287, "squeezelay": 288, "tanhdelta": 289, "tanhnorm": 290, "truncatednorm": 291, "vdnmixer": 292, "vmapmodul": 293, "recurrent_mod": 294, "reset_nois": 295, "set_recurrent_mod": 296, "actor": [297, 410, 415, 421], "actorcriticoper": 298, "actorcriticwrapp": 299, "actorvalueoper": 300, "decisiontransformerinferencewrapp": 301, "distributionalqvalueactor": 302, "distributionalqvaluemodul": 303, "lmheadactorvalueoper": 304, "multistepactorwrapp": 305, "probabilisticactor": 306, "qvalueactor": [307, 410], "qvaluemodul": 308, "safemodul": [309, 410], "safeprobabilisticmodul": 310, "safeprobabilistictensordictsequenti": 311, "safesequenti": 312, "tanhmodul": 313, "valueoper": 314, "worldmodelwrapp": 315, "biased_softplu": 316, "get_primers_from_modul": 317, "inv_softplu": 318, "map": [319, 428], "a2closs": 320, "cqlloss": 321, "clipppoloss": 322, "crossqloss": 323, "ddpgloss": 324, "dqnloss": 325, "dtloss": 326, "discretecqlloss": 327, "discreteiqlloss": 328, "discretesacloss": 329, "distributionaldqnloss": 330, "dreameractorloss": 331, "dreamermodelloss": 332, "dreamervalueloss": 333, "gailloss": 334, "hardupd": 335, "iqlloss": 336, "klpenppoloss": 337, "lossmodul": [338, 415, 422], "onlinedtloss": 339, "ppoloss": 340, "redqloss": 341, "reinforceloss": 342, "sacloss": 343, "softupd": 344, "td3bcloss": 345, "td3loss": 346, "valueestim": 347, "default_value_kwarg": 348, "distance_loss": 349, "group_optim": 350, "hold_out_net": 351, "hold_out_param": 352, "qmixerloss": 353, "next_state_valu": 354, "gae": 355, "td0estim": 356, "td1estim": 357, "tdlambdaestim": 358, "valueestimatorbas": 359, "generalized_advantage_estim": 360, "reward2go": 361, "td0_advantage_estim": 362, "td0_return_estim": 363, "td1_advantage_estim": 364, "td1_return_estim": 365, "td_lambda_advantage_estim": 366, "td_lambda_return_estim": 367, "vec_generalized_advantage_estim": 368, "vec_td1_advantage_estim": 369, "vec_td1_return_estim": 370, "vec_td_lambda_advantage_estim": 371, "vec_td_lambda_return_estim": 372, "pixelrendertransform": 373, "tensordictrecord": 374, "videorecord": 375, "logger": [376, 412, 424, 425], "csvlogger": 377, "generate_exp_nam": 378, "get_logg": 379, "mlflowlogg": 380, "tensorboardlogg": 381, "wandblogg": 382, "batchsubsampl": 383, "clearcudacach": 384, "countframeslog": 385, "logscalar": 386, "logvalidationreward": 387, "optimizerhook": 388, "replaybuffertrain": 389, "rewardnorm": 390, "selectkei": 391, "trainer": [392, 412, 416], "trainerhookbas": 393, "updateweight": 394, "correct_for_frame_skip": 395, "get_stats_random_rollout": 396, "make_collector_offpolici": 397, "make_collector_onpolici": 398, "make_dqn_loss": 399, "make_replay_buff": 400, "make_target_updat": 401, "make_train": 402, "parallel_env_constructor": 403, "sync_async_collector": 404, "sync_sync_collector": 405, "transformed_env_constructor": 406, "readm": [407, 426], "tuto": [407, 426], "api": 408, "contribut": [409, 434], "content": 409, "modul": [410, 415, 418, 419, 421, 425, 434], "tensordictmodul": [410, 419, 421, 434], "wrapper": [410, 421], "probabilist": [410, 421], "q": [410, 416, 418, 421], "oper": 410, "join": 410, "hook": [410, 412, 416], "regular": 410, "planner": 410, "object": [411, 415, 422, 434], "torch": 411, "vmap": [411, 434], "dqn": [411, 416, 418], "ddpg": [411, 415, 428], "sac": 411, "redq": 411, "crossq": 411, "iql": 411, "cql": 411, "gail": 411, "dt": 411, "td3": 411, "bc": 411, "ppo": [411, 417, 429], "head": 411, "a2c": 411, "dreamer": 411, "builder": 412, "_util": 413, "comput": [414, 416, 430, 433], "time": [414, 415, 433], "code": [415, 430], "overview": [415, 418], "setup": [415, 418], "__init__": 415, "estim": 415, "put": 415, "togeth": [415, 430], "call": 415, "parallel": [415, 427, 435], "execut": [415, 427, 430], "stat": 415, "build": [415, 416, 425, 432], "evalu": 415, "construct": 415, "target": [415, 416, 422], "network": [415, 416, 417, 418, 421, 428, 429], "updat": 415, "experi": [415, 430], "result": [415, 417, 428, 429], "conclus": [415, 416, 417, 418, 419, 428, 429, 430, 432], "next": [415, 417, 420, 423, 428, 429, 432], "deep": 416, "collect": [416, 417, 423], "paramet": [416, 417, 422], "hyperparamet": [416, 417, 428, 429], "regist": 416, "possibl": 416, "improv": 416, "defin": [417, 428, 429], "loop": [417, 418, 419, 425, 428, 429, 430], "recurr": [418, 419], "convolut": 418, "select": 418, "further": [418, 422], "read": 418, "export": 419, "introduct": [419, 434], "fast": 419, "recap": 419, "simpl": [419, 430], "stochast": 419, "aotinductor": 419, "free": 419, "c": 419, "onnx": 419, "run": [419, 420, 435], "rollout": [419, 420, 427, 428, 429, 430, 435], "creat": 420, "s": [421, 422], "output": 422, "consider": 422, "log": 424, "own": 425, "first": 425, "design": 425, "divers": 427, "competit": 428, "group": 428, "critic": [428, 429], "pendulum": 430, "write": 430, "_step": 430, "simul": 430, "_reset": 430, "metadata": 430, "_spec": 430, "shape": 430, "seed": [430, 435], "wrap": 430, "class": [430, 434], "test": 430, "our": 430, "pretrain": 431, "vanilla": 432, "integr": 432, "tensorclass": 432, "other": 432, "pytre": 432, "iter": 432, "over": 432, "fix": 432, "priorit": 432, "save": 432, "raw": 432, "imag": 432, "more": 432, "complex": 432, "config": 434, "sequenc": 434, "program": 434, "ensembl": 434, "meta": 434, "sync": 434, "multiprocess": 434, "async": 434, "frame_skip": 435, "deepmind": 435, "control": 435, "devic": 435, "close": 435, "access": 435, "attribut": 435, "kwarg": 435}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})