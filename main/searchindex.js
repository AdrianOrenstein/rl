Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 85, 89, 90, 91, 92, 93, 97, 99, 100, 102, 104, 105, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 139, 140, 142, 145, 146, 147, 148, 150, 153, 154, 155, 159, 160, 172, 173, 175, 176, 178, 179, 181, 186, 187, 189, 190, 193, 197, 202, 203, 207, 208, 209, 210, 212, 221, 222, 223, 224, 225, 227, 228, 229, 232, 235, 236, 238, 241, 245, 246, 248, 249, 250, 251, 253, 258, 259, 261, 263, 265, 266, 267, 271, 272, 274, 282, 287, 288, 290, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 315, 319, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 356, 357, 358, 359, 373, 375, 378, 382, 388, 389, 393, 394, 397, 404, 405, 406, 407, 410, 411, 412, 416, 417, 420, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 435, 436], "open": [0, 5, 7, 39, 40, 41, 55, 57, 62, 76, 90, 239, 417, 429, 430, 435], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "reinforc": [0, 3, 9, 137, 138, 179, 243, 248, 249, 250, 251, 255, 282, 303, 320, 321, 323, 326, 327, 328, 330, 335, 336, 342, 343, 344, 345, 409, 415, 417, 421, 422, 427, 431, 434, 435], "learn": [0, 3, 7, 8, 9, 18, 49, 121, 137, 138, 142, 145, 153, 179, 243, 248, 249, 250, 251, 255, 268, 275, 281, 282, 303, 320, 321, 323, 326, 327, 328, 330, 334, 335, 336, 341, 342, 343, 344, 345, 409, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 139, 179, 221, 275, 297, 306, 314, 320, 322, 337, 338, 340, 342, 384, 408, 410, 411, 412, 413, 416, 417, 418, 424, 427, 429, 430, 432, 433, 436], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 58, 72, 118, 119, 120, 129, 140, 162, 409, 410, 411, 412, 414, 416, 417, 418, 420, 421, 422, 424, 429, 430, 431, 436], "pytorch": [0, 1, 2, 3, 23, 118, 121, 125, 132, 133, 145, 146, 153, 154, 157, 158, 159, 179, 224, 225, 243, 259, 263, 274, 275, 393, 408, 410, 411, 413, 416, 418, 419, 423, 427, 429, 430, 431, 435, 436], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 49, 59, 60, 64, 69, 72, 118, 121, 125, 129, 132, 133, 136, 137, 138, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 169, 179, 200, 228, 236, 238, 243, 263, 281, 310, 382, 383, 410, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 90, 91, 96, 97, 99, 103, 104, 105, 110, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 167, 169, 171, 172, 173, 175, 176, 178, 179, 182, 183, 184, 186, 189, 190, 191, 194, 197, 201, 202, 203, 207, 208, 212, 215, 219, 220, 221, 222, 226, 227, 228, 229, 230, 232, 234, 236, 238, 239, 242, 244, 245, 246, 248, 258, 259, 261, 262, 263, 265, 267, 268, 271, 272, 273, 275, 282, 291, 293, 297, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 373, 375, 382, 383, 388, 405, 406, 407, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "directli": [0, 4, 8, 14, 15, 16, 23, 99, 116, 117, 118, 121, 124, 125, 132, 133, 139, 145, 146, 153, 154, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 197, 198, 199, 203, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 232, 233, 235, 236, 238, 310, 338, 345, 407, 417, 418, 420, 421, 429, 430, 431, 433], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 96, 97, 99, 102, 103, 104, 105, 106, 108, 110, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 280, 281, 282, 283, 284, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 348, 353, 354, 355, 356, 357, 358, 361, 373, 374, 375, 384, 390, 393, 396, 397, 401, 403, 404, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436], "pypi": [0, 2, 435], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 86, 91, 97, 99, 104, 105, 118, 121, 125, 128, 131, 132, 133, 137, 138, 140, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 179, 183, 184, 201, 207, 222, 225, 227, 228, 229, 232, 234, 236, 237, 238, 243, 244, 245, 246, 259, 261, 262, 263, 265, 266, 272, 273, 274, 281, 283, 291, 292, 296, 298, 300, 306, 309, 310, 323, 334, 338, 345, 375, 382, 390, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 433, 435, 436], "more": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 97, 99, 110, 118, 121, 124, 125, 126, 128, 129, 131, 132, 133, 137, 138, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 179, 225, 228, 232, 237, 238, 239, 240, 241, 244, 255, 263, 266, 274, 297, 302, 303, 309, 310, 314, 320, 330, 338, 340, 355, 360, 368, 382, 389, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 435, 436], "about": [0, 3, 5, 7, 9, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 72, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 411, 412, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 435, 436], "instruct": [0, 6, 7, 10, 22, 189, 191, 412, 416, 417, 418, 419, 429, 430, 433], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 44, 61, 70, 71, 99, 145, 153, 298, 299, 300, 411, 416, 421, 423, 424, 426, 428, 430], "section": [0, 2, 3, 4, 24, 121, 259, 263, 417, 420, 421, 426, 429, 430], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 61, 64, 69, 77, 86, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 184, 201, 207, 222, 227, 228, 229, 232, 234, 238, 245, 246, 259, 262, 263, 266, 272, 291, 306, 309, 390, 416, 417, 418, 419, 420, 421, 429, 431], "pip": [0, 10, 420, 421, 422, 423, 424, 425, 426, 430, 435, 436], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 47, 49, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 70, 71, 75, 76, 83, 86, 90, 91, 93, 97, 98, 99, 102, 104, 105, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 170, 171, 172, 176, 178, 179, 180, 181, 182, 185, 186, 190, 194, 197, 202, 203, 205, 207, 208, 211, 212, 215, 216, 221, 222, 223, 226, 227, 229, 231, 232, 234, 235, 236, 238, 239, 245, 246, 252, 253, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 293, 297, 301, 303, 305, 306, 307, 308, 310, 313, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 384, 390, 397, 403, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 64, 69, 76, 141, 155, 156, 169, 259, 260, 261, 263, 264, 265, 269, 270, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 59, 65, 66, 74, 76, 77, 78, 79, 80, 81, 90, 92, 97, 104, 105, 110, 112, 118, 121, 124, 125, 126, 131, 132, 133, 145, 146, 153, 154, 175, 176, 179, 180, 184, 194, 201, 203, 207, 208, 224, 225, 229, 232, 239, 246, 253, 259, 261, 263, 265, 266, 270, 272, 274, 277, 297, 301, 302, 303, 306, 307, 309, 310, 322, 332, 337, 338, 340, 374, 375, 392, 411, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "low": [0, 3, 28, 31, 60, 69, 74, 77, 97, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 172, 182, 189, 197, 200, 222, 230, 289, 290, 291, 301, 303, 306, 310, 313, 416, 417, 418, 420, 429, 430, 431, 435], "high": [0, 3, 9, 28, 31, 39, 40, 41, 55, 57, 62, 70, 76, 77, 97, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 172, 182, 189, 197, 200, 202, 222, 230, 289, 290, 291, 301, 303, 306, 310, 313, 355, 360, 368, 416, 417, 418, 429, 430, 431, 433, 435], "level": [0, 2, 3, 4, 22, 31, 32, 42, 56, 61, 66, 70, 71, 99, 124, 126, 179, 220, 228, 261, 265, 337, 416, 417, 420, 424, 435], "abstract": [0, 3, 8, 73, 74, 114, 121, 204, 267, 359, 385, 394, 413, 418, 420, 431, 435], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92, 93, 95, 99, 102, 103, 104, 105, 106, 108, 110, 112, 118, 121, 122, 124, 125, 126, 131, 132, 133, 136, 137, 138, 139, 142, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 164, 170, 171, 172, 174, 175, 176, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 197, 199, 200, 201, 202, 205, 207, 212, 215, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 240, 242, 243, 251, 253, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 278, 283, 286, 296, 301, 302, 305, 306, 307, 309, 310, 311, 312, 313, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 350, 353, 354, 355, 356, 357, 358, 359, 373, 382, 383, 390, 393, 403, 407, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 75, 77, 78, 79, 80, 81, 178, 189, 293, 338, 411, 435], "effici": [0, 1, 2, 4, 8, 118, 121, 125, 132, 133, 145, 146, 153, 154, 259, 275, 323, 411, 416, 417, 418, 419, 420, 423, 424, 426, 428, 429, 430, 432, 433, 435], "modular": [0, 312, 420, 433, 435], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 143, 144, 145, 146, 153, 154, 155, 156, 229, 238, 408, 417, 419, 420, 421, 424, 427, 435], "properli": [0, 1, 3, 77, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 184, 261, 265, 418, 425, 429, 430, 431, 435], "test": [0, 3, 5, 116, 117, 118, 121, 125, 130, 131, 132, 133, 137, 138, 145, 146, 153, 154, 159, 187, 227, 232, 261, 265, 388, 403, 418, 419, 420, 432, 435], "The": [0, 1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 96, 97, 99, 102, 104, 105, 106, 110, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 157, 158, 159, 167, 170, 171, 172, 175, 176, 178, 179, 183, 184, 186, 187, 190, 191, 192, 197, 200, 201, 203, 205, 207, 212, 214, 215, 216, 219, 220, 221, 222, 224, 227, 228, 229, 232, 234, 235, 236, 238, 240, 241, 242, 243, 248, 249, 250, 251, 252, 255, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 275, 279, 281, 282, 284, 285, 286, 296, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 361, 373, 375, 377, 380, 381, 382, 383, 384, 389, 403, 405, 406, 409, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 436], "code": [0, 3, 5, 7, 8, 14, 15, 60, 64, 118, 121, 125, 131, 132, 133, 145, 146, 153, 154, 207, 229, 232, 241, 259, 260, 261, 263, 264, 265, 306, 310, 312, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436], "aim": [0, 2, 3, 7, 44, 65, 66, 207, 232, 234, 266, 396, 410, 411, 412, 416, 417, 435], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 55, 57, 59, 62, 69, 76, 86, 90, 92, 106, 108, 112, 113, 115, 116, 117, 118, 124, 126, 130, 140, 142, 145, 147, 150, 162, 176, 179, 191, 197, 203, 222, 223, 226, 230, 255, 279, 281, 290, 293, 302, 303, 306, 309, 312, 330, 338, 355, 356, 357, 358, 380, 409, 411, 413, 418, 419, 421, 422, 430, 431, 433, 435], "research": [0, 7, 9, 137, 138, 241, 435], "most": [0, 1, 2, 3, 7, 8, 14, 15, 49, 51, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 189, 235, 416, 418, 420, 421, 422, 423, 424, 425, 426, 431, 435, 436], "written": [0, 1, 2, 3, 35, 39, 40, 41, 55, 56, 57, 59, 61, 62, 67, 70, 71, 75, 76, 88, 90, 97, 99, 104, 105, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 145, 146, 150, 153, 154, 170, 171, 172, 179, 191, 194, 199, 200, 215, 220, 223, 224, 229, 235, 238, 239, 244, 282, 297, 306, 309, 310, 314, 320, 322, 337, 340, 342, 354, 373, 374, 375, 411, 412, 413, 416, 419, 420, 422, 428, 431, 435], "highli": [0, 2, 421, 435, 436], "wai": [0, 1, 2, 3, 4, 99, 110, 129, 179, 207, 210, 227, 228, 234, 235, 261, 263, 265, 340, 355, 356, 357, 358, 411, 416, 417, 418, 420, 421, 423, 424, 428, 429, 430, 431, 432, 433, 435, 436], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 412, 416, 417, 418, 421, 422, 423, 426, 429, 430, 435, 436], "swap": [0, 1, 3, 124, 235, 418, 420, 432, 435], "compon": [0, 1, 2, 3, 56, 60, 61, 70, 71, 90, 91, 92, 93, 99, 106, 108, 112, 255, 284, 302, 303, 308, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 389, 393, 416, 417, 418, 419, 420, 422, 423, 426, 428, 429, 430, 431, 432, 435], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 49, 56, 58, 61, 63, 70, 71, 72, 87, 88, 95, 99, 108, 113, 118, 121, 122, 125, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 247, 248, 252, 255, 256, 261, 265, 280, 283, 284, 290, 292, 301, 304, 305, 313, 316, 317, 319, 326, 339, 373, 375, 390, 407, 409, 415, 417, 419, 420, 422, 424, 425, 426, 427, 432, 434], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 42, 56, 58, 59, 60, 61, 64, 66, 69, 70, 71, 99, 110, 115, 118, 121, 122, 125, 129, 132, 133, 136, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 186, 190, 197, 200, 222, 226, 229, 230, 236, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 292, 293, 301, 303, 305, 308, 313, 316, 337, 375, 416, 417, 419, 420, 421, 422, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "write": [0, 2, 3, 8, 23, 39, 40, 41, 44, 49, 55, 56, 57, 58, 61, 62, 70, 71, 75, 76, 97, 99, 104, 108, 115, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 173, 175, 176, 178, 179, 180, 182, 183, 184, 188, 191, 192, 193, 195, 198, 199, 205, 206, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 233, 235, 236, 238, 297, 309, 310, 312, 314, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 354, 359, 375, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 96, 97, 99, 103, 118, 121, 125, 132, 133, 140, 145, 146, 151, 152, 153, 154, 170, 171, 176, 215, 219, 228, 229, 236, 238, 253, 259, 261, 265, 282, 309, 310, 315, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 382, 412, 416, 418, 421, 423, 429, 430, 431, 435, 436], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 104, 105, 118, 121, 125, 132, 133, 145, 146, 147, 148, 149, 153, 154, 180, 183, 186, 188, 190, 203, 207, 212, 219, 222, 228, 229, 232, 234, 238, 243, 269, 270, 281, 293, 309, 320, 321, 323, 324, 336, 340, 341, 343, 345, 346, 361, 416, 418, 420, 429, 430, 431, 433, 435, 436], "littl": [0, 1, 3, 72, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 243, 320, 322, 337, 340, 342, 418, 419, 420, 424, 433, 435, 436], "effort": [0, 3, 431, 433, 435], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 106, 108, 110, 112, 113, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 142, 145, 146, 147, 148, 149, 153, 154, 155, 157, 158, 159, 167, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 203, 206, 207, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 373, 374, 382, 383, 384, 386, 388, 390, 393, 395, 396, 397, 403, 407, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "repo": [0, 6, 179, 223, 232, 410, 430, 435], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 104, 105, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 145, 146, 150, 153, 154, 170, 238, 243, 310, 325, 328, 336, 353, 412, 423, 435], "align": [0, 259, 263, 435], "exist": [0, 2, 3, 4, 18, 21, 27, 38, 39, 40, 41, 44, 49, 55, 57, 59, 60, 62, 64, 69, 75, 76, 90, 118, 121, 125, 132, 133, 145, 146, 153, 154, 180, 188, 227, 229, 238, 239, 253, 310, 323, 343, 397, 407, 429, 430, 435, 436], "ecosystem": [0, 420, 424, 435], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 90, 92, 99, 102, 104, 110, 112, 118, 121, 122, 125, 129, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 176, 179, 187, 201, 220, 221, 222, 223, 224, 226, 227, 228, 229, 238, 240, 259, 261, 263, 265, 271, 273, 290, 303, 305, 310, 320, 323, 337, 338, 340, 342, 375, 412, 416, 417, 418, 419, 420, 421, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "dataset": [0, 37, 39, 40, 41, 44, 55, 56, 57, 58, 61, 62, 63, 68, 70, 71, 75, 76, 86, 89, 97, 99, 102, 104, 105, 142, 187, 236, 375, 409, 416, 417, 421, 432, 433, 435, 436], "pillar": [0, 435], "environ": [0, 1, 2, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 60, 64, 65, 66, 74, 76, 77, 78, 79, 80, 81, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 172, 173, 175, 176, 178, 179, 180, 184, 186, 187, 188, 189, 190, 195, 201, 202, 203, 207, 208, 209, 212, 215, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 235, 236, 239, 242, 244, 261, 265, 267, 268, 305, 327, 331, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 383, 384, 386, 388, 396, 397, 398, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 420, 422, 423, 424, 425, 427, 432, 433, 434], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 63, 64, 69, 75, 76, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 179, 186, 207, 222, 232, 234, 237, 238, 245, 246, 247, 252, 254, 261, 265, 266, 267, 268, 272, 273, 280, 283, 292, 298, 299, 300, 304, 309, 315, 317, 320, 321, 322, 323, 325, 326, 327, 328, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 353, 393, 398, 399, 400, 409, 410, 412, 413, 415, 418, 421, 424, 427, 429, 430, 431, 433, 434, 436], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 159, 164, 171, 173, 176, 178, 179, 186, 187, 188, 190, 192, 194, 197, 199, 203, 209, 212, 219, 220, 226, 228, 229, 230, 235, 238, 242, 243, 255, 258, 261, 265, 268, 271, 272, 282, 284, 293, 296, 297, 302, 305, 306, 307, 309, 310, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 375, 382, 384, 390, 393, 395, 398, 403, 405, 406, 407, 409, 411, 412, 413, 415, 419, 420, 421, 422, 423, 427, 431, 432, 433, 434, 436], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 49, 59, 60, 61, 63, 64, 69, 104, 105, 116, 117, 118, 121, 125, 130, 131, 132, 133, 138, 145, 146, 147, 148, 153, 154, 160, 179, 207, 212, 222, 234, 238, 241, 244, 245, 246, 252, 259, 261, 263, 265, 316, 317, 318, 319, 338, 403, 409, 414, 416, 418, 420, 422, 423, 424, 430, 431, 433, 435, 436], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 90, 92, 96, 97, 110, 112, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 157, 159, 176, 178, 180, 183, 184, 185, 194, 197, 200, 201, 203, 207, 215, 222, 224, 227, 228, 229, 232, 234, 238, 239, 259, 261, 262, 263, 265, 268, 272, 284, 290, 291, 296, 301, 303, 305, 306, 308, 309, 310, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 373, 384, 396, 406, 411, 412, 417, 418, 420, 422, 423, 425, 429, 430, 432, 433, 435, 436], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 110, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 157, 159, 176, 178, 180, 183, 194, 197, 200, 203, 207, 215, 222, 224, 227, 228, 229, 232, 234, 238, 239, 259, 261, 262, 263, 264, 265, 268, 272, 290, 291, 301, 306, 309, 310, 323, 343, 354, 364, 365, 366, 367, 369, 370, 371, 372, 373, 406, 411, 412, 417, 418, 420, 422, 425, 429, 430, 431, 432, 433, 435, 436], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 49, 63, 67, 104, 105, 118, 121, 125, 132, 133, 145, 146, 149, 153, 154, 176, 179, 212, 220, 238, 243, 261, 265, 282, 390, 393, 395, 398, 399, 403, 405, 406, 409, 412, 413, 420, 433, 436], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 89, 96, 97, 99, 100, 102, 104, 105, 106, 111, 114, 115, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 170, 171, 172, 179, 183, 186, 190, 197, 207, 219, 222, 227, 228, 229, 232, 234, 235, 236, 238, 242, 245, 246, 259, 260, 263, 264, 266, 268, 271, 272, 297, 302, 303, 306, 308, 309, 310, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 361, 379, 384, 396, 403, 404, 405, 406, 407, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 436], "etc": [0, 2, 3, 7, 8, 27, 38, 44, 49, 59, 60, 64, 69, 74, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 219, 229, 238, 239, 266, 272, 290, 412, 417, 418, 424, 433, 435, 436], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 99, 103, 106, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 159, 164, 167, 171, 172, 175, 179, 186, 190, 191, 199, 202, 203, 219, 220, 222, 226, 227, 228, 229, 236, 238, 240, 243, 245, 246, 266, 271, 272, 273, 282, 293, 305, 311, 312, 320, 322, 337, 340, 342, 345, 349, 350, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 384, 393, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "few": [0, 2, 8, 105, 125, 375, 384, 418, 419, 422, 429, 430, 433, 435, 436], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 55, 57, 77, 118, 121, 124, 125, 126, 127, 132, 133, 145, 146, 150, 153, 154, 157, 158, 186, 190, 310, 314, 340, 377, 411, 416, 418, 419, 429, 430, 431, 435, 436], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 91, 97, 104, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 183, 207, 222, 227, 228, 229, 232, 234, 238, 245, 246, 259, 260, 263, 264, 309, 373, 388, 393, 411, 416, 418, 419, 420, 422, 424, 425, 429, 430, 431, 433, 435, 436], "standard": [0, 2, 3, 51, 118, 203, 214, 236, 240, 241, 242, 256, 268, 274, 275, 280, 301, 322, 337, 340, 345, 346, 355, 356, 357, 358, 416, 417, 421, 422, 430, 433, 435], "numpi": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 126, 132, 133, 145, 146, 153, 154, 197, 225, 230, 239, 393, 420, 431, 433, 435, 436], "common": [0, 2, 3, 4, 74, 125, 130, 173, 191, 298, 299, 300, 304, 320, 321, 322, 323, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 403, 410, 411, 412, 413, 416, 418, 422, 425, 428, 429, 430, 431, 432, 435, 436], "openai": [0, 7, 24, 124, 126, 133, 150, 418, 431, 435, 436], "gym": [0, 1, 3, 4, 8, 14, 15, 16, 17, 21, 22, 118, 121, 122, 124, 125, 126, 127, 129, 132, 133, 137, 138, 140, 141, 145, 146, 150, 153, 154, 157, 158, 163, 167, 169, 175, 179, 182, 191, 198, 199, 203, 205, 210, 212, 215, 222, 228, 235, 236, 238, 239, 403, 410, 416, 417, 418, 419, 421, 425, 426, 431, 432, 433], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 90, 92, 96, 97, 99, 104, 105, 112, 118, 119, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 140, 141, 145, 146, 147, 148, 150, 153, 154, 172, 175, 179, 180, 182, 183, 184, 186, 187, 189, 190, 194, 197, 201, 203, 207, 208, 212, 219, 220, 221, 222, 223, 227, 228, 229, 232, 234, 236, 238, 239, 243, 263, 265, 271, 272, 297, 301, 302, 306, 307, 309, 310, 311, 312, 320, 322, 323, 324, 328, 329, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 375, 382, 397, 412, 413, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 435, 436], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 211, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 289, 290, 291, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 377, 380, 382, 384, 386, 387, 388, 389, 390, 391, 393, 397, 403, 405, 406, 407, 411, 419, 421, 424, 429, 430, 431, 433, 435], "On": [0, 3, 7, 18, 19, 20, 21, 31, 260, 264, 411, 417, 429, 430], "end": [0, 2, 3, 14, 15, 17, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 76, 88, 97, 99, 103, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 191, 197, 205, 220, 221, 227, 229, 238, 245, 246, 259, 260, 263, 264, 267, 305, 323, 343, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "come": [0, 1, 2, 3, 8, 44, 49, 110, 118, 121, 125, 131, 132, 133, 136, 145, 146, 153, 154, 186, 190, 296, 297, 298, 299, 300, 306, 314, 320, 322, 337, 340, 342, 375, 416, 417, 418, 419, 423, 424, 425, 426, 429, 430, 433, 435, 436], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 76, 90, 91, 92, 99, 103, 106, 112, 118, 121, 123, 125, 126, 131, 132, 133, 137, 138, 139, 145, 146, 147, 148, 153, 154, 157, 158, 159, 168, 169, 171, 173, 175, 176, 179, 180, 183, 186, 187, 190, 197, 198, 199, 200, 207, 212, 220, 221, 222, 223, 227, 228, 229, 232, 234, 236, 238, 239, 259, 261, 263, 265, 267, 271, 272, 279, 281, 282, 290, 296, 301, 309, 310, 322, 323, 329, 334, 337, 338, 340, 343, 359, 375, 383, 384, 388, 390, 399, 407, 410, 411, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 428, 429, 430, 431, 432, 433, 435, 436], "re": [0, 2, 3, 8, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 76, 99, 103, 118, 121, 125, 132, 133, 145, 146, 153, 154, 194, 238, 265, 269, 270, 273, 306, 310, 382, 413, 416, 418, 419, 421, 423, 428, 429, 431, 435, 436], "usabl": [0, 413, 419, 435], "function": [0, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 91, 92, 93, 99, 106, 108, 112, 118, 121, 122, 125, 126, 132, 133, 145, 146, 153, 154, 159, 167, 169, 170, 171, 175, 176, 186, 190, 197, 226, 227, 229, 230, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 276, 277, 278, 280, 282, 285, 286, 288, 291, 293, 298, 299, 300, 301, 303, 305, 306, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 393, 403, 409, 411, 416, 419, 420, 421, 422, 425, 428, 431, 433, 436], "cost": [0, 2, 30, 91, 320, 322, 337, 340, 342, 412, 416, 417, 420, 429, 430, 431, 433], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 89, 91, 97, 99, 100, 102, 104, 105, 108, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 150, 153, 154, 157, 158, 161, 162, 163, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 283, 285, 286, 289, 290, 291, 292, 294, 297, 298, 299, 300, 301, 305, 306, 308, 309, 310, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 379, 383, 393, 396, 398, 403, 404, 405, 406, 407, 409, 411, 413, 416, 417, 418, 420, 422, 423, 425, 428, 429, 430, 431, 432, 433, 435, 436], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 39, 40, 41, 49, 55, 56, 57, 59, 60, 61, 62, 64, 69, 70, 71, 72, 75, 76, 92, 96, 97, 100, 104, 112, 118, 121, 122, 125, 129, 132, 133, 136, 140, 145, 146, 147, 148, 153, 154, 178, 179, 186, 190, 197, 222, 225, 227, 236, 238, 261, 265, 271, 272, 282, 303, 308, 409, 413, 416, 417, 419, 420, 421, 429, 430, 431, 432, 433, 435, 436], "good": [0, 1, 4, 9, 145, 416, 418, 419, 420, 422, 430, 435, 436], "runtim": [0, 2, 3, 23, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 431], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 64, 65, 66, 69, 74, 75, 77, 78, 79, 80, 81, 118, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 145, 146, 150, 153, 154, 157, 158, 160, 186, 190, 197, 202, 224, 227, 229, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 273, 276, 277, 280, 281, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 322, 323, 332, 340, 343, 388, 393, 412, 416, 417, 418, 419, 420, 421, 424, 426, 428, 429, 430, 431, 436], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 49, 56, 59, 60, 61, 63, 64, 69, 70, 71, 88, 97, 99, 104, 105, 108, 115, 116, 117, 118, 121, 124, 125, 126, 130, 131, 132, 133, 136, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 179, 184, 220, 222, 236, 238, 244, 261, 265, 282, 298, 299, 300, 310, 323, 329, 334, 338, 345, 375, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 436], "read": [0, 2, 3, 7, 23, 31, 32, 35, 42, 56, 58, 61, 63, 66, 67, 70, 71, 90, 91, 92, 93, 96, 99, 106, 108, 112, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 198, 199, 205, 206, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 228, 231, 232, 233, 235, 236, 238, 244, 278, 297, 298, 299, 300, 302, 305, 306, 309, 310, 312, 314, 315, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 356, 357, 358, 359, 375, 388, 393, 411, 416, 417, 418, 420, 421, 422, 428, 429, 430, 431, 432, 435, 436], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 413, 416, 421, 424, 428, 432, 436], "beyond": [0, 44, 118, 121, 125, 132, 133, 145, 146, 153, 154, 420], "api": [0, 2, 3, 5, 23, 31, 32, 42, 44, 59, 66, 69, 74, 118, 121, 147, 148, 150, 207, 234, 236, 243, 411, 412, 413, 420, 421, 422, 423, 424, 425, 429, 430, 431, 433, 435, 436], "check": [0, 2, 3, 4, 5, 6, 7, 9, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 82, 84, 87, 88, 95, 104, 118, 121, 122, 124, 125, 126, 132, 133, 139, 145, 146, 153, 154, 159, 160, 179, 180, 184, 193, 199, 208, 222, 225, 229, 238, 239, 253, 261, 265, 297, 302, 303, 306, 307, 308, 309, 310, 323, 334, 345, 375, 408, 411, 412, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "paper": [0, 116, 117, 119, 120, 127, 130, 131, 137, 138, 140, 141, 150, 157, 158, 207, 232, 234, 246, 259, 283, 292, 327, 335, 345, 416, 418, 429, 430], "releas": [0, 4, 7, 10, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 343], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 395, 403, 413, 416], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 39, 40, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 99, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 197, 222, 227, 236, 238, 243, 311, 312, 375, 416, 418, 419, 423, 426, 429, 430, 431, 436], "make": [0, 2, 3, 4, 7, 11, 27, 38, 39, 40, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 76, 99, 102, 106, 108, 115, 118, 121, 125, 126, 129, 131, 132, 133, 135, 141, 145, 146, 153, 154, 159, 170, 172, 184, 192, 200, 203, 207, 208, 212, 216, 220, 224, 228, 232, 238, 241, 244, 259, 260, 261, 263, 264, 265, 271, 272, 274, 302, 310, 320, 322, 337, 340, 342, 355, 356, 357, 358, 373, 390, 399, 407, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "sure": [0, 3, 4, 7, 106, 118, 125, 129, 184, 212, 302, 407, 411, 416, 418, 419, 420, 423, 429, 430, 431, 433, 435, 436], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 38, 49, 59, 60, 64, 69, 74, 77, 86, 87, 88, 95, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 202, 224, 236, 238, 330, 338, 411, 412, 417, 418, 419, 420, 429, 430, 431, 433], "enjoi": [0, 2, 3, 424], "latest": [0, 2, 3, 10, 140, 143, 144, 147, 148, 390, 418, 429, 430, 431, 435], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 53, 59, 69, 74, 75, 97, 104, 105, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 151, 152, 153, 154, 159, 176, 179, 194, 197, 199, 205, 222, 223, 231, 236, 241, 245, 246, 256, 257, 259, 260, 261, 263, 264, 265, 266, 271, 274, 275, 310, 317, 320, 322, 337, 340, 342, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 407, 411, 412, 416, 417, 418, 419, 420, 422, 423, 424, 426, 431, 433, 435, 436], "recent": [0, 7, 235, 239, 436], "version": [0, 1, 2, 3, 6, 26, 27, 29, 32, 34, 38, 42, 43, 46, 48, 49, 52, 54, 55, 57, 59, 60, 63, 64, 69, 78, 79, 80, 81, 104, 118, 121, 124, 125, 126, 127, 132, 133, 140, 141, 145, 146, 147, 150, 153, 154, 157, 158, 170, 179, 226, 235, 236, 238, 239, 241, 261, 265, 273, 279, 300, 320, 322, 337, 338, 340, 342, 343, 355, 358, 410, 411, 412, 416, 418, 419, 420, 421, 423, 426, 429, 430, 431, 432, 436], "although": [0, 1, 3, 8, 27, 38, 59, 60, 64, 69, 77, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 412, 413, 416, 417, 424, 433], "core": [0, 2, 3, 8, 413, 419, 422, 435], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 106, 108, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 236, 238, 310, 424], "backward": [0, 8, 27, 38, 49, 59, 60, 64, 69, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238, 259, 260, 263, 264, 281, 310, 320, 321, 323, 324, 328, 329, 336, 340, 341, 342, 343, 345, 346, 416, 418, 419, 420, 423, 424, 426, 429, 430, 431], "compat": [0, 2, 3, 7, 14, 15, 16, 23, 27, 38, 49, 59, 60, 64, 69, 91, 99, 102, 104, 105, 106, 110, 118, 121, 125, 127, 132, 133, 142, 145, 146, 153, 154, 179, 220, 232, 236, 238, 239, 259, 260, 261, 263, 264, 265, 307, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 349, 416, 419, 433], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 42, 44, 45, 46, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 69, 70, 71, 72, 75, 76, 86, 90, 92, 96, 97, 99, 104, 105, 110, 112, 116, 117, 118, 121, 122, 125, 130, 131, 132, 133, 136, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 164, 171, 175, 176, 178, 180, 183, 184, 186, 188, 189, 190, 199, 200, 203, 205, 207, 209, 212, 215, 219, 220, 221, 222, 227, 228, 229, 232, 234, 236, 238, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 280, 281, 282, 290, 293, 301, 302, 303, 305, 309, 313, 314, 320, 321, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 384, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 428, 429, 430, 431, 433, 434, 435, 436], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 83, 86, 90, 91, 92, 96, 97, 99, 104, 105, 112, 116, 117, 118, 121, 124, 125, 127, 128, 130, 131, 132, 133, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 154, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 278, 281, 282, 285, 286, 289, 290, 291, 293, 297, 301, 303, 308, 309, 310, 312, 313, 316, 317, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 361, 362, 363, 384, 391, 403, 407, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 56, 59, 61, 69, 70, 71, 91, 125, 132, 145, 153, 200, 207, 210, 234, 323, 326, 338, 412, 413, 416, 417, 418, 419, 422, 424, 433, 435, 436], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 102, 104, 105, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 254, 255, 258, 261, 265, 267, 268, 271, 272, 282, 283, 284, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 373, 374, 384, 388, 389, 390, 392, 393, 409, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 436], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 59, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 90, 199, 209, 227, 228, 298, 299, 300, 309, 328, 336, 345, 409, 416, 429, 431, 435], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 39, 40, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 64, 69, 70, 71, 75, 76, 86, 88, 90, 99, 107, 113, 118, 121, 125, 132, 133, 145, 146, 153, 154, 155, 169, 207, 234, 238, 268, 377, 382, 393, 413, 417, 420, 426, 429], "root": [0, 2, 3, 31, 32, 42, 44, 56, 61, 66, 70, 71, 76, 87, 88, 95, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 179, 201, 223, 224, 261, 262, 265, 290, 291, 412, 419, 421, 429, 430, 431, 433, 436], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 56, 72, 96, 97, 116, 117, 119, 120, 127, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 147, 148, 150, 155, 156, 157, 158, 179, 207, 232, 241, 247, 248, 249, 250, 251, 252, 255, 256, 257, 263, 268, 269, 270, 275, 276, 277, 281, 282, 283, 285, 286, 292, 303, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 355, 360, 368, 408, 427, 432, 435], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 116, 117, 119, 120, 124, 127, 130, 131, 137, 138, 140, 141, 143, 144, 147, 148, 150, 155, 156, 157, 158, 176, 179, 232, 241, 422, 426, 429, 430, 435], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 116, 117, 119, 120, 127, 129, 130, 131, 137, 138, 140, 141, 143, 144, 147, 148, 150, 155, 156, 157, 158, 179, 241, 435], "setup": [0, 7, 116, 117, 129, 130, 131, 155], "py": [0, 3, 24, 124, 126, 169, 179, 253, 283, 292, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436], "develop": [0, 3, 4, 7, 44, 129, 416, 435], "A": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 106, 110, 111, 112, 113, 114, 118, 121, 123, 125, 127, 128, 132, 133, 145, 146, 149, 150, 153, 154, 159, 165, 170, 172, 174, 175, 176, 178, 179, 182, 184, 187, 189, 195, 199, 201, 207, 208, 210, 217, 222, 224, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 255, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 281, 293, 301, 302, 303, 305, 306, 307, 310, 312, 313, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 353, 355, 356, 357, 358, 359, 361, 373, 376, 377, 380, 382, 383, 386, 393, 395, 403, 409, 412, 415, 416, 418, 420, 422, 423, 424, 427, 431, 434, 436], "seri": [0, 2, 3, 7, 8, 53, 89, 100, 110, 111, 114, 115, 153, 202, 228, 375, 411, 412, 416, 417, 418, 425, 426, 429, 430, 433, 436], "quick": [0, 420], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 44, 63, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 178, 197, 200, 223, 228, 238, 241, 340, 410, 411, 412, 416, 417, 418, 419, 422, 426, 429, 430, 431, 433, 435, 436], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 97, 99, 100, 102, 103, 104, 105, 110, 112, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 133, 137, 138, 139, 140, 141, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 163, 167, 170, 171, 172, 175, 176, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 194, 197, 199, 200, 201, 202, 203, 207, 208, 211, 212, 215, 216, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 236, 238, 239, 244, 245, 246, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 282, 293, 297, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 369, 370, 371, 372, 373, 379, 382, 383, 389, 390, 393, 395, 397, 403, 407, 410, 412, 416, 417, 418, 419, 420, 421, 423, 425, 426, 428, 429, 430, 431, 433, 435, 436], "hurri": [0, 421], "last": [0, 1, 2, 3, 4, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 65, 66, 74, 76, 77, 78, 79, 80, 81, 103, 104, 105, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 145, 146, 150, 153, 154, 164, 172, 175, 178, 194, 201, 203, 208, 221, 223, 225, 239, 240, 245, 246, 258, 259, 261, 263, 265, 266, 269, 270, 276, 287, 290, 293, 301, 305, 310, 323, 355, 357, 358, 417, 418, 419, 420, 421, 422, 429, 430, 431, 432, 433, 435, 436], "item": [0, 2, 3, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 65, 66, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 86, 91, 97, 99, 103, 110, 132, 172, 187, 193, 228, 269, 270, 324, 325, 327, 384, 412, 413, 416, 418, 419, 423, 424, 429, 430, 431, 433], "navig": [0, 430], "previou": [0, 3, 4, 10, 49, 56, 61, 63, 70, 71, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 194, 222, 238, 259, 263, 286, 301, 418, 419, 420, 421, 422, 426, 431, 436], "whenev": [0, 1, 2, 3, 23, 49, 56, 59, 61, 69, 70, 71, 76, 96, 97, 104, 105, 119, 120, 124, 126, 127, 137, 138, 150, 157, 158, 169, 187, 194, 198, 229, 235, 338, 355, 356, 357, 358, 373, 395, 411, 425, 433], "want": [0, 2, 3, 6, 7, 8, 59, 69, 105, 179, 203, 281, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 411, 416, 417, 418, 419, 420, 421, 423, 424, 425, 429, 430, 431, 432, 433, 435, 436], "ted": [0, 35, 50, 67, 68, 87, 88, 95, 409, 415, 427, 434], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 39, 40, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 64, 69, 70, 71, 74, 76, 99, 104, 105, 110, 116, 117, 118, 121, 125, 129, 130, 131, 132, 133, 137, 138, 140, 145, 146, 147, 148, 153, 154, 157, 158, 159, 179, 183, 187, 197, 201, 207, 220, 222, 225, 226, 227, 228, 229, 232, 234, 236, 238, 240, 243, 245, 246, 253, 258, 261, 265, 270, 271, 272, 275, 281, 283, 290, 292, 298, 300, 303, 305, 306, 309, 310, 313, 321, 323, 328, 334, 336, 338, 343, 345, 355, 356, 357, 358, 359, 373, 411, 412, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "modul": [0, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 49, 59, 60, 63, 64, 69, 110, 116, 117, 118, 121, 125, 132, 133, 136, 139, 142, 145, 146, 153, 154, 169, 178, 183, 189, 191, 197, 199, 207, 208, 221, 222, 227, 228, 229, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 353, 355, 356, 357, 358, 359, 373, 393, 400, 403, 409, 412, 413, 415, 417, 418, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434], "optim": [0, 1, 2, 8, 27, 38, 49, 59, 60, 63, 64, 69, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 242, 268, 274, 275, 281, 290, 321, 323, 338, 339, 340, 343, 350, 388, 389, 393, 403, 412, 413, 415, 418, 419, 420, 421, 422, 424, 427, 429, 430, 431, 434], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 44, 49, 56, 61, 70, 71, 99, 103, 118, 121, 125, 132, 133, 145, 146, 150, 153, 154, 159, 176, 179, 194, 203, 207, 234, 282, 305, 321, 324, 327, 329, 341, 343, 345, 346, 375, 384, 390, 393, 395, 396, 397, 403, 413, 415, 416, 419, 420, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436], "storag": [0, 1, 8, 27, 35, 38, 39, 40, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 64, 67, 69, 70, 71, 73, 76, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 107, 108, 109, 110, 112, 113, 118, 121, 123, 125, 132, 133, 145, 146, 153, 154, 178, 179, 186, 190, 212, 238, 409, 413, 415, 417, 418, 419, 420, 421, 423, 426, 427, 429, 430, 432, 434], "log": [0, 3, 4, 8, 11, 63, 253, 254, 255, 269, 270, 278, 290, 291, 302, 303, 306, 310, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 346, 353, 382, 386, 387, 388, 393, 403, 411, 412, 413, 415, 416, 417, 418, 421, 422, 426, 427, 429, 430, 431, 434, 435], "your": [0, 2, 7, 8, 10, 11, 14, 15, 18, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 129, 132, 133, 136, 145, 146, 147, 148, 153, 154, 236, 238, 310, 383, 407, 409, 410, 411, 412, 415, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 433, 434, 435], "own": [0, 1, 14, 15, 17, 22, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 238, 375, 409, 412, 415, 417, 418, 421, 427, 429, 430, 431, 434], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 63, 64, 69, 75, 76, 86, 118, 121, 125, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 159, 186, 195, 207, 221, 226, 229, 232, 234, 238, 240, 241, 243, 248, 250, 258, 261, 265, 282, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 393, 395, 403, 409, 411, 413, 415, 417, 421, 424, 425, 427, 432, 433, 434, 435, 436], "loop": [0, 8, 39, 40, 41, 55, 57, 62, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 258, 281, 282, 340, 393, 412, 413, 415, 416, 417, 421, 423, 424, 425, 427, 428, 433, 434, 435], "ppo": [0, 4, 8, 306, 310, 322, 337, 340, 409, 411, 415, 416, 417, 420, 422, 423, 427, 429, 434], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 110, 118, 119, 120, 121, 122, 124, 125, 126, 132, 133, 140, 145, 146, 153, 154, 179, 182, 183, 184, 192, 198, 199, 203, 210, 212, 216, 217, 220, 222, 223, 224, 227, 228, 229, 230, 236, 238, 244, 261, 265, 403, 411, 415, 417, 418, 421, 422, 423, 427, 434, 435, 436], "introduct": [0, 412, 415, 421, 427, 429, 430, 434, 436], "multi": [0, 1, 7, 9, 27, 38, 49, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 87, 88, 95, 118, 121, 125, 132, 133, 137, 138, 145, 146, 151, 152, 153, 154, 200, 229, 238, 259, 261, 263, 265, 266, 271, 272, 273, 305, 310, 353, 355, 356, 357, 358, 409, 415, 416, 417, 418, 419, 421, 422, 427, 431, 434, 435], "agent": [0, 9, 65, 66, 136, 137, 138, 143, 144, 147, 148, 151, 152, 155, 156, 157, 158, 160, 200, 219, 220, 221, 269, 270, 271, 272, 273, 275, 283, 292, 322, 337, 340, 353, 409, 415, 421, 427, 431, 434], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 31, 35, 38, 44, 49, 59, 60, 63, 64, 67, 69, 76, 99, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 261, 265, 267, 268, 305, 309, 338, 373, 374, 375, 383, 397, 398, 399, 403, 405, 406, 407, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 90, 91, 95, 96, 97, 98, 99, 104, 105, 110, 112, 116, 117, 118, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 278, 280, 281, 282, 283, 284, 290, 291, 292, 293, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 368, 373, 375, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 403, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436], "pretrain": [0, 415, 427, 434], "recurr": [0, 2, 178, 259, 260, 261, 263, 265, 286, 296, 415, 417, 422, 427, 433, 434], "dqn": [0, 2, 172, 191, 246, 255, 302, 303, 320, 321, 323, 324, 325, 327, 329, 330, 331, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 353, 400, 409, 411, 415, 420, 422, 423, 426, 427, 434], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 49, 67, 116, 117, 118, 121, 125, 132, 133, 139, 145, 146, 149, 153, 154, 168, 189, 199, 201, 221, 224, 240, 243, 244, 255, 258, 261, 265, 271, 272, 275, 282, 284, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 320, 321, 322, 323, 324, 328, 329, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 388, 395, 398, 399, 403, 405, 406, 409, 411, 413, 415, 417, 421, 423, 424, 427, 432, 433, 434, 435, 436], "replai": [0, 8, 16, 49, 56, 61, 70, 71, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 110, 111, 115, 178, 179, 189, 208, 212, 222, 228, 238, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 390, 393, 401, 403, 409, 412, 413, 415, 420, 427, 431, 432, 434], "buffer": [0, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 115, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 178, 179, 183, 187, 189, 197, 207, 208, 212, 222, 227, 228, 229, 232, 234, 238, 240, 282, 301, 309, 312, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 355, 356, 357, 358, 359, 390, 393, 401, 403, 409, 412, 413, 415, 420, 425, 427, 431, 432, 434, 436], "export": [0, 6, 7, 415, 427, 434], "competit": [0, 3, 137, 138, 415, 427, 430, 434], "ddpg": [0, 248, 249, 250, 251, 324, 335, 344, 409, 411, 415, 417, 423, 427, 430, 434], "task": [0, 2, 3, 9, 63, 65, 66, 75, 118, 119, 120, 121, 125, 128, 132, 133, 137, 138, 145, 146, 147, 148, 150, 153, 154, 157, 158, 207, 220, 229, 232, 234, 328, 336, 415, 416, 417, 418, 419, 421, 422, 427, 429, 430, 431, 434, 436], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 143, 144, 145, 146, 153, 154, 157, 167, 187, 201, 222, 252, 261, 265, 301, 320, 338, 340, 342, 375, 393, 409, 412, 413, 415, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 435], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 39, 40, 41, 49, 51, 55, 57, 59, 60, 62, 64, 69, 74, 75, 76, 90, 91, 92, 93, 99, 102, 106, 108, 112, 115, 118, 121, 125, 130, 132, 133, 145, 146, 149, 153, 154, 172, 186, 190, 191, 197, 200, 203, 207, 227, 228, 229, 232, 236, 238, 261, 265, 268, 271, 272, 283, 290, 292, 297, 298, 306, 309, 310, 311, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 397, 398, 399, 402, 403, 407, 409, 411, 413, 415, 417, 418, 419, 420, 424, 426, 427, 429, 430, 431, 433, 434, 436], "loss": [0, 3, 8, 57, 191, 281, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 355, 389, 393, 400, 403, 412, 413, 415, 420, 421, 423, 424, 425, 427, 431, 433, 434], "trainer": [0, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 415, 416, 427, 434], "exampl": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 75, 76, 77, 86, 90, 91, 92, 96, 97, 99, 104, 105, 110, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 278, 280, 281, 282, 283, 284, 292, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 348, 353, 355, 356, 357, 358, 361, 373, 375, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 403, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436], "packag": [0, 6, 7, 10, 169, 409, 410, 436], "batch": [0, 2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 49, 51, 53, 56, 58, 61, 63, 70, 71, 72, 74, 86, 90, 91, 92, 93, 97, 98, 99, 103, 104, 105, 110, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 171, 176, 179, 183, 184, 187, 194, 201, 203, 205, 208, 212, 219, 222, 224, 228, 229, 231, 235, 236, 238, 241, 253, 259, 260, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 278, 282, 283, 289, 293, 296, 305, 309, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 384, 387, 390, 391, 392, 393, 395, 405, 406, 407, 409, 411, 412, 413, 417, 418, 419, 420, 421, 424, 426, 428, 429, 430, 432, 435, 436], "size": [0, 2, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 96, 97, 98, 99, 103, 104, 105, 106, 112, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 170, 172, 176, 178, 179, 180, 183, 185, 186, 187, 190, 191, 192, 194, 197, 200, 201, 205, 207, 209, 210, 212, 216, 218, 219, 220, 222, 224, 225, 228, 229, 230, 231, 234, 236, 238, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 292, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 375, 384, 390, 409, 411, 412, 417, 418, 419, 420, 421, 422, 424, 429, 430, 431, 436], "copi": [0, 2, 3, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 69, 74, 75, 76, 77, 78, 79, 80, 81, 90, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 175, 179, 197, 210, 221, 227, 228, 229, 236, 238, 239, 261, 265, 273, 301, 323, 338, 343, 373, 409, 412, 416, 417, 419, 421, 429, 433, 435], "interoper": [0, 14, 15, 409], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 36, 38, 39, 40, 41, 42, 44, 47, 49, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 70, 71, 72, 76, 91, 99, 105, 110, 118, 121, 124, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 172, 179, 180, 187, 200, 207, 212, 222, 227, 229, 234, 238, 245, 246, 259, 260, 261, 263, 264, 265, 266, 272, 308, 312, 321, 322, 323, 325, 327, 329, 330, 336, 337, 340, 341, 343, 345, 346, 350, 355, 356, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 373, 407, 409, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 435], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 40, 41, 42, 44, 55, 57, 62, 66, 76, 133, 227, 409, 424, 435], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 61, 70, 71, 99, 118, 147, 148, 199, 203, 240, 242, 253, 254, 255, 256, 262, 268, 269, 270, 278, 279, 280, 281, 285, 286, 289, 290, 291, 301, 302, 303, 306, 310, 311, 320, 321, 322, 323, 328, 329, 330, 336, 337, 340, 341, 342, 343, 345, 346, 409, 412, 413, 417, 418, 420, 422, 424, 429, 430, 431, 435, 436], "helper": [0, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 416, 417, 419, 429, 431], "compos": [0, 3, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 98, 99, 100, 101, 110, 111, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 184, 197, 211, 227, 228, 229, 236, 238, 304, 305, 323, 332, 343, 375, 409, 416, 417, 418, 419, 420, 424, 428, 430, 432, 433, 435, 436], "episod": [0, 3, 44, 97, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 175, 212, 215, 221, 242, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 409, 417, 421, 426, 429, 430, 433], "format": [0, 3, 27, 35, 38, 47, 48, 49, 50, 53, 54, 59, 60, 64, 67, 68, 69, 76, 87, 88, 95, 102, 110, 118, 121, 125, 132, 133, 145, 146, 147, 153, 154, 179, 183, 207, 222, 228, 229, 232, 234, 238, 309, 375, 409, 416, 417, 420, 421, 423, 425, 435, 436], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 118, 121, 125, 132, 133, 139, 145, 146, 149, 153, 154, 157, 158, 171, 172, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 196, 198, 199, 200, 201, 203, 205, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 258, 282, 286, 297, 301, 302, 303, 306, 307, 308, 309, 310, 311, 313, 321, 323, 325, 328, 329, 341, 343, 345, 346, 353, 409, 431], "tree": [0, 1, 39, 40, 41, 44, 55, 57, 62, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 409, 429, 433], "forest": [0, 44, 76, 409], "human": [0, 24, 409, 431], "feedback": [0, 409, 426, 435], "rlhf": [0, 199, 409, 411], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 116, 117, 118, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 141, 143, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 164, 167, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 203, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 255, 258, 261, 265, 282, 284, 286, 297, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 409, 411, 412, 416, 417, 418, 419, 420, 421, 422, 426, 428, 429, 430, 435], "lock": [0, 31, 32, 39, 40, 41, 42, 55, 57, 62, 66, 76, 118, 121, 125, 131, 132, 133, 145, 146, 153, 154, 176, 184, 222, 236, 409, 412, 431], "method": [0, 1, 2, 4, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 96, 97, 99, 104, 105, 106, 107, 108, 110, 112, 118, 121, 124, 125, 126, 127, 131, 132, 133, 145, 146, 149, 150, 153, 154, 167, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 198, 199, 201, 203, 206, 207, 208, 209, 210, 211, 212, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 253, 258, 261, 265, 271, 272, 273, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 317, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 334, 336, 338, 340, 341, 342, 343, 345, 346, 353, 359, 373, 374, 404, 409, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 431, 433, 436], "partial": [0, 2, 118, 121, 125, 132, 133, 145, 146, 153, 154, 178, 179, 187, 221, 222, 223, 306, 393, 409, 419], "step": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 49, 63, 76, 87, 88, 95, 97, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 170, 171, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 194, 195, 198, 199, 201, 203, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 238, 240, 241, 242, 256, 258, 259, 261, 263, 265, 267, 268, 281, 282, 305, 306, 310, 320, 331, 340, 354, 355, 356, 357, 358, 361, 362, 363, 374, 377, 384, 388, 393, 409, 413, 417, 419, 420, 422, 423, 425, 426, 428, 431, 432, 435], "reset": [0, 1, 2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 99, 105, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 159, 171, 174, 175, 176, 179, 187, 191, 194, 198, 202, 207, 215, 220, 221, 222, 223, 224, 227, 228, 229, 232, 235, 236, 238, 239, 244, 259, 261, 265, 273, 282, 295, 305, 338, 374, 409, 412, 416, 417, 418, 419, 421, 424, 428, 429, 430, 435], "vector": [0, 1, 8, 25, 53, 116, 117, 126, 130, 131, 136, 147, 148, 150, 157, 158, 189, 235, 248, 250, 259, 260, 263, 264, 266, 355, 358, 368, 369, 370, 371, 372, 409, 411, 412, 416, 417, 419, 428, 429, 430, 431, 432, 436], "custom": [0, 2, 5, 27, 38, 49, 59, 60, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 232, 238, 271, 272, 313, 319, 330, 340, 347, 407, 409, 411, 416, 417, 418, 419, 422, 423, 425, 429, 430], "nativ": [0, 1, 7, 9, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 375, 409, 419, 433], "auto": [0, 92, 112, 121, 174, 175, 229, 235, 282, 321, 323, 329, 339, 341, 343, 345, 346, 409, 412, 429, 430], "dynam": [0, 2, 7, 14, 15, 16, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 164, 238, 328, 336, 409, 418, 421, 431], "mask": [0, 1, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 173, 208, 238, 243, 244, 255, 258, 269, 270, 284, 301, 302, 303, 307, 308, 329, 343, 390, 409, 417, 419, 420, 436], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 44, 53, 63, 67, 69, 76, 96, 97, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 164, 170, 172, 173, 176, 182, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 203, 205, 209, 210, 212, 216, 220, 222, 226, 228, 229, 230, 231, 235, 238, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 261, 265, 266, 267, 268, 269, 270, 271, 280, 282, 283, 284, 286, 289, 290, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 403, 407, 409, 411, 413, 416, 417, 418, 420, 421, 422, 423, 428, 429, 430, 432, 435, 436], "record": [0, 2, 11, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 165, 172, 199, 238, 340, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 388, 403, 409, 417, 418, 422, 426, 429], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 189, 197, 222, 230, 297, 302, 303, 306, 307, 308, 309, 310, 311, 312, 317, 409, 418, 423, 429, 430, 431, 435, 436], "actor": [0, 3, 4, 21, 149, 199, 242, 247, 248, 250, 255, 256, 258, 268, 280, 282, 284, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 353, 409, 412, 417, 419, 421, 423, 426, 429, 432, 435], "explor": [0, 1, 237, 240, 243, 258, 275, 282, 297, 302, 303, 306, 307, 308, 309, 310, 320, 338, 388, 398, 399, 403, 409, 418, 419, 420, 421, 423, 424, 426, 429, 430, 431], "valu": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 96, 97, 99, 104, 105, 110, 118, 121, 125, 132, 133, 136, 145, 146, 153, 154, 159, 164, 169, 170, 171, 172, 175, 177, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 197, 202, 203, 207, 208, 211, 212, 213, 215, 217, 219, 222, 223, 228, 229, 234, 236, 238, 239, 240, 241, 244, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 268, 269, 270, 271, 272, 274, 275, 278, 282, 283, 284, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 383, 384, 386, 387, 388, 389, 390, 393, 403, 409, 413, 417, 420, 423, 424, 425, 428, 429, 430, 431, 433, 435, 436], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 59, 61, 63, 65, 66, 70, 71, 74, 76, 77, 78, 79, 80, 81, 99, 101, 103, 118, 121, 122, 125, 132, 133, 137, 138, 139, 142, 145, 146, 147, 148, 151, 152, 153, 154, 171, 176, 183, 184, 186, 187, 188, 192, 197, 199, 201, 203, 209, 210, 215, 216, 220, 222, 226, 228, 230, 235, 238, 243, 244, 253, 261, 265, 269, 270, 278, 297, 306, 310, 314, 315, 334, 341, 348, 355, 360, 368, 378, 393, 409, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "hook": [0, 2, 27, 35, 38, 49, 56, 59, 60, 61, 64, 67, 69, 70, 71, 99, 113, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 284, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 409], "planner": [0, 242, 268, 409], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 96, 97, 99, 100, 103, 104, 105, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 170, 171, 172, 173, 175, 176, 177, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 197, 199, 200, 203, 205, 207, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 228, 229, 230, 232, 234, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 318, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 384, 391, 392, 403, 409, 411, 413, 416, 417, 418, 419, 420, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 435, 436], "vmap": [0, 259, 260, 263, 264, 273, 293, 309, 312, 338, 409, 411], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 60, 63, 65, 66, 74, 77, 78, 79, 80, 81, 98, 110, 118, 121, 125, 132, 133, 139, 145, 146, 149, 153, 154, 159, 172, 187, 189, 202, 203, 222, 229, 244, 258, 259, 261, 263, 265, 306, 309, 310, 317, 321, 338, 341, 388, 397, 409, 411, 416, 417, 418, 420, 421, 422, 424, 431, 432, 433, 435, 436], "sac": [0, 329, 341, 343, 409], "redq": [0, 341, 409], "crossq": [0, 323, 409], "iql": [0, 328, 336, 409, 416, 429, 430], "cql": [0, 321, 327, 409], "gail": [0, 334, 409], "dt": [0, 146, 282, 409, 431], "td3": [0, 345, 346, 409], "bc": [0, 5, 345, 409], "a2c": [0, 320, 409], "dreamer": [0, 165, 166, 256, 331, 332, 333, 409, 411], "checkpoint": [0, 61, 88, 90, 94, 106, 107, 109, 113, 409, 433], "builder": [0, 409, 417, 436], "logger": [0, 3, 11, 373, 375, 377, 378, 379, 380, 381, 382, 387, 393, 403, 407, 409, 417, 429], "_util": [0, 3, 145, 239, 409, 420, 426], "implement_for": [0, 3, 409], "set_auto_unwrap_transformed_env": [0, 12, 229, 409], "auto_unwrap_transformed_env": [0, 383, 409], "thing": [0, 3, 7, 8, 118, 121, 125, 132, 133, 145, 146, 153, 154, 228, 271, 272, 329, 343, 410, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 433, 436], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 42, 49, 56, 59, 60, 61, 64, 66, 69, 70, 71, 90, 92, 104, 105, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 189, 236, 238, 253, 271, 272, 289, 321, 323, 336, 341, 343, 345, 346, 355, 357, 358, 410, 412, 416, 421, 422, 423, 431, 433], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 103, 104, 105, 106, 108, 112, 118, 121, 122, 124, 125, 126, 131, 132, 133, 136, 137, 138, 140, 142, 145, 146, 147, 148, 153, 154, 157, 158, 168, 170, 173, 175, 178, 179, 183, 186, 187, 189, 190, 199, 200, 202, 203, 207, 208, 215, 222, 224, 227, 228, 229, 232, 234, 235, 236, 238, 239, 241, 242, 253, 255, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 281, 284, 290, 305, 306, 309, 310, 312, 316, 321, 322, 323, 325, 329, 330, 336, 337, 338, 340, 341, 343, 345, 346, 347, 353, 354, 355, 356, 357, 358, 373, 374, 375, 377, 380, 382, 390, 407, 410, 411, 412, 413, 416, 417, 418, 419, 420, 422, 424, 425, 429, 430, 431, 432, 433, 435, 436], "debug": [0, 6, 8, 44, 63, 76, 224, 410, 436], "work": [0, 1, 2, 3, 4, 8, 27, 38, 49, 59, 60, 61, 64, 69, 90, 97, 102, 104, 105, 108, 115, 118, 121, 124, 125, 126, 129, 132, 133, 145, 146, 150, 153, 154, 167, 170, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 239, 245, 246, 266, 303, 308, 313, 322, 337, 340, 393, 410, 411, 416, 417, 418, 419, 421, 424, 428, 429, 430, 431, 432, 433, 435, 436], "habitat": [0, 3, 127, 410, 432], "lab": [0, 3, 119, 120, 127, 410], "mujoco": [0, 6, 8, 150, 410, 416, 418, 419], "error": [0, 1, 3, 7, 10, 25, 26, 27, 30, 34, 38, 39, 40, 41, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 60, 62, 64, 65, 69, 76, 90, 118, 121, 125, 132, 133, 145, 146, 153, 154, 155, 159, 160, 208, 227, 238, 239, 338, 410, 412, 416, 418, 429, 430, 436], "solut": [0, 2, 3, 6, 7, 9, 21, 104, 410, 411, 413, 420, 435], "resourc": [0, 1, 21, 127, 410, 416, 418, 420, 429, 430], "issu": [0, 2, 3, 4, 5, 8, 88, 90, 92, 104, 112, 118, 121, 124, 125, 129, 132, 133, 145, 146, 153, 154, 170, 179, 208, 223, 297, 302, 303, 306, 307, 308, 309, 310, 410, 435], "customis": [0, 410, 417, 425], "video": [0, 4, 9, 375, 377, 380, 382, 388, 407, 409, 410, 426, 429, 430], "render": [0, 3, 8, 131, 157, 373, 375, 388, 410, 416, 417, 418, 420, 421, 425], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 91, 92, 96, 97, 99, 100, 102, 104, 108, 110, 111, 112, 114, 115, 118, 121, 125, 132, 133, 137, 138, 143, 144, 145, 146, 153, 154, 157, 158, 170, 174, 179, 183, 189, 229, 269, 270, 409, 421, 428, 429, 430, 433, 435], "search": [0, 2, 31, 32, 42, 66, 76, 142, 171, 417], "page": [0, 7, 24, 382, 423], "somewhat": [1, 2, 412, 422, 436], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 39, 40, 41, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 69, 70, 71, 75, 76, 86, 116, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 176, 188, 191, 222, 224, 229, 238, 255, 263, 266, 284, 302, 303, 307, 308, 340, 390, 424, 435, 436], "dataload": [1, 86, 103, 105, 132, 187, 417, 424, 433], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 193, 212, 221, 222, 223, 227, 229, 238, 240, 258, 259, 261, 263, 265, 278, 282, 320, 323, 338, 340, 343, 375, 411, 416, 417, 421, 429, 433, 435, 436], "1": [1, 2, 3, 4, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 96, 97, 99, 104, 105, 110, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 164, 170, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 197, 199, 200, 201, 203, 205, 207, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 234, 236, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 278, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 369, 370, 372, 373, 375, 384, 388, 390, 391, 403, 407, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 97, 99, 118, 121, 124, 125, 126, 132, 133, 136, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 175, 178, 193, 199, 207, 216, 224, 228, 229, 234, 238, 265, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 390, 393, 411, 412, 413, 416, 417, 418, 419, 420, 423, 428, 429, 430, 431, 432, 433, 435, 436], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 85, 97, 99, 103, 104, 105, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 170, 172, 187, 189, 203, 215, 223, 238, 278, 281, 290, 293, 312, 330, 332, 338, 361, 373, 396, 411, 413, 416, 417, 418, 420, 421, 422, 423, 424, 429, 430, 431, 436], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 42, 43, 49, 51, 52, 55, 56, 57, 59, 60, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 91, 93, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 170, 176, 177, 179, 183, 187, 194, 207, 219, 222, 228, 229, 230, 231, 232, 234, 238, 244, 259, 261, 263, 265, 271, 309, 310, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 411, 416, 419, 420, 429, 430, 431, 433, 436], "static": [1, 59, 63, 69, 75, 97, 104, 105, 127, 146, 236, 239, 336, 421, 431, 433], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 42, 44, 49, 51, 56, 59, 60, 61, 64, 66, 69, 70, 71, 75, 93, 99, 105, 118, 121, 122, 125, 127, 132, 133, 136, 145, 146, 147, 148, 153, 154, 159, 179, 191, 222, 225, 238, 259, 263, 272, 304, 310, 320, 322, 337, 340, 341, 342, 411, 412, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 436], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 65, 69, 86, 91, 110, 113, 118, 121, 124, 125, 126, 127, 131, 132, 133, 145, 146, 150, 153, 154, 168, 178, 186, 189, 190, 197, 202, 210, 222, 227, 228, 229, 238, 258, 261, 265, 282, 322, 323, 337, 338, 340, 343, 375, 390, 395, 405, 406, 407, 411, 412, 416, 417, 418, 419, 424, 429, 430, 431, 433], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 61, 62, 64, 69, 76, 77, 86, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 174, 179, 183, 194, 197, 207, 215, 219, 222, 227, 228, 229, 230, 231, 232, 234, 238, 266, 293, 309, 310, 311, 323, 343, 375, 413, 418, 420, 421, 425, 433, 435, 436], "two": [1, 2, 3, 4, 8, 10, 27, 38, 44, 45, 46, 47, 48, 49, 56, 59, 60, 61, 63, 64, 69, 70, 71, 76, 99, 103, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 203, 207, 227, 234, 238, 251, 259, 261, 263, 265, 271, 272, 287, 290, 310, 337, 345, 349, 388, 393, 412, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 431, 433, 435, 436], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 122, 179, 310, 393, 411, 412, 416, 417, 428, 435, 436], "argument": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 96, 97, 99, 102, 103, 104, 105, 108, 110, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 164, 170, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 191, 192, 193, 195, 197, 198, 199, 201, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 258, 259, 261, 263, 265, 266, 269, 270, 271, 272, 274, 282, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 348, 353, 355, 356, 357, 358, 359, 363, 373, 374, 375, 380, 382, 386, 393, 396, 403, 404, 407, 416, 417, 418, 419, 420, 421, 422, 424, 429, 430, 431, 433, 435, 436], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 91, 93, 99, 102, 103, 104, 105, 106, 108, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 160, 170, 177, 178, 182, 186, 187, 188, 190, 199, 200, 203, 205, 207, 215, 217, 225, 226, 227, 228, 229, 231, 232, 234, 236, 238, 244, 245, 246, 248, 254, 257, 261, 265, 266, 269, 270, 276, 284, 303, 305, 307, 308, 310, 312, 313, 314, 321, 323, 336, 338, 341, 343, 345, 346, 352, 355, 358, 373, 374, 388, 390, 405, 406, 412, 416, 418, 421, 422, 423, 424, 428, 429, 431, 432, 433, 435, 436], "constructor": [1, 2, 3, 16, 18, 19, 20, 21, 61, 75, 96, 110, 118, 121, 125, 132, 133, 140, 145, 146, 153, 154, 157, 175, 179, 227, 245, 246, 266, 296, 306, 310, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 404, 407, 411, 416, 417, 418, 421, 424, 429, 430, 433, 435], "iter": [1, 2, 3, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 85, 86, 93, 99, 103, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 187, 192, 203, 216, 238, 239, 241, 243, 244, 245, 246, 266, 271, 272, 288, 297, 302, 306, 307, 309, 311, 312, 314, 338, 352, 388, 392, 393, 412, 413, 416, 418, 419, 424, 426, 429, 430, 431], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 56, 58, 59, 60, 61, 64, 69, 70, 71, 74, 90, 91, 99, 104, 105, 116, 117, 118, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 139, 140, 145, 146, 150, 153, 154, 155, 173, 184, 201, 224, 229, 238, 258, 259, 261, 263, 265, 273, 296, 305, 311, 312, 338, 345, 397, 407, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 433, 434, 435, 436], "queri": [1, 2, 3, 14, 27, 38, 39, 40, 41, 44, 49, 55, 57, 59, 60, 62, 64, 69, 76, 91, 118, 121, 125, 132, 133, 145, 146, 153, 154, 207, 232, 236, 238, 312, 412, 416, 423, 431, 435], "defin": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 208, 221, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 273, 276, 277, 280, 281, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 317, 325, 327, 338, 355, 356, 357, 358, 359, 374, 404, 411, 416, 417, 419, 423, 426, 431, 433, 436], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 96, 97, 99, 102, 104, 105, 112, 116, 117, 118, 121, 124, 125, 126, 130, 131, 132, 133, 139, 140, 141, 142, 145, 146, 147, 148, 153, 154, 157, 158, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 189, 191, 192, 193, 195, 198, 199, 202, 203, 206, 208, 209, 210, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 238, 240, 241, 242, 245, 246, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 276, 277, 282, 283, 285, 286, 289, 290, 291, 292, 297, 301, 305, 306, 309, 310, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 380, 382, 384, 386, 388, 393, 395, 396, 397, 405, 406, 407, 411, 412, 416, 417, 418, 419, 421, 422, 424, 426, 429, 430, 431, 432, 433, 436], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 38, 44, 45, 46, 49, 59, 60, 64, 69, 75, 76, 103, 105, 110, 118, 121, 125, 126, 132, 133, 145, 146, 153, 154, 159, 172, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 238, 243, 259, 261, 265, 266, 274, 275, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 356, 357, 358, 390, 416, 418, 419, 420, 424, 425, 429, 430, 431, 433, 436], "deliv": [1, 2, 3, 16, 416, 417, 421, 424, 435], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 61, 62, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 84, 91, 96, 99, 118, 121, 124, 125, 126, 132, 133, 136, 145, 146, 147, 148, 153, 154, 179, 187, 201, 236, 259, 261, 263, 264, 265, 305, 311, 312, 321, 323, 336, 341, 343, 345, 346, 374, 384, 409, 417, 420, 421, 428, 429, 431, 435], "user": [1, 2, 3, 5, 8, 23, 27, 38, 44, 49, 59, 60, 64, 69, 76, 97, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 155, 159, 180, 197, 221, 227, 229, 238, 252, 323, 340, 343, 345, 375, 404, 412, 413, 416, 417, 421, 423, 424, 431, 435, 436], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 63, 103, 118, 121, 125, 131, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 201, 220, 240, 258, 282, 416, 418, 426, 429, 430, 435, 436], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 65, 66, 67, 69, 74, 76, 77, 78, 79, 80, 81, 87, 88, 95, 97, 99, 104, 105, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 170, 171, 172, 173, 175, 176, 179, 186, 187, 188, 190, 191, 192, 197, 201, 202, 203, 205, 209, 210, 212, 214, 216, 219, 220, 222, 223, 227, 228, 229, 230, 236, 238, 242, 259, 261, 265, 268, 290, 305, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 411, 412, 416, 418, 419, 420, 421, 423, 424, 426, 428, 429, 430, 431, 433, 435, 436], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 44, 49, 56, 59, 60, 61, 63, 64, 67, 69, 70, 71, 76, 87, 88, 95, 99, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 139, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 159, 170, 171, 175, 178, 179, 180, 182, 183, 184, 187, 188, 191, 194, 197, 201, 203, 210, 220, 221, 226, 227, 228, 229, 230, 231, 236, 238, 242, 247, 252, 256, 259, 260, 261, 263, 264, 265, 266, 268, 273, 276, 280, 283, 285, 286, 292, 298, 305, 309, 315, 320, 322, 323, 327, 329, 337, 338, 340, 341, 342, 343, 353, 354, 355, 356, 357, 358, 359, 393, 407, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 436], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 63, 64, 69, 76, 92, 99, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 170, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 241, 258, 259, 261, 265, 274, 302, 307, 323, 332, 343, 345, 417, 418, 419, 420, 421, 422, 424, 426, 429, 430, 431, 432, 433, 436], "predefin": [1, 375, 417, 419, 424, 433, 435], "becaus": [1, 2, 3, 4, 7, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 63, 64, 69, 76, 91, 118, 121, 125, 132, 133, 145, 146, 153, 154, 191, 199, 220, 235, 238, 251, 272, 297, 302, 303, 305, 306, 307, 308, 309, 310, 320, 340, 411, 416, 417, 419, 420, 422, 423, 424, 428, 429, 430, 431, 433, 436], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 431, 433], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 49, 59, 60, 63, 64, 69, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 171, 203, 217, 229, 233, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 276, 277, 278, 280, 282, 285, 286, 288, 290, 291, 293, 298, 301, 303, 305, 306, 308, 310, 313, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 397, 412, 416, 418, 419, 420, 421, 422, 428, 429, 430, 432, 433], "heavi": [1, 8, 433], "crucial": [1, 2, 3, 240, 258, 282, 328, 336, 338, 416, 417, 418, 419, 421, 423, 425, 429, 430, 431, 435, 436], "configur": [1, 8, 21, 22, 63, 118, 199, 247, 252, 280, 338, 340, 411, 416, 417, 418, 423, 429, 430, 431], "hyperparamet": [1, 102, 238, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 416, 425, 431, 433], "appropri": [1, 3, 4, 7, 89, 100, 110, 111, 114, 115, 133, 145, 153, 191, 404, 407, 416, 425, 433], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 103, 106, 108, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 411, 412, 416, 419, 420, 422, 426, 429, 430, 431, 432, 435], "take": [1, 2, 3, 8, 23, 27, 38, 44, 59, 60, 63, 64, 69, 107, 113, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 182, 220, 223, 224, 228, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 304, 305, 306, 308, 310, 313, 316, 319, 340, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 384, 395, 411, 413, 416, 417, 418, 420, 421, 422, 423, 429, 430, 431, 433, 436], "consider": [1, 2, 3, 8, 124, 126, 228, 417, 429, 430, 433], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 90, 92, 99, 100, 112, 118, 121, 125, 131, 132, 133, 137, 138, 139, 145, 146, 147, 148, 153, 154, 157, 158, 171, 175, 184, 186, 187, 190, 221, 227, 229, 236, 238, 245, 246, 261, 265, 266, 310, 314, 320, 321, 322, 323, 324, 325, 327, 329, 330, 334, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 358, 383, 407, 416, 417, 418, 420, 421, 429, 430, 431, 435, 436], "should": [1, 2, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 93, 97, 99, 104, 105, 106, 110, 113, 118, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 136, 139, 145, 146, 147, 148, 153, 154, 157, 158, 159, 170, 171, 172, 175, 176, 179, 182, 183, 186, 188, 191, 192, 194, 199, 200, 201, 203, 208, 209, 210, 212, 215, 216, 220, 221, 223, 226, 228, 229, 230, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 306, 308, 309, 310, 313, 316, 320, 322, 323, 329, 335, 337, 338, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 375, 377, 383, 388, 389, 390, 393, 403, 405, 406, 407, 411, 412, 413, 416, 417, 418, 419, 420, 422, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "occur": [1, 8, 15, 59, 65, 66, 69, 76, 118, 121, 125, 127, 132, 133, 145, 146, 153, 154, 171, 180, 192, 203, 208, 235, 241, 297, 302, 303, 306, 307, 308, 309, 310, 332, 420, 433, 436], "serial": [1, 2, 3, 27, 38, 49, 56, 59, 60, 61, 64, 67, 69, 70, 71, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 236, 238], "parallel": [1, 3, 8, 118, 121, 124, 125, 126, 132, 133, 145, 146, 147, 148, 153, 154, 159, 229, 235, 261, 265, 320, 404, 405, 406, 407, 417, 418, 429, 430, 435], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 49, 67, 176, 179, 212, 243, 261, 265, 403, 406, 409, 416, 417, 418, 419, 420, 424, 426, 429, 430, 433], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 136, 139, 142, 145, 146, 147, 148, 150, 153, 154, 155, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 405, 406, 407, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 429, 430, 433, 436], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 41, 55, 57, 62, 74, 75, 76, 86, 122, 140, 145, 153, 227, 236, 405, 406, 407, 416, 417, 418, 435, 436], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 243, 406, 409, 418, 424, 435], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 37, 42, 55, 57, 66, 75, 86, 97, 104, 105, 136, 147, 148, 259, 263, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 411, 413, 418, 422, 433, 435], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 56, 60, 61, 64, 70, 71, 97, 104, 105, 116, 117, 119, 120, 124, 126, 127, 129, 130, 131, 140, 141, 145, 150, 154, 227, 236, 238, 261, 265, 271, 281, 282, 338, 395, 409, 411, 412, 416, 421, 425, 429, 430, 431], "aggreg": [1, 3, 27, 59, 97, 110, 147, 148, 171, 200, 245, 246, 248, 249, 312, 412, 430], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 39, 40, 41, 49, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 70, 71, 76, 77, 97, 99, 103, 104, 105, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 159, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 243, 258, 259, 261, 263, 265, 266, 271, 284, 290, 301, 303, 308, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 395, 412, 417, 419, 421, 422, 425, 426, 431, 432, 435, 436], "final": [1, 2, 3, 4, 21, 39, 40, 41, 44, 55, 57, 62, 63, 76, 222, 235, 240, 258, 259, 261, 263, 265, 271, 282, 304, 311, 355, 388, 411, 416, 417, 418, 420, 425, 426, 429, 430, 431, 436], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 243, 405, 409, 416, 417, 418, 424, 435], "sever": [1, 2, 3, 8, 27, 38, 45, 49, 59, 60, 64, 69, 75, 118, 121, 125, 132, 133, 145, 146, 153, 154, 180, 182, 200, 229, 238, 340, 416, 418, 420, 425, 426, 433, 436], "gather": [1, 3, 18, 20, 21, 44, 75, 86, 90, 92, 97, 104, 112, 201, 208, 270, 273, 278, 338, 354, 397, 410, 417, 418, 419, 424, 429, 430, 431, 433, 435, 436], "continu": [1, 2, 3, 9, 28, 31, 44, 77, 78, 79, 105, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 157, 158, 164, 172, 197, 222, 230, 248, 249, 250, 251, 281, 282, 312, 317, 321, 344, 355, 360, 368, 411, 416, 418, 422, 429, 430, 433], "concomitantli": [1, 118, 121, 125, 132, 133, 145, 146, 153, 154], "network": [1, 4, 8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 238, 245, 246, 248, 249, 250, 251, 254, 256, 257, 263, 266, 271, 272, 273, 275, 276, 277, 279, 281, 283, 285, 286, 287, 292, 298, 299, 300, 301, 309, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 351, 353, 355, 356, 357, 358, 359, 402, 403, 411, 412, 413, 420, 423, 426, 428, 431, 436], "impli": [1, 76, 436], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 56, 59, 60, 63, 64, 69, 97, 99, 102, 116, 117, 118, 121, 125, 132, 133, 145, 146, 151, 152, 153, 154, 183, 197, 200, 207, 222, 227, 228, 229, 232, 234, 238, 259, 260, 261, 263, 264, 265, 271, 273, 275, 309, 320, 321, 322, 323, 329, 332, 343, 345, 395, 402, 411, 413, 416, 417, 418, 428, 431, 433, 435], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 88, 91, 97, 104, 118, 121, 124, 125, 126, 127, 132, 133, 145, 146, 150, 153, 154, 159, 199, 203, 216, 227, 229, 231, 236, 238, 241, 261, 265, 266, 271, 310, 322, 329, 337, 340, 343, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 436], "slightli": [1, 23, 412, 419, 420, 429, 431, 432, 433, 436], "lag": [1, 416, 417, 418], "therefor": [1, 2, 3, 7, 56, 61, 70, 71, 118, 121, 125, 132, 133, 145, 146, 153, 154, 212, 340, 353, 420, 423, 429, 436], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 179], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 38, 39, 40, 41, 44, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 86, 88, 90, 92, 97, 99, 104, 105, 110, 112, 113, 118, 121, 125, 132, 133, 136, 139, 142, 145, 146, 147, 148, 153, 154, 167, 170, 171, 172, 173, 176, 179, 191, 199, 207, 212, 215, 220, 221, 222, 223, 224, 228, 229, 231, 234, 235, 238, 240, 258, 259, 260, 261, 263, 264, 265, 269, 270, 271, 279, 281, 282, 301, 306, 309, 310, 319, 320, 321, 322, 323, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 412, 413, 416, 417, 418, 420, 421, 428, 429, 430, 431, 433, 436], "asynchron": [1, 9, 15, 21, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309, 320, 405, 416, 417, 418], "off": [1, 2, 4, 262, 291, 302, 343, 373, 388, 398, 411, 413, 416, 417, 418, 422, 423, 429, 430, 432, 435, 436], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 90, 92, 97, 99, 104, 112, 118, 121, 124, 125, 126, 131, 132, 133, 145, 146, 147, 148, 153, 154, 155, 157, 159, 179, 186, 190, 194, 203, 221, 228, 229, 235, 238, 255, 259, 261, 263, 265, 272, 274, 298, 300, 301, 303, 307, 320, 328, 330, 336, 340, 388, 411, 412, 413, 416, 417, 418, 419, 421, 422, 424, 425, 429, 430, 431, 432, 433, 436], "remot": [1, 2, 18, 19, 20, 21, 145, 153, 436], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 44, 63, 69, 76, 110, 116, 117, 118, 121, 125, 127, 128, 130, 131, 132, 133, 137, 138, 139, 140, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 172, 173, 175, 176, 179, 182, 184, 186, 187, 190, 191, 192, 197, 199, 200, 205, 209, 210, 215, 216, 217, 220, 221, 223, 224, 227, 230, 236, 238, 242, 243, 244, 261, 265, 268, 282, 305, 320, 373, 375, 397, 411, 416, 418, 419, 422, 423, 424, 425, 426, 432, 433, 435], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 187, 216, 341, 355, 356, 357, 358, 359, 412, 416, 418, 422, 423, 424], "synchronis": [1, 122, 429, 430], "either": [1, 2, 5, 22, 25, 27, 38, 49, 56, 59, 60, 61, 63, 64, 69, 70, 71, 76, 86, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 201, 220, 221, 238, 315, 338, 345, 346, 379, 413, 416, 417, 419, 429, 432, 433, 435, 436], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 416, 430, 435], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 96, 97, 99, 100, 102, 103, 104, 105, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 175, 176, 178, 179, 180, 183, 184, 187, 189, 192, 194, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 211, 214, 215, 216, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 289, 290, 291, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 382, 383, 386, 387, 388, 390, 393, 407, 411, 412, 413, 416, 417, 418, 419, 420, 422, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "second": [1, 2, 3, 8, 23, 44, 45, 46, 47, 48, 110, 145, 176, 224, 259, 261, 263, 265, 303, 322, 337, 340, 343, 375, 377, 380, 382, 392, 416, 418, 424, 429, 430, 431, 433, 435, 436], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 96, 104, 105, 112, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 167, 170, 172, 176, 183, 186, 187, 188, 190, 191, 192, 197, 199, 200, 205, 206, 207, 209, 210, 212, 216, 219, 220, 222, 225, 228, 229, 230, 232, 234, 236, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 274, 275, 280, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 390, 395, 401, 411, 416, 417, 418, 419, 420, 429, 430, 431, 432, 435], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 69, 74, 75, 76, 77, 78, 79, 80, 81, 91, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 194, 199, 224, 226, 230, 238, 254, 255, 260, 264, 298, 299, 300, 302, 303, 304, 309, 315, 320, 322, 324, 325, 330, 337, 340, 342, 353, 354, 355, 356, 357, 358, 393, 409, 412, 413, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 431, 436], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 39, 40, 41, 49, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 70, 71, 72, 74, 75, 76, 77, 87, 88, 90, 91, 92, 95, 97, 99, 104, 105, 112, 118, 120, 121, 122, 124, 125, 126, 132, 133, 139, 145, 146, 153, 154, 159, 164, 171, 203, 222, 229, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 316, 321, 323, 325, 328, 329, 336, 338, 341, 343, 345, 346, 353, 355, 356, 357, 358, 373, 375, 379, 383, 388, 397, 398, 399, 403, 405, 406, 411, 412, 413, 416, 418, 419, 420, 421, 422, 431, 433, 436], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 96, 104, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 164, 170, 172, 176, 183, 186, 187, 188, 190, 191, 192, 197, 200, 205, 207, 209, 210, 212, 216, 219, 220, 222, 228, 229, 230, 232, 234, 238, 242, 244, 254, 259, 260, 261, 263, 264, 265, 268, 274, 275, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 373, 411, 416, 417, 418, 419, 429, 430, 431, 432, 435], "slower": [1, 429], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 59, 76, 97, 104, 105, 108, 110, 118, 121, 125, 129, 132, 133, 143, 144, 145, 146, 150, 153, 154, 187, 200, 201, 210, 240, 251, 261, 263, 265, 266, 293, 297, 302, 309, 310, 314, 338, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 410, 411, 412, 416, 417, 418, 420, 421, 423, 429, 430, 431, 433, 435, 436], "one": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 95, 96, 97, 99, 100, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 172, 173, 176, 179, 182, 184, 186, 188, 189, 190, 197, 200, 202, 203, 207, 212, 215, 218, 219, 221, 222, 223, 228, 229, 231, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 272, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 288, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 316, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 350, 353, 355, 356, 357, 358, 362, 363, 375, 377, 386, 388, 389, 393, 397, 407, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 436], "cuda": [1, 2, 3, 7, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 116, 117, 118, 121, 125, 127, 128, 129, 132, 133, 145, 146, 153, 154, 183, 199, 206, 207, 222, 228, 229, 232, 234, 238, 259, 260, 263, 264, 309, 385, 416, 417, 418, 419, 429, 430, 432, 436], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 47, 59, 61, 70, 71, 72, 76, 92, 99, 100, 112, 116, 117, 130, 131, 145, 153, 154, 180, 182, 189, 198, 201, 202, 212, 215, 219, 220, 227, 236, 259, 263, 265, 271, 274, 275, 297, 302, 306, 307, 309, 310, 313, 322, 329, 337, 340, 350, 361, 407, 411, 412, 413, 416, 417, 418, 421, 423, 424, 429, 430, 431, 433, 435], "infer": [1, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 236, 261, 265, 274, 301, 306, 310, 327, 373, 416, 418, 420, 424, 426, 433, 435], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 21, 27, 38, 49, 59, 60, 64, 69, 97, 104, 105, 116, 117, 118, 119, 120, 121, 124, 125, 130, 131, 132, 133, 139, 140, 141, 145, 146, 153, 154, 159, 183, 197, 202, 203, 219, 227, 228, 229, 236, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 310, 311, 312, 313, 316, 323, 329, 343, 375, 382, 388, 405, 406, 407, 410, 411, 412, 413, 416, 417, 418, 419, 422, 423, 424, 425, 426, 429, 430, 431, 435], "dispatch": [1, 3, 18, 19, 20, 21, 59, 69, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 293, 305, 375, 416, 436], "avail": [1, 2, 3, 4, 6, 21, 56, 61, 70, 71, 97, 103, 104, 105, 116, 117, 119, 120, 129, 130, 131, 137, 138, 143, 144, 145, 147, 148, 150, 155, 156, 157, 158, 172, 175, 178, 197, 199, 255, 284, 306, 310, 338, 375, 405, 406, 416, 417, 418, 419, 420, 421, 422, 429, 430, 431, 433, 436], "speed": [1, 2, 4, 8, 30, 118, 121, 125, 132, 133, 145, 146, 153, 154, 412, 416, 417, 418, 419, 429, 430, 431, 433, 435], "avoid": [1, 2, 3, 27, 38, 49, 59, 60, 64, 69, 90, 92, 104, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 169, 179, 197, 227, 229, 236, 238, 241, 290, 297, 309, 314, 322, 323, 337, 340, 343, 396, 418, 420, 430], "oom": [1, 3, 39, 40, 41, 55, 57, 62, 76, 90, 92, 112], "choic": [1, 2, 51, 145, 187, 411, 412, 416, 417, 423, 429, 430], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 42, 49, 51, 56, 59, 60, 61, 63, 64, 66, 69, 70, 71, 74, 75, 88, 90, 92, 97, 99, 104, 105, 110, 112, 118, 121, 122, 123, 125, 126, 132, 133, 136, 140, 145, 146, 147, 148, 153, 154, 157, 175, 176, 179, 184, 186, 190, 200, 201, 210, 227, 231, 236, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 274, 276, 277, 280, 282, 283, 285, 286, 288, 292, 293, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 321, 322, 323, 336, 337, 338, 340, 341, 343, 345, 346, 355, 356, 357, 358, 359, 373, 390, 393, 405, 406, 407, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 433, 435, 436], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 65, 66, 69, 70, 74, 75, 77, 78, 79, 80, 81, 96, 105, 118, 121, 125, 129, 132, 133, 142, 145, 146, 153, 154, 171, 172, 179, 194, 219, 222, 231, 236, 261, 265, 301, 411, 412, 417, 430], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 39, 40, 41, 44, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 70, 71, 72, 75, 76, 86, 88, 90, 91, 92, 93, 96, 97, 99, 104, 110, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 187, 197, 224, 235, 236, 238, 240, 242, 243, 268, 282, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 382, 409, 413, 416, 418, 419, 422, 424, 426, 429, 430, 432, 436], "while": [1, 2, 3, 7, 8, 23, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 212, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 328, 336, 337, 340, 411, 412, 416, 418, 419, 422, 424, 425, 429, 430, 431, 432, 433, 435], "wait": [1, 20, 21, 22, 155, 419, 431], "also": [1, 2, 3, 8, 9, 11, 14, 15, 23, 25, 26, 27, 30, 34, 38, 39, 40, 41, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 60, 61, 62, 64, 69, 70, 74, 76, 86, 90, 91, 92, 97, 99, 104, 105, 110, 112, 118, 121, 125, 131, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 167, 169, 170, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 189, 191, 192, 193, 195, 197, 198, 199, 203, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 245, 246, 259, 263, 266, 286, 305, 306, 311, 312, 313, 320, 321, 323, 324, 325, 327, 328, 329, 334, 336, 340, 343, 345, 355, 362, 363, 373, 375, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 433, 435, 436], "impact": [1, 2, 3, 131, 186, 190, 241, 320, 322, 337, 340, 342, 417, 419, 429, 430], "memori": [1, 3, 8, 21, 27, 30, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 75, 76, 88, 90, 91, 95, 118, 121, 122, 125, 129, 132, 133, 145, 146, 153, 154, 179, 183, 207, 222, 228, 229, 232, 234, 236, 238, 253, 263, 264, 309, 407, 409, 413, 416, 417, 419, 429, 433, 435], "manag": [1, 8, 118, 121, 125, 132, 133, 145, 146, 153, 154, 243, 261, 265, 296, 351, 352, 355, 356, 357, 358, 383, 388, 411, 419, 420, 423, 435], "kei": [1, 2, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 96, 97, 99, 102, 104, 105, 110, 118, 121, 125, 130, 131, 132, 133, 145, 146, 147, 148, 153, 154, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 203, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 240, 242, 244, 254, 255, 258, 261, 265, 267, 268, 282, 284, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 373, 375, 387, 388, 389, 391, 392, 393, 397, 412, 413, 416, 418, 419, 420, 421, 423, 428, 429, 430, 431, 433, 435, 436], "control": [1, 3, 5, 8, 16, 23, 24, 31, 32, 33, 42, 61, 66, 70, 71, 97, 99, 104, 118, 119, 120, 121, 125, 131, 132, 133, 136, 145, 146, 147, 148, 153, 154, 170, 189, 248, 249, 250, 251, 261, 265, 267, 268, 282, 286, 293, 309, 310, 311, 320, 322, 323, 337, 338, 340, 344, 355, 360, 368, 373, 383, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 431, 433, 435], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 99, 102, 103, 110, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 157, 158, 159, 179, 180, 186, 190, 195, 197, 199, 200, 202, 203, 207, 208, 210, 220, 222, 223, 226, 228, 229, 230, 232, 236, 238, 239, 254, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 279, 281, 291, 298, 299, 300, 301, 305, 306, 309, 310, 311, 312, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 373, 375, 384, 389, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 436], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 417, 430], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 45, 46, 47, 48, 53, 54, 56, 57, 60, 61, 63, 64, 70, 71, 75, 86, 88, 93, 97, 99, 102, 104, 118, 121, 122, 125, 131, 132, 133, 145, 146, 147, 148, 153, 154, 175, 176, 179, 182, 186, 190, 192, 194, 195, 197, 201, 205, 217, 219, 222, 224, 226, 227, 229, 230, 231, 236, 238, 241, 243, 244, 261, 265, 272, 355, 357, 358, 388, 393, 412, 416, 417, 418, 419, 422, 423, 424, 426, 429, 430, 431, 433, 436], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 240, 305, 310, 416, 420, 424, 436], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 102, 110, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 227, 275, 340, 345, 354, 355, 356, 357, 358, 359, 374, 410, 411, 412, 413, 416, 417, 418, 419, 422, 424, 425, 430, 433, 436], "same": [1, 2, 3, 4, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 103, 104, 105, 108, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 140, 141, 145, 146, 147, 148, 150, 153, 154, 172, 179, 186, 189, 190, 195, 197, 200, 201, 202, 203, 219, 227, 228, 229, 236, 238, 239, 245, 246, 260, 261, 264, 265, 266, 269, 270, 271, 272, 282, 290, 301, 313, 321, 323, 336, 338, 341, 343, 345, 346, 350, 412, 416, 417, 418, 421, 422, 424, 428, 429, 430, 432, 433, 436], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 90, 91, 92, 96, 97, 99, 100, 102, 103, 104, 105, 110, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 284, 285, 286, 288, 289, 290, 291, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 403, 407, 412, 413, 416, 417, 418, 419, 422, 429, 432, 433, 435, 436], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 49, 59, 60, 64, 69, 74, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 180, 186, 190, 203, 208, 221, 229, 238, 241, 261, 262, 265, 291, 328, 336, 345, 373, 383, 388, 411, 417, 419, 429, 430, 431, 433], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 186, 190, 197, 203, 222, 223, 226, 230, 265, 281, 306, 310, 311, 312, 395, 405, 406, 411, 416, 417, 421, 422, 430, 431, 436], "choos": [1, 11, 51, 118, 136, 261, 265, 340, 409, 412, 416, 417, 418, 420, 429, 430, 433, 435], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 39, 40, 41, 44, 49, 55, 57, 58, 59, 60, 62, 63, 64, 69, 74, 76, 97, 104, 105, 116, 117, 118, 121, 124, 125, 126, 130, 131, 132, 133, 139, 142, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 167, 175, 179, 199, 207, 232, 236, 238, 245, 246, 259, 261, 263, 265, 266, 303, 306, 307, 308, 319, 320, 321, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 375, 393, 411, 412, 413, 416, 417, 418, 419, 420, 423, 424, 428, 429, 430, 431, 433, 435, 436], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 396, 416, 418, 435], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 49, 179, 195, 238, 240, 258, 282, 305, 374, 375, 377, 380, 382, 386, 388, 393, 396, 397, 416, 417, 418, 419, 422, 429, 430, 433, 435, 436], "call": [1, 2, 3, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 90, 91, 92, 93, 97, 98, 99, 103, 104, 106, 108, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 150, 153, 154, 155, 156, 159, 168, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 272, 273, 274, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 309, 310, 312, 313, 316, 322, 323, 337, 338, 340, 343, 345, 354, 355, 356, 357, 358, 373, 374, 377, 388, 412, 413, 417, 418, 419, 420, 421, 422, 424, 425, 429, 430, 431, 433, 435, 436], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 49, 67, 176, 179, 212, 261, 265, 396, 416, 417, 418, 419, 420, 424, 426, 429, 430, 433, 435], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 37, 38, 42, 44, 45, 47, 49, 50, 59, 60, 61, 63, 64, 66, 68, 69, 70, 76, 97, 99, 102, 104, 105, 107, 110, 118, 121, 122, 125, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 172, 187, 198, 200, 201, 207, 212, 215, 220, 221, 222, 223, 227, 228, 234, 236, 238, 239, 240, 255, 258, 259, 260, 261, 263, 265, 271, 272, 276, 283, 284, 292, 296, 302, 303, 308, 310, 312, 361, 364, 365, 366, 367, 369, 370, 371, 372, 375, 388, 390, 405, 406, 412, 416, 417, 418, 419, 422, 423, 424, 426, 429, 430, 431, 432, 433, 435, 436], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 396, 416, 417, 420, 426], "rand_step": [1, 2, 3, 35, 67, 118, 119, 120, 121, 122, 124, 125, 126, 132, 133, 134, 135, 139, 140, 141, 145, 146, 153, 154, 198, 222, 236, 431, 435, 436], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 416], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 416, 417, 418], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 49, 50, 68, 70, 76, 96, 97, 104, 105, 110, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 179, 208, 220, 227, 238, 242, 265, 268, 282, 340, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 384, 409, 412, 416, 417, 418, 419, 421, 424, 426, 431, 435, 436], "pad": [1, 2, 3, 23, 58, 72, 179, 187, 226, 245, 246, 248, 249, 265, 269, 270, 271, 390], "along": [1, 2, 3, 14, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 97, 99, 104, 105, 110, 112, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 164, 178, 179, 180, 201, 203, 205, 208, 215, 219, 225, 238, 265, 266, 269, 270, 275, 302, 306, 309, 310, 323, 338, 345, 416, 417, 419, 421, 423, 429, 430, 431, 433, 435], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 89, 96, 97, 100, 110, 111, 114, 115, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 238, 267, 309, 319, 330, 393, 410, 417, 418, 428, 429, 430, 431, 433, 435, 436], "boolean": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 63, 65, 66, 74, 77, 78, 79, 80, 81, 97, 104, 105, 125, 171, 175, 208, 220, 269, 270, 282, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 413, 419], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 42, 44, 51, 66, 67, 69, 70, 76, 91, 118, 119, 120, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 157, 158, 195, 208, 224, 236, 238, 255, 269, 270, 284, 290, 302, 303, 307, 308, 349, 355, 390, 411, 416, 418, 419, 420, 421, 422, 423, 429, 430], "valid": [1, 2, 3, 23, 55, 57, 58, 75, 76, 86, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 160, 175, 208, 227, 229, 238, 240, 245, 246, 266, 269, 270, 282, 322, 329, 337, 340, 343, 355, 356, 357, 358, 390, 413, 420, 436], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 388, 409, 411, 416, 417], "strategi": [1, 2, 3, 16, 102, 136, 172, 258, 270, 278, 411, 413, 416, 417, 420, 422, 429, 430, 433, 435], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 74, 76, 77, 78, 79, 80, 81, 83, 92, 99, 104, 105, 118, 121, 125, 131, 132, 133, 139, 145, 146, 147, 148, 153, 154, 157, 160, 176, 178, 179, 184, 191, 199, 220, 221, 222, 227, 229, 235, 236, 238, 239, 240, 245, 246, 261, 265, 269, 270, 271, 272, 281, 302, 306, 307, 310, 313, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 346, 353, 375, 393, 403, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 436], "organ": [1, 2, 431, 433], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 91, 96, 97, 105, 118, 121, 124, 125, 126, 132, 133, 145, 146, 150, 153, 154, 171, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 296, 301, 303, 305, 308, 310, 313, 316, 317, 325, 330, 345, 353, 373, 375, 411, 412, 417, 420, 421, 422, 423, 424, 425, 426, 429, 431, 435], "differ": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 102, 116, 117, 118, 121, 122, 125, 130, 131, 132, 133, 136, 145, 146, 147, 148, 153, 154, 175, 179, 187, 188, 189, 200, 203, 210, 219, 227, 229, 231, 238, 239, 255, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 273, 284, 310, 336, 338, 340, 349, 355, 356, 357, 361, 362, 363, 388, 393, 395, 405, 406, 411, 412, 413, 416, 417, 418, 420, 421, 423, 425, 428, 429, 430, 431, 432, 433, 435, 436], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 49, 56, 59, 60, 64, 69, 70, 96, 97, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 172, 200, 238, 273, 306, 320, 322, 335, 337, 338, 340, 375, 377, 393, 410, 411, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "tabl": [1, 27, 411, 417, 422], "summar": [1, 3, 431], "what": [1, 3, 8, 11, 33, 56, 74, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 170, 191, 222, 227, 307, 323, 334, 338, 345, 410, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 429, 430, 431, 432, 433, 435, 436], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 44, 49, 59, 60, 61, 64, 69, 74, 75, 97, 103, 104, 118, 121, 125, 132, 133, 139, 142, 145, 146, 153, 154, 159, 172, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 196, 198, 199, 200, 201, 203, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 259, 260, 261, 263, 264, 265, 271, 272, 282, 303, 309, 312, 320, 321, 322, 323, 324, 325, 327, 328, 329, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 350, 353, 397, 410, 411, 412, 413, 416, 418, 419, 421, 422, 423, 424, 429, 430, 431, 433, 436], "n": [1, 2, 3, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 189, 194, 231, 238, 259, 260, 263, 268, 279, 281, 282, 305, 310, 320, 321, 329, 338, 354, 390, 413, 417, 419, 420, 433, 435, 436], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 40, 41, 42, 55, 57, 59, 61, 62, 63, 64, 66, 69, 70, 71, 76, 90, 91, 110, 118, 197, 230, 259, 260, 263, 264, 271, 272, 274, 275, 283, 292, 313, 355, 356, 357, 358, 359, 361, 375, 417, 433], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 87, 96, 97, 99, 103, 104, 105, 110, 118, 121, 122, 124, 125, 132, 133, 140, 141, 145, 146, 153, 154, 159, 170, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 191, 192, 193, 195, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 234, 235, 236, 238, 239, 259, 261, 263, 265, 282, 302, 309, 320, 344, 355, 356, 357, 358, 359, 361, 375, 382, 393, 395, 407, 410, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "p": [1, 2, 4, 99, 102, 122, 151, 152, 243, 244], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 49, 59, 60, 64, 69, 105, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 147, 148, 153, 154, 183, 186, 188, 190, 198, 207, 212, 216, 221, 222, 225, 227, 228, 229, 232, 234, 235, 238, 239, 259, 262, 263, 266, 271, 286, 290, 291, 309, 310, 312, 319, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 395, 405, 406, 407, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 436], "case": [1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 61, 62, 65, 66, 70, 71, 74, 76, 77, 78, 79, 80, 81, 87, 88, 95, 96, 97, 99, 110, 118, 121, 124, 125, 132, 133, 145, 146, 153, 154, 159, 186, 188, 190, 198, 203, 222, 225, 229, 230, 239, 265, 266, 272, 273, 306, 309, 310, 312, 313, 319, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 375, 384, 395, 405, 406, 407, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 424, 425, 429, 430, 431, 433, 435, 436], "dimens": [1, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 61, 62, 63, 65, 66, 74, 75, 76, 77, 78, 79, 80, 81, 90, 91, 92, 97, 104, 105, 110, 112, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 145, 146, 153, 154, 157, 158, 164, 172, 178, 179, 180, 187, 194, 201, 203, 205, 208, 215, 218, 219, 222, 225, 231, 236, 245, 246, 247, 252, 253, 261, 263, 265, 266, 269, 270, 271, 274, 275, 280, 283, 287, 288, 289, 290, 293, 302, 305, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 407, 409, 412, 416, 417, 418, 419, 421, 429, 430, 431, 433], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 49, 56, 59, 60, 61, 63, 64, 69, 70, 71, 76, 87, 90, 99, 110, 116, 117, 118, 121, 122, 125, 130, 131, 132, 133, 136, 142, 145, 146, 147, 148, 150, 153, 154, 169, 170, 178, 179, 180, 201, 208, 215, 222, 223, 224, 227, 229, 236, 238, 244, 256, 259, 263, 265, 282, 296, 305, 310, 321, 322, 323, 329, 332, 336, 337, 338, 340, 341, 343, 345, 346, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 393, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 435, 436], "adapt": [1, 24, 173, 201, 220, 241, 337, 416, 420, 431], "equal": [1, 14, 15, 17, 27, 76, 97, 104, 105, 118, 140, 143, 144, 145, 153, 202, 203, 245, 246, 259, 261, 263, 265, 266, 270, 272, 344, 349, 384, 405, 406, 416, 418, 432], "introduc": [1, 2, 145, 153, 259, 261, 263, 265, 282, 416, 429], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 69, 74, 75, 76, 77, 78, 79, 80, 81, 90, 92, 99, 110, 112, 116, 117, 118, 121, 124, 125, 126, 130, 131, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 159, 175, 207, 222, 229, 232, 238, 248, 261, 265, 288, 310, 311, 312, 375, 384, 396, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 433, 435, 436], "confus": [1, 25, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 99, 102, 103, 104, 105, 106, 108, 112, 118, 121, 124, 125, 126, 132, 133, 139, 145, 146, 153, 154, 182, 188, 189, 209, 216, 222, 225, 232, 236, 238, 243, 258, 259, 261, 265, 275, 296, 301, 303, 308, 310, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 373, 390, 405, 406, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 435, 436], "better": [1, 3, 8, 9, 14, 15, 23, 131, 261, 265, 412, 418, 421, 431, 435], "consist": [1, 2, 3, 27, 31, 32, 38, 42, 49, 56, 59, 60, 61, 64, 66, 69, 70, 71, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 235, 238, 243, 246, 266, 416, 417, 418, 431, 432, 436], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 229, 306, 310, 416, 418, 420, 421, 422, 424, 429, 430, 431, 436], "keep": [1, 2, 3, 4, 7, 8, 15, 56, 61, 70, 71, 99, 103, 110, 118, 145, 153, 170, 203, 207, 234, 236, 238, 282, 375, 386, 393, 416, 417, 418, 419, 424, 425, 426, 430, 431, 433, 436], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 42, 66, 179, 207, 234, 321, 324, 327, 329, 341, 343, 345, 346, 412, 416, 417, 422, 423, 429, 430, 433, 436], "interchang": [1, 271, 272, 418, 421, 425, 432, 433], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 39, 40, 41, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 92, 97, 99, 100, 103, 104, 105, 112, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 159, 189, 202, 213, 224, 227, 229, 236, 238, 245, 246, 254, 259, 261, 265, 266, 271, 272, 303, 306, 310, 320, 322, 323, 324, 327, 328, 329, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 349, 355, 388, 393, 412, 416, 417, 419, 420, 424, 429, 430, 431, 433, 436], "wherea": [1, 2, 22, 27, 38, 49, 59, 60, 64, 69, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 145, 146, 150, 153, 154, 189, 227, 229, 238, 323, 338, 343, 413, 425], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 69, 70, 74, 76, 77, 78, 79, 80, 81, 96, 97, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 179, 197, 207, 222, 227, 229, 234, 236, 238, 243, 258, 261, 263, 265, 269, 270, 282, 306, 310, 323, 325, 328, 329, 343, 353, 355, 356, 357, 358, 359, 411, 416, 417, 418, 420, 421, 423, 424, 425, 429, 430, 431, 432], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 27, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 97, 104, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 208, 227, 238, 311, 312, 384, 393, 411, 412, 416, 417, 418, 424, 428, 435, 436], "doesn": [1, 4, 27, 38, 49, 59, 60, 64, 69, 110, 118, 121, 125, 132, 133, 140, 145, 146, 153, 154, 186, 190, 238, 239, 420, 421], "understood": [1, 416], "serv": [1, 18, 20, 21, 127, 433, 435, 436], "basi": [1, 110, 271, 433, 435], "we": [1, 2, 3, 5, 7, 9, 11, 23, 24, 27, 31, 38, 44, 49, 56, 59, 60, 61, 63, 64, 69, 70, 71, 90, 103, 105, 110, 116, 117, 118, 121, 122, 125, 129, 130, 131, 132, 133, 145, 146, 153, 154, 159, 179, 199, 207, 210, 216, 227, 232, 235, 236, 238, 239, 242, 265, 271, 272, 273, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 375, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "anoth": [1, 2, 3, 8, 44, 69, 74, 91, 97, 104, 118, 121, 124, 125, 126, 129, 132, 133, 145, 146, 153, 154, 176, 184, 186, 188, 190, 222, 228, 266, 306, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 412, 416, 418, 419, 420, 422, 423, 428, 429, 430, 431, 436], "wise": [1, 201], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 91, 96, 97, 104, 105, 118, 121, 125, 129, 132, 133, 140, 145, 146, 150, 153, 154, 176, 179, 183, 197, 207, 219, 222, 227, 228, 229, 232, 234, 238, 243, 261, 265, 266, 273, 293, 309, 310, 311, 312, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 373, 375, 377, 411, 413, 416, 417, 418, 419, 421, 422, 423, 425, 429, 430, 431, 433, 435, 436], "op": [1, 25, 26, 28, 29, 30, 34, 45, 46, 47, 48, 51, 52, 53, 54, 74, 77, 78, 79, 80, 81, 202, 235, 240, 243, 258, 375, 395], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 96, 97, 105, 110, 118, 121, 125, 132, 133, 145, 146, 147, 148, 150, 153, 154, 159, 170, 184, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 302, 303, 305, 307, 308, 313, 316, 373, 375, 412, 416, 417, 418, 419, 421, 422, 423, 429, 431, 432, 433, 435, 436], "goal": [1, 3, 4, 133, 221, 416, 417, 418, 419, 430, 431], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 417], "explicitli": [1, 2, 3, 4, 30, 75, 87, 88, 95, 99, 175, 281, 306, 383, 412, 417, 419, 424, 429, 430, 433], "do": [1, 2, 3, 4, 7, 51, 118, 121, 125, 132, 133, 145, 146, 153, 154, 157, 158, 170, 172, 208, 222, 227, 235, 236, 261, 265, 272, 274, 299, 310, 338, 355, 375, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 435, 436], "deepcopi": [1, 273, 338, 429], "structur": [1, 3, 7, 39, 40, 41, 44, 51, 55, 56, 57, 61, 62, 63, 70, 71, 74, 75, 76, 91, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 186, 190, 222, 271, 282, 320, 329, 340, 343, 355, 356, 357, 358, 359, 409, 412, 416, 418, 419, 421, 424, 429, 430, 431, 432], "place": [1, 2, 3, 24, 27, 33, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 90, 92, 99, 102, 104, 112, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 157, 158, 171, 175, 183, 191, 207, 222, 228, 229, 232, 234, 235, 236, 238, 273, 301, 305, 309, 390, 395, 396, 412, 417, 418, 422, 425, 429, 430, 431, 433], "instanti": [1, 2, 3, 14, 15, 21, 39, 40, 41, 55, 56, 57, 61, 62, 70, 71, 74, 76, 96, 97, 129, 131, 175, 197, 222, 272, 355, 356, 357, 358, 359, 373, 416, 417, 422, 423, 425, 429, 430, 431, 433, 436], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 83, 99, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 157, 158, 160, 162, 164, 168, 170, 172, 178, 179, 182, 183, 186, 188, 190, 193, 199, 202, 203, 207, 215, 217, 219, 222, 223, 228, 229, 232, 234, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 296, 301, 303, 305, 308, 309, 310, 312, 313, 316, 317, 320, 321, 323, 332, 336, 338, 340, 341, 342, 343, 345, 346, 350, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 389, 393, 396, 405, 406, 407, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 435, 436], "graph": [1, 3, 4, 8, 59, 69, 116, 117, 130, 131, 351, 352, 416, 420, 431], "reli": [1, 2, 3, 11, 23, 60, 64, 222, 259, 260, 261, 263, 264, 265, 320, 340, 412, 416, 418, 420, 422, 424, 431, 436], "third": [1, 203, 224, 303, 429, 430], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 40, 41, 42, 55, 57, 62, 66, 76, 416, 417, 418, 419, 420, 423, 424, 429, 430, 431, 435, 436], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 63, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 179, 199, 320, 322, 337, 338, 340, 342, 412, 416, 417, 419, 429, 430, 431], "chart": 1, "show": [1, 2, 11, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 272, 375, 416, 418, 419, 420, 429, 430, 431, 433, 435], "decis": [1, 2, 3, 247, 252, 280, 301, 326, 339, 411, 419, 421, 422, 429, 430, 433, 436], "simplest": [1, 59, 69, 110, 313, 416, 418, 419, 422, 429, 430, 433, 436], "scenario": [1, 2, 137, 138, 145, 157, 158, 227, 373, 416, 422, 429, 430, 431], "transit": [1, 27, 38, 49, 59, 60, 64, 69, 97, 105, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 241, 243, 315, 416, 419, 421, 422, 424, 429, 431, 433], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 86, 90, 91, 92, 96, 97, 98, 99, 102, 103, 104, 105, 108, 110, 112, 118, 121, 125, 132, 133, 139, 142, 145, 146, 153, 154, 161, 168, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 238, 240, 242, 253, 258, 262, 268, 269, 270, 278, 280, 281, 282, 285, 290, 291, 294, 297, 302, 303, 304, 306, 307, 308, 309, 310, 320, 321, 322, 323, 324, 325, 327, 337, 339, 340, 345, 346, 384, 390, 393, 396, 409, 411, 412, 416, 417, 418, 419, 420, 421, 422, 424, 426, 429, 430, 432, 435, 436], "attent": [1, 2, 8, 179, 416, 419, 436], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 97, 99, 104, 105, 118, 121, 125, 132, 133, 139, 143, 144, 145, 146, 153, 154, 155, 156, 170, 183, 187, 189, 197, 203, 207, 222, 226, 228, 229, 230, 232, 234, 236, 238, 240, 242, 244, 255, 256, 258, 259, 261, 263, 265, 268, 273, 284, 288, 297, 302, 303, 305, 308, 309, 310, 311, 312, 314, 319, 324, 325, 327, 338, 354, 355, 356, 357, 358, 359, 361, 385, 388, 403, 411, 412, 413, 416, 417, 418, 421, 422, 423, 424, 425, 430, 431, 436], "built": [1, 2, 3, 5, 7, 99, 116, 117, 124, 130, 131, 142, 143, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353, 401, 403, 404, 407, 416, 417, 418, 419, 420, 423, 425, 431, 433, 436], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 110, 176, 194, 390, 409, 419, 430], "suffici": [1, 3, 4, 416], "preprocess": [1, 2, 75, 228, 417, 420], "popul": [1, 2, 3, 14, 15, 16, 56, 61, 68, 70, 71, 99, 132, 198, 222, 253, 273, 338, 416, 418, 419, 422, 424, 431, 433], "replaybuff": [1, 2, 3, 14, 15, 16, 35, 56, 67, 70, 71, 90, 91, 96, 97, 98, 99, 104, 105, 114, 179, 208, 212, 238, 325, 330, 353, 401, 403, 409, 418, 420, 424, 426, 429, 430, 432, 433, 435], "lazytensorstorag": [1, 2, 56, 61, 69, 70, 71, 96, 104, 105, 110, 212, 238, 418, 420, 426, 429, 430, 433], "lambda": [1, 2, 14, 15, 16, 17, 21, 22, 44, 59, 61, 69, 76, 110, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 169, 176, 184, 197, 199, 222, 230, 238, 239, 244, 293, 302, 305, 306, 307, 331, 333, 334, 345, 355, 358, 366, 367, 371, 372, 373, 403, 412, 416, 417, 420, 429, 430, 432, 433, 435, 436], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 104, 110, 176, 261, 265, 266, 281, 373, 418, 429, 430], "extend": [1, 2, 8, 35, 44, 56, 59, 61, 67, 70, 71, 76, 89, 90, 93, 96, 97, 99, 100, 104, 105, 108, 110, 111, 114, 115, 172, 178, 212, 228, 238, 241, 338, 390, 412, 413, 416, 417, 418, 419, 420, 424, 426, 429, 430, 432, 433, 435], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 97, 99, 104, 105, 172, 178, 179, 433], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 55, 56, 57, 61, 62, 70, 71, 76, 104, 110, 129, 179, 273, 412, 424, 429, 430], "achiev": [1, 2, 3, 4, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 129, 132, 133, 145, 146, 153, 154, 171, 221, 238, 244, 306, 390, 413, 416, 417, 418, 419, 420, 429, 430, 431, 433, 435, 436], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 93, 99, 110, 118, 121, 122, 125, 129, 132, 133, 145, 146, 147, 153, 154, 157, 158, 164, 170, 176, 179, 187, 197, 207, 227, 228, 229, 232, 235, 236, 238, 245, 246, 248, 249, 250, 251, 252, 253, 257, 261, 265, 266, 267, 271, 272, 301, 310, 317, 323, 325, 330, 341, 343, 353, 375, 390, 397, 398, 399, 403, 405, 406, 411, 416, 417, 418, 419, 420, 422, 425, 429, 430, 431, 432, 433, 435, 436], "multidimension": [1, 2, 70, 96, 97, 433], "slicesampl": [1, 2, 97, 105, 179, 433], "sampler": [1, 2, 56, 61, 70, 71, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 110, 112, 179, 208, 281, 325, 330, 353, 416, 418, 429, 430, 433], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 34, 42, 47, 48, 53, 54, 66, 75, 110, 116, 117, 145, 153, 179, 212, 232, 240, 278, 309, 313, 344, 349, 379, 416, 417, 433, 436], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 93, 97, 99, 104, 105, 106, 107, 108, 110, 112, 116, 118, 121, 122, 125, 130, 132, 133, 143, 145, 146, 147, 148, 150, 153, 154, 155, 157, 167, 172, 175, 176, 179, 182, 184, 191, 195, 197, 199, 201, 203, 205, 216, 219, 221, 222, 223, 226, 227, 229, 230, 231, 236, 238, 245, 246, 255, 261, 265, 266, 269, 270, 271, 272, 284, 297, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 412, 416, 417, 418, 419, 422, 428, 431, 433], "ensur": [1, 2, 3, 27, 38, 49, 56, 59, 60, 64, 69, 70, 76, 96, 97, 103, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 179, 187, 207, 220, 229, 232, 236, 238, 261, 265, 302, 411, 417, 418, 431, 433], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 90, 91, 92, 96, 99, 104, 110, 112, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 164, 170, 172, 176, 178, 180, 186, 187, 190, 191, 192, 197, 199, 200, 203, 205, 209, 210, 212, 216, 219, 220, 222, 225, 230, 236, 237, 238, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 384, 390, 393, 403, 411, 412, 416, 417, 418, 419, 420, 422, 423, 426, 428, 429, 430, 432, 433, 435, 436], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 51, 228, 262, 290, 291, 319, 410, 416, 417, 418, 419, 420, 423, 429, 430, 432, 436], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 24, 27, 33, 38, 49, 55, 57, 59, 60, 64, 69, 74, 106, 110, 118, 121, 125, 129, 132, 133, 136, 145, 146, 147, 148, 153, 154, 179, 182, 184, 194, 200, 207, 210, 223, 227, 228, 229, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 274, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 306, 307, 308, 309, 313, 316, 319, 329, 342, 343, 354, 359, 375, 393, 407, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 435, 436], "dimension": [1, 56, 60, 61, 69, 70, 71, 189, 261, 265, 355, 360, 368, 412, 430], "num_slic": [1, 2, 97, 104, 105, 433], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 42, 44, 47, 48, 49, 53, 56, 59, 61, 63, 64, 66, 67, 69, 70, 71, 90, 91, 92, 99, 104, 105, 112, 116, 117, 118, 119, 120, 121, 125, 130, 131, 132, 133, 134, 135, 136, 139, 141, 145, 146, 151, 152, 153, 154, 172, 173, 175, 176, 179, 184, 191, 212, 219, 220, 221, 227, 236, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 266, 268, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 373, 374, 411, 415, 416, 417, 418, 419, 425, 429, 430, 431, 433, 434, 435, 436], "trajectory_kei": [1, 23, 104, 105], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 67, 176, 212, 424, 433], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 49, 67, 176, 179, 212, 393, 396, 403, 413, 416, 417, 418, 419, 420, 424, 426, 429, 430, 433, 435], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 61, 62, 65, 66, 70, 71, 74, 76, 77, 78, 79, 80, 81, 104, 179, 180, 201, 205, 218, 219, 222, 231, 236, 264, 288, 293, 305, 407, 412, 417, 418, 420, 429, 431, 433], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 90, 92, 96, 97, 110, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 201, 238, 305], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 110, 118, 121, 125, 132, 133, 140, 146, 147, 148, 150, 153, 154, 227, 261, 265, 373, 404, 409, 416, 417, 418, 421, 428, 435, 436], "make_env": [1, 3, 145, 153, 158, 227, 236, 373, 398, 399, 416, 417, 435, 436], "regular": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 55, 57, 62, 76, 96, 102, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 238, 241, 243, 254, 261, 265, 284, 303, 307, 308, 309, 310, 330, 340, 395, 409, 413, 416, 417, 420, 421, 422, 426, 433, 436], "behav": [1, 3, 127, 139, 259, 263, 278, 328, 336, 338, 420, 432], "accordingli": [1, 2, 3, 97, 184, 201, 220, 221, 263, 307, 419], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 70, 71, 76, 90, 92, 97, 99, 104, 105, 110, 112, 118, 119, 120, 121, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 164, 173, 175, 176, 179, 183, 184, 187, 189, 191, 192, 197, 199, 203, 205, 207, 209, 210, 212, 215, 216, 219, 220, 221, 222, 225, 227, 228, 229, 230, 232, 234, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 252, 255, 257, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 273, 278, 281, 283, 293, 297, 298, 299, 300, 302, 303, 306, 308, 309, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 392, 411, 413, 415, 416, 417, 418, 419, 421, 422, 424, 425, 429, 430, 431, 433, 434, 435, 436], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 55, 57, 62, 76, 96, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 175, 191, 197, 302, 309, 422, 423, 425, 429, 430], "current": [1, 2, 3, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 94, 97, 99, 105, 118, 121, 125, 127, 132, 133, 140, 143, 144, 145, 146, 153, 154, 161, 170, 175, 176, 179, 197, 208, 221, 222, 223, 227, 228, 229, 238, 256, 282, 286, 290, 294, 305, 320, 322, 323, 330, 337, 340, 342, 343, 378, 413, 416, 417, 418, 419, 423, 429, 430, 431, 433, 436], "fulli": [1, 8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 260, 264, 417, 420, 423, 431, 433], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 99, 100, 103, 105, 106, 108, 110, 111, 112, 114, 115, 118, 121, 122, 125, 132, 133, 140, 145, 146, 147, 148, 153, 154, 155, 157, 158, 159, 171, 173, 175, 176, 178, 179, 180, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 244, 245, 246, 252, 253, 266, 275, 281, 301, 305, 309, 310, 311, 312, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 355, 357, 358, 373, 375, 380, 393, 410, 412, 416, 417, 418, 419, 420, 422, 423, 429, 430, 431, 433, 435, 436], "consecut": [1, 3, 103, 129, 265, 282, 375, 419, 421, 424, 430, 433, 436], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 122, 124, 125, 132, 133, 140, 141, 145, 146, 153, 154, 207, 234, 238, 320, 393, 407, 417, 418, 421, 422], "therebi": [1, 24, 373, 412, 416, 417], "interrupt": [1, 2, 125, 305, 361], "These": [1, 2, 7, 44, 63, 113, 157, 207, 234, 411, 412, 416, 418, 429, 430, 431, 433, 436], "tool": [1, 2, 3, 5, 411, 412, 419, 421, 429, 431, 433, 436], "backend": [1, 3, 7, 18, 19, 21, 22, 76, 118, 121, 124, 125, 132, 133, 145, 146, 153, 154, 163, 169, 239, 413, 416, 418, 419, 420, 421, 424, 425, 431], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 409], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 409], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 70, 71, 91, 99, 122, 123, 145, 153, 236, 416, 417, 418, 419, 424, 429, 430, 431, 432, 436], "synchron": [1, 14, 15, 16, 19, 21, 39, 40, 41, 55, 57, 62, 76, 140, 405, 406, 417, 418, 429], "mode": [1, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 140, 145, 146, 153, 154, 186, 190, 221, 229, 236, 238, 243, 253, 261, 262, 265, 270, 278, 289, 290, 291, 296, 306, 310, 338, 373, 383, 388, 411, 412, 416, 417, 429, 430, 435, 436], "find": [1, 4, 6, 7, 18, 19, 20, 56, 58, 72, 104, 105, 240, 263, 282, 387, 391, 416, 417, 420, 422, 423, 429, 430], "folder": [1, 2, 39, 40, 41, 55, 57, 62, 76, 157, 179, 417], "variou": [1, 2, 3, 118, 228, 261, 265, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 347, 353, 375, 405, 406, 416, 417, 418, 420, 421, 422, 423, 425, 429, 430, 433, 436], "machin": [1, 2, 7, 18, 19, 20, 49, 129, 429, 430, 435], "wonder": 1, "why": [1, 2, 3, 170, 412, 429, 431, 436], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 16, 25, 27, 30, 38, 49, 59, 60, 64, 69, 73, 76, 118, 121, 125, 131, 132, 133, 145, 146, 153, 154, 179, 194, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 320, 322, 323, 325, 328, 329, 330, 336, 337, 340, 341, 342, 343, 353, 355, 359, 363, 407, 412, 420, 421, 422, 426, 431, 433, 436], "lower": [1, 2, 3, 21, 27, 28, 182, 236, 285, 286, 313, 418, 429, 431], "io": [1, 11, 130, 131, 140, 143, 144, 155, 156, 263, 264, 420], "footprint": [1, 2, 433], "commun": [1, 2, 3, 133, 145, 153, 410, 418, 436], "yet": [1, 116, 117, 130, 432], "plai": [1, 3, 147, 148, 154, 179, 417, 418, 423, 433, 436], "role": [1, 3, 138, 417, 423, 436], "opposit": [1, 429], "direct": [1, 2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 259, 263, 338, 417, 423], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 140, 355, 356, 357, 358, 419, 420, 429, 430], "share": [1, 3, 6, 8, 23, 39, 40, 41, 55, 57, 61, 62, 70, 71, 74, 76, 88, 90, 91, 92, 93, 97, 99, 100, 104, 106, 108, 112, 122, 145, 153, 219, 227, 236, 261, 265, 271, 272, 298, 299, 300, 320, 321, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 407, 409, 411, 412, 418, 420, 426, 428, 429, 430, 435, 436], "among": [1, 3, 51, 147, 148, 227, 329, 343, 412, 429, 430], "prohibit": [1, 3, 110], "slow": [1, 3, 4, 11, 39, 40, 41, 55, 57, 62, 76, 91, 104, 105], "compar": [1, 3, 110, 321, 323, 336, 341, 343, 345, 346, 388, 412, 416, 418, 420, 422, 423, 429, 430, 433, 436], "gpu": [1, 7, 8, 27, 38, 49, 59, 60, 64, 69, 90, 92, 112, 118, 121, 125, 126, 129, 132, 133, 145, 146, 153, 154, 238, 416, 418, 419, 429, 430, 436], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 55, 57, 62, 70, 74, 76, 91, 96, 97, 104, 105, 110, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 203, 227, 236, 240, 241, 242, 253, 256, 259, 261, 263, 265, 268, 280, 281, 289, 290, 306, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 411, 412, 416, 417, 418, 420, 422, 429, 430, 431, 433, 436], "keyword": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 96, 97, 99, 102, 104, 105, 108, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 157, 158, 164, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 191, 192, 193, 195, 197, 198, 199, 201, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 258, 261, 265, 269, 270, 271, 272, 282, 297, 301, 302, 305, 306, 307, 309, 310, 313, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 348, 353, 355, 356, 357, 358, 359, 363, 373, 375, 380, 382, 393, 404, 416, 417, 418, 420, 422, 425, 429, 430, 433, 435, 436], "build": [1, 2, 3, 7, 23, 27, 31, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 74, 99, 116, 117, 118, 121, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 143, 144, 145, 146, 150, 153, 154, 155, 156, 157, 158, 212, 236, 238, 242, 261, 265, 268, 304, 306, 310, 393, 400, 401, 402, 411, 412, 413, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 435, 436], "mani": [1, 2, 3, 4, 61, 116, 117, 119, 120, 121, 124, 126, 127, 130, 131, 140, 141, 150, 222, 320, 322, 329, 337, 340, 411, 416, 417, 418, 420, 421, 422, 424, 426, 429, 430, 431, 433, 435, 436], "eg": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 106, 108, 112, 118, 119, 120, 121, 124, 125, 126, 127, 129, 132, 133, 145, 146, 150, 153, 154, 189, 220, 229, 239, 271, 301, 375], "gymnasium": [1, 2, 3, 5, 69, 118, 121, 124, 125, 126, 132, 133, 134, 135, 145, 146, 153, 154, 163, 169, 192, 216, 220, 235, 239, 417, 418, 420, 431, 435], "warn": [1, 3, 60, 64, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 258, 282, 383, 417], "quickli": [1, 3, 417, 429, 430, 436], "becom": [1, 2, 3, 4, 21, 259, 263, 429, 430, 436], "quit": [1, 3, 11, 118, 121, 125, 132, 133, 145, 146, 153, 154, 416, 417, 418, 420, 422, 429, 430, 436], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 42, 53, 66, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 137, 138, 145, 146, 147, 148, 150, 153, 154, 157, 158, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 201, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 293, 310, 338, 383, 388, 407, 412, 416, 419, 429, 432, 433, 436], "filter": [1, 2, 3, 4, 75, 97, 104, 105, 320, 321, 323, 324, 328, 329, 336, 340, 341, 343, 421], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 39, 40, 41, 44, 49, 55, 57, 59, 60, 62, 64, 69, 75, 76, 88, 97, 104, 105, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 159, 187, 219, 222, 238, 240, 259, 260, 263, 269, 270, 273, 274, 275, 297, 301, 302, 303, 306, 307, 308, 309, 310, 338, 351, 352, 412, 413, 416, 417, 418, 419, 420, 421, 422, 424, 429, 430, 431, 433, 435, 436], "still": [1, 2, 3, 9, 59, 69, 76, 77, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 227, 282, 337, 338, 412, 416, 417, 419, 428, 431, 433, 436], "wish": [1, 3, 11, 14, 15, 17, 169, 423, 433], "displai": [1, 3, 7, 118, 121, 125, 132, 133, 145, 146, 153, 154, 393, 413, 416, 417, 430, 431], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 175, 176, 179, 180, 183, 184, 186, 187, 190, 191, 192, 194, 197, 198, 199, 201, 202, 203, 205, 207, 208, 209, 210, 212, 214, 215, 216, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 282, 283, 284, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 382, 383, 386, 387, 388, 390, 391, 393, 407, 411, 412, 413, 416, 417, 418, 420, 425, 426, 428, 429, 430, 431, 432, 435, 436], "central": [2, 271, 272, 273, 416, 417, 421, 429, 430, 433], "part": [2, 3, 4, 8, 27, 38, 49, 59, 60, 63, 64, 69, 76, 116, 118, 121, 125, 130, 132, 133, 143, 145, 146, 153, 154, 170, 178, 203, 212, 215, 238, 261, 265, 314, 384, 407, 412, 416, 418, 419, 420, 426, 429, 431, 436], "algorithm": [2, 3, 8, 9, 139, 172, 219, 320, 340, 341, 343, 409, 412, 413, 416, 417, 418, 419, 420, 422, 423, 424, 425, 429, 430, 432, 433, 435], "implement": [2, 3, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 73, 74, 77, 78, 79, 80, 81, 94, 106, 107, 118, 121, 125, 132, 133, 139, 140, 145, 146, 153, 154, 176, 183, 186, 188, 192, 195, 199, 201, 209, 210, 216, 220, 226, 228, 229, 230, 236, 238, 239, 243, 245, 259, 260, 261, 262, 263, 264, 265, 289, 290, 291, 320, 321, 323, 326, 327, 328, 334, 336, 338, 339, 340, 342, 343, 345, 373, 384, 398, 411, 413, 416, 417, 418, 419, 420, 429, 430, 431, 435], "wide": [2, 3, 5, 435], "give": [2, 3, 7, 70, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 179, 410, 412, 416, 417, 420, 429, 430, 431, 432, 435], "abil": [2, 338, 431, 433], "panel": [2, 418], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 59, 69, 88, 110, 176, 179, 191, 243, 261, 265, 323, 328, 336, 343, 347, 411, 416, 418, 419, 422, 423, 425, 429, 430, 433], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 49, 59, 60, 64, 69, 74, 76, 87, 88, 90, 91, 92, 93, 95, 106, 108, 112, 118, 121, 125, 132, 133, 139, 143, 144, 145, 146, 153, 154, 194, 197, 221, 227, 229, 236, 238, 261, 265, 320, 323, 338, 343, 396, 411, 413, 416, 417, 418, 419, 420, 429, 430, 431, 433, 436], "almost": [2, 270, 419], "physic": [2, 6, 7, 88, 145, 146, 150, 413, 416, 429, 430, 431], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 90, 91, 92, 93, 106, 108, 112, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 222, 238, 273, 282, 325, 338, 353, 416, 417, 419, 429, 430, 432, 433, 435], "liststorag": [2, 44, 56, 61, 69, 70, 71, 91, 99, 433], "veri": [2, 3, 130, 131, 417, 421, 424, 429, 431, 433, 435, 436], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 40, 41, 42, 49, 51, 53, 55, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 76, 91, 97, 99, 102, 104, 105, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 170, 175, 176, 210, 238, 239, 266, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 349, 353, 411, 413, 416, 418, 419, 420, 421, 422, 423, 429, 430, 431, 433, 435, 436], "complex": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309, 416, 417, 421, 422], "tensor": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 104, 105, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 164, 170, 171, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 187, 189, 190, 191, 192, 194, 197, 198, 200, 203, 205, 207, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 320, 321, 323, 324, 325, 327, 328, 329, 332, 333, 336, 338, 340, 341, 342, 343, 345, 346, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 429, 430, 431, 435, 436], "contigu": [2, 3, 8, 28, 31, 38, 77, 91, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 197, 200, 222, 230, 431, 433, 435], "tensorstorag": [2, 61, 69, 90, 96, 97, 110, 113, 424, 433], "lazymemmapstorag": [2, 35, 56, 61, 67, 70, 71, 97, 99, 104, 105, 178, 179, 416, 417, 419, 424, 429, 432, 433], "citizen": 2, "pytre": [2, 56, 61, 70, 71, 93, 99, 113], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 88, 93, 97, 99, 104, 108, 110, 118, 119, 120, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 179, 197, 199, 203, 238, 244, 248, 254, 255, 261, 264, 265, 266, 273, 280, 283, 284, 302, 303, 307, 308, 313, 320, 321, 322, 323, 324, 328, 329, 331, 336, 337, 338, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 387, 388, 391, 400, 433, 435], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 75, 76, 97, 102, 104, 105, 118, 121, 124, 125, 126, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 197, 222, 227, 229, 238, 306, 310, 323, 343, 345, 388, 405, 406, 407, 413, 417, 418, 421, 423, 429, 431, 436], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 40, 41, 42, 49, 50, 55, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 76, 82, 90, 91, 92, 95, 99, 112, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 171, 179, 220, 223, 227, 238, 305, 355, 356, 357, 358, 359, 373, 383, 413, 417, 418, 420, 430, 431, 433, 435], "construct": [2, 3, 5, 23, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 74, 99, 118, 121, 122, 124, 125, 132, 133, 145, 146, 147, 153, 154, 159, 186, 190, 238, 261, 265, 286, 310, 393, 411, 417, 418, 419, 422, 429, 431, 433, 436], "ram": [2, 124, 126, 425, 433], "prealloc": [2, 3, 145, 153, 431], "ve": [2, 63, 416, 419, 426], "been": [2, 3, 5, 7, 8, 12, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 63, 65, 66, 74, 77, 78, 79, 80, 81, 99, 103, 118, 121, 125, 129, 132, 133, 137, 138, 145, 146, 153, 154, 199, 220, 221, 228, 229, 259, 261, 263, 265, 273, 305, 320, 338, 340, 342, 416, 417, 418, 419, 428, 429, 430, 431, 433, 435, 436], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 110, 118, 119, 120, 121, 125, 129, 132, 133, 145, 146, 147, 148, 153, 154, 179, 227, 273, 382, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 424, 426, 429, 430, 431, 433, 435, 436], "start": [2, 3, 4, 5, 14, 21, 24, 44, 74, 75, 76, 97, 104, 105, 118, 121, 122, 125, 132, 133, 136, 145, 146, 153, 154, 170, 185, 389, 415, 416, 417, 420, 427, 430, 431, 433, 434, 436], "replay_buff": [2, 8, 14, 15, 16, 56, 61, 70, 71, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 179, 390, 403, 416, 417, 418, 424, 429, 430, 433], "import": [2, 3, 4, 6, 10, 11, 14, 15, 16, 17, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 96, 97, 99, 104, 105, 110, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 169, 170, 171, 172, 173, 175, 176, 178, 179, 182, 184, 187, 191, 192, 197, 198, 199, 200, 203, 205, 207, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 228, 230, 234, 236, 238, 239, 242, 244, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 273, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 373, 375, 386, 388, 403, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "rb": [2, 35, 56, 61, 67, 70, 71, 91, 96, 97, 99, 104, 105, 110, 179, 212, 238, 417, 419, 420, 424, 426, 430, 432, 433, 435], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 44, 45, 49, 56, 61, 63, 69, 70, 71, 72, 75, 76, 90, 91, 92, 96, 99, 104, 105, 110, 112, 116, 117, 118, 121, 122, 125, 130, 131, 132, 133, 139, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 172, 173, 176, 178, 179, 184, 187, 221, 223, 224, 225, 238, 242, 244, 247, 248, 250, 252, 254, 258, 259, 260, 261, 263, 264, 265, 268, 270, 280, 282, 293, 306, 310, 313, 317, 321, 325, 327, 334, 340, 341, 342, 346, 353, 355, 356, 357, 358, 361, 375, 384, 413, 416, 417, 418, 419, 420, 421, 422, 426, 429, 431, 433, 435, 436], "add": [2, 3, 4, 6, 21, 27, 31, 32, 38, 42, 44, 49, 56, 59, 60, 61, 64, 66, 69, 70, 71, 89, 91, 96, 99, 100, 110, 111, 114, 115, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 197, 199, 226, 229, 238, 261, 265, 274, 304, 320, 389, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 435], "string": [2, 18, 19, 20, 27, 38, 44, 49, 51, 58, 59, 60, 64, 69, 75, 76, 86, 91, 118, 121, 125, 132, 133, 137, 143, 145, 146, 153, 154, 169, 187, 197, 207, 220, 226, 234, 238, 261, 265, 302, 305, 306, 307, 319, 374, 392, 412, 416, 418, 419, 433], "element": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 39, 40, 41, 44, 45, 47, 53, 55, 56, 57, 61, 62, 69, 70, 71, 74, 76, 90, 91, 92, 93, 96, 97, 99, 104, 105, 110, 112, 118, 121, 125, 132, 133, 142, 145, 146, 153, 154, 172, 179, 184, 187, 208, 217, 221, 222, 240, 245, 246, 259, 260, 263, 296, 297, 302, 305, 309, 310, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 384, 412, 416, 418, 422, 424, 433, 436], "30": [2, 3, 61, 69, 104, 105, 175, 202, 285, 286, 373, 377, 380, 382, 424, 430, 431, 433], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 102, 104, 105, 106, 108, 110, 112, 118, 121, 122, 124, 125, 132, 133, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 194, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 290, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 402, 403, 405, 406, 407, 411, 413, 416, 417, 419, 420, 431, 433, 435], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 104, 105, 106, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 145, 146, 147, 148, 150, 153, 154, 157, 158, 159, 164, 172, 174, 175, 176, 178, 179, 180, 181, 183, 185, 187, 189, 194, 195, 197, 201, 202, 203, 205, 207, 208, 211, 218, 219, 220, 223, 226, 229, 231, 234, 238, 240, 241, 242, 245, 246, 247, 248, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 301, 302, 303, 305, 306, 308, 310, 320, 321, 322, 329, 331, 332, 337, 338, 339, 340, 341, 345, 346, 355, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 380, 382, 384, 385, 386, 388, 390, 393, 395, 405, 406, 407, 420, 431, 433], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 40, 41, 42, 44, 49, 55, 57, 58, 59, 60, 62, 64, 66, 67, 69, 75, 76, 83, 104, 105, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 137, 138, 145, 146, 150, 153, 154, 157, 158, 170, 171, 175, 179, 181, 182, 184, 185, 186, 188, 190, 191, 194, 198, 200, 201, 203, 205, 207, 210, 212, 215, 217, 219, 220, 221, 222, 224, 227, 229, 231, 234, 236, 238, 261, 269, 270, 301, 302, 305, 307, 308, 321, 323, 343, 355, 356, 357, 358, 411, 416, 418, 419, 421, 422, 423, 425, 429, 430, 431, 432, 433, 435, 436], "onto": [2, 8, 39, 40, 41, 53, 55, 57, 62, 76, 164, 188, 240, 282, 297, 302, 303, 306, 307, 308, 309, 310, 419, 431], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 89, 96, 97, 99, 100, 102, 103, 104, 105, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 145, 146, 150, 153, 154, 157, 158, 171, 172, 179, 180, 220, 221, 222, 223, 229, 238, 239, 245, 246, 266, 269, 270, 272, 282, 305, 307, 308, 316, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 397, 407, 410, 413, 418, 419, 420, 424, 425, 426, 431, 433, 436], "without": [2, 3, 7, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 157, 158, 173, 175, 186, 190, 225, 228, 238, 259, 260, 263, 264, 299, 300, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 359, 403, 410, 411, 416, 417, 418, 420, 421, 422, 423, 424, 429, 430, 431, 433, 436], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 39, 40, 41, 44, 49, 55, 56, 57, 59, 60, 62, 63, 64, 69, 70, 76, 96, 97, 118, 121, 125, 132, 133, 139, 145, 146, 147, 148, 153, 154, 155, 156, 171, 173, 175, 176, 186, 189, 190, 197, 209, 220, 221, 227, 229, 233, 236, 238, 240, 242, 243, 258, 259, 261, 265, 268, 273, 282, 306, 307, 308, 309, 310, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 388, 393, 395, 398, 399, 402, 403, 413, 417, 418, 419, 420, 423, 426, 429, 430, 431, 433, 436], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 63, 65, 66, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 97, 104, 105, 108, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 172, 179, 187, 200, 208, 236, 242, 245, 246, 248, 250, 252, 259, 263, 266, 268, 271, 272, 297, 309, 314, 384, 390, 416, 418, 419, 424, 426, 431, 433, 436], "cursor": [2, 56, 61, 70, 71, 99], "afterward": [2, 27, 38, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 429, 436], "tell": [2, 3, 4, 7, 147, 148, 227, 416, 419, 424, 429, 430], "our": [2, 3, 7, 8, 11, 18, 44, 61, 179, 375, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 435], "far": [2, 56, 61, 63, 70, 71, 99, 262, 290, 291, 426, 431, 436], "restrict": [2, 3, 412, 417, 432, 433, 436], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 93, 99, 118, 121, 125, 131, 132, 133, 142, 145, 146, 153, 154, 164, 186, 190, 207, 209, 223, 229, 232, 234, 238, 379, 416, 431], "64": [2, 3, 39, 40, 41, 55, 57, 62, 76, 99, 179, 211, 248, 249, 257, 261, 265, 272, 273, 283, 353, 416, 417, 418, 419, 420, 422, 426, 428, 431, 433, 435, 436], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 90, 91, 92, 96, 97, 104, 105, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 164, 167, 170, 171, 172, 173, 176, 177, 183, 186, 187, 188, 189, 190, 191, 192, 197, 199, 200, 203, 205, 207, 209, 210, 212, 216, 219, 220, 222, 224, 225, 228, 229, 230, 232, 234, 238, 242, 244, 254, 255, 259, 260, 261, 263, 264, 265, 268, 274, 275, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 361, 411, 420, 428, 431, 433, 435, 436], "unit8": 2, "img": 2, "randint": [2, 75, 99, 187, 225, 433], "255": [2, 99, 225, 433], "uint8": [2, 3, 31, 39, 40, 41, 55, 57, 62, 76, 119, 120, 137, 138, 191, 197, 205, 225, 417, 433], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 42, 44, 49, 56, 61, 63, 66, 67, 69, 70, 71, 76, 86, 87, 88, 95, 97, 99, 104, 105, 110, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 137, 138, 139, 143, 144, 145, 146, 151, 152, 153, 154, 155, 157, 158, 164, 170, 172, 175, 176, 178, 179, 184, 186, 187, 190, 191, 192, 197, 198, 199, 200, 201, 205, 209, 210, 212, 215, 216, 220, 222, 224, 227, 230, 235, 236, 238, 242, 260, 261, 264, 265, 268, 286, 305, 315, 317, 320, 321, 323, 324, 325, 327, 328, 329, 330, 336, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 375, 387, 388, 391, 417, 419, 420, 422, 426, 431, 432, 435, 436], "ask": [2, 3, 8, 97, 104, 105, 375, 418, 419, 421, 422, 429, 430, 432, 436], "automat": [2, 3, 5, 12, 28, 44, 74, 77, 90, 92, 99, 105, 112, 118, 121, 124, 125, 126, 132, 133, 145, 146, 147, 148, 153, 154, 175, 186, 187, 190, 203, 222, 235, 245, 261, 265, 297, 305, 306, 310, 373, 383, 411, 416, 418, 421, 422, 429, 430, 431, 433, 435], "hand": [2, 3, 7, 21, 31, 429, 430, 431], "look": [2, 3, 5, 7, 8, 27, 38, 49, 59, 60, 64, 69, 97, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 197, 207, 208, 232, 238, 243, 306, 310, 311, 312, 412, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 436], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 63, 64, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 87, 88, 95, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 178, 181, 185, 187, 194, 207, 208, 215, 222, 229, 232, 234, 244, 261, 265, 293, 296, 313, 325, 329, 330, 343, 353, 364, 365, 366, 367, 369, 370, 371, 372, 375, 416, 418, 428, 431], "lead": [2, 3, 4, 8, 10, 23, 31, 32, 42, 49, 56, 61, 66, 70, 71, 76, 103, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 145, 146, 153, 154, 222, 239, 262, 283, 290, 291, 296, 416, 419, 420, 429, 430, 431, 433, 435], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 61, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 171, 216, 412, 416, 424, 433], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 87, 99, 108, 118, 119, 120, 121, 122, 124, 125, 126, 127, 132, 133, 145, 146, 153, 154, 172, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 196, 198, 199, 200, 201, 203, 205, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 245, 246, 253, 261, 265, 266, 271, 272, 289, 297, 301, 302, 306, 307, 309, 310, 313, 314, 321, 323, 329, 337, 339, 341, 343, 390, 395, 411, 412, 416, 418, 420, 428, 430, 431, 433, 436], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 179, 228, 417, 418, 420, 424, 433, 435, 436], "throw": [2, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 436], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 39, 40, 41, 44, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 69, 70, 71, 72, 75, 76, 86, 90, 91, 92, 96, 97, 98, 99, 104, 105, 110, 112, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 170, 171, 172, 176, 178, 179, 183, 186, 187, 190, 191, 192, 197, 205, 209, 210, 212, 216, 219, 220, 222, 228, 229, 230, 238, 242, 244, 252, 253, 254, 255, 258, 261, 265, 268, 282, 283, 284, 292, 293, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 375, 384, 390, 411, 412, 416, 417, 418, 419, 424, 429, 430, 431, 433, 435, 436], "max": [2, 23, 53, 57, 70, 75, 86, 96, 97, 110, 131, 189, 223, 282, 321, 322, 323, 329, 339, 341, 343, 416, 418, 419, 420, 426], "label": [2, 57, 58, 63, 75, 76, 416, 429, 433], "100": [2, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 90, 92, 99, 104, 105, 110, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 182, 187, 191, 203, 212, 217, 220, 238, 270, 271, 303, 305, 375, 385, 403, 417, 418, 420, 421, 423, 426, 428, 429, 430, 431, 433, 435, 436], "rb_pytre": 2, "randn": [2, 56, 59, 61, 70, 71, 90, 91, 92, 97, 99, 104, 105, 112, 164, 178, 203, 244, 247, 248, 252, 254, 255, 259, 260, 263, 264, 269, 270, 271, 278, 280, 284, 297, 298, 299, 300, 301, 302, 306, 307, 309, 312, 313, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 392, 411, 420, 433, 435, 436], "c": [2, 3, 6, 7, 31, 39, 40, 41, 55, 57, 59, 61, 62, 69, 70, 71, 76, 91, 203, 225, 230, 263, 264, 417, 433], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 90, 92, 99, 104, 105, 110, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 170, 176, 178, 180, 186, 187, 189, 190, 203, 209, 212, 219, 238, 241, 242, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 269, 270, 272, 273, 282, 283, 292, 308, 310, 316, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 361, 419, 420, 433, 435, 436], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 99, 110, 118, 121, 125, 128, 132, 133, 145, 146, 153, 154, 159, 164, 169, 172, 176, 179, 182, 186, 190, 199, 210, 217, 229, 236, 244, 272, 293, 355, 356, 357, 358, 383, 384, 392, 424, 428, 433, 436], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 90, 92, 99, 112, 187, 205, 245, 246, 266, 272, 416, 420, 424, 426, 429, 431, 432, 433, 435], "ambigu": [2, 56, 61, 70, 71, 99], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 76, 99, 108, 118, 121, 125, 132, 133, 145, 146, 153, 154, 167, 176, 183, 197, 207, 222, 228, 229, 232, 234, 238, 309, 412, 416, 420, 421, 431], "deal": [2, 3, 56, 61, 70, 71, 99, 338, 412, 416, 418, 430, 433], "interpret": [2, 3, 56, 61, 70, 71, 99, 417], "put": [2, 56, 61, 70, 71, 99, 125, 137, 138, 154, 157, 158, 236, 382, 407, 411, 417, 418, 419, 421, 429, 431], "solv": [2, 4, 7, 9, 10, 56, 61, 70, 71, 99, 410, 416, 417, 418, 424, 426, 429, 430, 431, 433], "clear": [2, 3, 11, 27, 31, 32, 38, 42, 43, 49, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 99, 118, 121, 125, 129, 132, 133, 145, 146, 153, 154, 238, 385, 421, 424], "cut": [2, 56, 61, 70, 71, 99], "distinct": [2, 3, 56, 61, 70, 71, 99, 176, 179, 423, 428], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 173, 238, 255, 259, 263, 266, 421, 431, 433, 435, 436], "through": [2, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 31, 32, 42, 56, 60, 61, 64, 66, 70, 71, 76, 99, 116, 117, 118, 121, 124, 125, 126, 129, 130, 131, 132, 133, 136, 145, 146, 147, 148, 153, 154, 175, 184, 186, 190, 208, 239, 244, 266, 283, 305, 306, 310, 311, 312, 316, 319, 338, 355, 356, 357, 358, 383, 411, 412, 416, 417, 418, 421, 423, 428, 429, 430, 431, 432, 433, 436], "collate_fn": [2, 56, 61, 69, 70, 71, 99, 433, 435], "__init__": [2, 3, 7, 121, 139, 155, 169, 173, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 242, 253, 255, 259, 263, 268, 314, 321, 323, 324, 329, 336, 341, 343, 345, 346, 413, 431, 436], "major": 2, "worri": [2, 72, 436], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 69, 74, 77, 78, 79, 80, 81, 90, 91, 92, 93, 97, 104, 106, 108, 112, 118, 121, 122, 125, 129, 132, 133, 145, 146, 153, 154, 171, 175, 416, 418, 421, 429, 430, 431, 436], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 266, 418, 429, 430], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 58, 59, 63, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 202, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 262, 290, 291, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 417, 422, 425, 431, 433, 436], "latter": [2, 18, 19, 20, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 340, 405, 406], "inv": [2, 3, 172, 182, 189, 192, 197, 205, 212, 217, 219, 224, 228, 231, 238, 431], "obvious": [2, 420], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 64, 65, 66, 69, 72, 74, 77, 78, 79, 80, 81, 88, 118, 121, 125, 132, 133, 145, 146, 153, 154, 189, 192, 216, 225, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 355, 433], "multithread": [2, 3, 56, 61, 70, 71, 86, 140, 141, 424, 433], "thread": [2, 14, 15, 17, 39, 40, 41, 55, 57, 62, 76, 116, 117, 130, 131, 145, 153], "prefetch": [2, 56, 61, 70, 71, 86, 416, 417, 419, 433], "advis": [2, 11, 425, 436], "benchmark": [2, 3, 9, 116, 117, 130, 131], "techniqu": [2, 8, 145, 153, 417, 420, 424, 433], "real": [2, 5, 310, 412, 419, 420, 431, 432], "life": [2, 191, 432], "adopt": [2, 3, 5, 416, 436], "throughput": [2, 9, 131, 416], "constant": [2, 11, 33, 179, 203, 221, 413, 416, 418, 419, 436], "throughout": [2, 3, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 418, 429, 436], "further": [2, 3, 5, 24, 416, 418, 420, 421], "refin": [2, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353], "coupl": [2, 419, 422, 423, 431, 433], "get": [2, 3, 4, 6, 7, 8, 9, 12, 31, 32, 39, 40, 41, 42, 44, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 76, 90, 92, 97, 104, 105, 106, 108, 110, 112, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 173, 178, 180, 186, 189, 190, 199, 203, 208, 221, 222, 225, 229, 236, 258, 297, 306, 307, 310, 317, 355, 356, 357, 358, 359, 375, 379, 411, 412, 415, 416, 417, 418, 419, 420, 427, 429, 430, 431, 433, 434, 435, 436], "first_elt": 2, "128": [2, 105, 116, 117, 130, 131, 249, 252, 417, 419, 420, 426, 429, 432, 433], "wa": [2, 3, 5, 7, 31, 32, 42, 44, 56, 59, 61, 66, 69, 70, 71, 76, 97, 99, 103, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 171, 179, 197, 229, 263, 320, 322, 335, 337, 340, 342, 344, 361, 412, 417, 418, 421, 422, 428, 429, 433, 435], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 96, 97, 99, 104, 105, 110, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 163, 164, 169, 170, 171, 172, 175, 176, 179, 180, 184, 186, 187, 188, 189, 190, 198, 203, 209, 210, 212, 215, 220, 222, 223, 224, 225, 236, 238, 245, 246, 248, 249, 250, 251, 252, 255, 257, 258, 261, 265, 266, 269, 270, 271, 272, 278, 281, 282, 284, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 312, 314, 317, 338, 373, 403, 411, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 180], "larger": [2, 4, 69, 261, 265, 328, 336, 435], "volum": 2, "due": [2, 3, 5, 23, 423, 432, 433, 436], "memorymappedtensor": [2, 35, 55, 57, 67, 75, 90, 377, 424], "well": [2, 3, 8, 21, 23, 27, 38, 49, 56, 58, 59, 60, 61, 64, 69, 70, 71, 74, 97, 102, 106, 113, 118, 121, 125, 132, 133, 145, 146, 153, 154, 228, 229, 238, 239, 243, 248, 263, 285, 286, 310, 338, 340, 345, 359, 411, 416, 417, 419, 420, 421, 422, 423, 425, 432, 433, 435, 436], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 99, 118, 121, 125, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 185, 186, 188, 190, 215, 218, 221, 226, 230, 231, 238, 239, 242, 263, 309, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 382, 411, 416, 418, 419, 420, 424, 429], "file": [2, 6, 7, 8, 39, 40, 41, 55, 57, 62, 76, 88, 157, 374, 375, 377, 393, 413, 415, 417, 429, 433, 434], "locat": [2, 7, 39, 40, 41, 55, 57, 62, 75, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 167, 185, 191, 203, 214, 262, 290, 291, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 416, 417, 418, 425, 429, 430, 433], "improv": [2, 4, 11, 195, 320, 412, 420, 429, 430, 433], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 145, 153, 197, 418, 429, 433], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 38, 39, 40, 41, 42, 44, 49, 55, 57, 59, 60, 62, 64, 66, 69, 75, 76, 104, 105, 118, 119, 120, 121, 124, 125, 126, 129, 132, 133, 145, 146, 153, 154, 171, 173, 179, 200, 212, 215, 223, 236, 238, 258, 271, 272, 306, 310, 337, 338, 340, 412, 416, 417, 419, 420, 421, 423, 425, 431, 433, 435], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 58, 65, 66, 74, 77, 78, 79, 80, 81, 90, 97, 143, 144, 189, 227, 241, 263, 264, 328, 419, 420, 424, 433], "sharabl": [2, 145, 153], "collabor": 2, "rather": [2, 4, 108, 143, 144, 210, 411, 412, 416, 417, 418, 421, 423, 429, 430, 433], "incur": [2, 116, 117, 130, 131], "transmiss": 2, "overhead": [2, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 170, 310], "content": [2, 3, 8, 16, 31, 32, 39, 40, 41, 42, 55, 56, 57, 61, 62, 66, 70, 71, 76, 103, 104, 105, 118, 121, 124, 125, 126, 132, 133, 140, 145, 146, 153, 154, 209, 245, 246, 266, 271, 272, 306, 338, 418, 431, 435], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 95, 96, 97, 118, 121, 125, 132, 133, 136, 137, 138, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 160, 164, 172, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 238, 255, 297, 298, 299, 300, 302, 306, 307, 309, 310, 312, 313, 314, 315, 323, 343, 353, 388, 409, 411, 412, 416, 417, 418, 419, 422, 423, 432], "writer": [2, 56, 61, 70, 71, 89, 92, 97, 99, 100, 104, 110, 111, 112, 115, 418, 433], "tensordictroundrobinwrit": [2, 99], "goe": [2, 4, 76, 147, 148, 416, 418, 429, 430, 436], "prioritizedsampl": [2, 56, 61, 70, 71, 97, 99, 325, 330, 353, 416, 433], "access": [2, 3, 7, 8, 11, 27, 38, 49, 56, 59, 60, 64, 69, 91, 118, 121, 125, 132, 133, 145, 146, 153, 154, 167, 179, 207, 228, 232, 238, 407, 410, 416, 421, 429, 430, 431, 433, 435], "tensordictreplaybuff": [2, 56, 61, 70, 96, 97, 99, 104, 105, 110, 178, 179, 390, 403, 409, 416, 417, 419, 433], "mp": [2, 18, 19, 20, 122, 236], "def": [2, 3, 22, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 99, 118, 121, 122, 125, 132, 133, 139, 145, 146, 153, 154, 167, 169, 173, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 238, 239, 242, 255, 259, 260, 263, 264, 268, 273, 305, 306, 314, 321, 323, 324, 329, 336, 338, 341, 343, 345, 346, 373, 383, 412, 413, 416, 417, 420, 428, 429, 430, 431, 433, 435, 436], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 39, 40, 41, 44, 55, 56, 57, 59, 61, 62, 67, 69, 70, 71, 76, 90, 99, 110, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 134, 135, 143, 144, 145, 146, 149, 153, 154, 155, 156, 170, 173, 176, 178, 180, 184, 186, 187, 188, 189, 190, 198, 199, 200, 201, 203, 212, 215, 219, 222, 225, 229, 236, 242, 244, 254, 255, 258, 261, 265, 267, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 306, 307, 309, 312, 314, 353, 356, 357, 358, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 374, 384, 392, 411, 412, 416, 417, 419, 430, 431, 432, 435], "__name__": [2, 3, 14, 15, 22, 122, 373, 417, 435], "__main__": [2, 3, 14, 15, 22, 122, 373, 435], "21": [2, 44, 76, 104, 105, 145, 147, 148, 153], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 49, 59, 60, 64, 69, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 221, 238, 281, 309, 310, 320, 321, 322, 323, 324, 325, 327, 329, 330, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 357, 358, 359, 396, 402, 403, 412, 413, 419, 420, 426, 429, 431], "arg": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 97, 99, 104, 105, 106, 108, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 172, 173, 174, 175, 176, 178, 179, 180, 183, 184, 187, 188, 191, 192, 193, 195, 197, 198, 199, 201, 206, 207, 208, 209, 210, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 240, 242, 244, 245, 246, 253, 254, 258, 261, 265, 266, 267, 268, 282, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 382, 386, 390, 393, 407, 417, 420], "join": [2, 122, 187, 409, 417, 418, 420, 429], "now": [2, 3, 7, 56, 61, 70, 71, 99, 143, 144, 145, 179, 216, 272, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 436], "20": [2, 44, 69, 75, 76, 104, 105, 110, 118, 121, 125, 129, 132, 133, 143, 144, 145, 146, 153, 154, 221, 238, 257, 259, 260, 263, 264, 281, 301, 384, 419, 433, 436], "_data": [2, 431], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 91, 99, 102, 110, 115, 118, 121, 125, 127, 132, 133, 139, 140, 145, 146, 147, 148, 153, 154, 157, 158, 159, 170, 176, 178, 179, 191, 197, 199, 203, 208, 221, 227, 229, 235, 238, 240, 248, 250, 256, 258, 271, 272, 281, 282, 283, 285, 286, 292, 293, 303, 305, 308, 310, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 344, 346, 353, 354, 355, 373, 382, 388, 410, 411, 412, 416, 417, 419, 420, 421, 429, 430, 431, 432, 433, 435, 436], "difficult": [2, 4, 145, 425], "pai": [2, 8, 179, 416], "word": [2, 3, 11, 63, 338, 416, 424, 431, 436], "1m": [2, 396, 416, 418, 419], "doe": [2, 3, 18, 27, 38, 39, 40, 41, 49, 55, 56, 57, 59, 60, 62, 64, 69, 70, 75, 76, 87, 88, 95, 96, 97, 104, 106, 108, 115, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 243, 252, 253, 259, 260, 261, 263, 264, 265, 274, 281, 293, 301, 311, 312, 320, 322, 330, 337, 338, 340, 354, 393, 412, 413, 416, 417, 418, 419, 421, 424, 429, 431, 433, 436], "howev": [2, 3, 5, 7, 27, 38, 49, 59, 60, 64, 69, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 197, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 238, 320, 322, 323, 337, 340, 342, 343, 411, 416, 417, 419, 420, 423, 431, 433, 436], "capac": [2, 56, 61, 70, 71, 90, 92, 96, 104, 112, 418, 424], "There": [2, 3, 10, 99, 228, 243, 261, 265, 320, 340, 411, 412, 413, 418, 419, 420, 422, 424, 429, 430, 431, 433, 435, 436], "circumv": 2, "account": [2, 90, 92, 112, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 175, 184, 269, 270, 411, 417, 419, 433, 436], "save": [2, 3, 8, 27, 38, 39, 40, 41, 49, 55, 56, 57, 59, 60, 61, 62, 64, 67, 69, 70, 71, 76, 87, 88, 90, 91, 92, 93, 95, 99, 106, 107, 108, 112, 113, 118, 121, 125, 132, 133, 145, 146, 153, 154, 235, 238, 374, 375, 377, 382, 393, 413, 420, 424, 425, 426, 429, 430], "convent": [2, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 157, 158, 412, 416, 419, 429, 430, 431], "overridden": [2, 3, 27, 38, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 355, 357, 358, 419, 429], "dim_extend": [2, 56, 61, 70, 71], "obtain": [2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 63, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 178, 207, 221, 234, 242, 244, 281, 283, 390, 416, 418, 421, 422, 423, 429, 430], "counterpart": [2, 3, 179], "desir": [2, 3, 11, 27, 30, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 168, 174, 176, 183, 184, 203, 205, 207, 208, 222, 228, 229, 232, 234, 238, 245, 246, 253, 266, 272, 297, 302, 303, 306, 307, 308, 309, 310, 411, 416, 420, 429, 430, 431, 433], "diversifi": 2, "offer": [2, 3, 7, 116, 117, 118, 121, 125, 130, 131, 132, 133, 137, 138, 145, 146, 153, 154, 227, 373, 411, 416, 417, 420, 421, 423, 424, 429, 431, 433, 436], "accomplish": [2, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 421], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 321, 327, 328, 336, 345, 382, 413, 421, 432, 433], "docstr": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 421, 422], "extens": [2, 56, 61, 70, 71, 105, 243, 413, 433], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 225, 229, 238, 243, 255, 259, 263, 273, 281, 303, 320, 330, 338, 340, 410, 413, 417, 420, 424, 428, 433], "happi": [2, 420], "concaten": [2, 8, 14, 15, 21, 44, 45, 47, 76, 132, 179, 180, 203, 219, 263, 266, 312, 416, 417, 422, 429, 430, 431, 433, 436], "schedul": [2, 4, 7, 63, 388, 418, 431], "transformedenv": [2, 3, 11, 12, 49, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 172, 173, 176, 179, 182, 183, 184, 186, 190, 191, 192, 198, 199, 200, 202, 203, 205, 209, 210, 211, 212, 215, 216, 217, 220, 221, 222, 223, 227, 228, 236, 238, 261, 265, 305, 375, 383, 416, 417, 418, 419, 420, 421, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "stepcount": [2, 44, 49, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 184, 227, 228, 229, 238, 244, 416, 417, 418, 419, 420, 421, 426, 429, 430, 435], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 44, 49, 67, 69, 110, 118, 121, 122, 125, 127, 132, 133, 145, 146, 153, 154, 172, 175, 176, 179, 182, 183, 184, 191, 197, 198, 199, 203, 205, 210, 211, 212, 215, 217, 221, 222, 223, 224, 227, 228, 229, 230, 236, 238, 244, 261, 265, 305, 373, 375, 403, 409, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 432, 433, 435, 436], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 179, 212, 409, 424, 433], "cartpol": [2, 3, 11, 35, 49, 67, 69, 118, 119, 120, 121, 122, 125, 132, 133, 145, 146, 153, 154, 175, 176, 179, 215, 221, 236, 238, 305, 373, 417, 419, 422, 424, 425, 426, 433, 436], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 49, 67, 69, 110, 118, 121, 122, 124, 125, 126, 130, 131, 132, 133, 140, 145, 146, 153, 154, 175, 176, 179, 182, 184, 192, 198, 199, 203, 210, 212, 215, 216, 217, 220, 221, 222, 223, 224, 227, 228, 230, 236, 238, 244, 261, 265, 305, 349, 364, 365, 366, 367, 369, 370, 371, 372, 373, 411, 417, 419, 421, 422, 423, 424, 425, 426, 431, 433, 435, 436], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 49, 116, 117, 118, 121, 125, 130, 131, 132, 133, 139, 145, 146, 147, 148, 149, 153, 154, 172, 173, 176, 179, 183, 186, 188, 190, 199, 203, 209, 212, 228, 229, 230, 231, 238, 242, 255, 268, 284, 286, 297, 302, 306, 307, 321, 323, 325, 327, 341, 343, 345, 346, 403, 411, 416, 417, 418, 419, 420, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 435, 436], "8": [2, 3, 6, 7, 31, 32, 39, 40, 41, 42, 49, 55, 57, 61, 62, 66, 69, 76, 96, 97, 104, 105, 116, 117, 118, 119, 120, 121, 125, 132, 133, 143, 144, 145, 146, 153, 154, 155, 172, 175, 184, 221, 224, 230, 245, 246, 248, 249, 257, 266, 298, 299, 300, 306, 309, 312, 336, 416, 417, 431, 433, 435], "traj_kei": [2, 97, 104, 105, 433], "truncated_kei": [2, 97, 104, 105, 212, 220], "strict_length": [2, 97, 104, 105, 375], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 42, 49, 56, 59, 60, 61, 64, 66, 67, 69, 71, 72, 76, 90, 92, 96, 97, 104, 105, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 184, 185, 201, 207, 212, 215, 227, 229, 234, 238, 260, 261, 264, 265, 284, 296, 303, 305, 306, 308, 309, 310, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 384, 396, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 429, 430, 431, 433, 435, 436], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 67, 69, 71, 74, 77, 78, 79, 80, 81, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 347, 412, 416, 417, 418, 419, 426, 429, 433, 435], "break": [2, 5, 14, 15, 16, 21, 27, 38, 49, 59, 60, 61, 64, 69, 71, 86, 97, 104, 105, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 179, 212, 236, 238, 261, 265, 290, 375, 417, 420, 424, 426, 433, 435], "step_count": [2, 14, 15, 16, 49, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 184, 220, 238, 418, 419, 420, 421, 426], "32": [2, 22, 31, 56, 61, 70, 71, 99, 105, 131, 151, 152, 157, 158, 179, 197, 245, 246, 247, 248, 249, 251, 252, 257, 266, 271, 272, 276, 277, 280, 283, 292, 353, 373, 417, 419, 420, 422, 423, 431, 432, 433, 435, 436], "33": [2, 27, 31, 38, 49, 59, 60, 64, 69, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 245, 246, 266], "34": [2, 245, 246, 266], "35": [2, 245, 246, 266], "36": 2, "37": [2, 178], "38": [2, 7, 44], "39": [2, 130, 131], "40": [2, 69, 130, 131], "41": [2, 104], "11": [2, 10, 23, 44, 53, 69, 75, 76, 90, 91, 92, 96, 105, 112, 122, 172, 225, 238, 242, 268], "12": [2, 7, 10, 44, 69, 90, 92, 105, 112, 130, 131, 145, 151, 152, 153, 238, 375, 433], "13": [2, 5, 69, 104, 105, 150, 235, 238, 239], "14": [2, 6, 69, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 203, 238, 239], "15": [2, 23, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 282, 301, 331, 433], "16": [2, 3, 27, 38, 49, 59, 60, 64, 69, 97, 105, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 179, 238, 419, 433], "17": [2, 11, 104, 105, 125, 145, 172, 238], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 310, 417, 418, 425, 429, 430, 432, 436], "sai": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 271, 429, 432, 436], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 47, 53, 61, 70, 71, 92, 93, 97, 100, 104, 105, 112, 118, 121, 124, 125, 126, 129, 132, 133, 145, 146, 153, 154, 186, 190, 208, 215, 227, 271, 272, 307, 320, 323, 340, 417, 418, 419, 420, 429, 430, 431], "handl": [2, 3, 21, 27, 38, 49, 51, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 235, 236, 238, 265, 266, 320, 338, 340, 393, 405, 406, 416, 417, 418, 419, 421, 423, 430, 433], "suggest": [2, 353, 416, 430], "serialenv": [2, 3, 118, 121, 125, 132, 133, 145, 146, 154, 222, 238, 244, 305, 409, 435, 436], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 175, 176, 179, 218, 221, 245, 246, 287, 288, 416, 420, 431, 433], "6": [2, 3, 7, 14, 15, 16, 17, 23, 44, 49, 61, 64, 69, 76, 97, 105, 119, 120, 125, 145, 151, 152, 172, 175, 184, 203, 205, 221, 227, 244, 245, 246, 248, 249, 250, 253, 257, 260, 266, 271, 272, 273, 276, 289, 305, 306, 314, 417, 420, 435], "5": [2, 3, 14, 15, 23, 30, 31, 32, 42, 44, 45, 46, 47, 48, 49, 53, 56, 61, 64, 66, 69, 70, 71, 99, 104, 105, 110, 118, 121, 122, 125, 130, 131, 132, 133, 137, 138, 140, 145, 146, 151, 152, 153, 154, 157, 158, 172, 175, 176, 178, 184, 200, 212, 219, 220, 221, 227, 238, 241, 242, 243, 244, 245, 246, 248, 249, 254, 255, 256, 257, 259, 262, 263, 266, 268, 271, 272, 276, 281, 284, 290, 291, 301, 302, 305, 307, 313, 337, 340, 342, 345, 346, 373, 411, 415, 416, 417, 420, 422, 426, 429, 430, 431, 433, 434, 435, 436], "7": [2, 3, 6, 10, 44, 49, 53, 56, 61, 69, 70, 97, 105, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 172, 175, 184, 221, 224, 242, 244, 245, 246, 249, 266, 268, 271, 361, 416, 433, 435], "9": [2, 3, 7, 23, 27, 44, 49, 56, 61, 69, 70, 76, 97, 105, 110, 119, 120, 136, 147, 148, 154, 172, 175, 184, 221, 224, 229, 236, 238, 270, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353, 383, 412, 416, 417, 429, 430], "18": [2, 44, 104, 105, 151, 152, 157, 158, 227, 238, 272], "19": [2, 104, 105, 110, 238, 415, 434], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 145, 153, 194, 201, 222, 231, 243, 272, 296, 320, 340, 412, 413, 416, 417, 430, 433, 435], "congruent": 2, "name": [2, 3, 6, 7, 16, 27, 31, 32, 38, 39, 40, 41, 42, 49, 55, 57, 59, 60, 62, 64, 66, 69, 75, 76, 86, 116, 118, 119, 121, 125, 130, 132, 133, 136, 137, 138, 140, 143, 145, 146, 147, 148, 150, 153, 154, 157, 158, 160, 167, 171, 172, 173, 175, 176, 178, 179, 180, 183, 184, 188, 189, 191, 192, 193, 195, 197, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 235, 236, 238, 239, 261, 265, 302, 307, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 355, 357, 358, 359, 373, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 413, 416, 417, 418, 419, 420, 423, 424, 425, 429, 430, 431, 432, 436], "randomcroptensordict": [2, 416], "unlik": [2, 25, 103, 125, 137, 138, 157, 158, 241, 243, 305, 330, 340, 375, 411, 417, 420, 422, 424, 435], "stop": [2, 3, 16, 21, 63, 97, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 418, 424, 429, 430, 435, 436], "signal": [2, 3, 14, 15, 16, 17, 23, 44, 97, 104, 105, 110, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 171, 179, 184, 191, 200, 220, 223, 412, 416, 418, 429, 430, 433, 436], "disk": [2, 3, 39, 40, 41, 44, 55, 56, 57, 61, 62, 70, 71, 76, 90, 99, 393, 413, 416, 417, 419, 420, 424, 425, 429, 433], "dump": [2, 3, 11, 35, 39, 40, 41, 55, 56, 57, 61, 62, 67, 70, 71, 76, 88, 90, 91, 92, 93, 99, 106, 108, 112, 373, 374, 375, 425, 426, 429], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 39, 40, 41, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 75, 76, 88, 90, 91, 92, 93, 99, 106, 107, 108, 112, 113, 118, 120, 121, 125, 132, 133, 145, 146, 153, 154, 155, 169, 187, 236, 238, 393, 407, 413, 416, 418, 420, 433], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 323, 345, 418, 421, 423, 424, 429, 430, 436], "anticip": [2, 186, 190], "compli": [2, 243, 411], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 226, 235, 273, 297, 302, 303, 306, 307, 308, 309, 310, 418, 420, 429, 430, 431, 433], "exact": [2, 3, 23, 145, 263], "statu": [2, 3, 121], "prioriti": [2, 4, 56, 70, 71, 90, 91, 92, 93, 96, 97, 106, 108, 112, 323, 324, 325, 327, 328, 329, 330, 336, 341, 343, 345, 346, 353, 413, 416, 417, 433], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 44, 49, 59, 60, 63, 64, 69, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 145, 146, 150, 153, 154, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 200, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 243, 297, 302, 303, 306, 307, 308, 309, 310, 338, 355, 356, 357, 358, 359, 375, 412, 416, 417, 422, 429, 431, 436], "hood": [2, 3, 21, 118, 121, 125, 132, 133, 145, 146, 153, 154, 243, 431], "naiv": [2, 232, 421], "just": [2, 3, 4, 76, 108, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 136, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 171, 175, 182, 222, 239, 272, 384, 413, 416, 417, 418, 419, 420, 421, 422, 424, 429, 430, 431, 433, 435, 436], "public": [2, 107, 207, 234], "serializ": 2, "consum": [2, 103, 105, 305, 417, 418, 424, 430, 433], "much": [2, 3, 8, 14, 15, 17, 56, 70, 96, 97, 145, 153, 337, 340, 418, 420, 421, 425, 429, 430, 431, 433, 436], "duplic": [2, 27, 38, 49, 59, 60, 64, 69, 103, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 321, 323, 325, 330, 336, 338, 341, 343, 345, 346, 353], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 44, 49, 67, 69, 76, 87, 88, 95, 97, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 165, 170, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 196, 197, 198, 199, 201, 203, 204, 205, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 236, 238, 244, 247, 248, 249, 250, 251, 252, 255, 258, 261, 265, 271, 276, 277, 280, 281, 282, 284, 285, 297, 298, 299, 300, 301, 302, 305, 306, 307, 314, 315, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 337, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 375, 403, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 433, 435, 436], "plu": [2, 14, 15, 17, 63, 145, 153, 431], "enabl": [2, 7, 8, 90, 92, 103, 112, 176, 261, 265, 282, 305, 373, 375, 388, 418, 421, 429, 430, 431, 433], "three": [2, 25, 26, 30, 34, 45, 46, 47, 48, 53, 54, 59, 86, 323, 411, 413, 418, 420, 421, 422, 429, 430, 431, 433, 436], "flatstoragecheckpoint": 2, "discard": [2, 3, 75, 125, 170, 232, 374, 433, 436], "compress": 2, "At": [2, 224, 258, 267, 417, 418, 419, 424, 428, 431, 432], "correct": [2, 4, 39, 40, 41, 55, 57, 62, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 199, 396, 418, 419], "addit": [2, 3, 4, 27, 38, 49, 51, 59, 60, 64, 69, 76, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 157, 179, 183, 207, 222, 226, 228, 229, 232, 234, 238, 240, 259, 301, 305, 309, 319, 338, 355, 373, 375, 412, 416, 417, 420, 421, 429, 430, 433], "nestedstoragecheckpoint": 2, "represent": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 91, 118, 121, 125, 132, 133, 145, 146, 153, 154, 207, 232, 234, 238, 320, 340, 416, 431, 432, 436], "appar": [2, 3, 386], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 87, 88, 95, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 164, 167, 172, 182, 189, 197, 200, 222, 230, 240, 246, 252, 255, 271, 277, 282, 284, 297, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 325, 327, 328, 329, 340, 345, 346, 353, 411, 412, 417, 418, 419, 420, 421, 422, 423, 429, 430, 431, 436], "assumpt": [2, 3, 74, 431, 433], "accur": [2, 7, 417, 431, 433], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 44, 49, 50, 58, 67, 69, 72, 75, 87, 88, 95, 97, 104, 105, 118, 119, 120, 121, 124, 125, 126, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 155, 157, 158, 171, 172, 187, 191, 192, 197, 202, 209, 212, 216, 220, 222, 229, 230, 238, 261, 265, 291, 305, 361, 416, 418, 421, 429, 436], "marl": [2, 136, 160, 179, 219, 223, 271, 272, 273, 329, 343, 412, 421, 429, 430], "extra": [2, 10, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 179, 236, 238, 382, 411, 418, 419, 433], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 173], "concret": [2, 416, 418], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 44, 49, 67, 69, 116, 117, 118, 121, 125, 130, 131, 132, 133, 139, 145, 146, 153, 154, 175, 184, 203, 210, 215, 221, 223, 229, 238, 420, 424, 426, 431, 435, 436], "manual_se": [2, 3, 25, 35, 45, 46, 56, 61, 67, 69, 70, 71, 91, 104, 105, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 173, 175, 184, 189, 203, 212, 215, 221, 223, 238, 258, 269, 270, 278, 281, 282, 297, 303, 310, 313, 320, 321, 323, 324, 328, 336, 343, 420, 424, 426, 429, 430, 431, 435, 436], "200": [2, 14, 15, 16, 21, 27, 35, 38, 49, 59, 60, 64, 67, 69, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 157, 158, 212, 238, 248, 249, 256, 285, 286, 373, 375, 416, 419, 420, 424, 426, 433], "22": [2, 104, 105, 235], "rb_test": 2, "_storag": [2, 432, 433], "max_siz": [2, 44, 56, 61, 69, 70, 71, 90, 91, 92, 93, 104, 105, 106, 110, 112, 418, 424], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 39, 40, 41, 55, 57, 62, 76, 140, 227, 252, 269, 270, 271, 319, 323, 373, 416, 418, 420, 429, 430], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 236, 238, 271, 272, 323, 343, 407, 413, 416, 417, 436], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 236, 238, 323, 343, 413, 416], "drawback": 2, "struggl": 2, "big": [2, 418, 424, 433, 436], "sequenti": [2, 9, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 178, 199, 238, 296, 298, 299, 300, 306, 311, 312, 317, 320, 321, 323, 329, 336, 340, 341, 342, 343, 345, 411, 418, 419, 422, 430, 431, 432, 435, 436], "known": [2, 3, 5, 7, 8, 69, 125, 222, 362, 363, 416, 417, 421], "seamless": [2, 266], "integr": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 251, 261, 265, 268, 309, 411, 421, 422, 424, 429, 430, 431, 432], "indiffer": 2, "particularli": [2, 420, 435, 436], "heavili": [2, 11], "smooth": [2, 241, 416, 417, 423], "essenti": [2, 3, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 417, 421, 429, 431, 433], "understand": [2, 8, 416, 417, 420, 421, 422, 429, 430], "purpos": [2, 3, 7, 11, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 259, 320, 322, 334, 337, 340, 342, 403, 416, 418, 419, 420, 423, 425, 429, 430, 432, 436], "guid": [2, 11, 147, 148, 151, 152, 221, 410, 416, 430, 435], "explan": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 243], "effect": [2, 3, 27, 31, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 97, 99, 102, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 179, 184, 229, 238, 243, 393, 411, 416, 422, 429, 433, 436], "realm": [2, 422], "As": [2, 3, 4, 49, 61, 70, 71, 74, 99, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 212, 253, 310, 355, 411, 416, 417, 418, 419, 420, 421, 423, 424, 429, 430, 431, 432, 433, 435, 436], "practition": 2, "often": [2, 3, 8, 273, 335, 338, 393, 416, 417, 421, 423, 431, 433, 436], "encount": [2, 4, 201, 305, 410, 417, 422, 431], "situat": [2, 137, 138], "sometim": [2, 3, 74, 419, 436], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 60, 64, 65, 66, 74, 77, 78, 79, 80, 81, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 141, 142, 143, 144, 145, 146, 150, 153, 154, 155, 156, 157, 158, 187, 224, 228, 259, 260, 261, 263, 264, 265, 268, 298, 299, 300, 338, 341, 383, 413, 417], "immedi": [2, 27, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 354, 429, 430], "199": 2, "info": [2, 3, 14, 15, 56, 61, 70, 71, 76, 96, 97, 99, 102, 104, 105, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 197, 230, 232, 235, 237, 382, 421, 426, 429, 430, 433, 435], "glanc": [2, 421], "seem": [2, 416, 419, 421], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 44, 59, 63, 65, 66, 91, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 179, 208, 219, 228, 259, 261, 263, 265, 292, 298, 299, 300, 315, 411, 417, 419, 421, 429], "less": [2, 140, 293, 405, 406, 412, 418, 419, 433, 435], "omit": [2, 133, 240, 258, 282, 389, 418, 423, 431, 433], "proper": [2, 3, 4, 6, 7, 355, 356, 357, 358, 417, 418, 429, 430, 431, 433], "imposs": [2, 3, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 320, 322, 337, 340, 342], "determin": [2, 44, 56, 70, 76, 96, 97, 118, 121, 125, 132, 133, 145, 146, 153, 154, 157, 158, 159, 187, 207, 234, 271, 282, 323, 417, 422, 429, 430], "complic": [2, 59, 69, 431, 433, 436], "matter": [2, 33, 424], "inconsist": [2, 436], "miss": [2, 3, 4, 6, 7, 27, 31, 38, 44, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 197, 227, 229, 238, 239, 311, 312, 320, 323, 343, 410, 416, 419], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 133, 424], "elimin": [2, 3, 421], "upon": [2, 3, 8, 429, 431], "canon": 2, "definit": [2, 53, 106, 271], "markov": [2, 3, 421, 436], "mdp": [2, 170, 421, 431], "context": [2, 3, 5, 8, 27, 38, 49, 59, 60, 64, 69, 105, 118, 121, 122, 125, 132, 133, 142, 145, 146, 153, 154, 222, 231, 238, 243, 261, 265, 272, 274, 296, 301, 351, 352, 355, 356, 357, 358, 360, 368, 375, 383, 388, 411, 412, 416, 417, 418, 419, 420, 429, 430, 431, 432, 433, 435], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 75, 77, 78, 79, 80, 81, 132, 184, 221, 236, 302, 303, 305, 307, 308, 319, 412, 416, 429, 431, 433], "complet": [2, 7, 9, 103, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 179, 220, 410, 412, 416, 418, 421, 428], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 44, 49, 50, 63, 67, 69, 87, 88, 95, 104, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 171, 172, 175, 176, 187, 191, 197, 209, 222, 230, 238, 242, 261, 265, 268, 305, 311, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 416, 417, 418, 429, 430, 431, 435, 436], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 44, 49, 50, 55, 62, 63, 67, 69, 75, 76, 86, 96, 97, 110, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 164, 170, 172, 173, 176, 177, 182, 183, 186, 188, 190, 191, 192, 197, 199, 200, 201, 205, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 228, 229, 230, 231, 233, 234, 236, 238, 242, 261, 268, 301, 305, 315, 320, 321, 323, 324, 325, 327, 328, 329, 332, 336, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 386, 387, 388, 391, 407, 412, 413, 416, 417, 418, 419, 420, 421, 425, 429, 430, 431, 435, 436], "imit": [2, 3, 334], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 72, 74, 76, 77, 78, 79, 80, 81, 118, 121, 122, 125, 128, 131, 132, 133, 145, 146, 153, 154, 238, 244, 245, 246, 266, 272, 411, 412, 413, 416, 417, 418, 419, 420, 421, 429, 430, 431, 433, 435], "stateless": [2, 3, 44, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 184, 338, 373, 416, 421, 431, 436], "simul": [2, 3, 5, 7, 8, 74, 116, 117, 118, 127, 130, 131, 150, 157, 158, 166, 242, 268, 411, 416, 418, 420, 421, 425, 429, 430], "furthermor": [2, 429, 430], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 75, 118, 121, 125, 132, 133, 145, 146, 153, 154, 169, 184, 195, 220, 229, 238, 258, 260, 264, 337, 416, 417, 418, 420, 426, 429, 430, 436], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 76, 77, 78, 79, 80, 81, 83, 102, 108, 115, 118, 121, 123, 125, 132, 133, 139, 145, 146, 153, 154, 164, 171, 173, 176, 186, 187, 188, 189, 190, 192, 197, 199, 201, 209, 210, 216, 220, 222, 226, 227, 228, 230, 238, 240, 242, 268, 297, 306, 310, 312, 313, 317, 320, 340, 409, 416, 418, 422, 431], "accommod": [2, 3, 421, 422], "uniform": [2, 56, 70, 96, 97, 429], "unambigu": 2, "distinguish": [2, 3, 137, 138, 157, 158], "happen": [2, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 239, 282, 417, 420, 423, 424, 425, 432, 436], "everyth": [2, 417, 418, 419, 425, 426], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 235, 236, 310, 416, 424, 430], "rule": [2, 69, 145, 186, 190, 310, 411, 418], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 39, 40, 41, 44, 49, 55, 57, 58, 59, 60, 62, 63, 64, 67, 69, 70, 71, 72, 74, 75, 76, 90, 91, 92, 96, 104, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 170, 172, 176, 186, 187, 190, 191, 192, 197, 205, 209, 210, 212, 216, 219, 220, 222, 227, 229, 230, 238, 242, 244, 254, 255, 261, 265, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 397, 410, 411, 417, 431], "taken": [2, 3, 25, 26, 30, 34, 45, 46, 47, 48, 53, 54, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 211, 269, 270, 412, 416, 418, 419, 422, 429, 430, 431], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 39, 40, 41, 44, 55, 57, 58, 59, 62, 63, 67, 69, 70, 71, 72, 75, 76, 86, 90, 91, 92, 96, 104, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 170, 172, 176, 186, 187, 190, 191, 192, 197, 205, 209, 210, 212, 216, 219, 220, 222, 230, 236, 242, 244, 254, 255, 261, 265, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 411, 431], "envbas": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 76, 118, 122, 125, 132, 133, 145, 146, 153, 154, 159, 170, 173, 176, 186, 190, 202, 209, 210, 228, 229, 236, 238, 242, 261, 265, 267, 268, 305, 388, 397, 398, 399, 403, 405, 406, 407, 409, 421], "brought": [2, 418, 419, 422], "step_mdp": [2, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 261, 265, 409, 419, 421, 431, 435, 436], "count": [2, 3, 44, 49, 76, 121, 122, 220, 227, 282, 388, 393, 396, 416, 417, 418, 419, 433, 436], "trigger": [2, 7, 59, 69, 132], "turn": [2, 18, 19, 20, 21, 31, 32, 39, 40, 41, 42, 55, 57, 60, 62, 64, 66, 76, 118, 131, 145, 154, 196, 228, 231, 235, 302, 373, 388, 412, 416, 417, 419, 422, 431, 432], "retain": [2, 118, 121, 125, 132, 133, 145, 146, 153, 154], "regard": [2, 255, 303, 320, 330, 340, 416, 418, 431], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 90, 104, 105, 176, 222, 253, 309, 312, 321, 323, 336, 338, 341, 343, 345, 346, 429, 430, 431, 433, 435], "recur": [2, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 359, 422], "anyth": [2, 4, 14, 15, 16, 17, 18, 19, 20, 21, 412], "els": [2, 116, 117, 176, 187, 259, 260, 263, 264, 276, 411, 413, 416, 417, 418, 419, 429, 430, 431, 432], "repetit": [2, 418, 421, 424], "embed": [2, 207, 232, 233, 234, 248, 283, 297, 298, 299, 300, 309, 310, 314, 432], "strictli": [2, 3, 8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 200, 227, 229, 238, 323, 343, 416, 418], "enforc": [2, 27, 31, 38, 49, 59, 60, 64, 69, 103, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 311, 323, 343, 431], "n_action": [2, 305, 321, 323, 325, 327, 339, 343], "rightmost": [2, 412], "n_ob": [2, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 305, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 423], "estim": [2, 4, 97, 104, 105, 191, 199, 248, 290, 298, 299, 300, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 412, 417, 418, 422, 423, 429, 430], "subsequ": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 238, 419, 429], "proce": [2, 429], "state_valu": [2, 299, 300, 314, 322, 328, 336, 337, 340, 341, 343, 355, 356, 357, 358, 360, 362, 364, 366, 368, 369, 371, 411, 416, 430], "f": [2, 116, 117, 125, 130, 131, 224, 239, 264, 319, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 416, 417, 418, 419, 426, 429, 430, 431, 433, 436], "next_state_valu": [2, 345, 346, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 409], "broadcast": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 253, 329, 343], "left": [2, 51, 97, 104, 176, 183, 185, 186, 188, 192, 199, 201, 207, 209, 210, 216, 220, 223, 226, 228, 230, 232, 234, 238, 258, 271, 417, 418, 420, 424, 425], "would": [2, 3, 27, 38, 49, 59, 60, 63, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 259, 261, 263, 265, 266, 271, 310, 412, 413, 417, 418, 419, 421, 423, 424, 431, 433, 435, 436], "best": [2, 5, 9, 129, 261, 265, 429, 430, 433, 435], "bug": [2, 4], "worst": [2, 417], "twice": [2, 8, 105], "feasibl": 2, "mostli": [2, 3, 17, 281, 375, 412, 425, 433, 436], "eas": [2, 3, 429, 430], "flat": [2, 110], "manner": [2, 125, 207, 232, 411, 416, 417, 418, 424, 428, 431, 433], "ted2flat": [2, 35, 409], "flat2t": [2, 409], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 176, 305], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 99, 118, 119, 120, 121, 125, 132, 133, 145, 146, 153, 154, 194, 195, 197, 218, 219, 220, 223, 227, 229, 231, 238, 323, 343, 412, 418, 429, 430, 431, 433], "both": [2, 3, 7, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 118, 121, 122, 124, 125, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 155, 159, 171, 172, 179, 197, 210, 226, 227, 229, 238, 245, 246, 261, 264, 265, 266, 271, 272, 298, 299, 300, 303, 308, 320, 322, 323, 324, 328, 329, 336, 337, 338, 340, 341, 342, 343, 345, 346, 388, 411, 416, 418, 420, 421, 423, 429, 430, 431, 432, 433, 436], "mark": [2, 3, 16, 118, 121, 125, 132, 133, 145, 146, 153, 154, 224, 261, 265, 355, 357, 358, 424, 433], "identifi": [2, 58, 118, 121, 125, 132, 133, 145, 146, 153, 154], "abov": [2, 3, 7, 27, 38, 49, 59, 60, 64, 69, 77, 118, 121, 125, 132, 133, 145, 146, 153, 154, 228, 238, 262, 290, 291, 319, 412, 413, 416, 418, 420, 421, 422, 429, 430, 431, 436], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 74, 76, 97, 104, 105, 118, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 171, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 197, 199, 201, 203, 207, 209, 210, 215, 216, 219, 220, 223, 224, 226, 228, 229, 230, 232, 234, 235, 238, 240, 245, 246, 247, 248, 249, 252, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 271, 272, 279, 281, 282, 284, 293, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 373, 375, 384, 411, 412, 416, 417, 418, 419, 420, 421, 422, 425, 428, 429, 430, 431, 432, 435, 436], "typic": [2, 3, 4, 8, 27, 38, 49, 59, 60, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 191, 221, 238, 279, 281, 306, 321, 323, 338, 340, 343, 411, 412, 413, 418, 420, 421, 423, 424, 429, 430, 431], "adjust": [2, 11, 222, 416, 429, 430, 431], "grumodul": [2, 178, 222, 296, 317, 419], "lstmmodul": [2, 261, 296, 419, 420], "skip": [2, 3, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 184, 195, 197, 201, 227, 229, 238, 306, 310, 323, 338, 343, 355, 356, 357, 358, 374, 375, 386, 388, 416, 417, 431], "accumul": [2, 8, 238], "upcom": [2, 338, 364, 365, 366, 367, 369, 370, 371, 372, 416], "popular": [2, 3, 411, 419, 423, 430], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 238, 409, 417], "shift": [2, 35, 37, 49, 50, 67, 87, 88, 95, 316, 355, 356, 357, 358, 418], "approxim": [2, 430, 436], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 179, 252, 280, 320, 326, 339, 340, 384, 407, 418, 419, 430, 433], "2x": 2, "small": [2, 105, 232, 241, 416, 418, 420, 429, 430, 436], "clearer": [2, 420, 422], "lazi": [2, 65, 66, 83, 84, 118, 121, 125, 132, 133, 145, 146, 153, 154, 157, 158, 207, 232, 245, 271, 274, 311, 312, 416, 417, 422, 424, 428, 433, 436], "certainli": 2, "benefici": 2, "welcom": [2, 421], "wrapper": [2, 3, 17, 39, 40, 41, 55, 57, 62, 63, 70, 71, 76, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 235, 239, 243, 244, 293, 301, 305, 310, 315, 355, 380, 381, 382, 407, 409, 418, 419, 421, 429, 430, 432, 435, 436], "around": [2, 5, 7, 17, 70, 71, 118, 121, 125, 132, 133, 139, 145, 146, 149, 153, 154, 243, 281, 305, 310, 355, 416, 417, 430, 436], "selecttransform": [2, 118, 121, 125, 132, 133, 145, 146, 153, 154], "excludetransform": [2, 216, 433], "promptli": 2, "virtual": [2, 3, 124], "instal": [2, 3, 5, 10, 18, 19, 20, 60, 69, 118, 121, 125, 132, 133, 145, 146, 147, 148, 151, 152, 153, 154, 377, 393, 410, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 436], "respons": [2, 3, 8, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 393, 423, 424, 436], "d4rl": 2, "repositori": [2, 7, 157, 158, 429, 430], "wheel": [2, 418], "publish": 2, "openml": [2, 142], "scikit": [2, 142], "panda": 2, "raw": [2, 3, 4, 63, 197, 226, 230, 262, 290, 291, 417, 420, 424, 431], "go": [2, 3, 7, 91, 136, 145, 184, 208, 212, 301, 361, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "natur": [2, 3, 416, 422, 423, 424, 433], "modifi": [2, 3, 7, 8, 27, 38, 49, 59, 60, 64, 69, 75, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 179, 183, 184, 194, 197, 199, 207, 222, 228, 229, 232, 234, 238, 273, 282, 301, 309, 310, 396, 412, 416, 417, 418, 420, 421, 429, 430, 431], "fly": [2, 179, 236, 337, 412, 418, 431, 433, 436], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 65, 66, 74, 77, 78, 79, 80, 81, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 182, 425, 436], "pre": [2, 7, 22, 27, 38, 49, 59, 60, 64, 69, 75, 92, 118, 121, 125, 132, 133, 145, 146, 153, 154, 207, 226, 232, 234, 238, 436], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 198, 199, 200, 202, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 243, 259, 263, 273, 290, 302, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 355, 373, 389, 413, 416, 417, 418, 424, 429, 431, 435, 436], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 97, 104, 110, 129, 130, 131, 145, 147, 148, 182, 201, 215, 245, 246, 256, 258, 271, 272, 305, 375, 377, 380, 382, 393, 405, 406, 416, 417, 418, 419, 420, 422, 423, 426, 429, 430, 433, 435], "pipelin": [2, 3, 7, 411, 412, 418], "replac": [2, 3, 6, 7, 27, 38, 49, 59, 60, 64, 69, 97, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 175, 189, 191, 198, 238, 258, 411, 429, 433, 435], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 201, 212, 222, 229, 238, 240, 282, 305, 391, 411, 413, 417, 418, 419, 422, 425, 431, 433, 436], "produc": [2, 3, 31, 32, 42, 44, 66, 104, 172, 175, 176, 245, 246, 266, 272, 278, 298, 300, 301, 310, 375, 418, 419, 420, 421, 422, 424, 433, 436], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 87, 103, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 227, 229, 238, 243, 320, 321, 323, 336, 338, 340, 341, 342, 343, 345, 346, 418], "download": [2, 7, 10, 129, 207, 234, 375, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 146, 417, 429, 430, 431], "robosetexperiencereplai": [2, 104, 105], "fk1": 2, "v4": [2, 125, 145, 172, 211, 364, 365, 366, 367, 369, 370, 371, 372, 416, 418, 432, 435], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 237], "obs_norm": 2, "norm": [2, 4, 8, 116, 117, 241, 393, 416, 417, 418, 429, 430, 431], "num_work": [2, 55, 57, 75, 86, 140, 145, 153, 416, 417], "os": [2, 57, 75, 86, 417], "cpu_count": [2, 57, 75, 86], "num_chunk": 2, "1000": [2, 4, 44, 61, 69, 90, 91, 96, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 236, 240, 258, 281, 282, 306, 310, 335, 416, 417, 418, 419, 420, 422, 424, 426, 431, 432, 433], "mp_start_method": [2, 145, 153, 227, 417, 435], "fork": [2, 5, 416, 417, 418, 419, 429, 430, 432, 435], "recreat": [2, 431], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 61, 70, 71, 97, 99, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 199, 420, 424, 432], "grain": [2, 3, 61, 70, 71, 97, 99, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176], "nomenclatur": 2, "compact": [2, 44, 67, 87, 88, 95], "propos": [2, 179, 191, 243, 267, 335, 344, 411, 419, 433], "replaybufferensembl": [2, 102, 108, 115], "primit": [2, 3, 4, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 75, 97, 99, 110, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 238, 416, 430], "dummi": [2, 3, 154, 187, 373, 416, 420, 424, 436], "semant": [2, 65, 66, 124, 126, 432], "ident": [2, 3, 14, 15, 16, 39, 40, 41, 49, 55, 57, 61, 62, 69, 70, 71, 76, 90, 99, 104, 118, 121, 124, 125, 126, 132, 133, 140, 145, 146, 153, 154, 191, 219, 228, 241, 271, 272, 321, 323, 336, 341, 343, 345, 346, 355, 356, 357, 358, 405, 406, 417, 421, 429, 430], "another_kei": [2, 99], "renam": [2, 3, 39, 40, 41, 55, 57, 62, 76, 99, 170, 210, 212, 416], "resiz": [2, 3, 99, 179, 417, 419, 420, 421, 433, 436], "imag": [2, 3, 4, 7, 11, 179, 181, 185, 207, 225, 234, 266, 373, 375, 416, 417, 420, 421, 425, 430, 432, 436], "comops": 2, "totensorimag": [2, 3, 99, 179, 211, 417, 419, 420, 433, 435, 436], "renametransform": [2, 3, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179], "rb0": [2, 99], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 59, 69, 99, 116, 117, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 165, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 254, 261, 265, 268, 283, 292, 293, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 334, 336, 337, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 374, 375, 403, 411, 416, 417, 418, 419, 420, 422, 423, 426, 428, 429, 430, 431, 432, 433, 435, 436], "pixel": [2, 3, 7, 31, 99, 118, 119, 120, 124, 126, 127, 150, 179, 181, 185, 191, 194, 196, 203, 205, 207, 211, 225, 232, 234, 248, 276, 277, 373, 375, 416, 417, 419, 420, 425, 429, 432, 433, 435, 436], "rb1": [2, 99], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 59, 69, 99, 116, 117, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 165, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 254, 255, 261, 265, 268, 283, 284, 292, 293, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 320, 321, 322, 323, 328, 329, 334, 336, 337, 340, 341, 342, 343, 345, 353, 355, 356, 357, 358, 373, 375, 388, 403, 411, 416, 417, 418, 419, 420, 422, 426, 428, 429, 430, 431, 432, 433, 435, 436], "pixels33": [2, 99], "data0": [2, 91, 99], "244": [2, 99, 207, 234], "data1": [2, 91, 99, 435], "_": [2, 8, 56, 61, 70, 71, 91, 99, 118, 122, 129, 157, 158, 180, 186, 187, 189, 190, 199, 203, 210, 225, 236, 238, 281, 297, 309, 310, 314, 319, 320, 321, 323, 324, 328, 329, 336, 340, 341, 343, 345, 346, 355, 356, 357, 358, 377, 416, 417, 418, 419, 420, 426, 429, 430, 431, 433, 435], "rang": [2, 3, 4, 8, 56, 61, 63, 70, 71, 90, 92, 99, 110, 118, 121, 122, 125, 132, 133, 137, 138, 145, 146, 153, 154, 187, 212, 225, 236, 238, 239, 260, 264, 281, 337, 345, 346, 412, 413, 416, 418, 419, 420, 423, 424, 426, 429, 430, 431, 433, 435], "parent": [2, 3, 21, 27, 37, 38, 49, 51, 59, 60, 64, 69, 74, 76, 99, 108, 115, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 176, 179, 180, 183, 184, 188, 191, 194, 195, 201, 203, 207, 215, 220, 221, 222, 223, 227, 228, 231, 232, 238, 261, 265, 298, 317, 338, 340, 359, 373, 375, 416, 424, 431, 435, 436], "basic": [2, 3, 139, 411, 418, 423, 424, 426, 429, 435, 436], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 99, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 175, 227, 228, 229, 236, 238, 253, 262, 270, 274, 278, 289, 290, 291, 305, 320, 323, 338, 340, 342, 343, 422, 424, 431, 433], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 72, 74, 76, 77, 78, 79, 80, 81, 107, 113, 118, 121, 125, 132, 133, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 274, 275, 282, 284, 285, 286, 287, 288, 290, 293, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 387, 391, 396, 403, 411, 412, 413, 416, 417, 418, 419, 420, 421, 429, 430, 431, 435, 436], "send": [2, 3, 8, 382, 435], "receiv": [2, 3, 27, 38, 49, 59, 60, 63, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 228, 229, 238, 266, 361, 412, 416, 418, 423, 428, 431], "spawn": [2, 3, 4, 18, 22, 129, 140, 145, 153, 227, 417, 429, 430], "check_env_spec": [2, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 197, 209, 230, 373, 409, 418, 429, 430, 431], "saniti": [2, 3, 7, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 418], "make_composite_from_td": [2, 74, 409, 431], "fall": [2, 4], "categori": [2, 31, 411, 413], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 49, 59, 60, 64, 69, 77, 118, 121, 125, 132, 133, 145, 146, 149, 153, 154, 182, 202, 236, 238, 240, 258, 282, 285, 286, 297, 302, 303, 306, 307, 308, 309, 310, 313, 320, 321, 323, 324, 336, 340, 341, 343, 345, 346, 409, 411, 416, 417, 418, 420, 429, 431, 435, 436], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 61, 62, 65, 66, 70, 71, 74, 76, 78, 79, 80, 81, 99, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 164, 173, 176, 186, 187, 190, 209, 222, 242, 268, 297, 309, 312, 314, 342, 409, 431, 433], "boundeddiscret": [2, 28, 31], "boundedcontinu": [2, 22, 28, 31, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 200, 230], "unboundeddiscret": [2, 77, 146, 197, 409], "unboundedcontinu": [2, 77, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 209, 222, 312, 317, 409], "implicitli": 2, "onehot": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 54, 65, 66, 74, 77, 78, 79, 80, 81, 116, 117, 124, 126, 127, 130, 131, 140, 141, 143, 144, 150, 155, 156, 255, 284, 302, 307, 325, 327, 328, 329, 353, 409, 411], "multionehot": [2, 45, 46, 48, 325, 328, 329, 353, 409], "multicategor": [2, 46, 47, 48, 409], "binari": [2, 3, 7, 26, 27, 53, 155, 173, 177, 255, 284, 302, 303, 307, 308, 325, 328, 329, 353, 409], "concept": [2, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 281, 417, 433], "arbitrari": [2, 3, 25, 53, 61, 118, 121, 125, 131, 132, 133, 145, 146, 153, 154, 175, 412, 416, 417, 431, 433], "combin": [2, 4, 36, 60, 345, 417, 420, 425, 433, 435], "relat": [2, 3, 4, 10, 56, 145, 194, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 417, 426, 431], "nevertheless": [2, 3, 418, 421, 433], "otherwis": [2, 3, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 97, 99, 104, 105, 116, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 179, 180, 184, 189, 197, 203, 221, 222, 223, 227, 228, 229, 236, 238, 239, 241, 243, 259, 262, 263, 271, 272, 290, 291, 296, 302, 307, 310, 313, 321, 323, 332, 338, 339, 343, 355, 357, 358, 388, 390, 412, 413, 416, 417, 418, 419, 431, 436], "similarli": [2, 3, 21, 27, 38, 49, 59, 60, 64, 69, 103, 108, 118, 121, 125, 132, 133, 145, 146, 153, 154, 201, 238, 271, 311, 312, 328, 336, 436], "possess": [2, 74], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 76, 77, 78, 79, 80, 81, 97, 164, 173, 176, 179, 180, 225, 231, 416, 419, 420, 429, 430, 431], "move": [2, 4, 27, 38, 49, 59, 60, 64, 69, 74, 118, 121, 125, 126, 132, 133, 145, 146, 153, 154, 170, 172, 183, 188, 207, 222, 228, 229, 232, 234, 236, 238, 266, 309, 391, 416, 417, 419, 421, 436], "unbind": [2, 39, 40, 41, 55, 56, 57, 61, 62, 70, 71, 76, 201, 261, 265, 305], "said": [2, 418], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 56, 59, 70, 74, 96, 97, 179, 194, 208, 219, 231, 322, 331, 337, 340, 355, 357, 358, 412, 418, 429, 430, 431], "seen": [2, 3, 18, 19, 20, 21, 31, 32, 42, 66, 118, 121, 125, 132, 133, 145, 146, 153, 154, 188, 412, 416, 417, 419, 423, 429, 430, 433], "predict": [2, 3, 49, 63, 254, 256, 267, 268, 301, 315, 320, 322, 327, 330, 332, 333, 337, 340, 342, 354, 416, 417, 423], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 42, 43, 46, 48, 49, 52, 54, 59, 60, 64, 69, 79, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 261, 265, 320, 322, 323, 325, 328, 329, 330, 336, 337, 340, 341, 342, 343, 353, 355, 356, 357, 358, 363, 436], "mont": [2, 320, 322, 337, 340, 416], "carlo": [2, 320, 322, 337, 340, 416], "mct": [2, 44], "act": [2, 3, 4, 104, 105, 147, 148, 229, 254, 272, 321, 323, 324, 336, 341, 343, 345, 346, 419, 420, 429, 430, 433, 435], "tradit": [2, 423, 429], "integ": [2, 14, 15, 16, 17, 23, 38, 45, 47, 49, 53, 59, 60, 63, 64, 76, 97, 104, 105, 106, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 175, 191, 195, 203, 220, 245, 246, 266, 271, 272, 323, 328, 336, 343, 412, 420, 433], "advanc": [2, 3, 21, 56, 61, 70, 71, 118, 121, 125, 132, 133, 145, 146, 153, 154, 421, 424, 433], "rebuild": [2, 44], "initi": [2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 99, 110, 118, 121, 125, 132, 133, 143, 144, 145, 146, 153, 154, 155, 178, 187, 197, 203, 207, 222, 229, 232, 237, 238, 239, 240, 241, 242, 258, 259, 260, 263, 264, 268, 271, 272, 273, 274, 275, 282, 305, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 407, 411, 412, 416, 417, 419, 421, 422, 424, 429, 431, 436], "pair": [2, 3, 39, 40, 41, 49, 55, 57, 59, 62, 69, 76, 118, 119, 120, 121, 125, 132, 133, 145, 146, 153, 154, 212, 222, 227, 261, 298, 306, 310, 338, 355, 356, 357, 358, 359, 411, 412, 416, 417, 418, 422, 423, 428, 431, 436], "term": [2, 63, 91, 199, 263, 264, 274, 275, 319, 320, 329, 395, 417, 418, 421, 422, 430], "pseudocod": [2, 3], "next_stat": [2, 412], "associ": [2, 3, 27, 31, 32, 38, 39, 40, 41, 42, 44, 49, 55, 57, 59, 60, 62, 64, 66, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 238, 285, 407, 416, 433], "sens": [2, 4, 39, 40, 41, 55, 57, 62, 76, 179, 424, 431], "hard": [2, 3, 7, 110, 119, 120, 145, 335, 417, 436], "let": [2, 3, 6, 7, 11, 23, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 72, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 179, 238, 261, 265, 271, 272, 302, 388, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436], "know": [2, 3, 4, 9, 56, 61, 70, 71, 124, 126, 240, 338, 341, 388, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 433], "next_td": 2, "Of": [2, 3, 7, 410, 431, 436], "cours": [2, 3, 4, 410, 431, 436], "handi": [2, 3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 425], "undertaken": [2, 76, 412, 431], "link": [2, 6, 7, 121, 417, 426], "hash": [2, 38, 44, 59, 60, 64, 69, 76, 118, 133], "past": [2, 4, 179, 305, 417, 433], "node_map": [2, 44], "_index": [2, 59, 69], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 235, 418, 428], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 71, 96, 97, 103, 118, 132, 215, 224, 236, 238, 282, 305, 380, 386, 417, 419, 421, 424, 430, 431, 433], "next_data": [2, 118, 121, 125, 132, 133, 145, 146, 153, 154], "data_map": [2, 44], "form": [2, 14, 15, 17, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 87, 88, 95, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238, 259, 261, 263, 265, 310, 319, 320, 322, 337, 340, 393, 411, 422, 430], "figur": [2, 3, 76, 133, 416, 418, 419, 430, 431, 436], "flowchart": 2, "o": [2, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 264], "get_tre": [2, 44, 76], "vertex": [2, 76], "longer": [2, 76, 239, 417, 426, 429, 430, 433], "vertic": [2, 76], "branch": [2, 44, 76], "repeat": [2, 76, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 145, 146, 150, 153, 154, 242, 253, 418, 429, 430, 431], "depth": [2, 61, 74, 118, 121, 125, 132, 133, 139, 145, 146, 150, 153, 154, 242, 245, 246, 248, 249, 250, 251, 256, 257, 266, 268, 271, 272, 273, 276, 277, 302, 411, 417, 421, 423, 424, 428, 429, 430, 433], "until": [2, 3, 7, 21, 131, 223, 228, 238, 383, 418, 419, 426, 429, 430], "anymor": [2, 39, 40, 41, 55, 57, 62, 76, 229, 309], "utmost": 2, "commonli": [2, 97, 104, 105, 436], "emploi": [2, 275], "languag": [2, 24, 63, 132], "scarc": 2, "address": [2, 433], "subdomain": 2, "facilit": [2, 3, 7, 206, 207, 222, 232, 234, 298, 299, 300, 411, 416, 419, 422, 431], "extern": [2, 3, 186, 190, 429, 436], "token": [2, 39, 40, 41, 57, 58, 63, 72, 75, 86, 132, 133], "dm": [3, 416, 436], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 44, 56, 61, 64, 70, 71, 75, 101, 107, 110, 111, 113, 114, 116, 117, 118, 121, 125, 129, 130, 131, 132, 133, 139, 140, 141, 145, 146, 153, 154, 157, 170, 188, 212, 226, 228, 232, 233, 261, 265, 271, 273, 298, 304, 320, 321, 323, 324, 325, 327, 328, 329, 331, 336, 340, 341, 342, 343, 345, 346, 382, 393, 411, 412, 413, 416, 417, 419, 421, 422, 423, 425, 429, 430, 431, 433, 436], "abl": [3, 44, 136, 147, 148, 261, 265, 416, 418, 419, 422, 428, 429, 430, 431, 433], "experi": [3, 56, 61, 70, 71, 96, 97, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 377, 378, 379, 380, 381, 382, 410, 417, 418, 420, 424, 425, 429, 430, 433], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 76, 77, 78, 79, 80, 81, 124, 126, 273, 338], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 118, 121, 122, 125, 132, 133, 137, 138, 145, 146, 147, 148, 151, 152, 153, 154, 179, 182, 191, 198, 199, 203, 205, 210, 212, 215, 222, 228, 235, 236, 238, 373, 403, 416, 417, 418, 419, 428, 430, 432, 433, 435, 436], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 49, 59, 60, 63, 64, 69, 116, 117, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 183, 189, 191, 199, 207, 222, 228, 229, 232, 234, 238, 242, 244, 245, 246, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 272, 273, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 311, 312, 314, 317, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 403, 411, 412, 416, 417, 418, 419, 420, 422, 423, 426, 428, 429, 430, 431, 432, 435], "organis": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 417], "attribut": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 118, 121, 124, 125, 126, 131, 132, 133, 145, 146, 153, 154, 172, 191, 201, 207, 229, 232, 236, 238, 261, 265, 310, 320, 321, 323, 324, 325, 327, 329, 330, 331, 334, 336, 338, 340, 341, 342, 343, 345, 346, 353, 416, 419, 431], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 99, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 191, 238], "actual": [3, 4, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 235, 396, 412, 416, 418, 420, 429, 430, 431], "retriev": [3, 39, 40, 41, 44, 55, 56, 57, 59, 61, 62, 70, 71, 76, 99, 102, 104, 105, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 170, 180, 188, 191, 203, 242, 245, 268, 305, 306, 310, 313, 317, 320, 321, 322, 323, 325, 337, 340, 341, 343, 345, 346, 353, 355, 356, 357, 358, 407, 413, 417, 418, 422, 431, 436], "care": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 375, 416, 418, 420, 429, 430, 431, 433], "parametr": [3, 275, 310, 321, 323, 328, 336, 343, 416, 418], "hardwar": [3, 420], "observation_spec": [3, 44, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 173, 176, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 194, 196, 197, 198, 199, 203, 205, 207, 209, 211, 215, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 235, 236, 238, 242, 261, 265, 268, 397, 403, 416, 418, 423, 428, 429, 430, 431, 436], "state_spec": [3, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 173, 183, 188, 203, 228, 230, 231, 238, 242, 268, 431, 436], "reward_spec": [3, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 173, 176, 177, 182, 183, 186, 188, 190, 200, 209, 213, 214, 215, 217, 219, 228, 230, 231, 238, 242, 268, 418, 429, 430, 431, 436], "done_spec": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 186, 188, 190, 191, 209, 219, 228, 230, 238, 429, 430, 431, 436], "flag": [3, 8, 56, 61, 70, 71, 99, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158, 198, 282, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 411, 429, 430, 431, 432], "input_spec": [3, 76, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 172, 176, 183, 186, 188, 189, 201, 205, 209, 210, 215, 216, 219, 220, 221, 222, 226, 228, 229, 230, 233, 238, 418, 431], "full_action_spec": [3, 76, 118, 121, 125, 132, 133, 143, 144, 145, 146, 153, 154, 155, 156, 172, 188, 242, 268, 429, 430], "full_state_spec": [3, 44, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 188, 242, 268], "output_spec": [3, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 183, 186, 188, 192, 199, 201, 209, 210, 216, 220, 226, 228, 229, 230, 238, 431], "full_observation_spec": [3, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 242, 268], "full_reward_spec": [3, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 188, 209, 429, 430], "full_done_spec": [3, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 176, 188, 209, 429, 430], "carri": [3, 21, 47, 75, 118, 121, 125, 132, 133, 145, 146, 153, 154, 222, 338, 417, 419, 429, 430, 431, 433], "nontensor": [3, 52, 197, 230, 409], "spec_lock": [3, 121], "modif": [3, 5, 27, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 194, 197, 238, 338, 412, 418, 431], "children": [3, 27, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "unlock": [3, 31, 32, 39, 40, 41, 42, 55, 57, 62, 66, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154], "set_spec_lock_": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154], "reason": [3, 4, 8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 207, 232, 238, 265, 412, 416, 417, 418, 423, 424, 429, 431, 433], "easi": [3, 5, 11, 118, 119, 120, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 240, 258, 282, 411, 412, 416, 417, 418, 430, 432, 433, 435, 436], "cach": [3, 55, 57, 75, 86, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 175, 186, 190, 207, 228, 229, 234, 243, 385], "principl": 3, "new_spec": 3, "eras": [3, 25, 26, 28, 29, 30, 34, 45, 46, 47, 48, 51, 52, 53, 54, 74, 77, 78, 79, 80, 81, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229], "relock": 3, "previous": [3, 4, 44, 418, 436], "importantli": [3, 306, 310], "action_s": 3, "help": [3, 4, 27, 38, 49, 59, 60, 64, 69, 74, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 191, 238, 320, 322, 337, 340, 342, 410, 412, 416, 417, 418, 419, 429, 430], "With": [3, 130, 131, 136, 221, 413, 417, 428, 429, 430, 433, 436], "necessarili": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 436], "present": [3, 27, 38, 39, 40, 41, 49, 55, 56, 57, 59, 60, 61, 62, 64, 69, 70, 71, 74, 76, 96, 97, 99, 103, 118, 121, 124, 125, 132, 133, 145, 146, 153, 154, 170, 171, 192, 212, 216, 222, 227, 229, 238, 246, 247, 248, 249, 250, 251, 257, 261, 263, 265, 275, 280, 282, 305, 309, 310, 311, 312, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 407, 413, 416, 426, 428, 429, 430, 433, 435], "0s": [3, 222, 419], "step_and_maybe_reset": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 421], "done_kei": [3, 23, 35, 37, 44, 50, 67, 87, 88, 95, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 175, 179, 191, 212, 220, 238, 429, 430], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 77, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 324, 325, 327, 343, 418, 422, 429, 430, 433], "_reset": [3, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 171, 173, 175, 176, 179, 186, 190, 198, 209, 224, 242, 268, 429], "data_": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154], "append": [3, 8, 11, 44, 56, 61, 70, 71, 99, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 175, 182, 183, 187, 201, 212, 222, 229, 235, 260, 261, 264, 265, 302, 307, 416, 417, 418, 419, 420, 429, 430, 431, 432, 433, 435], "seed": [3, 14, 15, 16, 17, 21, 61, 70, 71, 99, 118, 121, 125, 132, 133, 139, 145, 146, 147, 148, 153, 154, 157, 158, 159, 173, 176, 186, 190, 197, 209, 229, 373, 393, 429], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 168, 183, 207, 222, 228, 229, 232, 234, 238, 247, 256, 276, 286, 297, 306, 309, 310, 313, 321, 338, 388, 411, 416, 417, 418, 419, 420, 422, 423, 426, 429, 431, 435, 436], "preced": [3, 49, 118, 179, 419], "risk": [3, 208], "overlap": [3, 70, 110], "reproduc": [3, 60, 64, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 179, 197, 416, 418, 420, 430], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 49, 55, 57, 58, 63, 69, 72, 75, 76, 77, 86, 90, 91, 92, 93, 96, 97, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 187, 189, 213, 220, 221, 223, 241, 289, 290, 291, 313, 321, 323, 328, 329, 336, 338, 339, 343, 375, 390, 411, 416, 417, 418, 419, 422, 429, 430, 433], "max_step": [3, 11, 110, 118, 121, 125, 132, 133, 137, 138, 139, 145, 146, 153, 154, 157, 158, 220, 227, 238, 373, 421, 422, 423, 425, 426, 429, 430, 435, 436], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 59, 63, 69, 116, 117, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 178, 199, 244, 255, 261, 265, 268, 283, 284, 292, 293, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 312, 313, 315, 317, 321, 323, 324, 328, 329, 331, 332, 333, 334, 336, 338, 341, 343, 345, 346, 353, 354, 355, 356, 357, 358, 388, 403, 409, 416, 418, 419, 423, 426, 428, 429, 430, 431, 432, 436], "trail": [3, 236], "treat": [3, 49, 412, 422, 423], "brief": [3, 418, 421, 423, 433], "deliveri": 3, "metaclass": [3, 121], "everi": [3, 8, 27, 31, 32, 38, 42, 49, 53, 56, 59, 60, 61, 64, 66, 69, 70, 71, 76, 99, 106, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 220, 221, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 338, 393, 413, 416, 417, 418, 419, 421, 422, 429, 430, 431], "flank": [3, 412, 419], "dual": 3, "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 179, 197, 227, 229, 236, 238, 242, 255, 256, 268, 269, 270, 271, 272, 273, 276, 277, 285, 286, 300, 303, 320, 323, 330, 331, 332, 333, 340, 343, 355, 360, 368, 415, 416, 418, 420, 422, 423, 424, 425, 429, 430, 433], "union": [3, 20, 27, 31, 32, 38, 42, 43, 47, 48, 49, 51, 53, 54, 59, 60, 64, 65, 66, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 271, 292, 327, 329, 341, 404, 407], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 42, 66, 137, 138, 160, 416], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 97, 104, 105, 409], "adjac": [3, 23, 194, 305], "junction": 3, "inittrack": [3, 261, 265, 305, 416, 419], "tutori": [3, 146, 408, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 436], "scratch": [3, 8, 417, 431], "mere": [3, 17, 420], "batch_lock": [3, 118, 121, 123, 125, 132, 133, 145, 153, 176, 222, 229, 431], "contrast": [3, 259, 281, 335, 433], "notabl": 3, "braxenv": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 210, 409, 421], "jumanjienv": [3, 409], "straightforward": [3, 416, 417, 421, 422, 423, 424, 433], "merg": [3, 56, 61, 70, 71, 431], "correctli": [3, 7, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "silent": [3, 27, 38, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316], "_step": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238], "temporari": [3, 416], "hold": [3, 228, 351, 352, 431, 433], "arm": 3, "unbatch": [3, 259, 263], "captur": [3, 240, 258, 282, 420], "base_env": [3, 117, 118, 121, 125, 126, 131, 132, 133, 144, 145, 146, 153, 154, 156, 172, 173, 176, 182, 184, 186, 189, 190, 199, 205, 209, 211, 217, 220, 222, 223, 227, 229, 238, 375, 383, 416, 417, 418, 420, 429, 432, 435, 436], "break_when_all_don": [3, 118, 121, 125, 131, 132, 133, 145, 146, 153, 154], "conditionalskip": 3, "programmat": 3, "pretti": [3, 416, 421, 425, 433], "likewis": 3, "break_when_any_don": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 175, 227, 238, 244, 305, 430], "te": 3, "paragraph": 3, "deep": [3, 9, 179, 200, 248, 249, 250, 251, 254, 282, 320, 323, 335, 343, 344, 416, 429], "dive": 3, "gym3": 3, "envpool": [3, 140, 141], "interfac": [3, 128, 142, 266, 274, 411, 412, 416, 418, 420, 425, 431, 433], "simultan": [3, 20, 131, 140, 141, 145, 153, 431], "advantag": [3, 8, 257, 320, 322, 337, 340, 342, 355, 356, 357, 358, 359, 360, 362, 364, 366, 368, 369, 371, 412, 413, 416, 417, 418, 419, 430, 431, 436], "scale": [3, 4, 24, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 199, 203, 214, 221, 225, 236, 241, 256, 262, 285, 286, 290, 291, 298, 299, 300, 306, 310, 312, 320, 321, 323, 336, 340, 341, 342, 343, 391, 397, 407, 411, 416, 417, 418, 419, 422, 430, 435], "varieti": [3, 11], "inherit": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 267, 271, 272, 338, 413, 418, 429, 430], "from_pixel": [3, 11, 116, 117, 119, 120, 124, 126, 127, 130, 131, 150, 179, 211, 373, 375, 416, 417, 419, 421, 425, 426, 432, 433, 435, 436], "81": [3, 104], "simpli": [3, 6, 39, 40, 41, 55, 57, 62, 75, 76, 108, 110, 115, 192, 216, 235, 338, 355, 411, 412, 416, 418, 423, 429, 430, 436], "d": [3, 56, 59, 61, 69, 70, 71, 86, 96, 97, 241, 259, 263, 306, 310, 435], "privat": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 235, 431, 436], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 40, 41, 45, 47, 53, 55, 56, 57, 61, 62, 70, 71, 76, 99, 105, 110, 322, 337, 340, 384, 386, 388, 393, 396, 397, 415, 416, 417, 418, 419, 423, 429, 430, 432, 433, 434, 435], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 44, 55, 57, 62, 63, 76, 99, 102, 118, 121, 125, 132, 133, 145, 146, 153, 154, 155, 156, 203, 214, 262, 274, 285, 290, 291, 353, 411, 412, 422, 423, 429, 431, 433], "inner": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 189, 229, 413, 417, 418, 430, 436], "logic": [3, 429], "kept": [3, 23, 103, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 170, 189, 216, 262, 290, 291, 423, 429], "mind": [3, 97, 104, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 429, 430], "wherev": 3, "lost": [3, 8, 235], "intern": [3, 44, 73, 118, 121, 125, 132, 133, 145, 146, 153, 154, 414], "face": [3, 5, 8, 9, 421, 436], "NOT": [3, 87, 88, 95, 105, 208], "right": [3, 6, 7, 23, 63, 97, 104, 417, 418, 420, 430, 431, 436], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 184, 229, 238, 355, 356, 357, 358, 429], "preclud": 3, "presenc": [3, 59, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 423], "annihil": 3, "supersed": [3, 23], "pettingzoowrapp": [3, 409], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 160, 200, 219, 350, 411, 417, 422, 424, 430, 433], "__not__": [3, 306, 321, 323, 336, 341, 343, 345, 346], "constrain": [3, 199, 261, 265, 340, 436], "li": 3, "fact": [3, 7, 8, 416, 418, 421, 429, 430, 431, 432, 433, 436], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "perfectli": [3, 413, 416, 420, 431], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 383, 423, 435], "agent0": [3, 420], "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 238, 253, 375, 407, 411], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 96, 97, 99, 100, 102, 103, 104, 105, 106, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 175, 176, 179, 180, 184, 186, 187, 189, 190, 191, 192, 194, 197, 199, 201, 202, 203, 205, 207, 209, 210, 212, 214, 215, 216, 219, 220, 222, 225, 226, 227, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 274, 275, 289, 290, 291, 296, 297, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 353, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 382, 383, 386, 387, 388, 390, 391, 393, 407, 417, 418, 420, 431, 435, 436], "500": [3, 416, 417], "note": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 167, 171, 186, 190, 227, 236, 238, 243, 259, 261, 263, 265, 282, 306, 310, 330, 409, 412, 417, 420, 422, 428, 429, 430, 436], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 145, 153], "bottleneck": [3, 8, 97, 104, 105], "great": [3, 7, 8, 420, 429, 435], "speedup": [3, 8, 429, 436], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 170, 186, 190, 260, 264, 416, 418], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 16, 90, 92, 112, 118, 121, 125, 129, 132, 133, 145, 146, 153, 154, 208, 436], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 90, 118, 121, 125, 132, 133, 145, 146, 153, 154, 155, 159, 160, 179, 193, 202, 212, 221, 222, 223, 227, 229, 238, 240, 258, 282, 323, 338, 343, 383, 416, 418, 429, 430, 433], "mismatch": [3, 59, 417], "subprocess": [3, 14, 15, 17, 122, 145, 153], "multithreadedenv": [3, 409], "underneath": 3, "higher": [3, 4, 97, 182, 313, 416, 417, 418, 429, 433, 436], "flexibl": [3, 9, 140, 347, 412, 413, 416, 420, 433, 436], "cover": [3, 124, 126, 410, 418, 421, 424, 425, 431, 435], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 40, 41, 42, 44, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 75, 76, 77, 86, 99, 118, 121, 125, 132, 133, 136, 139, 142, 145, 146, 147, 148, 153, 154, 161, 167, 168, 170, 176, 179, 183, 186, 188, 191, 192, 197, 199, 201, 207, 209, 210, 216, 220, 222, 226, 227, 228, 229, 230, 232, 234, 236, 238, 240, 245, 246, 266, 271, 272, 275, 283, 292, 294, 302, 306, 309, 310, 317, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 350, 353, 361, 373, 405, 409, 411, 416, 417, 418, 420, 424, 429, 430, 431, 433, 436], "atari": [3, 4, 179, 246, 375, 420, 425, 436], "classic": [3, 139, 148, 417], "benchmark_batched_env": 3, "seamlessli": [3, 431], "infrastructur": [3, 429, 430], "paradigm": [3, 17, 430], "decpodp": 3, "game": [3, 4, 5, 118, 137, 138, 143, 144, 246, 375, 420, 425], "thank": [3, 416, 420, 421, 435], "carrier": [3, 418, 419, 421, 433], "particular": [3, 27, 38, 49, 59, 60, 64, 69, 75, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 229, 238, 412, 413, 417, 419, 421, 428, 430, 433], "thu": [3, 337, 430], "vma": [3, 157, 158, 373, 429, 430], "robot": [3, 5, 7, 207, 232, 234, 420, 430], "vmasenv": [3, 373, 409, 429, 430], "balanc": [3, 119, 120, 416, 417], "num_env": [3, 21, 124, 128, 141, 157, 158, 373, 429, 430], "n_agent": [3, 157, 158, 271, 272, 273, 283, 292, 353, 373, 412, 429, 430], "ground_rew": 3, "pos_rew": 3, "style": [3, 56, 61, 70, 71], "vari": [3, 124, 126, 127, 147, 148, 150, 157, 208, 412, 420, 430], "creation": [3, 145, 153, 436], "info_spec": [3, 145], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 28, 29, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 116, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 171, 172, 173, 191, 209, 255, 278, 281, 284, 302, 303, 306, 307, 308, 325, 328, 329, 353, 409, 419], "simpl": [3, 9, 27, 38, 49, 53, 59, 60, 64, 69, 74, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 248, 305, 310, 325, 327, 338, 342, 412, 416, 417, 418, 421, 422, 423, 429, 430, 433, 436], "prefix": [3, 23, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 75, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 224, 227, 229, 238, 306, 323, 338, 343, 374, 419, 423, 436], "exactli": [3, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 127, 132, 133, 145, 146, 153, 154, 227, 229, 238, 259, 263, 278, 323, 343, 416, 419, 424, 429, 430], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 118, 121, 125, 132, 133, 145, 146, 149, 153, 154, 170, 172, 173, 189, 201, 240, 242, 258, 267, 268, 282, 305, 412, 429, 430], "reward_kei": [3, 35, 37, 44, 50, 67, 87, 88, 95, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 238, 242, 268, 387, 391, 429, 430], "set_kei": [3, 191, 320, 322, 323, 325, 328, 329, 330, 336, 337, 338, 340, 341, 342, 343, 353, 359, 416, 429, 430], "awai": [3, 418, 421, 429, 430, 435], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 66, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 198, 220, 222, 228, 310], "full": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 243, 261, 265, 303, 310, 384, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "autoresettransform": 3, "invalid": [3, 27, 38, 49, 59, 60, 64, 69, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 160, 238, 269, 270], "nan": [3, 175, 235], "auto_reset": [3, 44, 118, 121, 125, 131, 132, 133, 145, 146, 153, 154, 175, 187, 238, 431], "auto_reset_replac": [3, 175], "placehold": [3, 127, 191, 229], "set_gym_backend": [3, 118, 121, 124, 125, 132, 133, 145, 146, 153, 154, 163, 175, 409, 421, 435], "autoresettinggymenv": [3, 175], "self": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 40, 41, 42, 49, 55, 57, 59, 60, 62, 64, 66, 69, 76, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 173, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 198, 199, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 242, 255, 258, 261, 265, 268, 271, 272, 283, 292, 306, 309, 314, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 413, 416, 431, 435], "super": [3, 139, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 242, 255, 268, 314, 321, 323, 324, 329, 336, 341, 343, 345, 346, 416, 431, 435], "td_reset": [3, 175], "exclud": [3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 175, 179, 192, 283, 322, 337, 340, 429, 430, 433], "r": [3, 4, 44, 49, 118, 172, 173, 175, 182, 184, 203, 217, 224, 227, 236, 241, 244, 260, 310, 319, 354, 373, 417, 431, 436], "3633e": [3, 175], "02": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 417, 426], "4877e": [3, 175], "01": [3, 175, 203, 241, 282, 316, 320, 322, 337, 340], "2849e": [3, 175], "7584e": [3, 175], "6609e": [3, 175], "6166e": [3, 175], "8366e": [3, 175], "2761e": [3, 175], "5685e": [3, 175], "4102e": [3, 175], "8111e": [3, 175], "9959e": [3, 175], "0865e": [3, 175], "5644e": [3, 175], "2119e": [3, 175], "2542e": [3, 175], "03": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 175, 203, 224], "9952e": [3, 175], "4059e": [3, 175], "2094e": [3, 175], "9009e": [3, 175], "5140e": [3, 175], "3554e": [3, 175], "2920e": [3, 175], "7893e": [3, 175], "6429e": [3, 175], "3057e": [3, 175], "2867e": [3, 175], "6963e": [3, 175], "3818e": [3, 175], "2576e": [3, 175], "2679e": [3, 175], "1640e": [3, 175], "00": [3, 116, 117, 175, 415, 434], "6972e": [3, 175], "0212e": [3, 175], "5959e": [3, 175], "4637e": [3, 175], "3121e": [3, 175], "2168e": [3, 175], "5232e": [3, 175], "7704e": [3, 175], "7457e": [3, 175], "4127e": [3, 175], "1064e": [3, 175], "0854e": [3, 175], "5712e": [3, 175], "2189e": [3, 175], "5235e": [3, 175], "8289e": [3, 175], "0009e": [3, 175], "0257e": [3, 175], "8893e": [3, 175], "5872e": [3, 175], "9405e": [3, 175], "7766e": [3, 175], "0403e": [3, 175], "0626e": [3, 175], "2959e": [3, 175], "7263e": [3, 175], "2775e": [3, 175], "9564e": [3, 175], "0411e": [3, 175], "6769e": [3, 175], "6354e": [3, 175], "8698e": [3, 175], "1765e": [3, 175], "6292e": [3, 175], "5375e": [3, 175], "1820e": [3, 175], "7023e": [3, 175], "5836e": [3, 175], "9016e": [3, 175], "4826e": [3, 175], "6191e": [3, 175], "6387e": [3, 175], "8667e": [3, 175], "2056e": [3, 175], "1147e": [3, 175], "5991e": [3, 175], "0278e": [3, 175], "5219e": [3, 175], "3067e": [3, 175], "6617e": [3, 175], "3322e": [3, 175], "2629e": [3, 175], "4599e": [3, 175], "7298e": [3, 175], "5848e": [3, 175], "0148e": [3, 175], "5745e": [3, 175], "6982e": [3, 175], "7877e": [3, 175], "3527e": [3, 175], "7285e": [3, 175], "6668e": [3, 175], "0583e": [3, 175], "6956e": [3, 175], "3962e": [3, 175], "9845e": [3, 175], "5015e": [3, 175], "5903e": [3, 175], "9993e": [3, 175], "9418e": [3, 175], "0196e": [3, 175], "6557e": [3, 175], "2109e": [3, 175], "8997e": [3, 175], "1507e": [3, 175], "7363e": [3, 175], "0310e": [3, 175], "9574e": [3, 175], "8980e": [3, 175], "0090e": [3, 175], "forecast": 3, "awar": [3, 7, 90, 91, 92, 93, 106, 108, 112, 261, 265, 417, 419], "detect": [3, 338, 412], "return_contigu": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 428], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 62, 65, 66, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 110, 118, 121, 123, 125, 132, 133, 145, 146, 153, 154, 159, 170, 171, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 191, 192, 193, 194, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 240, 242, 258, 261, 265, 267, 268, 282, 301, 303, 305, 308, 309, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 357, 358, 359, 393, 416, 429, 431], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 49, 53, 56, 59, 60, 63, 64, 69, 70, 77, 96, 97, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 172, 175, 179, 183, 186, 190, 199, 200, 203, 207, 212, 213, 214, 221, 222, 225, 228, 229, 232, 234, 236, 238, 240, 241, 243, 244, 253, 256, 259, 262, 263, 266, 269, 270, 274, 275, 281, 285, 286, 289, 291, 309, 313, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 391, 416, 417, 433, 436], "_set_se": [3, 173, 176, 186, 190, 209, 431], "lazystackedtensordict": [3, 44, 66, 91, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 187, 428], "float32": [3, 14, 15, 16, 28, 31, 35, 39, 40, 41, 44, 55, 56, 57, 59, 62, 63, 67, 69, 70, 71, 74, 75, 76, 77, 90, 91, 92, 96, 97, 104, 112, 116, 117, 118, 121, 124, 125, 126, 130, 131, 132, 133, 139, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 157, 158, 164, 170, 172, 176, 186, 190, 191, 192, 197, 200, 203, 205, 209, 210, 212, 216, 219, 220, 222, 225, 230, 242, 244, 254, 255, 261, 265, 268, 282, 283, 284, 292, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 312, 314, 317, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 353, 411, 431], "exclusive_field": [3, 44, 91, 187], "stack_dim": [3, 44, 91, 187], "dramat": 3, "carefulli": [3, 429, 430, 436], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 238, 297, 302, 303, 306, 307, 308, 309, 310, 321, 323, 336, 341, 343, 345, 346, 418, 429, 430], "plain": [3, 8, 421], "larg": [3, 4, 30, 39, 40, 41, 55, 57, 62, 76, 104, 105, 186, 190, 232, 320, 322, 337, 340, 342, 417, 418, 429, 430, 433], "expens": [3, 97, 104, 105, 373, 433], "absent": [3, 31, 32, 42, 66, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 216, 229], "torchvis": [3, 11, 207, 234, 377, 429, 435, 436], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 99, 118, 121, 122, 125, 132, 133, 139, 145, 146, 153, 154, 169, 174, 176, 183, 184, 187, 191, 197, 222, 229, 230, 238, 239, 245, 246, 266, 273, 310, 319, 338, 373, 398, 399, 405, 406, 407, 417, 433], "bring": [3, 418, 421, 436], "signific": [3, 5, 8, 418, 435, 436], "kind": [3, 61, 74, 423, 429, 433], "consult": 3, "interest": [3, 306, 310, 411, 417, 418, 421, 430, 431, 436], "resize_par": 3, "revers": [3, 263], "order": [3, 11, 16, 27, 38, 49, 53, 56, 59, 60, 61, 64, 69, 70, 71, 99, 103, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154, 180, 186, 187, 190, 197, 205, 219, 227, 229, 238, 281, 297, 302, 309, 311, 312, 314, 320, 321, 323, 324, 328, 329, 336, 340, 341, 342, 343, 345, 346, 417, 429, 430], "chain": [3, 39, 40, 41, 55, 56, 57, 61, 62, 70, 71, 76, 132, 133, 183, 189, 245, 246, 312, 436], "in_keys_inv": [3, 165, 182, 186, 188, 190, 197, 203, 204, 205, 209, 210, 212, 217, 226, 228, 230, 231, 416, 428, 431, 436], "append_transform": [3, 44, 56, 61, 70, 71, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 165, 172, 173, 175, 176, 178, 179, 180, 183, 184, 187, 188, 191, 192, 193, 195, 197, 198, 199, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 244, 261, 265, 373, 416, 419, 429, 431, 433, 435, 436], "doubletofloat": [3, 416, 418, 428], "float64": [3, 27, 38, 49, 59, 60, 64, 69, 118, 119, 120, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 172, 183, 186, 190, 207, 222, 228, 229, 232, 234, 238, 309], "think": [3, 410, 418, 429, 430, 436], "in_": 3, "out_": 3, "perspect": [3, 255, 303, 330, 418, 420], "outer": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 413, 416, 417, 436], "ob": [3, 4, 8, 23, 31, 32, 42, 44, 56, 61, 66, 69, 70, 71, 76, 96, 99, 104, 105, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 170, 173, 175, 186, 188, 190, 203, 217, 219, 225, 248, 249, 250, 251, 271, 272, 273, 307, 314, 321, 323, 324, 329, 336, 341, 343, 345, 346, 355, 356, 357, 358, 417, 420, 428, 429, 431, 433, 435, 436], "obs_standard": 3, "out_keys_inv": [3, 165, 182, 186, 188, 190, 197, 203, 204, 205, 209, 210, 217, 219, 226, 228, 230, 231, 431], "illustr": [3, 416, 417, 422, 433], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 90, 91, 92, 93, 97, 103, 104, 106, 108, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 176, 183, 186, 188, 190, 192, 199, 201, 209, 210, 216, 220, 226, 228, 229, 230, 236, 238, 263, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 412, 416, 419, 429, 430, 431, 432, 433, 436], "schemat": [3, 412], "outermost": 3, "innermost": 3, "similar": [3, 27, 38, 39, 40, 41, 49, 51, 55, 57, 59, 60, 61, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 183, 207, 222, 228, 229, 232, 233, 234, 236, 238, 298, 300, 306, 309, 310, 412, 416, 417, 418, 419, 420, 422, 423, 424, 425, 431, 433, 435, 436], "transform_action_spec": [3, 183, 188, 203, 228, 230, 231, 238], "spec_from_random_valu": 3, "_apply_transform": [3, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 431, 436], "rand": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 91, 99, 116, 117, 130, 131, 139, 143, 144, 149, 155, 156, 173, 176, 186, 190, 209, 219, 242, 268, 306, 320, 321, 323, 324, 325, 327, 328, 329, 336, 338, 340, 341, 343, 345, 346, 431, 435, 436], "approach": [3, 56, 61, 70, 71, 179, 203, 241, 271, 272, 345, 416, 418, 423, 424, 429, 436], "insid": [3, 39, 40, 41, 55, 57, 62, 76, 145, 436], "did": [3, 61, 235, 361, 417, 418, 424, 433, 436], "_inv_apply_transform": [3, 172, 228, 238, 431, 436], "actiondiscret": 3, "rand_act": [3, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 176, 187, 229, 421], "action_discret": 3, "addonetoob": 3, "Is": [3, 228], "rewrit": [3, 228], "_call": [3, 173, 175, 176, 178, 179, 180, 183, 184, 188, 189, 191, 192, 193, 194, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 431], "_inv_cal": [3, 172, 228, 238], "overwrit": [3, 228], "till": [3, 228, 235], "encapsul": [3, 228, 421, 422, 423], "forget": [3, 228, 263], "edit": [3, 228, 238, 424], "top": [3, 4, 110, 116, 117, 130, 131, 185, 228, 242, 268, 422], "transform_output_spec": [3, 176, 183, 186, 188, 192, 199, 201, 209, 210, 216, 220, 226, 228, 230, 238], "transform_input_spec": [3, 172, 176, 183, 186, 188, 189, 201, 205, 209, 210, 215, 219, 220, 221, 222, 226, 228, 230, 233, 238], "transform_observation_spec": [3, 176, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 194, 196, 198, 199, 201, 203, 205, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 238, 431], "transform_state_spec": [3, 183, 188, 203, 228, 230, 231, 238], "transform_reward_spec": [3, 176, 177, 182, 183, 186, 188, 192, 199, 200, 201, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 228, 230, 231, 238], "rewardsum": [3, 170, 228, 238, 429, 430], "undo": 3, "addonetoact": 3, "subtract": [3, 221], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 74, 77, 78, 79, 80, 81, 99, 118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154, 155, 156, 167, 170, 186, 190, 191, 215, 227, 229, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 373, 375, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 413, 416, 418, 421, 433], "manipul": [3, 4, 8, 119, 120, 207, 228, 232], "third_transform": 3, "unexpect": [3, 14, 15, 16, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 436], "behviour": 3, "fortun": [3, 419, 420, 421, 422, 425], "alreadi": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 75, 76, 77, 78, 79, 80, 81, 90, 118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 222, 238, 239, 310, 355, 356, 357, 358, 416, 418, 425, 429, 430], "catfram": [3, 305, 417], "notic": [3, 110, 179, 412, 418, 426, 431], "parenthood": 3, "henc": [3, 56, 171, 208, 271, 416, 418, 429, 430, 431], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 145, 153, 229, 373, 383, 431], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 124, 125, 126, 132, 133, 137, 138, 145, 146, 147, 148, 153, 154, 157, 158, 172, 189, 197, 278, 281, 284, 327, 328, 329, 330, 411, 417, 422, 430], "might": [3, 39, 40, 41, 55, 57, 58, 62, 76, 379, 410, 416, 421, 436], "action_mask": [3, 118, 130, 131, 147, 148, 151, 152, 173], "unavail": [3, 147, 148], "probabl": [3, 4, 8, 63, 99, 102, 243, 244, 253, 255, 258, 259, 261, 263, 265, 266, 269, 270, 278, 290, 291, 306, 310, 323, 340, 411, 412, 417, 420, 422, 435], "probabilistictensordictmodul": [3, 199, 310, 311, 412, 435], "tensordictsequenti": [3, 59, 69, 244, 258, 261, 265, 282, 302, 305, 311, 312, 317, 411, 416, 417, 419, 420, 422, 426, 428, 429, 432, 435], "maskedcategor": [3, 270, 409], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 49, 59, 60, 64, 69, 116, 117, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 183, 199, 207, 222, 228, 229, 232, 234, 238, 242, 244, 245, 246, 248, 249, 250, 251, 255, 257, 258, 266, 268, 271, 272, 274, 275, 282, 284, 285, 286, 297, 298, 299, 300, 304, 305, 306, 307, 309, 312, 314, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 403, 411, 417, 428, 432, 435], "in_feat": 3, "out_feat": 3, "logit": [3, 39, 41, 57, 63, 254, 269, 270, 278, 281, 303, 306, 328, 329, 411], "dist": [3, 10, 269, 270, 278, 310, 412, 422], "distribution_class": [3, 199, 298, 299, 300, 301, 306, 310, 312, 320, 321, 323, 328, 329, 336, 340, 341, 342, 343, 411, 416, 418, 422, 429, 430, 435], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 49, 59, 60, 63, 64, 69, 116, 117, 118, 121, 125, 126, 130, 131, 132, 133, 138, 141, 143, 144, 145, 146, 147, 148, 153, 154, 156, 158, 159, 167, 184, 227, 229, 238, 239, 261, 265, 293, 298, 299, 300, 305, 307, 310, 315, 338, 353, 411, 416, 417, 418, 419, 423, 426, 429, 430, 436], "actionmask": [3, 118], "your_base_env": 3, "mask_kei": [3, 23, 173, 208, 238], "itself": [3, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 163, 175, 238, 338, 345, 418, 421], "ey": 3, "report": [3, 116, 117, 130, 131, 425], "foremost": 3, "callback": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154, 430], "ad": [3, 4, 16, 23, 27, 38, 44, 49, 56, 59, 60, 61, 64, 69, 70, 71, 83, 96, 97, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 197, 215, 227, 229, 238, 241, 274, 275, 282, 319, 320, 322, 323, 325, 330, 337, 340, 343, 353, 417, 419, 420, 422, 429, 433, 435, 436], "tensordictrecord": [3, 409], "videorecord": [3, 11, 373, 409, 418, 425, 426, 429], "csvlogger": [3, 11, 373, 375, 409, 417, 425, 426, 429], "wandblogg": [3, 409, 425], "tensorboardlogg": [3, 403, 409, 425], "tag": [3, 7, 11, 373, 375, 377, 380, 407, 425, 426, 429], "mp4": [3, 373, 375, 377, 426, 429], "video_format": [3, 373, 375, 377, 426, 429], "whc": 3, "cwh": 3, "exp": [3, 319, 412], "al": [3, 24, 124, 126, 191, 205, 242, 420, 436], "pong": [3, 141, 205, 420, 436], "v5": [3, 124, 126, 141, 191, 205, 420, 436], "grow": [3, 91], "tediou": [3, 421], "workspac": [3, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197], "pixelrendertransform": [3, 409, 429], "stream": 3, "alik": [3, 373], "envcreat": [3, 16, 22, 145, 153, 227, 373, 403, 404, 407, 409, 416, 417, 435, 436], "render_mod": [3, 373, 431], "rgb_arrai": [3, 373, 429, 430, 431], "uncom": [3, 425], "line": [3, 7, 27, 38, 44, 49, 59, 60, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 417, 425, 429, 430], "comment": [3, 413, 417, 435], "pixels_record": [3, 373], "close": [3, 16, 125, 140, 199, 320, 322, 337, 340, 373, 416, 417, 421, 428, 429, 431, 435], "mission": 3, "irrespect": [3, 309, 310], "dmcontrol": [3, 118, 121, 125, 132, 133, 145, 146, 153, 154], "jumanji": [3, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154], "special": [3, 78, 80, 409, 416, 419, 420, 436], "framework": [3, 4, 9, 22, 116, 117, 118, 121, 125, 130, 131, 132, 133, 139, 145, 146, 153, 154, 259, 435, 436], "Its": [3, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 236, 238, 309, 359], "success": [3, 179, 224, 258, 323, 345, 417, 424, 426, 431, 433, 435], "foundat": [3, 5, 147, 148, 418, 430], "inspir": [3, 420, 431], "gone": [3, 4, 5, 305], "prefer": [3, 14, 15, 17, 20, 23, 24, 56, 61, 70, 71, 104, 105, 208, 216, 340, 345, 390, 411, 418, 429, 430, 433, 435], "maintain": [3, 5, 9, 33, 51, 179, 431], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 417, 418, 419, 424, 429, 430, 431, 433, 436], "decor": [3, 8, 167, 169, 239, 261, 265, 296, 338, 355, 356, 357, 358, 383, 419, 435], "relev": [3, 63, 118, 121, 125, 132, 133, 145, 146, 153, 154, 355, 356, 357, 358, 359, 382, 420, 431], "gym_backend": [3, 169, 409], "env1": [3, 244, 428], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 118, 169], "env2": [3, 428], "_env": [3, 6, 124, 436], "classic_control": 3, "pendulumenv": [3, 44, 409, 431], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 135, 163, 200], "side": [3, 4, 436], "v0": [3, 14, 15, 31, 32, 39, 40, 41, 42, 55, 57, 62, 66, 76, 118, 121, 125, 127, 130, 131, 132, 133, 134, 135, 145, 146, 153, 154, 183, 200, 229, 236, 383, 403], "26": [3, 105, 118, 121, 125, 132, 133, 145, 146, 153, 154], "fun": [3, 169, 239, 418, 429, 430], "reveal": 4, "curv": 4, "exploit": [4, 422], "cv": 4, "flip": [4, 131], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 99, 172, 179, 186, 190, 192, 197, 203, 210, 212, 224, 226, 228, 230, 238, 318, 328, 336, 409, 431], "prescript": 4, "tune": [4, 24, 199, 429, 430, 432], "coeffici": [4, 24, 33, 63, 199, 430], "bonu": [4, 320, 322, 337, 340], "beta": [4, 56, 70, 96, 97, 328, 336, 337, 416, 417, 433, 435], "reduc": [4, 6, 30, 110, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 179, 184, 221, 241, 243, 290, 409, 417, 429], "downstream": [4, 412, 416], "formul": [4, 429, 430], "rate": [4, 11, 236, 354, 417, 418, 429, 430], "gradient": [4, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 243, 262, 270, 275, 278, 290, 291, 310, 320, 322, 323, 324, 328, 329, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 354, 355, 356, 357, 358, 393, 416, 418, 429, 430, 431], "easier": [4, 60, 411, 416, 435], "local": [4, 7, 10, 16, 21, 27, 38, 49, 59, 60, 64, 69, 97, 104, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 271, 272, 283, 292, 353, 380, 382, 420, 425, 426, 429, 430], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 259, 260, 263, 264, 405, 406], "sum": [4, 21, 27, 47, 53, 69, 110, 116, 117, 119, 120, 124, 126, 127, 130, 131, 140, 141, 150, 178, 200, 215, 269, 270, 290, 292, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 354, 361, 412, 416, 417, 418, 419, 420, 423, 426, 429, 430, 431, 436], "stat": [4, 203, 236, 397, 407, 417, 418], "w": [4, 99, 118, 143, 144, 179, 181, 185, 211, 225, 259, 282, 375, 417, 433], "yield": [4, 14, 15, 16, 21, 27, 38, 49, 59, 60, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 187, 238, 338, 416, 423], "insight": [4, 420], "auxiliari": [4, 423], "credit": 4, "futur": [4, 23, 27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 87, 88, 95, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 207, 227, 229, 234, 238, 266, 320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 410], "spars": [4, 419], "intermedi": [4, 14, 15, 44, 59, 69, 178, 244, 261, 265, 303, 416, 420, 432], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 416], "discov": 4, "score": [4, 63, 279, 281], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 56, 59, 61, 69, 70, 71, 76, 99, 118, 137, 138, 147, 148, 149, 157, 158, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 198, 199, 201, 202, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 242, 261, 265, 302, 307, 392, 411, 412, 416, 420, 421, 429, 433], "explicit": [4, 14, 15, 16, 239, 433], "mechan": [4, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 417, 423, 431], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 118, 121, 125, 132, 133, 145, 146, 153, 154, 263, 328, 336, 418, 430], "addition": [4, 253], "timestep": [4, 63, 212, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 429, 430], "realli": 4, "huge": [4, 272, 419], "std": [4, 203, 236, 240, 280, 416, 436], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 419, 421, 423, 424, 425, 426, 427, 428, 432, 433, 434], "unseen": 4, "extrins": 4, "wrong": [4, 97, 104], "bonus": 4, "denser": 4, "prior": [4, 64, 286, 332, 430], "freshli": 4, "drop": [4, 103, 105, 170], "meant": [4, 49, 132, 139], "encourag": [4, 145, 281, 416, 417, 433], "measur": [4, 90, 92, 112, 116, 117, 130, 131, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 418, 424], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 24, 422], "ideal": [4, 203, 431], "down": [4, 14, 15, 16, 17, 412, 419, 421], "distil": 4, "nois": [4, 237, 275, 282, 295, 341, 345, 346, 388, 407, 416, 429], "exploratori": [4, 320, 322, 337, 340], "misalign": 4, "trade": [4, 422], "unavoid": 4, "divers": [4, 145, 153], "bootstrap": [4, 330, 356, 362, 363, 416, 419], "noisi": [4, 274, 275, 295, 411], "unstabl": [4, 262, 290, 291], "inher": [4, 320, 340], "stochast": [4, 199, 256, 275, 276, 286, 321, 323, 326, 328, 329, 334, 336, 339, 341, 343, 411, 418, 422, 430], "enemi": 4, "pomdp": [4, 433], "loos": [4, 310, 411, 417, 418], "nonexist": 4, "architectur": [4, 252, 423, 429, 430, 435], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 42, 45, 47, 55, 56, 57, 58, 59, 61, 63, 66, 69, 72, 75, 76, 86, 89, 99, 100, 102, 108, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 145, 146, 150, 153, 154, 165, 177, 178, 179, 180, 181, 185, 186, 189, 190, 194, 196, 197, 200, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 219, 221, 223, 224, 225, 226, 228, 230, 236, 245, 246, 253, 255, 259, 263, 266, 269, 270, 271, 272, 278, 284, 288, 301, 311, 312, 326, 374, 375, 388, 389, 390, 392, 393, 411, 416, 418, 419, 420, 428, 429, 430, 436], "lstm": [4, 222, 264, 265, 420], "rel": [4, 99, 222, 253, 289, 416, 417, 429, 430, 433], "tend": 4, "stabl": [4, 9, 10, 142], "compens": 4, "descent": [4, 275], "minimum": [4, 77, 145, 153, 213, 256, 289, 290, 291, 313, 316, 319, 321, 323, 329, 338, 339, 343, 384, 412, 416, 418, 426, 429, 430], "manual": [4, 11, 18, 20, 21, 44, 56, 61, 70, 71, 99, 125, 126, 416, 419, 433], "deviat": [4, 203, 236, 240, 242, 256, 268, 274, 275, 280, 281, 340, 345, 346, 416, 422, 430], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 97, 104, 175, 259, 260, 263, 264, 319, 383, 412, 420, 421, 422, 423, 424, 425, 426], "stabil": [4, 195, 243, 320, 322, 337, 340, 342], "stage": [4, 416, 431], "never": [4, 14, 15, 17, 28, 77, 97, 224, 424, 435], "prevent": [4, 25, 26, 30, 31, 32, 34, 42, 45, 46, 47, 48, 53, 54, 66, 88, 236, 262, 290, 291, 320, 322, 337, 340, 342, 391, 425, 433], "entir": [4, 118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 271, 418, 421, 431, 433], "submit": [4, 124, 176, 410, 435], "system": [4, 5, 88, 418, 429, 430, 431], "adequ": [4, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 418, 429, 430], "infeas": 4, "allevi": [4, 411], "prune": [4, 133], "fire": [4, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "illeg": 4, "chess": [4, 118, 143, 144], "grasp": 4, "wherein": 4, "cumul": [4, 215, 221, 242, 361, 418], "q": [4, 9, 118, 121, 125, 132, 133, 145, 146, 153, 154, 248, 249, 250, 251, 254, 255, 257, 283, 284, 292, 300, 303, 307, 308, 321, 323, 324, 325, 327, 328, 329, 330, 335, 336, 341, 343, 345, 346, 353, 409, 416, 423], "flow": [4, 416, 418, 429, 430, 431, 433], "reparameter": [4, 253, 270, 278], "soft": [4, 335, 343, 344, 429], "critic": [4, 8, 298, 304, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 416, 423], "clip": [4, 63, 182, 213, 320, 322, 337, 340, 342, 345, 346, 393, 418, 430, 431], "oppos": [4, 75], "incorrect": [4, 104], "thought": [4, 118, 121, 125, 132, 133, 145, 146, 153, 154], "region": 4, "squash": [4, 419, 435], "tanh": [4, 245, 246, 259, 260, 262, 263, 264, 266, 272, 289, 290, 291, 313, 418, 422, 429, 430, 431, 432], "prob": [4, 269, 270, 278, 281, 418, 430], "rememb": [4, 429], "remap": 4, "origin": [4, 8, 39, 40, 41, 55, 57, 58, 59, 62, 63, 69, 72, 76, 129, 188, 189, 199, 207, 229, 234, 238, 259, 306, 309, 310, 321, 323, 335, 336, 338, 340, 341, 343, 345, 346, 416, 420, 428, 431, 436], "world": [5, 139, 315, 332, 420, 425, 429, 430, 431, 436], "histor": 5, "ceas": 5, "farama": [5, 134, 135, 147, 148, 418, 431], "gymwrapp": [5, 118, 121, 125, 132, 133, 145, 146, 153, 154, 192, 216, 220, 235, 409, 418, 435], "feel": [5, 410, 426, 435], "free": [5, 7, 170, 186, 190, 320, 332, 340, 413, 418, 426, 430, 435], "gladli": 5, "prepar": [6, 37, 418], "conda": [6, 7, 410], "cmake": 6, "activ": [6, 7, 9, 44, 245, 246, 252, 256, 266, 271, 272, 322, 337, 340, 411, 431, 435], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 410], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 127], "y": [6, 7, 59, 61, 69, 142, 257, 271, 293, 416, 430, 433], "facebookresearch": [6, 127], "subdirectori": 6, "verbos": [6, 426], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 83, 118, 121, 125, 132, 133, 145, 146, 153, 154, 209, 218, 238, 338, 429, 430, 435, 436], "command": [6, 7, 10, 154, 418, 429, 430, 431, 436], "readm": [6, 7, 157, 435], "md": [6, 7], "habitatenv": [6, 409], "_has_habitat": 6, "available_env": [6, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 138, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 436], "startswith": [6, 244, 412, 416, 423], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 122, 338, 416], "env_nam": [6, 116, 118, 119, 121, 122, 124, 125, 127, 130, 132, 133, 134, 140, 145, 146, 150, 153, 154, 416, 418, 436], "llvmlite": 6, "config": [6, 7, 207, 234, 247, 252, 280, 397, 398, 399, 401, 404], "var": [6, 7, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 338, 343], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 302, 338], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 338, 343, 420, 433], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 420], "stand": [7, 36, 119, 120, 145, 153, 428, 431], "joint": [7, 417], "contact": [7, 58, 429], "engin": [7, 150, 431], "biomechan": 7, "graphic": 7, "anim": [7, 430], "area": 7, "demand": [7, 425, 436], "fast": [7, 9, 91, 116, 117, 170, 210, 341, 416, 417, 418, 435], "articul": 7, "acquir": [7, 418], "deepmind": [7, 8, 9, 118, 119, 120, 121, 125, 132, 133, 137, 138, 143, 144, 145, 146, 153, 154, 191, 418, 421], "whomev": 7, "licenc": 7, "incorpor": [7, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 258, 282, 345, 419, 422, 431], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 410], "tip": [7, 410], "glfw": [7, 416], "osmesa": 7, "egl": 7, "advic": [7, 436], "sudo": [7, 410], "apt": [7, 430], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 133, 298, 299, 300], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 412, 416, 418, 419, 429, 430, 433], "roboti": 7, "html": [7, 14, 15, 140, 142, 143, 144], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 145, 153], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 55, 57, 75, 86], "bin": [7, 255, 281, 303, 411], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 251, 306, 310, 416, 418, 420, 433], "nvidia": [7, 129, 420], "older": [7, 239], "hack": [7, 416], "adatp": 7, "script": [7, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 383, 403, 407, 411, 412, 413, 416, 417, 420, 425, 429, 430, 431, 433], "unnot": [7, 208], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 88, 417, 433], "troubleshoot": 7, "gl": 7, "h": [7, 99, 179, 181, 185, 211, 225, 259, 260, 261, 263, 264, 265, 268, 375, 417, 433], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 47, 48, 53, 54], "directori": [7, 39, 40, 41, 55, 57, 62, 75, 76, 90, 380, 382, 412, 413, 416, 422, 425, 429], "devel": 7, "ubuntu": [7, 129], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 417, 419, 428], "libstdc": 7, "glibcxx_3": 7, "29": [7, 104, 105], "compil": [7, 14, 15, 16, 23, 27, 38, 49, 59, 60, 61, 64, 69, 70, 71, 89, 90, 91, 92, 93, 97, 100, 104, 105, 106, 111, 112, 114, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 239, 259, 260, 263, 264, 290, 355], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 202, 227, 229, 238, 323, 343, 412, 436], "job": [7, 18, 19, 20, 22, 61, 70, 71, 99, 433, 435], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 104, 116, 117], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 429, 430], "global": [7, 27, 38, 49, 59, 60, 61, 64, 69, 70, 71, 99, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 227, 238, 283, 292, 306, 310, 353, 413, 416, 429, 430], "cuda_visible_devic": 7, "id": [7, 23, 63, 76, 97, 99, 104, 105, 118, 121, 124, 125, 132, 133, 145, 146, 153, 154, 155, 156, 282, 323, 341, 378, 382, 424, 433], "slurm_step_gpu": 7, "black": [7, 118, 429], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 430], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 413], "n_training_step": 8, "datapoint": [8, 75, 433], "n_data_per_train": 8, "no_grad": [8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 238, 243, 259, 260, 263, 264, 355, 356, 357, 358, 418, 419, 420, 430], "loss_fn": [8, 419, 423, 424, 435], "zero_grad": [8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 281, 413, 416, 418, 419, 420, 423, 426, 429, 430, 431], "backpropag": [8, 116, 117, 130, 131, 145, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 423, 430, 431], "differenti": [8, 75, 116, 117, 199, 323, 345, 355, 356, 357, 358, 419, 422, 423, 429, 430, 431], "denomin": 8, "artifact": 8, "numer": [8, 61, 125, 236, 262, 290, 291, 297, 302, 303, 306, 307, 308, 309, 310, 391, 418, 433, 436], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 53, 76, 77, 97, 104, 105, 121, 412, 431, 433], "compuat": 8, "fix": [8, 33, 145, 222, 321, 323, 339, 343, 417, 426, 431, 436], "retain_graph": [8, 116, 117], "discuss": [8, 9, 424, 429, 430], "inplac": [8, 27, 38, 39, 40, 41, 44, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 416], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 203, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 274, 276, 277, 280, 282, 283, 285, 286, 288, 292, 293, 301, 303, 305, 306, 308, 309, 310, 313, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 355, 356, 357, 358, 359, 409, 412, 419, 431, 435], "submodul": [8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 163, 222, 238, 261, 265, 317, 338], "param": [8, 27, 38, 49, 59, 60, 63, 64, 69, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 176, 183, 186, 188, 192, 199, 201, 209, 210, 216, 220, 226, 228, 230, 238, 253, 255, 271, 272, 273, 289, 301, 306, 309, 312, 338, 348, 352, 355, 356, 357, 358, 359, 416, 420, 426, 429, 430, 431, 432, 435], "grad": [8, 27, 38, 49, 59, 60, 64, 69, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 310, 416, 418], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 283, 309], "factor": [8, 11, 24, 49, 212, 238, 240, 241, 258, 262, 275, 282, 290, 291, 321, 327, 330, 331, 333, 344, 361, 416, 417, 420, 422, 426, 429, 430, 433, 436], "fit": [8, 60, 203, 222, 239, 412, 413, 416], "brax": [8, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 210, 421, 436], "jax": [8, 116, 117, 130, 131, 239], "improperli": 8, "underli": [8, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 338, 419, 421, 423, 425, 431], "tedeiou": 8, "priorit": [8, 56, 70, 96, 97, 323, 324, 325, 327, 328, 329, 336, 341, 343, 345, 346, 416, 417, 424, 435], "amount": [8, 145, 282, 417, 433], "costli": [8, 431], "constitut": [8, 417, 430, 431], "profil": 8, "frequent": [8, 44, 433], "program": [8, 328, 336, 420, 436], "functorch": [8, 10], "incl": 8, "suit": [8, 120, 418, 421, 435, 436], "mujoco_instal": 8, "valueerror": [8, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 103, 205, 225, 420, 435, 436], "idea": [9, 341, 413, 419, 422, 429, 430], "introductori": 9, "intro": [9, 418, 419], "dai": [9, 435], "2022": [9, 10, 243, 435], "spin": [9, 119, 120], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 422], "summari": [9, 203, 236, 416, 417, 418, 419], "reddit": 9, "reagent": 9, "orient": [9, 436], "baselines3": 9, "tf": 9, "bandit": [9, 142], "tensorflow": [9, 269, 270], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 420, 426], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 435], "grade": 9, "factori": [9, 72, 416], "cherri": 9, "jaxrl": 9, "mbrl": [9, 139, 411], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 418, 419, 429, 430], "notebook": [10, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "24": [10, 105, 124, 140, 141, 281, 305, 375, 429], "pip3": [10, 416, 418, 419, 429, 430], "url": [10, 127], "org": [10, 14, 15, 24, 56, 96, 97, 116, 117, 119, 120, 127, 130, 131, 137, 138, 140, 141, 142, 150, 157, 158, 179, 207, 232, 241, 247, 248, 249, 250, 251, 252, 255, 256, 257, 263, 268, 269, 270, 275, 276, 277, 281, 282, 283, 285, 286, 292, 303, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 342, 343, 344, 345, 355, 360, 368, 408, 427, 432], "whl": 10, "u": [10, 259, 260, 263, 264, 431], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 179, 418, 429, 430, 431, 433], "power": [11, 417], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 216, 409], "ultim": [11, 262, 290, 291], "ffmpeg": 11, "whatev": [11, 412, 416], "fed": [11, 430, 433], "feed": [11, 207, 234, 338, 411, 416, 429, 430, 433], "suppos": [11, 145, 388, 413, 436], "snippet": [11, 207, 232, 416], "gave": 11, "extrem": [11, 145, 153, 320, 322, 337, 340, 342], "blurri": [11, 420], "stitch": 11, "exp_nam": [11, 375, 376, 377, 380, 381, 382, 403, 417, 425, 426], "my_exp": [11, 425], "pixels_onli": [11, 119, 120, 124, 126, 127, 150, 416, 417, 425, 426, 435, 436], "my_video": [11, 425], "record_env": [11, 425, 426], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 300, 411], "allow_non": 12, "unwrap": [12, 191, 229, 383], "seealso": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 122, 145, 153, 416, 435], "device_typ": [14, 16, 17, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 207, 232, 234, 245, 246, 247, 248, 249, 250, 251, 257, 266, 271, 272, 274, 275, 280, 283, 309, 390, 401], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 417], "create_env_kwarg": [14, 15, 16, 17, 21, 122, 140, 145, 153, 227, 416, 436], "dict": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 55, 57, 59, 60, 61, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 88, 97, 104, 105, 118, 121, 122, 123, 124, 125, 126, 132, 133, 137, 138, 140, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 160, 197, 199, 222, 227, 229, 235, 236, 238, 239, 245, 246, 247, 248, 249, 250, 251, 252, 257, 266, 280, 306, 310, 323, 343, 345, 375, 379, 380, 388, 393, 398, 399, 405, 406, 407, 411, 416, 417, 418, 433, 435, 436], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 49, 212, 417, 433], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 306, 338, 388, 411, 416, 417, 418, 419, 422, 429, 435], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 161, 168, 306, 310, 388], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 39, 40, 41, 55, 57, 62, 76, 145, 153], "num_sub_thread": [14, 15, 17, 145, 153], "str": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 96, 97, 99, 110, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 132, 133, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 168, 171, 175, 179, 187, 191, 197, 198, 199, 207, 211, 220, 221, 224, 226, 227, 229, 230, 232, 234, 235, 236, 238, 239, 242, 254, 255, 261, 265, 267, 268, 271, 272, 273, 283, 284, 292, 297, 302, 303, 306, 307, 308, 309, 310, 313, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 407, 417, 418, 420], "set_trunc": [14, 15, 16, 17, 118, 121, 125, 132, 133, 145, 146, 153, 154], "use_buff": [14, 15, 16, 145, 153, 187], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 118, 121, 125, 132, 133, 145, 146, 153, 154], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "no_cuda_sync": [14, 15, 16], "datacollector": [14, 15, 16, 17, 49, 340, 418, 424, 433], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 97, 104, 240, 282, 289, 290, 297, 302, 303, 306, 307, 308, 309, 310, 312, 411, 435], "sota": [14, 15, 139, 195, 342, 384, 398, 416, 417, 435], "guard": [14, 15], "doc": [14, 15, 72, 127, 130, 131, 142, 150, 382, 412, 417, 429, 430, 433], "env_mak": [14, 15, 16, 21, 403, 436], "2000": [14, 15, 16, 49, 75, 128, 281, 375, 433], "50": [14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 58, 63, 65, 66, 74, 77, 78, 79, 80, 81, 104, 105, 137, 138, 238, 419, 433], "shutdown": [14, 15, 16, 17, 21, 176, 416, 417, 433, 435], "del": [14, 15, 16, 416, 417, 418, 428, 429, 433, 435, 436], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 39, 40, 41, 44, 45, 46, 47, 48, 53, 54, 55, 57, 58, 59, 62, 63, 67, 70, 72, 75, 76, 86, 96, 104, 118, 121, 125, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 172, 176, 187, 191, 205, 212, 220, 255, 282, 284, 302, 303, 306, 307, 308, 411, 431], "subclass": [14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 38, 59, 60, 64, 69, 77, 99, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 174, 175, 228, 235, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 309, 310, 311, 313, 316, 338, 340, 417, 419, 424, 431, 433], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 59, 69, 178, 293, 302, 305, 307, 419], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 75], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 417], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 97, 104, 105, 241, 430], "endless": [14, 15, 16, 17, 18, 19, 20, 187], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 125, 175, 222, 235, 265, 419, 431, 432], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 395, 417], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 86, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 191, 192, 193, 195, 198, 199, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 238, 309, 429, 436], "span": [14, 15, 16, 17, 18, 19, 20, 21, 97, 104, 105], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 49, 238, 305, 417, 418, 429, 430], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 63, 382, 411, 429, 430, 431], "round": [14, 15, 16, 17, 18, 19, 20, 21, 118], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 235], "ratio": [14, 15, 17, 63, 416, 418], "finish": [14, 15, 17, 21, 125, 212, 436], "rest": [14, 15, 17, 243, 411, 418, 419, 429, 431, 435], "earli": [14, 15, 17, 49, 125, 220, 435], "safeti": [14, 15, 17, 139, 145, 153], "harm": [14, 15, 17, 145, 153], "exclus": [14, 15, 82, 83, 97, 104, 105, 176, 192, 194, 259, 261, 263, 265, 269, 270, 302, 303, 307, 308, 344, 345, 346, 355, 356, 357, 358, 359, 382, 407, 411], "add_truncated_kei": [14, 15, 16, 17, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229], "trust": [14, 15, 16, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 184, 265], "cudagraphmodul": [14, 15, 16, 118, 121, 125, 132, 133, 145, 146, 153, 154], "behaviour": [14, 15, 16, 59, 69, 419, 420, 435], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 41, 42, 43, 46, 48, 49, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 88, 90, 91, 92, 93, 95, 96, 97, 99, 104, 105, 106, 108, 110, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 173, 174, 176, 183, 207, 209, 218, 222, 227, 228, 229, 231, 233, 234, 237, 238, 240, 242, 244, 245, 246, 248, 249, 250, 251, 254, 257, 258, 261, 262, 265, 266, 267, 268, 271, 272, 273, 278, 282, 291, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 353, 354, 355, 356, 357, 358, 359, 373, 375, 379, 380, 382, 386, 393, 398, 399, 404, 405, 406, 412, 418, 420, 430], "bypass": [14, 15, 16, 422], "isaaclab": [14, 15, 16, 126], "maniskil": [14, 15, 16], "crash": [14, 15, 16, 212], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 236, 238, 323, 343], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229], "increment": [14, 15, 16, 17, 118, 121, 125, 132, 133, 145, 146, 153, 154, 203, 337], "env_fn": [14, 15, 16, 17, 122, 405, 406], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 104, 105, 250, 251], "out_se": [14, 15, 16, 17, 436], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 340], "whole": [16, 27, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 75, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 306, 323, 343, 384, 416, 418], "_interruptor": 16, "outsid": [16, 188, 227, 412, 425, 429, 430, 431], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 422], "policy_state_dict": 16, "env_state_dict": 16, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 73, 253, 393], "respect": [18, 19, 20, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 177, 183, 186, 190, 201, 207, 208, 217, 222, 228, 229, 232, 234, 238, 259, 263, 271, 286, 309, 314, 320, 322, 337, 340, 342, 355, 357, 358, 389, 412, 418, 419, 429, 430], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 410, 417, 418, 420, 422, 425, 433, 435], "fashion": [18, 20, 21, 39, 40, 41, 55, 57, 62, 76, 105], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 44, 118, 121, 125, 132, 133, 145, 146, 153, 154, 194], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 56, 59, 60, 61, 64, 69, 70, 71, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316, 416], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 431], "visit": [18, 19, 20, 76], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 155], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 281, 416], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 53, 306, 310], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 405, 406, 416, 417], "coordin": [21, 185], "init": [21, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 228, 236, 238, 271, 272, 273, 382, 417, 418], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 252, 433], "equat": [21, 59, 76, 125, 236, 282, 319, 322, 344, 418, 421, 431], "exce": [21, 433], "indefinit": [21, 85], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 145, 241, 393, 419], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 345, 423], "jump": [22, 421], "host": [22, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 247, 252, 280, 301], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 59, 62, 65, 66, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 97, 104, 105, 118, 121, 125, 132, 133, 145, 146, 149, 153, 154, 165, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 238, 240, 244, 255, 258, 282, 284, 301, 305, 310, 325, 353, 373, 375], "as_nest": 23, "x": [23, 49, 59, 60, 61, 63, 64, 69, 105, 133, 197, 199, 225, 230, 239, 241, 243, 244, 246, 255, 257, 259, 260, 261, 263, 264, 265, 266, 268, 271, 272, 293, 302, 306, 307, 316, 319, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 393, 416, 420, 429, 431, 433, 435], "durat": [23, 430], "meta": [23, 39, 40, 41, 55, 57, 62, 74, 76, 123, 127, 320, 322, 337, 340, 342, 413, 418, 429, 430, 433], "aren": [23, 221, 419], "eventu": [23, 283, 419, 431], "recov": [23, 104, 105, 311, 328, 336, 428], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 124, 126], "stride": [23, 27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 245, 246, 248, 249, 257, 271, 417, 429, 435], "jag": 23, "focu": [23, 416, 417, 418, 420, 422, 423, 424, 429], "team": [23, 429, 430, 435], "cat": [23, 44, 187, 314, 321, 323, 324, 336, 341, 343, 345, 346, 429, 433, 435], "arang": [23, 25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 97, 104, 105, 172, 255, 270, 302, 384, 411, 433], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 44, 71, 77, 104, 130, 131, 143, 144, 154, 164, 305], "data_split": 23, "got": [23, 424], "init_kl_coef": 24, "horizon": [24, 137, 138, 157, 158, 242, 268, 418], "kl": [24, 33, 63, 199, 332, 337], "describ": [24, 39, 40, 41, 55, 57, 62, 74, 76, 149, 180, 289, 290, 325, 378, 412, 416, 418, 429, 430, 431, 436], "ziegler": 24, "et": [24, 242], "relax": [24, 373], "penalti": [24, 63, 334, 337], "strai": [24, 63], "greater": [24, 97, 104, 105, 187, 200, 201, 261, 265, 323, 416, 417], "increas": [24, 88, 179, 223, 243, 282, 429, 430], "pull": [24, 44, 76, 433], "toward": [24, 234], "aggress": 24, "kl_coef": [24, 33, 63], "arxiv": [24, 56, 96, 97, 116, 117, 119, 120, 130, 131, 137, 138, 140, 141, 150, 157, 158, 179, 207, 232, 241, 247, 248, 249, 250, 251, 252, 255, 256, 257, 263, 268, 275, 276, 277, 281, 282, 283, 285, 286, 292, 303, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 343, 344, 345, 355, 360, 368, 432], "pdf": [24, 179, 247, 248, 249, 250, 251, 255, 281, 282, 303, 323, 330, 334, 341, 344, 345, 355, 360, 368], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 429, 430], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 199], "newest": 24, "int8": [25, 121, 136, 147, 148, 177], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 65, 66, 70, 71, 74, 77, 78, 79, 80, 81, 116, 117, 121, 124, 126, 127, 130, 131, 140, 141, 143, 144, 150, 155, 156, 172, 189, 277, 278, 281, 285, 319, 417, 418, 419, 422, 431, 433], "null": [25, 28, 29, 31, 32, 42, 43, 51, 52, 56, 65, 66, 70, 74, 77, 78, 79, 80, 81, 96, 97, 177, 197], "denot": [25, 430], "clariti": [25, 44], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "cardin": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 255, 284, 302, 303, 308, 418], "outcom": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 253, 270, 289, 338, 429], "cartesian": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 436], "np": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 125, 313, 373, 420, 429, 431], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 125, 282, 313, 373, 420, 429], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 63, 65, 66, 74, 77, 78, 79, 80, 81, 96, 118, 121, 125, 126, 132, 133, 145, 146, 153, 154, 187, 191, 259, 260, 263, 264, 416, 429], "use_mask": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 147, 148], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 245, 246, 266, 287, 288, 409, 412], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "classmethod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 69, 74, 76, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 232, 239, 246, 247, 280], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "index_typ": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 51, 52, 65, 66, 74, 77, 78, 79, 80, 81], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "exanpl": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "one_hot": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 255, 270, 284], "categ": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 306], "to_categorical_spec": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "idx_one_hot": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "idx_categ": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "to_categor": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 116, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 183, 186, 187, 190, 207, 222, 228, 229, 232, 234, 236, 238, 309, 319, 338, 416, 417, 418, 431, 433], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 431, 436], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 416], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 411], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 62, 65, 66, 74, 76, 77, 78, 79, 80, 81, 270, 278, 306, 412], "project": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 60, 65, 66, 74, 77, 78, 79, 80, 81, 189, 240, 263, 282, 297, 302, 303, 306, 307, 308, 309, 310, 382, 411, 435, 436], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 98, 338, 436], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154, 203, 236, 240, 241, 245, 246, 262, 266, 269, 270, 290, 291, 306, 310, 322, 323, 337, 340, 388, 391, 407, 411, 413, 419, 422, 430, 436], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 222, 258, 306, 310, 418, 429, 430], "set_provisional_n": [25, 26, 30, 34, 45, 46], "temporarili": [25, 26, 30, 34, 45, 46, 88, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 424, 433], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 69, 74, 77, 78, 79, 80, 81, 207, 232, 234, 309], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 118, 121, 125, 132, 133, 145, 146, 153, 154], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81, 229, 289, 407], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "to_one_hot": [25, 26, 30, 34, 45, 46, 47, 48, 53, 54], "hot": [25, 26, 30, 34, 45, 46, 47, 48, 53, 54, 116, 117, 124, 126, 127, 130, 131, 137, 138, 140, 141, 143, 144, 147, 148, 150, 155, 156, 157, 158, 172, 173, 189, 255, 278, 279, 284, 302, 303, 307, 308, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 419], "categ_sampl": [25, 26, 30, 34, 47, 48, 53, 54], "onehot_sampl": [25, 26, 30, 34, 47, 48], "to_one_hot_spec": [25, 26, 30, 34, 45, 46, 47, 48, 53, 54], "categoricalbox": [25, 26, 30, 34, 47, 48, 53, 54, 146], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 74, 77, 78, 79, 80, 81], "update_mask": [25, 26, 30, 34, 45, 46, 47, 48, 53, 54], "disabl": [25, 26, 27, 30, 34, 38, 45, 46, 47, 48, 49, 53, 54, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 262, 291, 373, 416, 429, 430], "unmask": [25, 26, 30, 34, 45, 46, 47, 48, 53, 54], "ts": [25, 26, 30, 34, 45, 46, 47, 48, 53, 54], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 197, 418, 419, 421, 429, 430, 433], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "child": [27, 38, 44, 49, 59, 60, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 417], "fn": [27, 38, 49, 58, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 230, 238, 405, 406], "recurs": [27, 31, 32, 38, 42, 49, 59, 60, 64, 66, 69, 82, 83, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338, 420], "init_weight": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "m": [27, 38, 45, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 189, 238, 244, 310, 417, 431], "fill_": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 417, 419], "net": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 249, 251, 254, 257, 272, 320, 321, 323, 329, 336, 340, 341, 342, 343, 403, 417, 431, 432, 435], "in_featur": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 245, 246, 248, 249, 250, 251, 257, 266, 271, 272, 274, 275, 298, 309, 317, 325, 327, 420, 422, 423], "out_featur": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 139, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 242, 245, 246, 248, 249, 250, 251, 256, 257, 261, 265, 266, 268, 271, 272, 274, 275, 298, 302, 309, 317, 325, 327, 411, 416, 419, 420, 422, 423, 426, 435], "bia": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 197, 207, 222, 227, 228, 229, 232, 234, 238, 241, 245, 246, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 272, 274, 275, 282, 309, 316, 318, 319, 323, 338, 343, 412, 416, 417, 418, 419, 430], "requires_grad": [27, 38, 49, 59, 60, 64, 69, 116, 117, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 227, 229, 238, 281, 310, 323, 343], "bfloat16": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "datatyp": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 433], "member": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338, 375], "xdoctest": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 197, 207, 222, 227, 228, 229, 232, 234, 238, 309, 323, 338, 343], "buf": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "20l": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338], "1l": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338], "5l": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338], "__call__": [27, 38, 49, 58, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 310, 413], "doubl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 186, 188, 190, 207, 222, 228, 229, 232, 234, 238, 309, 325, 330, 335, 341, 344, 353, 416, 417, 418, 419, 436], "eval": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 236, 238, 243, 411, 416, 417, 418], "evalu": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 126, 132, 133, 137, 138, 145, 146, 153, 154, 229, 238, 243, 253, 269, 270, 278, 291, 341, 398, 399, 417, 418, 426], "dropout": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 243, 244, 259, 261, 263, 265, 266, 411, 419], "batchnorm": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 241], "comparison": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 229, 238, 338, 416, 417], "extra_repr": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "recip": [27, 38, 58, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 276, 277, 280, 282, 285, 286, 288, 293, 301, 303, 305, 308, 313, 316], "get_buff": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "get_submodul": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "qualifi": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "referenc": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "resolv": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "someth": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 136, 145, 146, 153, 154, 238, 410, 417, 418, 431, 436], "get_extra_st": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238], "set_extra_st": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238], "picklabl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238], "pickl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238], "get_paramet": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "net_b": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "net_c": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "conv": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 245, 246, 417], "conv2d": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 246, 248, 249, 257, 271], "kernel_s": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 245, 246, 248, 249, 257, 271, 276, 417, 435], "diagram": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "degre": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 184, 238], "named_modul": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "half": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309, 416], "ipu": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "strict": [27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343, 420], "descend": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343], "get_swap_module_params_on_convers": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343], "persist": [27, 36, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 197, 227, 229, 238, 323, 343], "preserv": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343], "missing_kei": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343], "unexpected_kei": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343], "namedtupl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 227, 229, 238, 323, 343], "l": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 259, 263, 354, 418, 431], "idx": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "mtia": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "named_buff": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "remove_dupl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338], "prepend": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 338, 420], "running_var": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "named_children": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "conv4": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "conv5": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "memo": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "named_paramet": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 238, 338], "register_backward_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "removablehandl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "favor": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 418], "register_full_backward_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_buff": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "running_mean": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "alongsid": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 425], "num_featur": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 241], "register_forward_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 255, 284], "with_kwarg": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "always_cal": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_module_forward_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "regardless": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 322, 337, 340], "register_forward_pre_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "invok": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "And": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 423], "forward_pr": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_module_forward_pre_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "grad_input": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "grad_output": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "technic": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 417, 419, 420, 422], "caller": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_module_full_backward_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_full_backward_pre_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "backward_pr": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_module_full_backward_pre_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_load_state_dict_post_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "incompatible_kei": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "thrown": [27, 38, 49, 59, 60, 64, 65, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 433], "register_load_state_dict_pre_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "local_metadata": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "error_msg": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "noqa": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "b950": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_modul": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 413], "alia": [27, 38, 49, 56, 59, 60, 61, 64, 69, 70, 71, 76, 90, 91, 92, 93, 99, 106, 108, 112, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 345, 346, 353, 359], "register_paramet": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_state_dict_post_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "register_state_dict_pre_hook": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "keep_var": [27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 343], "requires_grad_": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 420], "autograd": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 343], "freez": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 236, 238], "finetun": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "gan": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "set_submodul": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "share_memori": [27, 38, 49, 59, 60, 64, 69, 118, 121, 122, 125, 132, 133, 145, 146, 153, 154, 238, 416], "share_memory_": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238, 435], "destin": [27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 178, 186, 188, 190, 197, 227, 229, 232, 236, 238, 323, 343, 375], "averag": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 236, 238, 282, 323, 331, 332, 343, 391, 416, 418], "shallow": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 343, 419], "pleas": [27, 38, 49, 59, 60, 64, 69, 73, 118, 121, 124, 125, 132, 133, 145, 146, 147, 148, 153, 154, 176, 179, 197, 223, 227, 229, 238, 271, 272, 273, 323, 343, 410], "design": [27, 38, 49, 51, 53, 59, 60, 64, 69, 102, 108, 115, 118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 172, 179, 197, 208, 227, 229, 238, 301, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 346, 353, 409, 416, 417, 418, 419, 421, 422, 423, 428, 429, 430, 431, 433, 435, 436], "detach": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 197, 227, 229, 238, 323, 334, 338, 343, 345, 355, 356, 357, 358, 416], "non_block": [27, 38, 39, 40, 41, 49, 55, 57, 59, 60, 62, 64, 69, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309, 419], "memory_format": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "channels_last": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "unchang": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 189, 207, 222, 228, 229, 232, 234, 238, 258, 309, 375, 390, 416, 433], "tri": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309, 425], "pin": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "4d": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "ignore_w": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "1913": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "3420": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "5113": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "2325": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "torch_doctest_cuda1": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "gpu1": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "1914": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "5112": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "2324": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "float16": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 260, 264, 309], "cdoubl": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "3741": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "j": [27, 38, 49, 56, 59, 60, 64, 69, 96, 97, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309, 413, 423], "2382": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "5593": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "4443": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "complex128": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "6122": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "1150": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 183, 207, 222, 228, 229, 232, 234, 238, 309], "to_empti": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "dst_type": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "xpu": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "set_to_non": [27, 38, 49, 59, 60, 64, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 238], "upper": [28, 102, 202], "continuousbox": [28, 31, 77, 118, 121, 125, 132, 133, 145, 146, 153, 154, 164, 197, 200, 222, 230], "provision": 30, "descript": [31, 157, 175, 417, 418], "akin": 31, "unnam": 31, "compositespec": [31, 409, 431, 436], "constraint": [31, 139, 290, 418, 429, 430], "data_cl": 31, "tensorclass": [31, 39, 40, 41, 55, 57, 62, 76, 86, 90, 92, 112], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 180, 416], "_nodefault": [31, 32, 42, 66], "is_empti": [31, 32, 42, 66, 431], "include_nest": [31, 32, 42, 66], "leaves_onli": [31, 32, 42, 66], "is_leaf": [31, 32, 42, 66], "_compositespecitemsview": [31, 32, 42, 66], "_compositespeckeysview": [31, 32, 42, 66], "reflect": [31, 32, 42, 66, 126, 147, 148, 170, 197, 235, 338, 396, 417, 418, 419, 430], "lock_": [31, 32, 42, 66], "propag": [31, 32, 42, 66, 320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358, 418, 429, 430], "succeed": [31, 32, 42, 66, 197, 230], "pop": [31, 32, 42, 66], "keyerror": [31, 32, 42, 66, 229], "extract": [31, 32, 42, 66, 175, 197, 226, 230, 304, 416, 418, 435], "selected_kei": [31, 32, 42, 66, 216, 416], "unlock_": [31, 32, 42, 66], "_compositespecvaluesview": [31, 32, 42, 66], "multipli": [33, 243, 259, 263, 320, 321, 322, 323, 329, 337, 339, 340, 341, 343, 391, 416, 429], "calcul": [33, 63, 212, 259, 320, 322, 327, 337, 340, 342, 345], "shift_kei": [35, 37, 50, 67], "is_full_kei": [35, 37, 50, 67], "is_ful": [35, 37, 50, 67], "tempfil": [35, 39, 40, 41, 55, 56, 57, 61, 62, 67, 70, 71, 75, 76, 90, 99, 403, 416, 417, 419, 420, 424, 429, 432, 433], "register_save_hook": [35, 56, 61, 67, 70, 71, 99], "temporarydirectori": [35, 39, 40, 41, 55, 56, 57, 61, 62, 67, 70, 71, 75, 76, 99, 416, 417, 419, 420, 424, 429, 432, 433], "tmpdir": [35, 56, 61, 67, 70, 71, 75, 99, 416, 417, 420, 429], "rb_load": [35, 56, 61, 70, 71, 99], "register_load_hook": [35, 56, 61, 70, 71, 99], "filesystem": [36, 433], "ted2nest": [37, 409], "tokens_respons": [39, 41], "attention_mask": [39, 40, 55, 57, 58, 62, 63, 72, 75, 86], "token_list": [39, 40, 41], "tokens_response_list": [39, 41], "log_prob": [39, 41, 63, 253, 269, 270, 278, 281, 291, 310, 323, 412], "text": [39, 40, 41, 58, 63, 72, 132, 133, 259, 260, 263, 264, 282, 418], "copy_exist": [39, 40, 41, 55, 57, 62, 76], "return_earli": [39, 40, 41, 55, 57, 62, 76], "share_non_tensor": [39, 40, 41, 55, 57, 62, 76], "memmap": [39, 40, 41, 55, 57, 62, 76, 90, 145, 153, 236, 375, 377, 390], "dataclass": [39, 40, 41, 55, 57, 62, 74, 76, 338], "from_tensordict": [39, 40, 41, 55, 57, 62, 76], "non_tensordict": [39, 40, 41, 55, 57, 62, 76], "getattr": [39, 40, 41, 55, 57, 62, 76], "load_memmap": [39, 40, 41, 55, 57, 62, 76], "load_": [39, 40, 41, 55, 57, 62, 76], "load_memmap_": [39, 40, 41, 55, 57, 62, 76], "fetch": [39, 40, 41, 55, 57, 62, 76, 116, 117, 119, 120, 199, 422, 432, 433], "fromkei": [39, 40, 41, 55, 57, 62, 76], "saved_td": [39, 40, 41, 55, 57, 62, 76], "td_load": [39, 40, 41, 55, 57, 62, 76], "fake": [39, 40, 41, 55, 57, 62, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 416, 417, 420], "_subclass": [39, 40, 41, 55, 57, 62, 76], "faketensormod": [39, 40, 41, 55, 57, 62, 76], "faketensor": [39, 40, 41, 55, 57, 62, 76], "from_flatten": [39, 40, 41, 55, 57, 62, 76], "attemptedli": [39, 40, 41, 55, 57, 62, 76], "existsok": [39, 40, 41, 55, 57, 62, 76, 90], "mimic": [39, 40, 41, 55, 57, 62, 76, 118, 121, 125, 132, 133, 145, 146, 153, 154], "cross": [39, 40, 41, 55, 57, 62, 76, 242], "tensordictfutur": [39, 40, 41, 55, 57, 62, 76], "serialis": [39, 40, 41, 55, 57, 62, 76], "deepli": [39, 40, 41, 55, 57, 62, 76], "memmap_": [39, 40, 41, 55, 57, 62, 76, 236], "memmap_lik": [39, 40, 41, 55, 57, 62, 76], "contentless": [39, 40, 41, 55, 57, 62, 76], "1_000_000": [39, 40, 41, 55, 56, 57, 61, 62, 70, 71, 76, 99, 104, 416, 419, 429], "alloc": [39, 40, 41, 55, 57, 62, 76, 92, 253, 269, 270, 416], "memmap_refresh_": [39, 40, 41, 55, 57, 62, 76], "refresh": [39, 40, 41, 55, 57, 62, 76, 426, 429, 430], "saved_path": [39, 40, 41, 55, 57, 62, 76], "setattr": [39, 40, 41, 55, 57, 62, 76], "tent": [39, 40, 41, 55, 57, 62, 75, 76], "to_tensordict": [39, 40, 41, 55, 57, 62, 76, 419], "retain_non": [39, 40, 41, 55, 57, 62, 76], "discrard": [39, 40, 41, 55, 57, 62, 76], "switch": [39, 40, 41, 55, 57, 62, 76, 229, 262, 291, 373], "stackedcomposit": [42, 409], "tensordictmap": [44, 409], "observation_kei": [44, 118, 121, 125, 132, 133, 145, 146, 153, 154], "excluded_kei": [44, 192], "consolid": [44, 69, 83, 92], "lazili": [44, 91, 272, 431], "from_tensordict_pair": [44, 69], "querymodul": [44, 69], "get_keys_from_env": 44, "cattensor": [44, 118, 121, 125, 132, 133, 145, 146, 153, 154, 416, 428, 431, 436], "unsqueezetransform": [44, 179, 431, 433], "oracl": 44, "obs_kei": 44, "state_kei": [44, 118, 121, 125, 132, 133, 145, 146, 153, 154], "reset_st": 44, "rollout0": 44, "rollout1": 44, "rollout1b": 44, "collaps": 44, "max_length": [44, 55, 57, 58, 72, 75, 76, 86, 187, 226, 420, 426], "valid_path": [44, 76], "assert_clos": [44, 261, 265], "subtre": [44, 76], "intersect": [44, 239], "Or": [44, 151, 152, 271], "rollout_from_path": [44, 76], "plot": [44, 76, 416, 418, 419, 429, 430, 431], "_nestedkei": [44, 118, 121, 125, 132, 133, 145, 146, 153, 154], "return_nod": 44, "diverg": [44, 199, 261, 265, 306, 310, 332, 337], "endpoint": 44, "noth": [44, 133, 416, 418], "r0": [44, 416], "123": [44, 76], "392": [44, 76], "989": [44, 76], "809": [44, 76], "847": [44, 76], "r1": 44, "235": 44, "td_root": [44, 76], "node_data": [44, 76], "node_id": [44, 76], "nontensordata": [44, 51, 118, 143, 144, 187, 197, 226, 230, 373], "_parent": [44, 76], "nontensorstack": [44, 51, 91, 118, 133, 187, 197, 226, 230], "weakref": [44, 76], "0x716eeb78fbf0": 44, "0x": 44, "4341220243998689835": 44, "6745467818783115365": 44, "win": [44, 76], "to_str": [44, 76], "node_format_fn": [44, 76], "indent": [44, 76], "rollouts_data": [44, 76], "456": [44, 76], "359": [44, 76], "3094": [44, 76], "75": [44, 76, 104], "948": [44, 76], "68": [44, 76, 104], "9045": [44, 76], "rollout_data": [44, 76], "nvec": [45, 47], "remove_singleton": 45, "ax": [45, 274, 275, 429], "Not": [45, 46, 61, 116, 117, 130, 227, 261, 265], "neither": [45, 46, 47, 48, 155, 431], "use_regist": [47, 53], "mone_hot": [47, 48], "boxlist": [47, 48], "gamma": [49, 212, 238, 268, 320, 321, 323, 324, 325, 327, 329, 330, 331, 333, 336, 338, 340, 341, 342, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 403, 412, 416, 417, 418, 429, 430, 435], "sutton": [49, 412, 429, 430], "1988": 49, "tempor": [49, 261, 265, 268, 356, 357, 362, 363], "44": [49, 104], "discount": [49, 122, 212, 238, 321, 327, 330, 331, 333, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 412, 417, 418, 429, 430], "ahead": [49, 238, 436], "bias": [49, 259, 260, 263, 264, 316, 412, 416], "mitig": [49, 179], "multisteptransform": [49, 409], "99": [49, 212, 236, 268, 333, 348, 354, 361, 403, 416, 417, 418, 420, 423, 426, 429, 430, 435], "nontermin": 49, "original_reward": 49, "newli": [49, 118, 121, 125, 132, 133, 145, 146, 153, 154], "OR": 49, "row": [50, 68, 130, 131, 200], "example_data": [51, 132, 187], "conform": 51, "templat": [51, 376], "randomli": [51, 103, 154, 202, 203, 222, 258, 306, 310, 422, 429, 430, 431, 433], "unidimension": 53, "action_valu": [53, 254, 255, 284, 302, 303, 307, 308, 323, 329, 338, 353, 411, 419, 420, 422, 426], "keepdim": 53, "chosen_action_valu": [53, 283, 284, 292, 307, 308, 353, 411, 419, 422], "priori": 53, "uniqu": [53, 76, 104, 105, 133, 137, 138, 179, 191, 221, 222, 223, 227, 305, 382, 424, 433], "tensor_spec": [53, 149, 171, 173, 328, 329, 340, 342], "one_hot_sampl": [53, 54], "chosen_data": [55, 86], "rewarddata": [55, 86, 409], "rejected_data": [55, 86], "from_dataset": [55, 57, 86], "dataset_nam": [55, 57, 63, 75, 86, 142], "550": [55, 57, 63, 75, 86, 104, 105], "root_dir": [55, 57, 75, 86], "from_disk": [55, 57, 75, 86], "carperai": [55, 57, 63, 75], "openai_summarize_comparison": [55, 57, 75], "load_from_disk": [55, 57, 75, 86], "load_dataset": [55, 57, 75, 86], "92534": 55, "input_id": [55, 57, 58, 62, 63, 72, 75, 86, 133], "end_scor": [55, 62, 63, 86], "sub_data": [55, 57], "alpha": [56, 70, 96, 97, 245, 246, 248, 249, 250, 251, 257, 271, 321, 323, 329, 339, 341, 343, 345, 416, 433, 435], "ep": [56, 70, 96, 97, 203, 236, 241, 282, 322, 344, 391, 412, 416, 417, 419, 420, 423, 426], "1e": [56, 70, 96, 97, 203, 236, 241, 253, 256, 289, 416, 417, 418, 430], "08": [56, 70, 96, 97], "pin_memori": [56, 61, 70, 71, 206, 416, 435], "schaul": [56, 96, 97], "quan": [56, 96, 97], "antonogl": [56, 96, 97], "silver": [56, 96, 97], "2015": [56, 96, 97], "ab": [56, 96, 97, 116, 117, 119, 120, 130, 131, 137, 138, 140, 141, 150, 157, 158, 178, 207, 232, 236, 241, 247, 252, 256, 257, 263, 268, 275, 276, 277, 283, 285, 286, 292, 320, 321, 325, 326, 327, 328, 331, 332, 333, 335, 336, 339, 340, 343, 432], "1511": [56, 96, 97, 257], "05952": [56, 96, 97], "expon": [56, 70, 96, 97], "\u03b1": [56, 70, 96, 97], "delta": [56, 70, 96, 97, 259, 263, 289, 306, 310, 409, 412, 429], "1_000": [56, 61, 70, 71, 429, 433], "mini": [56, 61, 70, 71, 430], "decid": [56, 61, 70, 71, 429, 435], "incompat": [56, 61, 70, 71, 342, 433], "drop_last": [56, 61, 70, 71, 103, 105], "notion": [56, 61, 70, 71, 281], "caution": [56, 61, 70, 71, 103, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 436], "codebas": [56, 61, 70, 71, 431], "return_info": [56, 61, 70, 71, 96, 97, 99, 433], "tensordictprioritizedreplaybuff": [56, 409, 435], "simplifi": [56, 167, 422, 431, 433], "_weight": [56, 70, 96, 97], "update_prior": [56, 96, 97, 390, 413, 417, 433, 435], "36278465": 56, "invert": [56, 61, 70, 71, 99, 318, 418], "tqdm": [56, 61, 70, 71, 99, 393, 416, 418, 419, 429, 430, 431], "randomsampl": [56, 61, 70, 71, 99, 416, 429], "td_error": [56, 61, 70, 71, 99, 323, 324, 325, 327, 328, 329, 330, 336, 338, 341, 343, 345, 346, 353, 416, 433, 435], "update_tensordict_prior": [56, 61, 70, 71, 99, 416, 433, 435], "insert_transform": [56, 61, 70, 71, 99, 174, 229], "insert": [56, 61, 70, 71, 89, 99, 100, 110, 111, 114, 115, 174, 179, 183, 219, 229, 231], "set_sampl": [56, 61, 70, 71, 99], "set_storag": [56, 61, 70, 71, 99], "set_writ": [56, 61, 70, 71, 99], "write_count": [56, 61, 70, 71, 99], "prompt_rindex": [57, 58, 63], "promptdatatldr": 57, "116722": 57, "prompt": [58, 63, 132], "return_tensordict": [58, 72], "tensodict": [58, 72], "valid_sampl": 58, "eough": 58, "toknen": 58, "meet": 58, "criterion": 58, "autotoken": [58, 72, 75], "from_pretrain": [58, 63, 72, 133], "gpt2": [58, 63, 72, 75, 133, 247, 252, 280], "pad_token": [58, 72], "eos_token": 58, "enough": [58, 433], "inde": [58, 189, 418, 420, 431], "index_kei": [59, 69], "hash_kei": 59, "_hash": 59, "hash_modul": [59, 64, 69], "siphash": [59, 60, 69, 133], "hash_to_int": 59, "hashtoint": 59, "query_modul": [59, 69], "key1": [59, 69, 180, 219, 384, 392, 435], "key2": [59, 69, 180, 219, 384, 392, 435], "write_hash": 59, "is_tdmodule_compat": [59, 69], "reset_out_kei": [59, 69], "orign": [59, 69], "mod": [59, 69, 199, 244, 261, 265, 305, 310, 313, 419, 420, 426], "select_out_kei": [59, 69, 320, 321, 323, 324, 328, 329, 336, 340, 341, 343, 345, 346, 420], "reset_parameters_recurs": [59, 69, 338], "relu": [59, 69, 139, 242, 252, 268, 319], "old_param": [59, 69], "bork": [59, 69], "dork": [59, 69], "reset_paramet": [59, 69, 273], "from_modul": [59, 69, 255, 309, 312, 435], "rid": [59, 69], "out_keys_sourc": [59, 69], "rubric": [59, 69, 203, 312], "revert": [59, 69, 118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 422, 433], "seq": [59, 69, 244, 259, 261, 263, 265, 305, 419, 420, 426, 428], "z": [59, 69, 260], "n_compon": 60, "dtype_cast": 60, "as_tensor": [60, 64, 420], "init_method": 60, "emb": [60, 419], "sklearn": [60, 142], "byte": [60, 64, 173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238], "builtin": [60, 64], "pythonhashse": [60, 64], "todo": 60, "storagecheckpointerbas": [61, 106], "roundrobinwrit": [61, 71], "_pytre": [61, 433], "tree_map": [61, 433], "assert0": [61, 433], "ref_model": 63, "reward_model": [63, 315], "max_new_token": 63, "score_clip": 63, "kl_schedul": 63, "klcontrollerbas": 63, "num_step": [63, 420], "causal": 63, "sentenc": 63, "frozen": [63, 199, 236], "llm": [63, 75, 86, 187], "gpt2rewardmodel": 63, "get_dataload": [63, 409], "promptdata": [63, 409], "gpt2lmheadmodel": 63, "dl": 63, "block_siz": [63, 86], "tensorclass_typ": [63, 86], "openai_summarize_tldr": 63, "config_class": 63, "model_path": 63, "rollout_from_model": 63, "rollout_from_data": 63, "600": 63, "reward_kl": [63, 199], "reward_raw": 63, "sample_log_prob": [63, 298, 299, 300, 306, 310, 312, 340], "create_rollout_td": 63, "log_ratio": 63, "replic": [63, 412], "rindex": 63, "eo": 63, "generation_config": 63, "generationconfig": 63, "ti": [63, 364, 365, 366, 367, 369, 370, 371, 372, 417], "log_probs_gen": 63, "logprobs_of_label": 63, "hash_a": 64, "4669941682990263259": 64, "3778166555168484291": 64, "9122128731510687521": 64, "hash_b": 64, "heterogen": [65, 66, 91, 118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 159, 271, 272, 416, 417], "220": 67, "resembl": 69, "tensormap": 69, "collat": [69, 99], "subtyp": 69, "embedding_storag": 69, "tensor_dict_storag": 69, "new_index": 69, "key3": 69, "retrieve_valu": 69, "storage_constructor": 69, "write_fn": 69, "tensordictstorag": 69, "thumb": [69, 145, 418], "lazydynamicstorag": 69, "fixedstorag": 69, "randomprojectionhash": 69, "priority_kei": [70, 71, 96, 323, 325, 328, 329, 330, 336, 338, 341, 343, 345, 346, 353, 433, 435], "reduct": [70, 96, 97, 110, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346], "prioritizedreplaybuff": [70, 409, 435], "min": [70, 96, 97, 110, 282, 321, 322, 323, 329, 339, 341, 343, 417, 418], "median": [70, 96, 97, 110, 130, 131, 172, 306, 310], "include_info": [70, 71], "huggingfac": [72, 304], "co": [72, 191, 431], "pad_trunc": 72, "am": 72, "me": 72, "reassur": 72, "ok": 72, "primarili": [74, 208, 422], "educ": 74, "guess": 74, "knowledg": [74, 118, 121, 125, 132, 133, 145, 146, 153, 154, 423, 425], "tokenizer_fn": 75, "tensordicttoken": [75, 409], "pre_tokenization_hook": 75, "valid_s": 75, "tokenizer_class": 75, "tokenizer_model_nam": 75, "tokein": 75, "elementwis": 75, "vocabulari": [75, 132, 133, 226], "loader": [75, 418], "185068": 75, "dataset_to_tensordict": 75, "data_dir": 75, "batch_dim": [75, 118, 121, 125, 132, 133, 145, 146, 153, 154, 407], "valid_mask_kei": 75, "batch_dimens": 75, "filder": 75, "from_dict": 75, "data_memmap": 75, "ref": 76, "branching_act": 76, "prev_act": 76, "edg": [76, 420], "travers": 76, "breadth": 76, "bf": 76, "fully_expand": 76, "get_vertex_by_hash": 76, "get_vertex_by_id": 76, "is_termin": 76, "make_nod": 76, "node_observ": 76, "bag": 76, "num_children": 76, "num_vertic": 76, "count_repeat": 76, "recustruct": 76, "scope": [76, 118, 121, 125, 132, 133, 145, 146, 153, 154, 420, 436], "plotli": 76, "make_label": 76, "visual": [76, 207, 232, 234, 375, 418, 429, 431], "notimplementederror": [76, 416], "unsupport": 76, "selected_act": 76, "mctsforest": [76, 133, 409], "key_typ": 76, "liter": [76, 132, 187, 296], "recurse_through_entri": 83, "recurse_through_stack": 83, "infinit": [86, 137, 138, 157, 158, 424, 433], "block": [86, 89, 115, 411, 416, 419, 420, 423, 424, 429, 433], "pairwisedataset": [86, 409], "256": [86, 137, 138, 197, 252, 417, 418, 420, 429, 430], "checkpoint_fil": 88, "h5": 88, "h5_kwarg": 88, "iff": 88, "suffix": [88, 388], "h5py": 88, "create_dataset": 88, "consequ": [88, 263, 424], "immut": [89, 118, 121, 125, 132, 133, 145, 153, 210, 229], "piec": [89, 100, 111, 114, 115, 416, 417, 418, 425, 429, 430, 431, 433], "scratch_dir": [90, 416, 417, 419, 424, 429, 432, 433], "sent": [90, 92, 112, 236], "mistak": [90, 92, 112], "overewritten": 90, "tensorstoragecheckpoint": 90, "pathlib": [90, 393, 420], "main_ckpt_dir": 90, "rb_memmap": 90, "10_000_000": 90, "myclass": [90, 92, 112], "foo": [90, 92, 112, 301, 433, 436], "bar": [90, 92, 112, 301, 386, 387, 388, 393, 413, 417], "attach": [90, 91, 92, 93, 106, 108, 112, 417], "entiti": [90, 91, 92, 93, 106, 108, 112], "lazystacktensordict": 91, "heterougen": 91, "linearli": 91, "densifi": 91, "unlimit": [91, 93], "st": 91, "expans": [92, 338], "zero_": [92, 112, 164], "liststoag": 94, "max_capac": [96, 97, 416, 433], "max_priority_within_buff": [96, 97], "data_0": 96, "data_1": 96, "smoothen": 96, "tdrb": 96, "pack": [96, 259, 263, 418, 421, 436], "nd": [96, 97], "1d": [96, 97, 104, 105, 110], "sum_tre": [96, 97], "min_tre": [96, 97], "slice_len": [97, 104, 105, 375], "end_kei": [97, 104, 105], "cache_valu": [97, 104, 105], "closer": [97, 435], "readili": [97, 104, 105, 310], "conjunct": [97, 104, 105, 417], "Will": [97, 104, 140, 375], "buffer0": [97, 104], "immutablewrit": [97, 104], "buffer1": [97, 104], "other_sampl": [97, 104], "shorter": [97, 104, 105], "short": [97, 104, 105, 116, 117, 118, 121, 125, 130, 131, 132, 133, 145, 146, 153, 154, 159, 263, 264, 417, 418, 421, 422, 430, 433], "Be": [97, 104, 105], "fewer": [97, 104], "tolist": 97, "120110917137936e": 97, "06": [97, 253, 289], "storageensembl": [99, 102], "samplerensembl": 99, "writerensembl": [99, 108], "sample_from_al": [99, 102], "num_buffer_sampl": [99, 102], "ensembl": [99, 102, 108, 109, 115, 309, 341], "forbidden": 99, "0x13a2ef430": 99, "0x13a2f9310": 99, "interpol": [99, 211, 417, 420], "interpolationmod": 99, "bilinear": [99, 211], "0x13a2f9220": 99, "0x13a2f9f70": 99, "0x13a2d9b50": 99, "0x13a2f95b0": 99, "0x128648260": 99, "roundrobin": [100, 111], "buffer_id": [102, 108], "shuffl": [103, 105, 430], "incomplet": [103, 105], "fresh": 103, "haven": [103, 432], "remain": [103, 178, 188, 189, 199, 221, 275, 423], "draw": [103, 258], "use_gpu": [104, 105], "slicesamplerwithoutreplac": [104, 433], "acceler": [104, 105, 429, 430], "significantli": [104, 105, 179, 412, 416, 417, 423, 430], "reconstruct": [104, 105, 332, 416, 436], "ep_1": [104, 105], "ep_2": [104, 105], "73": 104, "74": 104, "76": 104, "77": 104, "42": [104, 266, 281, 320, 321, 323, 324, 328, 336, 343], "43": 104, "45": 104, "67": [104, 428], "69": 104, "70": 104, "71": 104, "27": [104, 105, 116, 117, 145, 153], "28": [104, 105, 271], "31": [104, 130, 131], "80": [104, 116, 117], "82": 104, "83": 104, "84": [104, 211, 419, 420], "78": 104, "79": 104, "320": [104, 105, 119, 120], "700": [104, 105], "dataid": [104, 105], "available_dataset": [104, 105], "counter": [105, 227, 305, 386, 413, 420], "23": [105, 239], "request": [105, 176, 208], "51": 105, "__len__": 106, "rank_kei": 110, "rank": [110, 242], "samplerwithoutreplac": [110, 418, 430, 433], "get_insert_index": 110, "googl": [116, 117, 137, 138, 143, 144, 241, 418, 419, 429, 430], "convers": [116, 117, 130, 131, 167, 412], "2106": [116, 117, 326, 345], "13281": [116, 117], "categorical_action_encod": [116, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 140, 141, 145, 146, 150, 153, 154, 167, 420], "frame_skip": [116, 117, 119, 120, 124, 125, 126, 127, 130, 131, 134, 135, 140, 141, 150, 195, 386, 388, 396, 413, 416, 417, 418, 435], "allow_done_after_reset": [116, 117, 119, 120, 121, 124, 126, 127, 130, 131, 140, 141, 143, 144, 150, 155, 156], "toler": [116, 117, 119, 120, 124, 126, 127, 130, 131, 140, 141, 143, 144, 150, 155, 156, 253, 289], "is_avail": [116, 117, 416, 417, 418, 419, 429, 430, 432], "ant": [116, 117, 118, 121, 125, 128, 132, 133, 145, 146, 153, 154, 432], "87": [116, 117], "acrobot": [116, 117, 119, 120, 436], "advant": [116, 117, 130, 131], "timer": [116, 117, 130, 131], "timeit": [116, 117, 130, 131, 420], "310": [116, 117], "ms": [116, 117, 130, 131], "268": [116, 117], "433": [116, 117], "213": [116, 117], "8605": [116, 117], "pipelineenv": 117, "get_environ": 117, "san": 118, "fen": [118, 143, 144], "pgn": 118, "legal": 118, "board": [118, 154], "include_san": 118, "algebra": [118, 431], "notat": 118, "include_fen": 118, "forsyth": 118, "edward": 118, "include_pgn": 118, "portabl": [118, 425], "include_legal_mov": 118, "include_hash": 118, "mask_act": 118, "subset": [118, 431, 432], "29275": 118, "rnbqkbnr": [118, 143, 144], "pppppppp": [118, 143, 144], "kqkq": [118, 143, 144], "legal_mov": 118, "219": 118, "5p2": 118, "ppppp1pp": 118, "event": [118, 269, 270, 278, 364, 365, 366, 367, 369, 370, 371, 372, 433], "date": [118, 178, 378], "white": 118, "f4": 118, "96": 118, "kq": 118, "5n2": 118, "rnbqkb1r": 118, "nf3": 118, "na6": 118, "c4": 118, "f6": 118, "h4": 118, "rb8": 118, "na3": 118, "ra": 118, "sort": [118, 121, 125, 132, 133, 145, 146, 153, 154, 180, 282], "another_act": [118, 121, 125, 132, 133, 145, 146, 153, 154], "discretebox": [118, 121, 125, 132, 133, 145, 146, 153, 154], "mutabl": [118, 121, 125, 132, 133, 145, 146, 153, 154], "action_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154, 418, 430], "had": [118, 121, 125, 132, 133, 145, 146, 153, 154, 422, 424], "all_act": [118, 121, 125, 132, 133, 145, 146, 153, 154], "any_don": [118, 121, 125, 132, 133, 145, 146, 153, 154], "loc": [118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 203, 214, 236, 262, 290, 291, 298, 299, 300, 306, 310, 312, 320, 321, 323, 336, 340, 341, 342, 343, 397, 407, 411, 416, 417, 418, 419, 422, 430, 435], "_callabletransform": [118, 121, 125, 132, 133, 145, 146, 153, 154], "auto_specs_": [118, 121, 125, 132, 133, 145, 146, 153, 154], "action_spac": [118, 121, 125, 132, 133, 145, 146, 153, 154, 191, 255, 284, 302, 303, 307, 308, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 419, 420, 422, 426], "check_dtyp": [118, 121, 125, 132, 133, 145, 146, 153, 154, 159], "discrep": [118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 320, 322, 324, 325, 337, 340, 342, 353], "broken": [118, 121, 125, 132, 133, 145, 146, 153, 154, 159], "rng": [118, 121, 125, 132, 133, 145, 146, 153, 154, 159, 431], "done_keys_group": [118, 121, 125, 132, 133, 145, 146, 153, 154], "another_don": [118, 121, 125, 132, 133, 145, 146, 153, 154], "done_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "empty_cach": [118, 121, 125, 132, 133, 145, 146, 153, 154, 229], "fake_tensordict": [118, 121, 125, 132, 133, 145, 146, 153, 154, 417, 420], "envnam": [118, 121, 125, 132, 133, 145, 146, 153, 154], "full_action_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154, 429, 430], "full_done_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "full_observation_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "full_reward_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "pipeline_st": [118, 121, 125, 132, 133, 145, 146, 153, 154], "full_state_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "get_legal_mov": 118, "uci": 118, "input_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "is_spec_lock": [118, 121, 125, 132, 133, 145, 146, 153, 154], "maybe_reset": [118, 121, 125, 132, 133, 145, 146, 153, 154], "speak": [118, 121, 125, 132, 133, 145, 146, 153, 154, 184, 310, 416], "observation_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "output_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "register_gym": [118, 121, 125, 132, 133, 145, 146, 153, 154, 421], "entry_point": [118, 121, 125, 132, 133, 145, 146, 153, 154], "info_kei": [118, 121, 125, 132, 133, 145, 146, 153, 154], "reward_threshold": [118, 121, 125, 132, 133, 145, 146, 153, 154], "nondeterminist": [118, 121, 125, 132, 133, 145, 146, 153, 154], "max_episode_step": [118, 121, 124, 125, 126, 132, 133, 145, 146, 153, 154], "order_enforc": [118, 121, 125, 132, 133, 145, 146, 153, 154], "autoreset": [118, 121, 125, 132, 133, 145, 146, 153, 154], "disable_env_check": [118, 121, 124, 125, 132, 133, 140, 141, 145, 146, 153, 154], "apply_api_compat": [118, 121, 125, 132, 133, 145, 146, 153, 154], "nasium": [118, 121, 125, 132, 133, 145, 146, 153, 154, 167], "dmcontrolenv": [118, 121, 125, 132, 133, 145, 146, 153, 154, 375, 409, 416, 421, 428, 436], "dmc": [118, 121, 125, 132, 133, 145, 146, 153, 154], "cheetah": [118, 119, 120, 121, 125, 132, 133, 145, 146, 153, 154, 375, 416], "removeemptyspec": [118, 121, 125, 132, 133, 145, 146, 153, 154], "threshold": [118, 121, 125, 132, 133, 145, 146, 153, 154, 258, 321, 322, 418], "learnt": [118, 121, 125, 132, 133, 145, 146, 153, 154, 403], "checker": [118, 121, 124, 125, 132, 133, 140, 141, 145, 146, 153, 154], "stepapicompat": [118, 121, 125, 132, 133, 145, 146, 153, 154], "deem": [118, 121, 125, 132, 133, 137, 138, 145, 146, 153, 154, 157, 158], "task_nam": [118, 119, 121, 125, 132, 133, 145, 146, 153, 154], "envgym": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0855": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0215": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0881": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0412": [118, 121, 125, 132, 133, 145, 146, 153, 154], "1101": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0080": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0254": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0424": [118, 121, 125, 132, 133, 145, 146, 153, 154], "veloc": [118, 119, 120, 121, 125, 132, 133, 145, 146, 153, 154, 179, 429, 430, 431, 436], "9609e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "9776e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "04": [118, 121, 125, 129, 132, 133, 145, 146, 153, 154, 224], "6347e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "3842e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "5338e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "3064e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0381e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "6656e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "05": [118, 121, 125, 132, 133, 145, 146, 153, 154, 224, 241, 431], "0204e": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0833": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0275": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0612": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0770": [118, 121, 125, 132, 133, 145, 146, 153, 154], "1256": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0082": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0186": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0476": [118, 121, 125, 132, 133, 145, 146, 153, 154], "2221": [118, 121, 125, 132, 133, 145, 146, 153, 154], "2256": [118, 121, 125, 132, 133, 145, 146, 153, 154], "5930": [118, 121, 125, 132, 133, 145, 146, 153, 154], "6937": [118, 121, 125, 132, 133, 145, 146, 153, 154], "5865": [118, 121, 125, 132, 133, 145, 146, 153, 154], "5479": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0187": [118, 121, 125, 132, 133, 145, 146, 153, 154], "6825": [118, 121, 125, 132, 133, 145, 146, 153, 154], "5224": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0018": [118, 121, 125, 132, 133, 145, 146, 153, 154], "1005": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0335": [118, 121, 125, 132, 133, 145, 146, 153, 154, 184], "0268": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0133": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0627": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0074": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0488": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0353": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0075": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0069": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0098": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0058": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0033": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0157": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0004": [118, 121, 125, 132, 133, 145, 146, 153, 154, 224], "0381": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0452": [118, 121, 125, 132, 133, 145, 146, 153, 154], "11355747": [118, 121, 125, 132, 133, 145, 146, 153, 154], "04257728": [118, 121, 125, 132, 133, 145, 146, 153, 154], "00408397": [118, 121, 125, 132, 133, 145, 146, 153, 154], "04155852": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0389733": [118, 121, 125, 132, 133, 145, 146, 153, 154], "01409826": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0978704": [118, 121, 125, 132, 133, 145, 146, 153, 154], "08808327": [118, 121, 125, 132, 133, 145, 146, 153, 154], "03970837": [118, 121, 125, 132, 133, 145, 146, 153, 154], "00535434": [118, 121, 125, 132, 133, 145, 146, 153, 154], "02353762": [118, 121, 125, 132, 133, 145, 146, 153, 154], "05116226": [118, 121, 125, 132, 133, 145, 146, 153, 154], "02788907": [118, 121, 125, 132, 133, 145, 146, 153, 154], "06848346": [118, 121, 125, 132, 133, 145, 146, 153, 154], "05154399": [118, 121, 125, 132, 133, 145, 146, 153, 154], "0371798": [118, 121, 125, 132, 133, 145, 146, 153, 154], "05128025": [118, 121, 125, 132, 133, 145, 146, 153, 154], "dydact": [118, 121, 125, 132, 133, 145, 146, 153, 154], "gym_env": [118, 121, 125, 132, 133, 145, 146, 153, 154, 435], "reset_kei": [118, 121, 125, 132, 133, 145, 146, 153, 154, 179, 215, 221, 222, 223, 429], "multitask": [118, 121, 125, 132, 133, 145, 146, 153, 154], "multiag": [118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 171, 272, 283, 292, 322, 337, 340, 353], "another_reward": [118, 121, 125, 132, 133, 145, 146, 153, 154], "reward_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "auto_cast_to_devic": [118, 121, 125, 132, 133, 145, 146, 153, 154, 430], "soon": [118, 121, 125, 132, 133, 145, 146, 147, 148, 153, 154], "__sort": [118, 121, 125, 132, 133, 145, 146, 153, 154], "as__": [118, 121, 125, 132, 133, 145, 146, 153, 154], "argmaxmodul": [118, 121, 125, 132, 133, 145, 146, 153, 154], "argmax": [118, 121, 125, 132, 133, 145, 146, 153, 154, 255, 284, 303, 308, 420, 422], "n_act": [118, 121, 125, 132, 133, 145, 146, 153, 154, 199, 320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 423], "ourselv": [118, 121, 125, 132, 133, 145, 146, 153, 154, 418, 436], "emul": [118, 121, 125, 132, 133, 145, 146, 153, 154], "epoch": [118, 121, 125, 132, 133, 145, 146, 153, 154, 393, 418, 429, 430], "input_td": [118, 121, 125, 132, 133, 145, 146, 153, 154], "rollout_td": [118, 121, 125, 132, 133, 145, 146, 153, 154], "state_spec_unbatch": [118, 121, 125, 132, 133, 145, 146, 153, 154], "prevail": [118, 121, 125, 132, 133, 145, 146, 153, 154, 171, 180, 215], "next_tensordict": [118, 121, 125, 132, 133, 145, 146, 153, 154, 170, 176, 180, 192, 193, 194, 199, 206, 209, 210, 216, 219, 232, 236], "precomput": [118, 121, 125, 132, 133, 145, 146, 153, 154], "_stepmdp": [118, 121, 125, 132, 133, 145, 146, 153, 154, 170], "exclude_act": [118, 121, 125, 132, 133, 145, 146, 153, 154, 170], "leverag": [118, 121, 125, 132, 133, 136, 145, 146, 147, 148, 153, 154, 416, 430, 436], "minim": [118, 121, 125, 132, 133, 145, 146, 153, 154, 377, 433], "reset_data": [118, 121, 125, 132, 133, 145, 146, 153, 154, 436], "dm_control": [119, 120, 416, 428, 436], "2006": [119, 120, 321, 327], "12983": [119, 120], "240": [119, 120, 435], "swingup": [119, 120, 436], "swingup_spars": [119, 120], "ball_in_cup": [119, 120], "catch": [119, 120, 420], "balance_spars": [119, 120], "three_pol": [119, 120], "two_pol": [119, 120], "finger": [119, 120], "turn_easi": [119, 120], "turn_hard": [119, 120], "fish": [119, 120], "upright": [119, 120, 417], "swim": [119, 120], "hopper": [119, 120], "hop": [119, 120], "humanoid": [119, 120, 145, 153, 428], "walk": [119, 120, 145, 153, 417, 428], "run_pure_st": [119, 120], "bring_bal": [119, 120], "bring_peg": [119, 120], "insert_bal": [119, 120], "insert_peg": [119, 120], "point_mass": [119, 120], "reacher": [119, 120], "swimmer": [119, 120], "swimmer6": [119, 120], "swimmer15": [119, 120], "walker": [119, 120], "dog": [119, 120], "trot": [119, 120], "humanoid_cmu": [119, 120], "lqr": [119, 120], "lqr_2_1": [119, 120], "lqr_6_2": [119, 120], "quadrup": [119, 120], "escap": [119, 120], "stacker": [119, 120], "stack_2": [119, 120], "stack_4": [119, 120], "deviceless": 121, "run_type_check": [121, 139], "hint": 121, "counterenv": 121, "creator": [122, 398, 399, 405, 406, 407], "substitut": [122, 221, 236, 422], "vecnorm": [122, 407], "env_creat": [122, 416], "test_env1": 122, "_td": [122, 331], "observation_count": [122, 436], "test_env2": 122, "sleep": [122, 436], "ps": 122, "p1": 122, "p2": 122, "9934": 122, "make_vari": [122, 227], "variant": [122, 227, 243, 411], "trajcount": 122, "env_creator_pendulum": 122, "env_creator_cartpol": 122, "env_str": 123, "device_map": 123, "registri": [124, 155], "asyncvectorenv": 124, "involv": [124, 126, 127, 137, 138, 150, 176, 179, 227, 261, 265, 421, 423], "pixel_observ": [124, 126, 127, 150], "pixelobservationwrapp": [124, 126, 127, 150], "adventur": [124, 126], "airraid": [124, 126, 436], "alien": [124, 126], "time_limit": 124, "timelimit": [124, 137, 138, 157, 158], "default_info_dict_read": [124, 125, 126, 145], "reader": [124, 125, 126, 145, 417], "set_info_dict_read": [124, 125, 126, 145, 421], "info_dict": [124, 125, 126, 145], "gymlikeenv": [124, 126, 409], "auto_register_info_dict": [124, 125, 126, 145], "multibinari": [124, 126], "multidiscret": [124, 126], "rag": [124, 126], "gym_conversion_exampl": [124, 126], "info_dict_read": [125, 145], "ignore_priv": 125, "baseinfodictread": 125, "tensordictprim": [125, 145, 244, 261, 265, 317, 411, 419], "succe": [125, 145], "underscor": 125, "primer": [125, 132, 187, 222, 244, 261, 265, 317, 419], "halfcheetah": [125, 145, 172, 211, 416, 435], "reward_ctrl": [125, 145], "reward_run": [125, 145], "x_posit": [125, 145], "x_veloc": [125, 145], "raise_if_clos": 125, "read_act": 125, "read_don": 125, "nonsens": 125, "fallback": 125, "read_ob": 125, "dictat": [125, 200, 306, 310, 340, 416, 431], "read_reward": 125, "hoc": [125, 145, 422], "dict_read": 125, "my_info_kei": 125, "some_env": 125, "vecenv": 126, "vectorenv": 126, "convert_actions_to_numpi": 126, "secur": 127, "habitat3": 127, "ai": [127, 432], "habitatrenderpick": 127, "isaacgym": [128, 129], "isaacgymwrapp": [128, 409], "isaacgymenv": [129, 409], "webpag": 129, "isaac": 129, "essenc": [129, 421], "instadeepai": [130, 131], "2306": [130, 131], "09884": [130, 131], "snake": [130, 131], "grid": [130, 131, 375], "bodi": [130, 131], "body_st": [130, 131], "fruit_posit": [130, 131], "col": [130, 131], "head_posit": [130, 131], "tail": [130, 131], "game2048": [130, 131], "maze": [130, 131], "cleaner": [130, 131], "cvrp": [130, 131], "multicvrp": [130, 131], "minesweep": [130, 131], "rubikscub": [130, 131], "knapsack": [130, 131], "sudoku": [130, 131], "tsp": [130, 131], "connector": [130, 131], "v2": [130, 131, 151, 152, 349, 364, 365, 366, 367, 369, 370, 371, 372, 419], "mmst": [130, 131], "graphcolor": [130, 131], "partli": [130, 131], "scrambl": [130, 131], "robotwarehous": [130, 131], "tetri": [130, 131], "binpack": [130, 131], "jobshop": [130, 131], "0x1fca91910": 130, "122": [130, 131, 436], "0x1ff9baee0": 130, "134": [130, 131], "0x1ff9ba7c0": 130, "172": [130, 131], "jit": 131, "eager": 131, "tdreset": [131, 238, 428], "whichev": 131, "drastic": [131, 145, 433], "histori": 132, "tailor": [132, 435], "cot": 132, "from_dataload": [132, 187], "str2str": [132, 187], "vocab_s": [132, 133], "dataloadingprim": [132, 222], "data_kei": [132, 187], "data_spec": [132, 187], "stack_method": [132, 187], "as_nested_tensor": [132, 187], "as_padded_tensor": [132, 187], "overview": [133, 418, 420, 423, 429, 430, 435], "hashing_modul": 133, "text_output": 133, "decod": [133, 165, 276], "batch_decod": 133, "text_kei": 133, "gpt2token": 133, "make_tensordict": 133, "mo": [134, 135], "minecart": [134, 135], "mo_gym": [135, 200], "qualnam": 136, "neural": [136, 147, 148, 245, 246, 279, 281, 287, 309, 411, 417, 418, 419, 422, 429, 430, 431, 436], "group_map": [136, 137, 138, 143, 144, 147, 148, 155, 156, 157, 158, 160, 429], "constructiuon": [136, 147, 148], "premad": [136, 137, 138, 147, 148, 157, 158, 353], "all_in_one_group": [136, 143, 144, 160], "agent_0": [136, 147, 148, 155, 160, 219], "agent_1": [136, 147, 148, 155, 160, 219], "agent_2": [136, 147, 148, 155, 160], "agent_3": [136, 155], "one_group_per_ag": [136, 147, 148], "meltingpot": [137, 138], "2211": [137, 138], "13746": [137, 138], "melt": [137, 138], "pot": [137, 138], "novel": [137, 138, 423], "social": [137, 138], "familiar": [137, 138, 417, 430, 436], "unfamiliar": [137, 138], "broad": [137, 138], "cooper": [137, 138, 429, 430], "decept": [137, 138], "reciproc": [137, 138], "stubborn": [137, 138], "substrat": [137, 138], "ml_collect": 137, "config_dict": 137, "configdict": 137, "categorical_act": [137, 138, 143, 144, 147, 148, 151, 152, 155, 156, 157, 158], "marlgroupmaptyp": [137, 138, 143, 144, 147, 148, 155, 156, 157, 158, 160, 409, 429], "agent_nam": [137, 138, 157, 158, 160], "agent_names_to_indices_map": [137, 138, 157, 158], "env_torchrl": [137, 138], "commons_harvest__open": [137, 138], "rgb": [137, 138], "144": [137, 138], "192": [137, 138], "collective_reward": [137, 138], "ready_to_shoot": [137, 138], "88": [137, 138, 151, 152], "substrate_config": 138, "get_config": 138, "mp_env": 138, "build_from_config": 138, "default_player_rol": 138, "mymbenv": [139, 242, 268], "world_model": [139, 242, 268, 332], "hidden_observ": [139, 242, 268], "mlp": [139, 242, 245, 246, 248, 249, 250, 251, 257, 261, 265, 268, 272, 273, 298, 302, 317, 325, 327, 411, 417, 420, 422, 423, 426, 428, 432, 435], "worldmodelwrapp": [139, 242, 268], "activation_class": [139, 242, 245, 246, 248, 249, 250, 251, 256, 257, 266, 268, 271, 272, 417, 422, 429, 430, 435], "activate_last_lay": [139, 242, 251, 266, 268], "sail": [140, 141], "sg": [140, 141], "2206": [140, 141], "10558": [140, 141], "readthedoc": [140, 143, 144], "en": [140, 143, 144], "python_interfac": 140, "envpoolmixin": 141, "env_bas": 141, "task_id": 141, "env_typ": 141, "gym_reset_return_info": 141, "envpool_env": 141, "www": [142, 269, 270], "fetch_openml": 142, "adult_num": 142, "adult_onehot": 142, "mushroom_num": 142, "mushroom_onehot": 142, "covertyp": 142, "shuttl": 142, "magic": [142, 420, 421], "106": 142, "openspiel": [143, 144], "open_spiel": [143, 144], "game_str": 143, "return_st": [143, 144, 147, 148], "4672": [143, 144], "current_play": [143, 144], "674": 143, "2048": [143, 144], "add_nois": [143, 144], "amazon": [143, 144], "backgammon": [143, 144], "restor": [143, 144], "td_restor": [143, 144], "pyspiel": 144, "load_gam": 144, "new_initial_st": 144, "3009": 144, "my_env_fun": [145, 153], "custom_attribute_list": [145, 153], "custom_attribut": [145, 153], "custom_method_list": [145, 153], "custom_method": [145, 153], "deploi": [145, 153, 176, 420], "slight": [145, 153, 417], "share_individual_td": [145, 153], "shared_memori": [145, 153], "policy_proof": [145, 153], "ll": [145, 153, 259, 260, 263, 264, 416, 417, 418, 419, 421, 422, 423, 424, 426, 430, 436], "hidden": [145, 153, 178, 248, 256, 259, 260, 261, 263, 264, 265, 276, 277, 285, 286, 298, 299, 300, 301, 309, 312, 322, 337, 340, 411, 419, 428, 435], "serial_for_singl": [145, 153, 417], "circular": [145, 153, 416], "list_of_kwarg": [145, 153], "com_veloc": [145, 153], "head_height": [145, 153], "joint_angl": [145, 153], "torso_vert": [145, 153], "timeout": 145, "idl": 145, "batched_pipe_timeout": 145, "stringent": [145, 418, 429, 430], "inter": 145, "penv": [145, 227], "env_fix": 145, "influenc": 145, "myenv": [145, 176, 186, 190], "pipe": 145, "update_kwarg": [145, 153], "th": [146, 194, 231, 259, 263, 431], "thdot": [146, 431], "max_spe": [146, 431], "max_torqu": [146, 431], "gen_param": [146, 431], "gravit": [146, 431], "torqu": [146, 431], "pettingzoo": [147, 148, 429, 430], "pet": [147, 148], "zoo": [147, 148], "__": [147, 148], "aecenv": [147, 148], "dead": [147, 148], "done_on_ani": [147, 148, 429], "compulsori": [147, 148], "adversary_0": [147, 148], "adversari": [147, 148, 334, 429], "sisl": 147, "multiwalker_v9": 147, "aec": [147, 148], "n_piston": [147, 148], "pistonball_v6": [147, 148], "piston": [147, 148], "piston_0": [147, 148], "piston_1": [147, 148], "piston_20": [147, 148], "tictactoe_v3": [147, 148], "player": [147, 148, 154], "player_1": [147, 148], "player_2": [147, 148], "butterfli": 148, "parallel_env": [148, 416, 435, 436], "cube": 149, "roboh": 150, "expos": [150, 186, 190, 311, 417], "vikashplu": 150, "wiki": 150, "2310": 150, "06828": 150, "from_depth": 150, "smacv2": [151, 152], "starcraft": [151, 152], "challeng": [151, 152, 421, 431, 432], "10gen_terran": [151, 152], "10gen_zerg": [151, 152], "10gen_protoss": [151, 152], "3m": [151, 152], "8m": [151, 152], "25m": [151, 152], "5m_vs_6m": [151, 152], "8m_vs_9m": [151, 152], "10m_vs_11m": [151, 152], "27m_vs_30m": [151, 152], "mmm": [151, 152], "mmm2": [151, 152], "2s3z": [151, 152], "3s5z": [151, 152], "3s5z_vs_3s6z": [151, 152], "3s_vs_3z": [151, 152], "3s_vs_4z": [151, 152], "3s_vs_5z": [151, 152], "1c3s5z": [151, 152], "2m_vs_1z": [151, 152], "corridor": [151, 152], "6h_vs_8z": [151, 152], "2s_vs_1sc": [151, 152], "so_many_banel": [151, 152], "bane_vs_ban": [151, 152], "2c_vs_64zg": [151, 152], "old": [151, 152, 337, 436], "smac": [151, 152], "map_nam": [151, 152], "176": [151, 152], "battle_won": [151, 152], "dead_al": [151, 152], "dead_enemi": [151, 152], "episode_limit": [151, 152], "322": [151, 152], "procedur": [151, 152], "distribution_config": [151, 152], "n_unit": [151, 152], "n_enemi": [151, 152], "team_gen": [151, 152], "dist_typ": [151, 152], "weighted_team": [151, 152], "unit_typ": [151, 152], "marin": [151, 152], "maraud": [151, 152], "medivac": [151, 152], "exception_unit_typ": [151, 152], "start_posit": [151, 152], "surrounded_and_reflect": [151, 152], "map_x": [151, 152], "map_i": [151, 152], "capability_config": [151, 152], "131": [151, 152], "starcraft2env": 152, "tic": 154, "tac": 154, "toe": 154, "single_play": 154, "player1": 154, "desired_batch_s": 154, "player0": 154, "uniti": [155, 156], "ml": [155, 156], "technolog": [155, 156], "llapi": [155, 156], "mlagents_env": [155, 156], "unityenviron": [155, 156], "file_nam": 155, "registered_nam": 155, "nor": 155, "localhost": 155, "connect": 155, "3dball": 155, "group_0": 155, "vectorsensor_size8": 155, "continuous_act": [155, 157, 158, 373, 429, 430], "agent_10": 155, "agent_11": 155, "agent_4": 155, "agent_5": 155, "agent_6": 155, "agent_7": 155, "agent_8": 155, "agent_9": 155, "group_reward": 155, "proroklab": [157, 158], "vectorizedmultiagentsimul": [157, 158], "2207": [157, 158], "03530": [157, 158], "basescenario": 157, "defaultt": 157, "chosen": [157, 158, 221, 222, 283, 284, 292, 308, 375, 411, 425], "sparsiti": 157, "unbatched_action_spec": [157, 158], "unbatched_observation_spec": [157, 158], "unbatched_reward_spec": [157, 158], "het_spec": [157, 158], "het_specs_map": [157, 158], "flock": [157, 158, 373], "agent_collision_rew": [157, 158], "agent_distance_rew": [157, 158], "ca": 160, "environment4": 160, "get_group_map": 160, "sumbodul": 163, "unsqueeze_null_shap": 164, "dynamic_shap": 164, "model_bas": [165, 166, 242, 268], "model_based_env": [165, 331], "dreamerenv": [165, 331, 409], "model_based_env_ev": 165, "spec_typ": 167, "convert_specnam": 167, "remap_state_to_observ": 167, "spectyp": 167, "unus": 167, "probabilistictdmodul": [168, 266, 306, 310, 354, 388], "keep_oth": [170, 431], "exclude_reward": 170, "exclude_don": 170, "next_": 170, "write_full_fals": 171, "_terminated_or_trunc": 171, "num_interv": 172, "out_action_kei": 172, "samplingstrategi": 172, "optino": 172, "intenum": 172, "interv": [172, 224, 374, 375, 385, 395, 417, 431], "action_disc": 172, "masker": 173, "maskedenv": 173, "ones_lik": 173, "scatter": 173, "transformthatmeasuresbyt": [173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238], "bytes_in_td": [173, 175, 176, 178, 179, 180, 183, 184, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 238], "fill_float": 175, "fill_int": 175, "fill_bool": 175, "someenvclass": 175, "autoresetenv": 175, "fooenv": 175, "sign": [175, 217, 355, 429], "envtyp": 175, "reshape_fn": [176, 420], "reset_func": 176, "env_kwarg": [176, 405, 406, 416], "accompani": [176, 220], "tensordict_batch_s": 176, "tensordict_reset": [176, 431], "transform_env_batch_s": [176, 183, 228, 238], "untouch": [176, 183, 186, 188, 192, 199, 201, 209, 210, 216, 220, 226, 228, 230, 238], "transform_full_done_spec": [176, 183, 186, 188, 192, 199, 201, 209, 210, 216, 220, 226, 228, 230, 238], "biner": 177, "burn_in": 178, "burn": 178, "burnt": 178, "gru_modul": [178, 261, 317], "input_s": [178, 222, 259, 260, 261, 263, 264, 265, 317, 419, 420], "hidden_s": [178, 222, 259, 260, 261, 263, 264, 265, 317, 419, 420], "default_recurrent_mod": [178, 261, 265], "burn_in_transform": 178, "gru": [178, 222, 260, 261, 317, 420], "num_lay": [178, 259, 261, 263, 265, 276, 277, 317, 420], "is_init": [178, 198, 261, 265, 282, 305, 317, 419, 420], "86": 178, "3008": 178, "0344": 178, "padding_valu": [179, 269, 270], "as_invers": 179, "movement": 179, "1312": 179, "5602": 179, "consumpt": [179, 409], "pictur": 179, "pixels_trsf": [179, 433], "grayscal": [179, 417, 419, 420, 433, 436], "data_exclud": [179, 433], "make_rb_transform_and_sampl": 179, "sampler_kwarg": 179, "redund": [179, 419], "del_kei": [180, 219, 232, 428, 431], "unsqueeze_if_oor": 180, "observation_posit": 180, "observation_veloc": 180, "delet": [180, 219, 382], "crop": [181, 208, 375], "center": [181, 281, 375], "width": [181, 185, 211], "height": [181, 185, 211], "squar": [181, 185, 262, 290, 291, 375], "scalar": [182, 213, 240, 249, 251, 258, 274, 275, 282, 316, 320, 321, 322, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 411, 417, 423, 431], "permit": [182, 194, 219, 231, 320, 322, 337, 340, 342], "rewardsc": [183, 229, 416, 417, 419], "rewardclip": 183, "transformed_env": [183, 229, 421], "transform_env_devic": [183, 188, 228, 238], "cond": 184, "met": [184, 319, 429, 431], "altogeth": 184, "exectu": 184, "palliat": [184, 422], "step_count_kei": [184, 220], "inner_count": 184, "middle_env": 184, "middle_count": 184, "auto_unwrap": [184, 229, 383], "9670": 184, "2546": 184, "9669": 184, "9802": 184, "1981": 184, "1601": 184, "9926": 184, "1214": 184, "5556": 184, "9994": 184, "7622": 184, "9984": 184, "0561": 184, "7933": 184, "9895": 184, "1445": 184, "7779": 184, "dtype_in": 186, "dtype_out": 186, "scan": [186, 190, 311, 312], "resp": [186, 190], "not_transform": [186, 190], "auto_batch_s": 187, "maybe_dense_stack": 187, "endless_dataload": 187, "llmenv": [187, 409], "set_capture_non_tensor_stack": 187, "dummydataload": 187, "generate_random_str": 187, "ascii_lowercas": 187, "__iter__": 187, "__next__": 187, "zxwvupirska": 187, "stringa": 187, "zxwvupirsk": 187, "roll": 187, "init_st": 187, "nngcmflsana": 187, "vrrbnhzpmga": 187, "nngcmflsan": 187, "vrrb": 187, "dummytensordataload": 187, "generate_random_tensor": 187, "pad_tensor": 187, "padding_length": 187, "orig_devic": 188, "unspecifi": 188, "transform_done_spec": [188, 219, 228, 230, 238], "num_actions_effect": 189, "max_act": 189, "include_forward": 189, "num_act": [189, 246, 329, 420, 422], "action_out": 189, "eol_kei": 191, "lives_kei": 191, "eol_attribut": 191, "breakout": 191, "210": [191, 205], "160": [191, 205], "eol_transform": 191, "eol": 191, "dqnloss": [191, 320, 321, 323, 324, 327, 329, 330, 331, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 353, 400, 409, 412, 417, 419, 420, 426], "register_kei": 191, "loss_or_advantag": 191, "lossmodul": [191, 393, 402, 403, 409, 412], "valueestimatorbas": [191, 338, 409], "finit": [193, 281, 422, 433], "first_dim": 194, "last_dim": 194, "allow_positive_dim": [194, 219, 231], "frameskip": 194, "repeatedli": [195, 418, 430], "hash_fn": 197, "use_raw_nontensor": [197, 226, 230], "repertoir": 197, "reproducible_hash": 197, "unarytransform": 197, "observation_str": 197, "tobyt": [197, 230], "observation_hash": 197, "x08": 197, "x8b": 197, "xbexav": 197, "xbf": 197, "x00": 197, "xee": 197, "xb5": 197, "x17": 197, "x8f": 197, "xbe": [197, 230], "x88": 197, "xccu": 197, "xc0vr": 197, "get_input_from_hash": 197, "hash_tensor": 197, "init_kei": [198, 305], "tracker": 198, "pi_curr": 199, "pi_0": 199, "overfit": 199, "probabilist": [199, 306, 320, 340, 409, 418, 435], "get_dist": [199, 310, 311], "normalparamextractor": [199, 298, 299, 300, 306, 312, 320, 321, 323, 329, 336, 340, 341, 342, 343, 345, 346, 411, 418, 422, 430, 435], "probabilisticactor": [199, 298, 299, 300, 301, 320, 321, 323, 326, 328, 329, 336, 339, 340, 341, 342, 343, 345, 346, 411, 416, 418, 422, 429, 430], "tanhnorm": [199, 298, 299, 300, 306, 312, 320, 321, 323, 336, 340, 341, 342, 343, 345, 346, 409, 418, 430, 435], "return_log_prob": [199, 298, 299, 300, 306, 310, 312, 342, 411, 418, 422, 429, 430, 435], "apply_": 199, "copy_": [199, 416], "formula": [199, 262, 290, 291, 320, 322, 337, 340, 412, 418], "mogymwrapp": [200, 409], "mo_env": 200, "sea": 200, "treasur": 200, "so_env": 200, "stack_reward": 201, "stack_observ": 201, "auto_batch_size_": 201, "macro": [201, 305], "noop": 202, "trial": 202, "standard_norm": [203, 214, 236, 416, 417, 419], "affin": [203, 214, 236], "layer": [203, 236, 241, 245, 246, 248, 249, 254, 256, 259, 260, 261, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 287, 288, 295, 304, 313, 411, 417, 418, 419, 420, 422, 429, 432], "epsilon": [203, 240, 258, 282, 344, 391, 417, 418, 419, 422], "recover": 203, "set_default_tensor_typ": 203, "doubletensor": 203, "isclos": 203, "next_ob": [203, 355, 356, 357, 358, 435], "init_stat": [203, 416, 417, 418, 419], "3752e": 203, "5087e": 203, "9294e": 203, "9636": 203, "5608": 203, "6408": 203, "num_it": [203, 417, 418], "reduce_dim": [203, 416, 417, 418, 419], "cat_dim": [203, 416, 417, 418, 419], "keep_dim": [203, 417, 419], "statist": [203, 236, 241, 342, 407, 416, 417, 418, 436], "gaussian": [203, 222, 240, 242, 268, 274, 275, 280, 418, 420, 429], "empir": [203, 242, 268, 306, 310, 416, 418, 430], "3d": [203, 245], "reorder": 205, "in_keys_in": [205, 231], "channel": [205, 225, 271, 276, 277, 417], "r3m": [207, 432], "resnet": [207, 232, 234], "ego4d": [207, 232, 234], "univers": [207, 232, 234, 421], "suraj": [207, 232], "nair": [207, 232], "aravind": [207, 232], "rajeswaran": [207, 232], "vikash": [207, 232, 234], "kumar": [207, 232, 234], "chelsea": [207, 232], "finn": [207, 232], "abhinav": [207, 232], "gupta": [207, 232], "2203": [207, 232, 268, 432], "12601": [207, 232, 432], "_init": [207, 232, 416], "resnet50": [207, 234, 432], "model_nam": [207, 232, 234, 378], "resnet34": 207, "resnet18": 207, "r3m_vec": [207, 432], "stack_imag": [207, 234], "tread": [207, 234], "hub": [207, 234, 421], "resnet50_weight": [207, 234], "imagenet1k_v1": [207, 234], "download_path": [207, 234], "tensor_pixels_kei": [207, 234], "sub_seq_len": 208, "sample_dim": [208, 416], "hesit": 208, "robust": [208, 241], "mix": [208, 283, 292, 353, 416, 429, 430], "improp": 208, "dummyenv": 209, "another_oth": 209, "other_reward": 209, "create_copi": 210, "stuff": [210, 424], "newnam": 210, "r2g": 212, "reward_to_go": 212, "bernoulli_": 212, "9010": 212, "9404": [212, 361], "9701": [212, 361], "9900": [212, 361], "0000": [212, 223, 224, 258, 281, 313, 361], "clamp_min": 213, "clamp_max": 213, "clip_min": 213, "clip_max": 213, "episode_": 215, "reward1": 215, "reward2": 215, "episode_reward": [215, 429, 430], "keep_reward": 216, "keep_don": 216, "logical_or": 217, "in_key_inv": 219, "unstack": 219, "update_don": 220, "disjunct": 220, "recognis": 220, "target_return": 221, "default_valu": [222, 317], "expand_spec": 222, "single_default_valu": 222, "call_before_env_reset": 222, "unit": [222, 242, 256, 259, 260, 276, 277, 285, 286, 418], "scala": 222, "mykei": 222, "__unless": 222, "exists__": 222, "get_primers_from_modul": [222, 244, 261, 265, 409], "recurrent_st": [222, 261, 265, 317, 419], "pool": 223, "10th": 223, "0216": 223, "1149": 223, "1990": 223, "2749": 223, "3281": 223, "9290": 223, "3702": 223, "8978": 223, "time_kei": 224, "elaps": [224, 425], "monitor": [224, 421], "expend": 224, "_polici": 224, "time_reset": 224, "time_polici": 224, "time_step": [224, 264, 305], "0882": 224, "0002": 224, "5797e": 224, "6289e": 224, "7990e": 224, "0824e": 224, "0837e": 224, "6056e": 224, "2016e": 224, "1062e": 224, "7009e": 224, "from_int": 225, "shape_toler": 225, "ri": 225, "pretrainedtokenizerbas": 226, "additional_token": 226, "skip_special_token": 226, "add_special_token": 226, "bert": 226, "uncas": 226, "traj_count": 227, "traj": 227, "countingenv": 227, "mocking_class": 227, "make_env_c0": 227, "make_env_c1": 227, "set_contain": 228, "reset_par": 228, "smoothli": [229, 241], "add_1": 229, "cache_spec": 229, "set_missing_toler": 229, "inv_fn": 230, "unari": 230, "durin": 230, "ommit": 230, "observation_trsf": 230, "xbc": 230, "x7f": 230, "x859": 230, "x81": 230, "x9a": 230, "xbd": 230, "xb8t8": 230, "test_input_spec": 230, "test_output_spec": 230, "danger": 231, "vc1": 232, "vc1_vec": 232, "untrain": 232, "make_noload_model": 232, "vip": [233, 234, 432], "implicit": [234, 328, 336, 433], "jason": 234, "ma": 234, "shagun": 234, "sodhani": 234, "dinesh": 234, "jayaraman": 234, "osbert": 234, "bastani": 234, "ami": 234, "zhang": 234, "vip_vec": 234, "final_nam": 235, "sb3": 235, "terminal_obs_read": 235, "truli": [235, 435], "shared_td": 236, "decai": [236, 240, 258, 344, 391, 416, 417, 419, 436], "9999": 236, "0001": [236, 256], "to_observation_norm": 236, "frozen_copi": 236, "race": 236, "underflow": [236, 391], "build_td_for_shared_vecnorm": 236, "memmori": 236, "queue": [236, 433, 435], "td_share": 236, "v": [236, 259, 260, 263, 264, 298, 328, 336, 343, 416, 417], "unfreez": 236, "observationnorm": [236, 407, 416, 417, 418, 419, 435], "train_env": 236, "eval_env": 236, "state_dim": [237, 247, 252, 280, 285, 286, 301], "action_dim": [237, 247, 248, 250, 252, 280, 301, 416, 428], "gsde": [237, 341, 407], "gsdemodul": 237, "rb_transform": 238, "resist": 238, "insensit": 238, "sensit": [238, 417, 419], "_orig": 238, "95": [238, 268, 348, 418, 419], "window": [238, 305, 429, 433, 435], "module_nam": [239, 338], "from_vers": 239, "to_vers": 239, "class_method": 239, "vs": [239, 261, 265], "import_modul": 239, "get_class_that_defined_method": 239, "module_set": 239, "setters_dict": 239, "setter": 239, "setter_dict": 239, "po": 240, "sigma_init": [240, 429], "sigma_end": [240, 429], "annealing_num_step": [240, 258, 282, 416, 417, 419, 420, 422, 426, 429], "sigma": [240, 259, 260, 262, 263, 264, 282, 290, 291, 418, 429], "omiss": [240, 258, 282], "momentum": 241, "max_r": 241, "max_d": 241, "warmup_step": 241, "batchrenorm": 241, "1702": 241, "03275": 241, "corenet": 241, "enhanc": 241, "warmup": 241, "phase": [241, 243, 430, 433], "outlier": 241, "period": 241, "varianc": [241, 242, 243, 262, 290, 291, 412, 416, 418, 430], "warm": 241, "renorm": 241, "entropi": [242, 278, 320, 321, 322, 323, 328, 329, 336, 337, 339, 340, 341, 343, 345, 346, 430], "botev": 242, "2013": 242, "cem": 242, "plan": [242, 267, 268], "k": [242, 244, 259, 260, 263, 264], "maximis": [242, 248, 250, 268, 417, 418, 430], "modelbasedenv": [242, 268], "planning_horizon": [242, 268], "optim_step": [242, 268, 420, 426], "mpc": [242, 267, 268], "num_candid": [242, 268], "candid": [242, 268], "top_k": [242, 268], "modelbasedenvbas": [242, 267, 268, 409], "safemodul": [242, 267, 298, 300, 310, 320, 321, 323, 328, 329, 336, 340, 341, 342, 343, 345, 346, 398, 399, 403, 409, 435], "hausknecht": 243, "wagen": 243, "reus": [243, 248, 382], "consistentdropoutmodul": [243, 411], "capit": 243, "themselv": [243, 417], "conceptu": 243, "devianc": 243, "set_exploration_typ": [243, 338, 388, 409, 411, 418, 419, 420, 422, 429, 435], "_main_async_collector": 243, "asyncdatacollector": [243, 409], "ditto": 243, "consistentdropout": 244, "input_shap": 244, "batcht": 244, "make_tensordict_prim": [244, 261, 265, 419], "input_dtyp": 244, "get_default_dtyp": [244, 391], "mask_6127171760": 244, "env0": [244, 436], "num_cel": [245, 246, 248, 249, 250, 251, 256, 257, 261, 265, 266, 271, 272, 298, 317, 417, 418, 419, 420, 422, 423, 426, 429, 430, 435], "elu": [245, 246, 248, 249, 250, 251, 256, 257, 271, 417, 435], "activation_kwarg": [245, 246, 266], "norm_class": [245, 246, 248, 249, 266], "norm_kwarg": [245, 246, 266], "bias_last_lay": [245, 246, 248, 249, 250, 251, 257, 266], "aggregator_class": [245, 246, 248, 249, 417, 419, 435], "squashdim": [245, 246, 248, 257, 271, 435], "aggregator_kwarg": [245, 246, 248, 249, 417, 419], "squeeze_output": [245, 246, 248, 249, 417, 419], "convolut": [245, 246, 248, 249, 271, 287, 420, 422], "cell": [245, 246, 259, 260, 261, 263, 264, 265, 266, 271, 272, 418, 420, 421, 422, 423, 424, 425, 426], "kernel": [245, 246, 271], "cnet": [245, 246], "conv3d": 245, "rectangular": [245, 246], "lazyconv2d": [246, 248, 249, 257, 271], "default_atari_dqn": [246, 420], "semin": 246, "transformer_config": [247, 280, 301], "decisiontransform": [247, 280], "dtconfig": [247, 252, 280], "2202": [247, 252, 339], "05607": [247, 252, 339], "return_to_go": [247, 252, 280, 301], "conv_net_kwarg": [248, 249], "mlp_net_kwarg": [248, 249, 250], "use_avg_pool": [248, 249], "WITH": [248, 249, 250, 251, 282, 344], "1509": [248, 249, 250, 251, 268, 282, 325, 335, 344], "02971": [248, 249, 250, 251, 282, 344], "convnet": [248, 249, 257, 271, 419, 420, 422, 435], "ndims_in": 248, "avgpool": [248, 249], "lazylinear": [248, 249, 250, 251, 257, 266, 411, 418, 422, 431, 432], "2304": 248, "adaptiveavgpool2d": [249, 417, 419], "output_s": [249, 417, 419], "squeeze2dlay": 249, "400": [250, 251, 430], "mlp_net_kwargs_net1": 251, "mlp_net_kwargs_net2": 251, "mlp1": 251, "mlp2": 251, "desdescrib": 252, "n_embd": 252, "n_layer": [252, 259, 263], "n_head": 252, "n_inner": 252, "n_posit": 252, "resid_pdrop": 252, "attn_pdrop": 252, "gpt2config": 252, "atol": [253, 289], "rtol": [253, 289], "batch_shap": [253, 278, 289], "event_shap": [253, 289], "absolut": [253, 289, 416], "_instanc": 253, "densiti": [253, 269, 270, 278, 291], "mass": [253, 269, 270, 278, 291, 431], "rsampl": [253, 270, 278, 310], "sample_shap": [253, 269, 270, 278], "softmax": [254, 270, 278, 302, 303], "var_num": [255, 284, 302, 303, 308], "action_value_kei": [255, 284, 302, 303, 307, 308, 323, 338, 353], "action_mask_kei": [255, 258, 284, 302, 303, 307, 308], "1707": [255, 303, 330, 340], "06887": [255, 303, 330], "mult": [255, 272, 284, 302, 303, 307, 308], "tensordict_modul": [255, 259, 260, 263, 264, 284, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 323, 324, 328, 329, 336, 340, 341, 342, 343, 345, 346, 411], "nbin": [255, 302, 411], "customdistributionalqv": 255, "log_softmax": [255, 302], "qvalue_actor": [255, 284, 302, 307, 411], "to_modul": [255, 309, 312, 416, 435], "std_bia": 256, "std_min_val": 256, "belief": [256, 276, 285, 286], "1912": [256, 331, 332, 333], "01603": [256, 331, 332, 333], "softplu": [256, 316, 318, 319], "out_features_valu": 257, "cnn_kwarg": [257, 417], "mlp_kwarg": [257, 417], "duel": 257, "cnn": [257, 271, 417, 420, 422, 435], "06581": 257, "512": 257, "greedi": [258, 284, 303, 308, 417, 419, 420, 422], "eps_init": [258, 282, 417, 419, 420, 422, 426], "eps_end": [258, 282, 417], "explorative_polici": [258, 282], "9055": 258, "9277": 258, "6295": 258, "2532": 258, "grad_fn": [258, 297, 310], "addbackward0": 258, "batch_first": [259, 261, 263, 265, 419], "bidirect": [259, 263, 419], "cudnn": [259, 260, 261, 263, 264, 265, 419, 420], "rnn": [259, 260, 261, 263, 264, 265, 296, 329, 343, 419, 420, 422], "device_count": [259, 260, 263, 264, 436], "n_in": [259, 260, 263, 264], "n_out": [259, 260, 263, 264], "h0": [259, 260, 263, 264], "h1": [259, 260, 263, 264], "vectoris": [259, 260, 263, 264], "call_gru": [259, 260], "h_out": [259, 260, 263, 264], "batched_cal": [259, 260, 263, 264], "gate": [259, 260, 263], "r_t": 259, "w_": [259, 260, 263, 264], "ir": [259, 260], "x_t": [259, 263], "b_": [259, 260, 263, 264], "hr": [259, 260, 263], "h_": [259, 260, 263], "z_t": 259, "iz": [259, 260], "hz": [259, 260], "n_t": 259, "odot": [259, 260, 263, 264], "hn": [259, 260, 263], "h_t": [259, 263], "sigmoid": [259, 260, 263, 264], "hadamard": [259, 260, 263, 264], "multilay": [259, 263], "_t": [259, 263, 430, 431], "ge": [259, 263], "bernoulli": [259, 263], "b_ih": [259, 260, 263, 264, 265], "b_hh": [259, 260, 263, 264, 265], "h_0": [259, 263, 264], "pack_padded_sequ": [259, 263], "pack_sequ": [259, 263], "num": [259, 263, 426], "_layer": [259, 263], "_size": [259, 260, 263, 264], "h_n": [259, 263], "packedsequ": [259, 263], "weight_ih_l": [259, 263], "learnabl": [259, 260, 263, 264], "w_ir": 259, "w_iz": 259, "w_in": 259, "num_direct": [259, 263], "weight_hh_l": [259, 263], "w_hr": 259, "w_hz": 259, "w_hn": 259, "bias_ih_l": [259, 263], "b_ir": 259, "b_iz": 259, "b_in": 259, "bias_hh_l": [259, 263], "b_hr": 259, "b_hz": 259, "b_hn": 259, "mathcal": [259, 260, 263, 264], "sqrt": [259, 260, 263, 264, 282], "frac": [259, 260, 263, 264, 418], "seq_len": [259, 263], "subtli": 259, "matrix": [259, 263, 274, 275], "hx": [259, 260, 263, 264], "lstmcell": [260, 265, 420], "gru_cel": 260, "weight_ih": [260, 264], "weight_hh": [260, 264], "bias_ih": [260, 264], "bias_hh": [260, 264], "rocm": [260, 264], "embedd": [261, 265], "grucel": [261, 309], "python_bas": [261, 265], "custom_kei": [261, 265], "hasn": [261, 265], "set_recurrent_mod": [261, 265, 419], "recurrent_mod": [261, 265, 296], "rs": [261, 416], "gru_module_train": 261, "policy_train": [261, 265], "traj_td": [261, 265], "make_cudnn_bas": [261, 265], "make_python_bas": [261, 265, 420], "supplementari": [261, 265, 418, 436], "That": [261, 265, 418, 429], "dealt": [261, 265], "poorli": [261, 265], "meth": [261, 265, 338, 431], "data_collector": [261, 265, 417], "policy_infer": [261, 265], "td_inf": [261, 265], "upscal": [262, 290, 291], "tanh_loc": [262, 290, 291], "event_dim": [262, 289, 290], "poor": [262, 290, 291], "explos": [262, 290, 291], "proj_siz": 263, "c0": [263, 264], "c1": [263, 264], "call_lstm": [263, 264], "c_out": [263, 264], "i_t": 263, "ii": [263, 264], "hi": [263, 264], "f_t": 263, "hf": [263, 264], "g_t": 263, "ig": [263, 264], "hg": [263, 264], "o_t": 263, "ho": [263, 264], "c_t": 263, "c_": 263, "1402": 263, "1128": 263, "c_0": [263, 264], "proj": 263, "c_n": 263, "w_ii": 263, "w_if": 263, "w_ig": 263, "w_io": 263, "w_hi": 263, "w_hf": 263, "w_hg": 263, "w_ho": 263, "b_ii": 263, "b_if": 263, "b_ig": 263, "b_io": 263, "b_hi": 263, "b_hf": 263, "b_hg": 263, "b_ho": 263, "weight_hr_l": 263, "_revers": 263, "analog": [263, 422], "cn": 263, "lstm_cell": 264, "h_1": 264, "c_1": 264, "cx": 264, "recurrent_state_h": 265, "recurrent_state_c": 265, "triplet": [265, 307, 308], "lstm_modul": 265, "rs_h": 265, "rs_c": 265, "hidden0": [265, 420], "hidden1": [265, 420], "single_bias_last_lay": 266, "layer_class": 266, "layer_kwarg": 266, "perceptron": [266, 422], "noisylinear": [266, 274, 409, 417], "noisylazylinear": [266, 409], "mpcplanner": 267, "tensordict_out": [267, 436], "mppi": 268, "covari": 268, "william": [268, 342], "aldrich": 268, "theodor": 268, "01149": 268, "hansen": 268, "wang": 268, "su": 268, "04955": 268, "valueoper": [268, 298, 299, 300, 320, 321, 322, 323, 324, 329, 336, 337, 340, 341, 342, 343, 345, 346, 403, 411, 416, 418, 423], "tdlambdaestim": [268, 409, 416], "value_net": [268, 325, 327, 342, 355, 356, 357, 358, 418, 420, 422, 423, 426], "adv": 268, "lmbda": [268, 348, 355, 358, 360, 366, 367, 368, 371, 372, 412, 416, 418, 430], "value_network": [268, 324, 325, 327, 328, 330, 336, 343, 355, 356, 357, 358, 412, 416, 418, 420, 423, 426, 429], "temperatur": [268, 321, 328, 336], "neg_inf": [269, 270], "inf": [269, 270], "api_doc": [269, 270], "tf_agent": [269, 270], "unnorm": [269, 270, 278], "sparse_mask": [269, 270], "dens": [269, 270], "0831": [269, 270], "1203": [269, 270], "0928": [269, 270], "1972": [269, 270], "grad_method": [270, 278], "reparamgradientstrategi": [270, 278], "passthrough": [270, 278], "relaxedonehot": [270, 278], "sample_non_valid": 270, "zeros_lik": [270, 431], "share_param": [271, 272, 273, 429, 430], "use_td_param": [271, 272, 273], "get_stateful_net": [271, 272, 273, 338, 411, 412], "from_stateful_net": [271, 272, 273, 338, 412], "homogen": [271, 272, 429, 430], "tensordictparam": [271, 272, 310], "_empty_net": [271, 272], "roughli": [271, 272, 435], "agent_network": [271, 272], "modulelist": [271, 272], "2592": 271, "decentr": 271, "n_agent_input": [272, 273, 429, 430], "n_agent_output": [272, 273, 429, 430], "toech": 272, "centalis": 272, "shown": [272, 411, 420, 428, 429, 430, 433], "agent_dim": 273, "vmap_random": [273, 338, 412], "stateful_net": [273, 338], "Such": [273, 338], "multiagentmlp": [273, 429, 430], "snet": 273, "hasattr": [273, 416], "kaiming_normal_": 273, "std_init": [274, 275], "initialize_paramet": 274, "isol": [274, 338, 420], "1706": [275, 292], "10295v3": 275, "induc": [275, 310], "aid": 275, "1803": [276, 277, 283], "10122": [276, 277], "rnn_hidden": 276, "latent": 277, "ordin": [279, 409], "parametris": [279, 281], "inres": 280, "mu": [280, 282, 418], "impos": [281, 411], "proxim": [281, 340, 418, 430], "atom": 281, "tang": 281, "agraw": 281, "2020": 281, "1901": 281, "10500": 281, "discretis": 281, "num_atom": 281, "num_sampl": 281, "middl": 281, "adam": [281, 290, 416, 417, 418, 419, 420, 423, 426, 429, 430, 431], "lr": [281, 416, 417, 418, 419, 426, 429, 430, 431], "optimis": [281, 429, 430], "minimis": 281, "penalis": 281, "0308": 281, "1586": 281, "4727": 281, "2260": 281, "1120": 281, "histogram": 281, "return_typ": 281, "hist": [281, 433], "158": 281, "478": 281, "228": 281, "112": 281, "bin_edg": 281, "8000": 281, "6000": 281, "4000": 281, "ornstein": [282, 416, 420], "uhlenbeck": [282, 416, 420], "ou": [282, 416], "correl": 282, "noise_t": 282, "noise_": 282, "theta": [282, 418, 431], "sigma_t": 282, "sigma_": 282, "anneal": [282, 417, 422, 429], "ou_prev_nois": 282, "ou_step": 282, "x0": 282, "sigma_min": 282, "n_steps_ann": 282, "is_init_kei": 282, "_ou_prev_nois": 282, "_ou_step": 282, "state_shap": [283, 353], "mixing_embed_dim": [283, 353], "qmix": [283, 429, 430], "mixer": [283, 292, 353], "monoton": 283, "hyper": 283, "11485": 283, "qmixerloss": [283, 292], "qmix_vdn": [283, 292], "vdn": [283, 292], "hidden_dim": [285, 286], "scale_lb": [285, 286], "posterior": [285, 332], "rssm": [285, 286, 332], "1811": [285, 286], "04551": [285, 286], "obs_embed": 285, "rnn_hidden_dim": 286, "dream": 286, "safe_tanh": 290, "tanhtransform": 290, "overflow": [290, 297, 302, 303, 306, 307, 308, 309, 310], "get_mod": [290, 310], "decomposit": 292, "05296": 292, "hide": [293, 418, 429, 430], "satisfi": [293, 411], "vmap_dim": 293, "lam": 293, "sample_in": 293, "sample_in_td": 293, "vm": 293, "translat": [297, 306], "character": [297, 302, 306, 307, 309, 433], "td_modul": [297, 298, 299, 300, 306, 309, 310, 312, 314, 422, 435], "3635": 297, "0340": 297, "1476": 297, "3911": 297, "1664": 297, "5455": 297, "2247": 297, "4583": 297, "2916": 297, "2160": 297, "5337": 297, "5193": 297, "addmmbackward0": 297, "actorvalueoper": [298, 322, 337, 340, 411, 422], "get_policy_oper": [298, 299, 300, 322, 337, 340, 411], "standalon": [298, 299, 300, 420, 422], "tdmodul": [298, 299, 300, 403], "get_critic_oper": 298, "common_oper": [298, 300], "policy_oper": [298, 299, 300], "value_oper": [298, 299, 300], "module_hidden": [298, 300], "td_module_hidden": [298, 300], "module_act": [298, 300], "td_module_act": [298, 299, 300], "module_valu": [298, 299, 300], "td_module_valu": [298, 299, 300], "state_action_valu": [298, 314, 321, 323, 328, 336, 343, 354, 403, 411, 416, 429, 435], "td_clone": [298, 299, 300], "tensordictmodulewrapp": [298, 398, 399, 403], "get_policy_head": [298, 299, 300], "safesequenti": [298, 299, 300, 353], "head": [298, 300, 310, 317, 322, 337, 340, 409], "get_value_head": [298, 299, 300], "get_value_oper": [298, 299, 300, 322, 337, 340], "action_modul": 299, "actorcriticoper": [300, 411, 422], "actorcriticwrapp": [300, 411, 416], "inferec": 301, "set_tensor_kei": 301, "dt_inference_wrapp": 301, "baz": 301, "inference_context": 301, "obs_dim": 301, "tanhdelta": [301, 409, 416, 429], "dtactor": 301, "actor_modul": [301, 435], "dist_class": 301, "dist_kwarg": 301, "distribution_kwarg": [301, 306, 310, 418, 429, 430], "inference_actor": 301, "sequence_length": 301, "mask_context": 301, "out_act": 301, "qvaluemodul": [302, 307, 353, 419, 420, 422, 426], "distributionaldqnnet": 302, "make_log_softmax": 302, "my_action_valu": [303, 308], "chanc": 303, "lmheadmodel": 304, "actor_head": [304, 322, 337, 340], "base_model": 304, "lm_head": 304, "lookahead": 305, "reshape_cat": 305, "actor_bas": 305, "obs_cat": 305, "obs_cat_reshap": 305, "action_orig": 305, "multistepenvwrapp": 305, "alter": [305, 338, 411], "ego": 305, "default_interaction_typ": [306, 310, 422], "interaction_typ": [306, 310], "datacollectorbas": [306, 310, 395, 398, 399, 403, 409], "set_interaction_typ": [306, 310], "compositedistribut": [306, 310, 320, 340, 412, 422], "distribution_map": [306, 310], "name_map": [306, 310], "cache_dist": [306, 310], "n_empirical_estim": [306, 310], "compound": [306, 422], "chose": 308, "functionalmodul": 309, "functionalmodulewithbuff": 309, "td_fmodul": 309, "td_function": 309, "td_state": 309, "params_repeat": 309, "td_vmap": [309, 312], "random_sampl": [309, 310], "suppli": 310, "paliat": 310, "get_median": 310, "get_mean": 310, "transfer": 310, "log_prob_kei": [310, 412], "sample_key_nam": 310, "_log_prob": 310, "composite_lp_aggreg": 310, "clampbackward0": 310, "clamp": [310, 313, 332, 393, 412, 429, 431], "anihil": 310, "probabilistictensordictsequenti": [311, 320, 322, 337, 340, 342, 398, 399, 412, 435], "partial_toler": [311, 312, 428], "AND": [311, 312, 323], "tensordictsequ": 312, "safeprobabilisticmodul": [312, 411], "spec1": 312, "net1": 312, "module1": 312, "td_module1": 312, "spec2": 312, "module2": 312, "td_module2": 312, "boundari": [313, 418, 420, 429, 430], "resolut": 313, "9944": 313, "9991": 313, "3020": 313, "2299": 313, "5418": 313, "2989": 313, "6849": 313, "3169": 313, "2690": 313, "9649": 313, "5686": 313, "8602": 313, "0315": 313, "8455": 313, "6027": 313, "4746": 313, "7843": 313, "7782": 313, "2111": 313, "5115": 313, "4687": 313, "5760": 313, "custommodul": 314, "imaginari": 315, "imagin": 315, "transition_model": 315, "get_reward_oper": 315, "get_transition_model_oper": 315, "min_val": [316, 319], "_bia": 316, "surject": 319, "expln": 319, "biased_softplu": [319, 409], "biased_softplus_": 319, "syntax": [319, 416], "add_custom_map": 319, "1602": 320, "01783v2": 320, "actor_network": [320, 321, 322, 323, 324, 326, 328, 329, 336, 337, 339, 340, 341, 342, 343, 345, 346, 412, 416, 418, 423, 429, 430], "critic_network": [320, 322, 337, 340, 342, 418, 430], "entropy_bonu": [320, 322, 337, 340, 418], "favour": [320, 322, 337, 340], "samples_mc_entropi": [320, 322, 337, 339, 340], "entropy_coef": [320, 322, 337, 340, 418, 430], "critic_coef": [320, 322, 337, 340, 418], "loss_critic_typ": [320, 322, 337, 340, 342, 418], "l1": [320, 322, 324, 325, 329, 337, 340, 341, 342, 345, 346, 349, 353, 411, 416], "l2": [320, 322, 324, 325, 326, 327, 329, 332, 333, 337, 340, 341, 342, 345, 346, 349, 353, 416, 429], "smooth_l1": [320, 321, 322, 323, 324, 325, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346, 349, 353, 418], "separate_loss": [320, 322, 323, 324, 328, 329, 336, 337, 340, 341, 342, 343, 345, 346], "advantage_kei": [320, 322, 337, 340, 342, 355, 356, 357, 358], "value_target_kei": [320, 322, 337, 340, 342, 355, 356, 357, 358], "value_target": [320, 322, 337, 340, 342, 355, 356, 357, 358, 418, 430], "ddp": [320, 322, 337, 340, 342], "fsdp": [320, 322, 337, 340, 342], "divid": [320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 396, 416, 429, 430, 431], "clip_valu": [320, 322, 337, 340, 342], "loss_crit": [320, 340, 418, 430], "loss_entropi": [320, 340, 418, 430], "loss_object": [320, 340, 418, 430], "next_reward": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358], "next_don": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358], "next_termin": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 355, 356, 357, 358], "loss_obj": 320, "next_observ": [320, 321, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 343, 345, 346, 428], "sacloss": [320, 335, 344, 409], "default_kei": [320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 345, 346, 353, 359], "_acceptedkei": [320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 353, 359], "fraction": 320, "make_value_estim": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353, 412, 416, 417, 429, 430, 435], "value_typ": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 353, 416], "valueestim": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 353, 409, 412, 416, 429, 430], "hyperparam": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 416], "enum": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 348, 353, 416], "default_value_estim": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 416, 435], "default_value_kwarg": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 409, 416], "dqn_loss": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 347, 353], "td1": [320, 321, 323, 324, 325, 327, 329, 330, 331, 336, 338, 340, 341, 342, 343, 345, 346, 353, 416], "conserv": [321, 327], "04779": [321, 327], "qvalue_network": [321, 323, 328, 329, 336, 341, 343, 345, 346], "unti": [321, 323, 336, 341, 343, 345, 346], "loss_funct": [321, 323, 324, 325, 326, 327, 328, 329, 336, 341, 343, 345, 346, 349, 353, 416, 429], "alpha_init": [321, 323, 329, 339, 341, 343], "min_alpha": [321, 323, 329, 339, 341, 343], "max_alpha": [321, 323, 329, 339, 341, 343], "fixed_alpha": [321, 323, 329, 339, 341, 343], "target_entropi": [321, 323, 329, 339, 341, 343], "prod": [321, 323, 339, 343], "delay_actor": [321, 324, 343, 345, 346], "delay_qvalu": [321, 329, 341, 343, 345, 346], "min_q_weight": 321, "max_q_backup": 321, "backup": 321, "deterministic_backup": 321, "num_random": 321, "with_lagrang": 321, "lagrang": 321, "lagrange_thresh": 321, "valueclass": [321, 323, 324, 329, 341, 343, 345, 346], "qvalu": [321, 323, 328, 329, 336, 341, 343, 345, 346], "loss_actor": [321, 323, 324, 328, 329, 336, 341, 342, 343, 345, 346, 389, 416, 429], "loss_actor_bc": 321, "loss_alpha": [321, 323, 329, 341, 343], "loss_cql": [321, 327], "loss_qvalu": [321, 323, 327, 328, 329, 336, 341, 343, 345, 346], "loss_alpha_prim": 321, "clip_epsilon": [322, 418, 430], "normalize_advantag": [322, 337, 340, 430], "normalize_advantage_exclude_dim": [322, 337, 340], "multiobject": [322, 337, 340], "value_kei": [322, 337, 340, 355, 356, 357, 358, 416], "somemodul": [322, 337, 340], "someactor": [322, 337, 340], "value_head": [322, 337, 340], "somevalu": [322, 337, 340], "loss_modul": [322, 335, 337, 338, 340, 344, 393, 402, 403, 412, 413, 416, 417, 418, 429, 430, 433], "IN": 323, "FOR": 323, "simplic": [323, 417, 418, 424, 432, 433, 435], "openreview": [323, 341], "pczqttstix": 323, "qvalue_loss": [323, 345], "actor_loss": [323, 345], "alpha_loss": 323, "num_qvalue_net": [323, 328, 329, 336, 341, 343, 345, 346], "maybe_init_target_entropi": 323, "fault_toler": 323, "target_entropy_buff": 323, "delay_valu": [324, 325, 327, 330, 342, 343, 353, 417, 419, 420, 426, 429], "loss_valu": [324, 328, 336, 342, 343, 416, 418, 429, 430], "pred_valu": [324, 327, 345, 346, 416], "pred_value_max": [324, 416], "target_valu": [324, 327, 341, 345, 346, 354, 412, 416], "target_value_max": [324, 416], "qvalueactor": [325, 327, 353, 417, 419], "double_dqn": 325, "06461": [325, 335], "mult_one_hot": [325, 328, 329, 353], "loss_val": [325, 327, 412, 416, 418, 419, 420, 423, 424, 426, 429, 430, 433], "01345": 326, "distanc": [327, 337, 349, 354, 355, 430], "dcql_loss": 327, "2110": [328, 336], "06169": [328, 336], "expectil": [328, 336], "tau": [328, 336, 344, 416, 417, 429], "antmaz": [328, 336], "sticht": [328, 336], "onehotcategor": [328, 329, 409], "target_entropy_weight": 329, "skip_done_st": [329, 343], "disctount": 330, "distributionalqvalueactor": [330, 411], "input_tensordict": [330, 416], "actor_model": 331, "value_model": [331, 333], "imagination_horizon": 331, "unrol": [331, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372], "discount_loss": [331, 333], "lambda_kl": 332, "lambda_reco": 332, "lambda_reward": 332, "reco_loss": 332, "reward_loss": 332, "free_nat": 332, "nat": 332, "delayed_clamp": 332, "global_averag": 332, "value_loss": 333, "fake_data": 333, "1606": 334, "03476": 334, "discriminator_network": 334, "use_grad_penalti": 334, "gp_lambda": 334, "discrimin": 334, "ddpgloss": [335, 344, 403, 409, 416, 423, 429, 435], "td3loss": [335, 344, 409], "value_network_update_interv": 335, "qvalueclass": 336, "loss_value_diff": 336, "diff": 336, "old_polici": 337, "new_polici": 337, "apart": [337, 430], "dtarg": 337, "samples_mc_kl": 337, "analyt": 337, "decrement": 337, "loss_": [338, 389, 412, 416, 423], "equip": [338, 419, 420, 422], "gh": 338, "_forward_value_estimator_kei": 338, "value_estim": [338, 355, 356, 357, 358, 359, 412, 416, 430], "myloss": 338, "action2": 338, "augment": [338, 424, 426, 433], "deterministic_sampling_mod": 338, "convert_to_funct": [338, 416], "expand_dim": 338, "create_target_param": [338, 416], "compare_against": [338, 416], "_param": 338, "resampl": 338, "_target_param": 338, "network_nam": 338, "blend": 338, "add_random_modul": [338, 412], "flavor": [340, 416, 429, 430, 435], "clipppoloss": [340, 409, 418, 430], "klpenppoloss": [340, 409], "06347": 340, "gae": [340, 409, 412, 416, 418, 430], "ppo_loss": 340, "tdlambda": [340, 348, 412, 416], "base_lay": 340, "randn_lik": 340, "samplelogprob": 340, "ay8zfzm0tdd": 341, "sub_sample_len": 341, "subsampl": [341, 384, 413], "action_log_prob_actor": 341, "state_action_value_actor": [341, 345, 346], "connectionist": 342, "1992": 342, "doi": 342, "1007": 342, "bf00992696": 342, "actor_net": [342, 416, 418], "1801": 343, "01290": 343, "applic": [343, 353, 421, 422, 431], "1812": 343, "05905": 343, "redqloss": [344, 409], "math": 344, "theta_t": [344, 431], "theta_": [344, 431], "polyak": 344, "minimalist": 345, "06860": 345, "policy_nois": [345, 346], "noise_clip": [345, 346], "td3_bc": 345, "bc_loss": 345, "lmbd": 345, "td0": [347, 416, 429], "strict_shap": 349, "view_a": 349, "qmixer": [353, 409], "local_valu": 353, "visibl": [353, 430], "acceptedkei": 353, "global_valu": 353, "penultim": 353, "local_value_network": 353, "mixer_network": 353, "value_modul": [353, 418, 435], "qnet": [353, 416], "next_val_kei": 354, "pred_next_v": 354, "mse": 354, "q_valu": 354, "n_steps_to_next": 354, "value_next_st": 354, "1506": [355, 360, 368], "02438": [355, 360, 368], "exponenti": [355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 391], "average_ga": [355, 418], "skip_exist": [355, 356, 357, 358], "get_default_devic": [355, 356, 357, 358, 359], "time_dim": [355, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372], "gradient_mod": 355, "value_error": [355, 356, 357, 358, 359], "target_param": [355, 356, 357, 358, 359, 416, 430], "98": [355, 356, 357, 358], "94": [355, 358], "unpack": [355, 356, 357, 358], "tensor_kei": [355, 356, 357, 358, 359], "next_valu": [355, 356, 357, 358, 359], "aka": [356, 417, 429], "average_reward": [356, 357, 358], "tdestim": [356, 357, 359], "infti": 357, "valuefunctionbas": 359, "old_stat": [360, 362, 364, 366, 368, 369, 371], "new_stat": [360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "rolling_gamma": [364, 365, 366, 367, 369, 370, 371, 372], "g1": [364, 365, 366, 367, 369, 370, 371, 372], "g2": [364, 365, 366, 367, 369, 370, 371, 372], "g3": [364, 365, 366, 367, 369, 370, 371, 372], "g4": [364, 365, 366, 367, 369, 370, 371, 372], "v3": [364, 365, 366, 367, 369, 370, 371, 372], "preproc": [373, 420, 429], "as_non_tensor": [373, 429], "render_method": 373, "pass_tensordict": 373, "syntact": 373, "sugar": 373, "out_file_bas": 374, "skip_reset": 374, "center_crop": 375, "make_grid": 375, "fp": [375, 380, 382], "log_video": 375, "csv": [375, 377, 379, 417, 425, 426], "wandb": [375, 379, 382, 425, 435], "tensorboard": [375, 379, 381, 425, 435], "log_dir": [375, 376, 377, 379, 381, 382, 417, 426], "cheetah_video": 375, "run_video": 375, "openxexperiencereplai": 375, "sec": [375, 431], "video_fp": [375, 377, 380], "cmu_stretch": 375, "run_video_0": 375, "pt": [377, 413], "cur_dir": 377, "csv_log": 377, "add_video": 377, "video_": 377, "experiment_nam": [378, 379], "uuid": [378, 417, 436], "logger_typ": 379, "logger_nam": 379, "mlflow": [379, 380], "wandb_kwarg": 379, "mlflow_kwarg": 379, "tracking_uri": 380, "uri": 380, "datastor": 380, "tb_log": 381, "tensoarboard": 381, "td_log": 381, "save_dir": 382, "resum": 382, "uncategor": 382, "my_funct": 383, "sub_traj_len": 384, "min_sub_traj_len": 384, "register_op": [384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 413, 417], "process_optim_batch": [384, 390, 391, 413], "td_out": [384, 392], "_process_optim_batch_hook": [384, 413], "batch_subsampl": 384, "clear_cuda": 385, "pre_optim_step": [385, 413], "log_pbar": [386, 387, 388, 391, 413, 417], "progress": [386, 387, 388, 393, 413, 417, 419, 436], "count_fram": 386, "pre_steps_log": [386, 387, 413], "count_frames_log": 386, "lognam": 387, "r_train": 387, "log_reward": [387, 417], "record_interv": [388, 416, 417], "record_fram": [388, 396, 416, 417], "policy_explor": [388, 403, 416, 417, 420, 422, 426], "log_kei": [388, 417], "underestim": 388, "r_evalu": [388, 416], "loss_compon": 389, "appl": 389, "optimizer_hook": 389, "flatten_tensordict": [390, 417], "max_dim": 390, "rb_trainer": 390, "batch_process": [390, 391, 392, 413], "post_loss": [390, 413], "999": [391, 417], "jitter": 391, "finfo": 391, "default_dtyp": 391, "reward_norm": 391, "update_reward_stat": 391, "normalize_reward": 391, "make_train": [392, 409], "_process_batch_hook": [392, 413], "select_kei": [392, 413], "versatil": [393, 421], "optim_steps_per_batch": [393, 413, 417], "clip_grad_norm": 393, "clip_norm": 393, "progress_bar": 393, "save_trainer_interv": 393, "log_interv": [393, 417], "save_trainer_fil": [393, 413], "load_from_fil": [393, 413], "update_weights_interv": [395, 417], "update_weight": 395, "post_step": [395, 413, 417], "cfg": [396, 397, 398, 399, 400, 401, 402, 403, 404, 407], "dictconfig": [396, 397, 398, 399, 401, 402, 403, 404, 407], "unknowingli": 396, "annealing_fram": [396, 416], "init_env_step": [396, 397, 416], "proof_environ": [397, 416], "sta": 397, "ot": 397, "actor_model_explor": [398, 399, 416], "make_env_kwarg": [398, 399], "targetnetupdat": [400, 402, 403], "replayargsconfig": 401, "target_net_updat": [403, 416, 417], "constitu": 403, "egreedywrapp": 403, "env_proof": 403, "obs_spec": 403, "net_valu": 403, "dir": [403, 413, 417], "gettempdir": 403, "argpars": [404, 407], "namespac": [404, 407], "parser": [404, 407], "transformed_env_constructor": [404, 409], "num_env_per_collector": [405, 406], "video_tag": 407, "norm_obs_onli": 407, "use_env_cr": 407, "custom_env_mak": 407, "custom_env": 407, "return_transformed_env": 407, "action_dim_gsd": 407, "state_dim_gsd": 407, "obs_norm_state_dict": 407, "maker": [407, 417], "distributedsyncdatacollector": 409, "submitit_delayed_launch": 409, "raycollector": 409, "rational": 409, "footnot": 409, "binarydiscretetensorspec": 409, "boundedtensorspec": 409, "discretetensorspec": 409, "lazystackedcompositespec": 409, "lazystackedtensorspec": 409, "multidiscretetensorspec": 409, "multionehotdiscretetensorspec": 409, "nontensorspec": 409, "onehotdiscretetensorspec": 409, "unboundedcontinuoustensorspec": 409, "unboundeddiscretetensorspec": 409, "prompttensordicttoken": 409, "rolloutfrommodel": 409, "tokenizeddatasetload": 409, "create_infinite_iter": 409, "constantklcontrol": 409, "adaptiveklcontrol": 409, "llmdata": 409, "llminput": 409, "llmoutput": 409, "consolidate_spec": 409, "check_no_exclusive_kei": 409, "contains_lazy_spec": 409, "nested2t": 409, "h5combin": 409, "h5split": 409, "envmetadata": 409, "chessenv": 409, "tictactoeenv": 409, "llmhashingenv": 409, "check_marl_group": 409, "get_available_librari": 409, "terminated_or_trunc": 409, "dreamerdecod": 409, "braxwrapp": 409, "dmcontrolwrapp": 409, "jumanjiwrapp": 409, "meltingpotenv": 409, "meltingpotwrapp": 409, "mogymenv": 409, "multithreadedenvwrapp": 409, "openmlenv": 409, "openspielwrapp": 409, "openspielenv": 409, "pettingzooenv": [409, 429], "robohiveenv": 409, "smacv2env": 409, "smacv2wrapp": 409, "unitymlagentsenv": 409, "unitymlagentswrapp": 409, "vmaswrapp": 409, "register_gym_spec_convers": 409, "qvaluehook": 409, "distributionalqvaluehook": 409, "reset_nois": 409, "cemplann": 409, "mpcplannerbas": 409, "mppiplann": 409, "independentnorm": 409, "truncatednorm": 409, "maskedonehotcategor": 409, "onehotordin": 409, "inv_softplu": 409, "vmapmodul": 409, "distributionaldqnloss": [409, 417], "discretesacloss": 409, "crossqloss": 409, "iqlloss": 409, "discreteiqlloss": 409, "cqlloss": 409, "discretecqlloss": 409, "gailloss": 409, "dtloss": 409, "onlinedtloss": 409, "td3bcloss": 409, "ppoloss": 409, "a2closs": 409, "reinforceloss": 409, "dreameractorloss": 409, "dreamermodelloss": 409, "dreamervalueloss": 409, "td0estim": [409, 416], "td1estim": [409, 416], "td0_return_estim": 409, "td0_advantage_estim": 409, "td1_return_estim": 409, "vec_td1_return_estim": 409, "td1_advantage_estim": 409, "vec_td1_advantage_estim": 409, "td_lambda_return_estim": 409, "vec_td_lambda_return_estim": 409, "td_lambda_advantage_estim": 409, "vec_td_lambda_advantage_estim": 409, "generalized_advantage_estim": 409, "vec_generalized_advantage_estim": 409, "reward2go": 409, "hardupd": [409, 416, 423], "softupd": [409, 416, 417, 419, 420, 423, 426, 429], "distance_loss": [409, 416], "group_optim": 409, "hold_out_net": 409, "hold_out_param": [409, 416], "batchsubsampl": [409, 413], "clearcudacach": 409, "countframeslog": 409, "logscalar": [409, 413, 417], "optimizerhook": [409, 417], "logvalidationreward": [409, 413, 416, 417], "replaybuffertrain": [409, 413, 417], "rewardnorm": 409, "selectkei": [409, 413], "trainerhookbas": [409, 413, 417], "updateweight": [409, 413, 417], "make_collector_offpolici": 409, "make_collector_onpolici": 409, "make_dqn_loss": 409, "make_replay_buff": [409, 416], "make_target_updat": 409, "parallel_env_constructor": [409, 416], "sync_async_collector": 409, "sync_sync_collector": 409, "correct_for_frame_skip": 409, "get_stats_random_rollout": 409, "mlflowlogg": 409, "get_logg": 409, "generate_exp_nam": 409, "journei": 410, "textbook": 410, "highlight": [410, 429], "ever": [410, 430], "bump": 410, "benefit": [410, 421, 429, 430, 433], "pr": 410, "ground": [411, 416, 431], "recycl": [411, 433], "noisier": 411, "Their": [411, 429, 430], "sd": [411, 436], "prob_modul": 411, "uncertainti": 411, "soften": 411, "backbon": [411, 419, 422, 428, 435], "make_actor": 411, "make_valu": 411, "shared_param": 411, "make_common": 411, "reusabl": [412, 416, 433], "swappabl": [412, 416], "characterist": [412, 416, 431], "trainabl": [412, 416, 423, 432], "smth": [412, 416], "metric": [412, 416], "plenti": [412, 420], "amort": [412, 417, 418], "told": [412, 418], "pseudo": [412, 424, 431], "buri": 412, "str_valu": 412, "nutshel": [412, 416], "barto": [412, 429, 430], "chapter": [412, 425], "value_net_loss": 412, "pow": [412, 416], "room": 412, "signifi": [412, 429, 430], "underperform": 412, "thin": 412, "intric": [412, 422], "set_composite_lp_aggreg": [412, 430], "action_td": 412, "action0": 412, "f0": 412, "action1": 412, "f1": 412, "f2": 412, "legitim": [412, 436], "f3": 412, "action0_log_prob": 412, "action1_log_prob": 412, "inferior": 412, "multivari": 412, "dirichlet": 412, "contrari": 412, "prev_log_prob": 412, "new_log_prob": 412, "log_weight": 412, "appreci": [412, 421], "multihead": 412, "believ": 413, "scheme": [413, 436], "substanti": 413, "_pre_steps_log_hook": 413, "_pre_optim_hook": 413, "sub_batch": 413, "_post_loss_hook": 413, "_post_optim_hook": 413, "post_optim": [413, 417], "_post_optim_log": 413, "post_optim_log": 413, "_post_steps_hook": 413, "_post_steps_log_hook": 413, "post_steps_log": 413, "reserv": 413, "logginghook": 413, "logging_hook": 413, "save_dict": 413, "some_valu": 413, "torchsnapshot": 413, "ckpt_backend": 413, "filepath": 413, "save_train": 413, "000": [415, 434], "galleri": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "mem": [415, 434], "mb": [415, 434], "coding_ddpg": [415, 416, 434], "coding_dqn": [415, 417, 434], "coding_ppo": [415, 418, 434], "dqn_with_rnn": [415, 419, 434], "multi_task": [415, 428, 434], "multiagent_competitive_ddpg": [415, 429, 434], "multiagent_ppo": [415, 430, 434], "pretrained_model": [415, 432, 434], "rb_tutori": [415, 433, 434], "torchrl_demo": [415, 434, 435], "torchrl_env": [415, 434, 436], "author": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 436], "vincent": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 433, 436], "moen": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 433, 436], "assembl": 416, "focus": [416, 423], "maxim": [416, 423, 431], "transpar": [416, 419], "bash": 416, "is_fork": [416, 417, 418, 419, 429, 430, 432], "get_start_method": [416, 417, 418, 419, 429, 430, 432], "collector_devic": 416, "loss_dict": 416, "modal": 416, "oblivi": [416, 418, 433], "elementari": 416, "didact": [416, 420], "dilut": 416, "pessimist": [416, 417, 418], "target_actor_network_param": 416, "actor_in_kei": 416, "actor_crit": 416, "compromis": 416, "hp": 416, "_value_estim": 416, "elif": [416, 417], "unknown": 416, "_loss_actor": 416, "td_copi": 416, "actor_network_param": [416, 429], "value_network_param": [416, 429], "_loss_valu": 416, "pred_val": 416, "target_value_network_param": 416, "glue": 416, "_forward": 416, "remaind": 416, "env_librari": 416, "env_task": 416, "env_arg": [416, 417], "friendli": 416, "torchr": 416, "rescal": 416, "presum": 416, "make_transformed_env": 416, "reward_sc": 416, "marker": 416, "env_per_collector": 416, "transform_state_dict": 416, "make_t_env": 416, "cheat": 416, "10m": 416, "cautiou": 416, "magnitud": [416, 429], "thousand": [416, 419], "get_env_stat": 416, "proof_env": 416, "5000": [416, 420, 426], "recal": [416, 418, 433], "ddpgmlpactor": 416, "ddpgmlpqnet": 416, "materi": 416, "ornsteinuhlenbeckprocessmodul": [416, 422], "make_ddpg_actor": 416, "q_net": 416, "tight": 416, "decoupl": [416, 423, 435], "10_000": [416, 418], "traj_len": [416, 419], "make_record": 416, "recorder_obj": 416, "pick": [416, 417, 422], "buffer_s": [416, 417], "random_crop_len": 416, "prb": 416, "buffer_scratch_dir": [416, 417, 419, 424, 432], "25": 416, "dataflow": 416, "ceil_div": 416, "utd": [416, 419], "update_to_data": 416, "realiz": 416, "_must_": 416, "001": [416, 431], "outdat": 416, "trick": [416, 417], "despit": 416, "optimizer_actor": 416, "weight_decai": [416, 417], "optimizer_valu": 416, "total_collection_step": 416, "rewards_ev": 416, "collected_fram": 416, "pbar": [416, 418, 419, 429, 430, 431], "numel": [416, 418, 419, 420, 426, 429, 432, 433], "current_fram": [416, 429], "sampled_tensordict": 416, "gn1": 416, "clip_grad_norm_": [416, 418, 429, 430, 431], "gn2": 416, "gn": [416, 431], "td_record": 416, "rn": 416, "set_descript": [416, 418, 419, 429, 430, 431], "2f": 416, "mention": [416, 419, 433, 436], "matplotlib": [416, 418, 419, 420, 429, 430, 431, 433, 436], "pyplot": [416, 418, 419, 420, 429, 430, 431, 433, 436], "plt": [416, 418, 419, 420, 429, 430, 431, 433, 436], "zip": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "legend": [416, 429], "xlabel": [416, 419, 430, 431], "ylabel": [416, 430], "tight_layout": 416, "takeawai": [416, 417, 420], "distpatch": 416, "jupyt": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "ipynb": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436], "sphinx": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436], "road": 417, "aspect": [417, 423], "highest": [417, 422], "prerequisit": [417, 419], "lookup": 417, "cart": 417, "pole": 417, "un": 417, "actuat": 417, "frictionless": 417, "duelingcnndqnet": 417, "egreedymodul": [417, 419, 420, 422, 426], "is_notebook": 417, "shell": 417, "get_ipython": 417, "__class__": 417, "zmqinteractiveshel": 417, "qtconsol": 417, "terminalinteractiveshel": 417, "ipython": [417, 430, 431], "nameerror": [417, 429], "umbrella": 417, "misplac": 417, "misus": 417, "orchestr": [417, 423, 425], "five": 417, "64x64": 417, "motion": [417, 431], "obs_norm_sd": 417, "mp_context": 417, "simpler": [417, 421], "get_norm_stat": 417, "test_env": 417, "mathbb": 417, "rightarrow": 417, "make_model": 417, "dummy_env": 417, "init_bia": 417, "exploration_modul": [417, 419, 420, 422, 426], "eps_greedy_v": 417, "eps_greedy_val_env": 417, "actor_explor": 417, "get_replay_buff": 417, "n_optim": [417, 423, 424], "parametriz": 417, "get_collector": 417, "cl": 417, "bunch": 417, "ubiquit": [417, 421], "get_loss_modul": 417, "target_updat": [417, 429], "995": 417, "hopefulli": 417, "variat": 417, "2e": [417, 431], "wd": 417, "upd": 417, "harder": [417, 435], "5_000": 417, "500000": 417, "100000": 417, "005": [417, 429], "mandatori": [417, 418, 430, 431], "fairer": 417, "budget": 417, "dqn_exp_": 417, "uuid1": [417, 436], "registr": 417, "cumbersom": 417, "buffer_hook": 417, "weight_updat": 417, "aliv": 417, "total_reward": 417, "print_csv_files_in_fold": 417, "folder_path": 417, "csv_file": 417, "output_str": 417, "dirpath": 417, "endswith": 417, "strip": 417, "qvaluenetwork": 417, "accuraci": 417, "fanci": [417, 424], "demonstr": [418, 420, 424, 429, 430, 431, 433, 436], "talk": 418, "six": 418, "sophist": [418, 430], "invent": 418, "theta_k": 418, "pi_": 418, "exceed": 418, "discourag": [418, 431], "indispens": 418, "analyz": 418, "lingua": 418, "franca": 418, "defaultdict": [418, 431], "3e": [418, 419, 429, 430], "max_grad_norm": [418, 429, 430], "sub_batch_s": 418, "num_epoch": [418, 430], "entropy_ep": [418, 430], "charact": [418, 420], "inverteddoublependulum": 418, "transmit": 418, "stai": 418, "confid": [418, 429, 430], "ran": 418, "f_": 418, "mu_": 418, "difficulti": [418, 436], "d_ob": 418, "d_action": 418, "policy_modul": [418, 429, 430], "briefli": [418, 429, 430], "refil": [418, 430], "easiest": [418, 423, 429, 430], "mathemat": [418, 429, 430], "tradeoff": [418, 430], "advantage_modul": 418, "lr_schedul": [418, 431], "cosineannealinglr": [418, 431], "eval_str": 418, "tensordict_data": [418, 430], "data_view": [418, 430], "subdata": [418, 429, 430], "cum_reward_str": 418, "4f": [418, 419, 431], "stepcount_str": 418, "param_group": [418, 429], "lr_str": 418, "eval_rollout": 418, "nice": [418, 421, 424], "cap": [418, 433], "figsiz": [418, 431], "subplot": [418, 429, 431, 436], "titl": [418, 419, 420, 430, 431], "84x84": [419, 420], "accessori": 419, "stamp": 419, "assist": 419, "n_cell": 419, "customiz": 419, "wouldn": 419, "qval": 419, "stoch_polici": 419, "opportun": [419, 429], "uniniti": 419, "again": [419, 420, 421, 422, 424, 430, 432, 433, 436], "strongli": 419, "million": 419, "sake": [419, 432, 433], "20_000": [419, 431], "longest": 419, "npai": 419, "action_spread": 419, "rom": 420, "licens": 420, "strong": 420, "impress": 420, "arduino": 420, "raspberri": 420, "pi": [420, 429, 430, 431], "alon": 420, "examplifi": 420, "ship": 420, "stick": 420, "nearest": 420, "value_mlp": [420, 426], "100_000": [420, 426], "init_rand_step": [420, 426], "total_count": [420, 426], "total_episod": [420, 426], "t0": [420, 426], "screen": [420, 429], "color": [420, 429], "unblock": 420, "policy_transform": 420, "fake_td": 420, "exported_polici": 420, "div": 420, "graph_modul": 420, "print_read": 420, "group0": 420, "group0_agent0_ob": 420, "collid": [420, 430], "group0_agent0": 420, "agent0_ob": 420, "comma": 420, "digress": 420, "exported_stochastic_polici": 420, "trace": 420, "batchsizetransform": 420, "recurrent_polici": 420, "fake_ob": 420, "fake_hidden0": 420, "fake_hidden1": 420, "fake_is_init": 420, "exported_recurrent_polici": 420, "platform": [420, 435], "aoti": 420, "_inductor": 420, "aoti_compile_and_packag": 420, "aoti_load_packag": 420, "pt2": 420, "pkg_path": 420, "package_path": 420, "compiled_modul": 420, "onnxruntim": 420, "showcas": [420, 431], "web": 420, "explain": [420, 432], "tensorrt": 420, "android": 420, "ale_pi": 420, "aleinterfac": 420, "loadrom": 420, "reset_gam": 420, "screen_ob": 420, "getscreenrgb": 420, "tick_param": 420, "bottom": 420, "labelleft": 420, "labelbottom": 420, "imshow": [420, 436], "dynamo_export": 420, "onnx_policy_export": 420, "onnx_file_path": 420, "ort_sess": 420, "inferencesess": 420, "cpuexecutionprovid": 420, "onnxruntime_input": 420, "get_input": 420, "onnx_polici": 420, "lightweight": [420, 425], "onnxruntime_output": 420, "deploy": 420, "topic": [421, 422, 423], "straight": 421, "backtrack": 421, "reset_with_act": 421, "stepped_data": 421, "spatial": 421, "useless": 421, "policyless": 421, "examin": [421, 429], "tackl": 422, "delv": 422, "extractor": 422, "additivegaussianmodul": [422, 429], "exploration_polici": [422, 429], "greedili": 422, "2d": [422, 429, 430], "innov": [422, 423], "rollout_explor": 422, "sole": 423, "supervis": [423, 424, 433, 436], "n_collect": 423, "get_next_batch": 423, "concis": 423, "ddpg_loss": 423, "total_loss": 423, "prove": 423, "reliev": 423, "concern": 423, "accustom": 424, "surprisingli": 424, "fundament": 424, "art": [424, 429, 430], "countless": 424, "yourself": [424, 429, 430], "everywher": 425, "log_scalar": 425, "my_scalar": 425, "saw": [425, 431, 433], "excess": 425, "lesson": 426, "voluntarili": 426, "torchrl_logg": 426, "training_loop": 426, "video_record": 426, "arbitrarili": 426, "t1": 426, "conclud": [426, 432], "tutorials_python": 427, "tutorials_jupyt": 427, "env1_obs_kei": 428, "observation_stand": 428, "env2_obs_kei": 428, "observation_walk": 428, "tdreset1": 428, "tdreset2": 428, "lazy_stack": 428, "policy_common": 428, "policy_stand": 428, "policy_walk": 428, "But": 428, "env1_mak": 428, "env2_mak": 428, "_single_task": 428, "td_rollout": 428, "matteo": [429, 430], "bettini": [429, 430], "benchmarl": [429, 430], "simple_tag": 429, "maddpg": [429, 430], "multiagentparticleenviron": 429, "mpe": 429, "centralis": [429, 430], "tie": [429, 430], "iddpg": [429, 430], "richard": 429, "andrew": 429, "mit": 429, "press": 429, "2018": 429, "mathbf": [429, 430], "decentralis": [429, 430], "literatur": [429, 430], "overcom": [429, 430], "stationari": [429, 430], "concurr": [429, 430], "establish": 429, "gui": [429, 430], "is_sphinx": 429, "__sphinx_build__": 429, "n_iter": [429, 430, 431], "evad": 429, "iteration_when_stop_training_evad": 429, "memory_s": 429, "n_optimiser_step": 429, "train_batch_s": 429, "polyak_tau": 429, "chaser": 429, "red": 429, "circl": [429, 430], "green": 429, "touch": [429, 431], "penal": [429, 430], "obstacl": 429, "drag": [429, 430], "elast": [429, 430], "collis": [429, 430], "imped": 429, "n_chaser": 429, "n_evad": 429, "n_obstacl": 429, "use_vma": 429, "simple_tag_v3": 429, "num_good": 429, "num_adversari": 429, "num_obstacl": 429, "max_cycl": 429, "num_vmas_env": [429, 430], "num_good_ag": 429, "num_landmark": 429, "four": [429, 430, 431], "n_agents_in_that_group": 429, "stress": [429, 430], "paramount": [429, 430], "n_rollout_step": [429, 430], "evolut": [429, 430], "group_nam": 429, "n_agents_in_group": 429, "minor": 429, "agents_exploration_polici": 429, "utilis": [429, 430], "n_obs_per_ag": [429, 430], "n_actions_per_ag": [429, 430], "share_parameters_polici": [429, 430], "policy_net": [429, 430], "_agent": 429, "grant": [429, 430], "converg": [429, 430], "share_parameters_crit": [429, 430], "obs_act": 429, "cat_modul": 429, "critic_modul": 429, "fantast": [429, 430], "reset_td": 429, "interfer": 429, "subject": [429, 431], "flatten_kei": 429, "process_batch": 429, "group_shap": 429, "get_item_shap": [429, 430], "nested_done_kei": 429, "nested_terminated_kei": 429, "desc": [429, 430], "episode_reward_mean_": 429, "episode_reward_mean_map": 429, "train_group_map": 429, "group_batch": 429, "_group": 429, "loss_nam": 429, "episode_reward_mean": [429, 430], "fig": [429, 433], "set_ylabel": 429, "axvlin": 429, "orang": 429, "set_xlabel": 429, "video_logg": 429, "vmas_log": 429, "env_with_rend": 429, "vmas_rend": 429, "print_log_dir": 429, "profici": [429, 430], "lidar": 430, "sensor": 430, "mappo": 430, "ippo": 430, "analys": 430, "visualis": 430, "vmas_devic": 430, "6_000": 430, "minibatch_s": 430, "generalis": 430, "simd": 430, "warp": 430, "todai": 430, "surround": 430, "dot": [430, 431], "scenario_nam": 430, "critic_net": 430, "minibatch": 430, "episode_reward_mean_list": 430, "critic_network_param": 430, "target_critic_network_param": 430, "xvfb": 430, "pyvirtualdisplai": 430, "1400": 430, "900": 430, "pil": 430, "rendering_callback": 430, "fromarrai": 430, "gif": 430, "save_al": 430, "append_imag": 430, "freeli": 431, "broader": 431, "wider": 431, "acquaint": 431, "avenu": 431, "_apply_to_composit": 431, "default_x": 431, "default_i": 431, "upward": 431, "angular": 431, "sin": 431, "rad": 431, "angl": 431, "deleg": 431, "new_th": 431, "new_thdot": 431, "g_forc": 431, "angle_norm": 431, "albeit": 431, "high_th": 431, "high_thdot": 431, "low_th": 431, "low_thdot": 431, "trivial": 431, "irrelev": 431, "_make_spec": 431, "td_param": 431, "render_fp": 431, "random_": 431, "_make_step": 431, "staticmethod": 431, "skeleton": 431, "unitari": 431, "sine": 431, "cosin": 431, "sintransform": 431, "costransform": 431, "t_sin": 431, "t_co": 431, "cat_transform": 431, "simple_rollout": 431, "unexplor": 431, "init_td": 431, "traj_return": 431, "last_reward": 431, "is_ipython": 431, "inlin": 431, "get_backend": 431, "ion": 431, "gcf": 431, "clear_output": 431, "r3mtransform": 432, "embodi": 432, "env_transform": [432, 436], "wiser": 432, "batteri": 433, "buffer_list": 433, "lowest": 433, "medium": 433, "buffer_lazytensor": 433, "tempdir": 433, "buffer_lazymemmap": 433, "fullest": 433, "mydata": 433, "buffer_lazi": 433, "background": 433, "question": [433, 435], "_i": 433, "artifici": 433, "hamper": 433, "she": 433, "pars": 433, "proport": 433, "reappear": 433, "unfold": 433, "problemat": 433, "4th": 433, "gc": 433, "prioritizedslicesampl": 433, "tensordictmaxvaluewrit": 433, "demo": 435, "icml": 435, "vmoen": 435, "fb": 435, "invest": 435, "media": 435, "predominantli": 435, "data2": 435, "sub_key1": 435, "scturctur": 435, "data_stack": 435, "data_sampl": 435, "_sampler": 435, "_sum_tre": 435, "modulenotfounderror": 435, "noopresetenv": [435, 436], "backbone_modul": 435, "params_expand": 435, "exec_sequ": 435, "tensordict_exp": 435, "base_modul": 435, "tensordicts_prealloc": 435, "tensordicts_stack": 435, "tensordict_rollout": [435, 436], "automatical": 435, "60": 435, "particularili": 435, "concatmodul": 435, "loss_td": 435, "contributor": 435, "curiou": 435, "nascent": 435, "unsupervis": 436, "unifi": 436, "_build_env": 436, "deserv": 436, "__episode__": 436, "__trajectory__": 436, "void": 436, "reproduct": 436, "tensordict_tprim": 436, "wrapper1": 436, "wrapper2": 436, "obviou": 436, "truth": 436, "env_transformed_bi": 436, "stanc": 436, "transformeddistribut": 436, "base_dist": 436, "concat": 436, "mofidi": 436, "transformedenviron": 436, "moderet": 436, "computation": 436, "incom": 436, "amongst": 436, "has_cuda": 436, "convention": 436, "markovian": 436, "bar_": 436, "get_someth": 436, "aargh": 436, "is_clos": 436, "foo_list": 436, "121": 436, "evolv": 436, "steadi": 436, "approx": 436, "absor": 436, "_extra_st": 436}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [239, 0, 1, "", "implement_for"], [383, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LLMData"], [40, 0, 1, "", "LLMInput"], [41, 0, 1, "", "LLMOutput"], [42, 0, 1, "", "LazyStackedCompositeSpec"], [43, 0, 1, "", "LazyStackedTensorSpec"], [44, 0, 1, "", "MCTSForest"], [45, 0, 1, "", "MultiCategorical"], [46, 0, 1, "", "MultiDiscreteTensorSpec"], [47, 0, 1, "", "MultiOneHot"], [48, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [49, 0, 1, "", "MultiStep"], [50, 0, 1, "", "Nested2TED"], [51, 0, 1, "", "NonTensor"], [52, 0, 1, "", "NonTensorSpec"], [53, 0, 1, "", "OneHot"], [54, 0, 1, "", "OneHotDiscreteTensorSpec"], [55, 0, 1, "", "PairwiseDataset"], [56, 0, 1, "", "PrioritizedReplayBuffer"], [57, 0, 1, "", "PromptData"], [58, 0, 1, "", "PromptTensorDictTokenizer"], [59, 0, 1, "", "QueryModule"], [60, 0, 1, "", "RandomProjectionHash"], [61, 0, 1, "", "ReplayBuffer"], [62, 0, 1, "", "RewardData"], [63, 0, 1, "", "RolloutFromModel"], [64, 0, 1, "", "SipHash"], [65, 0, 1, "", "Stacked"], [66, 0, 1, "", "StackedComposite"], [67, 0, 1, "", "TED2Flat"], [68, 0, 1, "", "TED2Nested"], [69, 0, 1, "", "TensorDictMap"], [70, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [71, 0, 1, "", "TensorDictReplayBuffer"], [72, 0, 1, "", "TensorDictTokenizer"], [73, 0, 1, "", "TensorMap"], [74, 0, 1, "", "TensorSpec"], [75, 0, 1, "", "TokenizedDatasetLoader"], [76, 0, 1, "", "Tree"], [77, 0, 1, "", "Unbounded"], [78, 0, 1, "", "UnboundedContinuous"], [79, 0, 1, "", "UnboundedContinuousTensorSpec"], [80, 0, 1, "", "UnboundedDiscrete"], [81, 0, 1, "", "UnboundedDiscreteTensorSpec"], [82, 0, 1, "", "check_no_exclusive_keys"], [83, 0, 1, "", "consolidate_spec"], [84, 0, 1, "", "contains_lazy_spec"], [85, 0, 1, "", "create_infinite_iterator"], [86, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "set"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "set"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LLMData": [[39, 4, 1, "", "device"], [39, 1, 1, "", "dumps"], [39, 1, 1, "", "fields"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load"], [39, 1, 1, "", "load_"], [39, 1, 1, "", "load_memmap"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "memmap_refresh_"], [39, 1, 1, "", "save"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[40, 4, 1, "", "device"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "fields"], [40, 1, 1, "", "from_tensordict"], [40, 1, 1, "", "get"], [40, 1, 1, "", "load"], [40, 1, 1, "", "load_"], [40, 1, 1, "", "load_memmap"], [40, 1, 1, "", "load_state_dict"], [40, 1, 1, "", "memmap"], [40, 1, 1, "", "memmap_"], [40, 1, 1, "", "memmap_like"], [40, 1, 1, "", "memmap_refresh_"], [40, 1, 1, "", "save"], [40, 1, 1, "", "set"], [40, 1, 1, "", "state_dict"], [40, 1, 1, "", "to_tensordict"], [40, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[41, 4, 1, "", "device"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "fields"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 4, 1, "", "device"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "get"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_empty"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "items"], [42, 1, 1, "", "keys"], [42, 1, 1, "", "lock_"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "separates"], [42, 1, 1, "", "set"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unlock_"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "values"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 4, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[44, 4, 1, "", "action_keys"], [44, 4, 1, "", "done_keys"], [44, 1, 1, "", "extend"], [44, 1, 1, "", "get_keys_from_env"], [44, 4, 1, "", "observation_keys"], [44, 4, 1, "", "reward_keys"], [44, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "cardinality"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 3, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "set_provisional_n"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 3, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "cardinality"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 3, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_categorical"], [48, 1, 1, "", "to_categorical_spec"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "to_one_hot"], [48, 1, 1, "", "to_one_hot_spec"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "update_mask"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "compile"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "mtia"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_load_state_dict_pre_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "register_state_dict_post_hook"], [49, 1, 1, "", "register_state_dict_pre_hook"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_submodule"], [49, 1, 1, "", "share_memory"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 4, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 4, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 4, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 3, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 4, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 3, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 4, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[55, 4, 1, "", "device"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "fields"], [55, 1, 1, "", "from_dataset"], [55, 1, 1, "", "from_tensordict"], [55, 1, 1, "", "get"], [55, 1, 1, "", "load"], [55, 1, 1, "", "load_"], [55, 1, 1, "", "load_memmap"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "memmap"], [55, 1, 1, "", "memmap_"], [55, 1, 1, "", "memmap_like"], [55, 1, 1, "", "memmap_refresh_"], [55, 1, 1, "", "save"], [55, 1, 1, "", "set"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to_tensordict"], [55, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dump"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "load"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "register_load_hook"], [56, 1, 1, "", "register_save_hook"], [56, 1, 1, "", "sample"], [56, 4, 1, "", "sampler"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 4, 1, "", "storage"], [56, 4, 1, "", "write_count"], [56, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[57, 4, 1, "", "device"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "fields"], [57, 1, 1, "", "from_dataset"], [57, 1, 1, "", "from_tensordict"], [57, 1, 1, "", "get"], [57, 1, 1, "", "load"], [57, 1, 1, "", "load_"], [57, 1, 1, "", "load_memmap"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "memmap"], [57, 1, 1, "", "memmap_"], [57, 1, 1, "", "memmap_like"], [57, 1, 1, "", "memmap_refresh_"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to_tensordict"], [57, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[59, 1, 1, "", "add_module"], [59, 1, 1, "", "apply"], [59, 1, 1, "", "bfloat16"], [59, 1, 1, "", "buffers"], [59, 1, 1, "", "children"], [59, 1, 1, "", "compile"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 1, 1, "", "double"], [59, 1, 1, "", "eval"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "float"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "get_buffer"], [59, 1, 1, "", "get_extra_state"], [59, 1, 1, "", "get_parameter"], [59, 1, 1, "", "get_submodule"], [59, 1, 1, "", "half"], [59, 1, 1, "", "ipu"], [59, 1, 1, "", "is_tdmodule_compatible"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "modules"], [59, 1, 1, "", "mtia"], [59, 1, 1, "", "named_buffers"], [59, 1, 1, "", "named_children"], [59, 1, 1, "", "named_modules"], [59, 1, 1, "", "named_parameters"], [59, 1, 1, "", "parameters"], [59, 1, 1, "", "register_backward_hook"], [59, 1, 1, "", "register_buffer"], [59, 1, 1, "", "register_forward_hook"], [59, 1, 1, "", "register_forward_pre_hook"], [59, 1, 1, "", "register_full_backward_hook"], [59, 1, 1, "", "register_full_backward_pre_hook"], [59, 1, 1, "", "register_load_state_dict_post_hook"], [59, 1, 1, "", "register_load_state_dict_pre_hook"], [59, 1, 1, "", "register_module"], [59, 1, 1, "", "register_parameter"], [59, 1, 1, "", "register_state_dict_post_hook"], [59, 1, 1, "", "register_state_dict_pre_hook"], [59, 1, 1, "", "requires_grad_"], [59, 1, 1, "", "reset_out_keys"], [59, 1, 1, "", "reset_parameters_recursive"], [59, 1, 1, "", "select_out_keys"], [59, 1, 1, "", "set_extra_state"], [59, 1, 1, "", "set_submodule"], [59, 1, 1, "", "share_memory"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_empty"], [59, 1, 1, "", "train"], [59, 1, 1, "", "type"], [59, 1, 1, "", "xpu"], [59, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[60, 1, 1, "", "add_module"], [60, 1, 1, "", "apply"], [60, 1, 1, "", "bfloat16"], [60, 1, 1, "", "buffers"], [60, 1, 1, "", "children"], [60, 1, 1, "", "compile"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 1, 1, "", "double"], [60, 1, 1, "", "eval"], [60, 1, 1, "", "extra_repr"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "float"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "get_buffer"], [60, 1, 1, "", "get_extra_state"], [60, 1, 1, "", "get_parameter"], [60, 1, 1, "", "get_submodule"], [60, 1, 1, "", "half"], [60, 1, 1, "", "ipu"], [60, 1, 1, "", "load_state_dict"], [60, 1, 1, "", "modules"], [60, 1, 1, "", "mtia"], [60, 1, 1, "", "named_buffers"], [60, 1, 1, "", "named_children"], [60, 1, 1, "", "named_modules"], [60, 1, 1, "", "named_parameters"], [60, 1, 1, "", "parameters"], [60, 1, 1, "", "register_backward_hook"], [60, 1, 1, "", "register_buffer"], [60, 1, 1, "", "register_forward_hook"], [60, 1, 1, "", "register_forward_pre_hook"], [60, 1, 1, "", "register_full_backward_hook"], [60, 1, 1, "", "register_full_backward_pre_hook"], [60, 1, 1, "", "register_load_state_dict_post_hook"], [60, 1, 1, "", "register_load_state_dict_pre_hook"], [60, 1, 1, "", "register_module"], [60, 1, 1, "", "register_parameter"], [60, 1, 1, "", "register_state_dict_post_hook"], [60, 1, 1, "", "register_state_dict_pre_hook"], [60, 1, 1, "", "requires_grad_"], [60, 1, 1, "", "set_extra_state"], [60, 1, 1, "", "set_submodule"], [60, 1, 1, "", "share_memory"], [60, 1, 1, "", "state_dict"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_empty"], [60, 1, 1, "", "train"], [60, 1, 1, "", "type"], [60, 1, 1, "", "xpu"], [60, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 4, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 4, 1, "", "storage"], [61, 4, 1, "", "write_count"], [61, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[62, 4, 1, "", "device"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "fields"], [62, 1, 1, "", "from_tensordict"], [62, 1, 1, "", "get"], [62, 1, 1, "", "load"], [62, 1, 1, "", "load_"], [62, 1, 1, "", "load_memmap"], [62, 1, 1, "", "load_state_dict"], [62, 1, 1, "", "memmap"], [62, 1, 1, "", "memmap_"], [62, 1, 1, "", "memmap_like"], [62, 1, 1, "", "memmap_refresh_"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set"], [62, 1, 1, "", "state_dict"], [62, 1, 1, "", "to_tensordict"], [62, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[63, 1, 1, "", "create_rollout_td"], [63, 1, 1, "", "generate"], [63, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[64, 1, 1, "", "add_module"], [64, 1, 1, "", "apply"], [64, 1, 1, "", "bfloat16"], [64, 1, 1, "", "buffers"], [64, 1, 1, "", "children"], [64, 1, 1, "", "compile"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 1, 1, "", "double"], [64, 1, 1, "", "eval"], [64, 1, 1, "", "extra_repr"], [64, 1, 1, "", "float"], [64, 1, 1, "", "forward"], [64, 1, 1, "", "get_buffer"], [64, 1, 1, "", "get_extra_state"], [64, 1, 1, "", "get_parameter"], [64, 1, 1, "", "get_submodule"], [64, 1, 1, "", "half"], [64, 1, 1, "", "ipu"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "modules"], [64, 1, 1, "", "mtia"], [64, 1, 1, "", "named_buffers"], [64, 1, 1, "", "named_children"], [64, 1, 1, "", "named_modules"], [64, 1, 1, "", "named_parameters"], [64, 1, 1, "", "parameters"], [64, 1, 1, "", "register_backward_hook"], [64, 1, 1, "", "register_buffer"], [64, 1, 1, "", "register_forward_hook"], [64, 1, 1, "", "register_forward_pre_hook"], [64, 1, 1, "", "register_full_backward_hook"], [64, 1, 1, "", "register_full_backward_pre_hook"], [64, 1, 1, "", "register_load_state_dict_post_hook"], [64, 1, 1, "", "register_load_state_dict_pre_hook"], [64, 1, 1, "", "register_module"], [64, 1, 1, "", "register_parameter"], [64, 1, 1, "", "register_state_dict_post_hook"], [64, 1, 1, "", "register_state_dict_pre_hook"], [64, 1, 1, "", "requires_grad_"], [64, 1, 1, "", "set_extra_state"], [64, 1, 1, "", "set_submodule"], [64, 1, 1, "", "share_memory"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_empty"], [64, 1, 1, "", "train"], [64, 1, 1, "", "type"], [64, 1, 1, "", "xpu"], [64, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[65, 1, 1, "", "assert_is_in"], [65, 1, 1, "", "cardinality"], [65, 1, 1, "", "clear_device_"], [65, 1, 1, "", "clone"], [65, 1, 1, "", "contains"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 4, 1, "", "device"], [65, 1, 1, "", "encode"], [65, 1, 1, "", "enumerate"], [65, 1, 1, "", "expand"], [65, 1, 1, "", "flatten"], [65, 1, 1, "", "implements_for_spec"], [65, 1, 1, "", "index"], [65, 1, 1, "", "is_in"], [65, 1, 1, "", "make_neg_dim"], [65, 4, 1, "", "ndim"], [65, 1, 1, "", "ndimension"], [65, 1, 1, "", "one"], [65, 1, 1, "", "ones"], [65, 1, 1, "", "project"], [65, 1, 1, "", "rand"], [65, 1, 1, "", "reshape"], [65, 1, 1, "", "sample"], [65, 1, 1, "", "squeeze"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_numpy"], [65, 1, 1, "", "type_check"], [65, 1, 1, "", "unflatten"], [65, 1, 1, "", "unsqueeze"], [65, 1, 1, "", "view"], [65, 1, 1, "", "zero"], [65, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[66, 1, 1, "", "assert_is_in"], [66, 1, 1, "", "cardinality"], [66, 1, 1, "", "clear_device_"], [66, 1, 1, "", "clone"], [66, 1, 1, "", "contains"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "device"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "encode"], [66, 1, 1, "", "enumerate"], [66, 1, 1, "", "expand"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "get"], [66, 1, 1, "", "implements_for_spec"], [66, 1, 1, "", "index"], [66, 1, 1, "", "is_empty"], [66, 1, 1, "", "is_in"], [66, 1, 1, "", "items"], [66, 1, 1, "", "keys"], [66, 1, 1, "", "lock_"], [66, 1, 1, "", "make_neg_dim"], [66, 4, 1, "", "ndim"], [66, 1, 1, "", "ndimension"], [66, 1, 1, "", "one"], [66, 1, 1, "", "ones"], [66, 1, 1, "", "pop"], [66, 1, 1, "", "project"], [66, 1, 1, "", "rand"], [66, 1, 1, "", "reshape"], [66, 1, 1, "", "sample"], [66, 1, 1, "", "separates"], [66, 1, 1, "", "set"], [66, 1, 1, "", "squeeze"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_numpy"], [66, 1, 1, "", "type_check"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "unlock_"], [66, 1, 1, "", "unsqueeze"], [66, 1, 1, "", "values"], [66, 1, 1, "", "view"], [66, 1, 1, "", "zero"], [66, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[69, 1, 1, "", "add_module"], [69, 1, 1, "", "apply"], [69, 1, 1, "", "bfloat16"], [69, 1, 1, "", "buffers"], [69, 1, 1, "", "children"], [69, 1, 1, "", "compile"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 1, 1, "", "double"], [69, 1, 1, "", "eval"], [69, 1, 1, "", "extra_repr"], [69, 1, 1, "", "float"], [69, 1, 1, "", "forward"], [69, 1, 1, "", "from_tensordict_pair"], [69, 1, 1, "", "get_buffer"], [69, 1, 1, "", "get_extra_state"], [69, 1, 1, "", "get_parameter"], [69, 1, 1, "", "get_submodule"], [69, 1, 1, "", "half"], [69, 1, 1, "", "ipu"], [69, 1, 1, "", "is_tdmodule_compatible"], [69, 1, 1, "", "load_state_dict"], [69, 1, 1, "", "modules"], [69, 1, 1, "", "mtia"], [69, 1, 1, "", "named_buffers"], [69, 1, 1, "", "named_children"], [69, 1, 1, "", "named_modules"], [69, 1, 1, "", "named_parameters"], [69, 1, 1, "", "parameters"], [69, 1, 1, "", "register_backward_hook"], [69, 1, 1, "", "register_buffer"], [69, 1, 1, "", "register_forward_hook"], [69, 1, 1, "", "register_forward_pre_hook"], [69, 1, 1, "", "register_full_backward_hook"], [69, 1, 1, "", "register_full_backward_pre_hook"], [69, 1, 1, "", "register_load_state_dict_post_hook"], [69, 1, 1, "", "register_load_state_dict_pre_hook"], [69, 1, 1, "", "register_module"], [69, 1, 1, "", "register_parameter"], [69, 1, 1, "", "register_state_dict_post_hook"], [69, 1, 1, "", "register_state_dict_pre_hook"], [69, 1, 1, "", "requires_grad_"], [69, 1, 1, "", "reset_out_keys"], [69, 1, 1, "", "reset_parameters_recursive"], [69, 1, 1, "", "select_out_keys"], [69, 1, 1, "", "set_extra_state"], [69, 1, 1, "", "set_submodule"], [69, 1, 1, "", "share_memory"], [69, 1, 1, "", "state_dict"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_empty"], [69, 1, 1, "", "train"], [69, 1, 1, "", "type"], [69, 1, 1, "", "xpu"], [69, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 4, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 4, 1, "", "storage"], [70, 4, 1, "", "write_count"], [70, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[71, 1, 1, "", "add"], [71, 1, 1, "", "append_transform"], [71, 1, 1, "", "dump"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "empty"], [71, 1, 1, "", "extend"], [71, 1, 1, "", "insert_transform"], [71, 1, 1, "", "load"], [71, 1, 1, "", "loads"], [71, 1, 1, "", "register_load_hook"], [71, 1, 1, "", "register_save_hook"], [71, 1, 1, "", "sample"], [71, 4, 1, "", "sampler"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set_sampler"], [71, 1, 1, "", "set_storage"], [71, 1, 1, "", "set_writer"], [71, 4, 1, "", "storage"], [71, 4, 1, "", "write_count"], [71, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[75, 1, 1, "", "dataset_to_tensordict"], [75, 1, 1, "", "load"]], "torchrl.data.Tree": [[76, 4, 1, "", "branching_action"], [76, 4, 1, "", "device"], [76, 1, 1, "", "dumps"], [76, 1, 1, "", "edges"], [76, 1, 1, "", "fields"], [76, 1, 1, "", "from_tensordict"], [76, 4, 1, "", "full_action_spec"], [76, 4, 1, "", "full_done_spec"], [76, 4, 1, "", "full_observation_spec"], [76, 4, 1, "", "full_reward_spec"], [76, 4, 1, "", "full_state_spec"], [76, 1, 1, "", "fully_expanded"], [76, 1, 1, "", "get"], [76, 1, 1, "", "get_vertex_by_hash"], [76, 1, 1, "", "get_vertex_by_id"], [76, 4, 1, "", "is_terminal"], [76, 1, 1, "", "load"], [76, 1, 1, "", "load_"], [76, 1, 1, "", "load_memmap"], [76, 1, 1, "", "load_state_dict"], [76, 1, 1, "", "make_node"], [76, 1, 1, "", "max_length"], [76, 1, 1, "", "memmap"], [76, 1, 1, "", "memmap_"], [76, 1, 1, "", "memmap_like"], [76, 1, 1, "", "memmap_refresh_"], [76, 4, 1, "", "node_observation"], [76, 4, 1, "", "node_observations"], [76, 4, 1, "", "num_children"], [76, 1, 1, "", "num_vertices"], [76, 4, 1, "", "parent"], [76, 1, 1, "", "plot"], [76, 4, 1, "", "prev_action"], [76, 1, 1, "", "rollout_from_path"], [76, 1, 1, "", "save"], [76, 4, 1, "", "selected_actions"], [76, 1, 1, "", "set"], [76, 1, 1, "", "state_dict"], [76, 1, 1, "", "to_string"], [76, 1, 1, "", "to_tensordict"], [76, 1, 1, "", "unbind"], [76, 1, 1, "", "valid_paths"], [76, 1, 1, "", "vertices"], [76, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "cardinality"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[79, 1, 1, "", "assert_is_in"], [79, 1, 1, "", "cardinality"], [79, 1, 1, "", "clear_device_"], [79, 1, 1, "", "clone"], [79, 1, 1, "", "contains"], [79, 1, 1, "", "cpu"], [79, 1, 1, "", "cuda"], [79, 4, 1, "", "device"], [79, 1, 1, "", "encode"], [79, 1, 1, "", "enumerate"], [79, 1, 1, "", "expand"], [79, 1, 1, "", "flatten"], [79, 1, 1, "", "implements_for_spec"], [79, 1, 1, "", "index"], [79, 1, 1, "", "is_in"], [79, 1, 1, "", "make_neg_dim"], [79, 4, 1, "", "ndim"], [79, 1, 1, "", "ndimension"], [79, 1, 1, "", "one"], [79, 1, 1, "", "ones"], [79, 1, 1, "", "project"], [79, 1, 1, "", "rand"], [79, 1, 1, "", "reshape"], [79, 1, 1, "", "sample"], [79, 1, 1, "", "squeeze"], [79, 1, 1, "", "to"], [79, 1, 1, "", "to_numpy"], [79, 1, 1, "", "type_check"], [79, 1, 1, "", "unflatten"], [79, 1, 1, "", "unsqueeze"], [79, 1, 1, "", "view"], [79, 1, 1, "", "zero"], [79, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[80, 1, 1, "", "assert_is_in"], [80, 1, 1, "", "cardinality"], [80, 1, 1, "", "clear_device_"], [80, 1, 1, "", "clone"], [80, 1, 1, "", "contains"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 4, 1, "", "device"], [80, 1, 1, "", "encode"], [80, 1, 1, "", "enumerate"], [80, 1, 1, "", "expand"], [80, 1, 1, "", "flatten"], [80, 1, 1, "", "implements_for_spec"], [80, 1, 1, "", "index"], [80, 1, 1, "", "is_in"], [80, 1, 1, "", "make_neg_dim"], [80, 4, 1, "", "ndim"], [80, 1, 1, "", "ndimension"], [80, 1, 1, "", "one"], [80, 1, 1, "", "ones"], [80, 1, 1, "", "project"], [80, 1, 1, "", "rand"], [80, 1, 1, "", "reshape"], [80, 1, 1, "", "sample"], [80, 1, 1, "", "squeeze"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_numpy"], [80, 1, 1, "", "type_check"], [80, 1, 1, "", "unflatten"], [80, 1, 1, "", "unsqueeze"], [80, 1, 1, "", "view"], [80, 1, 1, "", "zero"], [80, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[81, 1, 1, "", "assert_is_in"], [81, 1, 1, "", "cardinality"], [81, 1, 1, "", "clear_device_"], [81, 1, 1, "", "clone"], [81, 1, 1, "", "contains"], [81, 1, 1, "", "cpu"], [81, 1, 1, "", "cuda"], [81, 4, 1, "", "device"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "enumerate"], [81, 1, 1, "", "expand"], [81, 1, 1, "", "flatten"], [81, 1, 1, "", "implements_for_spec"], [81, 1, 1, "", "index"], [81, 1, 1, "", "is_in"], [81, 1, 1, "", "make_neg_dim"], [81, 4, 1, "", "ndim"], [81, 1, 1, "", "ndimension"], [81, 1, 1, "", "one"], [81, 1, 1, "", "ones"], [81, 1, 1, "", "project"], [81, 1, 1, "", "rand"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "sample"], [81, 1, 1, "", "squeeze"], [81, 1, 1, "", "to"], [81, 1, 1, "", "to_numpy"], [81, 1, 1, "", "type_check"], [81, 1, 1, "", "unflatten"], [81, 1, 1, "", "unsqueeze"], [81, 1, 1, "", "view"], [81, 1, 1, "", "zero"], [81, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[87, 0, 1, "", "FlatStorageCheckpointer"], [88, 0, 1, "", "H5StorageCheckpointer"], [89, 0, 1, "", "ImmutableDatasetWriter"], [90, 0, 1, "", "LazyMemmapStorage"], [91, 0, 1, "", "LazyStackStorage"], [92, 0, 1, "", "LazyTensorStorage"], [93, 0, 1, "", "ListStorage"], [94, 0, 1, "", "ListStorageCheckpointer"], [95, 0, 1, "", "NestedStorageCheckpointer"], [96, 0, 1, "", "PrioritizedSampler"], [97, 0, 1, "", "PrioritizedSliceSampler"], [98, 0, 1, "", "RandomSampler"], [99, 0, 1, "", "ReplayBufferEnsemble"], [100, 0, 1, "", "RoundRobinWriter"], [101, 0, 1, "", "Sampler"], [102, 0, 1, "", "SamplerEnsemble"], [103, 0, 1, "", "SamplerWithoutReplacement"], [104, 0, 1, "", "SliceSampler"], [105, 0, 1, "", "SliceSamplerWithoutReplacement"], [106, 0, 1, "", "Storage"], [107, 0, 1, "", "StorageCheckpointerBase"], [108, 0, 1, "", "StorageEnsemble"], [109, 0, 1, "", "StorageEnsembleCheckpointer"], [110, 0, 1, "", "TensorDictMaxValueWriter"], [111, 0, 1, "", "TensorDictRoundRobinWriter"], [112, 0, 1, "", "TensorStorage"], [113, 0, 1, "", "TensorStorageCheckpointer"], [114, 0, 1, "", "Writer"], [115, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[89, 1, 1, "", "add"], [89, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[90, 1, 1, "", "attach"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "load"], [90, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[92, 1, 1, "", "attach"], [92, 1, 1, "", "dump"], [92, 1, 1, "", "load"], [92, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[96, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[97, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[99, 1, 1, "", "add"], [99, 1, 1, "", "append_transform"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "dumps"], [99, 1, 1, "", "empty"], [99, 1, 1, "", "extend"], [99, 1, 1, "", "insert_transform"], [99, 1, 1, "", "load"], [99, 1, 1, "", "loads"], [99, 1, 1, "", "register_load_hook"], [99, 1, 1, "", "register_save_hook"], [99, 1, 1, "", "sample"], [99, 4, 1, "", "sampler"], [99, 1, 1, "", "save"], [99, 1, 1, "", "set_sampler"], [99, 1, 1, "", "set_storage"], [99, 1, 1, "", "set_writer"], [99, 4, 1, "", "storage"], [99, 4, 1, "", "write_count"], [99, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[100, 1, 1, "", "add"], [100, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[106, 1, 1, "", "attach"], [106, 1, 1, "", "dump"], [106, 1, 1, "", "load"], [106, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[110, 1, 1, "", "add"], [110, 1, 1, "", "extend"], [110, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[111, 1, 1, "", "add"], [111, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[112, 1, 1, "", "attach"], [112, 1, 1, "", "dump"], [112, 1, 1, "", "load"], [112, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[115, 1, 1, "", "add"], [115, 1, 1, "", "extend"]], "torchrl.envs": [[116, 2, 1, "", "BraxEnv"], [117, 2, 1, "", "BraxWrapper"], [118, 0, 1, "", "ChessEnv"], [119, 2, 1, "", "DMControlEnv"], [120, 2, 1, "", "DMControlWrapper"], [121, 0, 1, "", "EnvBase"], [122, 0, 1, "", "EnvCreator"], [123, 0, 1, "", "EnvMetaData"], [124, 2, 1, "", "GymEnv"], [125, 0, 1, "", "GymLikeEnv"], [126, 2, 1, "", "GymWrapper"], [127, 2, 1, "", "HabitatEnv"], [128, 2, 1, "", "IsaacGymEnv"], [129, 2, 1, "", "IsaacGymWrapper"], [130, 2, 1, "", "JumanjiEnv"], [131, 2, 1, "", "JumanjiWrapper"], [132, 0, 1, "", "LLMEnv"], [133, 0, 1, "", "LLMHashingEnv"], [134, 2, 1, "", "MOGymEnv"], [135, 2, 1, "", "MOGymWrapper"], [136, 2, 1, "", "MarlGroupMapType"], [137, 2, 1, "", "MeltingpotEnv"], [138, 2, 1, "", "MeltingpotWrapper"], [139, 2, 1, "", "ModelBasedEnvBase"], [140, 2, 1, "", "MultiThreadedEnv"], [141, 2, 1, "", "MultiThreadedEnvWrapper"], [142, 2, 1, "", "OpenMLEnv"], [143, 2, 1, "", "OpenSpielEnv"], [144, 2, 1, "", "OpenSpielWrapper"], [145, 0, 1, "", "ParallelEnv"], [146, 0, 1, "", "PendulumEnv"], [147, 2, 1, "", "PettingZooEnv"], [148, 2, 1, "", "PettingZooWrapper"], [149, 2, 1, "", "RandomPolicy"], [150, 2, 1, "", "RoboHiveEnv"], [151, 2, 1, "", "SMACv2Env"], [152, 2, 1, "", "SMACv2Wrapper"], [153, 0, 1, "", "SerialEnv"], [154, 0, 1, "", "TicTacToeEnv"], [155, 2, 1, "", "UnityMLAgentsEnv"], [156, 2, 1, "", "UnityMLAgentsWrapper"], [157, 2, 1, "", "VmasEnv"], [158, 2, 1, "", "VmasWrapper"], [159, 2, 1, "", "check_env_specs"], [160, 2, 1, "", "check_marl_grouping"], [161, 2, 1, "", "exploration_type"], [162, 2, 1, "", "get_available_libraries"], [163, 2, 1, "", "gym_backend"], [164, 2, 1, "", "make_composite_from_td"], [139, 1, 1, "", "rand_step"], [167, 2, 1, "", "register_gym_spec_conversion"], [139, 1, 1, "", "reset"], [139, 1, 1, "", "rollout"], [168, 2, 1, "", "set_exploration_type"], [169, 2, 1, "", "set_gym_backend"], [139, 1, 1, "", "set_seed"], [139, 1, 1, "", "step"], [170, 2, 1, "", "step_mdp"], [171, 2, 1, "", "terminated_or_truncated"]], "torchrl.envs.ChessEnv": [[118, 4, 1, "", "action_key"], [118, 4, 1, "", "action_keys"], [118, 4, 1, "", "action_spec"], [118, 4, 1, "", "action_spec_unbatched"], [118, 1, 1, "", "add_module"], [118, 1, 1, "", "add_truncated_keys"], [118, 1, 1, "", "all_actions"], [118, 1, 1, "", "any_done"], [118, 1, 1, "", "append_transform"], [118, 1, 1, "", "apply"], [118, 1, 1, "", "auto_specs_"], [118, 4, 1, "", "batch_dims"], [118, 4, 1, "", "batch_locked"], [118, 4, 1, "", "batch_size"], [118, 1, 1, "", "bfloat16"], [118, 1, 1, "", "buffers"], [118, 1, 1, "", "cardinality"], [118, 1, 1, "", "check_env_specs"], [118, 1, 1, "", "children"], [118, 1, 1, "", "compile"], [118, 1, 1, "", "cpu"], [118, 1, 1, "", "cuda"], [118, 4, 1, "", "done_key"], [118, 4, 1, "", "done_keys"], [118, 4, 1, "", "done_keys_groups"], [118, 4, 1, "", "done_spec"], [118, 4, 1, "", "done_spec_unbatched"], [118, 1, 1, "", "double"], [118, 1, 1, "", "empty_cache"], [118, 1, 1, "", "eval"], [118, 1, 1, "", "extra_repr"], [118, 1, 1, "", "fake_tensordict"], [118, 1, 1, "", "float"], [118, 1, 1, "", "forward"], [118, 4, 1, "", "full_action_spec"], [118, 4, 1, "", "full_action_spec_unbatched"], [118, 4, 1, "", "full_done_spec"], [118, 4, 1, "", "full_done_spec_unbatched"], [118, 4, 1, "", "full_observation_spec_unbatched"], [118, 4, 1, "", "full_reward_spec"], [118, 4, 1, "", "full_reward_spec_unbatched"], [118, 4, 1, "", "full_state_spec"], [118, 4, 1, "", "full_state_spec_unbatched"], [118, 1, 1, "", "get_buffer"], [118, 1, 1, "", "get_extra_state"], [118, 1, 1, "", "get_legal_moves"], [118, 1, 1, "", "get_parameter"], [118, 1, 1, "", "get_submodule"], [118, 1, 1, "", "half"], [118, 4, 1, "", "input_spec"], [118, 4, 1, "", "input_spec_unbatched"], [118, 1, 1, "", "ipu"], [118, 4, 1, "", "is_spec_locked"], [118, 1, 1, "", "load_state_dict"], [118, 1, 1, "", "maybe_reset"], [118, 1, 1, "", "modules"], [118, 1, 1, "", "mtia"], [118, 1, 1, "", "named_buffers"], [118, 1, 1, "", "named_children"], [118, 1, 1, "", "named_modules"], [118, 1, 1, "", "named_parameters"], [118, 4, 1, "", "observation_keys"], [118, 4, 1, "", "observation_spec"], [118, 4, 1, "", "observation_spec_unbatched"], [118, 4, 1, "", "output_spec"], [118, 4, 1, "", "output_spec_unbatched"], [118, 1, 1, "", "parameters"], [118, 1, 1, "", "rand_action"], [118, 1, 1, "", "rand_step"], [118, 1, 1, "", "register_backward_hook"], [118, 1, 1, "", "register_buffer"], [118, 1, 1, "", "register_forward_hook"], [118, 1, 1, "", "register_forward_pre_hook"], [118, 1, 1, "", "register_full_backward_hook"], [118, 1, 1, "", "register_full_backward_pre_hook"], [118, 1, 1, "", "register_gym"], [118, 1, 1, "", "register_load_state_dict_post_hook"], [118, 1, 1, "", "register_load_state_dict_pre_hook"], [118, 1, 1, "", "register_module"], [118, 1, 1, "", "register_parameter"], [118, 1, 1, "", "register_state_dict_post_hook"], [118, 1, 1, "", "register_state_dict_pre_hook"], [118, 1, 1, "", "requires_grad_"], [118, 1, 1, "", "reset"], [118, 4, 1, "", "reset_keys"], [118, 4, 1, "", "reward_key"], [118, 4, 1, "", "reward_keys"], [118, 4, 1, "", "reward_spec"], [118, 4, 1, "", "reward_spec_unbatched"], [118, 1, 1, "", "rollout"], [118, 1, 1, "", "set_extra_state"], [118, 1, 1, "", "set_seed"], [118, 1, 1, "", "set_spec_lock_"], [118, 1, 1, "", "set_submodule"], [118, 4, 1, "", "shape"], [118, 1, 1, "", "share_memory"], [118, 4, 1, "", "specs"], [118, 1, 1, "", "state_dict"], [118, 4, 1, "", "state_keys"], [118, 4, 1, "", "state_spec"], [118, 4, 1, "", "state_spec_unbatched"], [118, 1, 1, "", "step"], [118, 1, 1, "", "step_and_maybe_reset"], [118, 1, 1, "", "step_mdp"], [118, 1, 1, "", "to"], [118, 1, 1, "", "to_empty"], [118, 1, 1, "", "train"], [118, 1, 1, "", "type"], [118, 1, 1, "", "xpu"], [118, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[121, 4, 1, "", "action_key"], [121, 4, 1, "", "action_keys"], [121, 4, 1, "", "action_spec"], [121, 4, 1, "", "action_spec_unbatched"], [121, 1, 1, "", "add_module"], [121, 1, 1, "", "add_truncated_keys"], [121, 1, 1, "", "all_actions"], [121, 1, 1, "", "any_done"], [121, 1, 1, "", "append_transform"], [121, 1, 1, "", "apply"], [121, 1, 1, "", "auto_specs_"], [121, 4, 1, "", "batch_dims"], [121, 4, 1, "", "batch_locked"], [121, 4, 1, "", "batch_size"], [121, 1, 1, "", "bfloat16"], [121, 1, 1, "", "buffers"], [121, 1, 1, "", "cardinality"], [121, 1, 1, "", "check_env_specs"], [121, 1, 1, "", "children"], [121, 1, 1, "", "compile"], [121, 1, 1, "", "cpu"], [121, 1, 1, "", "cuda"], [121, 4, 1, "", "done_key"], [121, 4, 1, "", "done_keys"], [121, 4, 1, "", "done_keys_groups"], [121, 4, 1, "", "done_spec"], [121, 4, 1, "", "done_spec_unbatched"], [121, 1, 1, "", "double"], [121, 1, 1, "", "empty_cache"], [121, 1, 1, "", "eval"], [121, 1, 1, "", "extra_repr"], [121, 1, 1, "", "fake_tensordict"], [121, 1, 1, "", "float"], [121, 1, 1, "", "forward"], [121, 4, 1, "", "full_action_spec"], [121, 4, 1, "", "full_action_spec_unbatched"], [121, 4, 1, "", "full_done_spec"], [121, 4, 1, "", "full_done_spec_unbatched"], [121, 4, 1, "", "full_observation_spec_unbatched"], [121, 4, 1, "", "full_reward_spec"], [121, 4, 1, "", "full_reward_spec_unbatched"], [121, 4, 1, "", "full_state_spec"], [121, 4, 1, "", "full_state_spec_unbatched"], [121, 1, 1, "", "get_buffer"], [121, 1, 1, "", "get_extra_state"], [121, 1, 1, "", "get_parameter"], [121, 1, 1, "", "get_submodule"], [121, 1, 1, "", "half"], [121, 4, 1, "", "input_spec"], [121, 4, 1, "", "input_spec_unbatched"], [121, 1, 1, "", "ipu"], [121, 4, 1, "", "is_spec_locked"], [121, 1, 1, "", "load_state_dict"], [121, 1, 1, "", "maybe_reset"], [121, 1, 1, "", "modules"], [121, 1, 1, "", "mtia"], [121, 1, 1, "", "named_buffers"], [121, 1, 1, "", "named_children"], [121, 1, 1, "", "named_modules"], [121, 1, 1, "", "named_parameters"], [121, 4, 1, "", "observation_keys"], [121, 4, 1, "", "observation_spec"], [121, 4, 1, "", "observation_spec_unbatched"], [121, 4, 1, "", "output_spec"], [121, 4, 1, "", "output_spec_unbatched"], [121, 1, 1, "", "parameters"], [121, 1, 1, "", "rand_action"], [121, 1, 1, "id0", "rand_step"], [121, 1, 1, "", "register_backward_hook"], [121, 1, 1, "", "register_buffer"], [121, 1, 1, "", "register_forward_hook"], [121, 1, 1, "", "register_forward_pre_hook"], [121, 1, 1, "", "register_full_backward_hook"], [121, 1, 1, "", "register_full_backward_pre_hook"], [121, 1, 1, "", "register_gym"], [121, 1, 1, "", "register_load_state_dict_post_hook"], [121, 1, 1, "", "register_load_state_dict_pre_hook"], [121, 1, 1, "", "register_module"], [121, 1, 1, "", "register_parameter"], [121, 1, 1, "", "register_state_dict_post_hook"], [121, 1, 1, "", "register_state_dict_pre_hook"], [121, 1, 1, "", "requires_grad_"], [121, 1, 1, "id1", "reset"], [121, 4, 1, "", "reset_keys"], [121, 4, 1, "", "reward_key"], [121, 4, 1, "", "reward_keys"], [121, 4, 1, "", "reward_spec"], [121, 4, 1, "", "reward_spec_unbatched"], [121, 1, 1, "id2", "rollout"], [121, 1, 1, "", "set_extra_state"], [121, 1, 1, "id3", "set_seed"], [121, 1, 1, "", "set_spec_lock_"], [121, 1, 1, "", "set_submodule"], [121, 4, 1, "", "shape"], [121, 1, 1, "", "share_memory"], [121, 4, 1, "", "specs"], [121, 1, 1, "", "state_dict"], [121, 4, 1, "", "state_keys"], [121, 4, 1, "", "state_spec"], [121, 4, 1, "", "state_spec_unbatched"], [121, 1, 1, "id4", "step"], [121, 1, 1, "", "step_and_maybe_reset"], [121, 1, 1, "", "step_mdp"], [121, 1, 1, "", "to"], [121, 1, 1, "", "to_empty"], [121, 1, 1, "", "train"], [121, 1, 1, "", "type"], [121, 1, 1, "", "xpu"], [121, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[122, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[125, 4, 1, "", "action_key"], [125, 4, 1, "", "action_keys"], [125, 4, 1, "", "action_spec"], [125, 4, 1, "", "action_spec_unbatched"], [125, 1, 1, "", "add_module"], [125, 1, 1, "", "add_truncated_keys"], [125, 1, 1, "", "all_actions"], [125, 1, 1, "", "any_done"], [125, 1, 1, "", "append_transform"], [125, 1, 1, "", "apply"], [125, 1, 1, "", "auto_register_info_dict"], [125, 1, 1, "", "auto_specs_"], [125, 4, 1, "", "batch_dims"], [125, 4, 1, "", "batch_locked"], [125, 4, 1, "", "batch_size"], [125, 1, 1, "", "bfloat16"], [125, 1, 1, "", "buffers"], [125, 1, 1, "", "cardinality"], [125, 1, 1, "", "check_env_specs"], [125, 1, 1, "", "children"], [125, 1, 1, "", "close"], [125, 1, 1, "", "compile"], [125, 1, 1, "", "cpu"], [125, 1, 1, "", "cuda"], [125, 4, 1, "", "done_key"], [125, 4, 1, "", "done_keys"], [125, 4, 1, "", "done_keys_groups"], [125, 4, 1, "", "done_spec"], [125, 4, 1, "", "done_spec_unbatched"], [125, 1, 1, "", "double"], [125, 1, 1, "", "empty_cache"], [125, 1, 1, "", "eval"], [125, 1, 1, "", "extra_repr"], [125, 1, 1, "", "fake_tensordict"], [125, 1, 1, "", "float"], [125, 1, 1, "", "forward"], [125, 4, 1, "", "full_action_spec"], [125, 4, 1, "", "full_action_spec_unbatched"], [125, 4, 1, "", "full_done_spec"], [125, 4, 1, "", "full_done_spec_unbatched"], [125, 4, 1, "", "full_observation_spec_unbatched"], [125, 4, 1, "", "full_reward_spec"], [125, 4, 1, "", "full_reward_spec_unbatched"], [125, 4, 1, "", "full_state_spec"], [125, 4, 1, "", "full_state_spec_unbatched"], [125, 1, 1, "", "get_buffer"], [125, 1, 1, "", "get_extra_state"], [125, 1, 1, "", "get_parameter"], [125, 1, 1, "", "get_submodule"], [125, 1, 1, "", "half"], [125, 4, 1, "", "input_spec"], [125, 4, 1, "", "input_spec_unbatched"], [125, 1, 1, "", "ipu"], [125, 4, 1, "", "is_spec_locked"], [125, 1, 1, "", "load_state_dict"], [125, 1, 1, "", "maybe_reset"], [125, 1, 1, "", "modules"], [125, 1, 1, "", "mtia"], [125, 1, 1, "", "named_buffers"], [125, 1, 1, "", "named_children"], [125, 1, 1, "", "named_modules"], [125, 1, 1, "", "named_parameters"], [125, 4, 1, "", "observation_keys"], [125, 4, 1, "", "observation_spec"], [125, 4, 1, "", "observation_spec_unbatched"], [125, 4, 1, "", "output_spec"], [125, 4, 1, "", "output_spec_unbatched"], [125, 1, 1, "", "parameters"], [125, 1, 1, "", "rand_action"], [125, 1, 1, "", "rand_step"], [125, 1, 1, "", "read_action"], [125, 1, 1, "", "read_done"], [125, 1, 1, "", "read_obs"], [125, 1, 1, "", "read_reward"], [125, 1, 1, "", "register_backward_hook"], [125, 1, 1, "", "register_buffer"], [125, 1, 1, "", "register_forward_hook"], [125, 1, 1, "", "register_forward_pre_hook"], [125, 1, 1, "", "register_full_backward_hook"], [125, 1, 1, "", "register_full_backward_pre_hook"], [125, 1, 1, "", "register_gym"], [125, 1, 1, "", "register_load_state_dict_post_hook"], [125, 1, 1, "", "register_load_state_dict_pre_hook"], [125, 1, 1, "", "register_module"], [125, 1, 1, "", "register_parameter"], [125, 1, 1, "", "register_state_dict_post_hook"], [125, 1, 1, "", "register_state_dict_pre_hook"], [125, 1, 1, "", "requires_grad_"], [125, 1, 1, "", "reset"], [125, 4, 1, "", "reset_keys"], [125, 4, 1, "", "reward_key"], [125, 4, 1, "", "reward_keys"], [125, 4, 1, "", "reward_spec"], [125, 4, 1, "", "reward_spec_unbatched"], [125, 1, 1, "", "rollout"], [125, 1, 1, "", "set_extra_state"], [125, 1, 1, "", "set_info_dict_reader"], [125, 1, 1, "", "set_seed"], [125, 1, 1, "", "set_spec_lock_"], [125, 1, 1, "", "set_submodule"], [125, 4, 1, "", "shape"], [125, 1, 1, "", "share_memory"], [125, 4, 1, "", "specs"], [125, 1, 1, "", "state_dict"], [125, 4, 1, "", "state_keys"], [125, 4, 1, "", "state_spec"], [125, 4, 1, "", "state_spec_unbatched"], [125, 1, 1, "", "step"], [125, 1, 1, "", "step_and_maybe_reset"], [125, 1, 1, "", "step_mdp"], [125, 1, 1, "", "to"], [125, 1, 1, "", "to_empty"], [125, 1, 1, "", "train"], [125, 1, 1, "", "type"], [125, 1, 1, "", "xpu"], [125, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[132, 4, 1, "", "action_key"], [132, 4, 1, "", "action_keys"], [132, 4, 1, "", "action_spec"], [132, 4, 1, "", "action_spec_unbatched"], [132, 1, 1, "", "add_module"], [132, 1, 1, "", "add_truncated_keys"], [132, 1, 1, "", "all_actions"], [132, 1, 1, "", "any_done"], [132, 1, 1, "", "append_transform"], [132, 1, 1, "", "apply"], [132, 1, 1, "", "auto_specs_"], [132, 4, 1, "", "batch_dims"], [132, 4, 1, "", "batch_locked"], [132, 4, 1, "", "batch_size"], [132, 1, 1, "", "bfloat16"], [132, 1, 1, "", "buffers"], [132, 1, 1, "", "cardinality"], [132, 1, 1, "", "check_env_specs"], [132, 1, 1, "", "children"], [132, 1, 1, "", "compile"], [132, 1, 1, "", "cpu"], [132, 1, 1, "", "cuda"], [132, 4, 1, "", "done_key"], [132, 4, 1, "", "done_keys"], [132, 4, 1, "", "done_keys_groups"], [132, 4, 1, "", "done_spec"], [132, 4, 1, "", "done_spec_unbatched"], [132, 1, 1, "", "double"], [132, 1, 1, "", "empty_cache"], [132, 1, 1, "", "eval"], [132, 1, 1, "", "extra_repr"], [132, 1, 1, "", "fake_tensordict"], [132, 1, 1, "", "float"], [132, 1, 1, "", "forward"], [132, 1, 1, "id0", "from_dataloader"], [132, 4, 1, "", "full_action_spec"], [132, 4, 1, "", "full_action_spec_unbatched"], [132, 4, 1, "", "full_done_spec"], [132, 4, 1, "", "full_done_spec_unbatched"], [132, 4, 1, "", "full_observation_spec_unbatched"], [132, 4, 1, "", "full_reward_spec"], [132, 4, 1, "", "full_reward_spec_unbatched"], [132, 4, 1, "", "full_state_spec"], [132, 4, 1, "", "full_state_spec_unbatched"], [132, 1, 1, "", "get_buffer"], [132, 1, 1, "", "get_extra_state"], [132, 1, 1, "", "get_parameter"], [132, 1, 1, "", "get_submodule"], [132, 1, 1, "", "half"], [132, 4, 1, "", "input_spec"], [132, 4, 1, "", "input_spec_unbatched"], [132, 1, 1, "", "ipu"], [132, 4, 1, "", "is_spec_locked"], [132, 1, 1, "", "load_state_dict"], [132, 1, 1, "", "maybe_reset"], [132, 1, 1, "", "modules"], [132, 1, 1, "", "mtia"], [132, 1, 1, "", "named_buffers"], [132, 1, 1, "", "named_children"], [132, 1, 1, "", "named_modules"], [132, 1, 1, "", "named_parameters"], [132, 4, 1, "", "observation_keys"], [132, 4, 1, "", "observation_spec"], [132, 4, 1, "", "observation_spec_unbatched"], [132, 4, 1, "", "output_spec"], [132, 4, 1, "", "output_spec_unbatched"], [132, 1, 1, "", "parameters"], [132, 1, 1, "", "rand_action"], [132, 1, 1, "", "rand_step"], [132, 1, 1, "", "register_backward_hook"], [132, 1, 1, "", "register_buffer"], [132, 1, 1, "", "register_forward_hook"], [132, 1, 1, "", "register_forward_pre_hook"], [132, 1, 1, "", "register_full_backward_hook"], [132, 1, 1, "", "register_full_backward_pre_hook"], [132, 1, 1, "", "register_gym"], [132, 1, 1, "", "register_load_state_dict_post_hook"], [132, 1, 1, "", "register_load_state_dict_pre_hook"], [132, 1, 1, "", "register_module"], [132, 1, 1, "", "register_parameter"], [132, 1, 1, "", "register_state_dict_post_hook"], [132, 1, 1, "", "register_state_dict_pre_hook"], [132, 1, 1, "", "requires_grad_"], [132, 1, 1, "", "reset"], [132, 4, 1, "", "reset_keys"], [132, 4, 1, "", "reward_key"], [132, 4, 1, "", "reward_keys"], [132, 4, 1, "", "reward_spec"], [132, 4, 1, "", "reward_spec_unbatched"], [132, 1, 1, "", "rollout"], [132, 1, 1, "", "set_extra_state"], [132, 1, 1, "", "set_seed"], [132, 1, 1, "", "set_spec_lock_"], [132, 1, 1, "", "set_submodule"], [132, 4, 1, "", "shape"], [132, 1, 1, "", "share_memory"], [132, 4, 1, "", "specs"], [132, 1, 1, "", "state_dict"], [132, 4, 1, "", "state_keys"], [132, 4, 1, "", "state_spec"], [132, 4, 1, "", "state_spec_unbatched"], [132, 1, 1, "", "step"], [132, 1, 1, "", "step_and_maybe_reset"], [132, 1, 1, "", "step_mdp"], [132, 1, 1, "", "to"], [132, 1, 1, "", "to_empty"], [132, 1, 1, "", "train"], [132, 1, 1, "", "type"], [132, 1, 1, "", "xpu"], [132, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[133, 4, 1, "", "action_key"], [133, 4, 1, "", "action_keys"], [133, 4, 1, "", "action_spec"], [133, 4, 1, "", "action_spec_unbatched"], [133, 1, 1, "", "add_module"], [133, 1, 1, "", "add_truncated_keys"], [133, 1, 1, "", "all_actions"], [133, 1, 1, "", "any_done"], [133, 1, 1, "", "append_transform"], [133, 1, 1, "", "apply"], [133, 1, 1, "", "auto_specs_"], [133, 4, 1, "", "batch_dims"], [133, 4, 1, "", "batch_locked"], [133, 4, 1, "", "batch_size"], [133, 1, 1, "", "bfloat16"], [133, 1, 1, "", "buffers"], [133, 1, 1, "", "cardinality"], [133, 1, 1, "", "check_env_specs"], [133, 1, 1, "", "children"], [133, 1, 1, "", "compile"], [133, 1, 1, "", "cpu"], [133, 1, 1, "", "cuda"], [133, 4, 1, "", "done_key"], [133, 4, 1, "", "done_keys"], [133, 4, 1, "", "done_keys_groups"], [133, 4, 1, "", "done_spec"], [133, 4, 1, "", "done_spec_unbatched"], [133, 1, 1, "", "double"], [133, 1, 1, "", "empty_cache"], [133, 1, 1, "", "eval"], [133, 1, 1, "", "extra_repr"], [133, 1, 1, "", "fake_tensordict"], [133, 1, 1, "", "float"], [133, 1, 1, "", "forward"], [133, 4, 1, "", "full_action_spec"], [133, 4, 1, "", "full_action_spec_unbatched"], [133, 4, 1, "", "full_done_spec"], [133, 4, 1, "", "full_done_spec_unbatched"], [133, 4, 1, "", "full_observation_spec_unbatched"], [133, 4, 1, "", "full_reward_spec"], [133, 4, 1, "", "full_reward_spec_unbatched"], [133, 4, 1, "", "full_state_spec"], [133, 4, 1, "", "full_state_spec_unbatched"], [133, 1, 1, "", "get_buffer"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "get_parameter"], [133, 1, 1, "", "get_submodule"], [133, 1, 1, "", "half"], [133, 4, 1, "", "input_spec"], [133, 4, 1, "", "input_spec_unbatched"], [133, 1, 1, "", "ipu"], [133, 4, 1, "", "is_spec_locked"], [133, 1, 1, "", "load_state_dict"], [133, 1, 1, "", "make_tensordict"], [133, 1, 1, "", "maybe_reset"], [133, 1, 1, "", "modules"], [133, 1, 1, "", "mtia"], [133, 1, 1, "", "named_buffers"], [133, 1, 1, "", "named_children"], [133, 1, 1, "", "named_modules"], [133, 1, 1, "", "named_parameters"], [133, 4, 1, "", "observation_keys"], [133, 4, 1, "", "observation_spec"], [133, 4, 1, "", "observation_spec_unbatched"], [133, 4, 1, "", "output_spec"], [133, 4, 1, "", "output_spec_unbatched"], [133, 1, 1, "", "parameters"], [133, 1, 1, "", "rand_action"], [133, 1, 1, "", "rand_step"], [133, 1, 1, "", "register_backward_hook"], [133, 1, 1, "", "register_buffer"], [133, 1, 1, "", "register_forward_hook"], [133, 1, 1, "", "register_forward_pre_hook"], [133, 1, 1, "", "register_full_backward_hook"], [133, 1, 1, "", "register_full_backward_pre_hook"], [133, 1, 1, "", "register_gym"], [133, 1, 1, "", "register_load_state_dict_post_hook"], [133, 1, 1, "", "register_load_state_dict_pre_hook"], [133, 1, 1, "", "register_module"], [133, 1, 1, "", "register_parameter"], [133, 1, 1, "", "register_state_dict_post_hook"], [133, 1, 1, "", "register_state_dict_pre_hook"], [133, 1, 1, "", "requires_grad_"], [133, 1, 1, "", "reset"], [133, 4, 1, "", "reset_keys"], [133, 4, 1, "", "reward_key"], [133, 4, 1, "", "reward_keys"], [133, 4, 1, "", "reward_spec"], [133, 4, 1, "", "reward_spec_unbatched"], [133, 1, 1, "", "rollout"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "", "set_seed"], [133, 1, 1, "", "set_spec_lock_"], [133, 1, 1, "", "set_submodule"], [133, 4, 1, "", "shape"], [133, 1, 1, "", "share_memory"], [133, 4, 1, "", "specs"], [133, 1, 1, "", "state_dict"], [133, 4, 1, "", "state_keys"], [133, 4, 1, "", "state_spec"], [133, 4, 1, "", "state_spec_unbatched"], [133, 1, 1, "", "step"], [133, 1, 1, "", "step_and_maybe_reset"], [133, 1, 1, "", "step_mdp"], [133, 1, 1, "", "to"], [133, 1, 1, "", "to_empty"], [133, 1, 1, "", "train"], [133, 1, 1, "", "type"], [133, 1, 1, "", "xpu"], [133, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 4, 1, "", "action_spec_unbatched"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "all_actions"], [145, 1, 1, "", "any_done"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 1, 1, "", "auto_specs_"], [145, 4, 1, "", "batch_dims"], [145, 4, 1, "", "batch_locked"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "cardinality"], [145, 1, 1, "", "check_env_specs"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 4, 1, "", "done_spec_unbatched"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_action_spec_unbatched"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_done_spec_unbatched"], [145, 4, 1, "", "full_observation_spec_unbatched"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_reward_spec_unbatched"], [145, 4, 1, "", "full_state_spec"], [145, 4, 1, "", "full_state_spec_unbatched"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 4, 1, "", "input_spec_unbatched"], [145, 1, 1, "", "ipu"], [145, 4, 1, "", "is_spec_locked"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_keys"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "observation_spec_unbatched"], [145, 4, 1, "", "output_spec"], [145, 4, 1, "", "output_spec_unbatched"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 4, 1, "", "reward_spec_unbatched"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_spec_lock_"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 4, 1, "", "state_spec_unbatched"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "step_mdp"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "update_kwargs"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[146, 4, 1, "", "action_key"], [146, 4, 1, "", "action_keys"], [146, 4, 1, "", "action_spec"], [146, 4, 1, "", "action_spec_unbatched"], [146, 1, 1, "", "add_module"], [146, 1, 1, "", "add_truncated_keys"], [146, 1, 1, "", "all_actions"], [146, 1, 1, "", "any_done"], [146, 1, 1, "", "append_transform"], [146, 1, 1, "", "apply"], [146, 1, 1, "", "auto_specs_"], [146, 4, 1, "", "batch_dims"], [146, 4, 1, "", "batch_size"], [146, 1, 1, "", "bfloat16"], [146, 1, 1, "", "buffers"], [146, 1, 1, "", "cardinality"], [146, 1, 1, "", "check_env_specs"], [146, 1, 1, "", "children"], [146, 1, 1, "", "compile"], [146, 1, 1, "", "cpu"], [146, 1, 1, "", "cuda"], [146, 4, 1, "", "done_key"], [146, 4, 1, "", "done_keys"], [146, 4, 1, "", "done_keys_groups"], [146, 4, 1, "", "done_spec"], [146, 4, 1, "", "done_spec_unbatched"], [146, 1, 1, "", "double"], [146, 1, 1, "", "empty_cache"], [146, 1, 1, "", "eval"], [146, 1, 1, "", "extra_repr"], [146, 1, 1, "", "fake_tensordict"], [146, 1, 1, "", "float"], [146, 1, 1, "", "forward"], [146, 4, 1, "", "full_action_spec"], [146, 4, 1, "", "full_action_spec_unbatched"], [146, 4, 1, "", "full_done_spec"], [146, 4, 1, "", "full_done_spec_unbatched"], [146, 4, 1, "", "full_observation_spec_unbatched"], [146, 4, 1, "", "full_reward_spec"], [146, 4, 1, "", "full_reward_spec_unbatched"], [146, 4, 1, "", "full_state_spec"], [146, 4, 1, "", "full_state_spec_unbatched"], [146, 1, 1, "", "gen_params"], [146, 1, 1, "", "get_buffer"], [146, 1, 1, "", "get_extra_state"], [146, 1, 1, "", "get_parameter"], [146, 1, 1, "", "get_submodule"], [146, 1, 1, "", "half"], [146, 4, 1, "", "input_spec"], [146, 4, 1, "", "input_spec_unbatched"], [146, 1, 1, "", "ipu"], [146, 4, 1, "", "is_spec_locked"], [146, 1, 1, "", "load_state_dict"], [146, 1, 1, "", "maybe_reset"], [146, 1, 1, "", "modules"], [146, 1, 1, "", "mtia"], [146, 1, 1, "", "named_buffers"], [146, 1, 1, "", "named_children"], [146, 1, 1, "", "named_modules"], [146, 1, 1, "", "named_parameters"], [146, 4, 1, "", "observation_keys"], [146, 4, 1, "", "observation_spec"], [146, 4, 1, "", "observation_spec_unbatched"], [146, 4, 1, "", "output_spec"], [146, 4, 1, "", "output_spec_unbatched"], [146, 1, 1, "", "parameters"], [146, 1, 1, "", "rand_action"], [146, 1, 1, "", "rand_step"], [146, 1, 1, "", "register_backward_hook"], [146, 1, 1, "", "register_buffer"], [146, 1, 1, "", "register_forward_hook"], [146, 1, 1, "", "register_forward_pre_hook"], [146, 1, 1, "", "register_full_backward_hook"], [146, 1, 1, "", "register_full_backward_pre_hook"], [146, 1, 1, "", "register_gym"], [146, 1, 1, "", "register_load_state_dict_post_hook"], [146, 1, 1, "", "register_load_state_dict_pre_hook"], [146, 1, 1, "", "register_module"], [146, 1, 1, "", "register_parameter"], [146, 1, 1, "", "register_state_dict_post_hook"], [146, 1, 1, "", "register_state_dict_pre_hook"], [146, 1, 1, "", "requires_grad_"], [146, 1, 1, "", "reset"], [146, 4, 1, "", "reset_keys"], [146, 4, 1, "", "reward_key"], [146, 4, 1, "", "reward_keys"], [146, 4, 1, "", "reward_spec"], [146, 4, 1, "", "reward_spec_unbatched"], [146, 1, 1, "", "rollout"], [146, 1, 1, "", "set_extra_state"], [146, 1, 1, "", "set_seed"], [146, 1, 1, "", "set_spec_lock_"], [146, 1, 1, "", "set_submodule"], [146, 4, 1, "", "shape"], [146, 1, 1, "", "share_memory"], [146, 4, 1, "", "specs"], [146, 1, 1, "", "state_dict"], [146, 4, 1, "", "state_keys"], [146, 4, 1, "", "state_spec"], [146, 4, 1, "", "state_spec_unbatched"], [146, 1, 1, "", "step"], [146, 1, 1, "", "step_and_maybe_reset"], [146, 1, 1, "", "step_mdp"], [146, 1, 1, "", "to"], [146, 1, 1, "", "to_empty"], [146, 1, 1, "", "train"], [146, 1, 1, "", "type"], [146, 1, 1, "", "xpu"], [146, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[153, 4, 1, "", "action_key"], [153, 4, 1, "", "action_keys"], [153, 4, 1, "", "action_spec"], [153, 4, 1, "", "action_spec_unbatched"], [153, 1, 1, "", "add_module"], [153, 1, 1, "", "add_truncated_keys"], [153, 1, 1, "", "all_actions"], [153, 1, 1, "", "any_done"], [153, 1, 1, "", "append_transform"], [153, 1, 1, "", "apply"], [153, 1, 1, "", "auto_specs_"], [153, 4, 1, "", "batch_dims"], [153, 4, 1, "", "batch_locked"], [153, 4, 1, "", "batch_size"], [153, 1, 1, "", "bfloat16"], [153, 1, 1, "", "buffers"], [153, 1, 1, "", "cardinality"], [153, 1, 1, "", "check_env_specs"], [153, 1, 1, "", "children"], [153, 1, 1, "", "compile"], [153, 1, 1, "", "cpu"], [153, 1, 1, "", "cuda"], [153, 4, 1, "", "done_key"], [153, 4, 1, "", "done_keys"], [153, 4, 1, "", "done_keys_groups"], [153, 4, 1, "", "done_spec"], [153, 4, 1, "", "done_spec_unbatched"], [153, 1, 1, "", "double"], [153, 1, 1, "", "empty_cache"], [153, 1, 1, "", "eval"], [153, 1, 1, "", "extra_repr"], [153, 1, 1, "", "fake_tensordict"], [153, 1, 1, "", "float"], [153, 1, 1, "", "forward"], [153, 4, 1, "", "full_action_spec"], [153, 4, 1, "", "full_action_spec_unbatched"], [153, 4, 1, "", "full_done_spec"], [153, 4, 1, "", "full_done_spec_unbatched"], [153, 4, 1, "", "full_observation_spec_unbatched"], [153, 4, 1, "", "full_reward_spec"], [153, 4, 1, "", "full_reward_spec_unbatched"], [153, 4, 1, "", "full_state_spec"], [153, 4, 1, "", "full_state_spec_unbatched"], [153, 1, 1, "", "get_buffer"], [153, 1, 1, "", "get_extra_state"], [153, 1, 1, "", "get_parameter"], [153, 1, 1, "", "get_submodule"], [153, 1, 1, "", "half"], [153, 4, 1, "", "input_spec"], [153, 4, 1, "", "input_spec_unbatched"], [153, 1, 1, "", "ipu"], [153, 4, 1, "", "is_spec_locked"], [153, 1, 1, "", "load_state_dict"], [153, 1, 1, "", "maybe_reset"], [153, 1, 1, "", "modules"], [153, 1, 1, "", "mtia"], [153, 1, 1, "", "named_buffers"], [153, 1, 1, "", "named_children"], [153, 1, 1, "", "named_modules"], [153, 1, 1, "", "named_parameters"], [153, 4, 1, "", "observation_keys"], [153, 4, 1, "", "observation_spec"], [153, 4, 1, "", "observation_spec_unbatched"], [153, 4, 1, "", "output_spec"], [153, 4, 1, "", "output_spec_unbatched"], [153, 1, 1, "", "parameters"], [153, 1, 1, "", "rand_action"], [153, 1, 1, "", "rand_step"], [153, 1, 1, "", "register_backward_hook"], [153, 1, 1, "", "register_buffer"], [153, 1, 1, "", "register_forward_hook"], [153, 1, 1, "", "register_forward_pre_hook"], [153, 1, 1, "", "register_full_backward_hook"], [153, 1, 1, "", "register_full_backward_pre_hook"], [153, 1, 1, "", "register_gym"], [153, 1, 1, "", "register_load_state_dict_post_hook"], [153, 1, 1, "", "register_load_state_dict_pre_hook"], [153, 1, 1, "", "register_module"], [153, 1, 1, "", "register_parameter"], [153, 1, 1, "", "register_state_dict_post_hook"], [153, 1, 1, "", "register_state_dict_pre_hook"], [153, 1, 1, "", "requires_grad_"], [153, 1, 1, "", "reset"], [153, 4, 1, "", "reset_keys"], [153, 4, 1, "", "reward_key"], [153, 4, 1, "", "reward_keys"], [153, 4, 1, "", "reward_spec"], [153, 4, 1, "", "reward_spec_unbatched"], [153, 1, 1, "", "rollout"], [153, 1, 1, "", "set_extra_state"], [153, 1, 1, "", "set_seed"], [153, 1, 1, "", "set_spec_lock_"], [153, 1, 1, "", "set_submodule"], [153, 4, 1, "", "shape"], [153, 1, 1, "", "share_memory"], [153, 4, 1, "", "specs"], [153, 1, 1, "", "state_dict"], [153, 4, 1, "", "state_keys"], [153, 4, 1, "", "state_spec"], [153, 4, 1, "", "state_spec_unbatched"], [153, 1, 1, "", "step"], [153, 1, 1, "", "step_and_maybe_reset"], [153, 1, 1, "", "step_mdp"], [153, 1, 1, "", "to"], [153, 1, 1, "", "to_empty"], [153, 1, 1, "", "train"], [153, 1, 1, "", "type"], [153, 1, 1, "", "update_kwargs"], [153, 1, 1, "", "xpu"], [153, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[154, 4, 1, "", "action_key"], [154, 4, 1, "", "action_keys"], [154, 4, 1, "", "action_spec"], [154, 4, 1, "", "action_spec_unbatched"], [154, 1, 1, "", "add_module"], [154, 1, 1, "", "add_truncated_keys"], [154, 1, 1, "", "all_actions"], [154, 1, 1, "", "any_done"], [154, 1, 1, "", "append_transform"], [154, 1, 1, "", "apply"], [154, 1, 1, "", "auto_specs_"], [154, 4, 1, "", "batch_dims"], [154, 4, 1, "", "batch_size"], [154, 1, 1, "", "bfloat16"], [154, 1, 1, "", "buffers"], [154, 1, 1, "", "cardinality"], [154, 1, 1, "", "check_env_specs"], [154, 1, 1, "", "children"], [154, 1, 1, "", "compile"], [154, 1, 1, "", "cpu"], [154, 1, 1, "", "cuda"], [154, 4, 1, "", "done_key"], [154, 4, 1, "", "done_keys"], [154, 4, 1, "", "done_keys_groups"], [154, 4, 1, "", "done_spec"], [154, 4, 1, "", "done_spec_unbatched"], [154, 1, 1, "", "double"], [154, 1, 1, "", "empty_cache"], [154, 1, 1, "", "eval"], [154, 1, 1, "", "extra_repr"], [154, 1, 1, "", "fake_tensordict"], [154, 1, 1, "", "float"], [154, 1, 1, "", "forward"], [154, 4, 1, "", "full_action_spec"], [154, 4, 1, "", "full_action_spec_unbatched"], [154, 4, 1, "", "full_done_spec"], [154, 4, 1, "", "full_done_spec_unbatched"], [154, 4, 1, "", "full_observation_spec_unbatched"], [154, 4, 1, "", "full_reward_spec"], [154, 4, 1, "", "full_reward_spec_unbatched"], [154, 4, 1, "", "full_state_spec"], [154, 4, 1, "", "full_state_spec_unbatched"], [154, 1, 1, "", "get_buffer"], [154, 1, 1, "", "get_extra_state"], [154, 1, 1, "", "get_parameter"], [154, 1, 1, "", "get_submodule"], [154, 1, 1, "", "half"], [154, 4, 1, "", "input_spec"], [154, 4, 1, "", "input_spec_unbatched"], [154, 1, 1, "", "ipu"], [154, 4, 1, "", "is_spec_locked"], [154, 1, 1, "", "load_state_dict"], [154, 1, 1, "", "maybe_reset"], [154, 1, 1, "", "modules"], [154, 1, 1, "", "mtia"], [154, 1, 1, "", "named_buffers"], [154, 1, 1, "", "named_children"], [154, 1, 1, "", "named_modules"], [154, 1, 1, "", "named_parameters"], [154, 4, 1, "", "observation_keys"], [154, 4, 1, "", "observation_spec"], [154, 4, 1, "", "observation_spec_unbatched"], [154, 4, 1, "", "output_spec"], [154, 4, 1, "", "output_spec_unbatched"], [154, 1, 1, "", "parameters"], [154, 1, 1, "", "rand_action"], [154, 1, 1, "", "rand_step"], [154, 1, 1, "", "register_backward_hook"], [154, 1, 1, "", "register_buffer"], [154, 1, 1, "", "register_forward_hook"], [154, 1, 1, "", "register_forward_pre_hook"], [154, 1, 1, "", "register_full_backward_hook"], [154, 1, 1, "", "register_full_backward_pre_hook"], [154, 1, 1, "", "register_gym"], [154, 1, 1, "", "register_load_state_dict_post_hook"], [154, 1, 1, "", "register_load_state_dict_pre_hook"], [154, 1, 1, "", "register_module"], [154, 1, 1, "", "register_parameter"], [154, 1, 1, "", "register_state_dict_post_hook"], [154, 1, 1, "", "register_state_dict_pre_hook"], [154, 1, 1, "", "requires_grad_"], [154, 1, 1, "", "reset"], [154, 4, 1, "", "reset_keys"], [154, 4, 1, "", "reward_key"], [154, 4, 1, "", "reward_keys"], [154, 4, 1, "", "reward_spec"], [154, 4, 1, "", "reward_spec_unbatched"], [154, 1, 1, "", "rollout"], [154, 1, 1, "", "set_extra_state"], [154, 1, 1, "", "set_seed"], [154, 1, 1, "", "set_spec_lock_"], [154, 1, 1, "", "set_submodule"], [154, 4, 1, "", "shape"], [154, 1, 1, "", "share_memory"], [154, 4, 1, "", "specs"], [154, 1, 1, "", "state_dict"], [154, 4, 1, "", "state_keys"], [154, 4, 1, "", "state_spec"], [154, 4, 1, "", "state_spec_unbatched"], [154, 1, 1, "", "step"], [154, 1, 1, "", "step_and_maybe_reset"], [154, 1, 1, "", "step_mdp"], [154, 1, 1, "", "to"], [154, 1, 1, "", "to_empty"], [154, 1, 1, "", "train"], [154, 1, 1, "", "type"], [154, 1, 1, "", "xpu"], [154, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[165, 2, 1, "", "DreamerDecoder"], [166, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[172, 0, 1, "", "ActionDiscretizer"], [173, 0, 1, "", "ActionMask"], [174, 0, 1, "", "AutoResetEnv"], [175, 0, 1, "", "AutoResetTransform"], [176, 0, 1, "", "BatchSizeTransform"], [177, 0, 1, "", "BinarizeReward"], [178, 0, 1, "", "BurnInTransform"], [179, 0, 1, "", "CatFrames"], [180, 0, 1, "", "CatTensors"], [181, 0, 1, "", "CenterCrop"], [182, 0, 1, "", "ClipTransform"], [183, 0, 1, "", "Compose"], [184, 0, 1, "", "ConditionalSkip"], [185, 0, 1, "", "Crop"], [186, 0, 1, "", "DTypeCastTransform"], [187, 0, 1, "", "DataLoadingPrimer"], [188, 0, 1, "", "DeviceCastTransform"], [189, 0, 1, "", "DiscreteActionProjection"], [190, 0, 1, "", "DoubleToFloat"], [191, 0, 1, "", "EndOfLifeTransform"], [192, 0, 1, "", "ExcludeTransform"], [193, 0, 1, "", "FiniteTensorDictCheck"], [194, 0, 1, "", "FlattenObservation"], [195, 0, 1, "", "FrameSkipTransform"], [196, 0, 1, "", "GrayScale"], [197, 0, 1, "", "Hash"], [198, 0, 1, "", "InitTracker"], [199, 0, 1, "", "KLRewardTransform"], [200, 0, 1, "", "LineariseRewards"], [201, 0, 1, "", "MultiAction"], [202, 0, 1, "", "NoopResetEnv"], [203, 0, 1, "", "ObservationNorm"], [204, 0, 1, "", "ObservationTransform"], [205, 0, 1, "", "PermuteTransform"], [206, 0, 1, "", "PinMemoryTransform"], [207, 0, 1, "", "R3MTransform"], [208, 0, 1, "", "RandomCropTensorDict"], [209, 0, 1, "", "RemoveEmptySpecs"], [210, 0, 1, "", "RenameTransform"], [211, 0, 1, "", "Resize"], [212, 0, 1, "", "Reward2GoTransform"], [213, 0, 1, "", "RewardClipping"], [214, 0, 1, "", "RewardScaling"], [215, 0, 1, "", "RewardSum"], [216, 0, 1, "", "SelectTransform"], [217, 0, 1, "", "SignTransform"], [218, 0, 1, "", "SqueezeTransform"], [219, 0, 1, "", "Stack"], [220, 0, 1, "", "StepCounter"], [221, 0, 1, "", "TargetReturn"], [222, 0, 1, "", "TensorDictPrimer"], [223, 0, 1, "", "TimeMaxPool"], [224, 0, 1, "", "Timer"], [225, 0, 1, "", "ToTensorImage"], [226, 0, 1, "", "Tokenizer"], [227, 0, 1, "", "TrajCounter"], [228, 0, 1, "", "Transform"], [229, 0, 1, "", "TransformedEnv"], [230, 0, 1, "", "UnaryTransform"], [231, 0, 1, "", "UnsqueezeTransform"], [232, 0, 1, "", "VC1Transform"], [233, 0, 1, "", "VIPRewardTransform"], [234, 0, 1, "", "VIPTransform"], [235, 0, 1, "", "VecGymEnvTransform"], [236, 0, 1, "", "VecNorm"], [237, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[172, 0, 1, "", "SamplingStrategy"], [172, 1, 1, "", "inv"], [172, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[173, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[174, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[175, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_env_batch_size"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[177, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[178, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "make_rb_transform_and_sampler"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[182, 1, 1, "", "transform_observation_spec"], [182, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[183, 1, 1, "", "append"], [183, 1, 1, "", "forward"], [183, 1, 1, "", "init"], [183, 1, 1, "", "insert"], [183, 1, 1, "", "to"], [183, 1, 1, "", "transform_action_spec"], [183, 1, 1, "", "transform_env_batch_size"], [183, 1, 1, "", "transform_env_device"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"], [183, 1, 1, "", "transform_reward_spec"], [183, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "transform_action_spec"], [188, 1, 1, "", "transform_done_spec"], [188, 1, 1, "", "transform_env_device"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"], [188, 1, 1, "", "transform_output_spec"], [188, 1, 1, "", "transform_reward_spec"], [188, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[189, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "register_keys"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[193, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[195, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[197, 1, 1, "", "get_input_from_hash"], [197, 1, 1, "", "reproducible_hash"], [197, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[201, 1, 1, "", "transform_input_spec"], [201, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[203, 1, 1, "", "init_stats"], [203, 1, 1, "", "transform_action_spec"], [203, 1, 1, "", "transform_observation_spec"], [203, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[206, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[207, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[208, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[211, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[212, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[213, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[214, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_observation_spec"], [215, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "transform_done_spec"], [219, 1, 1, "", "transform_input_spec"], [219, 1, 1, "", "transform_observation_spec"], [219, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_input_spec"], [220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "to"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[226, 1, 1, "", "transform_input_spec"], [226, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TrajCounter": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "load_state_dict"], [227, 1, 1, "", "state_dict"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[228, 1, 1, "", "clone"], [228, 4, 1, "", "container"], [228, 1, 1, "", "forward"], [228, 1, 1, "", "init"], [228, 1, 1, "", "inv"], [228, 4, 1, "", "parent"], [228, 1, 1, "", "reset_parent"], [228, 1, 1, "", "set_container"], [228, 1, 1, "", "to"], [228, 1, 1, "", "transform_action_spec"], [228, 1, 1, "", "transform_done_spec"], [228, 1, 1, "", "transform_env_batch_size"], [228, 1, 1, "", "transform_env_device"], [228, 1, 1, "", "transform_input_spec"], [228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_output_spec"], [228, 1, 1, "", "transform_reward_spec"], [228, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[229, 1, 1, "", "add_truncated_keys"], [229, 1, 1, "", "append_transform"], [229, 4, 1, "", "batch_locked"], [229, 4, 1, "", "batch_size"], [229, 1, 1, "", "empty_cache"], [229, 1, 1, "", "eval"], [229, 4, 1, "", "input_spec"], [229, 1, 1, "", "insert_transform"], [229, 1, 1, "", "load_state_dict"], [229, 4, 1, "", "output_spec"], [229, 1, 1, "", "rand_action"], [229, 1, 1, "", "set_missing_tolerance"], [229, 1, 1, "", "set_seed"], [229, 1, 1, "", "state_dict"], [229, 1, 1, "", "to"], [229, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[230, 1, 1, "", "transform_action_spec"], [230, 1, 1, "", "transform_done_spec"], [230, 1, 1, "", "transform_input_spec"], [230, 1, 1, "", "transform_observation_spec"], [230, 1, 1, "", "transform_output_spec"], [230, 1, 1, "", "transform_reward_spec"], [230, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[231, 1, 1, "", "transform_action_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_reward_spec"], [231, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "make_noload_model"], [232, 1, 1, "", "to"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[234, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[236, 1, 1, "", "build_td_for_shared_vecnorm"], [236, 1, 1, "", "forward"], [236, 1, 1, "", "freeze"], [236, 1, 1, "", "frozen_copy"], [236, 1, 1, "", "get_extra_state"], [236, 4, 1, "", "loc"], [236, 4, 1, "", "scale"], [236, 1, 1, "", "set_extra_state"], [236, 4, 1, "", "standard_normal"], [236, 1, 1, "", "to_observation_norm"], [236, 1, 1, "", "transform_observation_spec"], [236, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[238, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[238, 1, 1, "", "add_module"], [238, 1, 1, "", "apply"], [238, 1, 1, "", "bfloat16"], [238, 1, 1, "", "buffers"], [238, 1, 1, "", "children"], [238, 1, 1, "", "compile"], [238, 4, 1, "", "container"], [238, 1, 1, "", "cpu"], [238, 1, 1, "", "cuda"], [238, 1, 1, "", "double"], [238, 1, 1, "", "eval"], [238, 1, 1, "", "extra_repr"], [238, 1, 1, "", "float"], [238, 1, 1, "", "forward"], [238, 1, 1, "", "get_buffer"], [238, 1, 1, "", "get_extra_state"], [238, 1, 1, "", "get_parameter"], [238, 1, 1, "", "get_submodule"], [238, 1, 1, "", "half"], [238, 1, 1, "", "init"], [238, 1, 1, "", "inv"], [238, 1, 1, "", "ipu"], [238, 1, 1, "", "load_state_dict"], [238, 1, 1, "", "modules"], [238, 1, 1, "", "mtia"], [238, 4, 1, "", "n_steps"], [238, 1, 1, "", "named_buffers"], [238, 1, 1, "", "named_children"], [238, 1, 1, "", "named_modules"], [238, 1, 1, "", "named_parameters"], [238, 1, 1, "", "parameters"], [238, 4, 1, "", "parent"], [238, 1, 1, "", "register_backward_hook"], [238, 1, 1, "", "register_buffer"], [238, 1, 1, "", "register_forward_hook"], [238, 1, 1, "", "register_forward_pre_hook"], [238, 1, 1, "", "register_full_backward_hook"], [238, 1, 1, "", "register_full_backward_pre_hook"], [238, 1, 1, "", "register_load_state_dict_post_hook"], [238, 1, 1, "", "register_load_state_dict_pre_hook"], [238, 1, 1, "", "register_module"], [238, 1, 1, "", "register_parameter"], [238, 1, 1, "", "register_state_dict_post_hook"], [238, 1, 1, "", "register_state_dict_pre_hook"], [238, 1, 1, "", "requires_grad_"], [238, 1, 1, "", "set_extra_state"], [238, 1, 1, "", "set_submodule"], [238, 1, 1, "", "share_memory"], [238, 1, 1, "", "state_dict"], [238, 1, 1, "", "to"], [238, 1, 1, "", "to_empty"], [238, 1, 1, "", "train"], [238, 1, 1, "", "transform_action_spec"], [238, 1, 1, "", "transform_done_spec"], [238, 1, 1, "", "transform_env_batch_size"], [238, 1, 1, "", "transform_env_device"], [238, 1, 1, "", "transform_input_spec"], [238, 1, 1, "", "transform_observation_spec"], [238, 1, 1, "", "transform_output_spec"], [238, 1, 1, "", "transform_reward_spec"], [238, 1, 1, "", "transform_state_spec"], [238, 1, 1, "", "type"], [238, 1, 1, "", "xpu"], [238, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[239, 1, 1, "", "get_class_that_defined_method"], [239, 1, 1, "", "import_module"], [239, 1, 1, "", "module_set"], [239, 1, 1, "", "reset"]], "torchrl.modules": [[240, 0, 1, "", "AdditiveGaussianModule"], [241, 0, 1, "", "BatchRenorm1d"], [242, 0, 1, "", "CEMPlanner"], [243, 0, 1, "", "ConsistentDropout"], [244, 0, 1, "", "ConsistentDropoutModule"], [245, 0, 1, "", "Conv3dNet"], [246, 0, 1, "", "ConvNet"], [247, 0, 1, "", "DTActor"], [248, 0, 1, "", "DdpgCnnActor"], [249, 0, 1, "", "DdpgCnnQNet"], [250, 0, 1, "", "DdpgMlpActor"], [251, 0, 1, "", "DdpgMlpQNet"], [252, 0, 1, "", "DecisionTransformer"], [253, 0, 1, "", "Delta"], [254, 0, 1, "", "DistributionalDQNnet"], [255, 0, 1, "", "DistributionalQValueHook"], [256, 0, 1, "", "DreamerActor"], [257, 0, 1, "", "DuelingCnnDQNet"], [258, 0, 1, "", "EGreedyModule"], [259, 0, 1, "", "GRU"], [260, 0, 1, "", "GRUCell"], [261, 0, 1, "", "GRUModule"], [262, 0, 1, "", "IndependentNormal"], [263, 0, 1, "", "LSTM"], [264, 0, 1, "", "LSTMCell"], [265, 0, 1, "", "LSTMModule"], [266, 0, 1, "", "MLP"], [267, 0, 1, "", "MPCPlannerBase"], [268, 0, 1, "", "MPPIPlanner"], [269, 0, 1, "", "MaskedCategorical"], [270, 0, 1, "", "MaskedOneHotCategorical"], [271, 0, 1, "", "MultiAgentConvNet"], [272, 0, 1, "", "MultiAgentMLP"], [273, 0, 1, "", "MultiAgentNetBase"], [274, 0, 1, "", "NoisyLazyLinear"], [275, 0, 1, "", "NoisyLinear"], [276, 0, 1, "", "ObsDecoder"], [277, 0, 1, "", "ObsEncoder"], [278, 0, 1, "", "OneHotCategorical"], [279, 0, 1, "", "OneHotOrdinal"], [280, 0, 1, "", "OnlineDTActor"], [281, 0, 1, "", "Ordinal"], [282, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [283, 0, 1, "", "QMixer"], [284, 0, 1, "", "QValueHook"], [285, 0, 1, "", "RSSMPosterior"], [286, 0, 1, "", "RSSMPrior"], [287, 0, 1, "", "Squeeze2dLayer"], [288, 0, 1, "", "SqueezeLayer"], [289, 0, 1, "", "TanhDelta"], [290, 0, 1, "", "TanhNormal"], [291, 0, 1, "", "TruncatedNormal"], [292, 0, 1, "", "VDNMixer"], [293, 0, 1, "", "VmapModule"], [294, 0, 1, "", "recurrent_mode"], [295, 0, 1, "", "reset_noise"], [296, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[241, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[242, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[243, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[245, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[246, 1, 1, "", "default_atari_dqn"], [246, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[247, 1, 1, "", "default_config"], [247, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[248, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[249, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[250, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[251, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[252, 0, 1, "", "DTConfig"], [252, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[253, 1, 1, "", "expand"], [253, 1, 1, "", "log_prob"], [253, 4, 1, "", "mean"], [253, 4, 1, "", "mode"], [253, 1, 1, "", "rsample"], [253, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[254, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[256, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[257, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "step"]], "torchrl.modules.GRU": [[259, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[260, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_cudnn_based"], [261, 1, 1, "", "make_python_based"], [261, 1, 1, "id0", "make_tensordict_primer"], [261, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[262, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[263, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[264, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_cudnn_based"], [265, 1, 1, "", "make_python_based"], [265, 1, 1, "id0", "make_tensordict_primer"], [265, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[266, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[268, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[269, 1, 1, "", "log_prob"], [269, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[270, 1, 1, "", "log_prob"], [270, 4, 1, "", "mode"], [270, 1, 1, "", "rsample"], [270, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "from_stateful_net"], [273, 1, 1, "", "get_stateful_net"], [273, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[274, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[276, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[277, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[278, 1, 1, "", "entropy"], [278, 1, 1, "", "log_prob"], [278, 4, 1, "", "mode"], [278, 1, 1, "", "rsample"], [278, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[280, 1, 1, "", "default_config"], [280, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[283, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[285, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[286, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[288, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[289, 4, 1, "", "mean"], [289, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[290, 1, 1, "", "get_mode"], [290, 4, 1, "", "mean"], [290, 4, 1, "", "mode"], [290, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[291, 1, 1, "", "log_prob"], [291, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[292, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[293, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[297, 0, 1, "", "Actor"], [298, 0, 1, "", "ActorCriticOperator"], [299, 0, 1, "", "ActorCriticWrapper"], [300, 0, 1, "", "ActorValueOperator"], [301, 0, 1, "", "DecisionTransformerInferenceWrapper"], [302, 0, 1, "", "DistributionalQValueActor"], [303, 0, 1, "", "DistributionalQValueModule"], [304, 0, 1, "", "LMHeadActorValueOperator"], [305, 0, 1, "", "MultiStepActorWrapper"], [306, 0, 1, "", "ProbabilisticActor"], [307, 0, 1, "", "QValueActor"], [308, 0, 1, "", "QValueModule"], [309, 0, 1, "", "SafeModule"], [310, 0, 1, "", "SafeProbabilisticModule"], [311, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [312, 0, 1, "", "SafeSequential"], [313, 0, 1, "", "TanhModule"], [314, 0, 1, "", "ValueOperator"], [315, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[298, 1, 1, "", "get_critic_operator"], [298, 1, 1, "", "get_policy_head"], [298, 1, 1, "", "get_value_head"], [298, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[299, 1, 1, "", "get_policy_head"], [299, 1, 1, "", "get_policy_operator"], [299, 1, 1, "", "get_value_head"], [299, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[300, 1, 1, "", "get_policy_head"], [300, 1, 1, "", "get_policy_operator"], [300, 1, 1, "", "get_value_head"], [300, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "mask_context"], [301, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[303, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[305, 1, 1, "", "forward"], [305, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[308, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[309, 1, 1, "", "random"], [309, 1, 1, "", "random_sample"], [309, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[310, 1, 1, "", "random"], [310, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[313, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[315, 1, 1, "", "get_reward_operator"], [315, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[316, 0, 1, "", "biased_softplus"], [317, 0, 1, "", "get_primers_from_module"], [318, 0, 1, "", "inv_softplus"], [319, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[316, 1, 1, "", "forward"]], "torchrl.objectives": [[320, 0, 1, "", "A2CLoss"], [321, 0, 1, "", "CQLLoss"], [322, 0, 1, "", "ClipPPOLoss"], [323, 0, 1, "", "CrossQLoss"], [324, 0, 1, "", "DDPGLoss"], [325, 0, 1, "", "DQNLoss"], [326, 0, 1, "", "DTLoss"], [327, 0, 1, "", "DiscreteCQLLoss"], [328, 0, 1, "", "DiscreteIQLLoss"], [329, 0, 1, "", "DiscreteSACLoss"], [330, 0, 1, "", "DistributionalDQNLoss"], [331, 0, 1, "", "DreamerActorLoss"], [332, 0, 1, "", "DreamerModelLoss"], [333, 0, 1, "", "DreamerValueLoss"], [334, 0, 1, "", "GAILLoss"], [335, 0, 1, "", "HardUpdate"], [336, 0, 1, "", "IQLLoss"], [337, 0, 1, "", "KLPENPPOLoss"], [338, 0, 1, "", "LossModule"], [339, 0, 1, "", "OnlineDTLoss"], [340, 0, 1, "", "PPOLoss"], [341, 0, 1, "", "REDQLoss"], [342, 0, 1, "", "ReinforceLoss"], [343, 0, 1, "", "SACLoss"], [344, 0, 1, "", "SoftUpdate"], [345, 0, 1, "", "TD3BCLoss"], [346, 0, 1, "", "TD3Loss"], [347, 0, 1, "", "ValueEstimators"], [348, 0, 1, "", "default_value_kwargs"], [349, 0, 1, "", "distance_loss"], [350, 0, 1, "", "group_optimizers"], [351, 0, 1, "", "hold_out_net"], [352, 0, 1, "", "hold_out_params"], [354, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[320, 3, 1, "", "default_keys"], [320, 1, 1, "", "forward"], [320, 4, 1, "", "functional"], [320, 1, 1, "", "loss_critic"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[321, 3, 1, "", "default_keys"], [321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[322, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[323, 1, 1, "", "actor_loss"], [323, 1, 1, "", "alpha_loss"], [323, 3, 1, "", "default_keys"], [323, 1, 1, "", "forward"], [323, 1, 1, "", "load_state_dict"], [323, 1, 1, "", "make_value_estimator"], [323, 1, 1, "", "maybe_init_target_entropy"], [323, 1, 1, "", "qvalue_loss"], [323, 1, 1, "", "set_keys"], [323, 1, 1, "", "state_dict"], [323, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[324, 3, 1, "", "default_keys"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[325, 3, 1, "", "default_keys"], [325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[326, 3, 1, "", "default_keys"], [326, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[327, 3, 1, "", "default_keys"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[328, 3, 1, "", "default_keys"], [328, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[329, 3, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[330, 3, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[331, 3, 1, "", "default_keys"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[332, 3, 1, "", "default_keys"], [332, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[333, 3, 1, "", "default_keys"], [333, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[334, 3, 1, "", "default_keys"], [334, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[336, 3, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "loss_value_diff"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[337, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[338, 1, 1, "", "convert_to_functional"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "from_stateful_net"], [338, 4, 1, "", "functional"], [338, 1, 1, "", "get_stateful_net"], [338, 1, 1, "", "make_value_estimator"], [338, 1, 1, "", "named_parameters"], [338, 1, 1, "", "parameters"], [338, 1, 1, "", "reset_parameters_recursive"], [338, 1, 1, "", "set_keys"], [338, 4, 1, "", "value_estimator"], [338, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[339, 3, 1, "", "default_keys"], [339, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[340, 3, 1, "", "default_keys"], [340, 1, 1, "", "forward"], [340, 4, 1, "", "functional"], [340, 1, 1, "", "loss_critic"], [340, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[341, 3, 1, "", "default_keys"], [341, 1, 1, "", "forward"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[342, 3, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 4, 1, "", "functional"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[343, 3, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 1, 1, "", "load_state_dict"], [343, 1, 1, "", "make_value_estimator"], [343, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[345, 1, 1, "", "actor_loss"], [345, 3, 1, "", "default_keys"], [345, 1, 1, "", "forward"], [345, 1, 1, "", "make_value_estimator"], [345, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[346, 3, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[353, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[353, 3, 1, "", "default_keys"], [353, 1, 1, "", "forward"], [353, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[355, 0, 1, "", "GAE"], [356, 0, 1, "", "TD0Estimator"], [357, 0, 1, "", "TD1Estimator"], [358, 0, 1, "", "TDLambdaEstimator"], [359, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[355, 1, 1, "", "forward"], [355, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[356, 1, 1, "", "forward"], [356, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[357, 1, 1, "", "forward"], [357, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[358, 1, 1, "", "forward"], [358, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[359, 3, 1, "", "default_keys"], [359, 1, 1, "", "forward"], [359, 1, 1, "", "set_keys"], [359, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[360, 0, 1, "", "generalized_advantage_estimate"], [361, 0, 1, "", "reward2go"], [362, 0, 1, "", "td0_advantage_estimate"], [363, 0, 1, "", "td0_return_estimate"], [364, 0, 1, "", "td1_advantage_estimate"], [365, 0, 1, "", "td1_return_estimate"], [366, 0, 1, "", "td_lambda_advantage_estimate"], [367, 0, 1, "", "td_lambda_return_estimate"], [368, 0, 1, "", "vec_generalized_advantage_estimate"], [369, 0, 1, "", "vec_td1_advantage_estimate"], [370, 0, 1, "", "vec_td1_return_estimate"], [371, 0, 1, "", "vec_td_lambda_advantage_estimate"], [372, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[373, 2, 1, "", "PixelRenderTransform"], [374, 2, 1, "", "TensorDictRecorder"], [375, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[376, 2, 1, "", "Logger"], [378, 2, 1, "", "generate_exp_name"], [379, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[377, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[380, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[381, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[382, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[384, 0, 1, "", "BatchSubSampler"], [385, 0, 1, "", "ClearCudaCache"], [386, 0, 1, "", "CountFramesLog"], [387, 0, 1, "", "LogScalar"], [388, 0, 1, "", "LogValidationReward"], [389, 0, 1, "", "OptimizerHook"], [390, 0, 1, "", "ReplayBufferTrainer"], [391, 0, 1, "", "RewardNormalizer"], [392, 0, 1, "", "SelectKeys"], [393, 0, 1, "", "Trainer"], [394, 0, 1, "", "TrainerHookBase"], [395, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[384, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[385, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[386, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[387, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[388, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[389, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[390, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[391, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[392, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[393, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[394, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[395, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[396, 2, 1, "", "correct_for_frame_skip"], [397, 2, 1, "", "get_stats_random_rollout"], [398, 2, 1, "", "make_collector_offpolicy"], [399, 2, 1, "", "make_collector_onpolicy"], [400, 2, 1, "", "make_dqn_loss"], [401, 2, 1, "", "make_replay_buffer"], [402, 2, 1, "", "make_target_updater"], [403, 2, 1, "", "make_trainer"], [404, 2, 1, "", "parallel_env_constructor"], [405, 2, 1, "", "sync_async_collector"], [406, 2, 1, "", "sync_sync_collector"], [407, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 411, 412, 413, 414, 416, 417, 418, 420, 422, 429, 430, 431, 435, 436], "instal": [0, 6, 7, 435], "get": [0, 421, 422, 423, 424, 425, 426], "start": [0, 421, 422, 423, 424, 425, 426], "tutori": [0, 418, 429, 430], "basic": [0, 433], "intermedi": [0, 8], "advanc": 0, "refer": [0, 409], "knowledg": [0, 410], "base": [0, 2, 7, 410, 420], "indic": 0, "tabl": 0, "collector": [1, 416, 417, 418, 419, 424, 426, 429, 430, 435], "packag": [1, 2, 3, 411, 412, 413, 414], "batch": [1, 3, 416, 431, 433], "size": [1, 3, 416, 433], "polici": [1, 2, 4, 412, 416, 418, 419, 420, 422, 426, 428, 429, 430, 431], "copi": 1, "replai": [1, 2, 3, 416, 417, 418, 419, 424, 426, 429, 430, 433, 435], "buffer": [1, 2, 3, 416, 417, 418, 419, 424, 426, 429, 430, 433, 435], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 416, 417, 418, 424, 426, 429, 430, 435], "distribut": [1, 411], "helper": [1, 3], "function": [1, 4, 412, 417, 418, 423, 429, 430, 435], "compos": [2, 183], "support": 2, "type": 2, "choos": 2, "storag": [2, 106, 416, 424, 433], "sampl": [2, 433], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 417, 433], "trajectori": [2, 433], "checkpoint": [2, 413], "episod": [2, 4], "format": 2, "ted": [2, 421], "The": [2, 416], "rational": 2, "behind": 2, "structur": [2, 433], "A": [2, 417, 433], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 411, 433, 435], "special": [2, 422, 435], "case": 2, "footnot": 2, "multi": [2, 3, 411, 412, 428, 429, 430], "agent": [2, 3, 4, 411, 412, 429, 430], "present": 2, "rnn": 2, "transform": [2, 3, 228, 416, 418, 421, 429, 430, 431, 433, 435, 436], "step": [2, 3, 416, 418, 421, 424, 429, 430, 433, 436], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 74], "numer": 2, "subclass": [2, 3], "categor": [2, 30], "tree": [2, 76], "forest": 2, "tensordictmap": [2, 69], "mctsforest": [2, 44], "reinforc": [2, 412, 418, 429, 430], "learn": [2, 4, 411, 418, 429, 430], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 411, 412, 413, 429], "env": [3, 431, 435, 436], "spec": [3, 431, 436], "lock": 3, "method": [3, 416], "partial": 3, "reset": [3, 431, 436], "environ": [3, 4, 6, 7, 416, 417, 418, 419, 421, 426, 428, 429, 430, 431, 435, 436], "vector": [3, 435], "custom": [3, 11, 431, 433], "nativ": 3, "auto": 3, "dynam": [3, 4, 433], "forward": [3, 4, 416], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 433], "expos": 3, "outsid": 3, "world": 3, "design": [3, 426], "your": [3, 4, 6, 416, 420, 426, 431], "own": [3, 426], "tip": 3, "us": [3, 4, 6, 9, 412, 419, 432, 433, 435], "clone": [3, 7], "mask": 3, "action": [3, 4, 412, 419, 431], "record": [3, 413, 416, 425], "video": [3, 11, 425], "domain": [3, 411], "specif": [3, 411, 428], "librari": [3, 435], "thing": [4, 416, 431], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 421, 423, 435], "gener": [4, 11, 411], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 411], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 416, 417, 423, 426], "return": [4, 412], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 435], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 428], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 416, 417, 418], "standard": 4, "explor": [4, 411, 416, 417, 422], "valu": [4, 411, 412, 416, 418, 419, 422], "loss": [4, 416, 417, 418, 419, 426, 429, 430], "earli": 4, "train": [4, 8, 412, 416, 418, 419, 420, 423, 426, 429, 430, 431], "roughli": 4, "uniformli": 4, "random": [4, 412, 429, 430], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 417], "increas": 4, "an": [4, 418, 419, 421, 431], "can": 4, "low": 4, "model": [4, 411, 416, 417, 419, 420, 423, 432, 435], "also": 4, "offlin": 4, "observ": [4, 416], "space": 4, "effect": [4, 431], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 420], "gym": [5, 435, 436], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 416], "render": [7, 11, 426, 429, 430, 436], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 416], "pytorch": [8, 9, 10, 420], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 431], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 417, 433], "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 420], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "llmdata": 39, "llminput": 40, "llmoutput": 41, "lazystackedcompositespec": 42, "lazystackedtensorspec": 43, "multicategor": 45, "multidiscretetensorspec": 46, "multionehot": 47, "multionehotdiscretetensorspec": 48, "multistep": 49, "nested2t": 50, "nontensor": 51, "nontensorspec": 52, "onehot": 53, "onehotdiscretetensorspec": 54, "pairwisedataset": 55, "prioritizedreplaybuff": 56, "promptdata": 57, "prompttensordicttoken": 58, "querymodul": 59, "randomprojectionhash": 60, "replaybuff": 61, "rewarddata": 62, "rolloutfrommodel": 63, "siphash": 64, "stack": [65, 219], "stackedcomposit": 66, "ted2flat": 67, "ted2nest": 68, "tensordictprioritizedreplaybuff": 70, "tensordictreplaybuff": 71, "tensordicttoken": 72, "tensormap": 73, "tokenizeddatasetload": 75, "unbound": 77, "unboundedcontinu": 78, "unboundedcontinuoustensorspec": 79, "unboundeddiscret": 80, "unboundeddiscretetensorspec": 81, "check_no_exclusive_kei": 82, "consolidate_spec": 83, "contains_lazy_spec": 84, "create_infinite_iter": 85, "get_dataload": 86, "flatstoragecheckpoint": 87, "h5storagecheckpoint": 88, "immutabledatasetwrit": 89, "lazymemmapstorag": 90, "lazystackstorag": 91, "lazytensorstorag": 92, "liststorag": 93, "liststoragecheckpoint": 94, "nestedstoragecheckpoint": 95, "prioritizedsampl": 96, "prioritizedslicesampl": 97, "randomsampl": 98, "replaybufferensembl": 99, "roundrobinwrit": 100, "sampler": 101, "samplerensembl": 102, "samplerwithoutreplac": 103, "slicesampl": 104, "slicesamplerwithoutreplac": 105, "storagecheckpointerbas": 107, "storageensembl": 108, "storageensemblecheckpoint": 109, "tensordictmaxvaluewrit": 110, "tensordictroundrobinwrit": 111, "tensorstorag": 112, "tensorstoragecheckpoint": 113, "writer": 114, "writerensembl": 115, "braxenv": 116, "braxwrapp": 117, "chessenv": 118, "dmcontrolenv": 119, "dmcontrolwrapp": 120, "envbas": [121, 431], "envcreat": 122, "envmetadata": 123, "gymenv": 124, "gymlikeenv": 125, "gymwrapp": 126, "habitatenv": 127, "isaacgymenv": 128, "isaacgymwrapp": 129, "jumanjienv": 130, "jumanjiwrapp": 131, "llmenv": 132, "llmhashingenv": 133, "mogymenv": 134, "mogymwrapp": 135, "marlgroupmaptyp": 136, "meltingpotenv": 137, "meltingpotwrapp": 138, "modelbasedenvbas": 139, "multithreadedenv": 140, "multithreadedenvwrapp": 141, "openmlenv": 142, "openspielenv": 143, "openspielwrapp": 144, "parallelenv": 145, "pendulumenv": 146, "pettingzooenv": 147, "pettingzoowrapp": 148, "randompolici": 149, "robohiveenv": 150, "smacv2env": 151, "smacv2wrapp": 152, "serialenv": 153, "tictactoeenv": 154, "unitymlagentsenv": 155, "unitymlagentswrapp": 156, "vmasenv": 157, "vmaswrapp": 158, "check_env_spec": 159, "check_marl_group": 160, "exploration_typ": 161, "get_available_librari": 162, "gym_backend": 163, "make_composite_from_td": 164, "dreamerdecod": 165, "dreamerenv": 166, "register_gym_spec_convers": 167, "set_exploration_typ": 168, "set_gym_backend": 169, "step_mdp": 170, "terminated_or_trunc": 171, "actiondiscret": 172, "actionmask": 173, "autoresetenv": 174, "autoresettransform": 175, "batchsizetransform": 176, "binarizereward": 177, "burnintransform": 178, "catfram": [179, 433], "cattensor": 180, "centercrop": 181, "cliptransform": 182, "conditionalskip": 184, "crop": 185, "dtypecasttransform": 186, "dataloadingprim": 187, "devicecasttransform": 188, "discreteactionproject": 189, "doubletofloat": 190, "endoflifetransform": 191, "excludetransform": 192, "finitetensordictcheck": 193, "flattenobserv": 194, "frameskiptransform": 195, "grayscal": 196, "hash": 197, "inittrack": 198, "klrewardtransform": 199, "linearisereward": 200, "multiact": 201, "noopresetenv": 202, "observationnorm": 203, "observationtransform": 204, "permutetransform": 205, "pinmemorytransform": 206, "r3mtransform": 207, "randomcroptensordict": 208, "removeemptyspec": 209, "renametransform": 210, "resiz": 211, "reward2gotransform": 212, "rewardclip": 213, "rewardsc": 214, "rewardsum": 215, "selecttransform": 216, "signtransform": 217, "squeezetransform": 218, "stepcount": 220, "targetreturn": 221, "tensordictprim": 222, "timemaxpool": 223, "timer": 224, "totensorimag": 225, "token": 226, "trajcount": 227, "transformedenv": 229, "unarytransform": 230, "unsqueezetransform": 231, "vc1transform": 232, "viprewardtransform": 233, "viptransform": 234, "vecgymenvtransform": 235, "vecnorm": [236, 436], "gsdenois": 237, "multisteptransform": 238, "implement_for": 239, "additivegaussianmodul": 240, "batchrenorm1d": 241, "cemplann": 242, "consistentdropout": 243, "consistentdropoutmodul": 244, "conv3dnet": 245, "convnet": 246, "dtactor": 247, "ddpgcnnactor": 248, "ddpgcnnqnet": 249, "ddpgmlpactor": 250, "ddpgmlpqnet": 251, "decisiontransform": 252, "delta": 253, "distributionaldqnnet": 254, "distributionalqvaluehook": 255, "dreameractor": 256, "duelingcnndqnet": 257, "egreedymodul": 258, "gru": 259, "grucel": 260, "grumodul": 261, "independentnorm": 262, "lstm": [263, 419], "lstmcell": 264, "lstmmodul": 265, "mlp": [266, 419], "mpcplannerbas": 267, "mppiplann": 268, "maskedcategor": 269, "maskedonehotcategor": 270, "multiagentconvnet": 271, "multiagentmlp": 272, "multiagentnetbas": 273, "noisylazylinear": 274, "noisylinear": 275, "obsdecod": 276, "obsencod": 277, "onehotcategor": 278, "onehotordin": 279, "onlinedtactor": 280, "ordin": 281, "ornsteinuhlenbeckprocessmodul": 282, "qmixer": [283, 412], "qvaluehook": 284, "rssmposterior": 285, "rssmprior": 286, "squeeze2dlay": 287, "squeezelay": 288, "tanhdelta": 289, "tanhnorm": 290, "truncatednorm": 291, "vdnmixer": 292, "vmapmodul": 293, "recurrent_mod": 294, "reset_nois": 295, "set_recurrent_mod": 296, "actor": [297, 411, 416, 422], "actorcriticoper": 298, "actorcriticwrapp": 299, "actorvalueoper": 300, "decisiontransformerinferencewrapp": 301, "distributionalqvalueactor": 302, "distributionalqvaluemodul": 303, "lmheadactorvalueoper": 304, "multistepactorwrapp": 305, "probabilisticactor": 306, "qvalueactor": [307, 411], "qvaluemodul": 308, "safemodul": [309, 411], "safeprobabilisticmodul": 310, "safeprobabilistictensordictsequenti": 311, "safesequenti": 312, "tanhmodul": 313, "valueoper": 314, "worldmodelwrapp": 315, "biased_softplu": 316, "get_primers_from_modul": 317, "inv_softplu": 318, "map": [319, 429], "a2closs": 320, "cqlloss": 321, "clipppoloss": 322, "crossqloss": 323, "ddpgloss": 324, "dqnloss": 325, "dtloss": 326, "discretecqlloss": 327, "discreteiqlloss": 328, "discretesacloss": 329, "distributionaldqnloss": 330, "dreameractorloss": 331, "dreamermodelloss": 332, "dreamervalueloss": 333, "gailloss": 334, "hardupd": 335, "iqlloss": 336, "klpenppoloss": 337, "lossmodul": [338, 416, 423], "onlinedtloss": 339, "ppoloss": 340, "redqloss": 341, "reinforceloss": 342, "sacloss": 343, "softupd": 344, "td3bcloss": 345, "td3loss": 346, "valueestim": 347, "default_value_kwarg": 348, "distance_loss": 349, "group_optim": 350, "hold_out_net": 351, "hold_out_param": 352, "qmixerloss": 353, "next_state_valu": 354, "gae": 355, "td0estim": 356, "td1estim": 357, "tdlambdaestim": 358, "valueestimatorbas": 359, "generalized_advantage_estim": 360, "reward2go": 361, "td0_advantage_estim": 362, "td0_return_estim": 363, "td1_advantage_estim": 364, "td1_return_estim": 365, "td_lambda_advantage_estim": 366, "td_lambda_return_estim": 367, "vec_generalized_advantage_estim": 368, "vec_td1_advantage_estim": 369, "vec_td1_return_estim": 370, "vec_td_lambda_advantage_estim": 371, "vec_td_lambda_return_estim": 372, "pixelrendertransform": 373, "tensordictrecord": 374, "videorecord": 375, "logger": [376, 413, 425, 426], "csvlogger": 377, "generate_exp_nam": 378, "get_logg": 379, "mlflowlogg": 380, "tensorboardlogg": 381, "wandblogg": 382, "set_auto_unwrap_transformed_env": 383, "batchsubsampl": 384, "clearcudacach": 385, "countframeslog": 386, "logscalar": 387, "logvalidationreward": 388, "optimizerhook": 389, "replaybuffertrain": 390, "rewardnorm": 391, "selectkei": 392, "trainer": [393, 413, 417], "trainerhookbas": 394, "updateweight": 395, "correct_for_frame_skip": 396, "get_stats_random_rollout": 397, "make_collector_offpolici": 398, "make_collector_onpolici": 399, "make_dqn_loss": 400, "make_replay_buff": 401, "make_target_updat": 402, "make_train": 403, "parallel_env_constructor": 404, "sync_async_collector": 405, "sync_sync_collector": 406, "transformed_env_constructor": 407, "readm": [408, 427], "tuto": [408, 427], "api": 409, "contribut": [410, 435], "content": 410, "modul": [411, 416, 419, 420, 422, 426, 435], "tensordictmodul": [411, 420, 422, 435], "wrapper": [411, 422], "probabilist": [411, 422], "q": [411, 417, 419, 422], "oper": 411, "join": 411, "hook": [411, 413, 417], "regular": 411, "planner": 411, "object": [412, 416, 423, 435], "torch": 412, "vmap": [412, 435], "dqn": [412, 417, 419], "ddpg": [412, 416, 429], "sac": 412, "redq": 412, "crossq": 412, "iql": 412, "cql": 412, "gail": 412, "dt": 412, "td3": 412, "bc": 412, "ppo": [412, 418, 430], "head": 412, "a2c": 412, "dreamer": 412, "builder": 413, "_util": 414, "comput": [415, 417, 431, 434], "time": [415, 416, 434], "code": [416, 431], "overview": [416, 419], "setup": [416, 419], "__init__": 416, "estim": 416, "put": 416, "togeth": [416, 431], "call": 416, "parallel": [416, 428, 436], "execut": [416, 428, 431], "stat": 416, "build": [416, 417, 426, 433], "evalu": 416, "construct": 416, "target": [416, 417, 423], "network": [416, 417, 418, 419, 422, 429, 430], "updat": 416, "experi": [416, 431], "result": [416, 418, 429, 430], "conclus": [416, 417, 418, 419, 420, 429, 430, 431, 433], "next": [416, 418, 421, 424, 429, 430, 433], "deep": 417, "collect": [417, 418, 424], "paramet": [417, 418, 423], "hyperparamet": [417, 418, 429, 430], "regist": 417, "possibl": 417, "improv": 417, "defin": [418, 429, 430], "loop": [418, 419, 420, 426, 429, 430, 431], "recurr": [419, 420], "convolut": 419, "select": 419, "further": [419, 423], "read": 419, "export": 420, "introduct": [420, 435], "fast": 420, "recap": 420, "simpl": [420, 431], "stochast": 420, "aotinductor": 420, "free": 420, "c": 420, "onnx": 420, "run": [420, 421, 436], "rollout": [420, 421, 428, 429, 430, 431, 436], "creat": 421, "s": [422, 423], "output": 423, "consider": 423, "log": 425, "first": 426, "divers": 428, "competit": 429, "group": 429, "critic": [429, 430], "pendulum": 431, "write": 431, "_step": 431, "simul": 431, "_reset": 431, "metadata": 431, "_spec": 431, "shape": 431, "seed": [431, 436], "wrap": 431, "class": [431, 435], "test": 431, "our": 431, "pretrain": 432, "vanilla": 433, "integr": 433, "tensorclass": 433, "other": 433, "pytre": 433, "iter": 433, "over": 433, "fix": 433, "priorit": 433, "save": 433, "raw": 433, "imag": 433, "more": 433, "complex": 433, "config": 435, "sequenc": 435, "program": 435, "ensembl": 435, "meta": 435, "sync": 435, "multiprocess": 435, "async": 435, "frame_skip": 436, "deepmind": 436, "control": 436, "devic": 436, "close": 436, "access": 436, "attribut": 436, "kwarg": 436}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})