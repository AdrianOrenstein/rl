Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.LLMData", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.CategoricalSequential", "reference/generated/torchrl.modules.llm.LLMOnDevice", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.vLLMWorker", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.LLMData.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.CategoricalSequential.rst", "reference/generated/torchrl.modules.llm.LLMOnDevice.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.vLLMWorker.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "vLLMUpdater", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "ContentBase", "History", "LLMData", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "BrowserTransform", "DataLoadingPrimer", "KLRewardTransform", "MCPToolTransform", "PythonInterpreter", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "CategoricalSequential", "LLMOnDevice", "TransformersWrapper", "make_vllm_worker", "stateless_init_process_group", "vLLMWorker", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 100, 101, 102, 103, 104, 108, 110, 111, 113, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 144, 145, 151, 152, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 217, 223, 225, 226, 229, 233, 238, 239, 243, 244, 245, 246, 248, 257, 258, 259, 260, 261, 263, 264, 265, 268, 271, 272, 273, 275, 278, 282, 283, 285, 286, 287, 288, 290, 295, 296, 298, 300, 302, 303, 304, 308, 309, 311, 319, 324, 325, 327, 331, 333, 335, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 359, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 420, 422, 425, 429, 435, 436, 440, 441, 444, 451, 452, 453, 454, 457, 458, 459, 460, 464, 465, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 484, 485], "open": [0, 5, 7, 61, 63, 70, 84, 95, 96, 97, 101, 184, 276, 335, 398, 465, 476, 478, 479, 484], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "reinforc": [0, 3, 9, 149, 150, 179, 215, 273, 280, 285, 286, 287, 288, 292, 319, 347, 364, 365, 367, 370, 371, 372, 374, 379, 380, 386, 387, 388, 389, 456, 463, 465, 469, 470, 475, 480, 483, 484], "learn": [0, 3, 7, 8, 9, 22, 55, 133, 149, 150, 154, 157, 166, 179, 215, 273, 280, 285, 286, 287, 288, 292, 305, 312, 318, 319, 347, 364, 365, 367, 370, 371, 372, 374, 378, 379, 380, 385, 386, 387, 388, 389, 456, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 480, 482, 483, 484, 485], "rl": [0, 1, 2, 3, 5, 8, 10, 15, 16, 18, 21, 29, 142, 151, 215, 257, 312, 341, 350, 358, 364, 366, 381, 382, 384, 386, 431, 455, 457, 458, 459, 460, 461, 464, 465, 466, 472, 475, 478, 479, 481, 482, 485], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 25, 64, 80, 130, 131, 132, 141, 152, 176, 185, 337, 456, 457, 459, 460, 462, 464, 465, 466, 468, 469, 470, 472, 478, 479, 480, 485], "pytorch": [0, 1, 2, 3, 29, 31, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 215, 260, 261, 280, 296, 300, 311, 312, 440, 455, 457, 459, 461, 464, 466, 467, 471, 475, 478, 479, 480, 484, 485], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 23, 25, 29, 35, 42, 47, 55, 65, 66, 72, 77, 80, 127, 130, 133, 137, 141, 145, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 215, 236, 264, 272, 273, 275, 280, 300, 318, 331, 333, 337, 354, 397, 399, 429, 430, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 107, 108, 110, 114, 115, 116, 121, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 144, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 205, 207, 208, 209, 211, 212, 214, 215, 218, 219, 221, 223, 225, 226, 227, 230, 233, 237, 238, 239, 243, 244, 248, 251, 255, 256, 257, 258, 262, 263, 264, 265, 266, 268, 270, 272, 273, 275, 276, 279, 281, 282, 283, 285, 295, 296, 298, 299, 300, 302, 304, 305, 306, 308, 309, 310, 312, 319, 328, 330, 331, 333, 337, 341, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 422, 429, 430, 435, 452, 453, 454, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 110, 127, 128, 129, 130, 133, 136, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 239, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 268, 269, 271, 272, 273, 275, 354, 382, 389, 397, 399, 454, 465, 466, 468, 469, 478, 479, 480, 482], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 239, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 315, 317, 318, 319, 320, 321, 327, 328, 329, 331, 333, 334, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 380, 381, 382, 384, 385, 386, 387, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 420, 421, 422, 431, 437, 440, 443, 444, 448, 450, 451, 454, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "pypi": [0, 2, 484], "see": [0, 1, 2, 3, 6, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 94, 102, 108, 110, 115, 116, 127, 130, 133, 137, 140, 142, 144, 145, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 219, 221, 237, 243, 258, 261, 263, 264, 265, 268, 270, 272, 273, 274, 275, 280, 281, 282, 283, 296, 298, 299, 300, 302, 303, 309, 310, 311, 318, 320, 328, 329, 331, 333, 337, 340, 342, 344, 350, 353, 354, 367, 378, 382, 389, 397, 399, 422, 429, 437, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 482, 484, 485], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 108, 110, 121, 127, 130, 133, 136, 137, 138, 140, 141, 144, 145, 149, 150, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 261, 264, 268, 273, 274, 275, 276, 277, 278, 281, 292, 300, 303, 311, 331, 333, 337, 341, 346, 347, 353, 354, 358, 364, 374, 382, 384, 397, 399, 402, 407, 415, 429, 436, 457, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 484, 485], "about": [0, 3, 5, 7, 9, 22, 23, 25, 26, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 80, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 459, 460, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 482, 484, 485], "instruct": [0, 6, 7, 10, 28, 142, 180, 185, 225, 227, 458, 460, 464, 465, 466, 467, 476, 478, 479, 482], "dedic": [0, 1, 2, 3, 22, 23, 25, 27, 50, 69, 78, 79, 110, 157, 166, 342, 343, 344, 458, 459, 464, 469, 471, 472, 474, 477, 479], "section": [0, 2, 3, 4, 32, 133, 296, 300, 458, 465, 468, 469, 474, 478, 479], "below": [0, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 69, 72, 77, 78, 79, 85, 94, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 221, 237, 243, 258, 263, 264, 265, 268, 270, 275, 282, 283, 296, 299, 300, 303, 309, 328, 331, 333, 337, 350, 353, 397, 399, 437, 464, 465, 466, 467, 468, 469, 478, 480], "pip": [0, 10, 468, 469, 470, 471, 472, 473, 474, 476, 479, 484, 485], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 41, 42, 47, 48, 50, 51, 53, 55, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 83, 84, 91, 94, 95, 96, 97, 101, 102, 104, 108, 109, 110, 113, 115, 116, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 212, 214, 215, 216, 217, 218, 222, 223, 226, 230, 233, 238, 239, 241, 243, 244, 247, 248, 251, 252, 257, 258, 259, 262, 263, 265, 267, 268, 270, 271, 272, 273, 275, 276, 282, 283, 289, 290, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 330, 331, 333, 337, 341, 345, 347, 349, 350, 351, 352, 354, 357, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 426, 431, 437, 444, 450, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 484, 485], "python": [0, 1, 3, 5, 6, 7, 10, 15, 16, 27, 62, 67, 68, 69, 72, 77, 78, 79, 84, 110, 153, 169, 170, 195, 205, 296, 297, 298, 300, 301, 302, 306, 307, 458, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "first": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 101, 103, 108, 115, 116, 121, 123, 127, 130, 133, 136, 137, 138, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 211, 212, 215, 216, 220, 221, 230, 237, 239, 243, 244, 260, 261, 265, 268, 273, 276, 283, 290, 296, 298, 300, 302, 303, 306, 307, 309, 311, 314, 341, 345, 346, 347, 350, 351, 353, 354, 366, 376, 381, 382, 384, 397, 421, 422, 439, 459, 463, 464, 465, 466, 467, 468, 469, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "low": [0, 3, 36, 39, 66, 77, 82, 85, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 208, 218, 225, 233, 236, 258, 266, 326, 327, 328, 345, 347, 350, 354, 357, 464, 465, 466, 468, 478, 479, 480, 484], "high": [0, 3, 9, 36, 39, 61, 63, 70, 78, 84, 85, 95, 96, 97, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 200, 208, 218, 225, 233, 236, 238, 258, 266, 326, 327, 328, 345, 347, 350, 354, 357, 398, 402, 407, 415, 464, 465, 466, 478, 479, 480, 482, 484], "level": [0, 2, 3, 4, 28, 39, 40, 48, 62, 67, 68, 69, 74, 78, 79, 110, 136, 138, 215, 256, 264, 298, 302, 381, 464, 465, 468, 472, 484], "abstract": [0, 1, 3, 8, 20, 81, 82, 125, 133, 240, 304, 406, 432, 441, 461, 466, 468, 480, 484], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 110, 113, 114, 115, 116, 117, 119, 121, 123, 127, 130, 133, 134, 136, 137, 138, 144, 145, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 206, 207, 208, 210, 211, 212, 214, 215, 218, 219, 221, 223, 224, 225, 226, 227, 229, 230, 233, 235, 236, 237, 238, 241, 243, 248, 251, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 277, 279, 280, 288, 290, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307, 308, 309, 310, 312, 315, 320, 323, 331, 333, 336, 337, 340, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 429, 430, 437, 440, 450, 454, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "intend": [0, 7, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 214, 225, 330, 382, 459, 484], "effici": [0, 1, 2, 4, 8, 17, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 296, 312, 367, 459, 464, 465, 466, 467, 468, 471, 472, 474, 477, 478, 479, 481, 482, 484], "modular": [0, 356, 458, 468, 482, 484], "document": [0, 2, 5, 7, 11, 22, 23, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 142, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 331, 333, 337, 397, 399, 455, 465, 467, 468, 469, 472, 475, 484], "properli": [0, 1, 3, 29, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 221, 298, 302, 402, 466, 473, 478, 479, 480, 484], "test": [0, 3, 5, 29, 127, 128, 129, 130, 133, 137, 143, 144, 145, 149, 150, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 192, 263, 268, 435, 450, 458, 466, 467, 468, 481, 484], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 107, 108, 110, 113, 115, 116, 117, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 206, 207, 208, 211, 212, 214, 215, 219, 220, 221, 223, 226, 227, 228, 233, 236, 237, 239, 241, 243, 248, 250, 251, 252, 255, 256, 257, 258, 260, 263, 264, 265, 268, 270, 271, 272, 273, 275, 277, 278, 279, 280, 285, 286, 287, 288, 289, 292, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 312, 316, 318, 319, 321, 322, 323, 331, 333, 335, 337, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 420, 422, 424, 427, 428, 429, 430, 431, 436, 450, 452, 453, 456, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 485], "code": [0, 3, 5, 7, 8, 15, 16, 66, 72, 127, 130, 133, 137, 142, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 195, 243, 265, 268, 278, 296, 297, 300, 301, 350, 354, 356, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485], "aim": [0, 2, 3, 7, 50, 73, 74, 243, 268, 270, 303, 443, 457, 459, 460, 464, 465, 484], "support": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 61, 63, 65, 70, 77, 84, 94, 95, 96, 97, 101, 103, 117, 119, 123, 124, 126, 127, 128, 129, 130, 136, 138, 143, 152, 154, 157, 159, 163, 176, 184, 186, 191, 197, 212, 215, 227, 233, 239, 258, 259, 262, 266, 273, 292, 316, 318, 327, 330, 331, 333, 337, 346, 347, 350, 353, 356, 374, 382, 397, 398, 402, 403, 404, 405, 427, 456, 458, 459, 461, 466, 467, 469, 470, 476, 479, 480, 482, 484], "research": [0, 7, 9, 149, 150, 278, 484], "most": [0, 1, 2, 3, 7, 8, 15, 16, 55, 57, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 225, 271, 464, 466, 468, 469, 470, 471, 472, 473, 474, 480, 484, 485], "written": [0, 1, 2, 3, 29, 44, 61, 62, 63, 65, 67, 68, 69, 70, 75, 78, 79, 83, 84, 95, 96, 97, 99, 101, 108, 110, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 184, 185, 186, 187, 188, 193, 206, 207, 208, 215, 227, 230, 235, 236, 251, 256, 259, 260, 265, 271, 275, 276, 281, 319, 341, 350, 353, 354, 358, 364, 366, 381, 384, 386, 397, 398, 401, 420, 421, 422, 459, 460, 461, 464, 467, 468, 470, 477, 480, 484], "highli": [0, 2, 469, 484, 485], "wai": [0, 1, 2, 3, 4, 110, 121, 141, 179, 180, 183, 215, 243, 246, 263, 264, 270, 271, 298, 300, 302, 384, 402, 403, 404, 405, 459, 464, 465, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 482, 484, 485], "easili": [0, 1, 2, 3, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 458, 460, 464, 465, 466, 469, 470, 471, 474, 478, 479, 484, 485], "swap": [0, 1, 3, 136, 271, 466, 468, 481, 484], "compon": [0, 1, 2, 3, 62, 66, 67, 68, 69, 78, 79, 101, 102, 103, 104, 110, 117, 119, 123, 292, 321, 346, 347, 352, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 436, 440, 458, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 484], "transform": [0, 1, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 42, 50, 55, 62, 64, 67, 68, 69, 71, 78, 79, 80, 96, 98, 99, 106, 110, 119, 124, 127, 130, 133, 134, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 284, 285, 289, 292, 293, 298, 302, 317, 320, 321, 327, 329, 333, 337, 345, 348, 349, 357, 360, 361, 363, 370, 383, 399, 420, 422, 437, 454, 456, 463, 465, 467, 468, 470, 472, 473, 474, 475, 476, 481, 483], "them": [0, 2, 3, 7, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 35, 39, 40, 42, 47, 48, 62, 64, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 110, 121, 126, 127, 130, 133, 134, 137, 141, 145, 148, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 197, 223, 226, 233, 236, 258, 262, 265, 266, 272, 273, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 329, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 365, 367, 373, 380, 381, 385, 387, 389, 390, 403, 404, 405, 422, 464, 465, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 484, 485], "write": [0, 2, 3, 8, 15, 16, 18, 21, 29, 31, 50, 55, 61, 62, 63, 64, 67, 68, 69, 70, 78, 79, 83, 84, 95, 96, 97, 108, 110, 115, 119, 126, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 241, 242, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 341, 353, 354, 356, 358, 367, 368, 369, 371, 372, 373, 380, 385, 387, 389, 390, 398, 399, 401, 406, 422, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485], "new": [0, 1, 2, 3, 4, 8, 15, 16, 18, 21, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 107, 108, 110, 114, 127, 130, 133, 137, 145, 152, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 212, 251, 255, 264, 265, 272, 273, 275, 290, 296, 298, 302, 319, 331, 333, 337, 353, 354, 359, 364, 365, 366, 369, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 398, 399, 400, 429, 460, 464, 466, 469, 471, 478, 479, 480, 484, 485], "ones": [0, 2, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 115, 116, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 216, 219, 220, 223, 224, 226, 239, 243, 248, 255, 258, 264, 265, 268, 270, 273, 275, 280, 306, 307, 318, 330, 331, 333, 337, 353, 364, 365, 366, 367, 368, 380, 381, 384, 385, 387, 389, 390, 397, 399, 408, 464, 466, 468, 478, 479, 480, 482, 484, 485], "littl": [0, 1, 3, 80, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265, 280, 364, 366, 381, 384, 386, 466, 467, 468, 472, 482, 484, 485], "effort": [0, 3, 480, 482, 484], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 121, 123, 124, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 203, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 239, 242, 243, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 325, 327, 328, 330, 331, 333, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 420, 421, 429, 430, 431, 433, 435, 437, 440, 442, 443, 444, 450, 454, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "repo": [0, 6, 215, 259, 268, 457, 479, 484], "attempt": [0, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 275, 280, 331, 333, 337, 354, 369, 372, 380, 397, 399, 400, 460, 471, 484], "align": [0, 296, 300, 484], "exist": [0, 1, 2, 3, 4, 22, 27, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 216, 224, 263, 265, 275, 276, 290, 331, 333, 337, 354, 367, 387, 397, 398, 399, 444, 454, 458, 478, 479, 484, 485], "ecosystem": [0, 468, 472, 484], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 110, 113, 115, 121, 123, 127, 130, 133, 134, 137, 141, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 215, 237, 256, 257, 258, 259, 260, 262, 263, 264, 265, 275, 277, 296, 298, 300, 302, 308, 310, 327, 331, 333, 337, 347, 349, 354, 364, 367, 381, 382, 384, 386, 397, 398, 399, 402, 422, 458, 460, 464, 465, 466, 467, 468, 469, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485], "dataset": [0, 46, 50, 61, 62, 63, 64, 69, 70, 71, 76, 78, 79, 83, 84, 94, 95, 96, 97, 100, 108, 110, 113, 115, 116, 154, 179, 180, 183, 184, 185, 186, 189, 272, 398, 422, 456, 458, 464, 465, 469, 481, 482, 484, 485], "pillar": [0, 484], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 183, 186, 187, 188, 189, 190, 192, 197, 202, 208, 209, 211, 212, 214, 215, 216, 220, 221, 223, 224, 225, 226, 231, 237, 238, 239, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 271, 272, 273, 276, 279, 281, 298, 302, 304, 305, 349, 371, 375, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 430, 431, 433, 435, 443, 444, 445, 446, 450, 451, 452, 453, 454, 456, 457, 459, 460, 463, 468, 470, 471, 472, 473, 475, 481, 482, 483], "model": [0, 3, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 32, 35, 41, 42, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 95, 96, 97, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 223, 243, 258, 268, 270, 274, 275, 282, 283, 284, 289, 291, 303, 304, 305, 309, 310, 317, 320, 329, 331, 333, 334, 337, 342, 343, 344, 348, 353, 359, 361, 364, 365, 366, 367, 369, 370, 371, 372, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 397, 398, 399, 400, 440, 445, 446, 447, 456, 457, 460, 461, 463, 466, 469, 472, 475, 478, 479, 480, 482, 483, 485], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 192, 197, 200, 207, 209, 212, 214, 215, 220, 223, 224, 226, 228, 230, 233, 235, 239, 245, 248, 255, 256, 262, 264, 265, 266, 271, 273, 275, 279, 280, 292, 295, 298, 302, 305, 308, 309, 319, 321, 330, 333, 334, 335, 337, 340, 341, 346, 349, 350, 351, 353, 354, 356, 357, 358, 364, 365, 366, 367, 368, 369, 371, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 398, 400, 402, 403, 404, 405, 406, 420, 422, 429, 431, 437, 440, 442, 445, 450, 452, 453, 454, 456, 459, 460, 461, 463, 467, 468, 469, 470, 471, 475, 476, 480, 481, 482, 483, 485], "util": [0, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 31, 35, 42, 47, 55, 65, 66, 69, 71, 72, 77, 115, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 150, 157, 158, 159, 160, 161, 166, 167, 168, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 243, 248, 258, 270, 275, 278, 281, 282, 283, 289, 296, 298, 300, 302, 331, 333, 337, 360, 361, 362, 363, 382, 397, 399, 450, 456, 462, 464, 466, 468, 470, 471, 472, 479, 480, 482, 484, 485], "e": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 107, 108, 121, 123, 127, 130, 133, 134, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 212, 214, 216, 219, 220, 221, 222, 230, 233, 236, 237, 239, 243, 251, 258, 260, 263, 264, 265, 268, 270, 275, 276, 296, 298, 299, 300, 302, 305, 309, 321, 327, 328, 331, 333, 335, 337, 340, 345, 347, 349, 350, 352, 353, 354, 364, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 398, 399, 401, 402, 403, 404, 405, 420, 431, 443, 453, 458, 459, 460, 465, 466, 468, 470, 471, 473, 478, 479, 481, 482, 484, 485], "g": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 121, 127, 130, 133, 134, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 212, 214, 216, 219, 220, 230, 233, 236, 239, 243, 251, 258, 260, 263, 264, 265, 268, 270, 275, 276, 296, 298, 299, 300, 301, 302, 305, 309, 327, 328, 331, 333, 335, 337, 345, 350, 353, 354, 367, 387, 397, 398, 399, 401, 411, 412, 413, 414, 416, 417, 418, 419, 420, 453, 459, 460, 465, 466, 468, 470, 473, 478, 479, 480, 481, 482, 484, 485], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 55, 62, 67, 68, 69, 71, 75, 78, 79, 110, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 215, 248, 256, 275, 280, 298, 302, 319, 366, 381, 384, 397, 437, 440, 442, 445, 446, 450, 452, 453, 456, 460, 461, 468, 482, 485], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 100, 107, 108, 110, 111, 113, 115, 116, 117, 122, 125, 126, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 215, 219, 223, 226, 233, 243, 255, 258, 263, 264, 265, 268, 270, 271, 272, 273, 275, 279, 282, 283, 296, 297, 300, 301, 303, 305, 308, 309, 331, 333, 337, 341, 346, 347, 350, 352, 353, 354, 358, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 426, 431, 443, 450, 451, 452, 453, 454, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 485], "etc": [0, 2, 3, 7, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 255, 265, 275, 276, 303, 309, 327, 331, 333, 337, 397, 399, 458, 460, 465, 466, 472, 482, 484, 485], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 21, 22, 24, 25, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 110, 114, 117, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 203, 207, 208, 211, 215, 220, 223, 226, 227, 235, 238, 239, 255, 256, 258, 262, 263, 264, 265, 272, 273, 275, 277, 280, 282, 283, 303, 308, 309, 310, 319, 330, 331, 333, 337, 349, 355, 356, 364, 366, 381, 384, 386, 389, 393, 394, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 431, 440, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "few": [0, 2, 8, 116, 137, 188, 422, 431, 458, 466, 467, 470, 478, 479, 482, 484, 485], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 61, 63, 85, 127, 130, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 223, 226, 354, 358, 384, 424, 459, 464, 466, 467, 476, 478, 479, 480, 484, 485], "possibl": [0, 2, 3, 4, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 102, 108, 115, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 219, 243, 258, 263, 264, 265, 268, 270, 275, 282, 283, 296, 297, 300, 301, 331, 333, 337, 353, 397, 399, 420, 435, 440, 459, 464, 466, 467, 468, 470, 472, 473, 478, 479, 480, 482, 484, 485], "standard": [0, 2, 3, 57, 130, 239, 250, 272, 273, 277, 278, 279, 293, 305, 311, 312, 317, 345, 366, 381, 384, 389, 390, 402, 403, 404, 405, 464, 465, 469, 470, 479, 482, 484], "numpi": [0, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 233, 261, 266, 276, 440, 468, 480, 482, 484, 485], "common": [0, 2, 3, 4, 82, 127, 137, 143, 209, 227, 342, 343, 344, 348, 364, 365, 366, 367, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 450, 457, 459, 460, 461, 464, 466, 470, 473, 477, 478, 479, 480, 481, 484, 485], "openai": [0, 7, 32, 136, 138, 145, 163, 187, 466, 480, 484, 485], "gym": [0, 1, 3, 4, 8, 15, 16, 18, 21, 27, 28, 29, 67, 127, 130, 133, 134, 136, 137, 138, 139, 141, 142, 145, 149, 150, 152, 153, 157, 158, 161, 163, 166, 167, 168, 171, 172, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 205, 211, 215, 218, 227, 234, 235, 239, 241, 246, 248, 251, 258, 264, 271, 272, 275, 276, 399, 450, 457, 464, 465, 466, 467, 469, 473, 474, 480, 481, 482], "onli": [0, 1, 2, 3, 4, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 103, 107, 108, 110, 115, 116, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 141, 144, 145, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 211, 215, 216, 218, 219, 220, 221, 223, 225, 226, 230, 233, 237, 239, 243, 244, 248, 255, 256, 257, 258, 259, 263, 264, 265, 268, 270, 272, 273, 275, 276, 280, 300, 302, 308, 309, 331, 333, 337, 341, 345, 346, 350, 351, 353, 354, 355, 356, 364, 366, 367, 368, 372, 373, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 397, 399, 402, 403, 404, 405, 406, 422, 429, 444, 458, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 484, 485], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 243, 244, 246, 247, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 321, 322, 323, 326, 327, 328, 330, 331, 333, 334, 337, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 424, 427, 429, 431, 433, 434, 435, 436, 437, 438, 440, 444, 450, 452, 453, 454, 459, 467, 469, 472, 478, 479, 480, 482, 484], "On": [0, 3, 7, 22, 23, 25, 27, 39, 297, 301, 459, 465, 478, 479], "end": [0, 2, 3, 15, 16, 21, 29, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 99, 108, 110, 114, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 227, 233, 241, 256, 257, 263, 265, 275, 282, 283, 296, 297, 300, 301, 304, 331, 333, 337, 349, 367, 387, 397, 399, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "come": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 50, 55, 121, 127, 130, 133, 137, 144, 145, 148, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 223, 226, 340, 341, 342, 343, 344, 350, 358, 364, 366, 381, 384, 386, 422, 464, 465, 466, 467, 471, 472, 473, 474, 478, 479, 482, 484, 485], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 38, 39, 40, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 84, 95, 96, 97, 101, 102, 103, 110, 114, 117, 123, 127, 130, 133, 135, 137, 138, 144, 145, 149, 150, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 204, 205, 207, 209, 211, 212, 215, 216, 219, 223, 226, 233, 234, 235, 236, 243, 248, 256, 257, 258, 259, 263, 264, 265, 268, 270, 272, 273, 275, 276, 296, 298, 300, 302, 304, 308, 309, 316, 318, 319, 327, 331, 333, 337, 340, 345, 353, 354, 366, 367, 373, 378, 381, 382, 384, 387, 397, 398, 399, 402, 406, 422, 430, 431, 435, 437, 446, 454, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 484, 485], "re": [0, 2, 3, 8, 13, 22, 23, 25, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 110, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 230, 275, 302, 306, 307, 310, 331, 333, 337, 350, 354, 397, 399, 429, 461, 464, 466, 467, 469, 471, 476, 477, 478, 480, 484, 485], "usabl": [0, 461, 467, 484], "function": [0, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 101, 102, 103, 104, 110, 117, 119, 123, 127, 130, 133, 134, 137, 138, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 205, 206, 207, 211, 212, 223, 226, 233, 235, 262, 263, 265, 266, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 313, 314, 315, 317, 319, 322, 323, 325, 328, 330, 331, 333, 337, 342, 343, 344, 345, 347, 349, 350, 352, 353, 354, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 440, 450, 456, 458, 459, 464, 467, 468, 469, 470, 473, 476, 477, 480, 482, 485], "cost": [0, 2, 38, 102, 364, 366, 381, 384, 386, 460, 464, 465, 468, 478, 479, 480, 482], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 100, 102, 108, 110, 111, 113, 115, 116, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 283, 284, 285, 286, 287, 288, 290, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 315, 317, 320, 322, 323, 326, 327, 328, 329, 331, 333, 335, 337, 338, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 426, 430, 440, 443, 445, 450, 451, 452, 453, 454, 456, 458, 459, 461, 464, 465, 466, 468, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 35, 42, 47, 55, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 80, 83, 84, 95, 96, 97, 103, 107, 108, 111, 115, 123, 127, 130, 133, 134, 137, 141, 145, 148, 152, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 214, 215, 223, 226, 233, 258, 261, 263, 272, 273, 275, 298, 302, 308, 309, 319, 331, 333, 334, 335, 336, 337, 347, 352, 397, 398, 399, 456, 461, 464, 465, 467, 468, 469, 476, 478, 479, 480, 481, 482, 484, 485], "good": [0, 1, 4, 9, 157, 464, 466, 467, 468, 470, 479, 484, 485], "runtim": [0, 2, 3, 31, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 480], "perform": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 96, 127, 130, 131, 132, 133, 136, 137, 138, 139, 144, 145, 157, 158, 161, 163, 166, 167, 168, 171, 172, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 223, 226, 233, 238, 260, 263, 265, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 310, 313, 314, 317, 318, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 366, 367, 376, 384, 387, 397, 399, 435, 440, 460, 464, 465, 466, 467, 468, 469, 472, 474, 477, 478, 479, 480, 485], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 20, 22, 23, 25, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 99, 108, 110, 115, 116, 119, 126, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 148, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 221, 256, 258, 272, 275, 281, 298, 302, 319, 331, 333, 337, 342, 343, 344, 354, 367, 373, 378, 382, 389, 397, 399, 422, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 485], "read": [0, 2, 3, 7, 31, 39, 40, 44, 48, 62, 64, 67, 68, 69, 71, 74, 75, 78, 79, 101, 102, 103, 104, 107, 110, 117, 119, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 241, 242, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 271, 272, 275, 281, 315, 341, 342, 343, 344, 346, 349, 350, 353, 354, 356, 358, 359, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 399, 400, 402, 403, 404, 405, 406, 422, 435, 440, 459, 464, 465, 466, 468, 469, 470, 477, 478, 479, 480, 481, 484, 485], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 17, 27, 31, 191, 461, 464, 469, 472, 476, 477, 481, 485], "beyond": [0, 50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 468], "api": [0, 1, 2, 3, 5, 31, 39, 40, 42, 48, 50, 65, 74, 77, 82, 130, 133, 159, 160, 163, 188, 190, 243, 270, 272, 273, 280, 331, 333, 337, 397, 459, 460, 461, 468, 469, 470, 471, 472, 473, 478, 479, 480, 482, 484, 485], "check": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 90, 92, 98, 99, 106, 115, 127, 130, 133, 134, 136, 137, 138, 145, 151, 157, 158, 161, 166, 167, 168, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 216, 221, 229, 235, 244, 258, 261, 265, 275, 276, 290, 331, 333, 336, 337, 341, 346, 347, 350, 351, 352, 353, 354, 367, 378, 389, 397, 399, 422, 455, 459, 460, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "paper": [0, 128, 129, 131, 132, 139, 143, 144, 149, 150, 152, 153, 163, 171, 172, 243, 268, 270, 283, 296, 320, 329, 371, 379, 389, 464, 466, 478, 479], "releas": [0, 4, 7, 10, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "sync": [0, 1, 15, 16, 21, 22, 23, 24, 25, 26, 27, 127, 334, 442, 450, 461, 464], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 35, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 95, 96, 97, 110, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 258, 263, 272, 275, 280, 331, 333, 337, 355, 356, 397, 398, 399, 402, 422, 464, 466, 467, 471, 474, 478, 479, 480, 485], "make": [0, 1, 2, 3, 4, 7, 11, 35, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 82, 84, 95, 96, 97, 110, 113, 117, 119, 126, 127, 130, 133, 137, 138, 141, 142, 144, 145, 147, 153, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 206, 208, 221, 228, 236, 239, 243, 244, 248, 252, 256, 260, 264, 268, 275, 278, 281, 296, 297, 298, 300, 301, 302, 308, 309, 311, 331, 333, 337, 346, 354, 364, 366, 381, 384, 386, 397, 398, 399, 402, 403, 404, 405, 420, 437, 446, 454, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "sure": [0, 1, 3, 4, 7, 42, 117, 130, 137, 141, 183, 188, 190, 221, 248, 346, 454, 459, 464, 466, 467, 468, 471, 478, 479, 480, 482, 484, 485], "alwai": [0, 2, 3, 15, 16, 25, 35, 36, 42, 47, 55, 65, 66, 72, 77, 82, 85, 94, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 238, 260, 272, 273, 275, 331, 333, 336, 337, 374, 382, 397, 399, 459, 460, 465, 466, 467, 468, 478, 479, 480, 482], "enjoi": [0, 2, 3, 472], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 152, 155, 156, 159, 160, 437, 466, 478, 479, 480, 484], "featur": [0, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 31, 35, 42, 59, 65, 77, 82, 83, 108, 115, 116, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 193, 212, 215, 230, 233, 235, 241, 258, 259, 267, 272, 278, 282, 283, 293, 294, 296, 297, 298, 300, 301, 302, 303, 308, 311, 312, 331, 333, 337, 354, 361, 364, 366, 381, 384, 386, 397, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 454, 459, 460, 464, 465, 466, 467, 468, 470, 471, 472, 474, 480, 482, 484, 485], "recent": [0, 7, 271, 273, 276, 485], "version": [0, 1, 2, 3, 6, 29, 34, 35, 37, 40, 42, 43, 47, 48, 49, 52, 54, 55, 58, 60, 61, 63, 65, 66, 71, 72, 77, 86, 87, 88, 89, 115, 127, 130, 133, 136, 137, 138, 139, 145, 152, 153, 157, 158, 159, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 215, 262, 271, 272, 273, 275, 276, 278, 298, 302, 310, 316, 331, 333, 337, 344, 364, 366, 381, 382, 384, 386, 387, 397, 399, 402, 405, 457, 458, 459, 460, 464, 466, 467, 468, 469, 471, 474, 478, 479, 480, 481, 485], "although": [0, 1, 3, 8, 27, 35, 42, 47, 65, 66, 72, 77, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 460, 461, 464, 465, 472, 482], "core": [0, 2, 3, 8, 62, 67, 68, 69, 78, 79, 110, 461, 467, 470, 484], "guarante": [0, 2, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 117, 119, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 272, 273, 275, 331, 333, 337, 354, 397, 398, 399, 472], "backward": [0, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 296, 297, 300, 301, 318, 331, 333, 337, 354, 364, 365, 367, 368, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 399, 464, 466, 467, 468, 471, 472, 474, 478, 479, 480], "compat": [0, 2, 3, 7, 15, 16, 18, 31, 35, 42, 47, 55, 65, 66, 72, 77, 102, 110, 113, 115, 116, 117, 121, 127, 130, 133, 137, 139, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 256, 268, 272, 273, 275, 276, 296, 297, 298, 300, 301, 302, 331, 333, 337, 351, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 386, 387, 389, 390, 393, 397, 399, 402, 464, 467, 476, 482], "2": [0, 1, 2, 3, 8, 9, 10, 15, 16, 18, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 69, 72, 74, 75, 77, 78, 79, 80, 83, 84, 94, 96, 101, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 148, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 207, 211, 212, 214, 216, 219, 220, 221, 223, 224, 225, 226, 235, 236, 239, 241, 243, 245, 248, 251, 255, 256, 257, 258, 263, 264, 265, 268, 270, 272, 273, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 317, 318, 319, 327, 330, 331, 333, 337, 345, 346, 347, 349, 353, 357, 358, 364, 365, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 399, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 431, 458, 459, 460, 463, 464, 465, 466, 467, 468, 470, 471, 477, 478, 479, 480, 482, 483, 484, 485], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 115, 116, 123, 127, 128, 129, 130, 133, 136, 137, 139, 140, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 315, 318, 319, 322, 323, 326, 327, 328, 330, 331, 333, 334, 336, 337, 341, 345, 347, 352, 353, 354, 356, 357, 360, 361, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 431, 438, 450, 454, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 20, 25, 26, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 102, 137, 157, 166, 186, 188, 236, 243, 246, 270, 331, 333, 337, 367, 370, 382, 397, 460, 461, 464, 465, 466, 467, 470, 472, 482, 484, 485], "tensordict": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 113, 115, 116, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 291, 292, 295, 298, 302, 304, 305, 308, 309, 319, 320, 321, 329, 330, 331, 333, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 421, 431, 435, 436, 437, 439, 440, 456, 458, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 485], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 101, 180, 191, 195, 235, 245, 263, 264, 273, 331, 333, 337, 342, 343, 344, 353, 372, 380, 389, 456, 464, 478, 480, 484], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 35, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 83, 84, 94, 95, 96, 97, 99, 101, 110, 118, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 243, 270, 275, 305, 331, 333, 337, 397, 398, 399, 424, 429, 440, 461, 465, 468, 474, 478], "root": [0, 2, 3, 39, 40, 48, 50, 62, 67, 68, 69, 74, 78, 79, 84, 98, 99, 106, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 215, 237, 259, 260, 298, 299, 302, 327, 328, 402, 460, 467, 469, 478, 479, 480, 482, 485], "http": [0, 2, 5, 6, 7, 10, 15, 16, 22, 23, 25, 32, 62, 80, 107, 108, 128, 129, 131, 132, 139, 141, 143, 144, 149, 150, 152, 153, 154, 155, 156, 159, 160, 163, 169, 170, 171, 172, 185, 215, 243, 268, 278, 284, 285, 286, 287, 288, 289, 292, 293, 294, 300, 305, 306, 307, 312, 313, 314, 318, 319, 320, 322, 323, 329, 347, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 402, 407, 415, 455, 475, 476, 481, 484], "github": [0, 2, 5, 6, 7, 10, 22, 23, 25, 32, 128, 129, 131, 132, 136, 139, 143, 144, 149, 150, 152, 153, 155, 156, 159, 160, 163, 169, 170, 171, 172, 212, 215, 268, 278, 470, 474, 476, 478, 479, 484], "com": [0, 2, 5, 6, 7, 10, 22, 23, 25, 32, 128, 129, 131, 132, 139, 141, 143, 144, 149, 150, 152, 153, 155, 156, 159, 160, 163, 169, 170, 171, 172, 215, 278, 476, 484], "setup": [0, 1, 7, 128, 129, 141, 143, 144, 169, 458], "py": [0, 3, 32, 136, 138, 205, 215, 290, 320, 329, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "develop": [0, 3, 4, 7, 50, 141, 464, 484], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 117, 121, 122, 123, 124, 125, 127, 130, 133, 135, 137, 139, 140, 142, 145, 157, 158, 161, 162, 163, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 206, 208, 210, 211, 212, 214, 215, 218, 220, 221, 225, 231, 235, 237, 243, 244, 246, 253, 258, 260, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 309, 310, 312, 318, 330, 331, 332, 333, 335, 337, 345, 346, 347, 349, 350, 351, 354, 356, 357, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 420, 423, 424, 427, 429, 430, 433, 440, 442, 450, 456, 458, 460, 463, 464, 466, 468, 470, 471, 472, 475, 476, 480, 483, 485], "seri": [0, 2, 3, 7, 8, 59, 100, 111, 121, 122, 125, 126, 166, 238, 264, 422, 459, 460, 464, 465, 466, 473, 474, 478, 479, 482, 485], "quick": [0, 468], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 214, 233, 236, 259, 264, 275, 278, 384, 399, 457, 459, 460, 464, 465, 466, 467, 470, 474, 476, 478, 479, 480, 482, 484, 485], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 108, 110, 111, 113, 114, 115, 116, 121, 123, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 203, 206, 207, 208, 211, 212, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 230, 233, 235, 236, 237, 238, 239, 243, 244, 247, 248, 251, 252, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 270, 272, 273, 275, 276, 281, 282, 283, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 319, 330, 331, 333, 337, 341, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 416, 417, 418, 419, 420, 426, 429, 430, 436, 437, 440, 442, 444, 450, 454, 457, 460, 464, 465, 466, 467, 468, 469, 471, 473, 474, 476, 477, 478, 479, 480, 482, 484, 485], "hurri": [0, 469], "last": [0, 1, 2, 3, 4, 15, 16, 18, 21, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 114, 115, 116, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 208, 211, 214, 220, 230, 237, 239, 244, 257, 259, 261, 271, 276, 277, 282, 283, 295, 296, 298, 300, 302, 303, 306, 307, 313, 324, 327, 330, 345, 349, 354, 367, 402, 404, 405, 458, 465, 466, 467, 468, 469, 470, 476, 478, 479, 480, 481, 482, 484, 485], "item": [0, 2, 3, 8, 15, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 94, 102, 108, 110, 114, 121, 178, 208, 229, 264, 273, 306, 307, 368, 369, 371, 431, 460, 461, 464, 466, 467, 471, 472, 476, 478, 479, 480, 482], "navig": [0, 191, 476, 479], "previou": [0, 3, 4, 10, 55, 62, 67, 68, 69, 71, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 230, 258, 275, 296, 300, 323, 345, 466, 467, 468, 469, 470, 474, 480, 485], "whenev": [0, 1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 69, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 108, 115, 116, 131, 132, 136, 138, 139, 149, 150, 163, 171, 172, 179, 180, 183, 205, 230, 234, 265, 271, 331, 333, 337, 382, 397, 402, 403, 404, 405, 420, 442, 459, 473, 476, 482], "want": [0, 1, 2, 3, 6, 7, 8, 18, 29, 42, 65, 77, 116, 178, 215, 239, 318, 331, 333, 337, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 459, 464, 465, 466, 467, 468, 469, 471, 472, 473, 478, 479, 480, 481, 482, 484, 485], "ted": [0, 44, 56, 75, 76, 98, 99, 106, 456, 463, 475, 483], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 35, 39, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 95, 96, 97, 110, 115, 116, 121, 127, 128, 129, 130, 133, 137, 141, 143, 144, 145, 149, 150, 152, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 219, 220, 233, 237, 243, 256, 258, 261, 262, 263, 264, 265, 268, 270, 272, 273, 275, 277, 280, 282, 283, 290, 295, 298, 302, 307, 308, 309, 312, 318, 320, 327, 329, 331, 333, 334, 337, 342, 344, 347, 349, 350, 353, 354, 357, 365, 366, 367, 372, 378, 380, 381, 382, 384, 387, 389, 397, 398, 399, 402, 403, 404, 405, 406, 420, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "modul": [0, 1, 2, 3, 4, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 41, 42, 47, 55, 65, 66, 71, 72, 77, 121, 127, 128, 129, 130, 133, 137, 145, 148, 151, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 214, 219, 225, 227, 233, 235, 243, 244, 257, 258, 263, 264, 265, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 397, 399, 400, 402, 403, 404, 405, 406, 420, 440, 447, 450, 456, 460, 461, 463, 465, 466, 469, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483], "optim": [0, 1, 2, 8, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 279, 305, 311, 312, 318, 327, 331, 333, 337, 365, 367, 382, 383, 384, 387, 394, 397, 399, 435, 436, 440, 450, 460, 461, 463, 466, 467, 468, 469, 470, 472, 475, 478, 479, 480, 483], "collect": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 55, 62, 67, 68, 69, 78, 79, 110, 114, 127, 130, 133, 137, 145, 157, 158, 161, 163, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 192, 212, 215, 230, 239, 243, 270, 319, 349, 365, 368, 371, 373, 385, 387, 389, 390, 422, 431, 437, 440, 442, 443, 444, 450, 458, 461, 463, 464, 467, 468, 469, 470, 471, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485], "storag": [0, 1, 8, 15, 16, 18, 21, 29, 35, 42, 44, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 81, 84, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 130, 133, 135, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 214, 215, 223, 226, 248, 275, 331, 333, 337, 366, 381, 384, 397, 398, 399, 456, 461, 463, 465, 466, 467, 468, 469, 471, 474, 475, 478, 479, 481, 483], "log": [0, 3, 4, 8, 11, 71, 290, 291, 292, 306, 307, 315, 327, 328, 333, 337, 346, 347, 350, 354, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 429, 433, 434, 435, 440, 450, 459, 460, 461, 463, 464, 465, 466, 469, 470, 474, 475, 478, 479, 480, 483, 484], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 141, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 331, 333, 337, 354, 397, 399, 430, 454, 456, 457, 458, 459, 460, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 482, 483, 484], "own": [0, 1, 15, 16, 21, 27, 28, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 422, 456, 460, 463, 465, 466, 469, 475, 478, 479, 480, 483], "train": [0, 1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 32, 35, 38, 42, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 94, 95, 96, 97, 127, 130, 133, 137, 142, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 223, 231, 243, 257, 262, 265, 268, 270, 275, 277, 278, 280, 285, 287, 295, 319, 331, 333, 334, 335, 337, 364, 365, 366, 367, 368, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 440, 442, 450, 456, 458, 459, 461, 463, 465, 469, 472, 473, 475, 481, 482, 483, 484, 485], "loop": [0, 1, 8, 18, 29, 61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 277, 295, 318, 319, 365, 367, 373, 380, 384, 385, 387, 389, 390, 398, 402, 403, 404, 405, 440, 460, 461, 463, 464, 465, 469, 471, 472, 473, 475, 477, 482, 483, 484], "ppo": [0, 1, 4, 8, 350, 354, 366, 381, 384, 397, 456, 459, 463, 464, 465, 468, 470, 471, 475, 478, 483], "pendulum": [0, 3, 15, 16, 18, 21, 27, 28, 29, 67, 121, 127, 130, 131, 132, 133, 134, 136, 137, 138, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 218, 219, 221, 228, 234, 235, 239, 246, 248, 252, 253, 256, 258, 259, 260, 263, 264, 265, 266, 272, 273, 275, 281, 298, 302, 399, 450, 459, 463, 465, 466, 469, 470, 471, 475, 483, 484, 485], "introduct": [0, 460, 463, 469, 475, 478, 479, 483, 485], "multi": [0, 1, 7, 9, 15, 16, 21, 35, 42, 47, 55, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 98, 99, 106, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 236, 265, 275, 296, 298, 300, 302, 303, 308, 309, 310, 331, 333, 337, 349, 354, 397, 399, 400, 402, 403, 404, 405, 456, 463, 464, 465, 466, 467, 469, 470, 475, 480, 483, 484], "agent": [0, 9, 68, 73, 74, 142, 148, 149, 150, 155, 156, 159, 160, 164, 165, 169, 170, 171, 172, 174, 191, 236, 255, 256, 257, 306, 307, 308, 309, 310, 312, 320, 329, 366, 381, 384, 400, 456, 463, 469, 475, 480, 483], "env": [0, 1, 2, 5, 6, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 35, 39, 42, 44, 47, 50, 55, 65, 66, 67, 71, 72, 75, 77, 84, 96, 110, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281, 298, 302, 304, 305, 331, 333, 337, 349, 353, 382, 397, 399, 420, 421, 422, 430, 444, 445, 446, 450, 452, 453, 454, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 108, 109, 110, 115, 116, 121, 123, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 315, 317, 318, 319, 320, 321, 327, 328, 329, 330, 331, 333, 334, 335, 337, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 415, 420, 422, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 450, 454, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485], "pretrain": [0, 463, 475, 483], "recurr": [0, 2, 214, 296, 297, 298, 300, 302, 323, 340, 402, 463, 465, 470, 475, 482, 483], "dqn": [0, 2, 208, 227, 283, 292, 346, 347, 364, 365, 367, 368, 369, 371, 373, 374, 375, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 397, 400, 447, 456, 459, 463, 468, 470, 471, 474, 475, 483], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 44, 55, 67, 75, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 204, 220, 225, 235, 237, 257, 260, 277, 280, 281, 292, 295, 298, 302, 308, 309, 312, 319, 321, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 364, 365, 366, 367, 368, 372, 373, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 435, 442, 445, 446, 450, 452, 453, 456, 458, 459, 461, 463, 465, 469, 471, 472, 475, 481, 482, 483, 484, 485], "replai": [0, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 62, 67, 68, 69, 78, 79, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 121, 122, 126, 214, 215, 225, 244, 248, 258, 264, 275, 367, 368, 369, 371, 372, 373, 380, 385, 387, 389, 390, 399, 437, 440, 448, 450, 456, 458, 460, 461, 463, 468, 475, 480, 481, 483], "buffer": [0, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 126, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 214, 215, 219, 225, 233, 243, 244, 248, 258, 263, 264, 265, 268, 270, 275, 277, 319, 331, 333, 337, 345, 353, 356, 366, 367, 368, 369, 371, 372, 373, 380, 381, 384, 385, 387, 389, 390, 397, 398, 399, 402, 403, 404, 405, 406, 437, 440, 448, 450, 456, 458, 460, 461, 463, 468, 473, 475, 480, 481, 483, 485], "export": [0, 6, 7, 463, 475, 483], "llm": [0, 2, 29, 30, 71, 83, 94, 95, 96, 97, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 331, 332, 333, 334, 335, 336, 337, 397, 398, 399, 456, 463, 475, 483], "build": [0, 1, 2, 3, 7, 31, 35, 39, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 110, 127, 128, 129, 130, 133, 137, 138, 139, 143, 144, 145, 149, 150, 152, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 248, 272, 273, 275, 279, 305, 331, 333, 337, 348, 350, 354, 397, 399, 440, 447, 448, 449, 459, 460, 461, 463, 466, 467, 468, 470, 471, 472, 473, 475, 478, 479, 480, 481, 483, 484, 485], "tool": [0, 1, 2, 3, 5, 191, 194, 195, 458, 459, 460, 463, 467, 469, 475, 478, 480, 482, 483, 485], "enabl": [0, 2, 7, 8, 101, 103, 114, 123, 191, 212, 298, 302, 319, 333, 337, 349, 420, 422, 435, 458, 463, 466, 469, 475, 478, 479, 480, 482, 483], "competit": [0, 3, 149, 150, 463, 475, 479, 483], "ddpg": [0, 285, 286, 287, 288, 368, 379, 388, 456, 459, 463, 465, 471, 475, 479, 483], "task": [0, 2, 3, 9, 71, 73, 74, 83, 127, 130, 131, 132, 133, 137, 140, 145, 149, 150, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 183, 185, 186, 187, 188, 190, 243, 256, 265, 268, 270, 372, 380, 458, 463, 464, 465, 466, 467, 469, 470, 475, 476, 478, 479, 480, 483, 485], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 183, 186, 187, 188, 192, 203, 237, 258, 273, 289, 298, 302, 345, 364, 382, 384, 386, 397, 422, 440, 456, 458, 460, 461, 463, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 482, 483, 484], "object": [0, 2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 32, 35, 39, 42, 47, 55, 57, 61, 63, 65, 66, 70, 72, 77, 82, 83, 84, 95, 96, 97, 101, 102, 103, 104, 110, 113, 117, 119, 123, 126, 127, 130, 133, 137, 143, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 223, 226, 227, 233, 236, 239, 243, 263, 264, 265, 268, 272, 273, 275, 298, 302, 305, 308, 309, 320, 327, 329, 331, 333, 337, 341, 342, 350, 353, 354, 355, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 444, 445, 446, 449, 450, 454, 456, 459, 461, 463, 465, 466, 467, 468, 472, 474, 475, 478, 479, 480, 482, 483, 485], "loss": [0, 3, 8, 63, 227, 306, 318, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 397, 400, 401, 402, 436, 440, 447, 450, 458, 460, 461, 463, 468, 469, 471, 472, 473, 475, 480, 482, 483], "trainer": [0, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 463, 464, 475, 483], "exampl": [0, 1, 2, 4, 9, 10, 15, 16, 18, 21, 22, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 83, 84, 85, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 201, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 315, 317, 318, 319, 320, 321, 329, 330, 331, 333, 334, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 402, 403, 404, 405, 408, 420, 422, 430, 431, 432, 433, 434, 436, 437, 438, 439, 442, 450, 456, 458, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485], "packag": [0, 6, 7, 10, 205, 456, 457, 476, 485], "batch": [0, 2, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 31, 39, 55, 57, 59, 62, 64, 67, 68, 69, 71, 78, 79, 80, 82, 94, 101, 102, 103, 104, 108, 109, 110, 114, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 151, 152, 154, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 212, 215, 219, 221, 230, 237, 239, 241, 244, 248, 255, 258, 260, 264, 265, 267, 271, 272, 273, 275, 278, 290, 296, 297, 298, 300, 301, 302, 306, 307, 308, 309, 310, 311, 315, 319, 320, 326, 330, 333, 337, 340, 349, 353, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 431, 434, 437, 438, 439, 440, 442, 452, 453, 454, 456, 459, 460, 461, 465, 466, 467, 468, 469, 472, 474, 476, 477, 478, 479, 481, 484, 485], "size": [0, 2, 15, 16, 18, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 114, 115, 116, 117, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 206, 208, 212, 214, 215, 216, 219, 222, 223, 226, 227, 228, 230, 233, 236, 237, 241, 243, 245, 246, 248, 252, 254, 255, 256, 258, 260, 261, 264, 265, 266, 267, 270, 272, 275, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 361, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 422, 431, 437, 456, 459, 460, 465, 466, 467, 468, 469, 470, 472, 476, 478, 479, 480, 485], "copi": [0, 2, 3, 14, 17, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 211, 215, 233, 246, 257, 263, 264, 265, 272, 273, 275, 276, 298, 302, 310, 331, 333, 337, 345, 367, 382, 387, 397, 398, 399, 402, 420, 456, 460, 464, 465, 467, 469, 478, 482, 484], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 42, 47, 55, 62, 65, 66, 71, 72, 77, 108, 110, 113, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 233, 236, 243, 258, 263, 264, 265, 268, 270, 275, 296, 297, 298, 300, 301, 302, 308, 310, 312, 331, 333, 334, 336, 337, 353, 364, 365, 366, 367, 373, 376, 387, 389, 397, 399, 442, 449, 456, 458, 459, 461, 464, 465, 466, 477, 480, 482, 484], "synchron": [0, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 61, 63, 70, 84, 95, 96, 97, 152, 184, 398, 452, 453, 456, 465, 466, 478], "distribut": [0, 2, 3, 4, 9, 10, 14, 17, 20, 22, 23, 24, 25, 26, 27, 28, 62, 67, 68, 69, 78, 79, 110, 130, 159, 160, 193, 235, 239, 273, 277, 279, 290, 291, 292, 293, 299, 305, 306, 307, 315, 316, 317, 318, 322, 323, 326, 327, 328, 335, 345, 346, 347, 350, 354, 355, 364, 365, 366, 367, 372, 373, 374, 380, 381, 384, 385, 386, 387, 389, 390, 397, 456, 460, 461, 465, 466, 468, 470, 472, 478, 479, 480, 484, 485], "interoper": [0, 15, 16, 456], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 35, 42, 47, 55, 65, 66, 67, 72, 77, 108, 115, 116, 127, 128, 129, 130, 131, 132, 133, 136, 137, 143, 144, 145, 151, 152, 153, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 233, 238, 239, 255, 263, 264, 265, 272, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 354, 355, 356, 357, 360, 367, 373, 387, 397, 399, 422, 429, 435, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 470, 471, 472, 473, 474, 476, 478, 479, 480, 484], "asynchron": [0, 3, 9, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 364, 397, 398, 399, 452, 456, 464, 465, 466], "singl": [0, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 39, 40, 42, 45, 47, 48, 50, 53, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 80, 84, 95, 96, 97, 102, 110, 116, 121, 127, 130, 133, 136, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 215, 216, 236, 243, 248, 258, 263, 265, 270, 275, 282, 283, 296, 297, 298, 300, 301, 302, 303, 309, 331, 333, 337, 352, 356, 365, 366, 367, 369, 371, 373, 374, 380, 381, 384, 385, 387, 389, 390, 394, 397, 398, 399, 402, 403, 404, 405, 411, 412, 413, 414, 416, 417, 418, 419, 420, 454, 456, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 484], "node": [0, 2, 20, 22, 23, 25, 27, 28, 39, 40, 48, 50, 61, 63, 70, 74, 84, 95, 96, 97, 145, 184, 187, 263, 335, 398, 456, 472, 484], "helper": [0, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 464, 465, 467, 478, 480], "compos": [0, 3, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 109, 110, 111, 112, 121, 122, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 220, 221, 233, 247, 263, 264, 265, 272, 275, 331, 333, 337, 348, 349, 367, 376, 387, 397, 399, 422, 456, 464, 465, 466, 467, 468, 472, 476, 477, 479, 481, 482, 484, 485], "episod": [0, 3, 50, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 211, 248, 251, 257, 279, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 456, 465, 469, 474, 478, 479, 482], "format": [0, 1, 3, 35, 42, 44, 47, 53, 54, 55, 56, 59, 60, 65, 66, 72, 75, 76, 77, 84, 96, 98, 99, 106, 113, 121, 127, 130, 133, 137, 145, 157, 158, 159, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 215, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399, 422, 456, 458, 464, 465, 468, 469, 471, 473, 476, 484, 485], "tensorspec": [0, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 127, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 208, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 230, 232, 234, 235, 236, 237, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 295, 319, 323, 341, 345, 346, 347, 350, 351, 352, 353, 354, 355, 357, 365, 367, 369, 372, 373, 385, 387, 389, 390, 399, 400, 456, 480], "tree": [0, 1, 50, 61, 63, 70, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 215, 398, 456, 478, 482], "forest": [0, 50, 84, 456], "larg": [0, 3, 4, 38, 61, 63, 70, 84, 95, 96, 97, 115, 116, 184, 223, 226, 268, 364, 366, 381, 384, 386, 397, 398, 456, 465, 466, 478, 479, 482], "languag": [0, 32, 71, 186, 456], "human": [0, 32, 179, 456, 480], "feedback": [0, 179, 456, 474, 484], "rlhf": [0, 179, 193, 235, 456, 459], "spec": [0, 1, 2, 15, 16, 18, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 203, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 239, 241, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 292, 295, 298, 302, 319, 321, 323, 341, 345, 346, 347, 350, 351, 352, 353, 354, 356, 357, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 399, 400, 456, 459, 460, 464, 465, 466, 467, 468, 469, 470, 474, 476, 477, 478, 479, 484], "lock": [0, 39, 40, 48, 61, 63, 70, 74, 84, 95, 96, 97, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 212, 221, 258, 272, 273, 398, 456, 460, 480], "method": [0, 1, 2, 4, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 115, 116, 117, 118, 119, 121, 123, 127, 130, 133, 136, 137, 138, 139, 144, 145, 157, 158, 161, 162, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 234, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 290, 295, 298, 302, 308, 309, 310, 331, 333, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 361, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 378, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 406, 420, 421, 451, 456, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 480, 482, 485], "partial": [0, 2, 15, 16, 18, 21, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 214, 215, 257, 258, 259, 350, 440, 456, 467], "step": [0, 1, 4, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 50, 55, 71, 84, 98, 99, 106, 108, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 206, 207, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 230, 231, 234, 235, 237, 239, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 275, 277, 278, 279, 293, 295, 296, 298, 300, 302, 304, 305, 318, 319, 349, 350, 354, 364, 375, 384, 399, 401, 402, 403, 404, 405, 408, 409, 410, 421, 424, 431, 435, 440, 456, 458, 461, 465, 467, 468, 470, 471, 473, 474, 477, 480, 481, 484], "reset": [0, 1, 2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 116, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 210, 211, 212, 215, 227, 230, 234, 238, 243, 251, 256, 257, 258, 259, 260, 263, 264, 265, 268, 271, 272, 275, 276, 281, 296, 298, 302, 310, 319, 331, 333, 337, 339, 349, 382, 397, 399, 421, 456, 458, 460, 464, 465, 466, 467, 469, 472, 476, 477, 478, 479, 484], "vector": [0, 1, 8, 33, 59, 128, 129, 138, 143, 144, 148, 159, 160, 163, 171, 172, 225, 271, 273, 285, 287, 296, 297, 300, 301, 303, 402, 405, 415, 416, 417, 418, 419, 456, 459, 460, 464, 465, 467, 477, 478, 479, 480, 481, 485], "async": [0, 15, 16, 18, 21, 22, 23, 25, 27, 29, 67, 127, 161, 167, 271, 456, 458], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 268, 275, 308, 309, 331, 333, 337, 357, 363, 374, 384, 391, 397, 399, 454, 456, 458, 459, 464, 465, 466, 467, 470, 471, 473, 476, 478, 479], "nativ": [0, 1, 7, 9, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 422, 456, 467, 482], "auto": [0, 103, 123, 133, 138, 210, 211, 265, 271, 319, 365, 367, 373, 383, 385, 387, 389, 390, 456, 460, 478, 479], "dynam": [0, 2, 7, 15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 200, 275, 372, 380, 456, 466, 469, 480], "mask": [0, 1, 4, 31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 244, 275, 280, 281, 292, 295, 306, 307, 321, 333, 337, 345, 346, 347, 351, 352, 373, 387, 437, 456, 465, 467, 468, 485], "action": [0, 2, 8, 9, 15, 16, 18, 21, 27, 29, 44, 50, 59, 67, 71, 75, 77, 84, 107, 108, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 206, 208, 209, 212, 218, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 237, 238, 239, 241, 245, 246, 248, 252, 256, 258, 262, 264, 265, 266, 267, 271, 275, 277, 279, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 302, 303, 304, 305, 306, 307, 308, 317, 319, 320, 321, 323, 326, 327, 329, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 357, 358, 364, 365, 366, 367, 368, 369, 371, 372, 373, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 450, 454, 456, 458, 459, 461, 464, 465, 466, 468, 469, 470, 471, 476, 477, 478, 479, 481, 484, 485], "record": [0, 2, 11, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 208, 235, 275, 331, 333, 337, 384, 397, 399, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 435, 450, 456, 465, 466, 470, 474, 478], "domain": [0, 2, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 96, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 200, 225, 233, 258, 266, 341, 346, 347, 350, 351, 352, 353, 354, 355, 356, 361, 456, 466, 471, 476, 478, 479, 480, 484, 485], "interfac": [0, 1, 3, 127, 140, 154, 303, 311, 333, 337, 456, 459, 460, 464, 466, 468, 473, 476, 480, 482], "structur": [0, 1, 3, 7, 50, 57, 61, 62, 63, 69, 70, 71, 78, 79, 82, 83, 84, 95, 96, 97, 102, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 185, 186, 187, 188, 192, 207, 223, 226, 258, 308, 319, 333, 337, 364, 373, 384, 387, 398, 402, 403, 404, 405, 406, 456, 460, 464, 466, 467, 469, 472, 478, 479, 480, 481], "actor": [0, 3, 4, 27, 30, 162, 193, 235, 279, 284, 285, 287, 292, 293, 295, 305, 317, 319, 321, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 397, 400, 456, 460, 465, 467, 469, 471, 474, 478, 481, 484], "explor": [0, 1, 274, 277, 280, 295, 312, 319, 341, 346, 347, 350, 351, 352, 353, 354, 364, 382, 435, 445, 446, 450, 456, 466, 467, 468, 469, 471, 472, 474, 478, 479, 480], "valu": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 107, 108, 110, 115, 116, 121, 127, 130, 133, 137, 138, 145, 148, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 205, 206, 207, 208, 211, 213, 215, 216, 218, 221, 223, 224, 225, 226, 227, 233, 238, 239, 243, 244, 247, 248, 249, 251, 253, 255, 258, 259, 263, 264, 265, 270, 271, 272, 273, 275, 276, 277, 278, 281, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 302, 303, 305, 306, 307, 308, 309, 311, 312, 315, 319, 320, 321, 326, 327, 328, 329, 331, 333, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 430, 431, 433, 434, 435, 436, 437, 440, 450, 456, 461, 465, 468, 471, 472, 473, 477, 478, 479, 480, 482, 484, 485], "gener": [0, 1, 2, 3, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 71, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 110, 112, 114, 127, 130, 133, 134, 137, 145, 149, 150, 151, 154, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 212, 219, 221, 223, 224, 228, 233, 235, 237, 239, 245, 246, 251, 252, 256, 258, 262, 264, 266, 271, 273, 275, 280, 281, 290, 298, 302, 306, 307, 315, 333, 337, 341, 350, 354, 358, 359, 378, 385, 392, 399, 402, 407, 415, 425, 440, 456, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "hook": [0, 2, 35, 42, 44, 47, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 110, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 321, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 397, 399, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 456], "planner": [0, 279, 305, 456], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 111, 114, 115, 116, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 206, 207, 208, 209, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 233, 235, 236, 239, 241, 243, 245, 246, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 264, 265, 266, 268, 270, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 431, 438, 439, 450, 456, 459, 461, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "vmap": [0, 296, 297, 300, 301, 310, 330, 353, 356, 365, 367, 373, 380, 382, 385, 387, 389, 390, 397, 402, 403, 404, 405, 456, 459], "random": [0, 1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 71, 73, 74, 82, 85, 86, 87, 88, 89, 109, 121, 127, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 192, 208, 225, 238, 239, 258, 265, 281, 295, 296, 298, 300, 350, 353, 354, 361, 365, 382, 385, 397, 435, 444, 456, 459, 464, 465, 466, 468, 469, 470, 472, 480, 481, 482, 484, 485], "sac": [0, 373, 385, 387, 456], "redq": [0, 385, 456], "crossq": [0, 367, 456], "iql": [0, 372, 380, 456, 464, 478, 479], "cql": [0, 365, 371, 456], "gail": [0, 378, 456], "dt": [0, 158, 319, 456, 480], "td3": [0, 389, 390, 456], "bc": [0, 5, 389, 456], "a2c": [0, 364, 456], "dreamer": [0, 201, 202, 293, 375, 376, 377, 456, 459], "checkpoint": [0, 69, 99, 101, 105, 117, 118, 120, 124, 456, 482], "builder": [0, 185, 189, 456, 465, 485], "logger": [0, 3, 11, 420, 422, 424, 425, 426, 427, 428, 429, 434, 440, 450, 454, 456, 465, 478], "_util": [0, 3, 157, 276, 456, 468, 474], "implement_for": [0, 3, 456], "set_auto_unwrap_transformed_env": [0, 12, 265, 456], "auto_unwrap_transformed_env": [0, 430, 456], "thing": [0, 1, 3, 7, 8, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 264, 308, 309, 373, 387, 457, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479, 482, 485], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 35, 39, 40, 42, 47, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 101, 103, 115, 116, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 225, 272, 275, 290, 308, 309, 326, 331, 333, 337, 365, 367, 380, 385, 387, 389, 390, 397, 399, 402, 404, 405, 457, 460, 464, 469, 470, 471, 480, 482], "when": [0, 1, 2, 3, 5, 8, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 115, 116, 117, 119, 123, 127, 130, 133, 134, 136, 137, 138, 144, 145, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 206, 209, 211, 214, 215, 219, 220, 223, 225, 226, 235, 236, 238, 239, 243, 244, 251, 258, 260, 263, 264, 265, 268, 270, 271, 272, 273, 275, 276, 278, 279, 290, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 318, 321, 327, 331, 333, 337, 349, 350, 353, 354, 356, 360, 365, 366, 367, 369, 373, 374, 380, 381, 382, 384, 385, 387, 389, 390, 391, 397, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 424, 427, 429, 437, 454, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 472, 473, 478, 479, 480, 481, 482, 484, 485], "debug": [0, 6, 8, 50, 71, 84, 260, 457, 485], "work": [0, 1, 2, 3, 4, 8, 24, 26, 35, 42, 47, 55, 65, 66, 69, 72, 77, 101, 108, 113, 115, 116, 119, 126, 127, 130, 133, 136, 137, 138, 141, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 206, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 273, 275, 276, 282, 283, 303, 331, 333, 337, 347, 352, 357, 366, 381, 384, 397, 399, 440, 457, 458, 459, 464, 465, 466, 467, 469, 472, 477, 478, 479, 480, 481, 482, 484, 485], "habitat": [0, 3, 139, 457, 481], "lab": [0, 3, 131, 132, 139, 142, 457], "mujoco": [0, 6, 8, 163, 457, 464, 466, 467], "error": [0, 1, 3, 7, 10, 33, 34, 35, 38, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 70, 72, 73, 77, 84, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 244, 263, 275, 276, 331, 333, 337, 382, 397, 398, 399, 457, 460, 464, 466, 478, 479, 485], "solut": [0, 2, 3, 6, 7, 9, 27, 115, 457, 459, 461, 468, 484], "resourc": [0, 1, 13, 22, 23, 25, 27, 139, 191, 457, 458, 464, 466, 468, 478, 479], "issu": [0, 2, 3, 4, 5, 8, 67, 99, 101, 103, 115, 123, 127, 130, 133, 136, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 215, 244, 259, 341, 346, 347, 350, 351, 352, 353, 354, 457, 484], "customis": [0, 457, 465, 473], "video": [0, 4, 9, 95, 422, 424, 427, 429, 435, 454, 456, 457, 474, 478, 479], "render": [0, 3, 8, 144, 171, 420, 422, 435, 457, 464, 465, 466, 468, 469, 473], "index": [0, 3, 7, 8, 10, 18, 29, 33, 34, 36, 37, 38, 39, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 100, 101, 102, 103, 107, 108, 110, 111, 113, 115, 119, 121, 122, 123, 125, 126, 127, 130, 133, 137, 145, 149, 150, 155, 156, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 206, 210, 215, 219, 225, 265, 306, 307, 349, 398, 456, 469, 476, 477, 478, 479, 482, 484], "search": [0, 2, 39, 40, 48, 74, 84, 154, 207, 465], "page": [0, 7, 32, 191, 429, 471, 476], "import": [1, 2, 3, 4, 6, 10, 11, 15, 16, 18, 21, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 147, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 205, 206, 207, 208, 209, 211, 212, 214, 215, 218, 220, 221, 227, 228, 233, 234, 235, 236, 239, 241, 243, 245, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 264, 266, 270, 272, 273, 275, 276, 279, 281, 285, 286, 287, 288, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 310, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 420, 422, 433, 435, 450, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "syncdatacollector": [1, 2, 3, 15, 16, 19, 21, 22, 23, 25, 27, 29, 44, 55, 75, 212, 215, 248, 280, 298, 302, 450, 453, 456, 464, 465, 466, 467, 468, 472, 474, 478, 479, 482], "currentmodul": 1, "somewhat": [1, 2, 192, 460, 470, 485], "equival": [1, 3, 27, 33, 34, 35, 38, 39, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 83, 84, 94, 95, 96, 97, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 224, 227, 258, 260, 265, 275, 292, 300, 303, 321, 331, 333, 337, 346, 347, 351, 352, 384, 397, 398, 399, 437, 472, 484, 485], "dataload": [1, 29, 94, 114, 116, 186, 192, 465, 472, 482], "except": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 229, 248, 257, 258, 259, 263, 265, 275, 277, 295, 296, 298, 300, 302, 315, 319, 331, 333, 337, 364, 367, 382, 384, 387, 397, 398, 399, 422, 459, 464, 465, 469, 478, 482, 484, 485], "1": [1, 2, 3, 4, 8, 10, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 101, 102, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 233, 235, 236, 237, 239, 241, 243, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 272, 273, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 331, 333, 336, 337, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410, 411, 412, 416, 417, 419, 420, 422, 431, 435, 437, 438, 450, 454, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485], "thei": [1, 2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 108, 110, 127, 130, 133, 136, 137, 138, 145, 148, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 214, 229, 235, 243, 252, 260, 264, 265, 270, 275, 302, 331, 333, 337, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 437, 440, 459, 460, 461, 464, 465, 466, 467, 468, 471, 477, 478, 479, 480, 481, 482, 484, 485], "over": [1, 2, 3, 4, 8, 15, 16, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 93, 108, 110, 114, 115, 116, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 208, 225, 239, 251, 259, 273, 275, 315, 318, 327, 330, 331, 333, 337, 356, 374, 376, 382, 397, 399, 402, 408, 420, 443, 459, 461, 464, 465, 466, 468, 469, 470, 471, 472, 478, 479, 480, 485], "non": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 33, 35, 36, 37, 39, 40, 42, 47, 48, 49, 55, 57, 58, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 102, 104, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 212, 213, 215, 219, 230, 243, 255, 258, 264, 265, 266, 267, 268, 270, 273, 275, 281, 296, 298, 300, 302, 308, 331, 333, 337, 353, 354, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 459, 464, 467, 468, 478, 479, 480, 482, 485], "static": [1, 42, 65, 71, 77, 83, 108, 115, 116, 139, 158, 182, 188, 272, 276, 331, 333, 337, 380, 397, 469, 480, 482], "like": [1, 2, 3, 4, 7, 11, 24, 27, 35, 39, 40, 42, 47, 48, 50, 55, 57, 62, 65, 66, 69, 72, 74, 77, 78, 79, 83, 104, 110, 116, 127, 130, 133, 134, 137, 139, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 227, 258, 261, 275, 296, 300, 309, 331, 333, 337, 348, 354, 364, 366, 381, 384, 385, 386, 397, 399, 459, 460, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 484, 485], "being": [1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 35, 42, 47, 55, 65, 66, 72, 73, 77, 94, 102, 121, 124, 127, 130, 133, 136, 137, 138, 139, 144, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 214, 223, 225, 226, 233, 238, 246, 258, 263, 264, 265, 275, 295, 298, 302, 319, 331, 333, 337, 366, 367, 381, 382, 384, 387, 397, 399, 422, 437, 442, 452, 453, 454, 459, 460, 464, 465, 466, 467, 472, 478, 479, 480, 482], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 35, 42, 47, 55, 61, 63, 65, 66, 69, 70, 72, 77, 84, 85, 94, 95, 96, 97, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 210, 215, 219, 230, 233, 243, 251, 255, 258, 263, 264, 265, 266, 267, 268, 270, 275, 303, 330, 331, 333, 337, 353, 354, 355, 367, 387, 397, 398, 399, 422, 461, 466, 469, 473, 482, 484, 485], "two": [1, 2, 3, 4, 8, 10, 35, 42, 47, 50, 51, 52, 53, 54, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 84, 110, 114, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 220, 239, 243, 263, 270, 275, 288, 296, 298, 300, 302, 308, 309, 324, 327, 331, 333, 337, 354, 381, 389, 393, 397, 399, 435, 440, 460, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 482, 484, 485], "main": [1, 2, 3, 5, 15, 16, 20, 25, 28, 31, 67, 134, 215, 220, 354, 440, 458, 459, 460, 464, 465, 476, 477, 484, 485], "argument": [1, 2, 3, 11, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 110, 113, 114, 115, 116, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 206, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 237, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 295, 296, 298, 300, 302, 303, 306, 307, 308, 309, 311, 319, 330, 331, 333, 334, 337, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 420, 421, 422, 427, 429, 433, 440, 443, 450, 451, 454, 464, 465, 466, 467, 468, 469, 470, 472, 478, 479, 480, 482, 484, 485], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 97, 102, 104, 110, 113, 114, 115, 116, 117, 119, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 213, 214, 218, 223, 224, 226, 235, 236, 239, 241, 243, 251, 253, 261, 262, 263, 264, 265, 267, 268, 270, 272, 275, 281, 282, 283, 285, 291, 294, 298, 302, 303, 306, 307, 313, 321, 331, 333, 334, 337, 347, 349, 351, 352, 354, 356, 357, 358, 365, 367, 380, 382, 385, 387, 389, 390, 396, 397, 399, 402, 405, 420, 421, 435, 437, 452, 453, 460, 464, 466, 469, 470, 471, 472, 476, 477, 478, 480, 481, 482, 484, 485], "constructor": [1, 2, 3, 15, 16, 18, 22, 23, 25, 27, 29, 67, 69, 78, 79, 83, 107, 121, 127, 130, 133, 137, 145, 152, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 183, 185, 186, 187, 188, 211, 215, 263, 282, 283, 303, 340, 350, 354, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 402, 403, 404, 405, 406, 451, 454, 459, 464, 465, 466, 469, 472, 478, 479, 482, 484], "iter": [1, 2, 3, 16, 18, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 93, 94, 104, 110, 114, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 228, 239, 252, 275, 276, 278, 280, 281, 282, 283, 303, 308, 309, 325, 331, 333, 337, 341, 346, 350, 351, 353, 355, 356, 358, 382, 396, 397, 399, 435, 439, 440, 460, 461, 464, 466, 467, 472, 474, 478, 479, 480], "execut": [1, 2, 3, 6, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 101, 102, 110, 115, 116, 127, 128, 129, 130, 133, 134, 137, 138, 139, 141, 143, 144, 145, 151, 152, 157, 158, 161, 163, 166, 167, 168, 169, 178, 179, 180, 183, 186, 187, 188, 194, 195, 209, 220, 221, 237, 260, 265, 295, 296, 298, 300, 302, 310, 340, 349, 355, 356, 382, 389, 397, 399, 444, 454, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479, 482, 483, 484, 485], "queri": [1, 2, 3, 15, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 243, 268, 272, 275, 331, 333, 337, 356, 397, 398, 399, 460, 464, 471, 476, 480, 484], "defin": [1, 2, 3, 15, 16, 18, 20, 21, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 244, 257, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 310, 313, 314, 317, 318, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 361, 369, 371, 382, 397, 399, 402, 403, 404, 405, 406, 421, 451, 459, 464, 465, 467, 471, 474, 480, 482, 485], "number": [1, 2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 113, 115, 116, 123, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 151, 152, 153, 154, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 225, 227, 228, 229, 231, 234, 235, 238, 239, 242, 244, 245, 246, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 275, 277, 278, 279, 282, 283, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 313, 314, 319, 320, 322, 323, 326, 327, 328, 329, 331, 333, 335, 337, 341, 345, 349, 350, 353, 354, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 427, 429, 431, 433, 435, 440, 442, 443, 444, 452, 453, 454, 458, 459, 460, 464, 465, 466, 467, 469, 470, 472, 474, 478, 479, 480, 481, 482, 485], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 35, 38, 42, 43, 47, 50, 51, 52, 55, 65, 66, 72, 77, 83, 84, 114, 116, 121, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 275, 280, 296, 298, 302, 303, 311, 312, 331, 333, 337, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 403, 404, 405, 437, 458, 464, 466, 467, 468, 472, 473, 478, 479, 480, 482, 485], "deliv": [1, 2, 3, 18, 192, 464, 465, 469, 472, 484], "stack": [1, 2, 3, 7, 8, 15, 16, 18, 22, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 102, 107, 110, 127, 130, 133, 136, 137, 138, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 192, 198, 199, 215, 220, 237, 272, 296, 298, 300, 301, 302, 349, 355, 356, 365, 367, 380, 385, 387, 389, 390, 398, 402, 421, 431, 456, 458, 465, 468, 469, 476, 477, 478, 480, 484], "user": [1, 2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 42, 47, 50, 55, 65, 66, 72, 77, 84, 96, 108, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 216, 233, 257, 263, 265, 275, 289, 331, 333, 337, 367, 384, 387, 389, 397, 399, 422, 451, 458, 460, 461, 464, 465, 469, 471, 472, 480, 484, 485], "reach": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 71, 114, 127, 130, 133, 137, 144, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 237, 256, 277, 295, 319, 464, 466, 474, 476, 478, 479, 484, 485], "done": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 74, 75, 77, 82, 84, 85, 86, 87, 88, 89, 98, 99, 106, 108, 110, 115, 116, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 209, 211, 212, 215, 223, 224, 226, 227, 228, 233, 237, 238, 239, 241, 245, 246, 248, 250, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 272, 275, 279, 296, 298, 302, 305, 327, 349, 364, 365, 366, 367, 368, 369, 371, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 459, 460, 464, 466, 467, 468, 469, 471, 472, 474, 477, 478, 479, 480, 482, 484, 485], "state": [1, 2, 3, 4, 15, 16, 18, 20, 21, 29, 35, 42, 44, 47, 50, 55, 62, 65, 66, 67, 68, 69, 71, 72, 75, 77, 78, 79, 84, 98, 99, 106, 110, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 151, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 211, 214, 215, 216, 218, 219, 221, 224, 227, 230, 233, 237, 239, 246, 256, 257, 262, 263, 264, 265, 266, 267, 272, 273, 275, 279, 284, 289, 293, 296, 297, 298, 300, 301, 302, 303, 305, 310, 313, 317, 320, 322, 323, 329, 331, 333, 337, 342, 349, 353, 359, 364, 366, 367, 371, 373, 381, 382, 384, 385, 386, 387, 397, 399, 400, 401, 402, 403, 404, 405, 406, 440, 454, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 478, 479, 480, 485], "after": [1, 2, 3, 8, 13, 15, 16, 21, 22, 23, 25, 27, 35, 42, 44, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 95, 96, 97, 103, 110, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 295, 296, 298, 302, 311, 331, 333, 337, 346, 351, 367, 376, 387, 389, 397, 398, 399, 402, 465, 466, 467, 468, 469, 470, 472, 474, 476, 478, 479, 480, 481, 482, 485], "predefin": [1, 422, 465, 467, 472, 482, 484], "becaus": [1, 2, 3, 4, 7, 35, 42, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 95, 96, 97, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 227, 235, 256, 271, 275, 288, 309, 331, 333, 337, 341, 346, 347, 349, 350, 351, 352, 353, 354, 364, 384, 397, 398, 399, 402, 459, 464, 465, 467, 468, 470, 471, 472, 476, 477, 478, 479, 480, 482, 485], "potenti": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 480, 482], "comput": [1, 3, 4, 8, 15, 17, 18, 27, 29, 35, 38, 42, 47, 55, 65, 66, 71, 72, 77, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 239, 253, 265, 269, 273, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 317, 319, 322, 323, 325, 327, 328, 330, 331, 333, 337, 342, 345, 347, 349, 350, 352, 354, 357, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 444, 458, 460, 464, 466, 467, 468, 469, 470, 476, 477, 478, 479, 481, 482], "heavi": [1, 8, 482], "crucial": [1, 2, 3, 277, 295, 319, 372, 380, 382, 458, 464, 465, 466, 467, 469, 471, 473, 478, 479, 480, 484, 485], "configur": [1, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 71, 130, 179, 193, 235, 284, 289, 317, 333, 337, 382, 384, 397, 459, 464, 465, 466, 471, 478, 479, 480], "hyperparamet": [1, 113, 275, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 464, 473, 480, 482], "appropri": [1, 3, 4, 7, 100, 111, 121, 122, 125, 126, 145, 157, 166, 187, 188, 227, 451, 454, 458, 464, 473, 482], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 117, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 459, 460, 464, 467, 468, 470, 474, 478, 479, 480, 481, 484], "take": [1, 2, 3, 8, 31, 35, 42, 47, 50, 65, 66, 71, 72, 77, 118, 124, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 218, 220, 256, 259, 260, 264, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 336, 337, 345, 347, 348, 349, 350, 352, 354, 357, 360, 363, 384, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 431, 442, 458, 459, 461, 464, 465, 466, 468, 469, 470, 471, 478, 479, 480, 482, 485], "consider": [1, 2, 3, 8, 136, 138, 264, 465, 478, 479, 482], "whether": [1, 2, 3, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 96, 101, 103, 110, 111, 123, 127, 130, 133, 137, 144, 145, 149, 150, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 211, 220, 221, 223, 226, 257, 263, 265, 272, 273, 275, 282, 283, 298, 302, 303, 331, 333, 334, 337, 349, 354, 358, 364, 365, 366, 367, 368, 369, 371, 373, 374, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 430, 454, 464, 465, 466, 468, 469, 478, 479, 480, 484, 485], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 101, 104, 108, 110, 115, 116, 117, 121, 124, 127, 130, 131, 132, 133, 136, 137, 138, 139, 144, 145, 148, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 211, 212, 215, 218, 219, 220, 223, 224, 227, 228, 230, 235, 236, 237, 239, 244, 245, 246, 248, 251, 252, 256, 257, 259, 262, 264, 265, 266, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 309, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 350, 352, 353, 354, 357, 360, 364, 366, 367, 373, 379, 381, 382, 384, 385, 386, 387, 388, 389, 397, 398, 399, 401, 402, 403, 404, 405, 406, 422, 424, 430, 435, 436, 437, 440, 450, 452, 453, 454, 459, 460, 461, 464, 465, 466, 467, 468, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485], "occur": [1, 8, 16, 42, 65, 73, 74, 77, 84, 127, 130, 133, 137, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 216, 228, 239, 244, 271, 278, 331, 333, 337, 341, 346, 347, 350, 351, 352, 353, 354, 376, 397, 468, 482, 485], "serial": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 272, 273, 275, 331, 333, 337, 397, 399], "parallel": [1, 3, 8, 127, 130, 133, 136, 137, 138, 145, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 265, 271, 298, 302, 364, 451, 452, 453, 454, 465, 466, 478, 479, 484], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 61, 63, 70, 82, 83, 84, 94, 95, 96, 97, 134, 152, 157, 166, 184, 263, 272, 273, 334, 335, 336, 398, 452, 453, 454, 464, 465, 466, 484, 485], "multisyncdatacollector": [1, 16, 22, 23, 25, 27, 280, 453, 456, 466, 472, 484], "split": [1, 15, 16, 18, 21, 22, 23, 25, 27, 39, 40, 46, 48, 61, 63, 74, 83, 94, 108, 115, 116, 148, 159, 160, 179, 296, 300, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 459, 461, 466, 470, 482, 484], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 66, 69, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 108, 115, 116, 128, 129, 131, 132, 136, 138, 139, 141, 143, 144, 152, 153, 157, 163, 168, 263, 272, 273, 275, 298, 302, 308, 318, 319, 382, 397, 399, 442, 456, 458, 459, 460, 464, 469, 473, 478, 479, 480], "aggreg": [1, 3, 35, 65, 108, 121, 159, 160, 185, 207, 236, 273, 282, 283, 285, 286, 356, 460, 479], "result": [1, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 36, 42, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 84, 85, 95, 96, 97, 108, 110, 114, 115, 116, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 280, 295, 296, 298, 300, 302, 303, 308, 321, 327, 331, 333, 337, 345, 347, 352, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 442, 460, 465, 467, 469, 470, 473, 474, 480, 481, 484, 485], "final": [1, 2, 3, 4, 27, 50, 61, 63, 70, 71, 84, 95, 96, 97, 180, 183, 184, 258, 271, 277, 295, 296, 298, 300, 302, 308, 319, 348, 355, 398, 402, 435, 459, 464, 465, 466, 468, 473, 474, 476, 478, 479, 480, 485], "multiasyncdatacollector": [1, 15, 21, 22, 23, 25, 27, 280, 452, 456, 464, 465, 466, 472, 484], "sever": [1, 2, 3, 8, 35, 42, 47, 51, 55, 65, 66, 72, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 216, 218, 236, 265, 275, 331, 333, 337, 384, 397, 399, 464, 466, 468, 473, 474, 482, 485], "gather": [1, 3, 22, 25, 27, 50, 83, 94, 101, 103, 108, 115, 123, 237, 244, 307, 310, 315, 382, 397, 401, 444, 457, 458, 465, 466, 467, 472, 478, 479, 480, 482, 484, 485], "continu": [1, 2, 3, 9, 36, 39, 50, 85, 86, 87, 96, 116, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 200, 208, 233, 258, 266, 285, 286, 287, 288, 318, 319, 356, 361, 365, 388, 402, 407, 415, 459, 464, 466, 470, 478, 479, 482], "concomitantli": [1, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188], "network": [1, 4, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 282, 283, 285, 286, 287, 288, 291, 293, 294, 300, 303, 308, 309, 310, 312, 313, 314, 316, 318, 320, 322, 323, 324, 329, 331, 333, 337, 342, 343, 344, 345, 353, 357, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 397, 399, 400, 402, 403, 404, 405, 406, 449, 450, 459, 460, 461, 468, 471, 474, 477, 480, 485], "impli": [1, 84, 485], "mai": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 95, 96, 97, 99, 102, 108, 115, 127, 130, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 239, 252, 263, 265, 267, 272, 273, 275, 278, 298, 302, 303, 308, 331, 333, 337, 354, 366, 373, 381, 384, 387, 397, 398, 399, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 478, 479, 480, 481, 482, 485], "slightli": [1, 31, 460, 467, 468, 478, 480, 481, 482, 485], "lag": [1, 464, 465, 466], "therefor": [1, 2, 3, 7, 62, 69, 78, 79, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 248, 384, 399, 400, 458, 468, 471, 478, 485], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 215], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 35, 42, 44, 46, 47, 50, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 99, 101, 103, 108, 110, 115, 116, 121, 123, 124, 127, 130, 133, 137, 145, 148, 151, 154, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 206, 207, 208, 209, 212, 215, 220, 227, 235, 243, 248, 251, 256, 257, 258, 259, 260, 264, 265, 267, 270, 271, 275, 277, 295, 296, 297, 298, 300, 301, 302, 306, 307, 308, 316, 318, 319, 331, 333, 337, 345, 350, 353, 354, 363, 364, 365, 366, 367, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 460, 461, 464, 465, 466, 468, 469, 476, 477, 478, 479, 480, 482, 485], "off": [1, 2, 4, 299, 328, 346, 387, 420, 435, 445, 459, 461, 464, 465, 466, 470, 471, 478, 479, 481, 484, 485], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 42, 43, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 103, 108, 110, 115, 123, 127, 130, 133, 136, 137, 138, 142, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 223, 226, 230, 239, 257, 264, 265, 271, 275, 292, 296, 298, 300, 302, 306, 309, 311, 331, 333, 337, 342, 344, 345, 347, 351, 364, 372, 374, 380, 384, 397, 399, 435, 459, 460, 461, 464, 465, 466, 467, 469, 470, 472, 473, 476, 478, 479, 480, 481, 482, 485], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 62, 67, 68, 69, 78, 79, 110, 157, 166, 273, 334, 485], "rollout": [1, 2, 3, 11, 15, 16, 18, 21, 27, 29, 31, 50, 71, 77, 84, 121, 127, 128, 129, 130, 133, 137, 139, 140, 143, 144, 145, 149, 150, 151, 152, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 192, 208, 209, 211, 212, 215, 218, 220, 221, 223, 226, 227, 228, 233, 235, 236, 241, 245, 246, 251, 252, 253, 256, 257, 259, 260, 263, 266, 272, 273, 275, 279, 280, 281, 298, 302, 305, 319, 349, 364, 420, 422, 444, 459, 464, 466, 467, 470, 471, 472, 473, 474, 481, 482, 484], "necessari": [1, 4, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 252, 385, 402, 403, 404, 405, 406, 458, 460, 464, 466, 470, 471, 472, 476], "synchronis": [1, 134, 478, 479], "either": [1, 2, 5, 28, 33, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 94, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 237, 256, 257, 273, 275, 331, 333, 337, 359, 382, 389, 390, 397, 399, 426, 461, 464, 465, 467, 478, 481, 482, 484, 485], "update_policy_weights_": [1, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 464, 479, 484], "update_at_each_batch": [1, 15, 16, 21], "true": [1, 2, 3, 4, 8, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 107, 108, 110, 111, 113, 114, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 206, 207, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 225, 228, 230, 233, 234, 235, 236, 237, 238, 239, 243, 244, 246, 247, 250, 251, 252, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 282, 283, 285, 286, 287, 288, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 326, 327, 328, 331, 333, 334, 337, 340, 341, 342, 343, 344, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 402, 403, 404, 405, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 429, 430, 433, 434, 435, 437, 440, 454, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "second": [1, 2, 3, 8, 15, 16, 18, 21, 29, 31, 50, 51, 52, 53, 54, 121, 157, 191, 194, 212, 260, 296, 298, 300, 302, 347, 366, 381, 384, 387, 422, 424, 427, 429, 439, 464, 466, 472, 478, 479, 480, 482, 484, 485], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 203, 206, 208, 212, 219, 223, 224, 226, 227, 228, 233, 235, 236, 241, 242, 243, 245, 246, 248, 252, 255, 256, 258, 261, 264, 265, 266, 268, 270, 272, 275, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 311, 312, 317, 319, 320, 321, 329, 331, 332, 333, 334, 335, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 358, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 420, 437, 442, 448, 459, 464, 465, 466, 467, 468, 478, 479, 480, 481, 484], "oper": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 102, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 230, 235, 260, 262, 266, 273, 275, 291, 292, 297, 301, 331, 333, 337, 342, 343, 344, 346, 347, 348, 353, 359, 364, 366, 368, 369, 374, 381, 384, 386, 397, 398, 399, 400, 401, 402, 403, 404, 405, 440, 456, 458, 460, 461, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 485], "instanc": [1, 2, 3, 4, 7, 8, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 35, 36, 42, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 82, 83, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 106, 108, 110, 115, 116, 123, 127, 130, 132, 133, 134, 136, 137, 138, 142, 145, 151, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 207, 239, 258, 265, 272, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 308, 309, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 334, 335, 337, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 365, 367, 369, 372, 373, 380, 382, 385, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 420, 422, 426, 430, 435, 444, 445, 446, 450, 452, 453, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 476, 480, 482, 485], "cpu": [1, 2, 3, 8, 10, 15, 16, 18, 21, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 110, 115, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 206, 208, 212, 219, 223, 224, 226, 227, 228, 233, 236, 241, 243, 245, 246, 248, 252, 255, 256, 258, 264, 265, 266, 268, 270, 275, 279, 281, 291, 296, 297, 298, 300, 301, 302, 305, 311, 312, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 361, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 420, 459, 464, 465, 466, 467, 478, 479, 480, 481, 484], "slower": [1, 478], "than": [1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 32, 33, 35, 65, 84, 108, 115, 116, 119, 121, 127, 130, 133, 137, 141, 145, 155, 156, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 220, 236, 237, 246, 273, 277, 288, 298, 300, 302, 303, 330, 341, 346, 353, 354, 358, 382, 397, 399, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 457, 459, 460, 464, 465, 466, 468, 469, 471, 478, 479, 480, 482, 484, 485], "one": [1, 2, 3, 4, 5, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 110, 111, 115, 116, 117, 119, 121, 122, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 212, 215, 218, 220, 221, 223, 224, 225, 226, 233, 236, 238, 239, 243, 248, 251, 254, 255, 257, 258, 259, 264, 265, 267, 270, 272, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 309, 310, 313, 314, 315, 316, 317, 319, 321, 322, 323, 325, 330, 331, 333, 337, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 394, 397, 398, 399, 400, 402, 403, 404, 405, 409, 410, 422, 424, 433, 435, 436, 440, 444, 454, 457, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 485], "cuda": [1, 2, 3, 7, 15, 16, 18, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 128, 129, 130, 133, 137, 139, 140, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 235, 242, 243, 258, 264, 265, 268, 270, 275, 296, 297, 300, 301, 331, 333, 334, 337, 353, 397, 399, 432, 464, 465, 466, 467, 478, 479, 481, 485], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 53, 65, 69, 78, 79, 80, 84, 103, 110, 111, 123, 127, 128, 129, 143, 144, 157, 166, 168, 186, 192, 216, 218, 225, 234, 237, 238, 248, 251, 255, 256, 263, 272, 296, 300, 302, 308, 311, 312, 341, 346, 350, 351, 353, 354, 357, 366, 373, 381, 384, 394, 408, 454, 459, 460, 461, 464, 465, 466, 469, 471, 472, 478, 479, 480, 482, 484], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 215, 272, 311, 334, 345, 350, 354, 371, 420, 458, 464, 466, 468, 472, 474, 482, 484], "dispatch": [1, 3, 22, 23, 25, 27, 42, 65, 77, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 330, 331, 333, 337, 349, 397, 399, 422, 464, 485], "avail": [1, 2, 3, 4, 6, 27, 62, 69, 78, 79, 108, 114, 115, 116, 128, 129, 131, 132, 141, 143, 144, 149, 150, 155, 156, 157, 159, 160, 163, 169, 170, 171, 172, 190, 193, 208, 211, 214, 233, 235, 292, 321, 350, 354, 382, 397, 422, 452, 453, 456, 464, 465, 466, 467, 468, 469, 470, 478, 479, 480, 482, 485], "speed": [1, 2, 3, 4, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 460, 464, 465, 466, 467, 478, 479, 480, 482, 484], "avoid": [1, 2, 3, 35, 42, 47, 55, 65, 66, 72, 77, 101, 103, 115, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 215, 233, 263, 265, 272, 273, 275, 278, 327, 331, 333, 337, 341, 353, 358, 366, 367, 381, 384, 387, 397, 399, 443, 466, 468, 479], "oom": [1, 3, 61, 63, 70, 84, 95, 96, 97, 101, 103, 123, 184, 398], "choic": [1, 2, 57, 157, 192, 459, 460, 464, 465, 471, 478, 479], "pass": [1, 2, 3, 4, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 33, 35, 39, 40, 42, 47, 48, 55, 57, 62, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 82, 83, 96, 99, 101, 103, 108, 110, 115, 116, 121, 123, 127, 130, 133, 134, 135, 137, 138, 145, 148, 152, 157, 158, 159, 160, 161, 166, 167, 168, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 215, 221, 223, 226, 236, 237, 245, 246, 263, 267, 272, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 309, 310, 311, 313, 314, 317, 319, 320, 322, 323, 325, 329, 330, 331, 333, 334, 337, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 365, 366, 367, 380, 381, 382, 384, 385, 387, 389, 390, 397, 399, 402, 403, 404, 405, 406, 420, 437, 440, 452, 453, 454, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 482, 484, 485], "ie": [1, 2, 3, 22, 25, 28, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 89, 107, 116, 127, 130, 133, 137, 141, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 208, 215, 230, 255, 258, 267, 272, 298, 302, 331, 333, 337, 345, 353, 397, 459, 460, 465, 479], "store": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 35, 39, 42, 45, 46, 47, 50, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 110, 115, 121, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 233, 260, 271, 272, 273, 275, 277, 279, 280, 305, 319, 331, 333, 337, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 429, 456, 458, 461, 464, 466, 467, 470, 472, 474, 478, 479, 481, 485], "while": [1, 2, 3, 7, 8, 15, 16, 18, 21, 29, 31, 35, 42, 47, 55, 65, 66, 67, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 248, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 372, 380, 381, 384, 397, 399, 459, 460, 464, 466, 467, 470, 472, 473, 478, 479, 480, 481, 482, 484], "wait": [1, 13, 15, 16, 21, 22, 23, 24, 25, 27, 28, 67, 169, 467, 480], "also": [1, 2, 3, 8, 9, 11, 15, 16, 31, 33, 34, 35, 38, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 69, 70, 72, 77, 78, 79, 82, 84, 94, 95, 96, 97, 101, 102, 103, 108, 110, 115, 116, 121, 123, 127, 130, 133, 137, 144, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 205, 206, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 225, 227, 228, 229, 231, 233, 234, 235, 239, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 271, 272, 275, 276, 282, 283, 296, 300, 303, 323, 331, 333, 337, 349, 350, 355, 356, 357, 364, 365, 367, 368, 369, 371, 372, 373, 378, 380, 384, 387, 389, 397, 398, 399, 402, 409, 410, 420, 422, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 482, 484, 485], "impact": [1, 2, 3, 13, 22, 23, 25, 144, 223, 226, 278, 364, 366, 381, 384, 386, 397, 465, 467, 478, 479], "memori": [1, 3, 8, 27, 35, 38, 42, 47, 55, 61, 63, 65, 66, 67, 70, 72, 77, 83, 84, 95, 96, 97, 99, 101, 102, 106, 127, 130, 133, 134, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 219, 243, 258, 264, 265, 268, 270, 272, 273, 275, 290, 300, 301, 331, 333, 337, 353, 397, 398, 399, 454, 456, 461, 464, 465, 467, 478, 482, 484], "manag": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 280, 298, 302, 340, 395, 396, 402, 403, 404, 405, 430, 435, 458, 459, 467, 468, 471, 476, 484], "kei": [1, 2, 7, 15, 16, 18, 21, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 107, 108, 110, 113, 115, 116, 121, 127, 130, 133, 137, 143, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 277, 279, 281, 291, 292, 295, 298, 302, 304, 305, 319, 321, 331, 333, 337, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 422, 434, 435, 436, 438, 439, 440, 444, 460, 461, 464, 466, 467, 468, 469, 471, 476, 477, 478, 479, 480, 482, 484, 485], "control": [1, 3, 5, 8, 18, 31, 32, 39, 40, 41, 48, 69, 74, 78, 79, 108, 110, 115, 127, 130, 131, 132, 133, 137, 144, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 194, 206, 225, 285, 286, 287, 288, 298, 302, 304, 305, 319, 323, 330, 332, 333, 337, 353, 354, 355, 364, 366, 367, 381, 382, 384, 388, 397, 402, 407, 415, 420, 430, 459, 461, 464, 465, 466, 467, 468, 469, 470, 471, 478, 479, 480, 482, 484], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 102, 110, 113, 114, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 215, 216, 220, 223, 226, 231, 233, 235, 236, 238, 239, 243, 244, 246, 256, 258, 259, 262, 263, 264, 265, 266, 268, 272, 275, 276, 291, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 316, 318, 328, 331, 333, 337, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 400, 402, 403, 404, 405, 420, 422, 431, 436, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 485], "storing_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 465, 479], "dure": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 62, 63, 66, 67, 68, 69, 71, 72, 78, 79, 83, 94, 99, 104, 108, 110, 113, 115, 127, 130, 133, 134, 137, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 190, 192, 196, 197, 211, 212, 215, 218, 223, 226, 228, 230, 231, 233, 237, 241, 253, 255, 258, 260, 262, 263, 265, 266, 267, 272, 273, 275, 278, 280, 281, 298, 302, 309, 349, 402, 404, 405, 435, 440, 460, 464, 465, 466, 467, 470, 471, 472, 474, 478, 479, 480, 482, 485], "heurist": [1, 4, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 277, 349, 354, 464, 468, 472, 485], "usual": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 113, 121, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 312, 384, 389, 401, 402, 403, 404, 405, 406, 421, 457, 458, 459, 460, 461, 464, 465, 466, 467, 470, 472, 473, 479, 482, 485], "same": [1, 2, 3, 4, 18, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 114, 115, 116, 119, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 215, 223, 225, 226, 231, 233, 236, 237, 238, 239, 255, 263, 264, 265, 272, 275, 276, 282, 283, 297, 301, 303, 306, 307, 308, 309, 319, 327, 331, 333, 337, 345, 357, 365, 367, 380, 382, 385, 387, 389, 390, 394, 397, 398, 399, 460, 464, 465, 466, 469, 470, 472, 476, 477, 478, 479, 481, 482, 485], "default": [1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 110, 111, 113, 114, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 321, 322, 323, 325, 326, 327, 328, 331, 333, 334, 335, 337, 340, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 450, 454, 460, 461, 464, 465, 466, 467, 470, 478, 481, 482, 484, 485], "behavior": [1, 2, 3, 4, 15, 16, 27, 35, 42, 47, 55, 65, 66, 72, 77, 82, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 216, 223, 226, 239, 244, 257, 265, 273, 275, 278, 298, 299, 302, 328, 331, 333, 337, 372, 380, 389, 397, 399, 420, 430, 435, 459, 465, 467, 478, 479, 480, 482], "besid": 1, "those": [1, 2, 3, 5, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 197, 215, 220, 223, 226, 233, 239, 258, 259, 262, 266, 302, 318, 350, 354, 355, 356, 442, 452, 453, 459, 464, 465, 469, 470, 479, 480, 485], "choos": [1, 3, 11, 57, 127, 130, 148, 298, 302, 384, 456, 460, 464, 465, 466, 468, 478, 479, 482, 484], "follow": [1, 2, 3, 6, 7, 8, 11, 20, 35, 42, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 77, 82, 84, 95, 96, 97, 108, 115, 116, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 151, 154, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 211, 215, 235, 243, 268, 272, 273, 275, 282, 283, 296, 298, 300, 302, 303, 331, 333, 337, 347, 350, 351, 352, 363, 364, 365, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 398, 399, 422, 440, 459, 460, 461, 464, 465, 466, 467, 468, 471, 472, 477, 478, 479, 480, 482, 484, 485], "max_frames_per_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 443, 464, 466, 484], "frame": [1, 2, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 178, 215, 231, 275, 277, 295, 319, 349, 421, 422, 424, 427, 429, 433, 435, 440, 443, 444, 458, 464, 465, 466, 467, 470, 478, 479, 482, 484, 485], "call": [1, 2, 3, 7, 8, 11, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 101, 102, 103, 104, 108, 109, 110, 114, 115, 117, 119, 123, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 309, 310, 311, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 353, 354, 356, 357, 360, 365, 366, 367, 373, 380, 381, 382, 384, 385, 387, 389, 390, 397, 398, 399, 401, 402, 403, 404, 405, 420, 421, 424, 435, 460, 461, 465, 466, 467, 468, 469, 470, 472, 473, 478, 479, 480, 482, 484, 485], "frames_per_batch": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 44, 55, 67, 75, 212, 215, 248, 298, 302, 443, 464, 465, 466, 467, 468, 472, 474, 478, 479, 482, 484], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 39, 40, 42, 46, 47, 48, 50, 51, 53, 55, 56, 65, 66, 69, 71, 72, 74, 76, 77, 78, 84, 108, 110, 113, 115, 116, 118, 121, 127, 130, 133, 134, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 234, 236, 237, 243, 248, 251, 256, 257, 258, 259, 263, 264, 270, 272, 273, 275, 276, 277, 292, 295, 296, 297, 298, 300, 302, 308, 309, 313, 320, 321, 329, 331, 333, 337, 340, 346, 347, 352, 354, 356, 366, 381, 384, 397, 399, 402, 408, 411, 412, 413, 414, 416, 417, 418, 419, 422, 435, 437, 452, 453, 460, 464, 465, 466, 467, 470, 471, 472, 474, 478, 479, 480, 481, 482, 484, 485], "init_random_fram": [1, 15, 16, 18, 21, 22, 23, 25, 27, 443, 464, 465, 468, 474], "rand_step": [1, 2, 3, 44, 75, 127, 130, 131, 132, 133, 134, 136, 137, 138, 145, 146, 147, 151, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 234, 258, 272, 480, 484, 485], "reset_at_each_it": [1, 15, 16, 18, 21, 22, 23, 25, 27, 29, 464], "split_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 464, 465, 466], "trajectori": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 42, 45, 46, 55, 56, 76, 78, 84, 107, 108, 115, 116, 121, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 244, 256, 263, 275, 279, 302, 305, 319, 384, 399, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 431, 456, 460, 464, 465, 466, 467, 469, 472, 474, 480, 484, 485], "pad": [1, 2, 3, 31, 64, 80, 96, 192, 197, 199, 215, 262, 282, 283, 285, 286, 302, 306, 307, 308, 333, 337, 437], "along": [1, 2, 3, 15, 16, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 103, 108, 110, 115, 116, 121, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 214, 215, 216, 237, 239, 241, 244, 251, 255, 261, 275, 302, 303, 306, 307, 312, 331, 333, 337, 346, 350, 353, 354, 367, 382, 389, 397, 398, 399, 464, 465, 467, 469, 471, 478, 479, 480, 482, 484], "point": [1, 2, 3, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 100, 107, 108, 111, 121, 122, 125, 126, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 275, 304, 331, 333, 337, 353, 363, 374, 397, 399, 440, 457, 465, 466, 477, 478, 479, 480, 482, 484, 485], "boolean": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 116, 137, 188, 207, 211, 220, 244, 256, 306, 307, 319, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 461, 467], "repres": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 39, 40, 44, 48, 50, 57, 74, 75, 77, 78, 84, 102, 127, 130, 131, 132, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 231, 244, 260, 272, 275, 292, 306, 307, 321, 327, 333, 337, 346, 347, 351, 352, 393, 402, 437, 459, 464, 466, 467, 468, 469, 470, 471, 478, 479], "valid": [1, 2, 3, 31, 61, 63, 64, 83, 84, 94, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 174, 178, 179, 180, 183, 186, 187, 188, 211, 244, 263, 265, 275, 277, 282, 283, 303, 306, 307, 319, 366, 373, 381, 384, 387, 402, 403, 404, 405, 437, 461, 468, 485], "exploration_typ": [1, 15, 16, 18, 21, 22, 23, 25, 27, 435, 456, 459, 464, 465], "strategi": [1, 2, 3, 18, 96, 113, 148, 208, 295, 307, 315, 459, 461, 464, 465, 468, 470, 478, 479, 482, 484], "reset_when_don": [1, 15, 16, 18, 21], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 103, 110, 115, 116, 127, 130, 133, 137, 144, 145, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 214, 215, 221, 227, 235, 256, 257, 258, 263, 265, 271, 272, 273, 275, 276, 277, 282, 283, 298, 302, 306, 307, 308, 309, 318, 331, 332, 333, 337, 346, 350, 351, 354, 357, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 397, 398, 399, 400, 422, 440, 450, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 484, 485], "organ": [1, 2, 476, 480, 482], "within": [1, 2, 3, 15, 16, 20, 21, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 102, 107, 108, 116, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 273, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 340, 345, 347, 349, 352, 354, 357, 360, 361, 369, 374, 389, 397, 398, 399, 400, 402, 420, 422, 458, 459, 460, 465, 468, 469, 470, 471, 472, 473, 474, 478, 480, 484], "differ": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 110, 113, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 215, 220, 224, 225, 236, 239, 246, 255, 263, 265, 267, 275, 276, 292, 296, 297, 300, 301, 303, 305, 308, 309, 310, 321, 331, 333, 337, 354, 380, 382, 384, 393, 397, 399, 402, 403, 404, 408, 409, 410, 435, 440, 442, 452, 453, 458, 459, 460, 461, 464, 465, 466, 468, 469, 471, 473, 477, 478, 479, 480, 481, 482, 484, 485], "how": [1, 2, 3, 11, 20, 22, 23, 25, 32, 35, 42, 47, 55, 62, 65, 66, 72, 77, 78, 107, 108, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 236, 275, 310, 331, 333, 337, 350, 364, 366, 379, 381, 382, 384, 397, 399, 422, 424, 440, 457, 459, 464, 465, 466, 467, 468, 469, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485], "tabl": [1, 35, 459, 465, 470], "summar": [1, 3, 480], "what": [1, 3, 8, 11, 41, 42, 62, 82, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 206, 227, 258, 263, 351, 367, 378, 382, 389, 397, 457, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 478, 479, 480, 481, 482, 484, 485], "expect": [1, 2, 3, 4, 7, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 108, 114, 115, 127, 130, 133, 137, 145, 151, 154, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 230, 232, 234, 235, 236, 237, 239, 241, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 296, 297, 298, 300, 301, 302, 308, 309, 319, 331, 333, 337, 347, 353, 356, 364, 365, 366, 367, 368, 369, 371, 372, 373, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 394, 397, 399, 400, 444, 457, 459, 460, 461, 464, 466, 467, 469, 470, 471, 472, 476, 478, 479, 480, 482, 485], "n": [1, 2, 3, 6, 7, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 225, 230, 267, 275, 296, 297, 300, 305, 316, 318, 319, 331, 333, 337, 349, 354, 364, 365, 373, 382, 397, 399, 401, 437, 458, 461, 465, 467, 468, 482, 484, 485], "b": [1, 2, 3, 7, 8, 29, 31, 39, 40, 42, 48, 61, 63, 65, 69, 70, 71, 72, 74, 77, 78, 79, 84, 95, 96, 97, 101, 102, 121, 130, 184, 194, 233, 266, 296, 297, 300, 301, 308, 309, 311, 312, 320, 329, 331, 333, 337, 357, 397, 398, 402, 403, 404, 405, 406, 408, 422, 465, 476, 482], "cat_result": [1, 15, 16], "na": [1, 180, 183, 195], "t": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 107, 108, 110, 114, 115, 116, 121, 127, 130, 133, 134, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 233, 234, 235, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 296, 298, 300, 302, 319, 331, 333, 337, 346, 353, 364, 388, 397, 398, 399, 402, 403, 404, 405, 406, 408, 422, 429, 440, 442, 454, 457, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 484, 485], "p": [1, 2, 4, 110, 113, 134, 164, 165, 280, 281, 334], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 35, 42, 47, 55, 65, 66, 72, 77, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 223, 224, 226, 234, 243, 248, 252, 257, 258, 261, 263, 264, 265, 268, 270, 271, 273, 275, 276, 296, 299, 300, 303, 308, 323, 327, 328, 331, 333, 337, 353, 354, 356, 363, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 442, 452, 453, 454, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 485], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 106, 107, 108, 110, 121, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 223, 224, 226, 234, 239, 258, 261, 265, 266, 276, 302, 303, 309, 310, 350, 353, 354, 356, 357, 363, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 402, 403, 404, 405, 422, 431, 442, 452, 453, 454, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 472, 473, 478, 479, 480, 482, 484, 485], "dimens": [1, 3, 15, 16, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 69, 70, 71, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 108, 115, 116, 121, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 184, 185, 186, 187, 188, 192, 199, 200, 208, 214, 215, 216, 230, 237, 239, 241, 244, 251, 254, 255, 258, 261, 267, 272, 273, 282, 283, 284, 289, 290, 298, 300, 302, 303, 306, 307, 308, 311, 312, 317, 320, 324, 325, 326, 327, 330, 346, 349, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 454, 456, 460, 464, 465, 466, 467, 469, 476, 478, 479, 480, 482], "time": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 96, 98, 101, 110, 121, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 148, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 206, 214, 215, 216, 237, 244, 251, 258, 259, 260, 263, 265, 272, 275, 281, 293, 296, 300, 302, 319, 331, 333, 337, 340, 349, 354, 365, 366, 367, 373, 376, 380, 381, 382, 384, 385, 387, 389, 390, 397, 399, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 440, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 482, 484, 485], "adapt": [1, 32, 209, 237, 256, 272, 278, 381, 464, 468, 480], "equal": [1, 15, 16, 21, 35, 84, 108, 115, 116, 130, 152, 155, 156, 157, 166, 186, 238, 239, 282, 283, 296, 298, 300, 302, 303, 306, 307, 309, 388, 393, 431, 452, 453, 464, 466, 481], "introduc": [1, 2, 157, 166, 296, 298, 300, 302, 319, 464, 478], "some": [1, 2, 3, 4, 7, 8, 9, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 101, 103, 110, 121, 123, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 243, 258, 265, 268, 275, 285, 298, 325, 331, 333, 337, 354, 355, 356, 397, 399, 422, 431, 443, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479, 480, 482, 484, 485], "confus": [1, 33, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 331, 333, 337, 397, 399], "other": [1, 2, 3, 4, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 110, 113, 114, 115, 116, 117, 119, 123, 127, 130, 133, 136, 137, 138, 142, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 218, 220, 224, 225, 245, 252, 258, 261, 268, 272, 273, 275, 280, 295, 296, 298, 302, 312, 331, 333, 337, 340, 345, 347, 352, 354, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 398, 399, 400, 402, 420, 437, 452, 453, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479, 480, 481, 484, 485], "better": [1, 3, 8, 9, 15, 16, 31, 144, 298, 302, 460, 466, 469, 480, 484], "consist": [1, 2, 3, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 271, 275, 280, 283, 303, 331, 333, 337, 397, 399, 458, 464, 465, 466, 480, 481, 485], "interact": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 189, 191, 265, 350, 354, 458, 464, 466, 468, 469, 470, 472, 478, 479, 480, 485], "keep": [1, 2, 3, 4, 7, 8, 16, 62, 69, 78, 79, 110, 114, 121, 130, 157, 166, 206, 239, 243, 270, 272, 273, 275, 319, 349, 399, 422, 433, 440, 464, 465, 466, 467, 472, 473, 474, 479, 480, 482, 485], "separ": [1, 2, 4, 8, 15, 16, 18, 21, 22, 25, 27, 29, 31, 39, 40, 48, 69, 74, 78, 79, 215, 243, 270, 365, 368, 371, 373, 385, 387, 389, 390, 402, 460, 464, 465, 470, 471, 478, 479, 482, 485], "interchang": [1, 308, 309, 466, 469, 473, 481, 482], "between": [1, 2, 3, 4, 5, 15, 16, 17, 18, 21, 24, 27, 29, 32, 35, 42, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 95, 96, 97, 103, 108, 110, 111, 114, 115, 116, 123, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 225, 238, 249, 260, 263, 265, 272, 273, 275, 282, 283, 291, 296, 298, 302, 303, 308, 309, 331, 333, 335, 337, 347, 350, 354, 364, 366, 367, 368, 371, 372, 373, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 402, 435, 440, 460, 464, 465, 467, 468, 472, 476, 478, 479, 480, 482, 485], "wherea": [1, 2, 28, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 225, 263, 265, 275, 331, 333, 337, 367, 382, 387, 397, 399, 461, 473], "correspond": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 107, 108, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 233, 243, 258, 263, 265, 270, 272, 273, 275, 280, 295, 298, 300, 302, 306, 307, 319, 331, 333, 337, 350, 354, 367, 369, 372, 373, 387, 397, 398, 399, 400, 402, 403, 404, 405, 406, 459, 464, 465, 466, 468, 469, 471, 472, 473, 478, 479, 480, 481], "sub": [1, 2, 3, 15, 16, 21, 22, 23, 25, 27, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 108, 115, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 244, 263, 273, 275, 331, 333, 337, 355, 356, 397, 399, 431, 440, 459, 460, 464, 465, 466, 472, 477, 484, 485], "doesn": [1, 4, 35, 42, 47, 55, 65, 66, 72, 77, 121, 127, 130, 133, 137, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 223, 226, 275, 276, 331, 333, 337, 397, 399, 468, 469], "understood": [1, 464], "serv": [1, 3, 22, 25, 27, 139, 482, 484, 485], "basi": [1, 121, 308, 482, 484], "we": [1, 2, 3, 5, 7, 9, 11, 31, 32, 35, 39, 42, 47, 50, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 101, 114, 116, 121, 127, 128, 129, 130, 133, 134, 137, 141, 143, 144, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 220, 235, 243, 246, 252, 263, 268, 271, 272, 273, 275, 276, 279, 302, 308, 309, 310, 331, 333, 337, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 422, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "anoth": [1, 2, 3, 8, 14, 17, 19, 20, 24, 26, 30, 50, 77, 82, 96, 102, 108, 115, 127, 130, 133, 136, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 221, 223, 224, 226, 258, 264, 303, 333, 337, 350, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 460, 464, 466, 467, 468, 470, 471, 477, 478, 479, 480, 485], "wise": [1, 237], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 102, 107, 108, 115, 116, 127, 130, 133, 137, 141, 145, 152, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 215, 219, 220, 233, 243, 255, 258, 263, 264, 265, 268, 270, 273, 275, 280, 298, 302, 303, 310, 330, 331, 333, 337, 353, 354, 355, 356, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 420, 422, 424, 458, 459, 461, 464, 465, 466, 467, 469, 470, 471, 473, 476, 478, 479, 480, 482, 484, 485], "op": [1, 17, 33, 34, 36, 37, 38, 43, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 238, 271, 277, 280, 295, 422, 442], "sinc": [1, 2, 3, 4, 5, 7, 11, 31, 35, 42, 47, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 107, 108, 116, 121, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 163, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 221, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 346, 347, 349, 351, 352, 357, 360, 397, 399, 420, 422, 460, 464, 465, 466, 467, 469, 470, 471, 476, 478, 480, 481, 482, 484, 485], "goal": [1, 3, 4, 145, 187, 257, 458, 464, 465, 466, 467, 476, 479, 480], "policy_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 465], "explicitli": [1, 2, 3, 4, 38, 83, 98, 99, 106, 110, 211, 318, 350, 430, 460, 465, 467, 472, 478, 479, 482], "do": [1, 2, 3, 4, 7, 57, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 194, 195, 206, 208, 220, 244, 258, 263, 271, 272, 298, 302, 309, 311, 343, 354, 382, 397, 402, 422, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 482, 484, 485], "deepcopi": [1, 310, 382, 397, 478], "place": [1, 2, 3, 19, 32, 35, 41, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 101, 103, 110, 113, 115, 123, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 211, 219, 227, 243, 258, 264, 265, 268, 270, 271, 272, 275, 310, 331, 333, 337, 345, 349, 353, 397, 398, 399, 402, 437, 442, 443, 460, 465, 466, 470, 473, 478, 479, 480, 482], "instanti": [1, 2, 3, 15, 16, 27, 61, 62, 63, 67, 68, 69, 70, 78, 79, 82, 84, 95, 96, 97, 107, 108, 110, 141, 144, 184, 188, 211, 233, 258, 309, 398, 402, 403, 404, 405, 406, 420, 464, 465, 470, 471, 473, 478, 479, 480, 482, 485], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 110, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 204, 206, 208, 214, 215, 218, 219, 223, 224, 226, 229, 235, 238, 239, 243, 251, 253, 255, 258, 259, 264, 265, 268, 270, 272, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 309, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 340, 345, 347, 349, 352, 353, 354, 356, 357, 360, 361, 364, 365, 367, 376, 380, 382, 384, 385, 386, 387, 389, 390, 394, 397, 398, 399, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 436, 440, 443, 452, 453, 454, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 484, 485], "graph": [1, 3, 4, 8, 42, 65, 77, 128, 129, 143, 144, 331, 333, 337, 395, 396, 397, 464, 468, 480], "reli": [1, 2, 3, 11, 31, 66, 72, 178, 258, 296, 297, 298, 300, 301, 302, 335, 364, 384, 402, 460, 464, 466, 468, 470, 472, 480, 485], "third": [1, 239, 260, 347, 478, 479], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 39, 40, 48, 61, 63, 70, 74, 84, 95, 96, 97, 184, 398, 464, 465, 466, 467, 468, 471, 472, 478, 479, 480, 484, 485], "limit": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 215, 235, 364, 366, 381, 382, 384, 386, 397, 460, 464, 465, 467, 478, 479, 480], "chart": 1, "show": [1, 2, 11, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 275, 309, 331, 333, 337, 397, 399, 422, 464, 466, 467, 468, 476, 478, 479, 480, 482, 484], "decis": [1, 2, 3, 284, 289, 317, 345, 370, 383, 459, 467, 469, 470, 478, 479, 482, 485], "multiprocess": [1, 2, 3, 14, 15, 16, 22, 23, 25, 69, 78, 79, 102, 110, 127, 134, 135, 157, 161, 166, 272, 273, 464, 465, 466, 467, 472, 478, 479, 480, 481, 485], "ensur": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 35, 42, 47, 55, 62, 65, 66, 72, 77, 78, 84, 107, 108, 114, 127, 130, 133, 137, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 215, 243, 256, 265, 268, 272, 273, 275, 298, 302, 331, 333, 337, 346, 366, 381, 384, 397, 399, 459, 465, 466, 480, 482], "flexibl": [1, 3, 9, 152, 391, 458, 460, 461, 464, 468, 482, 485], "extens": [1, 2, 62, 69, 78, 79, 116, 280, 461, 482], "mechan": [1, 4, 14, 17, 19, 24, 26, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 331, 333, 337, 397, 399, 465, 471, 480], "accommod": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 469, 470], "variou": [1, 2, 3, 14, 130, 178, 264, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 391, 397, 400, 422, 452, 453, 458, 464, 465, 466, 468, 469, 470, 471, 473, 478, 479, 482, 485], "deploy": [1, 468], "scenario": [1, 2, 19, 24, 26, 149, 150, 157, 171, 172, 220, 263, 420, 464, 470, 478, 479, 480], "facilit": [1, 2, 3, 7, 242, 243, 258, 268, 270, 342, 343, 344, 459, 464, 467, 470, 480], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 458], "These": [1, 2, 7, 50, 71, 124, 171, 243, 270, 273, 333, 337, 458, 459, 460, 464, 466, 478, 479, 480, 482, 485], "base": [1, 3, 4, 8, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 35, 50, 62, 69, 72, 78, 79, 83, 112, 118, 121, 122, 124, 125, 127, 128, 129, 130, 133, 137, 141, 143, 144, 145, 151, 152, 153, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 183, 186, 187, 188, 189, 197, 198, 199, 206, 220, 224, 248, 262, 264, 268, 269, 298, 302, 308, 310, 333, 337, 342, 348, 364, 365, 367, 368, 369, 371, 372, 373, 375, 380, 384, 385, 386, 387, 389, 390, 429, 440, 458, 459, 460, 461, 464, 465, 467, 469, 470, 471, 473, 476, 478, 479, 480, 482, 485], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 81, 82, 85, 86, 87, 88, 89, 105, 117, 118, 127, 130, 133, 137, 145, 151, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 228, 231, 235, 237, 245, 246, 252, 256, 262, 264, 265, 266, 272, 273, 275, 276, 280, 282, 296, 297, 298, 299, 300, 301, 302, 326, 327, 328, 331, 333, 337, 364, 365, 367, 370, 371, 372, 378, 380, 382, 383, 384, 386, 387, 389, 397, 399, 420, 431, 445, 458, 459, 461, 464, 465, 466, 467, 468, 478, 479, 480, 484], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 458, 478], "allow": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 39, 40, 42, 47, 48, 55, 57, 59, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 84, 95, 96, 97, 102, 108, 110, 113, 115, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 211, 212, 246, 273, 275, 276, 303, 331, 333, 337, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 391, 393, 397, 398, 399, 400, 458, 459, 461, 464, 466, 467, 468, 469, 470, 471, 478, 479, 480, 482, 484, 485], "tailor": [1, 186, 458, 484], "need": [1, 2, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 32, 35, 41, 42, 47, 55, 61, 63, 65, 66, 72, 77, 82, 117, 121, 127, 130, 133, 137, 141, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 218, 220, 221, 230, 236, 243, 246, 259, 263, 264, 265, 270, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 311, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 350, 351, 352, 353, 357, 360, 363, 373, 386, 387, 397, 399, 401, 406, 422, 440, 454, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 482, 484, 485], "handl": [1, 2, 3, 14, 15, 16, 22, 25, 27, 35, 42, 47, 55, 57, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 271, 272, 273, 275, 302, 303, 331, 333, 334, 337, 364, 382, 384, 397, 399, 440, 452, 453, 458, 464, 465, 466, 467, 469, 471, 476, 479, 482], "well": [1, 2, 3, 8, 27, 31, 35, 42, 47, 55, 62, 64, 65, 66, 69, 72, 77, 78, 79, 82, 108, 113, 117, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 264, 265, 275, 276, 280, 285, 300, 322, 323, 331, 333, 337, 354, 382, 384, 389, 397, 399, 402, 406, 458, 459, 464, 465, 467, 468, 469, 470, 471, 473, 481, 482, 484, 485], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "everi": [1, 3, 8, 15, 16, 17, 18, 21, 29, 35, 39, 40, 42, 47, 48, 55, 59, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 84, 110, 117, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 256, 257, 272, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 308, 309, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 366, 381, 382, 384, 397, 399, 440, 461, 464, 465, 466, 467, 469, 470, 478, 479, 480], "even": [1, 2, 3, 4, 8, 11, 16, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 101, 102, 103, 104, 108, 115, 117, 119, 123, 127, 130, 133, 134, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 211, 464, 466, 469, 476, 478, 479, 480, 485], "simplest": [1, 42, 65, 77, 121, 331, 333, 337, 357, 397, 464, 466, 467, 470, 478, 479, 482, 485], "vanillaweightupdat": 1, "dict": [1, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 55, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 108, 110, 115, 116, 127, 130, 133, 134, 135, 136, 137, 138, 145, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 235, 258, 263, 265, 271, 272, 273, 275, 276, 282, 283, 284, 285, 286, 287, 288, 289, 294, 303, 317, 331, 333, 337, 350, 354, 367, 387, 389, 397, 398, 399, 422, 426, 427, 435, 440, 445, 446, 452, 453, 454, 459, 464, 465, 466, 482, 484, 485], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 18, 24, 26, 30, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 99, 106, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 200, 214, 217, 222, 230, 243, 244, 251, 258, 265, 268, 270, 281, 298, 302, 330, 340, 357, 369, 373, 374, 387, 399, 400, 411, 412, 413, 414, 416, 417, 418, 419, 422, 464, 466, 477, 480], "divers": [1, 4, 157, 166], "abl": [1, 3, 50, 127, 148, 159, 160, 161, 167, 298, 302, 458, 464, 466, 467, 470, 477, 478, 479, 480, 482], "leav": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 69, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 207, 252, 398, 460, 464, 472, 482], "untouch": [1, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 228, 235, 237, 245, 246, 252, 256, 262, 264, 266, 273, 275, 399], "particularli": [1, 2, 3, 468, 484, 485], "benefici": [1, 2], "involv": [1, 136, 138, 139, 149, 150, 163, 212, 215, 263, 298, 302, 469, 471], "complex": [1, 2, 3, 14, 17, 19, 20, 24, 26, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399, 464, 465, 469, 470], "architectur": [1, 4, 289, 471, 478, 479, 484], "special": [1, 3, 86, 88, 188, 456, 458, 464, 467, 468, 485], "hardwar": [1, 3, 468], "By": [1, 2, 3, 18, 20, 39, 40, 48, 59, 74, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 237, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 330, 354, 382, 397, 399, 430, 435, 454, 458, 460, 464, 467, 478, 481, 482, 485], "retriev": [1, 3, 14, 17, 20, 24, 26, 50, 61, 62, 63, 65, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 110, 113, 115, 116, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 192, 206, 216, 224, 227, 239, 279, 282, 305, 333, 337, 349, 350, 354, 357, 361, 364, 365, 366, 367, 369, 381, 384, 385, 387, 389, 390, 397, 398, 400, 402, 403, 404, 405, 454, 461, 465, 466, 470, 480, 485], "appli": [1, 2, 3, 4, 14, 17, 18, 24, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 96, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 238, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 271, 272, 275, 280, 296, 300, 310, 327, 331, 333, 337, 346, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 397, 399, 402, 420, 436, 461, 464, 465, 466, 472, 476, 478, 480, 484, 485], "seamless": [1, 2, 303], "integr": [1, 2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 288, 298, 302, 305, 331, 333, 337, 353, 397, 399, 459, 469, 470, 472, 476, 478, 479, 480, 481], "infrastructur": [1, 3, 478, 479], "transit": [1, 35, 42, 47, 55, 65, 66, 72, 77, 108, 116, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 278, 280, 331, 333, 337, 359, 397, 399, 464, 467, 469, 470, 472, 478, 480, 482], "sampl": [1, 4, 8, 9, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 94, 101, 102, 103, 107, 108, 109, 110, 113, 114, 115, 116, 119, 121, 123, 127, 130, 133, 137, 145, 151, 154, 157, 158, 161, 166, 167, 168, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 273, 275, 277, 279, 290, 295, 299, 305, 306, 307, 315, 317, 318, 319, 322, 327, 328, 331, 333, 337, 338, 341, 346, 347, 348, 350, 351, 352, 353, 354, 364, 365, 366, 367, 368, 369, 371, 381, 383, 384, 389, 390, 397, 399, 431, 437, 440, 443, 456, 459, 460, 464, 465, 466, 467, 468, 469, 470, 472, 474, 478, 479, 481, 484, 485], "attent": [1, 2, 8, 186, 215, 333, 337, 464, 467, 485], "given": [1, 2, 3, 15, 16, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 108, 110, 115, 116, 127, 130, 133, 137, 145, 151, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 219, 225, 233, 239, 243, 258, 262, 264, 265, 266, 268, 270, 272, 273, 275, 277, 279, 281, 292, 293, 295, 296, 298, 300, 302, 305, 310, 321, 325, 331, 333, 337, 341, 346, 347, 349, 352, 353, 354, 355, 356, 358, 363, 368, 369, 371, 382, 397, 399, 401, 402, 403, 404, 405, 406, 408, 432, 435, 450, 459, 460, 461, 464, 465, 466, 469, 470, 471, 472, 473, 479, 480, 485], "built": [1, 2, 3, 5, 7, 110, 128, 129, 136, 143, 144, 154, 155, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 391, 397, 400, 448, 450, 451, 454, 464, 465, 466, 467, 468, 471, 473, 476, 480, 482, 485], "flatten": [1, 29, 33, 34, 36, 37, 38, 39, 40, 43, 44, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 121, 184, 212, 230, 398, 399, 402, 437, 456, 467, 479], "suffici": [1, 3, 4, 464], "preprocess": [1, 2, 83, 264, 465, 468], "popul": [1, 2, 3, 15, 16, 18, 27, 29, 62, 67, 68, 69, 76, 78, 79, 110, 186, 234, 258, 290, 310, 382, 397, 458, 464, 466, 467, 470, 472, 480, 482], "replaybuff": [1, 2, 3, 15, 16, 18, 21, 27, 29, 44, 62, 67, 68, 75, 78, 79, 101, 102, 107, 108, 109, 110, 115, 116, 125, 215, 244, 248, 275, 369, 374, 400, 448, 450, 456, 466, 468, 472, 474, 478, 479, 481, 482, 484], "lazytensorstorag": [1, 2, 15, 16, 18, 21, 29, 62, 69, 77, 78, 79, 107, 115, 116, 121, 248, 275, 466, 468, 474, 478, 479, 482], "lambda": [1, 2, 15, 16, 18, 21, 27, 28, 29, 42, 50, 65, 69, 77, 84, 121, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 212, 220, 221, 233, 235, 258, 266, 273, 275, 276, 281, 330, 331, 333, 337, 346, 349, 350, 351, 375, 377, 378, 389, 397, 402, 405, 413, 414, 418, 419, 420, 450, 460, 464, 465, 468, 478, 479, 481, 482, 484, 485], "reshap": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 115, 121, 212, 298, 302, 303, 318, 420, 466, 478, 479], "slice": [1, 2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 108, 110, 115, 116, 208, 214, 215, 482], "recommend": [1, 2, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 61, 62, 63, 69, 70, 78, 79, 84, 95, 96, 97, 115, 121, 141, 178, 179, 180, 183, 184, 215, 310, 335, 398, 460, 472, 478, 479], "achiev": [1, 2, 3, 4, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 257, 275, 281, 331, 333, 337, 350, 397, 399, 437, 461, 464, 465, 466, 467, 468, 476, 478, 479, 480, 482, 484, 485], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 102, 104, 110, 121, 127, 130, 133, 134, 137, 141, 145, 157, 158, 159, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 206, 212, 215, 220, 233, 243, 263, 264, 265, 268, 271, 272, 273, 275, 282, 283, 285, 286, 287, 288, 289, 290, 294, 298, 302, 303, 304, 308, 309, 331, 333, 335, 337, 345, 353, 354, 361, 367, 369, 374, 385, 387, 397, 398, 399, 400, 422, 437, 444, 445, 446, 450, 452, 453, 458, 459, 464, 465, 466, 467, 468, 470, 473, 476, 478, 479, 480, 481, 482, 484, 485], "multidimension": [1, 2, 78, 107, 108, 482], "slicesampl": [1, 2, 108, 116, 215, 482], "sampler": [1, 2, 62, 67, 68, 69, 78, 79, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 123, 215, 244, 318, 369, 374, 400, 464, 466, 478, 479, 482], "One": [1, 2, 3, 4, 8, 33, 34, 38, 39, 40, 43, 48, 53, 54, 59, 60, 74, 83, 121, 127, 128, 129, 157, 161, 166, 167, 215, 248, 268, 277, 315, 353, 357, 388, 393, 426, 464, 465, 482, 485], "must": [1, 2, 3, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 101, 102, 103, 104, 108, 110, 115, 116, 117, 118, 119, 121, 123, 127, 128, 130, 133, 134, 137, 143, 145, 155, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 208, 211, 212, 215, 218, 220, 221, 227, 231, 233, 235, 237, 239, 241, 252, 255, 257, 258, 259, 262, 263, 265, 266, 267, 272, 275, 282, 283, 292, 298, 302, 303, 306, 307, 308, 309, 321, 331, 333, 337, 341, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 388, 389, 390, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 460, 464, 465, 466, 467, 470, 476, 477, 480, 482], "shape": [1, 2, 3, 15, 16, 18, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 101, 102, 103, 107, 110, 115, 121, 123, 127, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 183, 184, 185, 186, 187, 188, 192, 200, 206, 208, 212, 214, 216, 223, 226, 227, 228, 233, 235, 236, 239, 241, 245, 246, 248, 252, 255, 256, 258, 261, 266, 272, 274, 275, 279, 281, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 326, 327, 329, 331, 333, 334, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 393, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 431, 437, 440, 450, 459, 460, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 481, 482, 484, 485], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 29, 57, 264, 299, 327, 328, 363, 457, 464, 465, 466, 467, 468, 471, 476, 478, 479, 481, 485], "dimension": [1, 62, 66, 69, 77, 78, 79, 186, 225, 298, 302, 402, 407, 415, 460, 479], "num_slic": [1, 2, 108, 115, 116, 482], "4": [1, 2, 3, 7, 33, 35, 39, 40, 44, 48, 50, 53, 54, 55, 59, 62, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 101, 102, 103, 110, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 137, 143, 144, 145, 146, 147, 148, 151, 153, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 208, 209, 211, 212, 215, 220, 221, 227, 248, 255, 256, 257, 263, 272, 273, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 300, 301, 303, 305, 306, 307, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 329, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 420, 421, 458, 459, 463, 464, 465, 466, 467, 473, 478, 479, 480, 482, 483, 484, 485], "trajectory_kei": [1, 31, 115, 116], "traj_id": [1, 2, 3, 15, 16, 18, 29, 31, 44, 75, 212, 248, 472, 482], "total_fram": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 44, 55, 67, 75, 212, 215, 248, 440, 443, 450, 461, 464, 465, 466, 467, 468, 472, 474, 478, 479, 482, 484], "dim": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 115, 184, 199, 215, 216, 237, 241, 254, 255, 258, 267, 272, 301, 325, 330, 349, 398, 454, 460, 465, 466, 468, 478, 480, 482], "ndim": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 101, 103, 107, 108, 121, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 237, 275, 349], "parallelenv": [1, 2, 3, 15, 16, 18, 21, 25, 29, 121, 127, 130, 133, 137, 145, 152, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 273, 298, 302, 420, 451, 456, 464, 465, 466, 469, 477, 484, 485], "make_env": [1, 3, 157, 166, 172, 263, 272, 273, 420, 445, 446, 464, 465, 484, 485], "regular": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 61, 63, 70, 84, 95, 96, 97, 107, 113, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 275, 278, 280, 291, 298, 302, 321, 347, 351, 352, 353, 354, 374, 384, 398, 399, 442, 456, 461, 464, 465, 468, 469, 470, 474, 476, 482, 485], "behav": [1, 3, 139, 151, 296, 300, 315, 372, 380, 382, 397, 468, 481], "accordingli": [1, 2, 3, 108, 221, 237, 256, 257, 300, 351, 467], "3": [1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 21, 27, 29, 33, 34, 35, 38, 39, 40, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 84, 95, 96, 97, 101, 103, 108, 110, 115, 116, 121, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 145, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 209, 211, 212, 215, 219, 220, 221, 225, 227, 228, 233, 235, 239, 241, 243, 245, 246, 248, 251, 252, 255, 256, 257, 258, 261, 263, 264, 265, 266, 268, 270, 273, 275, 276, 278, 279, 281, 282, 283, 285, 286, 287, 289, 292, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 309, 310, 315, 318, 320, 330, 331, 333, 337, 341, 342, 343, 344, 346, 347, 350, 352, 353, 356, 357, 358, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 439, 459, 461, 463, 464, 465, 466, 467, 469, 470, 472, 473, 478, 479, 480, 482, 483, 484, 485], "isn": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 61, 63, 70, 84, 95, 96, 97, 107, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 211, 227, 233, 346, 353, 398, 402, 470, 471, 473, 478, 479], "current": [1, 2, 3, 12, 14, 15, 16, 17, 24, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 105, 108, 110, 116, 127, 130, 133, 137, 139, 145, 152, 155, 156, 157, 158, 161, 166, 167, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 211, 212, 215, 233, 244, 257, 258, 259, 263, 264, 265, 273, 275, 293, 319, 323, 327, 331, 333, 335, 337, 338, 349, 364, 366, 367, 374, 381, 384, 386, 387, 397, 398, 399, 402, 425, 461, 464, 465, 466, 467, 471, 478, 479, 480, 482, 485], "fulli": [1, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 297, 301, 331, 333, 337, 397, 399, 465, 468, 471, 480, 482], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 111, 114, 116, 117, 119, 121, 122, 123, 125, 126, 127, 130, 133, 134, 137, 138, 145, 152, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 230, 231, 233, 234, 235, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 275, 281, 282, 283, 289, 290, 303, 312, 318, 331, 333, 337, 345, 349, 353, 354, 355, 356, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 402, 404, 405, 420, 422, 427, 440, 457, 460, 464, 465, 466, 467, 468, 470, 471, 476, 478, 479, 480, 482, 484, 485], "consecut": [1, 3, 114, 141, 302, 319, 422, 467, 469, 472, 479, 482, 485], "won": [1, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 134, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 243, 270, 275, 331, 333, 337, 364, 397, 398, 399, 440, 454, 465, 466, 469, 470], "therebi": [1, 32, 420, 460, 464, 465], "interrupt": [1, 2, 137, 188, 349, 408], "start": [1, 2, 3, 4, 5, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 50, 67, 82, 83, 84, 108, 115, 116, 127, 130, 133, 134, 137, 142, 145, 148, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 222, 436, 463, 464, 465, 468, 475, 479, 480, 482, 483, 485], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 39, 40, 42, 48, 50, 61, 62, 63, 65, 66, 69, 70, 72, 74, 77, 84, 95, 96, 97, 101, 103, 108, 115, 116, 117, 119, 121, 123, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 209, 214, 216, 220, 223, 225, 226, 235, 239, 244, 257, 258, 261, 265, 272, 273, 295, 331, 333, 334, 337, 341, 350, 351, 354, 361, 397, 398, 402, 403, 404, 405, 406, 422, 426, 459, 460, 463, 464, 465, 466, 467, 468, 475, 478, 479, 480, 482, 483, 484, 485], "rid": [1, 42, 65, 77, 331, 333, 337, 397], "natur": [1, 2, 3, 13, 22, 23, 25, 464, 470, 471, 472, 482], "background": [1, 13, 15, 16, 21, 22, 23, 25, 482], "simpli": [1, 3, 6, 61, 63, 70, 83, 84, 95, 96, 97, 119, 121, 126, 184, 190, 228, 252, 271, 382, 397, 398, 402, 459, 460, 464, 466, 471, 476, 478, 479, 485], "replay_buff": [1, 2, 8, 15, 16, 18, 21, 27, 29, 62, 67, 68, 69, 78, 79, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 215, 437, 450, 464, 465, 466, 472, 478, 479, 482], "rb": [1, 2, 15, 16, 18, 21, 29, 44, 62, 67, 68, 69, 75, 78, 79, 102, 107, 108, 110, 115, 116, 121, 215, 248, 275, 465, 467, 468, 472, 474, 479, 481, 482, 484], "paus": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "sleep": [1, 15, 16, 18, 21, 29, 67, 134, 485], "10": [1, 2, 3, 7, 28, 31, 33, 34, 35, 38, 42, 43, 50, 51, 55, 62, 67, 68, 69, 71, 77, 78, 79, 80, 83, 84, 101, 102, 103, 107, 110, 115, 116, 121, 123, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 151, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 192, 194, 195, 208, 209, 212, 214, 215, 220, 221, 257, 259, 260, 261, 272, 273, 275, 279, 281, 284, 285, 287, 289, 291, 295, 296, 297, 298, 300, 301, 302, 305, 306, 307, 317, 319, 330, 350, 354, 357, 361, 365, 369, 371, 378, 384, 385, 386, 390, 400, 402, 403, 404, 405, 408, 422, 431, 461, 464, 465, 466, 467, 468, 469, 470, 474, 478, 480, 482, 484, 485], "i": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 39, 40, 42, 44, 47, 48, 55, 62, 65, 66, 69, 72, 74, 75, 77, 79, 80, 84, 101, 103, 107, 108, 115, 116, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 221, 222, 237, 243, 248, 251, 263, 265, 270, 275, 297, 298, 301, 302, 321, 331, 333, 337, 340, 347, 349, 350, 352, 353, 354, 364, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 399, 402, 403, 404, 405, 431, 443, 458, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 478, 479, 480, 482, 484, 485], "rang": [1, 2, 3, 4, 8, 62, 67, 68, 69, 71, 78, 79, 101, 103, 110, 121, 127, 130, 133, 134, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 248, 261, 272, 275, 276, 297, 301, 318, 336, 381, 389, 390, 460, 461, 464, 466, 467, 468, 471, 472, 474, 478, 479, 480, 482, 484], "optim_step": [1, 279, 305, 468, 474], "rest": [1, 15, 16, 21, 42, 280, 459, 466, 467, 478, 480, 484], "multithread": [1, 2, 3, 62, 69, 78, 79, 94, 152, 153, 472, 482], "mind": [1, 3, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 478, 479], "gil": 1, "relat": [1, 2, 3, 4, 10, 62, 157, 183, 230, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 465, 474, 480], "restrict": [1, 2, 3, 460, 465, 476, 481, 482, 485], "hand": [1, 2, 3, 7, 27, 39, 478, 479, 480], "let": [1, 2, 3, 6, 7, 11, 31, 35, 42, 47, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 80, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 275, 308, 309, 331, 333, 337, 346, 397, 399, 435, 458, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485], "child": [1, 20, 35, 42, 47, 50, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 465], "fill": [1, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188, 211, 258, 271, 302, 467, 480, 481], "truli": [1, 271, 484], "decoupl": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 464, 471, 484], "been": [1, 2, 3, 5, 7, 8, 12, 22, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 110, 114, 127, 130, 133, 137, 141, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 235, 256, 257, 264, 265, 296, 298, 300, 302, 310, 349, 364, 382, 384, 386, 397, 464, 465, 466, 467, 477, 478, 479, 480, 482, 484, 485], "shut": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 161, 167], "down": [1, 4, 13, 15, 16, 18, 21, 22, 23, 25, 29, 161, 167, 460, 467, 469], "async_shutdown": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 67], "mean": [1, 2, 3, 4, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 61, 63, 70, 78, 82, 84, 95, 96, 97, 102, 107, 108, 115, 116, 121, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 211, 239, 263, 272, 273, 277, 278, 279, 290, 293, 296, 298, 300, 302, 305, 317, 318, 326, 327, 350, 354, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 459, 460, 464, 465, 466, 468, 470, 478, 479, 480, 482, 485], "drastic": [1, 144, 157, 482], "load": [1, 2, 6, 7, 15, 16, 18, 21, 29, 35, 42, 44, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 95, 96, 97, 99, 101, 102, 103, 104, 110, 117, 118, 119, 123, 124, 127, 130, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 272, 273, 275, 331, 333, 337, 397, 398, 399, 440, 454, 458, 461, 464, 466, 468, 476, 482], "factor": [1, 8, 11, 32, 42, 55, 248, 275, 277, 278, 295, 299, 312, 319, 327, 328, 365, 371, 374, 375, 377, 388, 408, 464, 465, 468, 470, 474, 478, 479, 482, 485], "signific": [1, 3, 5, 8, 466, 484, 485], "understand": [1, 2, 8, 13, 22, 23, 25, 42, 464, 465, 468, 469, 470, 476, 478, 479], "affect": [1, 3, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 221, 265, 273, 275, 331, 333, 337, 397, 399, 402, 403, 404, 405, 478], "algorithm": [1, 2, 3, 8, 9, 13, 22, 23, 25, 151, 208, 255, 364, 384, 385, 387, 456, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 478, 479, 481, 482, 484], "legitim": [1, 460, 485], "unless": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 114, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 273, 275, 280, 331, 333, 337, 364, 365, 367, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 466], "benchmark": [1, 2, 3, 9, 128, 129, 137, 143, 144, 188], "backend": [1, 3, 7, 15, 16, 18, 21, 22, 23, 27, 28, 29, 84, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 183, 186, 187, 188, 205, 276, 337, 458, 461, 464, 466, 467, 468, 469, 472, 473, 480], "gloo": [1, 22, 23, 28], "nccl": [1, 22, 23, 335], "mpi": [1, 22, 23], "distributeddatacollector": [1, 24, 28, 456], "rpc": [1, 25, 26, 28, 68], "rpcdatacollector": [1, 26, 28, 456], "launcher": [1, 22, 23, 25, 28], "rai": [1, 17, 18, 27, 29, 30, 62, 67, 68, 69, 78, 79, 110, 334, 336], "submitit": [1, 22, 23, 25, 28], "mode": [1, 3, 6, 13, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 142, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 223, 226, 257, 265, 272, 273, 275, 280, 290, 298, 299, 302, 307, 315, 326, 327, 328, 331, 333, 337, 340, 350, 354, 382, 397, 399, 420, 430, 435, 459, 460, 464, 465, 478, 479, 484, 485], "find": [1, 4, 6, 7, 22, 23, 25, 62, 64, 80, 115, 116, 277, 300, 319, 434, 438, 464, 465, 468, 470, 471, 476, 478, 479], "folder": [1, 2, 61, 63, 70, 84, 95, 96, 97, 171, 184, 215, 398, 465], "machin": [1, 2, 7, 22, 23, 25, 55, 141, 478, 479, 484], "wonder": 1, "why": [1, 2, 3, 206, 460, 478, 480, 485], "instead": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 35, 38, 42, 47, 55, 65, 66, 67, 72, 77, 81, 84, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 230, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 353, 357, 360, 364, 366, 367, 369, 372, 373, 374, 380, 381, 384, 385, 386, 387, 397, 399, 400, 402, 406, 410, 454, 460, 468, 469, 470, 474, 480, 482, 485], "lower": [1, 2, 3, 27, 35, 36, 218, 272, 273, 322, 323, 357, 466, 478, 480], "io": [1, 11, 143, 144, 152, 155, 156, 169, 170, 300, 301, 468], "footprint": [1, 2, 482], "commun": [1, 2, 3, 24, 26, 145, 157, 161, 166, 187, 335, 457, 466, 485], "yet": [1, 128, 129, 143, 399, 481], "plai": [1, 3, 159, 160, 168, 178, 215, 465, 466, 471, 482, 485], "role": [1, 3, 96, 150, 178, 180, 183, 465, 471, 485], "opposit": [1, 478], "direct": [1, 2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 296, 300, 331, 333, 337, 382, 397, 399, 465, 471], "faster": [1, 2, 4, 31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 152, 306, 402, 403, 404, 405, 467, 468, 478, 479], "share": [1, 3, 6, 8, 15, 16, 18, 21, 29, 31, 61, 63, 69, 70, 78, 79, 82, 84, 95, 96, 97, 99, 101, 102, 103, 104, 108, 110, 111, 115, 117, 119, 123, 134, 157, 166, 184, 255, 263, 272, 273, 298, 302, 308, 309, 342, 343, 344, 364, 365, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 398, 454, 456, 459, 460, 466, 468, 474, 476, 477, 478, 479, 484, 485], "among": [1, 3, 57, 159, 160, 263, 373, 387, 460, 478, 479], "prohibit": [1, 3, 18, 121], "slow": [1, 3, 4, 11, 61, 63, 70, 84, 95, 96, 97, 102, 115, 116, 184, 398], "compar": [1, 3, 121, 365, 367, 380, 385, 387, 389, 390, 435, 460, 464, 466, 468, 470, 471, 478, 479, 482, 485], "gpu": [1, 7, 8, 35, 42, 47, 55, 65, 66, 72, 77, 101, 103, 123, 127, 130, 133, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 464, 466, 467, 478, 479, 485], "driver": [1, 7], "keyword": [1, 2, 3, 11, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 110, 113, 115, 116, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 237, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 295, 298, 302, 306, 307, 308, 309, 319, 331, 333, 334, 337, 341, 345, 346, 349, 350, 351, 353, 354, 357, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 420, 422, 427, 429, 440, 451, 464, 465, 466, 468, 470, 473, 478, 479, 482, 484, 485], "mani": [1, 2, 3, 4, 69, 128, 129, 131, 132, 133, 136, 138, 139, 143, 144, 152, 153, 163, 186, 192, 258, 364, 366, 373, 381, 384, 397, 459, 464, 465, 466, 468, 469, 470, 472, 474, 478, 479, 480, 482, 484, 485], "eg": [1, 2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 117, 119, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 141, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 225, 256, 265, 276, 308, 345, 398, 422], "gymnasium": [1, 2, 3, 5, 15, 16, 18, 21, 29, 77, 127, 130, 133, 136, 137, 138, 142, 145, 146, 147, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 183, 186, 187, 188, 205, 228, 252, 256, 271, 276, 465, 466, 468, 480, 484], "warn": [1, 3, 66, 72, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 272, 277, 295, 319, 430, 465, 476], "quickli": [1, 3, 465, 478, 479, 485], "becom": [1, 2, 3, 4, 27, 296, 300, 478, 479, 485], "quit": [1, 3, 11, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 465, 466, 468, 470, 478, 479, 485], "annoi": [1, 3], "filter": [1, 2, 3, 4, 83, 108, 115, 116, 364, 365, 367, 368, 372, 373, 380, 384, 385, 387, 469], "out": [1, 2, 3, 4, 5, 9, 14, 17, 19, 20, 24, 26, 27, 30, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 99, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 255, 258, 275, 277, 296, 297, 300, 306, 307, 310, 311, 312, 331, 333, 337, 341, 345, 346, 347, 350, 351, 352, 353, 354, 382, 395, 396, 397, 398, 399, 460, 461, 464, 465, 466, 467, 468, 469, 470, 472, 478, 479, 480, 482, 484, 485], "still": [1, 2, 3, 9, 42, 65, 77, 84, 85, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 319, 331, 333, 337, 381, 382, 397, 460, 464, 465, 467, 477, 480, 482, 485], "wish": [1, 3, 11, 15, 16, 21, 205, 471, 482], "displai": [1, 3, 7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 440, 461, 464, 465, 476, 479, 480], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 206, 207, 208, 209, 211, 212, 215, 216, 219, 221, 223, 226, 227, 228, 230, 233, 234, 235, 237, 238, 239, 241, 243, 244, 245, 246, 248, 250, 251, 252, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 285, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 319, 320, 321, 327, 328, 329, 331, 333, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 400, 402, 403, 404, 405, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 429, 430, 433, 434, 435, 437, 438, 440, 454, 459, 460, 461, 464, 465, 466, 468, 473, 474, 476, 477, 478, 479, 480, 481, 484, 485], "central": [2, 14, 20, 24, 26, 308, 309, 310, 464, 465, 469, 478, 479, 482], "part": [2, 3, 4, 8, 35, 42, 47, 55, 65, 66, 71, 72, 77, 84, 127, 128, 130, 133, 137, 143, 145, 155, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 214, 239, 248, 251, 275, 331, 333, 337, 358, 397, 399, 431, 454, 458, 460, 464, 466, 467, 468, 474, 478, 480, 485], "wide": [2, 3, 5, 484], "give": [2, 3, 7, 78, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 366, 381, 384, 457, 458, 460, 464, 465, 468, 478, 479, 480, 481, 484], "abil": [2, 382, 480, 482], "panel": [2, 466], "usag": [2, 3, 5, 7, 15, 16, 18, 21, 22, 23, 25, 27, 42, 65, 77, 99, 121, 179, 212, 215, 227, 280, 298, 302, 331, 333, 337, 367, 372, 380, 387, 391, 397, 459, 464, 466, 467, 470, 471, 473, 478, 479, 482], "includ": [2, 3, 4, 7, 9, 27, 35, 42, 47, 55, 65, 66, 72, 77, 82, 84, 98, 99, 101, 102, 103, 104, 106, 117, 119, 123, 127, 130, 133, 137, 145, 151, 155, 156, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 230, 233, 257, 263, 265, 272, 273, 275, 298, 302, 331, 333, 337, 364, 367, 382, 387, 397, 399, 443, 458, 459, 461, 464, 465, 466, 467, 468, 476, 478, 479, 480, 482, 485], "almost": [2, 273, 306, 307, 467], "physic": [2, 6, 7, 99, 157, 158, 163, 461, 464, 478, 479, 480], "theori": 2, "crude": 2, "made": [2, 3, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 101, 102, 103, 104, 117, 119, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 258, 275, 310, 319, 331, 333, 337, 369, 382, 397, 399, 400, 464, 465, 467, 478, 479, 481, 482, 484], "liststorag": [2, 50, 62, 67, 68, 69, 77, 78, 79, 102, 110, 482], "veri": [2, 3, 143, 144, 183, 465, 469, 472, 476, 478, 480, 482, 484, 485], "ineffici": [2, 4], "tensor": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 115, 116, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 225, 226, 227, 228, 230, 233, 234, 236, 239, 241, 243, 244, 245, 246, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 362, 364, 365, 367, 368, 369, 371, 372, 373, 376, 377, 380, 382, 384, 385, 386, 387, 389, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 478, 479, 480, 484, 485], "contigu": [2, 3, 8, 36, 39, 47, 85, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 233, 236, 258, 266, 480, 482, 484], "tensorstorag": [2, 69, 77, 101, 107, 108, 121, 124, 472, 482], "lazymemmapstorag": [2, 44, 62, 67, 68, 69, 75, 78, 79, 108, 110, 115, 116, 214, 215, 464, 465, 467, 472, 478, 481, 482], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 133, 134, 135, 136, 137, 138, 139, 144, 145, 148, 151, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 452, 453, 454, 456, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 478, 479, 482, 485], "citizen": 2, "pytre": [2, 62, 67, 68, 69, 78, 79, 104, 110, 124], "tupl": [2, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 104, 108, 110, 115, 119, 121, 127, 130, 131, 132, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 233, 235, 239, 275, 281, 285, 291, 292, 298, 301, 302, 303, 310, 317, 320, 321, 331, 333, 337, 346, 347, 351, 352, 357, 364, 365, 366, 367, 368, 372, 373, 375, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 402, 403, 404, 405, 434, 435, 438, 447, 476, 482, 484], "dictionari": [2, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 35, 39, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 108, 113, 115, 116, 127, 130, 133, 136, 137, 138, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 258, 263, 265, 273, 275, 331, 333, 337, 350, 354, 367, 387, 389, 397, 398, 399, 435, 452, 453, 454, 461, 465, 466, 469, 471, 478, 480, 485], "nest": [2, 3, 31, 35, 39, 40, 42, 44, 46, 47, 48, 55, 56, 61, 63, 65, 66, 69, 70, 72, 74, 75, 76, 77, 84, 90, 95, 96, 97, 101, 102, 103, 106, 110, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 207, 215, 256, 259, 263, 275, 331, 333, 337, 349, 397, 398, 399, 402, 403, 404, 405, 406, 420, 430, 461, 465, 466, 468, 479, 480, 482, 484], "construct": [2, 3, 5, 31, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 110, 127, 130, 133, 134, 136, 137, 145, 157, 158, 159, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 223, 226, 273, 275, 298, 302, 323, 331, 333, 337, 354, 397, 399, 440, 458, 459, 465, 466, 467, 470, 478, 480, 482, 485], "ram": [2, 136, 138, 473, 482], "prealloc": [2, 3, 157, 166, 480], "ve": [2, 71, 464, 467, 474, 476], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 44, 50, 62, 65, 67, 68, 69, 75, 78, 79, 84, 100, 101, 104, 107, 108, 110, 111, 115, 116, 119, 121, 122, 125, 126, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 214, 248, 264, 275, 278, 382, 397, 399, 437, 456, 458, 460, 461, 464, 465, 466, 467, 468, 472, 474, 478, 479, 481, 482, 484], "here": [2, 3, 4, 7, 8, 9, 10, 15, 16, 27, 121, 127, 130, 131, 132, 133, 137, 141, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 195, 215, 263, 310, 333, 429, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 472, 474, 478, 479, 480, 482, 484, 485], "add": [2, 3, 4, 6, 27, 35, 39, 40, 42, 47, 48, 50, 55, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 96, 100, 102, 107, 110, 111, 121, 122, 125, 126, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 233, 235, 262, 265, 275, 298, 302, 311, 331, 333, 337, 348, 364, 397, 399, 436, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 482, 484], "string": [2, 22, 23, 25, 35, 42, 47, 50, 55, 57, 64, 65, 66, 72, 77, 83, 84, 94, 102, 127, 130, 133, 137, 145, 149, 155, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 205, 233, 243, 256, 262, 270, 275, 298, 302, 331, 333, 337, 346, 349, 350, 351, 363, 397, 399, 421, 439, 460, 464, 466, 467, 476, 482], "element": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 50, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 77, 78, 79, 82, 84, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 115, 116, 121, 123, 127, 130, 133, 137, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 192, 208, 215, 220, 221, 244, 253, 257, 258, 273, 277, 282, 283, 296, 297, 300, 340, 341, 346, 349, 353, 354, 358, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 402, 431, 458, 460, 464, 466, 470, 472, 476, 482, 485], "30": [2, 3, 69, 77, 115, 116, 191, 211, 238, 322, 323, 420, 424, 427, 429, 472, 479, 480, 482], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 123, 127, 130, 133, 134, 136, 137, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 230, 232, 233, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 327, 329, 330, 331, 333, 335, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 434, 435, 436, 437, 438, 439, 440, 444, 445, 446, 447, 449, 450, 452, 453, 454, 459, 461, 464, 465, 467, 468, 480, 482, 484], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 208, 210, 211, 212, 214, 215, 216, 217, 219, 222, 225, 230, 231, 233, 237, 238, 239, 241, 243, 244, 247, 254, 255, 256, 259, 262, 263, 265, 267, 270, 275, 277, 278, 279, 282, 283, 284, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 333, 334, 335, 337, 345, 346, 347, 349, 350, 352, 354, 364, 365, 366, 373, 375, 376, 381, 382, 383, 384, 385, 389, 390, 397, 398, 399, 402, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 427, 429, 431, 432, 433, 435, 437, 440, 442, 452, 453, 454, 468, 480, 482], "entri": [2, 3, 15, 16, 21, 31, 35, 39, 40, 42, 44, 47, 48, 50, 55, 61, 63, 64, 65, 66, 70, 72, 74, 75, 77, 83, 84, 91, 95, 96, 97, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 157, 158, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 211, 215, 217, 218, 221, 222, 223, 224, 226, 227, 230, 234, 236, 237, 239, 241, 243, 246, 248, 251, 253, 255, 256, 257, 258, 260, 263, 265, 267, 270, 272, 275, 298, 306, 307, 331, 333, 337, 345, 346, 349, 351, 352, 365, 367, 387, 397, 398, 399, 402, 403, 404, 405, 459, 464, 466, 467, 469, 470, 471, 473, 478, 479, 480, 481, 482, 484, 485], "onto": [2, 8, 59, 61, 63, 70, 84, 95, 96, 97, 184, 200, 224, 277, 319, 341, 346, 347, 350, 351, 352, 353, 354, 398, 402, 467, 480], "__setitem__": 2, "indic": [2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 25, 27, 31, 33, 34, 36, 37, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 107, 108, 110, 111, 113, 114, 115, 116, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 207, 208, 215, 216, 220, 256, 257, 258, 259, 265, 273, 275, 276, 282, 283, 303, 306, 307, 309, 319, 333, 337, 349, 351, 352, 360, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 400, 444, 454, 457, 461, 466, 467, 468, 472, 473, 474, 480, 482, 485], "without": [2, 3, 7, 9, 14, 15, 16, 17, 18, 24, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 223, 226, 261, 264, 275, 296, 297, 300, 301, 331, 333, 335, 337, 343, 344, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 399, 401, 402, 403, 404, 405, 406, 450, 457, 459, 464, 465, 466, 468, 469, 470, 471, 472, 476, 478, 479, 480, 482, 485], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 35, 41, 42, 47, 50, 55, 61, 62, 63, 65, 66, 70, 71, 72, 77, 78, 84, 95, 96, 97, 107, 108, 127, 130, 133, 137, 145, 151, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 209, 211, 212, 223, 225, 226, 233, 245, 256, 257, 263, 265, 269, 272, 273, 275, 277, 279, 280, 295, 296, 305, 310, 319, 331, 333, 334, 336, 337, 350, 351, 352, 353, 354, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 435, 440, 442, 445, 446, 449, 450, 456, 458, 461, 465, 466, 467, 468, 471, 474, 478, 479, 480, 482, 485], "length": [2, 25, 33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 71, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 108, 115, 116, 119, 127, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 208, 215, 236, 244, 272, 279, 282, 283, 285, 287, 289, 296, 300, 303, 305, 308, 309, 333, 337, 341, 353, 358, 399, 431, 437, 464, 466, 467, 472, 474, 476, 480, 482, 485], "cursor": [2, 62, 67, 68, 69, 78, 79, 110], "afterward": [2, 35, 42, 47, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 478, 485], "tell": [2, 3, 4, 7, 127, 159, 160, 178, 263, 464, 467, 472, 478, 479], "our": [2, 3, 7, 8, 11, 22, 50, 69, 178, 215, 220, 422, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 484], "far": [2, 62, 67, 68, 69, 71, 78, 79, 110, 178, 183, 299, 327, 328, 474, 480, 485], "empti": [2, 3, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 104, 110, 127, 130, 133, 137, 144, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 223, 226, 243, 245, 259, 265, 268, 270, 273, 275, 331, 333, 337, 353, 397, 398, 399, 426, 464, 480], "64": [2, 3, 61, 63, 70, 84, 95, 96, 97, 110, 184, 215, 247, 285, 286, 294, 298, 302, 309, 310, 320, 398, 400, 464, 465, 466, 467, 468, 470, 474, 477, 480, 482, 484, 485], "dtype": [2, 3, 15, 16, 18, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 108, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 203, 206, 207, 208, 209, 212, 213, 219, 220, 223, 224, 225, 226, 227, 228, 233, 235, 236, 239, 241, 243, 245, 246, 248, 252, 255, 256, 258, 260, 261, 264, 265, 266, 268, 270, 275, 279, 281, 291, 292, 296, 297, 298, 300, 301, 302, 305, 311, 312, 319, 320, 321, 329, 331, 333, 334, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 358, 361, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 408, 459, 468, 476, 477, 480, 482, 484, 485], "unit8": 2, "img": 2, "randint": [2, 83, 110, 192, 261, 482], "255": [2, 110, 261, 482], "uint8": [2, 3, 39, 61, 63, 70, 84, 95, 96, 97, 131, 132, 149, 150, 184, 227, 233, 241, 261, 398, 465, 482], "next": [2, 3, 4, 8, 15, 16, 18, 31, 39, 40, 42, 44, 46, 48, 50, 55, 62, 67, 68, 69, 71, 74, 75, 77, 78, 79, 84, 94, 98, 99, 106, 108, 110, 115, 116, 121, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 149, 150, 151, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 186, 187, 188, 192, 194, 195, 200, 206, 208, 211, 212, 214, 215, 220, 221, 223, 226, 227, 228, 233, 234, 235, 236, 237, 241, 245, 246, 248, 251, 252, 256, 258, 260, 263, 266, 271, 272, 273, 275, 279, 297, 298, 301, 302, 305, 323, 349, 359, 361, 364, 365, 367, 368, 369, 371, 372, 373, 374, 380, 384, 385, 386, 387, 389, 390, 399, 400, 401, 402, 403, 404, 405, 406, 422, 434, 435, 438, 465, 467, 468, 470, 474, 476, 480, 481, 484, 485], "ask": [2, 3, 8, 108, 115, 116, 422, 466, 467, 469, 470, 478, 479, 481, 485], "automat": [2, 3, 5, 12, 20, 36, 50, 82, 85, 101, 103, 110, 116, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 223, 226, 239, 258, 271, 273, 282, 298, 302, 335, 341, 349, 350, 354, 420, 430, 459, 464, 466, 469, 470, 478, 479, 480, 482, 484], "look": [2, 3, 5, 7, 8, 35, 42, 47, 55, 65, 66, 72, 77, 108, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 233, 243, 244, 268, 275, 280, 331, 333, 337, 350, 354, 355, 356, 397, 399, 460, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 484, 485], "lead": [2, 3, 4, 8, 10, 29, 31, 39, 40, 48, 55, 62, 69, 74, 84, 114, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258, 276, 299, 320, 327, 328, 340, 464, 467, 468, 478, 479, 480, 482, 484], "match": [2, 3, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 110, 119, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 230, 232, 234, 235, 236, 237, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 282, 283, 290, 298, 302, 303, 308, 309, 326, 331, 333, 337, 341, 345, 346, 350, 351, 353, 354, 357, 358, 365, 366, 367, 373, 381, 383, 384, 385, 387, 397, 399, 437, 442, 459, 460, 464, 466, 468, 477, 479, 480, 482, 485], "don": [2, 3, 4, 6, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 178, 215, 264, 465, 466, 468, 472, 482, 484, 485], "throw": [2, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 398, 399, 485], "rb_td": 2, "batch_siz": [2, 3, 8, 15, 16, 18, 29, 31, 39, 42, 44, 50, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 101, 102, 103, 107, 108, 109, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 206, 207, 208, 212, 214, 215, 219, 223, 226, 227, 228, 233, 241, 245, 246, 248, 252, 255, 256, 258, 264, 265, 266, 275, 279, 281, 289, 290, 291, 292, 295, 298, 302, 305, 319, 320, 321, 329, 330, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 422, 431, 437, 458, 459, 460, 464, 465, 466, 467, 472, 476, 478, 479, 480, 482, 484, 485], "max": [2, 31, 59, 63, 78, 83, 94, 107, 108, 121, 144, 225, 259, 319, 365, 366, 367, 373, 383, 385, 387, 397, 464, 466, 467, 468, 474], "label": [2, 63, 64, 71, 83, 84, 464, 478, 482], "100": [2, 15, 16, 18, 21, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 101, 103, 110, 115, 116, 121, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 218, 220, 227, 239, 248, 253, 256, 275, 306, 307, 308, 331, 333, 337, 347, 349, 397, 399, 422, 432, 450, 465, 466, 468, 469, 471, 474, 477, 478, 479, 480, 482, 484, 485], "rb_pytre": 2, "randn": [2, 3, 62, 65, 67, 68, 69, 78, 79, 101, 102, 103, 108, 110, 115, 116, 123, 127, 200, 214, 239, 281, 284, 285, 289, 291, 292, 296, 297, 300, 301, 306, 307, 308, 315, 317, 321, 341, 342, 343, 344, 345, 346, 350, 351, 353, 356, 357, 358, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 386, 387, 389, 390, 397, 402, 403, 404, 405, 439, 459, 468, 482, 484, 485], "c": [2, 3, 6, 7, 15, 16, 18, 21, 29, 39, 42, 61, 63, 65, 69, 70, 77, 78, 79, 84, 95, 96, 97, 102, 184, 239, 261, 266, 300, 301, 331, 333, 337, 397, 398, 465, 482], "zero": [2, 3, 4, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 110, 115, 116, 121, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 206, 212, 214, 216, 220, 223, 225, 226, 239, 245, 248, 255, 273, 275, 278, 279, 286, 287, 288, 294, 295, 296, 297, 298, 300, 301, 302, 306, 307, 309, 310, 319, 320, 329, 331, 333, 337, 352, 354, 360, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 408, 467, 468, 482, 484, 485], "assert": [2, 3, 6, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 110, 121, 127, 130, 133, 137, 140, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 200, 205, 208, 212, 215, 218, 223, 226, 235, 246, 253, 265, 272, 281, 309, 330, 398, 402, 403, 404, 405, 430, 431, 439, 472, 477, 482, 485], "len": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 101, 103, 110, 123, 192, 241, 282, 283, 303, 309, 464, 468, 472, 474, 478, 480, 481, 482, 484], "ambigu": [2, 62, 67, 68, 69, 78, 79, 110], "signatur": [2, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 110, 119, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 212, 219, 233, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399, 460, 464, 468, 469, 480], "deal": [2, 3, 62, 67, 68, 69, 78, 79, 110, 382, 397, 460, 464, 466, 479, 482], "interpret": [2, 3, 62, 67, 68, 69, 78, 79, 110, 458, 465], "put": [2, 62, 67, 68, 69, 78, 79, 110, 137, 149, 150, 168, 171, 172, 272, 429, 454, 459, 465, 466, 467, 469, 476, 478, 480], "solv": [2, 4, 7, 9, 10, 62, 67, 68, 69, 78, 79, 110, 457, 464, 465, 466, 472, 474, 478, 479, 480, 482], "clear": [2, 3, 11, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 432, 469, 472], "cut": [2, 62, 67, 68, 69, 78, 79, 110], "distinct": [2, 3, 62, 67, 68, 69, 78, 79, 110, 212, 215, 471, 477], "view": [2, 3, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 275, 292, 296, 300, 303, 331, 333, 337, 397, 399, 469, 480, 482, 484, 485], "through": [2, 3, 4, 5, 8, 15, 16, 18, 20, 21, 22, 25, 27, 29, 39, 40, 48, 62, 66, 67, 68, 69, 72, 74, 78, 79, 84, 110, 127, 128, 129, 130, 133, 136, 137, 138, 141, 143, 144, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 211, 221, 223, 226, 244, 276, 281, 303, 320, 349, 350, 354, 355, 356, 360, 363, 382, 402, 403, 404, 405, 430, 458, 459, 460, 464, 465, 466, 469, 471, 477, 478, 479, 480, 481, 482, 485], "collate_fn": [2, 62, 67, 68, 69, 77, 78, 79, 110, 179, 180, 183, 482, 484], "__init__": [2, 3, 7, 133, 151, 169, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 205, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 279, 290, 292, 296, 300, 305, 334, 358, 365, 367, 368, 373, 380, 385, 387, 389, 390, 399, 461, 480, 485], "major": 2, "worri": [2, 80, 485], "though": [2, 4, 11, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 303, 466, 478, 479], "too": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 65, 71, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 238, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 299, 327, 328, 331, 333, 337, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 465, 470, 473, 480, 482, 485], "latter": [2, 22, 23, 25, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 384, 397, 399, 452, 453], "inv": [2, 3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 218, 225, 228, 233, 241, 248, 253, 255, 260, 264, 267, 275, 399, 480], "obvious": [2, 468], "ignor": [2, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 72, 73, 74, 77, 80, 82, 85, 86, 87, 88, 89, 99, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 225, 228, 252, 261, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 397, 399, 402, 476, 482], "thread": [2, 3, 15, 16, 18, 21, 29, 61, 63, 70, 84, 95, 96, 97, 127, 128, 129, 143, 144, 157, 166, 167, 184, 273, 398], "prefetch": [2, 62, 69, 78, 79, 94, 464, 465, 467, 482], "advis": [2, 11, 473, 485], "techniqu": [2, 8, 157, 166, 465, 468, 472, 482], "real": [2, 5, 354, 460, 467, 468, 480, 481], "life": [2, 227, 481], "adopt": [2, 3, 5, 464, 485], "throughput": [2, 9, 144, 464], "constant": [2, 11, 41, 215, 239, 257, 461, 464, 466, 467, 485], "throughout": [2, 3, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 466, 478, 485], "further": [2, 3, 5, 32, 464, 466, 468, 469], "refin": [2, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400], "coupl": [2, 467, 470, 471, 480, 482], "first_elt": 2, "128": [2, 116, 128, 129, 143, 144, 286, 289, 465, 467, 468, 474, 478, 481, 482], "wa": [2, 3, 5, 7, 39, 40, 42, 48, 50, 62, 65, 67, 68, 69, 74, 77, 78, 79, 84, 108, 110, 114, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 207, 215, 233, 265, 300, 331, 333, 337, 364, 366, 379, 381, 384, 386, 388, 397, 408, 460, 465, 466, 469, 470, 477, 478, 482, 484], "print": [2, 3, 6, 7, 15, 16, 18, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 107, 108, 110, 115, 116, 121, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 205, 206, 207, 208, 211, 212, 215, 216, 220, 221, 223, 224, 225, 226, 234, 239, 245, 246, 248, 251, 256, 258, 259, 260, 261, 272, 273, 275, 282, 283, 285, 286, 287, 288, 289, 292, 294, 295, 298, 302, 303, 306, 307, 308, 309, 315, 318, 319, 321, 331, 333, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 356, 358, 361, 382, 397, 398, 399, 420, 450, 458, 459, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 216], "larger": [2, 4, 77, 298, 302, 372, 380, 484], "volum": 2, "due": [2, 3, 5, 13, 22, 23, 25, 31, 471, 481, 482, 485], "memorymappedtensor": [2, 44, 61, 63, 75, 83, 101, 424, 472], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 110, 127, 130, 133, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 222, 223, 224, 226, 251, 254, 257, 262, 266, 267, 275, 276, 279, 300, 331, 333, 335, 337, 353, 354, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 399, 429, 459, 464, 466, 467, 468, 472, 476, 478], "file": [2, 6, 7, 8, 61, 63, 70, 84, 95, 96, 97, 99, 171, 184, 398, 421, 422, 424, 440, 461, 463, 465, 478, 482, 483], "locat": [2, 7, 61, 63, 70, 83, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 203, 222, 227, 239, 250, 273, 299, 327, 328, 398, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 464, 465, 466, 473, 478, 479, 482], "improv": [2, 4, 11, 231, 364, 460, 468, 478, 479, 482], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 157, 166, 233, 458, 466, 478, 482], "found": [2, 3, 6, 7, 10, 15, 16, 18, 21, 27, 31, 35, 39, 40, 42, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 95, 96, 97, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 209, 215, 236, 248, 251, 259, 272, 273, 275, 295, 308, 309, 331, 333, 337, 350, 354, 381, 382, 384, 397, 398, 399, 460, 464, 465, 467, 468, 469, 471, 473, 476, 480, 482, 484], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 73, 74, 82, 85, 86, 87, 88, 89, 101, 108, 155, 156, 225, 263, 278, 300, 301, 372, 467, 468, 472, 482], "sharabl": [2, 157, 166], "collabor": 2, "rather": [2, 4, 119, 155, 156, 186, 192, 246, 273, 459, 460, 464, 465, 466, 469, 471, 478, 479, 482], "incur": [2, 128, 129, 143, 144], "transmiss": 2, "overhead": [2, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 354], "content": [2, 3, 8, 18, 39, 40, 48, 61, 62, 63, 69, 70, 74, 78, 79, 84, 95, 96, 97, 114, 115, 116, 127, 130, 133, 136, 137, 138, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 182, 183, 184, 186, 187, 188, 191, 245, 282, 283, 303, 308, 309, 350, 382, 397, 398, 466, 476, 480, 484], "map": [2, 3, 8, 14, 17, 19, 24, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 106, 107, 108, 127, 130, 133, 137, 145, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 208, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 241, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 275, 292, 331, 333, 337, 341, 342, 343, 344, 346, 350, 351, 353, 354, 356, 357, 358, 359, 366, 367, 381, 384, 387, 397, 398, 399, 400, 402, 435, 456, 459, 460, 464, 465, 466, 467, 470, 471, 481], "writer": [2, 62, 67, 68, 69, 78, 79, 100, 103, 108, 110, 111, 115, 121, 122, 123, 126, 466, 482], "tensordictroundrobinwrit": [2, 79, 110], "goe": [2, 4, 84, 159, 160, 464, 466, 478, 479, 485], "prioritizedsampl": [2, 62, 67, 68, 69, 78, 79, 108, 110, 369, 374, 400, 464, 482], "access": [2, 3, 7, 8, 11, 35, 42, 47, 55, 62, 65, 66, 72, 77, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 215, 243, 264, 268, 275, 331, 333, 337, 397, 399, 454, 457, 464, 469, 478, 479, 480, 482, 484], "tensordictreplaybuff": [2, 62, 67, 68, 69, 78, 107, 108, 110, 115, 116, 121, 214, 215, 437, 450, 456, 464, 465, 467, 482], "mp": [2, 22, 23, 25, 134, 272, 273], "def": [2, 3, 28, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 127, 130, 133, 134, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 205, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 273, 275, 276, 279, 292, 296, 297, 300, 301, 305, 310, 331, 333, 337, 349, 350, 358, 365, 367, 368, 373, 380, 382, 385, 387, 389, 390, 397, 399, 420, 430, 458, 460, 461, 464, 465, 468, 476, 477, 478, 479, 480, 482, 484, 485], "td": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 39, 42, 44, 50, 61, 62, 63, 65, 67, 68, 69, 70, 75, 77, 78, 79, 84, 95, 96, 97, 101, 110, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 155, 156, 157, 158, 161, 162, 166, 167, 168, 169, 170, 178, 179, 180, 183, 184, 186, 187, 188, 192, 206, 209, 212, 214, 216, 220, 221, 223, 224, 225, 226, 234, 235, 236, 237, 239, 248, 251, 255, 258, 261, 265, 272, 279, 281, 291, 292, 295, 304, 305, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 350, 351, 353, 356, 358, 397, 398, 400, 403, 404, 405, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 431, 439, 459, 460, 464, 465, 467, 479, 480, 481, 484], "__name__": [2, 3, 15, 16, 18, 21, 28, 29, 67, 134, 273, 420, 465, 484], "__main__": [2, 3, 15, 16, 18, 21, 28, 29, 67, 134, 273, 420, 484], "21": [2, 50, 84, 115, 116, 157, 159, 160, 166, 220], "proc": 2, "target": [2, 4, 8, 27, 32, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 257, 275, 318, 331, 333, 337, 353, 354, 364, 365, 366, 367, 368, 369, 371, 373, 374, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 399, 400, 401, 402, 403, 404, 405, 406, 443, 449, 450, 460, 461, 467, 468, 474, 478, 480], "arg": [2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 49, 50, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 108, 110, 115, 116, 117, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 202, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 237, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 277, 279, 281, 282, 283, 290, 291, 295, 298, 302, 303, 304, 305, 319, 330, 331, 332, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 429, 433, 437, 440, 454, 465, 468, 476], "join": [2, 134, 192, 456, 465, 466, 468, 478], "now": [2, 3, 7, 62, 69, 78, 79, 110, 155, 156, 157, 215, 252, 309, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 482, 485], "20": [2, 50, 77, 83, 84, 115, 116, 121, 127, 130, 133, 137, 141, 145, 155, 156, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 257, 275, 294, 296, 297, 300, 301, 318, 345, 431, 463, 467, 482, 483, 485], "_data": [2, 480], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 71, 72, 73, 74, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 102, 110, 113, 121, 126, 127, 130, 133, 137, 139, 145, 151, 152, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 212, 214, 215, 227, 233, 235, 239, 244, 257, 263, 265, 271, 273, 275, 277, 285, 287, 293, 295, 308, 309, 318, 319, 320, 322, 323, 329, 330, 331, 333, 337, 347, 349, 352, 354, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 390, 397, 399, 400, 401, 402, 420, 429, 435, 457, 459, 460, 464, 465, 467, 468, 469, 478, 479, 480, 481, 482, 484, 485], "difficult": [2, 4, 157, 473], "pai": [2, 8, 215, 464], "word": [2, 3, 11, 71, 382, 397, 464, 472, 480, 485], "1m": [2, 443, 464, 466, 467], "doe": [2, 3, 19, 22, 35, 42, 47, 55, 61, 62, 63, 65, 66, 70, 72, 77, 78, 83, 84, 95, 96, 97, 98, 99, 106, 107, 108, 115, 117, 119, 126, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 273, 275, 280, 289, 290, 296, 297, 298, 300, 301, 302, 311, 318, 330, 331, 333, 337, 345, 355, 356, 364, 366, 374, 381, 382, 384, 397, 398, 399, 401, 440, 460, 461, 464, 465, 466, 467, 469, 472, 478, 480, 482, 485], "howev": [2, 3, 5, 7, 35, 42, 47, 55, 65, 66, 72, 77, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 275, 331, 333, 337, 364, 366, 367, 381, 384, 386, 387, 397, 399, 459, 464, 465, 467, 468, 471, 480, 482, 485], "capac": [2, 62, 69, 78, 79, 101, 103, 107, 115, 123, 466, 472], "There": [2, 3, 10, 110, 180, 264, 280, 298, 302, 364, 384, 459, 460, 461, 466, 467, 468, 470, 472, 478, 479, 480, 482, 484, 485], "circumv": 2, "account": [2, 101, 103, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 221, 306, 307, 459, 465, 467, 482, 485], "save": [2, 3, 8, 35, 42, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 84, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 110, 117, 118, 119, 123, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 271, 275, 331, 333, 337, 397, 398, 399, 421, 422, 424, 429, 440, 461, 468, 472, 473, 474, 478, 479], "convent": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 460, 464, 467, 478, 479, 480], "overridden": [2, 3, 35, 42, 47, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 402, 404, 405, 467, 478], "dim_extend": [2, 62, 69, 78, 79], "obtain": [2, 3, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 214, 243, 257, 270, 279, 281, 318, 320, 437, 464, 466, 469, 470, 471, 478, 479], "counterpart": [2, 3, 215], "desir": [2, 3, 11, 15, 16, 18, 21, 29, 35, 38, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 210, 212, 219, 221, 239, 241, 243, 244, 258, 264, 265, 268, 270, 275, 282, 283, 290, 303, 309, 331, 333, 337, 341, 346, 347, 350, 351, 352, 353, 354, 397, 399, 459, 464, 468, 476, 478, 479, 480, 482], "diversifi": 2, "offer": [2, 3, 7, 127, 128, 129, 130, 133, 137, 143, 144, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 420, 458, 459, 464, 465, 468, 469, 471, 472, 478, 480, 482, 485], "accomplish": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 469, 476], "__especially__": 2, "offlin": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 365, 371, 372, 380, 389, 399, 429, 461, 469, 481, 482], "docstr": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 469, 470], "detail": [2, 3, 5, 6, 7, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 261, 265, 275, 280, 292, 296, 300, 310, 318, 331, 333, 337, 347, 364, 374, 382, 384, 397, 399, 457, 461, 465, 468, 472, 477, 482], "happi": [2, 468], "concaten": [2, 8, 15, 16, 27, 50, 51, 53, 84, 178, 186, 215, 216, 239, 255, 300, 303, 356, 464, 465, 470, 478, 479, 480, 482, 485], "schedul": [2, 4, 7, 71, 435, 466, 480], "transformedenv": [2, 3, 11, 12, 55, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 212, 215, 218, 219, 221, 223, 226, 227, 228, 234, 235, 236, 238, 239, 241, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 263, 264, 272, 275, 298, 302, 349, 399, 422, 430, 464, 465, 466, 467, 468, 469, 473, 474, 477, 478, 479, 480, 481, 482, 484, 485], "stepcount": [2, 50, 55, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 221, 263, 264, 265, 275, 281, 399, 464, 465, 466, 467, 468, 469, 474, 478, 479, 484], "gymenv": [2, 3, 5, 11, 15, 16, 18, 21, 27, 28, 29, 44, 50, 55, 67, 75, 77, 121, 127, 130, 133, 134, 137, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 211, 212, 215, 218, 219, 220, 221, 227, 233, 234, 235, 239, 241, 246, 247, 248, 251, 253, 257, 258, 259, 260, 263, 264, 265, 266, 272, 273, 275, 281, 298, 302, 349, 399, 420, 422, 450, 456, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 484, 485], "randompolici": [2, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 55, 215, 248, 456, 472, 482], "cartpol": [2, 3, 11, 44, 55, 75, 77, 127, 130, 131, 132, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 212, 215, 220, 251, 257, 272, 275, 349, 420, 465, 467, 470, 472, 473, 474, 482, 485], "v1": [2, 3, 11, 15, 16, 18, 21, 27, 28, 29, 44, 55, 67, 75, 77, 121, 127, 130, 133, 134, 136, 137, 138, 143, 144, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 212, 215, 218, 220, 221, 228, 234, 235, 239, 246, 248, 251, 252, 253, 256, 257, 258, 259, 260, 263, 264, 266, 272, 273, 275, 281, 298, 302, 349, 393, 399, 411, 412, 413, 414, 416, 417, 418, 419, 420, 459, 465, 467, 469, 470, 471, 472, 473, 474, 480, 482, 484, 485], "action_spec": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 127, 128, 129, 130, 133, 137, 143, 144, 145, 151, 157, 158, 159, 160, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 212, 215, 219, 223, 224, 226, 235, 239, 245, 248, 264, 265, 266, 267, 275, 279, 292, 305, 321, 323, 341, 346, 350, 351, 365, 367, 369, 371, 385, 387, 389, 390, 399, 450, 459, 464, 465, 466, 467, 468, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 484, 485], "8": [2, 3, 6, 7, 39, 40, 48, 55, 69, 74, 77, 107, 108, 115, 116, 127, 128, 129, 130, 131, 132, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 183, 186, 187, 188, 208, 211, 220, 221, 257, 260, 266, 273, 282, 283, 285, 286, 294, 303, 342, 343, 344, 350, 353, 356, 380, 464, 465, 480, 482, 484], "traj_kei": [2, 108, 115, 116, 482], "truncated_kei": [2, 108, 115, 116, 248, 256], "strict_length": [2, 108, 115, 116, 422], "enumer": [2, 15, 16, 18, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 75, 77, 79, 82, 85, 86, 87, 88, 89, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 391, 397, 399, 460, 464, 465, 466, 467, 474, 478, 482, 484], "break": [2, 5, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 65, 66, 67, 69, 72, 77, 79, 94, 108, 115, 116, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 215, 248, 272, 273, 275, 298, 302, 327, 331, 333, 337, 397, 399, 422, 465, 468, 472, 474, 482, 484], "step_count": [2, 15, 16, 18, 55, 127, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 221, 256, 275, 466, 467, 468, 469, 474], "32": [2, 28, 39, 62, 67, 68, 69, 78, 79, 110, 116, 137, 144, 164, 165, 171, 172, 188, 215, 233, 282, 283, 284, 285, 286, 288, 289, 294, 303, 308, 309, 313, 314, 317, 320, 329, 400, 420, 465, 467, 468, 470, 471, 480, 481, 482, 484, 485], "33": [2, 35, 39, 42, 47, 55, 65, 66, 72, 77, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 282, 283, 303, 331, 333, 337, 397, 399], "34": [2, 282, 283, 303], "35": [2, 282, 283, 303], "36": [2, 180], "37": [2, 214], "38": [2, 7, 50], "39": [2, 143, 144], "40": [2, 77, 143, 144], "41": [2, 115], "11": [2, 10, 31, 50, 59, 77, 83, 84, 101, 102, 103, 107, 116, 123, 134, 208, 220, 261, 275, 279, 305], "12": [2, 7, 10, 50, 77, 101, 103, 116, 123, 143, 144, 157, 164, 165, 166, 180, 220, 273, 275, 422, 482], "13": [2, 5, 77, 115, 116, 163, 220, 271, 273, 275, 276], "14": [2, 6, 77, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 220, 239, 275, 276], "15": [2, 31, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 220, 275, 319, 345, 375, 482], "16": [2, 3, 15, 16, 21, 29, 35, 42, 47, 55, 65, 66, 72, 77, 108, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 275, 331, 333, 337, 397, 399, 467, 482], "17": [2, 11, 115, 116, 137, 157, 188, 208, 220, 275], "could": [2, 3, 4, 6, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 354, 397, 399, 465, 466, 473, 478, 479, 481, 485], "sai": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 308, 331, 333, 337, 397, 399, 478, 481, 485], "interleav": 2, "cannot": [2, 3, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 39, 53, 59, 69, 78, 79, 103, 104, 108, 111, 115, 116, 123, 127, 130, 133, 136, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 223, 226, 244, 251, 263, 308, 309, 351, 364, 367, 384, 465, 466, 467, 468, 478, 479, 480], "suggest": [2, 400, 464, 479], "serialenv": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258, 273, 275, 281, 349, 456, 484, 485], "squeez": [2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 211, 212, 215, 220, 254, 257, 282, 283, 324, 325, 464, 468, 480, 482], "6": [2, 3, 7, 15, 16, 18, 21, 29, 31, 50, 55, 69, 72, 77, 84, 108, 116, 131, 132, 137, 157, 164, 165, 180, 188, 208, 211, 220, 221, 239, 241, 257, 263, 273, 281, 282, 283, 285, 286, 287, 290, 294, 297, 303, 308, 309, 310, 313, 326, 349, 350, 358, 465, 468, 484], "5": [2, 3, 15, 16, 18, 21, 29, 31, 38, 39, 40, 48, 50, 51, 52, 53, 54, 55, 59, 62, 67, 69, 72, 74, 77, 78, 79, 110, 115, 116, 121, 127, 130, 133, 134, 137, 143, 144, 145, 149, 150, 152, 157, 158, 161, 164, 165, 166, 167, 168, 171, 172, 178, 180, 183, 186, 187, 188, 194, 195, 208, 211, 212, 214, 220, 221, 236, 248, 255, 256, 257, 263, 273, 275, 278, 279, 280, 281, 282, 283, 285, 286, 291, 292, 293, 294, 296, 299, 300, 303, 305, 308, 309, 313, 318, 321, 327, 328, 345, 346, 349, 351, 357, 381, 384, 386, 389, 390, 420, 458, 459, 463, 464, 465, 468, 470, 474, 478, 479, 480, 482, 483, 484, 485], "7": [2, 3, 6, 10, 42, 50, 55, 59, 62, 69, 77, 78, 108, 116, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 208, 211, 220, 221, 257, 260, 273, 279, 281, 282, 283, 286, 303, 305, 308, 408, 464, 482, 484], "9": [2, 3, 7, 31, 35, 50, 55, 62, 69, 77, 78, 84, 108, 116, 121, 131, 132, 148, 159, 160, 168, 208, 211, 220, 221, 257, 260, 265, 272, 273, 275, 306, 307, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 391, 397, 400, 430, 460, 464, 465, 478, 479], "18": [2, 50, 115, 116, 164, 165, 171, 172, 263, 275, 309], "19": [2, 115, 116, 121, 220, 275], "independ": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 157, 166, 230, 237, 258, 267, 280, 309, 340, 364, 384, 460, 461, 464, 465, 479, 482, 484], "congruent": 2, "name": [2, 3, 6, 7, 18, 35, 39, 40, 42, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 94, 95, 96, 97, 127, 128, 130, 131, 133, 137, 143, 145, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 203, 207, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 225, 227, 228, 229, 231, 233, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 275, 276, 298, 302, 331, 333, 334, 337, 346, 351, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 398, 399, 400, 402, 404, 405, 406, 420, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 461, 464, 465, 466, 467, 468, 471, 472, 473, 476, 478, 479, 480, 481, 485], "randomcroptensordict": [2, 464], "unlik": [2, 33, 69, 78, 79, 114, 137, 149, 150, 171, 172, 188, 278, 280, 333, 349, 374, 384, 422, 459, 465, 468, 470, 472, 484], "stop": [2, 3, 15, 16, 18, 21, 27, 29, 71, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 466, 472, 478, 479, 484, 485], "signal": [2, 3, 15, 16, 18, 21, 31, 50, 108, 115, 116, 121, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 207, 215, 221, 227, 236, 256, 259, 460, 464, 466, 478, 479, 482, 485], "disk": [2, 3, 50, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 101, 110, 184, 398, 440, 461, 464, 465, 467, 468, 472, 473, 478, 482], "dump": [2, 3, 11, 44, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 84, 95, 96, 97, 99, 101, 102, 103, 104, 110, 117, 119, 123, 184, 398, 420, 421, 422, 473, 474, 478], "json": [2, 194, 476], "metadata": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 367, 389, 466, 469, 471, 472, 478, 479, 485], "anticip": [2, 223, 226], "compli": [2, 280, 459], "back": [2, 32, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 197, 262, 271, 310, 341, 346, 347, 350, 351, 352, 353, 354, 466, 468, 478, 479, 480, 482], "exact": [2, 3, 31, 157, 300], "statu": [2, 3, 24, 133], "prioriti": [2, 4, 62, 78, 79, 101, 102, 103, 104, 107, 108, 117, 119, 123, 367, 368, 369, 371, 372, 373, 374, 380, 385, 387, 389, 390, 400, 461, 464, 465, 482], "heap": 2, "under": [2, 3, 4, 27, 35, 42, 47, 50, 55, 65, 66, 71, 72, 77, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 236, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 280, 331, 333, 337, 341, 346, 347, 350, 351, 352, 353, 354, 382, 397, 399, 402, 403, 404, 405, 406, 422, 460, 464, 465, 470, 478, 480, 485], "hood": [2, 3, 27, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 280, 480], "naiv": [2, 268, 469], "just": [2, 3, 4, 84, 119, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 148, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 183, 186, 187, 188, 207, 211, 218, 258, 276, 309, 334, 431, 458, 461, 464, 465, 466, 467, 468, 469, 470, 472, 476, 478, 479, 480, 482, 484, 485], "public": [2, 68, 118, 243, 270], "serializ": 2, "consum": [2, 114, 116, 349, 465, 466, 472, 479, 482], "much": [2, 3, 8, 15, 16, 21, 62, 78, 107, 108, 157, 166, 381, 384, 466, 468, 469, 473, 478, 479, 480, 482, 485], "duplic": [2, 35, 42, 47, 55, 65, 66, 72, 77, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 365, 367, 369, 374, 380, 382, 385, 387, 389, 390, 397, 399, 400], "observ": [2, 3, 8, 15, 16, 18, 21, 27, 29, 32, 44, 50, 55, 67, 75, 77, 84, 98, 99, 106, 108, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 206, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 237, 239, 240, 241, 245, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 281, 284, 285, 286, 287, 288, 289, 292, 295, 298, 302, 308, 313, 314, 317, 318, 319, 321, 322, 341, 342, 343, 344, 345, 346, 349, 350, 351, 358, 359, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 380, 381, 384, 385, 386, 387, 389, 390, 399, 400, 402, 403, 404, 405, 406, 420, 422, 450, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 473, 474, 477, 478, 479, 480, 482, 484, 485], "plu": [2, 15, 16, 21, 71, 157, 166, 178, 480], "three": [2, 33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 65, 94, 367, 459, 461, 466, 468, 469, 470, 478, 479, 480, 482, 485], "flatstoragecheckpoint": 2, "discard": [2, 3, 83, 137, 206, 268, 421, 482, 485], "compress": 2, "At": [2, 260, 295, 304, 465, 466, 467, 472, 477, 480, 481], "correct": [2, 4, 61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 190, 193, 215, 235, 398, 443, 466, 467, 476], "addit": [2, 3, 4, 14, 17, 24, 26, 35, 42, 47, 55, 57, 65, 66, 72, 77, 84, 96, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 219, 243, 258, 262, 264, 265, 268, 270, 275, 277, 296, 331, 333, 337, 345, 349, 353, 363, 382, 397, 399, 402, 420, 422, 460, 464, 465, 468, 469, 478, 479, 482], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 243, 268, 270, 275, 331, 333, 337, 364, 384, 397, 399, 464, 480, 481, 485], "appar": [2, 3, 433], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 96, 98, 99, 106, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 203, 208, 218, 225, 233, 236, 258, 266, 277, 283, 289, 292, 308, 314, 319, 321, 341, 346, 347, 350, 351, 352, 353, 354, 356, 357, 358, 361, 364, 369, 371, 372, 373, 384, 389, 390, 400, 459, 460, 465, 466, 467, 468, 469, 470, 471, 478, 479, 480, 485], "assumpt": [2, 3, 82, 480, 482], "accur": [2, 7, 465, 480, 482], "truncat": [2, 3, 15, 16, 18, 21, 44, 46, 50, 55, 56, 64, 75, 77, 80, 83, 96, 98, 99, 106, 108, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 186, 187, 188, 192, 207, 208, 227, 228, 233, 238, 245, 248, 252, 256, 258, 265, 266, 275, 298, 302, 328, 333, 337, 349, 402, 408, 464, 466, 469, 478, 485], "marl": [2, 148, 174, 215, 255, 259, 308, 309, 310, 373, 387, 460, 469, 478, 479], "extra": [2, 10, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 215, 272, 273, 275, 331, 333, 337, 397, 399, 429, 459, 466, 467, 482], "fail": [2, 7, 28, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 209], "concret": [2, 464, 466, 476], "set_se": [2, 3, 15, 16, 18, 21, 27, 29, 44, 50, 55, 75, 77, 127, 128, 129, 130, 133, 137, 143, 144, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 220, 221, 239, 246, 251, 257, 259, 265, 275, 458, 468, 472, 474, 480, 484, 485], "manual_se": [2, 3, 33, 44, 51, 52, 62, 69, 75, 77, 78, 79, 102, 115, 116, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 211, 220, 221, 225, 239, 248, 251, 257, 259, 273, 275, 295, 306, 307, 315, 318, 319, 341, 347, 354, 357, 364, 365, 367, 368, 372, 380, 387, 468, 472, 474, 478, 479, 480, 484, 485], "200": [2, 15, 16, 18, 27, 35, 42, 44, 47, 55, 65, 66, 67, 72, 75, 77, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 248, 275, 285, 286, 293, 322, 323, 331, 333, 337, 397, 399, 420, 422, 464, 467, 468, 472, 474, 482], "22": [2, 29, 115, 116, 271], "rb_test": 2, "_storag": [2, 481, 482], "max_siz": [2, 50, 62, 69, 77, 78, 79, 101, 102, 103, 104, 115, 116, 117, 121, 123, 466, 472], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 38, 61, 63, 70, 84, 95, 96, 97, 152, 184, 220, 263, 289, 306, 307, 308, 363, 367, 398, 420, 464, 466, 468, 478, 479], "state_dict": [2, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 272, 273, 275, 308, 309, 331, 333, 337, 367, 387, 397, 398, 399, 454, 461, 464, 465, 485], "load_state_dict": [2, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 272, 273, 275, 331, 333, 337, 367, 387, 397, 398, 399, 461, 464], "drawback": 2, "struggl": 2, "big": [2, 466, 472, 482, 485], "sequenti": [2, 9, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 214, 235, 275, 331, 333, 337, 340, 342, 343, 344, 350, 355, 356, 361, 364, 365, 367, 373, 380, 384, 385, 386, 387, 389, 397, 399, 459, 466, 467, 470, 479, 480, 481, 484, 485], "known": [2, 3, 5, 7, 8, 77, 137, 188, 258, 409, 410, 464, 465, 469], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 278, 464, 465, 471], "essenti": [2, 3, 13, 22, 23, 25, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 465, 469, 478, 480, 482], "purpos": [2, 3, 7, 11, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 296, 364, 366, 378, 381, 384, 386, 397, 450, 464, 466, 467, 468, 471, 473, 478, 479, 481, 485], "guid": [2, 11, 159, 160, 164, 165, 257, 457, 464, 479, 484], "explan": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 280, 331, 333, 337, 397, 399], "effect": [2, 3, 18, 29, 35, 39, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 108, 110, 113, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 215, 221, 265, 275, 280, 331, 333, 337, 397, 399, 440, 459, 464, 470, 478, 482, 485], "realm": [2, 470], "As": [2, 3, 4, 55, 69, 78, 79, 82, 110, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 248, 290, 354, 402, 459, 464, 465, 466, 467, 468, 469, 471, 472, 478, 479, 480, 481, 482, 484, 485], "practition": 2, "often": [2, 3, 8, 310, 379, 382, 397, 440, 464, 465, 469, 471, 480, 482, 485], "encount": [2, 4, 237, 349, 457, 465, 470, 480], "situat": [2, 149, 150, 186, 192], "sometim": [2, 3, 82, 467, 485], "variabl": [2, 3, 4, 7, 8, 20, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 72, 73, 74, 82, 85, 86, 87, 88, 89, 96, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 192, 260, 264, 273, 296, 297, 298, 300, 301, 302, 305, 342, 343, 344, 382, 385, 430, 461, 465], "immedi": [2, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 401, 478, 479], "199": 2, "info": [2, 3, 15, 16, 62, 67, 68, 69, 78, 79, 84, 107, 108, 110, 113, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 233, 266, 268, 271, 274, 429, 469, 474, 476, 478, 479, 482, 484], "glanc": [2, 469], "seem": [2, 464, 467, 469], "togeth": [2, 3, 11, 15, 16, 18, 21, 22, 23, 25, 27, 50, 65, 71, 73, 74, 102, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 244, 255, 264, 296, 298, 300, 302, 329, 342, 343, 344, 359, 459, 465, 467, 469, 478], "less": [2, 24, 152, 330, 452, 453, 460, 466, 467, 482, 484], "omit": [2, 145, 187, 277, 295, 319, 436, 466, 471, 480, 482], "proper": [2, 3, 4, 6, 7, 333, 337, 402, 403, 404, 405, 465, 466, 476, 478, 479, 480, 482], "imposs": [2, 3, 69, 78, 79, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 364, 366, 381, 384, 386], "determin": [2, 3, 17, 50, 62, 78, 84, 107, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 243, 270, 308, 319, 333, 337, 367, 465, 470, 478, 479], "complic": [2, 42, 65, 77, 331, 333, 337, 397, 480, 482, 485], "matter": [2, 41, 472], "inconsist": [2, 485], "miss": [2, 3, 4, 6, 7, 35, 39, 42, 47, 50, 55, 65, 66, 72, 77, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 233, 263, 265, 271, 275, 276, 331, 333, 337, 355, 356, 364, 367, 387, 397, 399, 457, 464, 467], "primari": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 145, 187, 472], "elimin": [2, 3, 469], "upon": [2, 3, 8, 20, 478, 480], "canon": 2, "definit": [2, 59, 117, 308, 476], "markov": [2, 3, 469, 485], "mdp": [2, 206, 469, 480], "context": [2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 116, 127, 130, 133, 134, 137, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 258, 267, 275, 280, 298, 302, 309, 311, 331, 333, 337, 340, 345, 395, 396, 397, 399, 402, 403, 404, 405, 407, 415, 422, 430, 435, 458, 459, 460, 464, 465, 466, 467, 468, 478, 479, 480, 481, 482, 484], "condit": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 186, 220, 221, 257, 272, 346, 347, 349, 351, 352, 363, 460, 464, 478, 480, 482], "complet": [2, 7, 9, 24, 29, 114, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 215, 256, 399, 457, 460, 464, 466, 469, 476, 477], "termin": [2, 3, 7, 15, 16, 18, 21, 29, 44, 46, 50, 55, 56, 71, 75, 77, 98, 99, 106, 115, 127, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 186, 187, 188, 192, 207, 208, 211, 212, 227, 233, 245, 258, 266, 275, 279, 298, 302, 305, 349, 355, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 464, 465, 466, 476, 478, 479, 480, 484, 485], "reward": [2, 3, 15, 16, 18, 41, 42, 44, 46, 50, 55, 56, 61, 70, 71, 75, 77, 83, 84, 94, 107, 108, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 206, 208, 209, 212, 213, 218, 219, 223, 224, 226, 227, 228, 233, 235, 236, 237, 241, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 262, 264, 265, 266, 267, 269, 270, 272, 273, 275, 279, 298, 305, 345, 349, 359, 364, 365, 367, 368, 369, 371, 372, 373, 376, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 438, 454, 458, 460, 461, 464, 465, 466, 467, 468, 469, 473, 476, 478, 479, 480, 484, 485], "imit": [2, 3, 378], "inform": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 134, 137, 140, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 281, 282, 283, 303, 309, 331, 333, 337, 397, 398, 399, 459, 460, 461, 464, 465, 466, 467, 468, 469, 476, 478, 479, 480, 482, 484], "stateless": [2, 3, 50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 221, 273, 335, 336, 382, 397, 420, 464, 469, 480, 485], "simul": [2, 3, 5, 7, 8, 82, 128, 129, 130, 139, 143, 144, 163, 171, 172, 202, 279, 305, 334, 458, 459, 464, 466, 468, 469, 473, 478, 479], "furthermor": [2, 478, 479], "certain": [2, 4, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 220, 221, 231, 256, 265, 275, 295, 297, 301, 331, 333, 337, 381, 397, 399, 464, 465, 466, 468, 474, 478, 479, 485], "composit": [2, 3, 33, 34, 36, 37, 38, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 91, 96, 113, 119, 126, 127, 130, 133, 135, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 207, 209, 212, 223, 224, 225, 226, 228, 233, 235, 237, 245, 246, 252, 256, 258, 262, 263, 264, 266, 273, 275, 277, 279, 305, 341, 350, 354, 356, 357, 361, 364, 384, 399, 456, 464, 466, 470, 476, 480], "uniform": [2, 62, 78, 107, 108, 333, 337, 478], "unambigu": 2, "distinguish": [2, 3, 69, 78, 79, 149, 150, 171, 172], "happen": [2, 3, 24, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 276, 319, 465, 468, 471, 472, 473, 481, 485], "everyth": [2, 465, 466, 467, 473, 474], "belong": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 271, 272, 354, 464, 472, 479], "rule": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 223, 226, 275, 331, 333, 337, 354, 397, 399, 459, 466], "field": [2, 3, 15, 16, 18, 21, 29, 31, 35, 39, 42, 44, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 95, 96, 97, 101, 102, 103, 107, 115, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 208, 212, 223, 226, 227, 228, 233, 241, 245, 246, 248, 252, 255, 256, 258, 263, 265, 266, 275, 279, 281, 291, 292, 298, 302, 305, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 444, 457, 459, 465, 480], "taken": [2, 3, 33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 208, 247, 306, 307, 460, 464, 466, 467, 470, 478, 479, 480], "is_shar": [2, 3, 15, 16, 18, 29, 31, 39, 42, 44, 50, 61, 63, 64, 65, 70, 71, 75, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 101, 102, 103, 107, 115, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 192, 206, 208, 212, 223, 226, 227, 228, 233, 241, 245, 246, 248, 252, 255, 256, 258, 266, 272, 279, 281, 291, 292, 298, 302, 305, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 400, 459, 480], "envbas": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 50, 84, 127, 130, 134, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 209, 212, 223, 226, 238, 245, 246, 264, 265, 272, 275, 279, 298, 302, 304, 305, 349, 399, 435, 444, 445, 446, 450, 452, 453, 454, 456, 458, 469], "brought": [2, 466, 467, 470], "step_mdp": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 298, 302, 456, 467, 469, 480, 484, 485], "count": [2, 3, 15, 16, 18, 21, 29, 50, 55, 84, 133, 134, 220, 256, 263, 273, 319, 435, 440, 443, 464, 465, 466, 467, 482, 485], "trigger": [2, 7, 42, 65, 77, 186, 273, 331, 333, 337, 397], "turn": [2, 22, 23, 25, 27, 39, 40, 48, 61, 63, 66, 70, 72, 74, 84, 95, 96, 97, 130, 144, 157, 168, 184, 220, 232, 264, 267, 271, 346, 398, 402, 420, 435, 460, 464, 465, 467, 470, 480, 481], "retain": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "regard": [2, 292, 347, 364, 374, 384, 464, 466, 480], "expand": [2, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 115, 116, 184, 212, 258, 290, 353, 356, 365, 367, 380, 382, 385, 387, 389, 390, 397, 398, 478, 479, 480, 482, 484], "recur": [2, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 402, 403, 404, 405, 406, 470], "anyth": [2, 4, 15, 16, 18, 21, 22, 23, 25, 27, 460], "els": [2, 128, 129, 192, 212, 296, 297, 300, 301, 313, 459, 461, 464, 465, 466, 467, 476, 478, 479, 480, 481], "repetit": [2, 466, 469, 472], "embed": [2, 243, 268, 269, 270, 285, 320, 341, 342, 343, 344, 353, 354, 358, 481], "strictli": [2, 3, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 236, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399, 464, 466], "enforc": [2, 35, 39, 42, 47, 55, 65, 66, 72, 77, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 355, 367, 387, 397, 399, 480], "n_action": [2, 349, 365, 367, 369, 371, 383, 387], "rightmost": [2, 460], "n_ob": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 235, 349, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 471], "estim": [2, 4, 108, 115, 116, 179, 180, 183, 186, 192, 193, 227, 235, 285, 327, 342, 343, 344, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 460, 465, 466, 470, 471, 478, 479], "subsequ": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 275, 331, 333, 337, 397, 399, 467, 478], "proce": [2, 478], "state_valu": [2, 343, 344, 358, 366, 372, 380, 381, 384, 385, 387, 402, 403, 404, 405, 407, 409, 411, 413, 415, 416, 418, 459, 464, 479], "f": [2, 15, 16, 18, 21, 29, 128, 129, 137, 143, 144, 178, 188, 195, 260, 276, 301, 363, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 464, 465, 466, 467, 474, 478, 479, 480, 482, 485], "next_state_valu": [2, 389, 390, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 456], "broadcast": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 290, 334, 373, 387], "left": [2, 57, 108, 115, 181, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 212, 219, 220, 222, 223, 224, 228, 235, 237, 243, 245, 246, 252, 256, 259, 262, 264, 266, 268, 270, 273, 275, 295, 308, 399, 465, 466, 468, 472, 473], "would": [2, 3, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 296, 298, 300, 302, 303, 308, 331, 333, 337, 354, 397, 399, 460, 461, 465, 466, 467, 469, 471, 472, 480, 482, 484, 485], "best": [2, 5, 9, 141, 298, 302, 478, 479, 482, 484], "bug": [2, 4], "worst": [2, 465], "twice": [2, 8, 116], "feasibl": 2, "mostli": [2, 3, 21, 318, 422, 460, 473, 482, 485], "eas": [2, 3, 478, 479], "flat": [2, 121, 402], "manner": [2, 137, 188, 194, 243, 268, 459, 464, 465, 466, 472, 477, 480, 482], "ted2flat": [2, 44, 456], "flat2t": [2, 456], "unflatten": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 212, 349], "deseri": [2, 3, 44], "posit": [2, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 230, 231, 233, 254, 255, 256, 259, 263, 265, 267, 275, 331, 333, 337, 367, 387, 397, 399, 460, 466, 478, 479, 480, 482], "both": [2, 3, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 127, 130, 133, 134, 136, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 169, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 208, 215, 233, 246, 262, 263, 265, 275, 282, 283, 298, 301, 302, 303, 308, 309, 331, 333, 337, 342, 343, 344, 347, 352, 364, 366, 367, 368, 372, 373, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 402, 435, 459, 464, 466, 468, 469, 471, 476, 478, 479, 480, 481, 482, 485], "mark": [2, 3, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 260, 298, 302, 402, 404, 405, 472, 482], "identifi": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 64, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 476], "abov": [2, 3, 7, 35, 42, 47, 55, 65, 66, 72, 77, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 264, 275, 299, 327, 328, 331, 333, 337, 363, 397, 399, 460, 461, 464, 466, 468, 469, 470, 478, 479, 480, 485], "output": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 84, 96, 108, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 207, 212, 213, 215, 218, 219, 221, 222, 223, 224, 226, 228, 230, 233, 235, 237, 239, 243, 245, 246, 251, 252, 255, 256, 259, 260, 262, 264, 265, 266, 268, 270, 271, 273, 275, 277, 282, 283, 284, 285, 286, 289, 291, 292, 293, 296, 297, 298, 300, 301, 302, 303, 308, 309, 316, 318, 319, 321, 330, 331, 333, 337, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 406, 420, 422, 431, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 473, 476, 477, 478, 479, 480, 481, 484, 485], "typic": [2, 3, 4, 8, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 35, 42, 47, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 227, 257, 275, 316, 318, 331, 333, 337, 350, 365, 367, 382, 384, 387, 397, 399, 458, 459, 460, 461, 466, 468, 469, 471, 472, 478, 479, 480], "adjust": [2, 11, 258, 464, 478, 479, 480], "grumodul": [2, 214, 258, 340, 361, 467], "lstmmodul": [2, 298, 340, 467, 468], "skip": [2, 3, 17, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 221, 231, 233, 237, 263, 265, 275, 331, 333, 337, 350, 354, 367, 382, 387, 397, 399, 402, 403, 404, 405, 421, 422, 433, 435, 464, 465, 480], "accumul": [2, 8, 275], "upcom": [2, 382, 397, 411, 412, 413, 414, 416, 417, 418, 419, 464], "popular": [2, 3, 458, 459, 467, 471, 479], "rainbow": 2, "multistep": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 275, 456, 465], "shift": [2, 44, 46, 55, 56, 75, 98, 99, 106, 360, 402, 403, 404, 405, 466], "approxim": [2, 479, 485], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 15, 21, 215, 289, 317, 364, 370, 383, 384, 431, 454, 458, 466, 467, 479, 482], "2x": 2, "small": [2, 116, 268, 273, 278, 464, 466, 468, 478, 479, 485], "clearer": [2, 468, 470], "lazi": [2, 3, 73, 74, 91, 92, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 243, 268, 282, 308, 311, 355, 356, 464, 465, 470, 472, 477, 482, 485], "certainli": 2, "welcom": [2, 469], "wrapper": [2, 3, 21, 61, 63, 70, 71, 78, 79, 84, 95, 96, 97, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 184, 186, 187, 188, 192, 271, 276, 280, 281, 330, 332, 333, 337, 345, 349, 354, 359, 398, 402, 427, 428, 429, 454, 456, 466, 467, 469, 476, 478, 479, 481, 484, 485], "around": [2, 5, 7, 21, 78, 79, 127, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 280, 318, 332, 349, 354, 402, 458, 464, 465, 476, 479, 485], "selecttransform": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "excludetransform": [2, 252, 482], "promptli": 2, "virtual": [2, 3, 136], "instal": [2, 3, 5, 10, 22, 23, 25, 66, 77, 127, 130, 133, 137, 142, 145, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 424, 440, 457, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 485], "respons": [2, 3, 8, 15, 16, 18, 20, 22, 25, 27, 29, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 194, 195, 333, 337, 440, 458, 471, 472, 476, 485], "d4rl": 2, "repositori": [2, 7, 171, 172, 478, 479], "wheel": [2, 466], "publish": 2, "openml": [2, 154], "scikit": [2, 154], "panda": 2, "raw": [2, 3, 4, 71, 197, 233, 262, 266, 299, 327, 328, 465, 468, 472, 480], "go": [2, 3, 7, 102, 148, 157, 178, 221, 244, 248, 345, 408, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "modifi": [2, 3, 7, 8, 35, 42, 47, 55, 65, 66, 72, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 215, 219, 221, 230, 233, 235, 243, 258, 264, 265, 268, 270, 273, 275, 310, 319, 331, 333, 334, 337, 345, 353, 354, 397, 399, 443, 458, 460, 464, 465, 466, 468, 469, 478, 479, 480], "fly": [2, 215, 272, 381, 460, 466, 480, 482, 485], "least": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 218, 473, 485], "pre": [2, 7, 28, 35, 42, 47, 55, 65, 66, 72, 77, 83, 103, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 243, 262, 268, 270, 275, 331, 333, 337, 397, 399, 485], "conisder": 2, "per": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 121, 141, 143, 144, 157, 159, 160, 218, 237, 251, 282, 283, 293, 295, 308, 309, 349, 422, 424, 427, 429, 440, 452, 453, 464, 465, 466, 467, 468, 470, 471, 474, 478, 479, 482, 484], "pipelin": [2, 3, 7, 137, 188, 458, 459, 460, 466], "replac": [2, 3, 6, 7, 35, 42, 47, 55, 65, 66, 72, 77, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 211, 225, 227, 234, 272, 273, 275, 295, 331, 333, 337, 365, 367, 373, 380, 385, 387, 389, 390, 397, 399, 402, 403, 404, 405, 459, 478, 482, 484], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 237, 248, 258, 265, 275, 277, 319, 331, 333, 337, 349, 397, 398, 399, 438, 459, 461, 465, 466, 467, 470, 473, 480, 482, 485], "produc": [2, 3, 39, 40, 48, 50, 74, 115, 178, 208, 211, 212, 282, 283, 303, 309, 315, 342, 344, 345, 354, 422, 466, 467, 468, 469, 470, 472, 482, 485], "download": [2, 7, 10, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 141, 243, 270, 422, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "forc": [2, 3, 6, 7, 15, 16, 21, 22, 23, 25, 27, 158, 465, 478, 479, 480], "robosetexperiencereplai": [2, 115, 116], "fk1": 2, "v4": [2, 137, 157, 188, 208, 247, 411, 412, 413, 414, 416, 417, 418, 419, 464, 466, 481, 484], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 274], "obs_norm": 2, "norm": [2, 4, 8, 128, 129, 278, 440, 464, 465, 466, 478, 479, 480], "num_work": [2, 24, 26, 61, 63, 83, 94, 152, 157, 166, 464, 465], "os": [2, 63, 83, 94, 465], "cpu_count": [2, 63, 83, 94], "num_chunk": 2, "1000": [2, 4, 18, 29, 50, 69, 77, 101, 102, 107, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 272, 277, 295, 318, 319, 350, 354, 379, 464, 465, 466, 467, 468, 470, 472, 474, 480, 481, 482], "mp_start_method": [2, 157, 166, 263, 465, 484], "fork": [2, 5, 464, 465, 466, 467, 478, 479, 481, 484], "recreat": [2, 480], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 32, 69, 78, 79, 108, 110, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 212, 235, 458, 468, 472, 481], "grain": [2, 3, 69, 78, 79, 108, 110, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212], "nomenclatur": 2, "compact": [2, 50, 75, 98, 99, 106], "propos": [2, 215, 227, 280, 304, 379, 388, 459, 467, 482], "replaybufferensembl": [2, 113, 119, 126], "primit": [2, 3, 4, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 458], "individu": [2, 4, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 83, 108, 110, 121, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 273, 275, 331, 333, 337, 366, 381, 384, 397, 399, 458, 464, 479], "dummi": [2, 3, 168, 192, 420, 464, 468, 472, 485], "semant": [2, 73, 74, 136, 138, 481], "ident": [2, 3, 15, 16, 18, 55, 61, 63, 69, 70, 77, 78, 79, 84, 95, 96, 97, 101, 110, 115, 127, 130, 133, 136, 137, 138, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 185, 186, 187, 188, 227, 255, 264, 273, 278, 308, 309, 365, 367, 380, 385, 387, 389, 390, 398, 402, 403, 404, 405, 452, 453, 465, 469, 478, 479], "another_kei": [2, 110], "renam": [2, 3, 61, 63, 70, 84, 95, 96, 97, 110, 184, 206, 246, 248, 398, 464], "resiz": [2, 3, 110, 215, 465, 467, 468, 469, 482, 485], "imag": [2, 3, 4, 7, 11, 95, 215, 217, 220, 222, 243, 261, 270, 303, 420, 422, 464, 465, 468, 469, 473, 479, 481, 485], "comops": 2, "totensorimag": [2, 3, 110, 215, 247, 465, 467, 468, 482, 484, 485], "renametransform": [2, 3, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215], "rb0": [2, 110], "in_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 50, 65, 67, 77, 110, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 279, 281, 291, 298, 302, 305, 320, 329, 330, 331, 333, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 378, 380, 381, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 421, 422, 450, 459, 464, 465, 466, 467, 468, 470, 471, 474, 477, 478, 479, 480, 481, 482, 484, 485], "pixel": [2, 3, 7, 39, 110, 130, 131, 132, 136, 138, 139, 163, 215, 217, 222, 227, 230, 232, 239, 241, 243, 247, 261, 268, 270, 285, 313, 314, 420, 422, 464, 465, 467, 468, 473, 478, 481, 482, 484, 485], "rb1": [2, 110], "out_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 50, 65, 67, 77, 110, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 279, 281, 291, 292, 298, 302, 305, 320, 321, 329, 330, 331, 333, 337, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 364, 365, 366, 367, 372, 373, 378, 380, 381, 384, 385, 386, 387, 389, 397, 399, 400, 402, 403, 404, 405, 420, 422, 435, 450, 459, 464, 465, 466, 467, 468, 470, 474, 477, 478, 479, 480, 481, 482, 484, 485], "pixels33": [2, 110], "data0": [2, 102, 110], "244": [2, 110, 243, 270], "data1": [2, 102, 110, 484], "_": [2, 8, 62, 67, 68, 69, 78, 79, 102, 110, 130, 134, 141, 171, 172, 192, 216, 223, 225, 226, 235, 239, 246, 261, 272, 275, 318, 341, 353, 354, 358, 363, 364, 365, 367, 368, 372, 373, 380, 384, 385, 387, 389, 390, 402, 403, 404, 405, 424, 464, 465, 466, 467, 468, 474, 478, 479, 480, 482, 484], "parent": [2, 3, 27, 35, 42, 46, 47, 55, 57, 65, 66, 72, 77, 82, 84, 110, 119, 126, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 212, 215, 216, 219, 220, 221, 224, 227, 230, 231, 237, 239, 243, 251, 256, 257, 258, 259, 263, 264, 267, 268, 275, 298, 302, 331, 333, 337, 342, 361, 382, 384, 397, 399, 406, 420, 422, 464, 472, 480, 484, 485], "basic": [2, 3, 19, 151, 459, 466, 471, 472, 474, 478, 484, 485], "properti": [2, 3, 14, 17, 19, 20, 24, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 110, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 263, 264, 265, 272, 273, 275, 290, 299, 307, 311, 315, 326, 327, 328, 331, 333, 337, 349, 364, 367, 382, 384, 386, 387, 397, 398, 399, 470, 472, 480, 482], "input": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 118, 124, 127, 130, 133, 137, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 308, 309, 310, 311, 312, 319, 321, 322, 323, 324, 325, 327, 330, 331, 333, 337, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 434, 438, 443, 450, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 476, 478, 479, 480, 484, 485], "send": [2, 3, 8, 20, 30, 161, 167, 429, 456, 484], "receiv": [2, 3, 14, 17, 19, 20, 24, 26, 30, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 264, 265, 273, 275, 303, 331, 333, 337, 397, 399, 408, 456, 460, 464, 466, 471, 477, 480], "spawn": [2, 3, 4, 22, 28, 141, 152, 157, 166, 263, 465, 478, 479], "check_env_spec": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 208, 233, 245, 266, 420, 456, 466, 478, 479, 480], "saniti": [2, 3, 7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 466], "make_composite_from_td": [2, 82, 456, 480], "fall": [2, 4], "categori": [2, 39, 459, 461], "bound": [2, 3, 4, 27, 35, 37, 39, 42, 47, 55, 65, 66, 72, 77, 85, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 218, 238, 272, 275, 277, 295, 319, 322, 323, 331, 333, 337, 341, 346, 347, 350, 351, 352, 353, 354, 357, 364, 365, 367, 368, 380, 384, 385, 387, 389, 390, 397, 399, 456, 459, 464, 465, 466, 468, 478, 480, 484, 485], "unbound": [2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 86, 87, 88, 89, 95, 96, 97, 110, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 192, 200, 209, 212, 223, 226, 245, 258, 279, 305, 341, 353, 356, 358, 386, 398, 456, 476, 480, 482], "boundeddiscret": [2, 36, 39], "boundedcontinu": [2, 28, 36, 39, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 233, 236, 266], "unboundeddiscret": [2, 85, 158, 233, 456], "unboundedcontinu": [2, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 245, 258, 356, 361, 456], "implicitli": 2, "onehot": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 60, 73, 74, 82, 85, 86, 87, 88, 89, 128, 129, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170, 292, 321, 346, 351, 369, 371, 372, 373, 400, 456, 459], "multionehot": [2, 51, 52, 54, 369, 372, 373, 400, 456], "multicategor": [2, 52, 53, 54, 456], "binari": [2, 3, 7, 34, 35, 59, 169, 209, 213, 292, 321, 346, 347, 351, 352, 369, 372, 373, 400, 456, 476], "concept": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 318, 465, 476, 482], "arbitrari": [2, 3, 33, 59, 69, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 460, 464, 465, 480, 482], "combin": [2, 4, 45, 66, 389, 465, 468, 473, 482, 484], "nevertheless": [2, 3, 466, 469, 482], "otherwis": [2, 3, 12, 15, 16, 18, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 108, 110, 115, 116, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 216, 220, 221, 225, 233, 239, 257, 258, 259, 263, 264, 265, 272, 275, 276, 278, 280, 296, 299, 300, 308, 309, 327, 328, 331, 333, 337, 340, 346, 351, 354, 357, 365, 367, 376, 382, 383, 387, 397, 398, 399, 402, 404, 405, 435, 437, 460, 461, 464, 465, 466, 467, 476, 480, 485], "similarli": [2, 3, 27, 35, 42, 47, 55, 65, 66, 72, 77, 114, 119, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 237, 275, 308, 331, 333, 337, 355, 356, 372, 380, 397, 399, 402, 458, 485], "possess": [2, 82], "unsqueez": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 108, 200, 209, 212, 215, 216, 261, 267, 464, 467, 468, 478, 479, 480], "move": [2, 4, 35, 42, 47, 55, 65, 66, 72, 77, 82, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 208, 219, 224, 243, 258, 264, 265, 268, 270, 272, 273, 275, 303, 331, 333, 337, 353, 397, 399, 438, 464, 465, 467, 469, 485], "unbind": [2, 61, 62, 63, 69, 70, 78, 79, 84, 95, 96, 97, 184, 237, 349, 398], "said": [2, 466], "neg": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 62, 65, 78, 82, 107, 108, 190, 215, 230, 244, 255, 267, 366, 375, 381, 384, 402, 404, 405, 460, 466, 478, 479, 480], "seen": [2, 3, 22, 23, 25, 27, 39, 40, 48, 74, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 224, 460, 464, 465, 467, 471, 478, 479, 482], "predict": [2, 3, 55, 71, 291, 293, 304, 305, 345, 359, 364, 366, 371, 374, 376, 377, 381, 384, 386, 397, 401, 464, 465, 471], "deprec": [2, 31, 34, 35, 37, 40, 42, 43, 47, 48, 49, 52, 54, 55, 58, 60, 65, 66, 72, 77, 87, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 272, 275, 331, 333, 337, 364, 366, 367, 369, 372, 373, 374, 380, 381, 384, 385, 386, 387, 397, 399, 400, 402, 403, 404, 405, 410, 485], "mont": [2, 179, 180, 183, 186, 192, 364, 366, 381, 384, 397, 399, 464], "carlo": [2, 179, 180, 183, 186, 192, 364, 366, 381, 384, 397, 399, 464], "mct": [2, 50], "act": [2, 3, 4, 115, 116, 159, 160, 265, 291, 309, 365, 367, 368, 380, 385, 387, 389, 390, 467, 468, 478, 479, 482, 484], "tradit": [2, 471, 478], "integ": [2, 15, 16, 18, 21, 29, 31, 47, 51, 53, 55, 59, 65, 66, 71, 72, 84, 108, 115, 116, 117, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 194, 208, 211, 227, 231, 239, 256, 273, 282, 283, 303, 308, 309, 367, 372, 380, 387, 460, 468, 482], "advanc": [2, 3, 27, 62, 69, 78, 79, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 469, 472, 482], "rebuild": [2, 50], "initi": [2, 4, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 33, 34, 35, 38, 42, 43, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 95, 96, 97, 110, 121, 127, 130, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 214, 233, 239, 243, 258, 265, 268, 273, 274, 275, 276, 277, 278, 279, 295, 296, 297, 300, 301, 305, 308, 309, 310, 311, 312, 319, 331, 333, 335, 336, 337, 349, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 454, 459, 460, 464, 465, 467, 469, 470, 472, 476, 478, 480, 485], "pair": [2, 3, 55, 61, 63, 65, 70, 77, 84, 95, 96, 97, 127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 248, 258, 263, 298, 342, 350, 354, 382, 397, 398, 402, 403, 404, 405, 406, 459, 460, 464, 465, 466, 470, 471, 477, 480, 485], "term": [2, 71, 102, 193, 235, 300, 301, 311, 312, 363, 364, 373, 442, 465, 466, 469, 470, 479], "pseudocod": [2, 3], "next_stat": [2, 460], "associ": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 39, 40, 42, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 275, 322, 331, 333, 336, 337, 397, 398, 399, 454, 464, 482], "sens": [2, 4, 61, 63, 70, 84, 95, 96, 97, 184, 192, 215, 398, 472, 480], "hard": [2, 3, 7, 121, 131, 132, 157, 379, 465, 485], "know": [2, 3, 4, 9, 62, 69, 78, 79, 136, 138, 277, 382, 385, 397, 435, 464, 465, 466, 467, 468, 469, 470, 471, 472, 478, 479, 482], "next_td": 2, "Of": [2, 3, 7, 457, 480, 485], "cours": [2, 3, 4, 457, 480, 485], "handi": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 473], "undertaken": [2, 84, 460, 480], "link": [2, 6, 7, 133, 465, 474], "hash": [2, 47, 50, 65, 66, 72, 77, 84, 130, 145, 187], "past": [2, 4, 215, 349, 465, 482], "node_map": [2, 50], "_index": [2, 65, 77], "Then": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 183, 271, 466, 477], "track": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 79, 107, 108, 114, 130, 186, 251, 260, 272, 273, 275, 319, 349, 399, 427, 433, 465, 467, 469, 472, 479, 480, 482], "next_data": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "data_map": [2, 50], "form": [2, 15, 16, 21, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 296, 298, 300, 302, 331, 333, 337, 354, 363, 364, 366, 381, 384, 397, 399, 440, 459, 470], "figur": [2, 3, 84, 145, 187, 464, 466, 467, 479, 480, 485], "flowchart": 2, "o": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 301, 331, 333, 337, 397, 399], "get_tre": [2, 50, 84], "vertex": [2, 84], "longer": [2, 84, 276, 465, 474, 478, 479, 482], "vertic": [2, 84], "branch": [2, 50, 84], "repeat": [2, 84, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 189, 192, 263, 279, 290, 466, 478, 479, 480], "depth": [2, 69, 82, 127, 130, 133, 137, 145, 151, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 279, 282, 283, 285, 286, 287, 288, 293, 294, 303, 305, 308, 309, 310, 313, 314, 346, 459, 465, 469, 471, 472, 477, 478, 479, 482], "until": [2, 3, 7, 27, 29, 144, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 259, 264, 275, 399, 430, 466, 467, 474, 478, 479], "anymor": [2, 61, 63, 70, 84, 95, 96, 97, 184, 265, 353, 398], "utmost": 2, "post": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 458], "grpo": [2, 186, 192, 397, 456], "commonli": [2, 108, 115, 116, 485], "emploi": [2, 312], "scarc": 2, "address": [2, 335, 482], "subdomain": 2, "extern": [2, 3, 223, 226, 273, 335, 476, 478, 485], "token": [2, 29, 63, 64, 71, 80, 83, 94, 96, 97, 145, 178, 179, 180, 182, 183, 186, 187, 189, 190, 191, 194, 195, 196, 333, 337, 458, 476], "dm": [3, 464, 485], "experi": [3, 62, 69, 78, 79, 107, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 424, 425, 426, 427, 428, 429, 457, 465, 466, 468, 472, 473, 478, 479, 482], "box": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 136, 138, 310, 382, 397, 476], "lib": [3, 5, 6, 7, 9, 10, 15, 16, 18, 21, 27, 28, 29, 67, 127, 130, 133, 134, 137, 142, 145, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 218, 227, 234, 235, 239, 241, 246, 248, 251, 258, 264, 271, 272, 275, 399, 420, 450, 464, 465, 466, 467, 477, 479, 481, 482, 484, 485], "hope": [3, 11], "nn": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 41, 42, 47, 55, 65, 66, 67, 71, 72, 77, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 220, 225, 227, 235, 243, 258, 264, 265, 268, 270, 275, 279, 281, 282, 283, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 307, 308, 309, 310, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 361, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 450, 459, 460, 464, 465, 466, 467, 468, 470, 471, 474, 477, 478, 479, 480, 481, 484], "organis": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265, 465], "attribut": [3, 4, 7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 136, 137, 138, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 227, 237, 243, 265, 268, 272, 273, 275, 331, 333, 337, 354, 364, 365, 367, 368, 369, 371, 373, 374, 375, 378, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 464, 467, 480], "live": [3, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 227, 275, 331, 333, 337, 397, 399], "actual": [3, 4, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 271, 398, 443, 460, 464, 466, 468, 478, 479, 480], "care": [3, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 422, 464, 466, 468, 478, 479, 480, 482], "parametr": [3, 312, 354, 365, 367, 372, 380, 387, 464, 466], "observation_spec": [3, 50, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 212, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 230, 232, 233, 234, 235, 239, 241, 243, 245, 247, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 275, 279, 298, 302, 305, 399, 444, 450, 464, 466, 471, 477, 478, 479, 480, 485], "state_spec": [3, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 219, 224, 239, 264, 266, 267, 275, 279, 305, 399, 480, 485], "reward_spec": [3, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 212, 213, 218, 219, 223, 224, 226, 236, 245, 249, 250, 251, 253, 255, 262, 264, 266, 267, 273, 275, 279, 305, 399, 466, 476, 478, 479, 480, 485], "done_spec": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 223, 224, 226, 227, 245, 255, 262, 264, 266, 275, 399, 478, 479, 480, 485], "flag": [3, 8, 42, 62, 67, 68, 69, 78, 79, 110, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 234, 319, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 459, 478, 479, 480, 481], "input_spec": [3, 84, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 212, 219, 223, 224, 225, 237, 241, 245, 246, 251, 252, 255, 256, 257, 258, 262, 264, 265, 266, 269, 275, 399, 466, 480], "full_action_spec": [3, 84, 127, 130, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 183, 186, 187, 188, 208, 224, 279, 305, 478, 479], "full_state_spec": [3, 50, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 208, 224, 279, 305], "output_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 228, 235, 237, 245, 246, 252, 256, 262, 264, 265, 266, 273, 275, 399, 480], "full_observation_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 279, 305], "full_reward_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 224, 245, 478, 479], "full_done_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 212, 224, 245, 478, 479], "carri": [3, 27, 53, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258, 273, 382, 397, 458, 465, 467, 478, 479, 480, 482], "nontensor": [3, 58, 96, 183, 188, 233, 266, 456], "spec_lock": [3, 133], "modif": [3, 5, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 230, 233, 275, 331, 333, 337, 382, 397, 399, 460, 466, 480], "children": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "unlock": [3, 39, 40, 48, 61, 63, 70, 74, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 398], "set_spec_lock_": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reason": [3, 4, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 243, 268, 275, 302, 331, 333, 337, 397, 399, 460, 464, 465, 466, 471, 472, 478, 480, 482], "easi": [3, 5, 11, 127, 130, 131, 132, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 295, 319, 337, 459, 460, 464, 465, 466, 479, 481, 482, 484, 485], "cach": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 73, 74, 82, 83, 85, 86, 87, 88, 89, 94, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 211, 223, 226, 243, 264, 265, 270, 280, 432], "principl": 3, "new_spec": 3, "eras": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265], "relock": 3, "previous": [3, 4, 50, 466, 485], "importantli": [3, 350, 354], "action_s": 3, "help": [3, 4, 35, 42, 47, 55, 65, 66, 72, 77, 82, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 227, 275, 331, 333, 337, 364, 366, 381, 384, 386, 397, 399, 457, 460, 464, 465, 466, 467, 476, 478, 479], "With": [3, 143, 144, 148, 257, 461, 465, 476, 477, 478, 479, 482, 485], "necessarili": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 485], "present": [3, 29, 35, 42, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 95, 96, 97, 107, 108, 110, 114, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 207, 228, 248, 252, 258, 263, 265, 275, 283, 284, 285, 286, 287, 288, 294, 298, 300, 302, 312, 317, 319, 331, 333, 337, 349, 353, 354, 355, 356, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 454, 458, 461, 464, 474, 477, 478, 479, 482, 484], "0s": [3, 258, 467], "step_and_maybe_reset": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 458, 469, 476], "done_kei": [3, 31, 42, 44, 46, 50, 56, 75, 98, 99, 106, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 211, 215, 227, 248, 256, 275, 399, 478, 479], "assign": [3, 4, 15, 16, 21, 35, 36, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 85, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 335, 337, 367, 368, 369, 371, 387, 397, 398, 399, 466, 470, 476, 478, 479, 482], "_reset": [3, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 209, 211, 212, 215, 223, 226, 234, 245, 260, 279, 305, 478], "data_": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "append": [3, 8, 11, 50, 62, 67, 68, 69, 78, 79, 96, 110, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 190, 192, 211, 218, 219, 237, 248, 258, 265, 271, 297, 298, 301, 302, 346, 351, 458, 464, 465, 466, 467, 468, 476, 478, 479, 480, 481, 482, 484], "seed": [3, 15, 16, 18, 21, 27, 29, 69, 78, 79, 110, 127, 130, 133, 137, 145, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 189, 209, 212, 223, 226, 233, 245, 265, 420, 440, 478], "determinist": [3, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 219, 243, 258, 264, 265, 268, 270, 275, 284, 293, 313, 323, 331, 333, 337, 341, 350, 353, 354, 357, 365, 382, 397, 399, 435, 459, 464, 465, 466, 467, 468, 470, 471, 474, 478, 480, 484, 485], "preced": [3, 55, 130, 215, 467], "risk": [3, 244], "overlap": [3, 78, 121], "reproduc": [3, 66, 72, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 215, 233, 464, 466, 468, 479], "maximum": [3, 4, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 33, 55, 61, 63, 64, 71, 77, 80, 83, 84, 85, 94, 101, 102, 103, 104, 107, 108, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 225, 249, 256, 257, 259, 278, 326, 327, 328, 357, 365, 367, 372, 373, 380, 382, 383, 387, 397, 422, 437, 459, 464, 465, 466, 467, 470, 478, 479, 482], "max_step": [3, 11, 121, 127, 130, 133, 137, 145, 149, 150, 151, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 256, 263, 275, 420, 469, 470, 471, 473, 474, 478, 479, 484, 485], "tensordictmodul": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 65, 67, 71, 77, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 214, 220, 235, 281, 292, 298, 302, 305, 320, 321, 329, 330, 331, 333, 337, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 355, 356, 357, 359, 361, 365, 367, 368, 372, 373, 375, 376, 377, 378, 380, 382, 385, 387, 389, 390, 397, 400, 401, 402, 403, 404, 405, 435, 450, 456, 464, 466, 467, 471, 474, 477, 478, 479, 480, 481, 485], "trail": [3, 185, 272, 476], "treat": [3, 55, 460, 470, 471], "brief": [3, 466, 469, 471, 482], "deliveri": 3, "metaclass": [3, 133, 138], "flank": [3, 460, 467], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 136, 137, 138, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 233, 263, 265, 272, 275, 279, 292, 293, 305, 306, 307, 308, 309, 310, 313, 314, 322, 323, 331, 333, 337, 344, 347, 364, 367, 374, 375, 376, 377, 384, 387, 397, 399, 402, 407, 415, 463, 464, 466, 468, 470, 471, 472, 473, 478, 479, 482], "union": [3, 25, 35, 39, 40, 42, 47, 48, 49, 53, 54, 55, 57, 59, 60, 65, 66, 72, 73, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 308, 329, 331, 333, 337, 371, 373, 385, 397, 399, 451, 454], "assess": [3, 15, 16, 18, 21, 22, 23, 25, 27, 39, 40, 48, 74, 149, 150, 174, 183, 464], "split_trajectori": [3, 15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 116, 456], "adjac": [3, 31, 230, 349], "junction": 3, "inittrack": [3, 298, 302, 349, 464, 467], "tutori": [3, 158, 191, 455, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 485], "scratch": [3, 8, 465, 480], "mere": [3, 21, 468], "batch_lock": [3, 127, 130, 133, 135, 137, 145, 157, 161, 166, 167, 178, 179, 180, 183, 186, 187, 188, 212, 258, 265, 480], "contrast": [3, 296, 318, 379, 482], "notabl": 3, "braxenv": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 246, 456, 469], "jumanjienv": [3, 456], "straightforward": [3, 19, 464, 465, 469, 470, 471, 472, 482], "merg": [3, 62, 69, 78, 79, 480], "correctli": [3, 7, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "silent": [3, 35, 42, 47, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360], "_step": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399], "temporari": [3, 464], "hold": [3, 264, 395, 396, 399, 480, 482], "arm": 3, "unbatch": [3, 296, 300], "captur": [3, 277, 295, 319, 468], "base_env": [3, 127, 129, 130, 133, 137, 138, 144, 145, 156, 157, 158, 161, 166, 167, 168, 170, 178, 179, 180, 183, 186, 187, 188, 208, 209, 212, 218, 220, 221, 223, 225, 226, 235, 241, 245, 247, 253, 256, 258, 259, 263, 265, 275, 422, 430, 458, 464, 465, 466, 468, 478, 481, 484, 485], "break_when_all_don": [3, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "conditionalskip": 3, "programmat": 3, "pretti": [3, 464, 469, 473, 482], "likewis": 3, "break_when_any_don": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 211, 263, 275, 281, 349, 479], "te": 3, "paragraph": 3, "deep": [3, 9, 215, 236, 285, 286, 287, 288, 291, 319, 364, 367, 379, 387, 388, 464, 478], "dive": 3, "gym3": 3, "envpool": [3, 152, 153], "simultan": [3, 25, 144, 152, 153, 157, 166, 480], "advantag": [3, 8, 186, 192, 294, 364, 366, 381, 384, 386, 397, 399, 402, 403, 404, 405, 406, 407, 409, 411, 413, 415, 416, 418, 460, 461, 464, 465, 466, 467, 479, 480, 485], "scale": [3, 4, 32, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 215, 235, 239, 250, 257, 261, 272, 273, 278, 293, 299, 322, 323, 327, 328, 342, 343, 344, 350, 354, 356, 364, 365, 367, 380, 384, 385, 386, 387, 438, 444, 454, 459, 464, 465, 466, 467, 470, 479, 484], "varieti": [3, 11], "inherit": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 304, 308, 309, 382, 461, 466, 478, 479], "from_pixel": [3, 11, 128, 129, 131, 132, 136, 138, 139, 143, 144, 163, 215, 247, 420, 422, 464, 465, 467, 469, 473, 474, 481, 482, 484, 485], "81": [3, 115], "d": [3, 42, 62, 65, 69, 77, 78, 79, 94, 107, 108, 278, 296, 300, 331, 333, 337, 350, 354, 397, 484], "privat": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 271, 480, 485], "absenc": 3, "total": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 110, 116, 121, 180, 184, 220, 335, 366, 381, 384, 397, 398, 431, 433, 435, 440, 443, 444, 463, 464, 465, 466, 467, 471, 478, 479, 481, 482, 483, 484], "accord": [3, 15, 16, 18, 21, 22, 23, 25, 27, 50, 61, 63, 70, 71, 84, 95, 96, 97, 110, 113, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 183, 184, 186, 187, 188, 239, 250, 299, 311, 322, 327, 328, 398, 400, 459, 460, 470, 471, 478, 480, 482], "inner": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 225, 265, 461, 465, 466, 479, 485], "kept": [3, 24, 26, 31, 114, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 206, 225, 252, 299, 327, 328, 471, 478], "wherev": 3, "lost": [3, 8, 271], "intern": [3, 50, 81, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 273, 462], "face": [3, 5, 8, 9, 333, 337, 469, 485], "NOT": [3, 98, 99, 106, 116, 244], "right": [3, 6, 7, 31, 71, 108, 115, 188, 220, 465, 466, 468, 479, 480, 485], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 42, 65, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 331, 333, 337, 397, 471], "annihil": 3, "supersed": [3, 31], "pettingzoowrapp": [3, 456], "group": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 183, 186, 187, 188, 192, 236, 255, 335, 336, 394, 459, 465, 470, 472, 479, 482], "__not__": [3, 350, 365, 367, 380, 385, 387, 389, 390], "constrain": [3, 193, 235, 298, 302, 384, 485], "li": 3, "fact": [3, 7, 8, 464, 466, 469, 478, 479, 480, 481, 482, 485], "meaning": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "perfectli": [3, 461, 464, 468, 480], "meaningless": 3, "val": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 179, 273, 430, 471, 484], "agent0": [3, 468], "agent1": 3, "overrid": [3, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 275, 290, 331, 333, 337, 397, 399, 422, 454, 459, 476], "bool": [3, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 114, 115, 116, 117, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 206, 207, 208, 209, 211, 212, 215, 216, 220, 221, 223, 225, 226, 227, 228, 230, 233, 235, 237, 238, 239, 241, 243, 245, 246, 248, 250, 251, 252, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 326, 327, 328, 331, 333, 334, 337, 340, 341, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 400, 402, 403, 404, 405, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 429, 430, 433, 434, 435, 437, 438, 440, 454, 465, 466, 468, 476, 480, 484, 485], "500": [3, 464, 465], "note": [3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 207, 223, 226, 263, 272, 273, 275, 280, 296, 298, 300, 302, 319, 331, 333, 337, 350, 354, 374, 397, 399, 456, 460, 465, 468, 470, 476, 477, 478, 479, 485], "launch": [3, 15, 16, 21, 22, 23, 25, 28, 157, 166, 334], "bottleneck": [3, 8, 108, 115, 116], "great": [3, 7, 8, 468, 478, 484], "speedup": [3, 8, 478, 485], "precis": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 206, 223, 226, 297, 301, 464, 466], "misspecifi": 3, "caus": [3, 7, 8, 15, 16, 18, 101, 103, 123, 127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 244, 485], "breakag": 3, "rais": [3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 229, 238, 248, 257, 258, 259, 263, 265, 272, 275, 277, 295, 319, 331, 333, 337, 367, 382, 387, 397, 398, 399, 430, 464, 466, 478, 479, 482], "mismatch": [3, 65, 465], "subprocess": [3, 15, 16, 21, 134, 157, 166], "multithreadedenv": [3, 456], "underneath": 3, "higher": [3, 4, 108, 218, 357, 464, 465, 466, 478, 482, 485], "cover": [3, 136, 138, 457, 466, 469, 472, 473, 480, 484], "type": [3, 12, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 110, 127, 130, 133, 137, 145, 148, 151, 154, 157, 158, 159, 160, 161, 166, 167, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 206, 212, 215, 219, 223, 224, 227, 228, 233, 235, 237, 243, 245, 246, 252, 256, 258, 262, 263, 264, 265, 266, 268, 270, 272, 273, 275, 277, 282, 283, 303, 308, 309, 312, 320, 329, 331, 333, 335, 337, 338, 346, 350, 353, 354, 361, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 392, 394, 397, 398, 399, 400, 408, 420, 452, 456, 459, 464, 465, 466, 468, 472, 476, 478, 479, 480, 482, 485], "atari": [3, 4, 215, 283, 422, 468, 473, 485], "classic": [3, 142, 151, 160, 465], "benchmark_batched_env": 3, "significantli": [3, 13, 22, 23, 25, 115, 116, 215, 460, 464, 465, 471, 479], "asyncenvpool": [3, 29, 161, 167], "pool": [3, 127, 161, 167, 259], "concurr": [3, 127, 478, 479], "contrari": [3, 460], "permit": [3, 218, 230, 255, 267, 364, 366, 381, 384, 386], "job": [3, 7, 22, 23, 25, 28, 69, 78, 79, 110, 482, 484], "famili": 3, "interest": [3, 350, 354, 459, 465, 466, 469, 479, 480, 485], "prefer": [3, 15, 16, 21, 25, 31, 32, 62, 69, 78, 79, 115, 116, 127, 161, 167, 189, 244, 252, 384, 389, 437, 459, 466, 478, 479, 482, 484], "pleas": [3, 35, 42, 47, 55, 65, 66, 72, 77, 81, 127, 130, 133, 136, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 215, 233, 259, 263, 265, 275, 308, 309, 310, 331, 333, 337, 367, 387, 397, 399, 457], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 157, 161], "threadingasyncenvpool": 3, "executor": [3, 22, 23, 25, 167], "functool": [3, 15, 16, 18, 21, 29, 127], "s0": [3, 127], "clamp": [3, 127, 354, 357, 376, 440, 460, 478, 480], "env_index": [3, 127], "async_step_send": [3, 127, 161, 167], "s0_result": [3, 127], "async_step_recv": [3, 127, 161, 167], "close": [3, 13, 15, 16, 18, 21, 22, 23, 25, 29, 127, 137, 152, 181, 182, 185, 188, 191, 192, 193, 194, 195, 196, 197, 219, 235, 264, 273, 275, 364, 366, 381, 384, 397, 399, 420, 464, 465, 469, 476, 477, 478, 480, 484], "seamlessli": [3, 480], "paradigm": [3, 21, 479], "decpodp": 3, "game": [3, 4, 5, 130, 149, 150, 155, 156, 220, 283, 422, 468, 473], "thank": [3, 464, 468, 469, 484], "carrier": [3, 466, 467, 469, 482], "particular": [3, 35, 42, 47, 55, 65, 66, 72, 77, 83, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 265, 275, 331, 333, 337, 397, 399, 460, 461, 465, 467, 469, 477, 479, 482], "thu": [3, 381, 479], "vma": [3, 171, 172, 420, 478, 479], "robot": [3, 5, 7, 243, 268, 270, 468, 479], "vmasenv": [3, 420, 456, 478, 479], "balanc": [3, 131, 132, 464, 465], "num_env": [3, 15, 16, 21, 27, 127, 136, 140, 153, 171, 172, 179, 180, 183, 189, 420, 478, 479], "n_agent": [3, 171, 172, 308, 309, 310, 320, 329, 400, 420, 460, 478, 479], "ground_rew": 3, "pos_rew": 3, "style": [3, 62, 69, 78, 79, 194], "vari": [3, 136, 138, 139, 159, 160, 163, 171, 244, 460, 468, 479], "creation": [3, 157, 166, 485], "info_spec": [3, 157], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 33, 34, 36, 37, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 207, 208, 209, 227, 245, 292, 315, 318, 321, 346, 347, 350, 351, 352, 369, 372, 373, 400, 456, 467], "simpl": [3, 9, 19, 20, 35, 42, 47, 55, 59, 65, 66, 72, 77, 82, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 285, 331, 333, 337, 349, 354, 369, 371, 382, 386, 397, 399, 402, 460, 464, 465, 466, 469, 470, 471, 478, 479, 482, 485], "prefix": [3, 31, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 260, 263, 265, 275, 331, 333, 337, 350, 367, 382, 387, 397, 398, 399, 421, 467, 471, 476, 485], "exactli": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 296, 300, 315, 331, 333, 337, 367, 387, 397, 399, 464, 467, 472, 478, 479], "action_kei": [3, 15, 16, 18, 21, 22, 23, 25, 27, 50, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 206, 208, 209, 225, 235, 237, 277, 279, 295, 304, 305, 319, 349, 460, 478, 479], "reward_kei": [3, 42, 44, 46, 50, 56, 75, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 275, 279, 305, 434, 438, 478, 479], "set_kei": [3, 227, 364, 366, 367, 369, 372, 373, 374, 380, 381, 382, 384, 385, 386, 387, 397, 400, 406, 464, 478, 479], "awai": [3, 466, 469, 478, 479, 484], "leaf": [3, 15, 16, 18, 20, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 74, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 234, 256, 258, 264, 354], "full": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 280, 298, 302, 333, 347, 354, 431, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "autoresettransform": 3, "invalid": [3, 35, 42, 47, 55, 65, 66, 72, 77, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 306, 307, 331, 333, 337, 397, 399], "nan": [3, 211, 271], "auto_reset": [3, 50, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 211, 275, 480], "auto_reset_replac": [3, 211], "placehold": [3, 138, 139, 183, 227, 265, 271], "set_gym_backend": [3, 15, 16, 18, 21, 29, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 183, 186, 187, 188, 211, 456, 469, 484], "autoresettinggymenv": [3, 211], "self": [3, 15, 16, 18, 21, 22, 23, 25, 27, 32, 35, 39, 40, 42, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 234, 235, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 275, 276, 277, 279, 292, 295, 298, 302, 305, 308, 309, 320, 329, 331, 333, 337, 350, 353, 358, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 461, 464, 476, 480, 484], "super": [3, 151, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 279, 292, 305, 358, 365, 367, 368, 373, 380, 385, 387, 389, 390, 399, 464, 480, 484], "td_reset": [3, 178, 211], "exclud": [3, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 211, 215, 228, 320, 366, 381, 384, 478, 479, 482], "r": [3, 4, 50, 55, 130, 180, 183, 194, 195, 208, 209, 211, 218, 220, 221, 239, 253, 260, 263, 272, 273, 278, 281, 297, 354, 363, 401, 420, 465, 480, 485], "3633e": [3, 211], "02": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 273, 465, 474], "4877e": [3, 211], "01": [3, 211, 239, 273, 278, 319, 360, 364, 366, 381, 384, 397], "2849e": [3, 211], "7584e": [3, 211], "6609e": [3, 211], "6166e": [3, 211], "8366e": [3, 211], "2761e": [3, 211], "5685e": [3, 211], "4102e": [3, 211], "8111e": [3, 211], "9959e": [3, 211], "0865e": [3, 211], "5644e": [3, 211], "2119e": [3, 211], "2542e": [3, 211], "03": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 211, 239, 260], "9952e": [3, 211], "4059e": [3, 211], "2094e": [3, 211], "9009e": [3, 211], "5140e": [3, 211], "3554e": [3, 211], "2920e": [3, 211], "7893e": [3, 211], "6429e": [3, 211], "3057e": [3, 211], "2867e": [3, 211], "6963e": [3, 211], "3818e": [3, 211], "2576e": [3, 211], "2679e": [3, 211], "1640e": [3, 211], "00": [3, 128, 129, 211, 463, 483], "6972e": [3, 211], "0212e": [3, 211], "5959e": [3, 211], "4637e": [3, 211], "3121e": [3, 211], "2168e": [3, 211], "5232e": [3, 211], "7704e": [3, 211], "7457e": [3, 211], "4127e": [3, 211], "1064e": [3, 211], "0854e": [3, 211], "5712e": [3, 211], "2189e": [3, 211], "5235e": [3, 211], "8289e": [3, 211], "0009e": [3, 211], "0257e": [3, 211], "8893e": [3, 211], "5872e": [3, 211], "9405e": [3, 211], "7766e": [3, 211], "0403e": [3, 211], "0626e": [3, 211], "2959e": [3, 211], "7263e": [3, 211], "2775e": [3, 211], "9564e": [3, 211], "0411e": [3, 211], "6769e": [3, 211], "6354e": [3, 211], "8698e": [3, 211], "1765e": [3, 211], "6292e": [3, 211], "5375e": [3, 211], "1820e": [3, 211], "7023e": [3, 211], "5836e": [3, 211], "9016e": [3, 211], "4826e": [3, 211], "6191e": [3, 211], "6387e": [3, 211], "8667e": [3, 211], "2056e": [3, 211], "1147e": [3, 211], "5991e": [3, 211], "0278e": [3, 211], "5219e": [3, 211], "3067e": [3, 211], "6617e": [3, 211], "3322e": [3, 211], "2629e": [3, 211], "4599e": [3, 211], "7298e": [3, 211], "5848e": [3, 211], "0148e": [3, 211], "5745e": [3, 211], "6982e": [3, 211], "7877e": [3, 211], "3527e": [3, 211], "7285e": [3, 211], "6668e": [3, 211], "0583e": [3, 211], "6956e": [3, 211], "3962e": [3, 211], "9845e": [3, 211], "5015e": [3, 211], "5903e": [3, 211], "9993e": [3, 211], "9418e": [3, 211], "0196e": [3, 211], "6557e": [3, 211], "2109e": [3, 211], "8997e": [3, 211], "1507e": [3, 211], "7363e": [3, 211], "0310e": [3, 211], "9574e": [3, 211], "8980e": [3, 211], "0090e": [3, 211], "forecast": 3, "awar": [3, 7, 101, 102, 103, 104, 117, 119, 123, 298, 302, 465, 467], "detect": [3, 186, 382, 397, 460], "return_contigu": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 477], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 68, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 121, 127, 130, 133, 135, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 275, 277, 279, 295, 298, 302, 304, 305, 319, 331, 333, 337, 345, 347, 349, 352, 353, 354, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 440, 464, 478, 480], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 36, 39, 41, 42, 47, 55, 59, 62, 65, 66, 71, 72, 77, 78, 85, 107, 108, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 208, 211, 215, 219, 223, 226, 235, 236, 239, 243, 248, 249, 250, 257, 258, 261, 264, 265, 268, 270, 273, 275, 277, 278, 280, 281, 290, 293, 296, 299, 300, 303, 306, 307, 311, 312, 318, 322, 323, 326, 328, 331, 333, 337, 353, 357, 360, 362, 363, 364, 365, 366, 367, 371, 372, 373, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 397, 399, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 438, 464, 465, 482, 485], "_set_se": [3, 209, 212, 223, 226, 245, 480], "lazystackedtensordict": [3, 29, 50, 74, 102, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 477], "float32": [3, 15, 16, 18, 36, 39, 42, 44, 50, 61, 62, 63, 65, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 95, 96, 97, 101, 102, 103, 107, 108, 115, 123, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 151, 154, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 200, 206, 208, 212, 223, 226, 227, 228, 233, 236, 239, 241, 245, 246, 248, 252, 255, 256, 258, 261, 266, 279, 281, 291, 292, 298, 302, 305, 319, 320, 321, 329, 331, 333, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 356, 358, 361, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 398, 400, 459, 476, 480], "exclusive_field": [3, 29, 50, 102, 127, 180, 183, 192], "stack_dim": [3, 29, 50, 102, 127, 180, 183, 192, 199], "dramat": 3, "carefulli": [3, 478, 479, 485], "against": [3, 5, 7, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 341, 346, 347, 350, 351, 352, 353, 354, 365, 367, 380, 385, 387, 389, 390, 397, 399, 466, 478, 479], "plain": [3, 8, 334, 365, 367, 373, 380, 385, 387, 389, 390, 403, 404, 405, 469], "expens": [3, 108, 115, 116, 420, 482], "absent": [3, 39, 40, 48, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 252, 265], "torchvis": [3, 11, 243, 270, 424, 478, 484, 485], "callabl": [3, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 110, 127, 130, 133, 134, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 205, 210, 212, 219, 220, 221, 227, 233, 258, 265, 266, 275, 276, 282, 283, 303, 310, 331, 333, 337, 354, 363, 382, 397, 399, 420, 445, 446, 452, 453, 454, 465, 482], "bring": [3, 466, 469, 485], "kind": [3, 69, 82, 471, 478, 482], "consult": 3, "resize_par": 3, "revers": [3, 300], "order": [3, 11, 18, 29, 35, 42, 47, 55, 59, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 114, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 216, 223, 226, 233, 241, 255, 263, 265, 275, 318, 331, 333, 337, 341, 346, 353, 355, 356, 358, 364, 365, 367, 368, 372, 373, 380, 384, 385, 386, 387, 389, 390, 397, 399, 465, 478, 479], "chain": [3, 61, 62, 63, 69, 70, 78, 79, 84, 95, 96, 97, 145, 184, 186, 187, 219, 225, 282, 283, 356, 398, 485], "in_keys_inv": [3, 197, 201, 218, 223, 224, 226, 233, 239, 240, 241, 245, 246, 248, 253, 262, 264, 266, 267, 464, 477, 480, 485], "append_transform": [3, 50, 62, 67, 68, 69, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 275, 281, 298, 302, 399, 420, 458, 464, 467, 476, 478, 480, 482, 484, 485], "doubletofloat": [3, 464, 466, 477], "float64": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 131, 132, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 219, 223, 226, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "think": [3, 180, 182, 183, 457, 466, 478, 479, 485], "in_": 3, "out_": 3, "perspect": [3, 292, 347, 374, 466, 468], "outer": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265, 461, 464, 465, 485], "ob": [3, 4, 8, 31, 39, 40, 48, 50, 62, 67, 68, 69, 74, 77, 78, 79, 84, 107, 110, 115, 116, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 206, 209, 211, 220, 223, 224, 226, 239, 253, 255, 261, 285, 286, 287, 288, 308, 309, 310, 351, 358, 365, 367, 368, 373, 380, 385, 387, 389, 390, 402, 403, 404, 405, 465, 468, 477, 478, 480, 482, 484, 485], "obs_standard": 3, "out_keys_inv": [3, 197, 201, 218, 223, 224, 226, 233, 239, 240, 241, 245, 246, 253, 255, 262, 264, 266, 267, 480], "illustr": [3, 464, 465, 470, 482], "chang": [3, 5, 7, 11, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 101, 102, 103, 104, 108, 114, 115, 117, 119, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 226, 228, 235, 237, 245, 246, 252, 256, 262, 264, 265, 266, 272, 273, 275, 300, 331, 333, 337, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 460, 464, 467, 478, 479, 480, 481, 482, 485], "schemat": [3, 460], "outermost": 3, "innermost": 3, "similar": [3, 35, 42, 47, 55, 57, 61, 63, 65, 66, 69, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 269, 270, 272, 273, 275, 331, 333, 337, 342, 344, 350, 353, 354, 397, 398, 399, 460, 464, 465, 466, 467, 468, 470, 471, 472, 473, 480, 482, 484, 485], "transform_action_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 219, 224, 239, 264, 266, 267, 275, 399], "spec_from_random_valu": 3, "_apply_transform": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399, 480, 485], "rand": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 102, 110, 128, 129, 143, 144, 151, 155, 156, 162, 169, 170, 209, 212, 223, 226, 245, 255, 279, 305, 350, 364, 365, 367, 368, 369, 371, 372, 373, 380, 382, 384, 385, 387, 389, 390, 397, 480, 484, 485], "approach": [3, 62, 69, 78, 79, 215, 239, 278, 308, 309, 335, 389, 458, 464, 466, 471, 472, 478, 485], "insid": [3, 61, 63, 70, 84, 95, 96, 97, 157, 184, 398, 485], "did": [3, 69, 271, 408, 465, 466, 472, 482, 485], "_inv_apply_transform": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 264, 275, 399, 480, 485], "actiondiscret": 3, "rand_act": [3, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 212, 265, 469], "action_discret": 3, "addonetoob": 3, "Is": [3, 264], "rewrit": [3, 264], "_call": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399, 476, 480], "_inv_cal": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 264, 275, 399], "overwrit": [3, 264], "till": [3, 264, 271], "encapsul": [3, 264, 469, 470, 471], "forget": [3, 264, 300], "edit": [3, 264, 275, 472], "top": [3, 4, 121, 128, 129, 143, 144, 222, 264, 279, 305, 333, 337, 470], "transform_output_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 228, 235, 237, 245, 246, 252, 256, 262, 264, 266, 273, 275, 399], "transform_input_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 212, 219, 223, 224, 225, 237, 241, 245, 246, 251, 255, 256, 257, 258, 262, 264, 266, 269, 275, 399], "transform_observation_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 212, 215, 216, 217, 218, 219, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 239, 241, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 275, 399, 480], "transform_state_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 219, 224, 239, 264, 266, 267, 275, 399], "transform_reward_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 212, 213, 218, 219, 223, 224, 228, 235, 236, 237, 245, 246, 249, 250, 251, 252, 253, 255, 256, 262, 264, 266, 267, 273, 275, 399, 476], "rewardsum": [3, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 206, 264, 275, 399, 478, 479], "undo": 3, "addonetoact": 3, "subtract": [3, 257], "regist": [3, 14, 17, 19, 20, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 206, 223, 226, 227, 251, 263, 265, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 420, 422, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 461, 464, 466, 469, 482], "manipul": [3, 4, 8, 131, 132, 243, 264, 268], "third_transform": 3, "unexpect": [3, 15, 16, 18, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 485], "behviour": 3, "fortun": [3, 467, 468, 469, 470, 473], "alreadi": [3, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 258, 275, 276, 331, 333, 337, 354, 397, 398, 399, 402, 403, 404, 405, 464, 466, 473, 478, 479], "catfram": [3, 349, 465], "notic": [3, 121, 215, 460, 466, 474, 480], "parenthood": 3, "henc": [3, 62, 207, 244, 308, 464, 466, 478, 479, 480], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 157, 166, 265, 420, 430, 480], "discret": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 136, 137, 138, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 208, 225, 233, 315, 318, 321, 371, 372, 373, 374, 459, 465, 470, 479], "might": [3, 61, 63, 64, 70, 84, 95, 96, 97, 184, 398, 426, 457, 464, 469, 485], "action_mask": [3, 130, 143, 144, 159, 160, 164, 165, 209], "unavail": [3, 159, 160], "probabl": [3, 4, 8, 71, 110, 113, 280, 281, 290, 292, 295, 296, 298, 300, 302, 303, 306, 307, 315, 327, 328, 333, 337, 350, 354, 367, 384, 459, 460, 465, 468, 470, 484], "probabilistictensordictmodul": [3, 193, 235, 354, 355, 460, 484], "tensordictsequenti": [3, 42, 65, 77, 281, 295, 298, 302, 319, 331, 333, 337, 346, 349, 355, 356, 361, 397, 459, 464, 465, 467, 468, 470, 474, 477, 478, 481, 484], "maskedcategor": [3, 307, 456], "linear": [3, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 65, 66, 67, 72, 77, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 235, 243, 258, 264, 265, 268, 270, 275, 279, 281, 282, 283, 285, 286, 287, 288, 292, 294, 295, 303, 305, 308, 309, 311, 312, 319, 321, 322, 323, 331, 333, 337, 341, 342, 343, 344, 348, 349, 350, 351, 353, 356, 358, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 450, 459, 465, 477, 481, 484], "in_feat": 3, "out_feat": 3, "logit": [3, 63, 71, 97, 291, 306, 307, 315, 318, 347, 350, 372, 373, 459], "dist": [3, 10, 306, 307, 315, 354, 460, 470], "distribution_class": [3, 235, 342, 343, 344, 345, 350, 354, 356, 364, 365, 367, 372, 373, 380, 384, 385, 386, 387, 459, 464, 466, 470, 478, 479, 484], "wrap": [3, 5, 15, 16, 18, 21, 22, 23, 25, 27, 32, 35, 41, 42, 47, 55, 65, 66, 71, 72, 77, 127, 128, 129, 130, 133, 137, 138, 142, 143, 144, 145, 150, 153, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 170, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 203, 221, 263, 265, 275, 276, 298, 302, 330, 331, 333, 337, 342, 343, 344, 349, 351, 354, 359, 382, 397, 399, 400, 458, 459, 464, 465, 466, 467, 471, 474, 476, 478, 479, 485], "actionmask": [3, 130], "your_base_env": 3, "mask_kei": [3, 31, 209, 244, 275], "itself": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 211, 275, 331, 333, 337, 382, 389, 397, 399, 458, 466, 469], "ey": 3, "report": [3, 128, 129, 143, 144, 473], "foremost": 3, "callback": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 479], "ad": [3, 4, 18, 31, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 91, 107, 108, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 215, 233, 251, 263, 265, 275, 278, 311, 312, 319, 331, 333, 337, 363, 364, 366, 367, 369, 374, 381, 384, 387, 397, 399, 400, 465, 467, 468, 470, 476, 478, 482, 484, 485], "tensordictrecord": [3, 456], "videorecord": [3, 11, 420, 456, 466, 473, 474, 478], "csvlogger": [3, 11, 420, 422, 456, 465, 473, 474, 478], "wandblogg": [3, 456, 473], "tensorboardlogg": [3, 450, 456, 473], "tag": [3, 7, 11, 182, 183, 420, 422, 424, 427, 454, 458, 473, 474, 476, 478], "mp4": [3, 420, 422, 424, 474, 478], "video_format": [3, 420, 422, 424, 474, 478], "whc": 3, "cwh": 3, "exp": [3, 363, 460], "al": [3, 15, 16, 18, 21, 29, 32, 136, 138, 227, 241, 279, 468, 485], "pong": [3, 15, 16, 18, 21, 29, 153, 241, 468, 485], "v5": [3, 15, 16, 18, 21, 29, 136, 138, 153, 227, 241, 468, 485], "grow": [3, 102], "tediou": [3, 469], "workspac": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 233], "pixelrendertransform": [3, 456, 478], "stream": [3, 334], "alik": [3, 420], "envcreat": [3, 18, 28, 157, 166, 263, 273, 420, 450, 451, 454, 456, 464, 465, 484, 485], "render_mod": [3, 420, 480], "rgb_arrai": [3, 420, 478, 479, 480], "uncom": [3, 473], "line": [3, 7, 35, 42, 47, 50, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 465, 473, 478, 479], "comment": [3, 461, 465, 484], "pixels_record": [3, 420], "mission": [3, 194], "irrespect": [3, 353, 354], "dmcontrol": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "jumanji": [3, 127, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "framework": [3, 4, 9, 28, 127, 128, 129, 130, 133, 137, 143, 144, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 296, 476, 484, 485], "Its": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 272, 275, 331, 333, 337, 353, 397, 399, 406], "success": [3, 180, 182, 186, 192, 215, 260, 295, 367, 389, 465, 472, 474, 480, 482, 484], "foundat": [3, 5, 159, 160, 466, 479], "inspir": [3, 468, 480], "gone": [3, 4, 5, 349], "maintain": [3, 5, 9, 41, 57, 215, 273, 480], "concomittantli": 3, "problem": [3, 7, 8, 9, 18, 183, 465, 466, 467, 472, 478, 479, 480, 482, 485], "decor": [3, 8, 203, 205, 276, 298, 302, 340, 382, 402, 403, 404, 405, 430, 458, 467, 484], "relev": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 71, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 402, 403, 404, 405, 406, 429, 468, 480], "gym_backend": [3, 205, 456], "env1": [3, 281, 477], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 130, 205], "env2": [3, 477], "_env": [3, 6, 136, 485], "classic_control": 3, "pendulumenv": [3, 50, 456, 480], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 147, 177, 236], "side": [3, 4, 485], "v0": [3, 15, 16, 39, 40, 48, 74, 127, 130, 133, 137, 139, 142, 143, 144, 145, 146, 147, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 219, 236, 265, 272, 273, 430, 450], "26": [3, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 220], "fun": [3, 205, 276, 466, 478, 479], "reveal": 4, "curv": 4, "exploit": [4, 470], "cv": 4, "flip": [4, 144], "correspondingli": 4, "invers": [4, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 110, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 215, 223, 226, 228, 233, 239, 246, 248, 260, 262, 264, 266, 275, 362, 372, 380, 399, 456, 480], "prescript": 4, "tune": [4, 32, 193, 235, 458, 478, 479, 481], "coeffici": [4, 32, 41, 71, 193, 235, 366, 381, 384, 479], "bonu": [4, 364, 366, 381, 384, 397], "beta": [4, 62, 78, 107, 108, 372, 380, 381, 464, 465, 482, 484], "reduc": [4, 6, 38, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 215, 221, 257, 273, 278, 280, 327, 456, 465, 478], "downstream": [4, 460, 464], "formul": [4, 478, 479], "rate": [4, 11, 272, 273, 401, 465, 466, 478, 479], "gradient": [4, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 280, 299, 307, 312, 315, 327, 328, 331, 333, 337, 354, 364, 366, 367, 368, 372, 373, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 397, 399, 401, 402, 403, 404, 405, 440, 464, 466, 478, 479, 480], "easier": [4, 66, 459, 464, 484], "local": [4, 7, 10, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 68, 72, 77, 95, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 273, 275, 308, 309, 320, 329, 331, 333, 337, 397, 399, 400, 427, 429, 468, 473, 474, 478, 479], "optima": 4, "product": [4, 9, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 296, 297, 300, 301, 452, 453], "sum": [4, 27, 35, 42, 53, 59, 77, 121, 128, 129, 131, 132, 136, 138, 139, 143, 144, 152, 153, 163, 185, 214, 236, 251, 306, 307, 327, 329, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 397, 401, 408, 460, 464, 465, 466, 467, 468, 471, 474, 478, 479, 480, 485], "stat": [4, 239, 272, 273, 444, 454, 465, 466], "w": [4, 110, 130, 155, 156, 215, 217, 222, 247, 261, 296, 319, 422, 465, 482], "yield": [4, 15, 16, 18, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399, 458, 464, 471], "insight": [4, 179, 468], "auxiliari": [4, 471], "credit": 4, "futur": [4, 31, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 243, 263, 265, 270, 275, 303, 331, 333, 337, 364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 398, 399, 400, 457], "spars": [4, 42, 467], "intermedi": [4, 15, 16, 42, 50, 65, 77, 214, 281, 298, 302, 331, 333, 337, 347, 397, 464, 468, 481], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": [4, 180], "likelihood": [4, 464], "discov": 4, "score": [4, 71, 185, 316, 318], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 42, 62, 65, 67, 68, 69, 77, 78, 79, 84, 110, 130, 149, 150, 159, 160, 162, 171, 172, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 237, 238, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 279, 331, 333, 337, 346, 351, 397, 399, 439, 459, 460, 464, 468, 469, 478, 482], "explicit": [4, 15, 16, 18, 276, 482], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 32, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 300, 372, 380, 466, 479], "addition": [4, 290], "timestep": [4, 71, 248, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 478, 479], "realli": 4, "huge": [4, 309, 467], "std": [4, 239, 272, 277, 317, 464, 485], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 463, 467, 469, 471, 472, 473, 474, 475, 477, 481, 482, 483], "unseen": 4, "extrins": 4, "wrong": [4, 108, 115], "bonus": 4, "denser": 4, "prior": [4, 72, 323, 376, 479], "freshli": 4, "drop": [4, 114, 116, 206, 273], "meant": [4, 55, 151, 186, 331], "encourag": [4, 157, 318, 464, 465, 482], "measur": [4, 101, 103, 123, 128, 129, 143, 144, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399, 466, 472], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 32, 470], "ideal": [4, 220, 239, 480], "distil": 4, "nois": [4, 274, 312, 319, 339, 385, 389, 390, 435, 454, 464, 478], "exploratori": [4, 364, 366, 381, 384, 397], "misalign": 4, "trade": [4, 470], "unavoid": 4, "bootstrap": [4, 374, 402, 403, 409, 410, 464, 467], "noisi": [4, 311, 312, 339, 459], "unstabl": [4, 299, 327, 328], "inher": [4, 364, 384], "stochast": [4, 193, 235, 293, 312, 313, 323, 365, 367, 370, 372, 373, 378, 380, 383, 385, 387, 459, 466, 470, 479], "enemi": 4, "pomdp": [4, 482], "loos": [4, 354, 459, 465, 466], "nonexist": 4, "sequenc": [4, 15, 16, 18, 21, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 100, 110, 111, 113, 119, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 197, 201, 213, 214, 215, 216, 217, 222, 223, 225, 226, 230, 232, 233, 236, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 259, 260, 261, 262, 264, 266, 272, 273, 282, 283, 290, 292, 296, 300, 303, 306, 307, 308, 309, 315, 321, 325, 331, 333, 337, 345, 355, 356, 370, 397, 421, 422, 435, 436, 437, 439, 440, 459, 464, 466, 467, 468, 477, 478, 479, 485], "lstm": [4, 258, 301, 302, 468], "rel": [4, 110, 258, 290, 326, 464, 465, 478, 479, 482], "tend": 4, "stabl": [4, 9, 10, 154], "compens": 4, "descent": [4, 312], "minimum": [4, 85, 127, 157, 166, 249, 293, 326, 327, 328, 357, 360, 363, 365, 367, 373, 382, 383, 387, 397, 431, 460, 464, 466, 474, 478, 479], "manual": [4, 11, 22, 25, 27, 50, 62, 67, 68, 69, 78, 79, 110, 137, 138, 188, 464, 467, 482], "deviat": [4, 239, 272, 273, 277, 279, 293, 305, 311, 312, 317, 318, 384, 389, 390, 464, 470, 479], "radic": 4, "begin": [4, 15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 211, 296, 297, 300, 301, 363, 430, 460, 468, 469, 470, 471, 472, 473, 474, 476], "stabil": [4, 231, 280, 364, 366, 381, 384, 386, 397], "stage": [4, 464, 480], "never": [4, 15, 16, 21, 29, 36, 85, 108, 260, 472, 484], "prevent": [4, 33, 34, 38, 39, 40, 43, 48, 51, 52, 53, 54, 59, 60, 67, 74, 99, 272, 273, 299, 327, 328, 364, 366, 381, 384, 386, 397, 438, 473, 482], "entir": [4, 15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 273, 308, 466, 469, 480, 482], "submit": [4, 136, 212, 457, 484], "system": [4, 5, 96, 99, 178, 180, 183, 194, 195, 458, 466, 478, 479, 480], "adequ": [4, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 466, 478, 479], "infeas": 4, "allevi": [4, 459], "prune": [4, 145, 187], "fire": [4, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "illeg": 4, "chess": [4, 130, 155, 156], "grasp": 4, "wherein": 4, "cumul": [4, 42, 251, 257, 279, 408, 466], "q": [4, 9, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 285, 286, 287, 288, 291, 292, 294, 320, 321, 329, 344, 347, 351, 352, 365, 367, 368, 369, 371, 372, 373, 374, 379, 380, 385, 387, 389, 390, 400, 456, 464, 471, 476], "flow": [4, 402, 464, 466, 478, 479, 480, 482], "reparameter": [4, 290, 307, 315], "soft": [4, 379, 387, 388, 478], "critic": [4, 8, 342, 348, 364, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 397, 464, 471], "clip": [4, 71, 218, 249, 364, 366, 381, 384, 386, 389, 390, 397, 440, 466, 479, 480], "oppos": [4, 83], "incorrect": [4, 115], "thought": [4, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "region": 4, "squash": [4, 467, 484], "tanh": [4, 282, 283, 296, 297, 299, 300, 301, 303, 309, 326, 327, 328, 357, 466, 470, 478, 479, 480, 481], "prob": [4, 306, 307, 315, 318, 466, 479], "rememb": [4, 478], "remap": 4, "origin": [4, 8, 42, 61, 63, 64, 65, 70, 71, 77, 80, 84, 95, 96, 97, 141, 184, 193, 224, 225, 235, 243, 265, 270, 275, 296, 331, 333, 337, 350, 353, 354, 365, 367, 379, 380, 382, 384, 385, 387, 389, 390, 397, 398, 464, 468, 476, 477, 480, 485], "world": [5, 151, 333, 337, 359, 376, 458, 468, 473, 478, 479, 480, 485], "histor": 5, "ceas": 5, "farama": [5, 146, 147, 159, 160, 466, 480], "gymwrapp": [5, 127, 130, 133, 137, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 228, 252, 256, 271, 456, 466, 484], "feel": [5, 457, 474, 484], "free": [5, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 206, 223, 226, 364, 376, 384, 461, 466, 474, 479, 484], "gladli": 5, "prepar": [6, 46, 181, 466], "conda": [6, 7, 457], "cmake": 6, "activ": [6, 7, 9, 50, 282, 283, 289, 293, 303, 308, 309, 366, 381, 384, 459, 480, 484], "sim": 6, "bullet": 6, "headless": [6, 7, 142, 191, 476], "cluster": [6, 7, 8, 22, 27, 457], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 139], "y": [6, 7, 42, 65, 69, 77, 154, 294, 308, 330, 331, 333, 337, 397, 464, 479, 482], "facebookresearch": [6, 139], "subdirectori": 6, "verbos": [6, 474, 476], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 245, 254, 275, 331, 333, 337, 382, 397, 398, 399, 478, 479, 484, 485], "command": [6, 7, 10, 161, 167, 168, 466, 476, 478, 479, 480, 485], "readm": [6, 7, 171, 484], "md": [6, 7], "habitatenv": [6, 456], "_has_habitat": 6, "available_env": [6, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 146, 149, 150, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 485], "startswith": [6, 281, 460, 464, 471], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 134, 382, 464], "env_nam": [6, 127, 128, 130, 131, 133, 134, 136, 137, 139, 143, 145, 146, 152, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 466, 485], "llvmlite": 6, "config": [6, 7, 243, 270, 284, 289, 317, 444, 445, 446, 448, 451], "var": [6, 7, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 273, 275, 331, 333, 337, 367, 382, 387, 397, 399], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 346, 365, 367, 373, 380, 382, 385, 387, 389, 390, 403, 404, 405], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 35, 38, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 367, 382, 387, 397, 399, 468, 482], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 468], "stand": [7, 45, 131, 132, 157, 166, 477, 480], "joint": [7, 465], "contact": [7, 64, 478], "engin": [7, 163, 334, 399, 458, 476, 480], "biomechan": 7, "graphic": 7, "anim": [7, 479], "area": 7, "demand": [7, 473, 485], "fast": [7, 9, 102, 128, 129, 206, 246, 385, 464, 465, 466, 484], "articul": 7, "acquir": [7, 466], "deepmind": [7, 8, 9, 127, 130, 131, 132, 133, 137, 145, 149, 150, 155, 156, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 227, 466, 469], "whomev": 7, "licenc": 7, "incorpor": [7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 295, 319, 389, 467, 470, 480], "relianc": 7, "obsolet": 7, "legaci": [7, 31], "pro": [7, 457], "tip": [7, 457], "glfw": [7, 464], "osmesa": 7, "egl": 7, "advic": [7, 485], "sudo": [7, 457], "apt": [7, 479], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 145, 187, 342, 343, 344], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 460, 464, 466, 467, 478, 479, 482], "roboti": 7, "html": [7, 15, 16, 152, 154, 155, 156, 476], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 15, 16, 21, 157, 166], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 61, 63, 83, 94], "bin": [7, 292, 318, 347, 459], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 288, 350, 354, 464, 466, 468, 482], "nvidia": [7, 141, 468], "older": [7, 276], "hack": [7, 464], "adatp": 7, "script": [7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 430, 450, 454, 458, 459, 460, 461, 464, 465, 468, 473, 478, 479, 480, 482], "unnot": [7, 244], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 99, 465, 482], "troubleshoot": 7, "gl": 7, "h": [7, 110, 215, 217, 222, 247, 261, 296, 297, 298, 300, 301, 302, 305, 422, 465, 482], "eglshim": 7, "fatal": 7, "No": [7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 38, 43, 53, 54, 59, 60], "directori": [7, 61, 63, 70, 83, 84, 95, 96, 97, 101, 184, 398, 427, 429, 458, 460, 461, 464, 470, 473, 478], "devel": 7, "ubuntu": [7, 141], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 465, 467, 477], "libstdc": 7, "glibcxx_3": 7, "29": [7, 115, 116], "compil": [7, 15, 16, 18, 31, 35, 42, 47, 55, 65, 66, 69, 72, 77, 78, 79, 100, 101, 102, 103, 104, 108, 111, 115, 116, 117, 122, 123, 125, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 276, 296, 297, 300, 301, 327, 331, 333, 337, 397, 399, 402], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 15, 16, 18, 21, 24, 29, 35, 38, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 238, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399, 460, 485], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 115, 128, 129], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 478, 479], "global": [7, 35, 42, 47, 55, 65, 66, 69, 72, 77, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 263, 275, 320, 329, 331, 333, 335, 337, 350, 354, 397, 399, 400, 461, 464, 478, 479], "cuda_visible_devic": 7, "id": [7, 20, 31, 71, 84, 108, 110, 115, 116, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 183, 185, 186, 187, 188, 319, 367, 385, 425, 429, 472, 482], "slurm_step_gpu": 7, "black": [7, 130, 478], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 479], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 461], "n_training_step": 8, "datapoint": [8, 83, 482], "n_data_per_train": 8, "no_grad": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 275, 280, 296, 297, 300, 301, 331, 333, 337, 397, 399, 402, 403, 404, 405, 466, 467, 468, 479], "loss_fn": [8, 467, 471, 472, 484], "zero_grad": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 318, 331, 333, 337, 397, 399, 461, 464, 466, 467, 468, 471, 474, 478, 479, 480], "backpropag": [8, 128, 129, 143, 144, 157, 364, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 400, 471, 479, 480], "differenti": [8, 83, 128, 129, 193, 235, 367, 389, 402, 403, 404, 405, 467, 470, 471, 478, 479, 480], "denomin": 8, "artifact": 8, "numer": [8, 69, 137, 188, 272, 299, 327, 328, 341, 346, 347, 350, 351, 352, 353, 354, 438, 466, 482, 485], "misconcept": 8, "freed": 8, "appear": [8, 11, 36, 59, 84, 85, 108, 115, 116, 133, 186, 192, 460, 480, 482], "compuat": 8, "fix": [8, 41, 157, 258, 365, 367, 383, 387, 465, 474, 480, 485], "retain_graph": [8, 128, 129], "discuss": [8, 9, 472, 478, 479], "inplac": [8, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 353, 397, 398, 399, 464], "forward": [8, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 239, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 308, 309, 310, 311, 313, 314, 317, 319, 320, 322, 323, 325, 329, 330, 331, 333, 337, 345, 347, 349, 350, 352, 353, 354, 357, 358, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 397, 399, 400, 402, 403, 404, 405, 406, 456, 460, 467, 480, 484], "submodul": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 258, 275, 298, 302, 331, 333, 337, 361, 382, 397, 399], "param": [8, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 228, 235, 237, 245, 246, 252, 256, 262, 264, 266, 273, 275, 290, 292, 308, 309, 310, 326, 331, 333, 337, 345, 350, 353, 356, 382, 392, 396, 397, 399, 402, 403, 404, 405, 406, 464, 468, 474, 478, 479, 480, 481, 484], "grad": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 354, 397, 399, 464, 466], "whose": [8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 320, 331, 333, 337, 353, 397, 399], "fit": [8, 66, 239, 258, 276, 460, 461, 464], "brax": [8, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 246, 469, 485], "jax": [8, 128, 129, 143, 144, 276], "improperli": 8, "underli": [8, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 382, 467, 469, 471, 473, 480], "tedeiou": 8, "priorit": [8, 62, 78, 107, 108, 367, 368, 369, 371, 372, 373, 380, 385, 387, 389, 390, 464, 465, 472, 484], "amount": [8, 157, 319, 402, 465, 482], "costli": [8, 480], "constitut": [8, 465, 479, 480], "profil": 8, "frequent": [8, 50, 482], "program": [8, 372, 380, 468, 485], "functorch": [8, 10], "incl": 8, "suit": [8, 132, 466, 469, 484, 485], "mujoco_instal": 8, "valueerror": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 114, 241, 261, 468, 484, 485], "idea": [9, 385, 461, 467, 470, 478, 479], "introductori": 9, "intro": [9, 466, 467], "dai": [9, 484], "2022": [9, 10, 280, 484], "spin": [9, 131, 132], "hug": [9, 333, 337], "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 470], "summari": [9, 239, 272, 273, 464, 465, 466, 467], "reddit": 9, "reagent": 9, "orient": [9, 485], "baselines3": 9, "tf": 9, "bandit": [9, 154], "tensorflow": [9, 306, 307], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 468, 474], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 484], "grade": 9, "factori": [9, 15, 16, 18, 21, 22, 23, 25, 27, 67, 69, 78, 79, 80, 82, 464], "cherri": 9, "jaxrl": 9, "mbrl": [9, 151, 459], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 466, 467, 478, 479], "notebook": [10, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "24": [10, 116, 136, 152, 153, 180, 318, 349, 422, 478], "pip3": [10, 464, 466, 467, 478, 479], "url": [10, 95, 139, 476], "org": [10, 15, 16, 32, 62, 107, 108, 128, 129, 131, 132, 139, 143, 144, 149, 150, 152, 153, 154, 163, 171, 172, 215, 243, 268, 278, 284, 285, 286, 287, 288, 289, 292, 293, 294, 300, 305, 306, 307, 312, 313, 314, 318, 319, 320, 322, 323, 329, 347, 364, 365, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 383, 384, 386, 387, 388, 389, 402, 407, 415, 455, 475, 481], "whl": 10, "u": [10, 296, 297, 300, 301, 480], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 215, 466, 478, 479, 480, 482], "power": [11, 465], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 252, 456], "ultim": [11, 299, 327, 328], "ffmpeg": 11, "whatev": [11, 460, 464], "fed": [11, 178, 479, 482], "feed": [11, 243, 270, 382, 397, 459, 464, 478, 479, 482], "suppos": [11, 157, 435, 461, 485], "snippet": [11, 243, 268, 464], "gave": 11, "extrem": [11, 157, 166, 364, 366, 381, 384, 386, 397], "blurri": [11, 468], "stitch": 11, "exp_nam": [11, 422, 423, 424, 427, 428, 429, 450, 465, 473, 474], "my_exp": [11, 473], "pixels_onli": [11, 131, 132, 136, 138, 139, 163, 464, 465, 473, 474, 484, 485], "my_video": [11, 473], "record_env": [11, 473, 474], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 344, 459], "allow_non": 12, "unwrap": [12, 227, 265, 430], "seealso": 12, "timeout": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 157, 191, 194, 195], "close_env": [13, 15, 16, 18, 21, 22, 23, 25, 29], "shutdown": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 161, 167, 212, 464, 465, 482, 484], "implic": [13, 22, 23, 25], "notimplementederror": [13, 22, 23, 25, 84, 464], "subclass": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 36, 39, 42, 47, 65, 66, 72, 77, 85, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 210, 211, 264, 271, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 353, 354, 355, 357, 360, 382, 384, 458, 465, 467, 472, 480, 482], "policy_weight": [13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "kwarg": [13, 15, 16, 18, 21, 22, 25, 26, 27, 29, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 49, 52, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 110, 115, 116, 117, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 202, 203, 209, 210, 212, 219, 243, 245, 254, 258, 263, 264, 265, 267, 269, 270, 272, 274, 275, 277, 279, 281, 282, 283, 285, 286, 287, 288, 291, 294, 295, 298, 299, 302, 303, 304, 305, 308, 309, 310, 315, 319, 328, 330, 331, 332, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 422, 426, 427, 429, 433, 440, 445, 446, 451, 452, 453, 460, 466, 468, 479], "upload": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "transfer": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 354], "fetch": [13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 61, 63, 70, 84, 95, 96, 97, 128, 129, 131, 132, 184, 193, 235, 398, 470, 481, 482], "typeerror": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "weight_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 465], "overwritten": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 230, 333, 337], "localweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "remoteweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "get_server_weight": 14, "design": [14, 24, 26, 35, 42, 47, 55, 57, 59, 65, 66, 72, 77, 113, 119, 126, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 215, 233, 244, 263, 265, 273, 275, 331, 333, 337, 345, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 397, 399, 400, 456, 458, 464, 465, 466, 467, 469, 470, 471, 476, 477, 478, 479, 480, 482, 484, 485], "date": [14, 17, 130, 214, 425], "datacollectorbas": [14, 15, 17, 19, 20, 23, 24, 26, 30, 350, 354, 442, 445, 446, 450, 456], "all_worker_id": [14, 17, 19, 20, 24, 26, 30], "scope": [14, 17, 19, 20, 24, 26, 30, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 468, 485], "push_weight": [14, 17, 19, 20, 24, 26, 30], "push": [14, 17, 19, 20, 24, 26, 30], "noth": [14, 17, 19, 20, 24, 26, 30, 50, 145, 187, 464, 466], "register_collector": [14, 17, 19, 20, 24, 26, 30], "create_env_fn": [15, 16, 18, 21, 22, 23, 25, 27, 134, 157, 166, 464, 484], "policy_factori": [15, 16, 18, 21, 22, 23, 25, 27, 29], "device_typ": [15, 18, 21, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 243, 268, 270, 282, 283, 284, 285, 286, 287, 288, 294, 303, 308, 309, 311, 312, 317, 320, 353, 437, 448], "env_devic": [15, 16, 18, 21, 22, 23, 25, 27, 465], "create_env_kwarg": [15, 16, 18, 21, 27, 134, 152, 157, 166, 263, 464, 485], "collector_class": [15, 16, 22, 23, 25, 26, 27], "postproc": [15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 248, 465, 482], "explorationtyp": [15, 16, 18, 21, 22, 23, 25, 27, 350, 382, 435, 459, 464, 465, 466, 467, 470, 478, 484], "interactiontyp": [15, 18, 21, 22, 23, 25, 27, 175, 204, 350, 354, 435], "preemptive_threshold": [15, 16, 21], "num_thread": [15, 16, 21, 61, 63, 70, 84, 95, 96, 97, 137, 157, 166, 184, 188, 398], "num_sub_thread": [15, 16, 21, 157, 166], "str": [15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 107, 108, 110, 121, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 143, 145, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 207, 211, 215, 227, 233, 234, 235, 243, 247, 256, 257, 260, 262, 263, 265, 266, 268, 270, 271, 272, 275, 276, 279, 291, 292, 298, 302, 304, 305, 308, 309, 310, 320, 321, 329, 331, 333, 334, 335, 337, 341, 346, 347, 350, 351, 352, 353, 354, 357, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 454, 465, 466, 468, 476], "set_trunc": [15, 16, 18, 21, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "use_buff": [15, 16, 18, 157, 166], "extend_buff": [15, 16, 18], "replay_buffer_chunk": 15, "trust_polici": [15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "compile_polici": [15, 16, 18], "cudagraph_polici": [15, 16, 18], "no_cuda_sync": [15, 16, 18], "datacollector": [15, 16, 18, 21, 27, 29, 55, 384, 466, 472, 482], "recept": 15, "safe": [15, 16, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 108, 115, 184, 277, 319, 326, 327, 341, 346, 347, 350, 351, 352, 353, 354, 356, 398, 459, 484], "sota": [15, 16, 151, 231, 386, 431, 445, 458, 464, 465, 484], "guard": [15, 16], "doc": [15, 16, 80, 139, 142, 143, 144, 154, 163, 429, 460, 465, 478, 479, 482], "env_mak": [15, 16, 18, 27, 67, 127, 450, 485], "2000": [15, 16, 18, 55, 83, 140, 318, 422, 482], "50": [15, 16, 18, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 71, 73, 74, 82, 85, 86, 87, 88, 89, 115, 116, 149, 150, 275, 467, 482], "del": [15, 16, 18, 29, 464, 465, 466, 477, 478, 482, 484, 485], "int64": [15, 16, 18, 29, 31, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 70, 71, 75, 78, 80, 83, 84, 94, 95, 96, 97, 107, 115, 127, 130, 133, 137, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 192, 208, 212, 220, 227, 241, 248, 256, 292, 319, 321, 346, 347, 350, 351, 352, 398, 459, 480], "tensordictmodulebas": [15, 16, 18, 21, 22, 23, 25, 27, 42, 65, 77, 214, 330, 331, 333, 337, 346, 349, 351, 397, 467], "undergon": [15, 16, 18, 21, 22, 23, 25, 27, 83], "env_obs_kei": [15, 16, 18, 21, 22, 23, 25, 27], "mustn": [15, 16, 18, 21, 22, 23, 25, 27], "pickl": [15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 331, 333, 337, 397, 399], "exclus": [15, 16, 18, 21, 22, 23, 25, 27, 29, 69, 78, 79, 90, 91, 108, 115, 116, 190, 212, 228, 230, 296, 298, 300, 302, 306, 307, 346, 347, 351, 352, 388, 389, 390, 402, 403, 404, 405, 406, 429, 454, 459], "lifespan": [15, 16, 18, 21, 22, 23, 25, 29, 465], "divis": [15, 16, 18, 21, 22, 23, 25, 35, 108, 115, 116, 273, 278, 479], "endless": [15, 16, 18, 21, 22, 23, 25, 192], "sit": [15, 16, 18, 21, 22, 23, 25, 27, 442, 465], "cast": [15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 234, 235, 242, 243, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 331, 333, 337, 353, 366, 381, 384, 397, 398, 399, 478, 485], "deriv": [15, 16, 22, 23, 25, 27, 81, 290, 440], "span": [15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 116], "n_step": [15, 16, 18, 21, 22, 23, 25, 27, 55, 275, 349, 465, 466, 478, 479], "mainli": [15, 16, 18, 21, 22, 23, 25, 27, 71, 179, 180, 183, 429, 459, 478, 479, 480], "round": [15, 16, 18, 21, 22, 23, 25, 27, 130, 178], "closest": [15, 16, 18, 21, 22, 23, 25, 27], "boolm": [15, 16, 21], "ratio": [15, 16, 21, 71, 464, 466], "finish": [15, 16, 18, 21, 27, 29, 137, 188, 248, 485], "earli": [15, 16, 21, 55, 137, 188, 256, 484], "safeti": [15, 16, 21, 151, 157, 166, 273, 476], "harm": [15, 16, 21, 157, 166], "add_truncated_kei": [15, 16, 18, 21, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265], "trust": [15, 16, 18, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 221, 302], "cudagraphmodul": [15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "behaviour": [15, 16, 18, 42, 65, 77, 331, 333, 337, 397, 467, 468, 484], "bypass": [15, 16, 18, 470], "isaaclab": [15, 16, 18, 138, 142], "maniskil": [15, 16, 18], "crash": [15, 16, 18, 248], "multiprocessedweightupdat": [15, 16], "ordereddict": [15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 272, 273, 275, 331, 333, 337, 367, 387, 397, 399], "worker0": [15, 16, 21], "state_dict0": [15, 16, 21], "worker1": [15, 16, 21], "state_dict1": [15, 16, 21], "reset_idx": [15, 16, 21], "static_se": [15, 16, 18, 21, 27, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265], "increment": [15, 16, 18, 21, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 239, 381], "env_fn": [15, 16, 18, 21, 29, 134, 452, 453], "env_fn_parallel": [15, 16, 18, 21, 29], "300": [15, 16, 18, 21, 29, 115, 116, 287, 288], "out_se": [15, 16, 18, 21, 29, 485], "irrevers": [15, 16, 21], "pipe": [15, 16, 18, 21, 29, 157], "tqdm": [15, 16, 18, 21, 29, 62, 67, 68, 69, 78, 79, 110, 440, 464, 466, 467, 478, 479, 480], "ale_pi": [15, 16, 18, 21, 29, 468], "10000": [15, 16, 21, 27, 157, 278, 440, 467], "progress": [15, 16, 18, 21, 29, 433, 434, 435, 440, 461, 465, 467, 485], "bar": [15, 16, 18, 21, 29, 101, 103, 123, 345, 433, 434, 435, 440, 461, 465], "pbar": [15, 16, 18, 21, 29, 464, 466, 467, 478, 479, 480], "100_000": [15, 16, 18, 21, 29, 468, 474], "prec_wc": [15, 16, 18, 21, 29], "wc": [15, 16, 18, 21, 29], "write_count": [15, 16, 18, 21, 29, 62, 67, 68, 69, 78, 79, 110], "set_descript": [15, 16, 18, 21, 29, 464, 466, 467, 478, 479, 480], "remote_collector": [17, 27], "max_interv": 17, "leverag": [17, 27, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 479, 485], "_get_server_weight": [17, 20, 24, 26], "_maybe_map_weight": [17, 20, 24, 26], "_sync_weights_with_work": [17, 20, 24, 26], "_skip_upd": 17, "interv": [17, 208, 260, 421, 422, 432, 442, 465, 480], "raycollector": [17, 67, 456], "return_same_td": 18, "interruptor": 18, "cautious": [18, 384], "whole": [18, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 350, 367, 387, 397, 399, 431, 464, 466], "_interruptor": 18, "outsid": [18, 224, 263, 460, 473, 478, 479, 480], "start_collect": 18, "stop_collect": 18, "preeptiv": 18, "init": [18, 27, 29, 35, 42, 47, 55, 65, 66, 67, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 264, 272, 275, 308, 309, 310, 331, 333, 337, 397, 399, 402, 429, 465, 466], "chunk": [18, 29, 470], "policy_state_dict": [18, 29], "env_state_dict": [18, 29], "256": [18, 29, 94, 149, 150, 233, 289, 465, 466, 468, 478, 479], "weight_gett": 19, "vanillaweightsend": 19, "sender": 19, "weightupdatereceiverbas": 19, "update_weight": [19, 24, 26, 442], "piec": [20, 100, 111, 122, 125, 126, 464, 465, 466, 473, 478, 479, 480, 482], "scheme": [20, 461, 485], "hanld": 20, "unchang": [20, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 225, 243, 258, 264, 265, 268, 270, 275, 295, 331, 333, 337, 353, 397, 399, 422, 437, 464, 482], "__call__": [20, 35, 42, 47, 55, 64, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 354, 397, 399, 461], "proxi": [20, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 184, 307, 315, 350, 398, 460], "weakref": [20, 50, 84], "registr": [20, 465], "exporationtyp": [22, 23, 25], "collector_kwarg": [22, 23, 25, 27], "num_workers_per_collector": [22, 23, 25, 27], "slurm_kwarg": [22, 23, 25], "update_after_each_batch": [22, 23, 25, 27], "max_weight_update_interv": [22, 23, 25, 27], "tcp_port": [22, 23, 25, 28], "respect": [22, 23, 25, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 213, 219, 223, 226, 237, 243, 244, 253, 258, 264, 265, 268, 270, 275, 296, 300, 308, 323, 331, 333, 337, 353, 358, 364, 366, 381, 384, 386, 397, 399, 402, 404, 405, 436, 460, 466, 467, 478, 479], "subnod": [22, 23, 25, 27], "readi": [22, 25, 27, 457, 465, 466, 468, 470, 473, 482, 484], "fashion": [22, 25, 27, 61, 63, 70, 84, 95, 96, 97, 116, 184, 398], "distributed_back": [22, 23], "ucc": [22, 23], "submitit_delai": [22, 28], "former": [22, 23, 25, 31, 35, 42, 47, 62, 65, 66, 69, 72, 77, 78, 79, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360, 464], "whilst": [22, 23, 25], "homonym": [22, 23, 25, 480], "visit": [22, 23, 25, 84, 183], "facebookincub": [22, 23, 25], "tcp": [22, 23, 25, 28], "port": [22, 23, 25, 28, 169, 335], "10003": [22, 23, 25, 28], "distributedweightupdat": 22, "liter": [23, 84, 95, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 190, 192, 333, 337, 340], "update_interv": 23, "frequenc": [23, 318, 464], "restart": 24, "rank": [24, 121, 279, 335, 336], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 31, 59, 350, 354], "tensorpiperpcbackendopt": 25, "rpcweightupdat": 25, "collector_info": 26, "collector_rref": 26, "ray_init_config": [27, 67], "remote_config": [27, 62, 67, 68, 69, 78, 79, 110], "num_collector": [27, 452, 453, 464, 465], "coordin": [27, 222], "autodetect": 27, "num_cpu": [27, 67], "num_gpu": [27, 67], "1024": [27, 67, 289, 482], "equat": [27, 65, 84, 137, 188, 272, 273, 319, 363, 366, 388, 397, 466, 469, 480], "exce": [27, 482], "indefinit": [27, 93], "rayreplaybuff": [27, 456], "enfoc": 27, "rayweightupdat": 27, "distributed_collector": [27, 67], "add_collector": 27, "local_polici": 27, "stop_remote_collector": 27, "num_job": 28, "tcpport": 28, "submitit_main_conf": 28, "slurm_cpus_per_task": 28, "slurm_gpus_per_nod": 28, "slurm_partit": 28, "timeout_min": 28, "submitit_collection_conf": 28, "delai": [28, 389, 471], "jump": [28, 469], "host": [28, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "satellit": 28, "rendezv": 28, "hang": 28, "forev": 28, "default_config": [28, 284, 289, 317, 345], "default_slurm_conf_main": 28, "default_slurm_conf": 28, "dialog_turns_per_batch": 29, "yield_only_last_step": 29, "yield_completed_trajectori": 29, "total_dialog_turn": 29, "async_env": 29, "flatten_data": 29, "queue": [29, 161, 272, 399, 482, 484], "simplifi": [29, 62, 203, 470, 480, 482], "steps_per_batch": 29, "total_step": 29, "vllm": [29, 30, 186, 332, 333, 334, 335, 336, 337, 476], "vllmwrapper": [29, 186, 333], "mocking_class": [29, 263], "dummystrdataload": 29, "llmenv": [29, 181, 189, 192, 337], "llm_model": 29, "gpt2": [29, 64, 71, 80, 83, 145, 187, 284, 289, 317, 333, 337], "get_token": 29, "pad_token": [29, 64, 80], "eos_token": [29, 64, 182], "from_dataload": [29, 186, 192], "from_text": [29, 178, 186, 192, 333, 337], "group_repeat": [29, 179, 180, 183, 186, 189, 192], "attention_mask": [29, 61, 63, 64, 70, 71, 80, 83, 94, 97, 186, 333, 337], "text": [29, 64, 71, 80, 95, 97, 145, 178, 179, 180, 182, 183, 185, 186, 187, 194, 195, 296, 297, 300, 301, 319, 333, 337, 399, 458, 466, 476], "nontensorstack": [29, 50, 57, 102, 127, 130, 145, 178, 180, 183, 187, 192, 197, 233, 262, 266, 337], "plsgqejeyd": 29, "text_respons": [29, 97, 178, 180, 182, 183, 185, 186, 188, 194, 195, 333, 337, 458, 476], "ec": 29, "tjbjz3perwhz": 29, "tokens_respons": [29, 97, 186, 333, 337], "alia": [29, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 101, 102, 103, 104, 110, 117, 119, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 397, 399, 400, 406], "master_address": [30, 335], "master_port": [30, 335], "model_metadata": 30, "vllm_tp_size": 30, "rollout_tensordict": 31, "nestedkei": [31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 70, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 197, 201, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 277, 281, 292, 295, 319, 321, 345, 349, 354, 369, 398, 399, 400, 420, 422], "as_nest": 31, "x": [31, 42, 55, 65, 66, 69, 71, 72, 77, 116, 145, 187, 233, 235, 261, 266, 276, 278, 280, 281, 283, 292, 294, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 330, 331, 333, 337, 346, 350, 351, 360, 363, 397, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 440, 458, 464, 468, 478, 480, 482, 484], "durat": [31, 479], "meta": [31, 61, 63, 70, 82, 84, 95, 96, 97, 135, 139, 184, 364, 366, 381, 384, 386, 398, 461, 466, 478, 479, 482], "aren": [31, 257, 467], "eventu": [31, 320, 467, 480], "recov": [31, 115, 116, 355, 372, 380, 477], "layout": 31, "to_padded_tensor": 31, "nested_tensor": [31, 136, 138], "stride": [31, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 282, 283, 285, 286, 294, 308, 331, 333, 337, 397, 399, 465, 478, 484], "jag": 31, "focu": [31, 464, 465, 466, 468, 470, 471, 472, 478], "team": [31, 478, 479, 484], "cat": [31, 50, 192, 358, 365, 367, 368, 380, 385, 387, 389, 390, 478, 482, 484], "arang": [31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 116, 208, 292, 306, 307, 346, 431, 459, 482], "obs_": 31, "trajectory_id": 31, "int32": [31, 35, 36, 50, 79, 85, 115, 143, 144, 155, 156, 168, 200, 349], "data_split": 31, "got": [31, 472], "init_kl_coef": 32, "horizon": [32, 149, 150, 171, 172, 279, 305, 466], "kl": [32, 41, 71, 193, 235, 376, 381], "describ": [32, 61, 63, 70, 82, 84, 95, 96, 97, 162, 184, 216, 326, 327, 369, 398, 425, 460, 464, 466, 478, 479, 480, 485], "ziegler": 32, "et": [32, 279], "relax": [32, 420], "penalti": [32, 71, 190, 378, 381], "strai": [32, 71], "greater": [32, 108, 115, 116, 220, 236, 237, 298, 302, 367, 464, 465], "increas": [32, 99, 215, 259, 280, 319, 478, 479], "pull": [32, 50, 84, 179, 482], "toward": [32, 270], "aggress": 32, "kl_coef": [32, 41, 71], "arxiv": [32, 62, 107, 108, 128, 129, 131, 132, 143, 144, 149, 150, 152, 153, 163, 171, 172, 215, 243, 268, 278, 284, 285, 286, 287, 288, 289, 292, 293, 294, 300, 305, 312, 313, 314, 318, 319, 320, 322, 323, 329, 347, 364, 365, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 383, 384, 387, 388, 389, 402, 407, 415, 481], "pdf": [32, 215, 284, 285, 286, 287, 288, 292, 318, 319, 347, 367, 374, 378, 385, 388, 389, 402, 407, 415], "1909": 32, "08593": 32, "lm": 32, "blob": 32, "master": [32, 335, 478, 479], "lm_human_prefer": 32, "train_polici": 32, "kl_valu": 32, "coef": [32, 193, 235, 366, 381, 384], "newest": 32, "int8": [33, 133, 148, 159, 160, 213], "encod": [33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 128, 129, 133, 136, 137, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170, 188, 208, 225, 314, 315, 318, 322, 333, 337, 363, 465, 466, 467, 470, 480, 482], "null": [33, 36, 37, 39, 40, 42, 48, 49, 57, 58, 62, 73, 74, 78, 82, 85, 86, 87, 88, 89, 107, 108, 178, 186, 213, 233], "denot": [33, 479], "clariti": [33, 50], "assert_is_in": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "cardin": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 292, 321, 346, 347, 352, 466], "outcom": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 290, 306, 307, 326, 382, 397, 478], "cartesian": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "clear_device_": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "is_in": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 485], "np": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188, 271, 357, 420, 468, 478, 480], "ndarrai": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188, 319, 357, 420, 468, 478], "ignore_devic": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "arrai": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 71, 73, 74, 82, 85, 86, 87, 88, 89, 107, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 227, 296, 297, 300, 301, 464, 478], "use_mask": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 159, 160], "erase_memoize_cach": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "memoiz": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188], "memoize_encod": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "compliant": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "singleton": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 185, 282, 283, 303, 324, 325, 456, 460, 476], "start_dim": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "end_dim": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "classmethod": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 233, 268, 276, 283, 284, 317, 398], "implements_for_spec": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "torch_funct": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "index_typ": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 57, 58, 73, 74, 82, 85, 86, 87, 88, 89], "tensor_to_index": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "exanpl": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "one_hot": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 292, 307, 321], "categ": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 350], "to_categorical_spec": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_one_hot": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_categ": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_categor": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "make_neg_dim": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "convert": [33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 219, 223, 226, 243, 258, 264, 265, 268, 270, 272, 273, 275, 331, 333, 337, 353, 363, 382, 397, 398, 399, 464, 465, 466, 480, 482], "shortcut": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 480, 485], "ndimens": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 464], "violat": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 459], "project": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 73, 74, 82, 85, 86, 87, 88, 89, 225, 277, 300, 319, 341, 346, 347, 350, 351, 352, 353, 354, 429, 459, 484, 485], "uniformli": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 109, 382, 397, 485], "normal": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 68, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 239, 272, 273, 277, 278, 282, 283, 299, 303, 306, 307, 327, 328, 350, 354, 366, 367, 381, 384, 399, 435, 438, 454, 459, 461, 467, 470, 479, 485], "drawn": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 258, 295, 350, 354, 466, 478, 479], "set_provisional_n": [33, 34, 38, 43, 51, 52], "temporarili": [33, 34, 38, 43, 51, 52, 99, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 472, 482], "dest": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 243, 268, 270, 353], "to_numpi": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "transformed_in": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 265, 326, 454], "check_spec_encod": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_one_hot": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "hot": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 128, 129, 136, 138, 139, 142, 143, 144, 149, 150, 152, 153, 155, 156, 159, 160, 163, 169, 170, 171, 172, 208, 209, 225, 292, 315, 316, 321, 346, 347, 351, 352, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 467], "categ_sampl": [33, 34, 38, 43, 53, 54, 59, 60], "onehot_sampl": [33, 34, 38, 43, 53, 54], "to_one_hot_spec": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "categoricalbox": [33, 34, 38, 43, 53, 54, 59, 60, 158], "type_check": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "update_mask": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "disabl": [33, 34, 35, 38, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 299, 328, 331, 333, 337, 397, 399, 420, 464, 478, 479], "unmask": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "ts": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "num_bit": 35, "convert_to_binari": 35, "decim": 35, "1001": 35, "bit": [35, 233, 466, 467, 469, 478, 479, 482], "heavysid": 35, "binary_to_decim": 35, "add_modul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "fn": [35, 42, 47, 55, 64, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 266, 275, 331, 333, 337, 397, 399, 452, 453], "recurs": [35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 90, 91, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399, 468], "init_weight": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "m": [35, 42, 47, 51, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 225, 275, 281, 331, 333, 337, 354, 397, 399, 465, 480], "fill_": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 465, 467], "net": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 286, 288, 291, 294, 309, 331, 333, 337, 364, 365, 367, 373, 380, 384, 385, 386, 387, 397, 399, 450, 465, 480, 481, 484], "in_featur": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 282, 283, 285, 286, 287, 288, 294, 303, 308, 309, 311, 312, 331, 333, 337, 342, 353, 361, 369, 371, 397, 399, 468, 470, 471], "out_featur": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 279, 282, 283, 285, 286, 287, 288, 293, 294, 298, 302, 303, 305, 308, 309, 311, 312, 331, 333, 337, 342, 346, 353, 361, 369, 371, 397, 399, 459, 464, 467, 468, 470, 471, 474, 484], "bia": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 233, 243, 258, 263, 264, 265, 268, 270, 275, 278, 282, 283, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 309, 311, 312, 319, 331, 333, 337, 353, 360, 362, 363, 367, 382, 387, 397, 399, 460, 464, 465, 466, 467, 479], "requires_grad": [35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 263, 265, 275, 318, 331, 333, 337, 354, 367, 387, 397, 399], "bfloat16": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "datatyp": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 482], "member": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399, 422], "xdoctest": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 233, 243, 258, 263, 264, 265, 268, 270, 275, 331, 333, 337, 353, 367, 382, 387, 397, 399], "buf": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "20l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399], "1l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399], "5l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399], "doubl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 223, 224, 226, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 369, 374, 379, 385, 388, 397, 399, 400, 464, 465, 466, 467, 485], "eval": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 272, 275, 280, 331, 333, 337, 397, 399, 459, 464, 465, 466], "evalu": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 138, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 220, 265, 275, 280, 290, 306, 307, 315, 328, 331, 333, 337, 385, 397, 399, 445, 446, 465, 466, 474], "dropout": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 280, 281, 296, 298, 300, 302, 303, 331, 333, 337, 397, 399, 459, 467], "batchnorm": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 278, 331, 333, 337, 397, 399], "comparison": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 265, 275, 331, 333, 337, 382, 397, 399, 464, 465], "extra_repr": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "recip": [35, 42, 47, 64, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 310, 313, 314, 317, 319, 322, 323, 325, 330, 331, 333, 337, 345, 347, 349, 352, 357, 360], "get_buff": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "get_submodul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "qualifi": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "referenc": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "resolv": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "someth": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 148, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 457, 465, 466, 480, 485], "get_extra_st": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 331, 333, 337, 397, 399], "set_extra_st": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 331, 333, 337, 397, 399], "picklabl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 331, 333, 337, 397, 399], "get_paramet": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "net_b": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "net_c": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "conv": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 282, 283, 331, 333, 337, 397, 399, 465], "conv2d": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 283, 285, 286, 294, 308, 331, 333, 337, 397, 399], "kernel_s": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 282, 283, 285, 286, 294, 308, 313, 331, 333, 337, 397, 399, 465, 484], "diagram": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "degre": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 221, 275, 331, 333, 337, 397, 399], "named_modul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "half": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399, 464], "ipu": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "strict": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 367, 387, 397, 398, 399, 468], "descend": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "get_swap_module_params_on_convers": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "persist": [35, 42, 45, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 233, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "preserv": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 353, 367, 387, 397, 399], "missing_kei": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "unexpected_kei": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "namedtupl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 296, 300, 331, 333, 337, 397, 399, 401, 466, 480], "idx": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "mtia": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "named_buff": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "remove_dupl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399], "prepend": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 382, 397, 399, 468], "running_var": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "named_children": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "conv4": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "conv5": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "memo": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "named_paramet": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 235, 275, 331, 333, 334, 337, 382, 397, 399], "register_backward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "removablehandl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "favor": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 275, 331, 333, 337, 397, 399, 466], "register_full_backward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_buff": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "running_mean": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "alongsid": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 458, 473], "num_featur": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 278, 331, 333, 337, 397, 399], "register_forward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 292, 321, 331, 333, 337, 397, 399], "with_kwarg": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "always_cal": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_module_forward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "regardless": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 366, 381, 384, 397, 399], "register_forward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "invok": [35, 42, 47, 55, 65, 66, 68, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "And": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 336, 337, 397, 399, 471], "forward_pr": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_module_forward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "ordinarili": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "grad_input": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "grad_output": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "technic": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 465, 467, 468, 470], "caller": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_module_full_backward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_full_backward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "backward_pr": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_module_full_backward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_load_state_dict_post_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "incompatible_kei": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "thrown": [35, 42, 47, 55, 65, 66, 72, 73, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 482], "register_load_state_dict_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "local_metadata": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "error_msg": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "noqa": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "b950": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_modul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 461], "register_paramet": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_state_dict_post_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "register_state_dict_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "keep_var": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 367, 387, 397, 398, 399], "requires_grad_": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 468], "autograd": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399], "freez": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 272, 273, 275, 331, 333, 337, 397, 399], "finetun": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "gan": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "set_submodul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "share_memori": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 464], "share_memory_": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399, 484], "destin": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 214, 223, 224, 226, 233, 263, 265, 268, 272, 275, 331, 333, 337, 367, 387, 397, 398, 399, 422], "averag": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 272, 273, 275, 319, 331, 333, 337, 367, 375, 376, 387, 397, 399, 438, 464, 466], "shallow": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 367, 387, 397, 399, 467], "detach": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 233, 263, 265, 275, 331, 333, 337, 367, 378, 382, 387, 389, 397, 399, 402, 403, 404, 405, 464], "non_block": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 398, 399, 467], "memory_format": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "channels_last": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "tri": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399, 473], "pin": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "4d": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "ignore_w": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "1913": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "3420": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "5113": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "2325": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "torch_doctest_cuda1": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "gpu1": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "1914": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "5112": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "2324": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "float16": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 297, 301, 331, 333, 337, 353, 397, 399], "cdoubl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "3741": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "j": [35, 42, 47, 55, 62, 65, 66, 72, 77, 107, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399, 461, 471], "2382": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "5593": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "4443": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "complex128": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "6122": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "1150": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 219, 243, 258, 264, 265, 268, 270, 275, 331, 333, 337, 353, 397, 399], "to_empti": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "dst_type": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "xpu": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "set_to_non": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 275, 331, 333, 337, 397, 399], "upper": [36, 113, 238], "continuousbox": [36, 39, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 200, 233, 236, 258, 266], "provision": 38, "descript": [39, 142, 171, 178, 194, 211, 465, 466], "akin": 39, "unnam": 39, "compositespec": [39, 456, 476, 480, 485], "constraint": [39, 151, 327, 466, 478, 479], "data_cl": 39, "tensorclass": [39, 61, 63, 70, 84, 94, 95, 96, 97, 101, 103, 123, 184, 398], "pixels_spec": 39, "observation_vector_spec": 39, "composite_spec": 39, "observation_vector": [39, 216, 464], "_nodefault": [39, 40, 48, 74], "is_empti": [39, 40, 48, 74, 480], "include_nest": [39, 40, 48, 74], "leaves_onli": [39, 40, 48, 74], "is_leaf": [39, 40, 48, 74], "_compositespecitemsview": [39, 40, 48, 74], "_compositespeckeysview": [39, 40, 48, 74], "reflect": [39, 40, 48, 74, 138, 159, 160, 206, 233, 271, 382, 397, 443, 465, 466, 467, 479], "lock_": [39, 40, 48, 74], "propag": [39, 40, 48, 74, 364, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 402, 403, 404, 405, 466, 478, 479], "succeed": [39, 40, 48, 74, 233, 266], "pop": [39, 40, 48, 74], "keyerror": [39, 40, 48, 74, 179, 180, 183, 265], "extract": [39, 40, 48, 74, 191, 197, 211, 233, 262, 266, 348, 464, 466, 484], "selected_kei": [39, 40, 48, 74, 252, 464], "unlock_": [39, 40, 48, 74], "_compositespecvaluesview": [39, 40, 48, 74], "multipli": [41, 186, 192, 280, 296, 300, 364, 365, 366, 367, 373, 381, 383, 384, 385, 387, 397, 438, 464, 478], "calcul": [41, 71, 180, 248, 296, 364, 366, 371, 381, 384, 386, 389, 397, 402], "reassign": 42, "reward2go": [42, 456], "reward_key_out": 42, "time_dim": [42, 402, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419], "unrol": [42, 375, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419], "discount": [42, 55, 134, 248, 275, 365, 371, 374, 375, 377, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 460, 465, 466, 478, 479], "lastrewardtotraj": 42, "last_reward_to_traj": 42, "new_tensordict": 42, "is_tdmodule_compat": [42, 65, 77, 331, 333, 337, 397], "reset_out_kei": [42, 65, 77, 331, 333, 337, 397], "orign": [42, 65, 77, 331, 333, 337, 397], "mod": [42, 65, 77, 220, 235, 281, 298, 302, 331, 333, 337, 349, 354, 357, 397, 467, 468, 474], "select_out_kei": [42, 65, 77, 331, 333, 337, 364, 365, 367, 368, 372, 373, 380, 384, 385, 387, 389, 390, 397, 468], "reset_parameters_recurs": [42, 65, 77, 331, 333, 337, 382, 397], "relu": [42, 65, 77, 151, 279, 289, 305, 331, 333, 337, 363], "old_param": [42, 65, 77, 331, 333, 337], "bork": [42, 65, 77, 331, 333, 337], "dork": [42, 65, 77, 331, 333, 337], "reset_paramet": [42, 65, 77, 310, 331, 333, 337], "from_modul": [42, 65, 77, 292, 331, 333, 337, 353, 356, 484], "out_keys_sourc": [42, 65, 77, 331, 333, 337, 397], "rubric": [42, 65, 77, 239, 331, 333, 337, 356, 397], "revert": [42, 65, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 331, 333, 337, 397, 470, 482], "seq": [42, 65, 77, 281, 296, 298, 300, 302, 331, 333, 337, 349, 397, 467, 468, 474, 477], "z": [42, 65, 77, 297, 331, 333, 337, 397], "shift_kei": [44, 46, 56, 75], "is_full_kei": [44, 46, 56, 75], "is_ful": [44, 46, 56, 75], "tempfil": [44, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 95, 96, 97, 101, 110, 184, 398, 450, 464, 465, 467, 468, 472, 478, 481, 482], "register_save_hook": [44, 62, 67, 68, 69, 75, 78, 79, 110], "temporarydirectori": [44, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 95, 96, 97, 110, 184, 398, 464, 465, 467, 468, 472, 478, 481, 482], "tmpdir": [44, 62, 67, 68, 69, 75, 78, 79, 83, 110, 464, 465, 468, 478], "rb_load": [44, 62, 67, 68, 69, 78, 79, 110], "register_load_hook": [44, 62, 67, 68, 69, 78, 79, 110], "filesystem": [45, 482], "ted2nest": [46, 456], "stackedcomposit": [48, 456], "tensordictmap": [50, 456], "observation_kei": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "excluded_kei": [50, 228], "consolid": [50, 77, 91, 103], "lazili": [50, 102, 309, 480], "from_tensordict_pair": [50, 77], "querymodul": [50, 77], "get_keys_from_env": 50, "cattensor": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 477, 480, 485], "unsqueezetransform": [50, 215, 480, 482], "oracl": 50, "obs_kei": 50, "state_kei": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reset_st": 50, "rollout0": 50, "rollout1": 50, "rollout1b": 50, "collaps": 50, "max_length": [50, 61, 63, 64, 80, 83, 84, 94, 192, 197, 262, 468, 474], "valid_path": [50, 84], "assert_clos": 50, "subtre": [50, 84], "intersect": [50, 276], "Or": [50, 164, 165, 308], "rollout_from_path": [50, 84], "plot": [50, 84, 464, 466, 467, 478, 479, 480], "_nestedkei": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "return_nod": 50, "diverg": [50, 193, 235, 350, 354, 376, 381], "endpoint": 50, "r0": [50, 464], "123": [50, 84], "392": [50, 84], "989": [50, 84], "809": [50, 84], "847": [50, 84], "r1": 50, "235": 50, "td_root": [50, 84], "node_data": [50, 84], "node_id": [50, 84], "nontensordata": [50, 57, 96, 130, 155, 156, 192, 197, 233, 262, 266, 420], "_parent": [50, 84], "0x716eeb78fbf0": 50, "0x": 50, "4341220243998689835": 50, "6745467818783115365": 50, "win": [50, 84], "to_str": [50, 84], "node_format_fn": [50, 84], "indent": [50, 84], "rollouts_data": [50, 84], "456": [50, 84], "359": [50, 84], "3094": [50, 84], "75": [50, 84, 115], "948": [50, 84], "68": [50, 84, 115], "9045": [50, 84], "rollout_data": [50, 84], "nvec": [51, 53], "remove_singleton": 51, "ax": [51, 311, 312, 478], "Not": [51, 52, 69, 128, 129, 143, 263, 298, 302], "neither": [51, 52, 53, 54, 169, 480], "use_regist": [53, 59], "mone_hot": [53, 54], "boxlist": [53, 54], "gamma": [55, 248, 275, 305, 364, 365, 367, 368, 369, 371, 373, 374, 375, 377, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 450, 460, 464, 465, 466, 478, 479, 484], "sutton": [55, 460, 478, 479], "1988": 55, "tempor": [55, 298, 302, 305, 403, 404, 409, 410], "44": [55, 115], "ahead": [55, 275, 485], "bias": [55, 296, 297, 300, 301, 360, 460, 464], "mitig": [55, 215], "multisteptransform": [55, 456], "99": [55, 248, 272, 305, 377, 392, 401, 408, 450, 464, 465, 466, 468, 471, 474, 478, 479, 484], "nontermin": 55, "original_reward": 55, "newli": [55, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "OR": 55, "row": [56, 76, 143, 144, 236], "example_data": [57, 96, 183, 186, 192], "conform": 57, "templat": [57, 96, 179, 180, 183, 196, 423], "randomli": [57, 114, 168, 238, 239, 258, 295, 350, 354, 470, 478, 479, 480, 482], "unidimension": 59, "action_valu": [59, 291, 292, 321, 346, 347, 351, 352, 367, 373, 382, 397, 400, 459, 467, 468, 470, 474], "keepdim": 59, "chosen_action_valu": [59, 320, 321, 329, 351, 352, 400, 459, 467, 470], "priori": 59, "uniqu": [59, 84, 115, 116, 145, 149, 150, 185, 187, 215, 227, 257, 258, 259, 263, 349, 429, 472, 482], "tensor_spec": [59, 162, 207, 209, 372, 373, 384, 386], "one_hot_sampl": [59, 60], "chosen_data": [61, 94], "rewarddata": [61, 94, 456], "rejected_data": [61, 94], "copy_exist": [61, 63, 70, 84, 95, 96, 97, 184, 398], "return_earli": [61, 63, 70, 84, 95, 96, 97, 184, 398], "share_non_tensor": [61, 63, 70, 84, 95, 96, 97, 184, 398], "memmap": [61, 63, 70, 84, 95, 96, 97, 101, 157, 166, 184, 272, 398, 422, 424, 437], "dataclass": [61, 63, 70, 82, 84, 95, 96, 97, 184, 382, 398], "from_dataset": [61, 63, 94], "dataset_nam": [61, 63, 71, 83, 94, 154], "550": [61, 63, 71, 83, 94, 115, 116], "root_dir": [61, 63, 83, 94], "from_disk": [61, 63, 83, 94], "carperai": [61, 63, 71, 83], "openai_summarize_comparison": [61, 63, 83], "load_from_disk": [61, 63, 83, 94], "load_dataset": [61, 63, 83, 94], "92534": 61, "input_id": [61, 63, 64, 70, 71, 80, 83, 94, 145, 186, 187], "end_scor": [61, 70, 71, 94], "sub_data": [61, 63], "from_tensordict": [61, 63, 70, 84, 95, 96, 97, 184, 398], "non_tensordict": [61, 63, 70, 84, 95, 96, 97, 184, 398], "getattr": [61, 63, 70, 84, 95, 96, 97, 184, 398], "load_memmap": [61, 63, 70, 84, 95, 96, 97, 184, 398], "load_": [61, 63, 70, 84, 95, 96, 97, 184, 398], "load_memmap_": [61, 63, 70, 84, 95, 96, 97, 184, 398], "fromkei": [61, 63, 70, 84, 95, 96, 97, 184, 398], "saved_td": [61, 63, 70, 84, 95, 96, 97, 184, 398], "td_load": [61, 63, 70, 84, 95, 96, 97, 184, 398], "fake": [61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 398, 464, 465, 468], "_subclass": [61, 63, 70, 84, 95, 96, 97, 184, 398], "faketensormod": [61, 63, 70, 84, 95, 96, 97, 184, 398], "faketensor": [61, 63, 70, 84, 95, 96, 97, 184, 398], "from_flatten": [61, 63, 70, 84, 95, 96, 97, 184, 398], "attemptedli": [61, 63, 70, 84, 95, 96, 97, 184, 398], "existsok": [61, 63, 70, 84, 95, 96, 97, 101, 184, 398], "mimic": [61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 398], "cross": [61, 63, 70, 84, 95, 96, 97, 184, 279, 398], "tensordictfutur": [61, 63, 70, 84, 95, 96, 97, 184, 398], "serialis": [61, 63, 70, 84, 95, 96, 97, 184, 398], "deepli": [61, 63, 70, 84, 95, 96, 97, 184, 398], "memmap_": [61, 63, 70, 84, 95, 96, 97, 184, 272, 398], "memmap_lik": [61, 63, 70, 84, 95, 96, 97, 184, 398], "contentless": [61, 63, 70, 84, 95, 96, 97, 184, 398], "1_000_000": [61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 110, 115, 184, 398, 464, 467, 478], "alloc": [61, 63, 70, 84, 95, 96, 97, 103, 184, 290, 306, 307, 398, 458, 464], "memmap_refresh_": [61, 63, 70, 84, 95, 96, 97, 184, 398], "refresh": [61, 63, 70, 84, 95, 96, 97, 184, 398, 474, 478, 479], "saved_path": [61, 63, 70, 84, 95, 96, 97, 184, 398], "setattr": [61, 63, 70, 84, 95, 96, 97, 184, 398], "tent": [61, 63, 70, 83, 84, 95, 96, 97, 184, 398], "to_tensordict": [61, 63, 70, 84, 95, 96, 97, 184, 398, 467], "retain_non": [61, 63, 70, 84, 95, 96, 97, 184, 398], "discrard": [61, 63, 70, 84, 95, 96, 97, 184, 398], "alpha": [62, 78, 107, 108, 282, 283, 285, 286, 287, 288, 294, 308, 365, 367, 373, 383, 385, 387, 389, 464, 482, 484], "ep": [62, 78, 107, 108, 239, 272, 273, 278, 319, 366, 388, 397, 438, 460, 464, 465, 467, 468, 471, 474], "1e": [62, 78, 107, 108, 239, 272, 273, 278, 290, 293, 326, 464, 465, 466, 479], "08": [62, 78, 107, 108], "pin_memori": [62, 69, 78, 79, 242, 464, 484], "schaul": [62, 107, 108], "quan": [62, 107, 108], "antonogl": [62, 107, 108], "silver": [62, 107, 108], "2015": [62, 107, 108, 220], "ab": [62, 107, 108, 128, 129, 131, 132, 143, 144, 149, 150, 152, 153, 163, 171, 172, 214, 243, 268, 272, 278, 284, 289, 293, 294, 300, 305, 312, 313, 314, 320, 322, 323, 329, 364, 365, 369, 370, 371, 372, 375, 376, 377, 379, 380, 383, 384, 387, 481], "1511": [62, 107, 108, 294], "05952": [62, 107, 108], "expon": [62, 78, 107, 108], "\u03b1": [62, 78, 107, 108], "delta": [62, 78, 107, 108, 296, 300, 326, 350, 354, 456, 460, 478], "1_000": [62, 69, 78, 79, 478, 482], "mini": [62, 69, 78, 79, 479], "decid": [62, 69, 78, 79, 478, 484], "incompat": [62, 69, 78, 79, 386, 482], "drop_last": [62, 69, 78, 79, 114, 116], "notion": [62, 69, 78, 79, 318], "caution": [62, 69, 78, 79, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 485], "codebas": [62, 69, 78, 79, 480], "return_info": [62, 67, 68, 69, 78, 79, 107, 108, 110, 482], "tensordictprioritizedreplaybuff": [62, 456, 484], "_weight": [62, 78, 107, 108], "update_prior": [62, 107, 108, 437, 461, 465, 482, 484], "36278465": 62, "invert": [62, 67, 68, 69, 78, 79, 110, 362, 466], "as_remot": [62, 67, 68, 69, 78, 79, 110], "cl": [62, 67, 68, 69, 78, 79, 110, 465], "quantiti": [62, 67, 68, 69, 78, 79, 110], "reserv": [62, 67, 68, 69, 78, 79, 110, 461], "default_remote_class_config": [62, 67, 68, 69, 78, 79, 110], "randomsampl": [62, 67, 68, 69, 78, 79, 110, 464, 478], "td_error": [62, 67, 68, 69, 78, 79, 110, 367, 368, 369, 371, 372, 373, 374, 380, 382, 385, 387, 389, 390, 397, 400, 464, 482, 484], "update_tensordict_prior": [62, 67, 68, 69, 78, 79, 110, 464, 482, 484], "insert_transform": [62, 67, 68, 69, 78, 79, 110, 179, 180, 183, 210, 265], "insert": [62, 67, 68, 69, 78, 79, 100, 110, 111, 121, 122, 125, 126, 179, 180, 183, 210, 215, 219, 255, 265, 267], "set_sampl": [62, 67, 68, 69, 78, 79, 110], "set_storag": [62, 67, 68, 69, 78, 79, 110], "set_writ": [62, 67, 68, 69, 78, 79, 110], "prompt_rindex": [63, 64, 71], "promptdatatldr": 63, "116722": 63, "prompt": [64, 71, 96, 178, 181, 185, 186, 192, 194, 195, 399, 458], "return_tensordict": [64, 80], "tensodict": [64, 80], "valid_sampl": 64, "eough": 64, "toknen": 64, "meet": 64, "criterion": 64, "autotoken": [64, 80, 83, 96, 178, 179, 180, 182, 183, 190, 194, 195, 333, 337, 458, 476], "from_pretrain": [64, 71, 80, 145, 178, 180, 183, 187, 194, 195, 333, 458, 476], "enough": [64, 482], "inde": [64, 225, 466, 468, 480], "index_kei": [65, 77], "hash_kei": 65, "_hash": 65, "hash_modul": [65, 72, 77], "siphash": [65, 66, 77, 145, 187], "hash_to_int": 65, "hashtoint": 65, "query_modul": [65, 77], "key1": [65, 77, 216, 255, 431, 439, 484], "key2": [65, 77, 216, 255, 431, 439, 484], "write_hash": 65, "n_compon": 66, "dtype_cast": 66, "as_tensor": [66, 72, 468], "init_method": 66, "emb": [66, 467], "sklearn": [66, 154], "byte": [66, 72, 181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399], "builtin": [66, 72], "pythonhashse": [66, 72], "todo": [66, 193, 399], "optiona": 67, "transform_factori": [67, 69, 78, 79], "asyncio": [67, 127], "ray_buff": 67, "object_store_memori": 67, "600": [67, 71], "await": 67, "invoc": 68, "friendli": [68, 464], "include_info": [68, 78, 79], "storagecheckpointerbas": [69, 117], "roundrobinwrit": 69, "_pytre": [69, 482], "tree_map": [69, 482], "assert0": [69, 482], "ref_model": 71, "reward_model": [71, 359], "max_new_token": 71, "score_clip": 71, "kl_schedul": 71, "klcontrollerbas": 71, "num_step": [71, 468], "causal": 71, "sentenc": [71, 182], "frozen": [71, 193, 235, 272, 273], "gpt2rewardmodel": 71, "get_dataload": [71, 456], "promptdata": [71, 456], "gpt2lmheadmodel": 71, "dl": [71, 192], "block_siz": [71, 94], "tensorclass_typ": [71, 94], "openai_summarize_tldr": 71, "config_class": 71, "model_path": 71, "rollout_from_model": 71, "rollout_from_data": 71, "reward_kl": [71, 235], "reward_raw": 71, "sample_log_prob": [71, 235, 342, 343, 344, 350, 354, 356, 384], "create_rollout_td": 71, "log_prob": [71, 97, 193, 290, 306, 307, 315, 318, 328, 333, 337, 354, 367, 460], "log_ratio": 71, "replic": [71, 460], "rindex": 71, "eo": 71, "generation_config": 71, "generationconfig": 71, "ti": [71, 411, 412, 413, 414, 416, 417, 418, 419, 465], "log_probs_gen": 71, "logprobs_of_label": 71, "hash_a": 72, "4669941682990263259": 72, "3778166555168484291": 72, "9122128731510687521": 72, "hash_b": 72, "heterogen": [73, 74, 102, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 308, 309, 464, 465], "220": 75, "resembl": 77, "tensormap": 77, "collat": [77, 110, 179, 180, 183], "subtyp": 77, "embedding_storag": 77, "tensor_dict_storag": 77, "new_index": 77, "key3": 77, "retrieve_valu": 77, "storage_constructor": 77, "write_fn": 77, "tensordictstorag": 77, "thumb": [77, 157, 466], "lazydynamicstorag": 77, "fixedstorag": 77, "randomprojectionhash": 77, "priority_kei": [78, 79, 107, 367, 369, 372, 373, 374, 380, 382, 385, 387, 389, 390, 397, 400, 482, 484], "reduct": [78, 107, 108, 121, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 397], "prioritizedreplaybuff": [78, 456, 484], "min": [78, 107, 108, 121, 319, 365, 366, 367, 373, 383, 385, 387, 397, 465, 466], "median": [78, 107, 108, 121, 137, 143, 144, 188, 208, 350, 354], "huggingfac": [80, 185, 348], "co": [80, 185, 227, 480], "pad_trunc": 80, "am": 80, "me": [80, 194, 476], "reassur": 80, "ok": 80, "_encode_memo_dict": 82, "primarili": [82, 244, 470], "educ": 82, "guess": 82, "knowledg": [82, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 471, 473], "tokenizer_fn": 83, "tensordicttoken": [83, 456], "pre_tokenization_hook": 83, "valid_s": 83, "tokenizer_class": 83, "tokenizer_model_nam": 83, "tokein": 83, "elementwis": 83, "vocabulari": [83, 145, 186, 187, 197, 262], "loader": [83, 466], "185068": 83, "dataset_to_tensordict": 83, "data_dir": 83, "batch_dim": [83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 454], "valid_mask_kei": 83, "batch_dimens": 83, "filder": 83, "from_dict": [83, 192], "data_memmap": 83, "ref": 84, "branching_act": 84, "prev_act": 84, "edg": [84, 468], "travers": 84, "breadth": 84, "bf": 84, "fully_expand": 84, "get_vertex_by_hash": 84, "get_vertex_by_id": 84, "is_termin": 84, "make_nod": 84, "node_observ": 84, "bag": 84, "num_children": 84, "num_vertic": 84, "count_repeat": 84, "recustruct": 84, "plotli": 84, "make_label": 84, "visual": [84, 243, 268, 270, 422, 466, 478, 480], "unsupport": 84, "selected_act": 84, "mctsforest": [84, 145, 187, 456], "key_typ": 84, "recurse_through_entri": 91, "recurse_through_stack": 91, "infinit": [94, 149, 150, 171, 172, 273, 472, 482], "block": [94, 100, 126, 142, 183, 195, 458, 459, 464, 467, 468, 471, 472, 478, 482], "pairwisedataset": [94, 456], "audio": 95, "function_cal": 95, "_wrap_td_method": 95, "wrapped_func": 95, "0x7efeddd66940": 95, "mime_typ": 95, "function_nam": 95, "function_arg": 95, "contentbas": [96, 456], "tool_cal": 96, "tool_respons": [96, 194, 195, 458], "apply_chat_templ": [96, 178, 194, 195, 458, 476], "autoprocessor": 96, "add_generation_prompt": 96, "chat_templ": [96, 196], "continue_final_messag": 96, "return_tensor": 96, "pt": [96, 424, 461], "return_dict": 96, "chat": [96, 178, 179, 180, 183, 191, 194, 195, 196, 458], "pretrainedtoken": [96, 178, 189, 333, 337], "messag": [96, 458], "default_spec": 96, "set_list_to_stack": [96, 178, 183, 194, 195, 458, 476], "foo": [96, 101, 103, 123, 345, 482, 485], "token_list": 97, "tokens_response_list": 97, "checkpoint_fil": 99, "h5": 99, "h5_kwarg": 99, "iff": 99, "suffix": [99, 435], "h5py": 99, "create_dataset": 99, "consequ": [99, 300, 472], "immut": [100, 127, 130, 133, 137, 145, 157, 161, 166, 167, 178, 179, 180, 183, 186, 187, 188, 246, 265], "scratch_dir": [101, 464, 465, 467, 472, 478, 481, 482], "sent": [101, 103, 123, 272], "mistak": [101, 103, 123], "overewritten": 101, "tensorstoragecheckpoint": 101, "pathlib": [101, 440, 468], "main_ckpt_dir": 101, "rb_memmap": 101, "10_000_000": 101, "myclass": [101, 103, 123], "attach": [101, 102, 103, 104, 117, 119, 123, 465], "entiti": [101, 102, 103, 104, 117, 119, 123, 178], "lazystacktensordict": 102, "heterougen": 102, "linearli": 102, "densifi": 102, "unlimit": [102, 104], "st": 102, "expans": [103, 382, 397], "zero_": [103, 123, 200, 334], "liststoag": 105, "max_capac": [107, 108, 464, 482], "max_priority_within_buff": [107, 108], "data_0": 107, "data_1": 107, "smoothen": 107, "tdrb": 107, "pack": [107, 296, 300, 466, 469, 485], "nd": [107, 108], "1d": [107, 108, 115, 116, 121], "sum_tre": [107, 108], "min_tre": [107, 108], "slice_len": [108, 115, 116, 422], "end_kei": [108, 115, 116], "cache_valu": [108, 115, 116], "closer": [108, 484], "readili": [108, 115, 116, 354], "conjunct": [108, 115, 116, 465], "Will": [108, 115, 152, 422], "buffer0": [108, 115], "immutablewrit": [108, 115], "buffer1": [108, 115], "other_sampl": [108, 115], "shorter": [108, 115, 116], "short": [108, 115, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 300, 301, 465, 466, 469, 470, 479, 482], "Be": [108, 115, 116], "fewer": [108, 115], "tolist": 108, "120110917137936e": 108, "06": [108, 290, 326], "storageensembl": [110, 113], "samplerensembl": 110, "writerensembl": [110, 119], "sample_from_al": [110, 113], "num_buffer_sampl": [110, 113], "ensembl": [110, 113, 119, 120, 126, 353, 385], "forbidden": 110, "0x13a2ef430": 110, "0x13a2f9310": 110, "interpol": [110, 247, 465, 468], "interpolationmod": 110, "bilinear": [110, 247], "0x13a2f9220": 110, "0x13a2f9f70": 110, "0x13a2d9b50": 110, "0x13a2f95b0": 110, "0x128648260": 110, "roundrobin": [111, 122], "buffer_id": [113, 119], "shuffl": [114, 116, 479], "incomplet": [114, 116], "fresh": 114, "haven": [114, 481], "remain": [114, 193, 214, 224, 225, 235, 257, 312, 471], "draw": [114, 295], "use_gpu": [115, 116], "slicesamplerwithoutreplac": [115, 482], "acceler": [115, 116, 137, 188, 478, 479], "reconstruct": [115, 116, 376, 464, 485], "ep_1": [115, 116], "ep_2": [115, 116], "73": 115, "74": 115, "76": 115, "77": 115, "42": [115, 303, 318, 364, 365, 367, 368, 372, 380, 387], "43": 115, "45": 115, "67": [115, 477], "69": 115, "70": 115, "71": 115, "27": [115, 116, 128, 129, 157, 166, 220], "28": [115, 116, 308], "31": [115, 143, 144], "80": [115, 128, 129], "82": 115, "83": 115, "84": [115, 247, 467, 468], "78": 115, "79": 115, "320": [115, 116, 131, 132], "700": [115, 116], "dataid": [115, 116], "available_dataset": [115, 116], "counter": [116, 220, 263, 349, 433, 461, 468], "23": [116, 220, 276], "request": [116, 212, 244], "51": 116, "__len__": 117, "rank_kei": 121, "samplerwithoutreplac": [121, 466, 479, 482], "get_insert_index": 121, "themselv": [127, 280, 465], "dens": [127, 306, 307], "maybe_dens": 127, "min_get": [127, 161, 167], "maker": [127, 454, 465], "sort": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 216, 319], "another_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "discretebox": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "mutabl": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "action_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 466, 479], "had": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 470, 472], "all_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "any_don": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "loc": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 235, 239, 250, 272, 273, 299, 327, 328, 342, 343, 344, 350, 354, 356, 364, 365, 367, 380, 384, 385, 386, 387, 444, 454, 459, 464, 465, 466, 467, 470, 479, 484], "_callabletransform": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188], "auto_specs_": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "action_spac": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 227, 292, 321, 346, 347, 351, 352, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 467, 468, 470, 474], "check_dtyp": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188], "discrep": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 364, 366, 368, 369, 381, 384, 386, 400], "broken": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188], "rng": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 480], "done_keys_group": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "another_don": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "done_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "empty_cach": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 265], "env_batch_s": [127, 161, 167], "fake_tensordict": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 465, 468], "envnam": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_action_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 478, 479], "full_done_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_observation_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_reward_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "pipeline_st": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_state_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "input_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "is_spec_lock": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "maybe_reset": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "speak": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 221, 354, 464], "observation_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "output_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "register_gym": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 469], "entry_point": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "info_kei": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reward_threshold": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "nondeterminist": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "max_episode_step": [127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "order_enforc": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "autoreset": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "disable_env_check": [127, 130, 133, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "apply_api_compat": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "nasium": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 203], "dmcontrolenv": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 422, 456, 464, 469, 477, 485], "dmc": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "cheetah": [127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 422, 464], "removeemptyspec": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "threshold": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 295, 365, 366, 397, 466], "learnt": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 450], "checker": [127, 130, 133, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "stepapicompat": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "deem": [127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188], "task_nam": [127, 130, 131, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "envgym": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0855": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0215": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0881": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0412": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "1101": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0080": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0254": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0424": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "veloc": [127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 478, 479, 480, 485], "9609e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "9776e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "04": [127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 260, 273], "6347e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "3842e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5338e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "3064e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0381e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "6656e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 260, 278, 480], "0204e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0833": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0275": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0612": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0770": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "1256": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0082": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0186": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0476": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "2221": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "2256": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5930": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "6937": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5865": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5479": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0187": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "6825": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5224": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0018": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "1005": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0335": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 221], "0268": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0133": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0627": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0074": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0488": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0353": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0075": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0069": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0098": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0058": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0033": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0157": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0004": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 260], "0381": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0452": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "11355747": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "04257728": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "00408397": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "04155852": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0389733": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "01409826": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0978704": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "08808327": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "03970837": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "00535434": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "02353762": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05116226": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "02788907": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "06848346": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05154399": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0371798": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05128025": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "dydact": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "ant": [127, 128, 129, 130, 133, 137, 140, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 481], "gym_env": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 484], "reset_kei": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 215, 251, 257, 258, 259, 478], "multitask": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "multiag": [127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 309, 320, 329, 366, 381, 384, 400], "another_reward": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reward_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "auto_cast_to_devic": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 479], "soon": [127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "__sort": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "as__": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "categorical_action_encod": [127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 203, 220, 468], "argmaxmodul": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "argmax": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 292, 321, 347, 352, 468, 470], "n_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 235, 364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 471], "ourselv": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 466, 485], "emul": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "epoch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 440, 466, 478, 479], "input_td": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "rollout_td": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "state_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "prevail": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 216, 251], "next_tensordict": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 212, 216, 228, 229, 230, 242, 245, 246, 252, 255, 268, 272], "precomput": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "_stepmdp": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206], "exclude_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206], "minim": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 424, 482], "reset_data": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 458, 485], "googl": [128, 129, 149, 150, 155, 156, 183, 185, 278, 466, 467, 476, 478, 479], "convers": [128, 129, 143, 144, 180, 183, 203, 458, 460, 476], "2106": [128, 129, 370, 389], "13281": [128, 129], "frame_skip": [128, 129, 131, 132, 136, 137, 138, 139, 143, 144, 146, 147, 152, 153, 163, 188, 231, 433, 435, 443, 461, 464, 465, 466, 484], "allow_done_after_reset": [128, 129, 131, 132, 133, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170], "toler": [128, 129, 131, 132, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170, 290, 326], "is_avail": [128, 129, 464, 465, 466, 467, 478, 479, 481], "87": [128, 129], "acrobot": [128, 129, 131, 132, 485], "advant": [128, 129, 143, 144], "timer": [128, 129, 137, 143, 144, 188], "timeit": [128, 129, 143, 144, 468], "310": [128, 129], "ms": [128, 129, 143, 144], "268": [128, 129], "433": [128, 129], "213": [128, 129], "8605": [128, 129], "pipelineenv": 129, "get_environ": 129, "san": 130, "fen": [130, 155, 156], "pgn": 130, "legal": 130, "board": [130, 168], "include_san": 130, "algebra": [130, 480], "notat": 130, "include_fen": 130, "forsyth": 130, "edward": 130, "include_pgn": 130, "portabl": [130, 473], "include_legal_mov": 130, "include_hash": 130, "mask_act": 130, "subset": [130, 480, 481], "29275": 130, "rnbqkbnr": [130, 155, 156], "pppppppp": [130, 155, 156], "kqkq": [130, 155, 156], "legal_mov": 130, "219": 130, "5p2": 130, "ppppp1pp": 130, "event": [130, 306, 307, 315, 411, 412, 413, 414, 416, 417, 418, 419, 482], "white": 130, "f4": 130, "96": 130, "kq": 130, "5n2": 130, "rnbqkb1r": 130, "nf3": 130, "na6": 130, "c4": 130, "f6": 130, "h4": 130, "rb8": 130, "na3": 130, "ra": 130, "get_legal_mov": 130, "uci": 130, "dm_control": [131, 132, 464, 477, 485], "2006": [131, 132, 220, 365, 371], "12983": [131, 132], "240": [131, 132, 484], "swingup": [131, 132, 485], "swingup_spars": [131, 132], "ball_in_cup": [131, 132], "catch": [131, 132, 468], "balance_spars": [131, 132], "three_pol": [131, 132], "two_pol": [131, 132], "finger": [131, 132], "turn_easi": [131, 132], "turn_hard": [131, 132], "fish": [131, 132], "upright": [131, 132, 465], "swim": [131, 132], "hopper": [131, 132], "hop": [131, 132], "humanoid": [131, 132, 157, 166, 477], "walk": [131, 132, 157, 166, 465, 477], "run_pure_st": [131, 132], "bring_bal": [131, 132], "bring_peg": [131, 132], "insert_bal": [131, 132], "insert_peg": [131, 132], "point_mass": [131, 132], "reacher": [131, 132], "swimmer": [131, 132], "swimmer6": [131, 132], "swimmer15": [131, 132], "walker": [131, 132], "dog": [131, 132], "trot": [131, 132], "humanoid_cmu": [131, 132], "lqr": [131, 132], "lqr_2_1": [131, 132], "lqr_6_2": [131, 132], "quadrup": [131, 132], "escap": [131, 132], "stacker": [131, 132], "stack_2": [131, 132], "stack_4": [131, 132], "deviceless": 133, "run_type_check": [133, 151], "hint": 133, "counterenv": 133, "creator": [134, 445, 446, 452, 453, 454], "substitut": [134, 257, 272, 470], "vecnorm": [134, 273, 454], "env_creat": [134, 464], "test_env1": 134, "_td": [134, 375], "observation_count": [134, 485], "test_env2": 134, "ps": 134, "p1": 134, "p2": 134, "9934": 134, "make_vari": [134, 263], "variant": [134, 263, 280, 459], "trajcount": 134, "env_creator_pendulum": 134, "env_creator_cartpol": 134, "env_str": 135, "device_map": 135, "registri": [136, 169], "asyncvectorenv": 136, "pixel_observ": [136, 138, 139, 163], "pixelobservationwrapp": [136, 138, 139, 163], "adventur": [136, 138], "airraid": [136, 138, 485], "alien": [136, 138], "time_limit": 136, "timelimit": [136, 149, 150, 171, 172], "default_info_dict_read": [136, 137, 138, 157, 188], "reader": [136, 137, 138, 157, 188, 465], "set_info_dict_read": [136, 137, 138, 157, 188, 469], "info_dict": [136, 137, 138, 157, 188], "gymlikeenv": [136, 138, 188, 456], "auto_register_info_dict": [136, 137, 138, 157, 188], "multibinari": [136, 138], "multidiscret": [136, 138], "rag": [136, 138], "gym_conversion_exampl": [136, 138], "info_dict_read": [137, 157, 188], "ignore_priv": [137, 188], "baseinfodictread": [137, 188], "tensordictprim": [137, 157, 188, 281, 298, 302, 361, 459, 467], "succe": [137, 157, 188], "underscor": [137, 188], "primer": [137, 186, 188, 192, 258, 281, 298, 302, 361, 467], "halfcheetah": [137, 157, 188, 208, 247, 464, 484], "reward_ctrl": [137, 157, 188], "reward_run": [137, 157, 188], "x_posit": [137, 157, 188], "x_veloc": [137, 157, 188], "raise_if_clos": [137, 188], "fast_encod": [137, 188], "memoize_cach": [137, 188], "adaptive_autorang": [137, 188], "4f": [137, 188, 466, 467, 480], "fp": [137, 188, 422, 427, 429], "10141": [137, 188], "5742fp": [137, 188], "10576": [137, 188], "8388fp": [137, 188], "read_act": [137, 188], "read_don": [137, 188], "nonsens": [137, 188], "fallback": [137, 188], "read_ob": [137, 188], "dictat": [137, 188, 236, 350, 354, 384, 464, 480], "read_reward": [137, 188], "hoc": [137, 157, 188, 470], "dict_read": [137, 188], "my_info_kei": [137, 188], "some_env": [137, 188], "vecenv": 138, "vectorenv": 138, "convert_actions_to_numpi": 138, "missing_obs_valu": [138, 271], "vecgymenvtransform": 138, "secur": [139, 476], "habitat3": 139, "ai": [139, 481], "habitatrenderpick": 139, "isaacgym": [140, 141], "isaacgymwrapp": [140, 456], "isaacgymenv": [141, 456], "webpag": 141, "isaac": [141, 142], "essenc": [141, 469], "scripts_isaaclab": 142, "managerbasedrlenv": 142, "app": 142, "applaunch": 142, "argpars": [142, 451, 454], "parser": [142, 182, 451, 454], "argumentpars": 142, "add_app_launcher_arg": 142, "args_cli": 142, "hydra_arg": 142, "parse_known_arg": 142, "app_launch": 142, "isaaclab_task": 142, "f401": 142, "manager_bas": 142, "ant_env_cfg": 142, "antenvcfg": 142, "isaac_lab": 142, "cfg": [142, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454], "instadeepai": [143, 144], "2306": [143, 144, 273], "09884": [143, 144], "snake": [143, 144, 180], "grid": [143, 144, 422], "bodi": [143, 144], "body_st": [143, 144], "fruit_posit": [143, 144], "col": [143, 144], "head_posit": [143, 144], "tail": [143, 144], "game2048": [143, 144], "maze": [143, 144], "cleaner": [143, 144], "cvrp": [143, 144], "multicvrp": [143, 144], "minesweep": [143, 144], "rubikscub": [143, 144], "knapsack": [143, 144], "sudoku": [143, 144], "tsp": [143, 144], "connector": [143, 144], "v2": [143, 144, 164, 165, 393, 411, 412, 413, 414, 416, 417, 418, 419, 467], "mmst": [143, 144], "graphcolor": [143, 144], "partli": [143, 144], "scrambl": [143, 144], "robotwarehous": [143, 144], "tetri": [143, 144], "binpack": [143, 144], "jobshop": [143, 144], "0x1fca91910": 143, "122": [143, 144, 485], "0x1ff9baee0": 143, "134": [143, 144], "0x1ff9ba7c0": 143, "172": [143, 144], "jit": 144, "eager": 144, "tdreset": [144, 275, 477], "whichev": 144, "overview": [145, 187, 466, 468, 471, 478, 479, 484], "vocab_s": [145, 186, 187], "hashing_modul": [145, 187], "text_output": [145, 187], "decod": [145, 187, 201, 313, 333, 337], "batch_decod": [145, 187], "text_kei": [145, 187], "gpt2token": [145, 187], "make_tensordict": [145, 187], "mo": [146, 147], "minecart": [146, 147], "mo_gym": [147, 236], "qualnam": 148, "neural": [148, 159, 160, 282, 283, 316, 318, 324, 353, 402, 459, 465, 466, 467, 470, 478, 479, 480, 485], "group_map": [148, 149, 150, 155, 156, 159, 160, 169, 170, 171, 172, 174, 478], "constructiuon": [148, 159, 160], "premad": [148, 149, 150, 159, 160, 171, 172, 400], "all_in_one_group": [148, 155, 156, 174], "agent_0": [148, 159, 160, 169, 174, 255], "agent_1": [148, 159, 160, 169, 174, 255], "agent_2": [148, 159, 160, 169, 174], "agent_3": [148, 169], "one_group_per_ag": [148, 159, 160], "meltingpot": [149, 150], "2211": [149, 150], "13746": [149, 150], "melt": [149, 150], "pot": [149, 150], "novel": [149, 150, 471], "social": [149, 150], "familiar": [149, 150, 465, 476, 479, 485], "unfamiliar": [149, 150], "broad": [149, 150], "cooper": [149, 150, 478, 479], "decept": [149, 150], "reciproc": [149, 150], "stubborn": [149, 150], "substrat": [149, 150], "ml_collect": 149, "config_dict": 149, "configdict": 149, "categorical_act": [149, 150, 155, 156, 159, 160, 164, 165, 169, 170, 171, 172], "marlgroupmaptyp": [149, 150, 155, 156, 159, 160, 169, 170, 171, 172, 174, 456, 478], "agent_nam": [149, 150, 171, 172, 174], "agent_names_to_indices_map": [149, 150, 171, 172], "env_torchrl": [149, 150], "commons_harvest__open": [149, 150], "rgb": [149, 150], "144": [149, 150], "192": [149, 150], "collective_reward": [149, 150], "ready_to_shoot": [149, 150], "88": [149, 150, 164, 165], "substrate_config": 150, "get_config": 150, "mp_env": 150, "build_from_config": 150, "default_player_rol": 150, "mymbenv": [151, 279, 305], "world_model": [151, 279, 305, 376], "hidden_observ": [151, 279, 305], "mlp": [151, 279, 282, 283, 285, 286, 287, 288, 294, 298, 302, 305, 309, 310, 342, 346, 361, 369, 371, 459, 465, 468, 470, 471, 474, 477, 481, 484], "worldmodelwrapp": [151, 279, 305], "activation_class": [151, 279, 282, 283, 285, 286, 287, 288, 293, 294, 303, 305, 308, 309, 465, 470, 478, 479, 484], "activate_last_lay": [151, 279, 288, 303, 305], "sail": [152, 153], "sg": [152, 153], "2206": [152, 153], "10558": [152, 153], "readthedoc": [152, 155, 156], "en": [152, 155, 156], "python_interfac": 152, "envpoolmixin": 153, "env_bas": 153, "task_id": 153, "env_typ": 153, "gym_reset_return_info": 153, "envpool_env": 153, "www": [154, 306, 307], "fetch_openml": 154, "adult_num": 154, "adult_onehot": 154, "mushroom_num": 154, "mushroom_onehot": 154, "covertyp": 154, "shuttl": 154, "magic": [154, 468, 469], "106": 154, "openspiel": [155, 156], "open_spiel": [155, 156], "game_str": 155, "return_st": [155, 156, 159, 160], "4672": [155, 156], "current_play": [155, 156], "674": 155, "2048": [155, 156], "add_nois": [155, 156], "amazon": [155, 156], "backgammon": [155, 156], "restor": [155, 156], "td_restor": [155, 156], "pyspiel": 156, "load_gam": 156, "new_initial_st": 156, "3009": 156, "my_env_fun": [157, 166], "custom_attribute_list": [157, 166], "custom_attribut": [157, 166], "custom_method_list": [157, 166], "custom_method": [157, 166], "deploi": [157, 166, 212, 468], "slight": [157, 166, 465], "share_individual_td": [157, 166], "shared_memori": [157, 166], "policy_proof": [157, 166], "ll": [157, 166, 220, 296, 297, 300, 301, 464, 465, 466, 467, 469, 470, 471, 472, 474, 476, 479, 485], "hidden": [157, 166, 214, 285, 293, 296, 297, 298, 300, 301, 302, 313, 314, 322, 323, 342, 343, 344, 345, 353, 356, 366, 381, 384, 459, 467, 477, 484], "serial_for_singl": [157, 166, 465], "circular": [157, 166, 464], "list_of_kwarg": [157, 166], "com_veloc": [157, 166], "head_height": [157, 166], "joint_angl": [157, 166], "torso_vert": [157, 166], "idl": 157, "batched_pipe_timeout": 157, "stringent": [157, 466, 478, 479], "penv": [157, 263], "env_fix": 157, "influenc": 157, "myenv": [157, 212, 223, 226], "update_kwarg": [157, 166], "th": [158, 230, 267, 296, 300, 480], "thdot": [158, 480], "max_spe": [158, 480], "max_torqu": [158, 480], "gen_param": [158, 480], "gravit": [158, 480], "torqu": [158, 480], "pettingzoo": [159, 160, 478, 479], "pet": [159, 160], "zoo": [159, 160], "__": [159, 160], "aecenv": [159, 160], "dead": [159, 160], "done_on_ani": [159, 160, 478], "compulsori": [159, 160], "adversary_0": [159, 160], "adversari": [159, 160, 378, 478], "sisl": 159, "multiwalker_v9": 159, "aec": [159, 160], "n_piston": [159, 160], "pistonball_v6": [159, 160], "piston": [159, 160], "piston_0": [159, 160], "piston_1": [159, 160], "piston_20": [159, 160], "tictactoe_v3": [159, 160], "player": [159, 160, 168], "player_1": [159, 160], "player_2": [159, 160], "butterfli": 160, "parallel_env": [160, 464, 484, 485], "_setup": [161, 167], "async_reset_send": [161, 167], "async_reset_recv": [161, 167], "cube": 162, "roboh": 163, "expos": [163, 223, 226, 355, 465], "vikashplu": 163, "wiki": 163, "2310": 163, "06828": 163, "from_depth": 163, "smacv2": [164, 165], "starcraft": [164, 165], "challeng": [164, 165, 469, 480, 481], "10gen_terran": [164, 165], "10gen_zerg": [164, 165], "10gen_protoss": [164, 165], "3m": [164, 165], "8m": [164, 165], "25m": [164, 165], "5m_vs_6m": [164, 165], "8m_vs_9m": [164, 165], "10m_vs_11m": [164, 165], "27m_vs_30m": [164, 165], "mmm": [164, 165], "mmm2": [164, 165], "2s3z": [164, 165], "3s5z": [164, 165], "3s5z_vs_3s6z": [164, 165], "3s_vs_3z": [164, 165], "3s_vs_4z": [164, 165], "3s_vs_5z": [164, 165], "1c3s5z": [164, 165], "2m_vs_1z": [164, 165], "corridor": [164, 165], "6h_vs_8z": [164, 165], "2s_vs_1sc": [164, 165], "so_many_banel": [164, 165], "bane_vs_ban": [164, 165], "2c_vs_64zg": [164, 165], "old": [164, 165, 273, 381, 485], "smac": [164, 165], "map_nam": [164, 165], "176": [164, 165], "battle_won": [164, 165], "dead_al": [164, 165], "dead_enemi": [164, 165], "episode_limit": [164, 165], "322": [164, 165], "procedur": [164, 165], "distribution_config": [164, 165], "n_unit": [164, 165], "n_enemi": [164, 165], "team_gen": [164, 165], "dist_typ": [164, 165], "weighted_team": [164, 165], "unit_typ": [164, 165], "marin": [164, 165], "maraud": [164, 165], "medivac": [164, 165], "exception_unit_typ": [164, 165], "start_posit": [164, 165], "surrounded_and_reflect": [164, 165], "map_x": [164, 165], "map_i": [164, 165], "capability_config": [164, 165], "131": [164, 165], "starcraft2env": 165, "tic": 168, "tac": 168, "toe": 168, "single_play": 168, "player1": 168, "desired_batch_s": 168, "player0": 168, "uniti": [169, 170], "ml": [169, 170], "technolog": [169, 170], "llapi": [169, 170], "mlagents_env": [169, 170], "unityenviron": [169, 170], "file_nam": 169, "registered_nam": 169, "nor": 169, "localhost": [169, 335], "connect": 169, "3dball": 169, "group_0": 169, "vectorsensor_size8": 169, "continuous_act": [169, 171, 172, 420, 478, 479], "agent_10": 169, "agent_11": 169, "agent_4": 169, "agent_5": 169, "agent_6": 169, "agent_7": 169, "agent_8": 169, "agent_9": 169, "group_reward": 169, "proroklab": [171, 172], "vectorizedmultiagentsimul": [171, 172], "2207": [171, 172], "03530": [171, 172], "basescenario": 171, "defaultt": 171, "chosen": [171, 172, 257, 258, 320, 321, 329, 352, 422, 459, 473], "sparsiti": 171, "unbatched_action_spec": [171, 172], "unbatched_observation_spec": [171, 172], "unbatched_reward_spec": [171, 172], "het_spec": [171, 172], "het_specs_map": [171, 172], "flock": [171, 172, 420], "agent_collision_rew": [171, 172], "agent_distance_rew": [171, 172], "ca": 174, "environment4": 174, "get_group_map": 174, "sumbodul": 177, "histori": [178, 179, 180, 183, 186, 191, 194, 195, 456, 458, 476], "assist": [178, 180, 183, 194, 195, 458, 467, 476], "answer": [178, 180, 182, 183, 476], "hopefulli": [178, 465], "system_prompt": [178, 194, 195, 458, 476], "apply_templ": [178, 179, 180, 183, 194, 195, 476], "pars": [178, 182, 196, 458, 476, 482], "template_kwarg": [178, 179, 180, 183], "system_rol": [178, 458], "user_rol": [178, 458], "datasetchatenv": [178, 458], "gsm8kenv": [178, 179, 182, 189, 458], "ifevalenv": [178, 179], "pprint": [178, 183, 458], "qwen": [178, 180, 183, 194, 195, 458, 476], "qwen2": [178, 180, 183, 194, 195, 458, 476], "3b": [178, 180, 183, 194, 195], "im_start": [178, 180, 183, 194, 195, 458], "ni": 178, "im_end": [178, 180, 194, 195, 458, 476], "td_action": 178, "td_next": 178, "nthi": 178, "rlvr": 179, "verifi": 179, "batch_size_dl": [179, 180, 183, 189], "thin": [179, 188, 332, 460], "chatenv": [179, 188, 194, 195, 458, 476], "bucket": 179, "dataloadingprim": [179, 186, 258, 458], "set_missing_toler": [179, 180, 183, 265], "gsm8k": [180, 181, 189], "compute_reward": [180, 183], "question": [180, 183, 476, 482, 484], "adam": [180, 318, 327, 464, 465, 466, 467, 468, 471, 474, 478, 479, 480], "bought": 180, "sandwich": 180, "he": 180, "paid": 180, "breed": 180, "mari": 180, "saw": [180, 473, 480, 482], "reward_answ": [180, 182], "reward_contain": [180, 182], "reward_right": [180, 182], "reward_think": [180, 182], "snak": 180, "transformthatmeasuresbyt": [181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399], "bytes_in_td": [181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 209, 211, 212, 214, 215, 216, 219, 220, 221, 224, 227, 228, 229, 231, 234, 235, 242, 244, 245, 246, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 269, 271, 272, 275, 399], "transform_done_spec": [181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 224, 255, 262, 264, 266, 275, 399], "transform_env_batch_s": [181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 212, 219, 264, 275, 399], "transform_env_devic": [181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 219, 224, 264, 275, 399], "transform_full_done_spec": [181, 182, 185, 191, 192, 193, 194, 195, 196, 197, 212, 219, 223, 224, 228, 235, 237, 245, 246, 252, 256, 262, 264, 266, 273, 275, 399], "make_gsm8k_env": [182, 458], "asssoci": 182, "extract_tag": 182, "xml": 182, "ifev": [183, 185], "nyou": 183, "instruction_id_list": [183, 185], "detectable_cont": 183, "number_placehold": 183, "num_highlight": 183, "num_": 183, "respond": 183, "plan": [183, 279, 304, 305], "week": 183, "europ": 183, "trip": 183, "london": 183, "pari": [183, 476], "rome": 183, "cap": [183, 466, 482], "restaur": 183, "prompt_level_strict_acc": 184, "inst_level_strict_acc": 184, "prompt_level_loose_acc": 184, "inst_level_loose_acc": 184, "instruction_ids_kei": 185, "prompt_kei": [185, 399], "keyword_args_kei": 185, "id_kei": 185, "response_column": 185, "score_kei": 185, "ifeval_scor": 185, "aggregate_reward": 185, "ifevalscoredata": 185, "scorer": 185, "IF": 185, "column": 185, "langdetect": 185, "nltk": 185, "immutabledict": 185, "cot": 186, "token_kei": 186, "str_kei": 186, "attention_kei": 186, "assign_reward": 186, "has_attent": 186, "assign_don": 186, "batchless": 186, "eos_token_id": 186, "pretrainedtokenizerbas": [186, 197, 262], "stack_method": [186, 192], "as_nested_tensor": [186, 192], "as_padded_tensor": [186, 192], "data_kei": 186, "bert": [186, 197, 262], "uncas": [186, 197, 262], "tokens_in": 186, "tokens_out": 186, "mlgym": [188, 190], "get_library_nam": 188, "prisonersdilemma": 190, "reward_wrong_format": 190, "mlgymenv": 190, "wrongli": 190, "allowed_domain": [191, 476], "tool_nam": [191, 194, 195], "web": [191, 468, 476], "brows": [191, 476], "browser": [191, 476], "click": [191, 476], "llm_tool": 191, "clean": 191, "mappabl": 192, "maybe_dense_stack": 192, "unrel": 192, "endless_dataload": 192, "set_capture_non_tensor_stack": 192, "dummydataload": 192, "generate_random_str": 192, "ascii_lowercas": 192, "__iter__": 192, "__next__": 192, "zxwvupirska": 192, "stringa": 192, "zxwvupirsk": 192, "roll": 192, "init_st": 192, "nngcmflsana": 192, "vrrbnhzpmga": 192, "nngcmflsan": 192, "vrrb": 192, "dummytensordataload": 192, "generate_random_tensor": 192, "pad_tensor": 192, "padding_length": 192, "data_spec": 192, "log_prob_kei": [193, 235, 354, 460], "add_to_reward": 193, "pi_curr": [193, 235], "pi_0": [193, 235], "overfit": [193, 235], "probabilist": [193, 235, 350, 364, 384, 456, 466, 484], "get_dist": [193, 235, 354, 355], "kl_penalti": 193, "ref_log_prob": 193, "formula": [193, 235, 299, 327, 328, 364, 366, 381, 384, 397, 460, 466], "tool_schema": 194, "mcp": 194, "protocol": 194, "pattern": 194, "schema": 194, "add_numb": 194, "add_schema": 194, "successfulli": [194, 195, 458, 476], "nprint": 195, "use_raw_nontensor": [197, 233, 262, 266], "additional_token": [197, 262], "skip_special_token": [197, 262], "add_special_token": [197, 262], "return_attention_mask": [197, 262], "missing_toler": [197, 262], "call_before_reset": [197, 262], "test_input_spec": [197, 266], "list_of_tensordict": [198, 199], "unsqueeze_null_shap": 200, "dynamic_shap": 200, "model_bas": [201, 202, 279, 305], "model_based_env": [201, 375], "dreamerenv": [201, 375, 456], "model_based_env_ev": 201, "spec_typ": 203, "convert_specnam": 203, "remap_state_to_observ": 203, "spectyp": 203, "unus": 203, "probabilistictdmodul": [204, 303, 350, 354, 401, 435], "keep_oth": [206, 480], "exclude_reward": 206, "exclude_don": 206, "next_": 206, "write_full_fals": 207, "_terminated_or_trunc": 207, "num_interv": 208, "out_action_kei": 208, "samplingstrategi": 208, "optino": 208, "intenum": 208, "action_disc": 208, "masker": 209, "maskedenv": 209, "ones_lik": [209, 306], "scatter": 209, "fill_float": 211, "fill_int": 211, "fill_bool": 211, "someenvclass": 211, "autoresetenv": 211, "fooenv": 211, "sign": [211, 253, 402, 478], "envtyp": 211, "reshape_fn": [212, 468], "reset_func": 212, "env_kwarg": [212, 452, 453, 464], "accompani": [212, 256], "tensordict_batch_s": 212, "tensordict_reset": [212, 480], "biner": 213, "burn_in": 214, "burn": 214, "burnt": 214, "gru_modul": [214, 298, 361], "input_s": [214, 258, 296, 297, 298, 300, 301, 302, 361, 467, 468], "hidden_s": [214, 258, 296, 297, 298, 300, 301, 302, 361, 467, 468], "default_recurrent_mod": [214, 298, 302], "burn_in_transform": 214, "gru": [214, 258, 297, 298, 361, 468], "num_lay": [214, 296, 298, 300, 302, 313, 314, 361, 468], "is_init": [214, 234, 298, 302, 319, 349, 361, 402, 467, 468], "86": 214, "3008": 214, "0344": 214, "padding_valu": [215, 306, 307], "as_invers": 215, "movement": 215, "1312": 215, "5602": 215, "consumpt": [215, 456], "pictur": 215, "pixels_trsf": [215, 482], "grayscal": [215, 465, 467, 468, 482, 485], "data_exclud": [215, 482], "make_rb_transform_and_sampl": 215, "sampler_kwarg": 215, "redund": [215, 467], "del_kei": [216, 255, 268, 477, 480], "unsqueeze_if_oor": 216, "observation_posit": 216, "observation_veloc": 216, "delet": [216, 255, 429], "crop": [217, 244, 422], "center": [217, 318, 422], "width": [217, 222, 247], "height": [217, 222, 247], "squar": [217, 222, 299, 327, 328, 422, 458], "scalar": [218, 249, 277, 286, 288, 295, 311, 312, 319, 360, 364, 365, 366, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 397, 400, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 459, 465, 471, 480], "rewardsc": [219, 265, 464, 465, 467], "rewardclip": 219, "transformed_env": [219, 265, 469], "condition": 220, "switch": [220, 265, 273, 299, 328, 420], "met": [220, 221, 363, 478, 480], "unalt": 220, "criteria": 220, "policy_switch": 220, "cond": [220, 221], "step_count_kei": [220, 221, 256], "step_count_tot": 220, "step_count_main": 220, "0322": 220, "1540": 220, "0111": 220, "3190": 220, "0299": 220, "1544": 220, "0181": 220, "3280": 220, "0276": 220, "1550": 220, "0255": 220, "3414": 220, "0253": 220, "1558": 220, "0334": 220, "3596": 220, "0230": 220, "1569": 220, "0422": 220, "3828": 220, "0206": 220, "1582": 220, "0519": 220, "4117": 220, "1598": 220, "0629": 220, "4469": 220, "0156": 220, "1617": 220, "0753": 220, "4891": 220, "0130": 220, "1639": 220, "0895": 220, "5394": 220, "0104": 220, "1665": 220, "1058": 220, "5987": 220, "0076": 220, "1696": 220, "1246": 220, "6685": 220, "0047": 220, "1732": 220, "1463": 220, "7504": 220, "0016": 220, "1774": 220, "1715": 220, "8459": 220, "0020": 220, "0150": 220, "1884": 220, "6117": 220, "0017": 220, "2071": 220, "3838": 220, "0105": 220, "2115": 220, "5110": 220, "25": [220, 464], "altogeth": 221, "exectu": 221, "palliat": [221, 470], "inner_count": 221, "middle_env": 221, "middle_count": 221, "auto_unwrap": [221, 265, 430], "9670": 221, "2546": 221, "9669": 221, "9802": 221, "1981": 221, "1601": 221, "9926": 221, "1214": 221, "5556": 221, "9994": 221, "7622": 221, "9984": 221, "0561": 221, "7933": 221, "9895": 221, "1445": 221, "7779": 221, "dtype_in": 223, "dtype_out": 223, "scan": [223, 226, 355, 356], "resp": [223, 226], "not_transform": [223, 226], "orig_devic": 224, "unspecifi": 224, "num_actions_effect": 225, "max_act": 225, "include_forward": 225, "num_act": [225, 283, 373, 468, 470], "action_out": 225, "eol_kei": 227, "lives_kei": 227, "eol_attribut": 227, "breakout": 227, "210": [227, 241], "160": [227, 241], "eol_transform": 227, "eol": 227, "dqnloss": [227, 364, 365, 367, 368, 371, 373, 374, 375, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 397, 400, 447, 456, 460, 465, 467, 468, 474], "register_kei": 227, "loss_or_advantag": 227, "lossmodul": [227, 440, 449, 450, 456, 460], "valueestimatorbas": [227, 382, 397, 456], "finit": [229, 318, 470, 482], "first_dim": 230, "last_dim": 230, "allow_positive_dim": [230, 255, 267], "frameskip": 230, "repeatedli": [231, 466, 479], "hash_fn": 233, "repertoir": 233, "reproducible_hash": 233, "unarytransform": 233, "observation_str": 233, "tobyt": [233, 266], "observation_hash": 233, "x08": 233, "x8b": 233, "xbexav": 233, "xbf": 233, "x00": 233, "xee": 233, "xb5": 233, "x17": 233, "x8f": 233, "xbe": [233, 266], "x88": 233, "xccu": 233, "xc0vr": 233, "get_input_from_hash": 233, "hash_tensor": 233, "init_kei": [234, 349], "tracker": 234, "normalparamextractor": [235, 342, 343, 344, 350, 356, 364, 365, 367, 373, 380, 384, 385, 386, 387, 389, 390, 459, 466, 470, 479, 484], "probabilisticactor": [235, 342, 343, 344, 345, 364, 365, 367, 370, 372, 373, 380, 383, 384, 385, 386, 387, 389, 390, 459, 464, 466, 470, 478, 479], "tanhnorm": [235, 342, 343, 344, 350, 356, 364, 365, 367, 380, 384, 385, 386, 387, 389, 390, 456, 466, 479, 484], "return_log_prob": [235, 333, 337, 342, 343, 344, 350, 354, 356, 386, 459, 466, 470, 478, 479, 484], "apply_": 235, "copy_": [235, 464], "mogymwrapp": [236, 456], "mo_env": 236, "sea": 236, "treasur": 236, "so_env": 236, "stack_reward": 237, "stack_observ": 237, "auto_batch_size_": 237, "macro": [237, 349], "noop": 238, "trial": 238, "standard_norm": [239, 250, 272, 273, 464, 465, 467], "affin": [239, 250, 272, 273], "layer": [239, 272, 278, 282, 283, 285, 286, 291, 293, 296, 297, 298, 300, 301, 302, 303, 308, 309, 311, 312, 313, 314, 324, 325, 339, 348, 357, 459, 465, 466, 467, 468, 470, 478, 481], "epsilon": [239, 277, 295, 319, 388, 438, 465, 466, 467, 470], "recover": 239, "set_default_tensor_typ": 239, "doubletensor": 239, "isclos": 239, "next_ob": [239, 402, 403, 404, 405, 484], "init_stat": [239, 464, 465, 466, 467], "3752e": 239, "5087e": 239, "9294e": 239, "9636": 239, "5608": 239, "6408": 239, "num_it": [239, 465, 466], "reduce_dim": [239, 464, 465, 466, 467], "cat_dim": [239, 464, 465, 466, 467], "keep_dim": [239, 349, 465, 467], "statist": [239, 272, 273, 278, 386, 454, 464, 465, 466, 485], "gaussian": [239, 258, 277, 279, 305, 311, 312, 317, 466, 468, 478], "empir": [239, 279, 305, 350, 354, 464, 466, 479], "3d": [239, 282], "reorder": 241, "in_keys_in": [241, 267], "channel": [241, 261, 308, 313, 314, 465], "r3m": [243, 481], "resnet": [243, 268, 270], "ego4d": [243, 268, 270], "univers": [243, 268, 270, 469], "suraj": [243, 268], "nair": [243, 268], "aravind": [243, 268], "rajeswaran": [243, 268], "vikash": [243, 268, 270], "kumar": [243, 268, 270], "chelsea": [243, 268], "finn": [243, 268], "abhinav": [243, 268], "gupta": [243, 268], "2203": [243, 268, 305, 481], "12601": [243, 268, 481], "_init": [243, 268, 464], "resnet50": [243, 270, 481], "model_nam": [243, 268, 270, 334, 425], "resnet34": 243, "resnet18": 243, "r3m_vec": [243, 481], "stack_imag": [243, 270], "tread": [243, 270], "hub": [243, 270, 469], "resnet50_weight": [243, 270], "imagenet1k_v1": [243, 270], "download_path": [243, 270], "tensor_pixels_kei": [243, 270], "sub_seq_len": 244, "sample_dim": [244, 464], "hesit": 244, "robust": [244, 278], "mix": [244, 320, 329, 400, 464, 478, 479], "improp": 244, "dummyenv": 245, "another_oth": 245, "other_reward": 245, "create_copi": 246, "stuff": [246, 472], "newnam": 246, "r2g": 248, "reward_to_go": 248, "bernoulli_": 248, "9010": 248, "9404": [248, 408], "9701": [248, 408], "9900": [248, 408], "0000": [248, 259, 260, 295, 318, 357, 408], "clamp_min": 249, "clamp_max": 249, "clip_min": 249, "clip_max": 249, "episode_": 251, "reward1": 251, "reward2": 251, "episode_reward": [251, 478, 479], "keep_reward": 252, "keep_don": 252, "logical_or": 253, "in_key_inv": 255, "unstack": 255, "update_don": 256, "disjunct": 256, "recognis": 256, "target_return": 257, "default_valu": [258, 361], "expand_spec": 258, "single_default_valu": 258, "call_before_env_reset": 258, "unit": [258, 279, 293, 296, 297, 313, 314, 322, 323, 466], "scala": 258, "mykei": 258, "__unless": 258, "exists__": 258, "get_primers_from_modul": [258, 281, 298, 302, 456], "recurrent_st": [258, 298, 302, 361, 467], "10th": 259, "0216": 259, "1149": 259, "1990": 259, "2749": 259, "3281": 259, "9290": 259, "3702": 259, "8978": 259, "time_kei": 260, "elaps": [260, 473], "monitor": [260, 469], "expend": 260, "_polici": 260, "time_reset": 260, "time_polici": 260, "time_step": [260, 301, 349], "0882": 260, "0002": 260, "5797e": 260, "6289e": 260, "7990e": 260, "0824e": 260, "0837e": 260, "6056e": 260, "2016e": 260, "1062e": 260, "7009e": 260, "from_int": 261, "shape_toler": 261, "ri": 261, "traj_count": 263, "traj": 263, "countingenv": 263, "make_env_c0": 263, "make_env_c1": 263, "set_contain": 264, "reset_par": 264, "smoothli": [265, 278], "add_1": 265, "cache_spec": 265, "inv_fn": 266, "unari": 266, "durin": 266, "ommit": 266, "observation_trsf": 266, "xbc": 266, "x7f": 266, "x859": 266, "x81": 266, "x9a": 266, "xbd": 266, "xb8t8": 266, "test_output_spec": 266, "danger": 267, "vc1": 268, "vc1_vec": 268, "untrain": 268, "make_noload_model": 268, "vip": [269, 270, 481], "implicit": [270, 372, 380, 482], "jason": 270, "ma": 270, "shagun": 270, "sodhani": 270, "dinesh": 270, "jayaraman": 270, "osbert": 270, "bastani": 270, "ami": 270, "zhang": 270, "vip_vec": 270, "final_nam": 271, "sb3": 271, "terminal_obs_read": 271, "vecnormv2": 272, "new_api": [272, 273], "to_observation_norm": [272, 273], "frozen_copi": [272, 273], "shared_td": 272, "race": 272, "decai": [272, 273, 277, 295, 388, 438, 464, 465, 467, 485], "underflow": [272, 438], "build_td_for_shared_vecnorm": 272, "memmori": 272, "td_share": 272, "v": [272, 296, 297, 300, 301, 342, 372, 380, 387, 464, 465], "unfreez": [272, 273], "observationnorm": [272, 273, 454, 464, 465, 466, 467, 484], "train_env": 272, "eval_env": 272, "9999": 273, "0001": [273, 293], "shared_data": 273, "reduce_batch_dim": 273, "varianc": [273, 278, 279, 280, 299, 327, 328, 460, 464, 466, 479], "vs": [273, 276], "weigh": 273, "_cast_int_to_float": 273, "env_trsf": 273, "observation_norm": 273, "reward_norm": [273, 438], "unnorm": [273, 306, 307, 315], "7967": 273, "1238": 273, "5911": 273, "5275": 273, "8585": 273, "5028": 273, "2505": 273, "3169": [273, 357], "1332": 273, "1235": 273, "6596e": 273, "3072e": 273, "9170e": 273, "9255e": 273, "9131e": 273, "4671e": 273, "3760e": 273, "2058e": 273, "3484e": 273, "6185e": 273, "1456": 273, "1862": 273, "2053": 273, "2605": 273, "4046": 273, "5185": 273, "8023": 273, "1364": 273, "6183": 273, "5406": 273, "0920": 273, "1492": 273, "2702": 273, "3917": 273, "5001": 273, "7947": 273, "0160": 273, "3347": 273, "9082": 273, "9679": 273, "2199": 273, "2918": 273, "1668": 273, "2083": 273, "4981": 273, "5046": 273, "7950": 273, "9791": 273, "1484": 273, "4182": 273, "2201": 273, "0403": 273, "5206": 273, "7791": 273, "8282": 273, "2279": 273, "2907": 273, "4929": 273, "7793": 273, "8626": 273, "1832": 273, "local_env": 273, "testifi": 273, "4307": 273, "9613": 273, "state_dim": [274, 284, 289, 317, 322, 323, 345], "action_dim": [274, 284, 285, 287, 289, 317, 345, 464, 477], "gsde": [274, 385, 454], "gsdemodul": 274, "rb_transform": 275, "resist": 275, "insensit": 275, "sensit": [275, 465, 467], "_orig": 275, "95": [275, 305, 392, 466, 467], "window": [275, 349, 478, 482, 484], "module_nam": [276, 382, 397], "from_vers": 276, "to_vers": 276, "class_method": 276, "import_modul": 276, "get_class_that_defined_method": 276, "module_set": 276, "setters_dict": 276, "setter": 276, "setter_dict": 276, "po": 277, "sigma_init": [277, 478], "sigma_end": [277, 478], "annealing_num_step": [277, 295, 319, 464, 465, 467, 468, 470, 474, 478], "sigma": [277, 296, 297, 299, 300, 301, 319, 327, 328, 466, 478], "omiss": [277, 295, 319], "momentum": 278, "max_r": 278, "max_d": 278, "warmup_step": 278, "batchrenorm": 278, "1702": 278, "03275": 278, "corenet": 278, "enhanc": 278, "warmup": 278, "phase": [278, 280, 479, 482], "outlier": 278, "period": 278, "warm": 278, "renorm": 278, "entropi": [279, 315, 364, 365, 366, 367, 372, 373, 380, 381, 383, 384, 385, 387, 389, 390, 397, 398, 479], "botev": 279, "2013": 279, "cem": 279, "k": [279, 281, 296, 297, 300, 301, 333, 337], "maximis": [279, 285, 287, 305, 465, 466, 479], "modelbasedenv": [279, 305], "planning_horizon": [279, 305], "mpc": [279, 304, 305], "num_candid": [279, 305], "candid": [279, 305], "top_k": [279, 305], "modelbasedenvbas": [279, 304, 305, 456], "safemodul": [279, 304, 342, 344, 354, 364, 365, 367, 372, 373, 380, 384, 385, 386, 387, 389, 390, 445, 446, 450, 456, 484], "hausknecht": 280, "wagen": 280, "reus": [280, 285, 429], "consistentdropoutmodul": [280, 459], "capit": [280, 476], "conceptu": 280, "devianc": 280, "set_exploration_typ": [280, 382, 435, 456, 459, 466, 467, 468, 470, 478, 484], "_main_async_collector": 280, "asyncdatacollector": [280, 456], "ditto": 280, "consistentdropout": 281, "input_shap": 281, "batcht": 281, "make_tensordict_prim": [281, 298, 302, 467], "input_dtyp": 281, "get_default_dtyp": [281, 438], "mask_6127171760": 281, "env0": [281, 485], "num_cel": [282, 283, 285, 286, 287, 288, 293, 294, 298, 302, 303, 308, 309, 342, 361, 465, 466, 467, 468, 470, 471, 474, 478, 479, 484], "elu": [282, 283, 285, 286, 287, 288, 293, 294, 308, 465, 484], "activation_kwarg": [282, 283, 303], "norm_class": [282, 283, 285, 286, 303], "norm_kwarg": [282, 283, 303], "bias_last_lay": [282, 283, 285, 286, 287, 288, 294, 303], "aggregator_class": [282, 283, 285, 286, 465, 467, 484], "squashdim": [282, 283, 285, 294, 308, 484], "aggregator_kwarg": [282, 283, 285, 286, 465, 467], "squeeze_output": [282, 283, 285, 286, 465, 467], "convolut": [282, 283, 285, 286, 308, 324, 468, 470], "cell": [282, 283, 296, 297, 298, 300, 301, 302, 303, 308, 309, 466, 468, 469, 470, 471, 472, 473, 474], "kernel": [282, 283, 308], "cnet": [282, 283], "conv3d": 282, "rectangular": [282, 283], "lazyconv2d": [283, 285, 286, 294, 308], "default_atari_dqn": [283, 468], "semin": 283, "transformer_config": [284, 317, 345], "decisiontransform": [284, 317], "dtconfig": [284, 289, 317], "2202": [284, 289, 383], "05607": [284, 289, 383], "return_to_go": [284, 289, 317, 345], "conv_net_kwarg": [285, 286], "mlp_net_kwarg": [285, 286, 287], "use_avg_pool": [285, 286], "WITH": [285, 286, 287, 288, 319, 388], "1509": [285, 286, 287, 288, 305, 319, 369, 379, 388], "02971": [285, 286, 287, 288, 319, 388], "convnet": [285, 286, 294, 308, 467, 468, 470, 484], "ndims_in": 285, "avgpool": [285, 286], "lazylinear": [285, 286, 287, 288, 294, 303, 459, 466, 470, 480, 481], "2304": 285, "adaptiveavgpool2d": [286, 465, 467], "output_s": [286, 465, 467], "squeeze2dlay": 286, "400": [287, 288, 479], "mlp_net_kwargs_net1": 288, "mlp_net_kwargs_net2": 288, "mlp1": 288, "mlp2": 288, "desdescrib": 289, "n_embd": 289, "n_layer": [289, 296, 300], "n_head": 289, "n_inner": 289, "n_posit": 289, "resid_pdrop": 289, "attn_pdrop": 289, "gpt2config": 289, "atol": [290, 326], "rtol": [290, 326], "batch_shap": [290, 315, 326], "event_shap": [290, 326], "absolut": [290, 326, 464], "_instanc": 290, "densiti": [290, 306, 307, 315, 328], "mass": [290, 306, 307, 315, 328, 480], "rsampl": [290, 307, 315, 354], "sample_shap": [290, 306, 307, 315], "softmax": [291, 307, 315, 346, 347], "var_num": [292, 321, 346, 347, 352], "action_value_kei": [292, 321, 346, 347, 351, 352, 367, 382, 397, 400], "action_mask_kei": [292, 295, 321, 346, 347, 351, 352], "1707": [292, 347, 374, 384], "06887": [292, 347, 374], "mult": [292, 309, 321, 346, 347, 351, 352], "tensordict_modul": [292, 296, 297, 300, 301, 321, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 364, 365, 367, 368, 372, 373, 380, 384, 385, 386, 387, 389, 390, 459], "nbin": [292, 346, 459], "customdistributionalqv": 292, "log_softmax": [292, 346], "qvalue_actor": [292, 321, 346, 351, 459], "to_modul": [292, 353, 356, 464, 484], "std_bia": 293, "std_min_val": 293, "belief": [293, 313, 322, 323], "1912": [293, 375, 376, 377], "01603": [293, 375, 376, 377], "softplu": [293, 360, 362, 363], "out_features_valu": 294, "cnn_kwarg": [294, 465], "mlp_kwarg": [294, 465], "duel": 294, "cnn": [294, 308, 465, 468, 470, 484], "06581": 294, "512": 294, "greedi": [295, 321, 347, 352, 465, 467, 468, 470], "eps_init": [295, 319, 465, 467, 468, 470, 474], "eps_end": [295, 319, 465], "explorative_polici": [295, 319], "9055": 295, "9277": 295, "6295": 295, "2532": 295, "grad_fn": [295, 341, 354], "addbackward0": 295, "batch_first": [296, 300, 467], "bidirect": [296, 300, 467], "cudnn": [296, 297, 298, 300, 301, 302, 467, 468], "rnn": [296, 297, 298, 300, 301, 302, 340, 373, 387, 402, 467, 468, 470], "device_count": [296, 297, 300, 301, 485], "n_in": [296, 297, 300, 301], "n_out": [296, 297, 300, 301], "h0": [296, 297, 300, 301], "h1": [296, 297, 300, 301], "vectoris": [296, 297, 300, 301], "call_gru": [296, 297], "h_out": [296, 297, 300, 301], "batched_cal": [296, 297, 300, 301], "gate": [296, 297, 300], "r_t": 296, "w_": [296, 297, 300, 301], "ir": [296, 297], "x_t": [296, 300], "b_": [296, 297, 300, 301], "hr": [296, 297, 300], "h_": [296, 297, 300], "z_t": 296, "iz": [296, 297], "hz": [296, 297], "n_t": 296, "odot": [296, 297, 300, 301], "hn": [296, 297, 300], "h_t": [296, 300], "sigmoid": [296, 297, 300, 301], "hadamard": [296, 297, 300, 301], "multilay": [296, 300], "_t": [296, 300, 479, 480], "ge": [296, 300], "bernoulli": [296, 300], "b_ih": [296, 297, 300, 301, 302], "b_hh": [296, 297, 300, 301, 302], "h_0": [296, 300, 301], "pack_padded_sequ": [296, 300], "pack_sequ": [296, 300], "num": [296, 300, 474], "_layer": [296, 300], "_size": [296, 297, 300, 301], "h_n": [296, 300], "packedsequ": [296, 300], "weight_ih_l": [296, 300], "learnabl": [296, 297, 300, 301], "w_ir": 296, "w_iz": 296, "w_in": 296, "num_direct": [296, 300], "weight_hh_l": [296, 300], "w_hr": 296, "w_hz": 296, "w_hn": 296, "bias_ih_l": [296, 300], "b_ir": 296, "b_iz": 296, "b_in": 296, "bias_hh_l": [296, 300], "b_hr": 296, "b_hz": 296, "b_hn": 296, "mathcal": [296, 297, 300, 301], "sqrt": [296, 297, 300, 301, 319], "frac": [296, 297, 300, 301, 466], "seq_len": [296, 300], "subtli": 296, "matrix": [296, 300, 311, 312], "hx": [296, 297, 300, 301], "lstmcell": [297, 302, 468], "gru_cel": 297, "weight_ih": [297, 301], "weight_hh": [297, 301], "bias_ih": [297, 301], "bias_hh": [297, 301], "rocm": [297, 301], "embedd": [298, 302], "grucel": [298, 353], "python_bas": [298, 302], "custom_kei": [298, 302], "hasn": [298, 302], "set_recurrent_mod": [298, 302, 467], "recurrent_mod": [298, 302, 340], "rs": [298, 464], "gru_module_train": 298, "policy_train": 298, "traj_td": 298, "make_cudnn_bas": [298, 302], "make_python_bas": [298, 302, 468], "supplementari": [298, 302, 466, 485], "That": [298, 302, 466, 478], "dealt": [298, 302], "poorli": [298, 302], "meth": [298, 302, 382, 480], "data_collector": [298, 302, 465], "upscal": [299, 327, 328], "tanh_loc": [299, 327, 328], "event_dim": [299, 326, 327], "poor": [299, 327, 328], "explos": [299, 327, 328], "proj_siz": 300, "c0": [300, 301], "c1": [300, 301], "call_lstm": [300, 301], "c_out": [300, 301], "i_t": 300, "ii": [300, 301], "hi": [300, 301], "f_t": 300, "hf": [300, 301], "g_t": 300, "ig": [300, 301], "hg": [300, 301], "o_t": 300, "ho": [300, 301], "c_t": 300, "c_": 300, "1402": 300, "1128": 300, "c_0": [300, 301], "proj": 300, "c_n": 300, "w_ii": 300, "w_if": 300, "w_ig": 300, "w_io": 300, "w_hi": 300, "w_hf": 300, "w_hg": 300, "w_ho": 300, "b_ii": 300, "b_if": 300, "b_ig": 300, "b_io": 300, "b_hi": 300, "b_hf": 300, "b_hg": 300, "b_ho": 300, "weight_hr_l": 300, "_revers": 300, "analog": [300, 470], "cn": 300, "lstm_cell": 301, "h_1": 301, "c_1": 301, "cx": 301, "recurrent_state_h": 302, "recurrent_state_c": 302, "triplet": [302, 351, 352], "lstm_modul": 302, "rs_h": 302, "rs_c": 302, "single_bias_last_lay": 303, "layer_class": 303, "layer_kwarg": 303, "perceptron": [303, 470], "noisylinear": [303, 311, 456, 465], "noisylazylinear": [303, 456], "mpcplanner": 304, "tensordict_out": [304, 331, 333, 337, 485], "mppi": 305, "covari": 305, "william": [305, 386], "aldrich": 305, "theodor": 305, "01149": 305, "hansen": 305, "wang": 305, "su": 305, "04955": 305, "valueoper": [305, 342, 343, 344, 364, 365, 366, 367, 368, 373, 380, 381, 384, 385, 386, 387, 389, 390, 450, 459, 464, 466, 471], "tdlambdaestim": [305, 456, 464], "value_net": [305, 369, 371, 386, 402, 403, 404, 405, 466, 468, 470, 471, 474], "adv": 305, "lmbda": [305, 392, 402, 405, 407, 413, 414, 415, 418, 419, 460, 464, 466, 479], "value_network": [305, 368, 369, 371, 372, 374, 380, 387, 402, 403, 404, 405, 460, 464, 466, 468, 471, 474, 478], "temperatur": [305, 333, 337, 365, 372, 380], "neg_inf": [306, 307], "inf": [306, 307], "use_cross_entropi": 306, "api_doc": [306, 307], "tf_agent": [306, 307], "sparse_mask": [306, 307], "cross_entropi": 306, "1203": [306, 307], "0928": [306, 307], "0831": [306, 307], "1972": [306, 307], "grad_method": [307, 315], "reparamgradientstrategi": [307, 315], "passthrough": [307, 315], "relaxedonehot": [307, 315], "sample_non_valid": 307, "zeros_lik": [307, 480], "share_param": [308, 309, 310, 478, 479], "use_td_param": [308, 309, 310], "get_stateful_net": [308, 309, 310, 382, 397, 459, 460], "from_stateful_net": [308, 309, 310, 382, 397, 460], "homogen": [308, 309, 478, 479], "tensordictparam": [308, 309, 354], "_empty_net": [308, 309], "roughli": [308, 309, 484], "agent_network": [308, 309], "modulelist": [308, 309], "2592": 308, "decentr": 308, "n_agent_input": [309, 310, 478, 479], "n_agent_output": [309, 310, 478, 479], "toech": 309, "centalis": 309, "shown": [309, 459, 468, 476, 477, 478, 479, 482], "agent_dim": 310, "vmap_random": [310, 382, 397, 460], "stateful_net": [310, 382, 397], "Such": [310, 382, 397], "multiagentmlp": [310, 478, 479], "snet": 310, "hasattr": [310, 464], "kaiming_normal_": 310, "std_init": [311, 312], "initialize_paramet": 311, "isol": [311, 382, 397, 458, 468], "1706": [312, 329], "10295v3": 312, "induc": [312, 354], "aid": 312, "1803": [313, 314, 320], "10122": [313, 314], "rnn_hidden": 313, "latent": 314, "ordin": [316, 456], "parametris": [316, 318], "inres": 317, "mu": [317, 319, 466], "impos": [318, 459], "proxim": [318, 384, 466, 479], "atom": 318, "tang": 318, "agraw": 318, "2020": 318, "1901": 318, "10500": 318, "discretis": 318, "num_atom": 318, "num_sampl": 318, "middl": 318, "lr": [318, 464, 465, 466, 467, 474, 478, 479, 480], "optimis": [318, 478, 479], "minimis": 318, "penalis": 318, "0308": 318, "1586": 318, "4727": 318, "2260": 318, "1120": 318, "histogram": 318, "return_typ": 318, "hist": [318, 482], "158": 318, "478": 318, "228": 318, "112": 318, "bin_edg": 318, "8000": 318, "6000": 318, "4000": 318, "ornstein": [319, 464, 468], "uhlenbeck": [319, 464, 468], "ou": [319, 464], "correl": 319, "noise_t": 319, "noise_": 319, "theta": [319, 466, 480], "sigma_t": 319, "sigma_": 319, "anneal": [319, 465, 470, 478], "ou_prev_nois": 319, "ou_step": 319, "x0": 319, "sigma_min": 319, "n_steps_ann": 319, "is_init_kei": 319, "_ou_prev_nois": 319, "_ou_step": 319, "state_shap": [320, 400], "mixing_embed_dim": [320, 400], "qmix": [320, 478, 479], "mixer": [320, 329, 400], "monoton": 320, "hyper": 320, "11485": 320, "qmixerloss": [320, 329], "qmix_vdn": [320, 329], "vdn": [320, 329], "hidden_dim": [322, 323], "scale_lb": [322, 323], "posterior": [322, 376], "rssm": [322, 323, 376], "1811": [322, 323], "04551": [322, 323], "obs_embed": 322, "rnn_hidden_dim": 323, "dream": 323, "safe_tanh": 327, "tanhtransform": 327, "overflow": [327, 341, 346, 347, 350, 351, 352, 353, 354], "get_mod": [327, 354], "decomposit": 329, "05296": 329, "hide": [330, 466, 478, 479], "satisfi": [330, 459], "vmap_dim": 330, "lam": 330, "sample_in": 330, "sample_in_td": 330, "vm": 330, "probabilistictensordictsequenti": [331, 355, 364, 366, 381, 384, 386, 397, 445, 446, 460, 484], "placement": 332, "tokenization_util": [333, 337], "generate_kwarg": [333, 337], "aspect": [333, 337, 465, 471], "tokenizer_kwarg": [333, 337], "pad_output": [333, 337], "conserv": [333, 337, 365, 371], "automodelforcausallm": 333, "input_data": [333, 337], "hello": [333, 337], "output_data": [333, 337], "make_ray_work": 334, "train_model": 334, "inference_serv": 334, "collective_rpc": 334, "update_weight_broadcast": 334, "model_update_group": 334, "src": 334, "current_stream": 334, "world_siz": 335, "statelessprocessgroup": 335, "plane": 335, "pyncclcommun": 335, "vllmparameterserv": 336, "tp": 336, "tp_size": 336, "check_weights_chang": 336, "transformerswrapp": 337, "llmdata": [337, 456], "translat": [341, 350], "character": [341, 346, 350, 351, 353, 482], "td_modul": [341, 342, 343, 344, 350, 353, 354, 356, 358, 470, 484], "3635": 341, "0340": 341, "1476": 341, "3911": 341, "1664": 341, "5455": 341, "2247": 341, "4583": 341, "2916": 341, "2160": 341, "5337": 341, "5193": 341, "addmmbackward0": 341, "actorvalueoper": [342, 366, 381, 384, 459, 470], "get_policy_oper": [342, 343, 344, 366, 381, 384, 459], "standalon": [342, 343, 344, 468, 470], "tdmodul": [342, 343, 344, 450], "get_critic_oper": 342, "common_oper": [342, 344], "policy_oper": [342, 343, 344], "value_oper": [342, 343, 344], "module_hidden": [342, 344], "td_module_hidden": [342, 344], "module_act": [342, 344], "td_module_act": [342, 343, 344], "module_valu": [342, 343, 344], "td_module_valu": [342, 343, 344], "state_action_valu": [342, 358, 365, 367, 372, 380, 387, 401, 450, 459, 464, 478, 484], "td_clone": [342, 343, 344], "tensordictmodulewrapp": [342, 445, 446, 450], "get_policy_head": [342, 343, 344], "safesequenti": [342, 343, 344, 400], "head": [342, 344, 354, 361, 366, 381, 384, 456], "get_value_head": [342, 343, 344], "get_value_oper": [342, 343, 344, 366, 381, 384], "action_modul": 343, "actorcriticoper": [344, 459, 470], "actorcriticwrapp": [344, 459, 464], "inferec": 345, "set_tensor_kei": 345, "dt_inference_wrapp": 345, "baz": 345, "inference_context": 345, "obs_dim": 345, "tanhdelta": [345, 456, 464, 478], "dtactor": 345, "actor_modul": [345, 484], "dist_class": 345, "dist_kwarg": 345, "distribution_kwarg": [345, 350, 354, 466, 478, 479], "inference_actor": 345, "sequence_length": 345, "mask_context": 345, "out_act": 345, "qvaluemodul": [346, 351, 400, 467, 468, 470, 474], "distributionaldqnnet": 346, "make_log_softmax": 346, "my_action_valu": [347, 352], "chanc": 347, "lmheadmodel": 348, "actor_head": [348, 366, 381, 384], "base_model": 348, "lm_head": 348, "lookahead": 349, "reshape_cat": 349, "actor_bas": 349, "obs_cat": 349, "obs_cat_reshap": 349, "action_orig": 349, "multistepenvwrapp": 349, "alter": [349, 382, 458, 459], "ego": 349, "default_interaction_typ": [350, 354, 470], "interaction_typ": [350, 354], "set_interaction_typ": [350, 354], "compositedistribut": [350, 354, 364, 384, 460, 470], "distribution_map": [350, 354], "name_map": [350, 354], "cache_dist": [350, 354], "n_empirical_estim": [350, 354], "compound": [350, 470], "chose": 352, "functionalmodul": 353, "functionalmodulewithbuff": 353, "td_fmodul": 353, "td_function": 353, "td_state": 353, "params_repeat": 353, "td_vmap": [353, 356], "random_sampl": [353, 354], "suppli": 354, "paliat": 354, "get_median": 354, "get_mean": 354, "sample_key_nam": 354, "_log_prob": 354, "composite_lp_aggreg": 354, "clampbackward0": 354, "anihil": 354, "partial_toler": [355, 356, 477], "AND": [355, 356, 367], "tensordictsequ": 356, "safeprobabilisticmodul": [356, 459], "spec1": 356, "net1": 356, "module1": 356, "td_module1": 356, "spec2": 356, "module2": 356, "td_module2": 356, "boundari": [357, 466, 468, 478, 479], "resolut": 357, "9944": 357, "9991": 357, "3020": 357, "2299": 357, "5418": 357, "2989": 357, "6849": 357, "2690": 357, "9649": 357, "5686": 357, "8602": 357, "0315": 357, "8455": 357, "6027": 357, "4746": 357, "7843": 357, "7782": 357, "2111": 357, "5115": 357, "4687": 357, "5760": 357, "custommodul": 358, "imaginari": 359, "imagin": 359, "transition_model": 359, "get_reward_oper": 359, "get_transition_model_oper": 359, "min_val": [360, 363], "_bia": 360, "surject": 363, "expln": 363, "biased_softplu": [363, 456], "biased_softplus_": 363, "syntax": [363, 464], "add_custom_map": 363, "1602": 364, "01783v2": 364, "actor_network": [364, 365, 366, 367, 368, 370, 372, 373, 380, 381, 383, 384, 385, 386, 387, 389, 390, 397, 460, 464, 466, 471, 478, 479], "critic_network": [364, 366, 381, 384, 386, 466, 479], "entropy_bonu": [364, 366, 381, 384, 397, 466], "favour": [364, 366, 381, 384, 397], "samples_mc_entropi": [364, 366, 381, 383, 384, 397], "entropy_coef": [364, 366, 381, 384, 397, 466, 479], "critic_coef": [364, 366, 381, 384, 397, 466], "loss_critic_typ": [364, 366, 381, 384, 386, 466], "l1": [364, 366, 368, 369, 373, 381, 384, 385, 386, 389, 390, 393, 400, 459, 464], "l2": [364, 366, 368, 369, 370, 371, 373, 376, 377, 381, 384, 385, 386, 389, 390, 393, 400, 464, 478], "smooth_l1": [364, 365, 366, 367, 368, 369, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390, 393, 400, 466], "separate_loss": [364, 366, 367, 368, 372, 373, 380, 381, 384, 385, 386, 387, 389, 390], "advantage_kei": [364, 366, 381, 384, 386, 397, 399, 402, 403, 404, 405], "value_target_kei": [364, 366, 381, 384, 386, 402, 403, 404, 405], "value_target": [364, 366, 381, 384, 386, 402, 403, 404, 405, 466, 479], "ddp": [364, 366, 381, 384, 386], "fsdp": [364, 366, 381, 384, 386], "divid": [364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 397, 443, 464, 478, 479, 480], "clip_valu": [364, 366, 381, 384, 386, 397], "loss_crit": [364, 384, 397, 466, 479], "loss_entropi": [364, 384, 398, 466, 479], "loss_object": [364, 384, 398, 466, 479], "next_reward": [364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 402, 403, 404, 405], "next_don": [364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 402, 403, 404, 405], "next_termin": [364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 402, 403, 404, 405], "loss_obj": 364, "next_observ": [364, 365, 367, 368, 369, 371, 372, 373, 380, 384, 385, 386, 387, 389, 390, 477], "sacloss": [364, 379, 388, 456], "default_kei": [364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 397, 400, 406], "_acceptedkei": [364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 397, 400, 406], "fraction": 364, "make_value_estim": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 391, 397, 400, 460, 464, 465, 478, 479, 484], "value_typ": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 392, 397, 400, 464], "valueestim": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 392, 397, 400, 456, 460, 464, 478, 479], "hyperparam": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 464], "enum": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 392, 397, 400, 464], "default_value_estim": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 464, 484], "default_value_kwarg": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 456, 464], "dqn_loss": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 391, 397, 400], "td1": [364, 365, 367, 368, 369, 371, 373, 374, 375, 380, 382, 384, 385, 386, 387, 389, 390, 397, 400, 464], "04779": [365, 371], "qvalue_network": [365, 367, 372, 373, 380, 385, 387, 389, 390], "unti": [365, 367, 380, 385, 387, 389, 390], "loss_funct": [365, 367, 368, 369, 370, 371, 372, 373, 380, 385, 387, 389, 390, 393, 400, 464, 478], "alpha_init": [365, 367, 373, 383, 385, 387], "min_alpha": [365, 367, 373, 383, 385, 387], "max_alpha": [365, 367, 373, 383, 385, 387], "fixed_alpha": [365, 367, 373, 383, 385, 387], "target_entropi": [365, 367, 373, 383, 385, 387], "prod": [365, 367, 383, 387], "delay_actor": [365, 368, 387, 389, 390], "delay_qvalu": [365, 373, 385, 387, 389, 390], "min_q_weight": 365, "max_q_backup": 365, "backup": 365, "deterministic_backup": 365, "num_random": 365, "with_lagrang": 365, "lagrang": 365, "lagrange_thresh": 365, "deactivate_vmap": [365, 367, 373, 380, 385, 387, 389, 390, 402, 403, 404, 405], "valueclass": [365, 367, 368, 373, 385, 387, 389, 390], "qvalu": [365, 367, 372, 373, 380, 385, 387, 389, 390], "loss_actor": [365, 367, 368, 372, 373, 380, 385, 386, 387, 389, 390, 436, 464, 478], "loss_actor_bc": 365, "loss_alpha": [365, 367, 373, 385, 387], "loss_cql": [365, 371], "loss_qvalu": [365, 367, 371, 372, 373, 380, 385, 387, 389, 390], "loss_alpha_prim": 365, "clip_epsilon": [366, 397, 466, 479], "head_nam": [366, 381, 384], "normalize_advantag": [366, 381, 384, 479], "normalize_advantage_exclude_dim": [366, 381, 384], "multiobject": [366, 381, 384], "value_kei": [366, 381, 384, 402, 403, 404, 405, 464], "somemodul": [366, 381, 384], "someactor": [366, 381, 384], "value_head": [366, 381, 384], "somevalu": [366, 381, 384], "loss_modul": [366, 379, 381, 382, 384, 388, 397, 440, 449, 450, 460, 461, 464, 465, 466, 478, 479, 482], "IN": 367, "FOR": 367, "simplic": [367, 465, 466, 472, 481, 482, 484], "openreview": [367, 385], "pczqttstix": 367, "qvalue_loss": [367, 389], "actor_loss": [367, 389], "alpha_loss": 367, "num_qvalue_net": [367, 372, 373, 380, 385, 387, 389, 390], "maybe_init_target_entropi": 367, "fault_toler": 367, "target_entropy_buff": 367, "delay_valu": [368, 369, 371, 374, 386, 387, 400, 465, 467, 468, 474, 478], "loss_valu": [368, 372, 380, 386, 387, 464, 466, 478, 479], "pred_valu": [368, 371, 389, 390, 464], "pred_value_max": [368, 464], "target_valu": [368, 371, 385, 389, 390, 401, 460, 464], "target_value_max": [368, 464], "qvalueactor": [369, 371, 400, 465, 467], "double_dqn": 369, "06461": [369, 379], "mult_one_hot": [369, 372, 373, 400], "loss_val": [369, 371, 460, 464, 466, 467, 468, 471, 472, 474, 478, 479, 482], "01345": 370, "distanc": [371, 381, 393, 401, 402, 479], "dcql_loss": 371, "2110": [372, 380], "06169": [372, 380], "expectil": [372, 380], "tau": [372, 380, 388, 464, 465, 478], "antmaz": [372, 380], "sticht": [372, 380], "onehotcategor": [372, 373, 456], "target_entropy_weight": 373, "skip_done_st": [373, 387], "disctount": 374, "distributionalqvalueactor": [374, 459], "input_tensordict": [374, 464], "actor_model": 375, "value_model": [375, 377], "imagination_horizon": 375, "discount_loss": [375, 377], "lambda_kl": 376, "lambda_reco": 376, "lambda_reward": 376, "reco_loss": 376, "reward_loss": 376, "free_nat": 376, "nat": 376, "delayed_clamp": 376, "global_averag": 376, "value_loss": 377, "fake_data": 377, "1606": 378, "03476": 378, "discriminator_network": 378, "use_grad_penalti": 378, "gp_lambda": 378, "discrimin": 378, "ddpgloss": [379, 388, 450, 456, 464, 471, 478, 484], "td3loss": [379, 388, 456], "value_network_update_interv": 379, "qvalueclass": 380, "loss_value_diff": 380, "diff": 380, "old_polici": 381, "new_polici": 381, "apart": [381, 479], "dtarg": 381, "samples_mc_kl": 381, "analyt": 381, "decrement": 381, "loss_": [382, 436, 460, 464, 471], "equip": [382, 467, 468, 470], "gh": 382, "_forward_value_estimator_kei": 382, "value_estim": [382, 397, 402, 403, 404, 405, 406, 460, 464, 479], "myloss": 382, "action2": 382, "augment": [382, 458, 472, 474, 482], "deterministic_sampling_mod": 382, "convert_to_funct": [382, 397, 464], "expand_dim": [382, 397], "create_target_param": [382, 397, 464], "compare_against": [382, 397, 464], "_param": [382, 397], "resampl": [382, 397], "_target_param": [382, 397], "network_nam": [382, 397], "blend": [382, 397], "add_random_modul": [382, 397, 460], "flavor": [384, 464, 478, 479, 484], "clipppoloss": [384, 456, 466, 479], "klpenppoloss": [384, 456], "06347": 384, "gae": [384, 456, 460, 464, 466, 479], "ppo_loss": 384, "tdlambda": [384, 392, 460, 464], "base_lay": 384, "randn_lik": 384, "samplelogprob": 384, "ay8zfzm0tdd": 385, "sub_sample_len": 385, "subsampl": [385, 431, 461], "action_log_prob_actor": 385, "state_action_value_actor": [385, 389, 390], "connectionist": 386, "1992": 386, "doi": 386, "1007": 386, "bf00992696": 386, "actor_net": [386, 464, 466], "1801": 387, "01290": 387, "applic": [387, 400, 469, 470, 480], "1812": 387, "05905": 387, "redqloss": [388, 456], "math": 388, "theta_t": [388, 480], "theta_": [388, 480], "polyak": 388, "minimalist": 389, "06860": 389, "policy_nois": [389, 390], "noise_clip": [389, 390], "td3_bc": 389, "bc_loss": 389, "lmbd": 389, "td0": [391, 464, 478], "strict_shap": 393, "view_a": 393, "grpolossoutput": [397, 399], "clip_fract": 398, "kl_approx": 398, "ess": 398, "loss_kl_to_ref": 398, "kl_to_ref": 398, "grpo_siz": 399, "rewards_kei": 399, "hit": 399, "qmixer": [400, 456], "local_valu": 400, "visibl": [400, 479], "acceptedkei": 400, "global_valu": 400, "penultim": 400, "local_value_network": 400, "mixer_network": 400, "value_modul": [400, 466, 484], "qnet": [400, 464], "next_val_kei": 401, "pred_next_v": 401, "mse": 401, "q_valu": 401, "n_steps_to_next": 401, "value_next_st": 401, "1506": [402, 407, 415], "02438": [402, 407, 415], "exponenti": [402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 438], "average_ga": [402, 466], "skip_exist": [402, 403, 404, 405], "get_default_devic": [402, 403, 404, 405, 406], "auto_reset_env": 402, "next_valu": [402, 403, 404, 405, 406], "gradient_mod": 402, "value_error": [402, 403, 404, 405, 406], "marker": [402, 464], "trajecotri": 402, "fair": 402, "target_param": [402, 403, 404, 405, 406, 464, 479], "98": [402, 403, 404, 405], "94": [402, 405], "unpack": [402, 403, 404, 405], "tensor_kei": [402, 403, 404, 405, 406], "aka": [403, 465, 478], "average_reward": [403, 404, 405], "tdestim": [403, 404, 406], "infti": 404, "valuefunctionbas": 406, "old_stat": [407, 409, 411, 413, 415, 416, 418], "new_stat": [407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419], "rolling_gamma": [411, 412, 413, 414, 416, 417, 418, 419], "g1": [411, 412, 413, 414, 416, 417, 418, 419], "g2": [411, 412, 413, 414, 416, 417, 418, 419], "g3": [411, 412, 413, 414, 416, 417, 418, 419], "g4": [411, 412, 413, 414, 416, 417, 418, 419], "v3": [411, 412, 413, 414, 416, 417, 418, 419], "preproc": [420, 468, 478], "as_non_tensor": [420, 478], "render_method": 420, "pass_tensordict": 420, "syntact": 420, "sugar": 420, "out_file_bas": 421, "skip_reset": 421, "center_crop": 422, "make_grid": 422, "log_video": 422, "csv": [422, 424, 426, 465, 473, 474], "wandb": [422, 426, 429, 473, 484], "tensorboard": [422, 426, 428, 473, 484], "log_dir": [422, 423, 424, 426, 428, 429, 465, 474], "cheetah_video": 422, "run_video": 422, "openxexperiencereplai": 422, "sec": [422, 480], "video_fp": [422, 424, 427], "cmu_stretch": 422, "run_video_0": 422, "cur_dir": 424, "csv_log": 424, "add_video": 424, "video_": 424, "experiment_nam": [425, 426], "uuid": [425, 465, 485], "logger_typ": 426, "logger_nam": 426, "mlflow": [426, 427], "wandb_kwarg": 426, "mlflow_kwarg": 426, "tracking_uri": 427, "uri": 427, "datastor": 427, "tb_log": 428, "tensoarboard": 428, "td_log": 428, "save_dir": 429, "resum": 429, "uncategor": 429, "my_funct": 430, "sub_traj_len": 431, "min_sub_traj_len": 431, "register_op": [431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 461, 465], "process_optim_batch": [431, 437, 438, 461], "td_out": [431, 439], "_process_optim_batch_hook": [431, 461], "batch_subsampl": 431, "clear_cuda": 432, "pre_optim_step": [432, 461], "log_pbar": [433, 434, 435, 438, 461, 465], "count_fram": 433, "pre_steps_log": [433, 434, 461], "count_frames_log": 433, "lognam": 434, "r_train": 434, "log_reward": [434, 465], "record_interv": [435, 464, 465], "record_fram": [435, 443, 464, 465], "policy_explor": [435, 450, 464, 465, 468, 470, 474], "log_kei": [435, 465], "underestim": 435, "r_evalu": [435, 464], "loss_compon": 436, "appl": 436, "optimizer_hook": 436, "flatten_tensordict": [437, 465], "max_dim": 437, "rb_trainer": 437, "batch_process": [437, 438, 439, 461], "post_loss": [437, 461], "999": [438, 465], "jitter": 438, "finfo": 438, "default_dtyp": 438, "update_reward_stat": 438, "normalize_reward": 438, "make_train": [439, 456], "_process_batch_hook": [439, 461], "select_kei": [439, 461], "versatil": [440, 469], "optim_steps_per_batch": [440, 461, 465], "clip_grad_norm": 440, "clip_norm": 440, "progress_bar": 440, "save_trainer_interv": 440, "log_interv": [440, 465], "save_trainer_fil": [440, 461], "load_from_fil": [440, 461], "update_weights_interv": [442, 465], "post_step": [442, 461, 465], "dictconfig": [443, 444, 445, 446, 448, 449, 450, 451, 454], "unknowingli": 443, "annealing_fram": [443, 464], "init_env_step": [443, 444, 464], "proof_environ": [444, 464], "sta": 444, "ot": 444, "actor_model_explor": [445, 446, 464], "make_env_kwarg": [445, 446], "targetnetupdat": [447, 449, 450], "replayargsconfig": 448, "target_net_updat": [450, 464, 465], "constitu": 450, "egreedywrapp": 450, "env_proof": 450, "obs_spec": 450, "net_valu": 450, "dir": [450, 461, 465], "gettempdir": 450, "namespac": [451, 454], "transformed_env_constructor": [451, 456], "num_env_per_collector": [452, 453], "video_tag": 454, "norm_obs_onli": 454, "use_env_cr": 454, "custom_env_mak": 454, "custom_env": 454, "return_transformed_env": 454, "action_dim_gsd": 454, "state_dim_gsd": 454, "obs_norm_state_dict": 454, "weightupdat": 456, "distributedsyncdatacollector": 456, "submitit_delayed_launch": 456, "remotetensordictreplaybuff": 456, "rational": 456, "footnot": 456, "binarydiscretetensorspec": 456, "boundedtensorspec": 456, "discretetensorspec": 456, "lazystackedcompositespec": 456, "lazystackedtensorspec": 456, "multidiscretetensorspec": 456, "multionehotdiscretetensorspec": 456, "nontensorspec": 456, "onehotdiscretetensorspec": 456, "unboundedcontinuoustensorspec": 456, "unboundeddiscretetensorspec": 456, "prompttensordicttoken": 456, "rolloutfrommodel": 456, "tokenizeddatasetload": 456, "create_infinite_iter": 456, "constantklcontrol": 456, "adaptiveklcontrol": 456, "densifyreward": 456, "h5combin": 456, "h5split": 456, "nested2t": 456, "check_no_exclusive_kei": 456, "consolidate_spec": 456, "contains_lazy_spec": 456, "envmetadata": 456, "chessenv": 456, "tictactoeenv": 456, "llmhashingenv": 456, "check_marl_group": 456, "get_available_librari": 456, "terminated_or_trunc": 456, "dreamerdecod": 456, "braxwrapp": 456, "dmcontrolwrapp": 456, "isaaclabwrapp": 456, "jumanjiwrapp": 456, "meltingpotenv": 456, "meltingpotwrapp": 456, "mogymenv": 456, "multithreadedenvwrapp": 456, "openmlenv": 456, "openspielwrapp": 456, "openspielenv": 456, "pettingzooenv": [456, 478], "robohiveenv": 456, "smacv2env": 456, "smacv2wrapp": 456, "unitymlagentsenv": 456, "unitymlagentswrapp": 456, "vmaswrapp": 456, "register_gym_spec_convers": 456, "vllmupdat": 456, "llmcollector": [456, 458], "qvaluehook": 456, "distributionalqvaluehook": 456, "reset_nois": 456, "cemplann": 456, "mpcplannerbas": 456, "mppiplann": 456, "independentnorm": 456, "truncatednorm": 456, "maskedonehotcategor": 456, "onehotordin": 456, "inv_softplu": 456, "vmapmodul": 456, "distributionaldqnloss": [456, 465], "discretesacloss": 456, "crossqloss": 456, "iqlloss": 456, "discreteiqlloss": 456, "cqlloss": 456, "discretecqlloss": 456, "gailloss": 456, "dtloss": 456, "onlinedtloss": 456, "td3bcloss": 456, "ppoloss": 456, "a2closs": 456, "reinforceloss": 456, "dreameractorloss": 456, "dreamermodelloss": 456, "dreamervalueloss": 456, "td0estim": [456, 464], "td1estim": [456, 464], "td0_return_estim": 456, "td0_advantage_estim": 456, "td1_return_estim": 456, "vec_td1_return_estim": 456, "td1_advantage_estim": 456, "vec_td1_advantage_estim": 456, "td_lambda_return_estim": 456, "vec_td_lambda_return_estim": 456, "td_lambda_advantage_estim": 456, "vec_td_lambda_advantage_estim": 456, "generalized_advantage_estim": 456, "vec_generalized_advantage_estim": 456, "hardupd": [456, 464, 471], "softupd": [456, 464, 465, 467, 468, 471, 474, 478], "distance_loss": [456, 464], "group_optim": 456, "hold_out_net": 456, "hold_out_param": [456, 464], "batchsubsampl": [456, 461], "clearcudacach": 456, "countframeslog": 456, "logscalar": [456, 461, 465], "optimizerhook": [456, 465], "logvalidationreward": [456, 461, 464, 465], "replaybuffertrain": [456, 461, 465], "rewardnorm": 456, "selectkei": [456, 461], "trainerhookbas": [456, 461, 465], "updateweight": [456, 461, 465], "make_collector_offpolici": 456, "make_collector_onpolici": 456, "make_dqn_loss": 456, "make_replay_buff": [456, 464], "make_target_updat": 456, "parallel_env_constructor": [456, 464], "sync_async_collector": 456, "sync_sync_collector": 456, "correct_for_frame_skip": 456, "get_stats_random_rollout": 456, "mlflowlogg": 456, "get_logg": 456, "generate_exp_nam": 456, "journei": 457, "textbook": 457, "highlight": [457, 478], "ever": [457, 479], "bump": 457, "benefit": [457, 469, 478, 479, 482], "pr": 457, "fundament": [458, 472], "templatetransform": 458, "pythoninterpret": 458, "mcptooltransform": 458, "klrewardtransform": 458, "grpoloss": 458, "simpler": [458, 465, 469], "make_mlgym": 458, "7b": [458, 476], "step_data": 458, "s_": [458, 476], "unifi": [458, 485], "ground": [459, 464, 480], "recycl": [459, 482], "noisier": 459, "Their": [459, 478, 479], "sd": [459, 485], "prob_modul": 459, "uncertainti": 459, "soften": 459, "backbon": [459, 467, 470, 477, 484], "make_actor": 459, "make_valu": 459, "shared_param": 459, "make_common": 459, "reusabl": [460, 464, 482], "swappabl": [460, 464], "characterist": [460, 464, 480], "trainabl": [460, 464, 471, 481], "smth": [460, 464], "metric": [460, 464], "plenti": [460, 468], "amort": [460, 465, 466], "told": [460, 466], "pseudo": [460, 472, 480], "buri": 460, "str_valu": 460, "nutshel": [460, 464], "barto": [460, 478, 479], "chapter": [460, 473], "value_net_loss": 460, "pow": [460, 464], "room": 460, "signifi": [460, 478, 479], "underperform": 460, "intric": [460, 470], "set_composite_lp_aggreg": [460, 479], "action_td": 460, "action0": 460, "f0": 460, "action1": 460, "f1": 460, "f2": 460, "f3": 460, "action0_log_prob": 460, "action1_log_prob": 460, "inferior": 460, "multivari": 460, "dirichlet": 460, "prev_log_prob": 460, "new_log_prob": 460, "log_weight": 460, "appreci": [460, 469], "multihead": 460, "believ": 461, "substanti": 461, "_pre_steps_log_hook": 461, "_pre_optim_hook": 461, "sub_batch": 461, "_post_loss_hook": 461, "_post_optim_hook": 461, "post_optim": [461, 465], "_post_optim_log": 461, "post_optim_log": 461, "_post_steps_hook": 461, "_post_steps_log_hook": 461, "post_steps_log": 461, "logginghook": 461, "logging_hook": 461, "save_dict": 461, "some_valu": 461, "torchsnapshot": 461, "ckpt_backend": 461, "filepath": 461, "save_train": 461, "000": [463, 483], "galleri": [463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "mem": [463, 483], "mb": [463, 483], "coding_ddpg": [463, 464, 483], "coding_dqn": [463, 465, 483], "coding_ppo": [463, 466, 483], "dqn_with_rnn": [463, 467, 483], "llm_browser": [463, 476, 483], "multi_task": [463, 477, 483], "multiagent_competitive_ddpg": [463, 478, 483], "multiagent_ppo": [463, 479, 483], "pretrained_model": [463, 481, 483], "rb_tutori": [463, 482, 483], "torchrl_demo": [463, 483, 484], "torchrl_env": [463, 483, 485], "author": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 482, 485], "vincent": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 480, 482, 485], "moen": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 480, 482, 485], "assembl": 464, "focus": [464, 471], "maxim": [464, 471, 480], "transpar": [464, 467], "bash": 464, "is_fork": [464, 465, 466, 467, 478, 479, 481], "get_start_method": [464, 465, 466, 467, 478, 479, 481], "collector_devic": 464, "loss_dict": 464, "modal": 464, "oblivi": [464, 466, 482], "elementari": 464, "didact": [464, 468], "dilut": 464, "pessimist": [464, 465, 466], "target_actor_network_param": 464, "actor_in_kei": 464, "actor_crit": 464, "compromis": 464, "hp": 464, "_value_estim": 464, "elif": [464, 465, 476], "unknown": 464, "_loss_actor": 464, "td_copi": 464, "actor_network_param": [464, 478], "value_network_param": [464, 478], "_loss_valu": 464, "pred_val": 464, "target_value_network_param": 464, "glue": 464, "_forward": 464, "remaind": 464, "env_librari": 464, "env_task": 464, "env_arg": [464, 465], "torchr": 464, "rescal": 464, "presum": 464, "make_transformed_env": 464, "reward_sc": 464, "env_per_collector": 464, "transform_state_dict": 464, "make_t_env": 464, "cheat": 464, "10m": 464, "cautiou": 464, "magnitud": [464, 478], "thousand": [464, 467], "get_env_stat": 464, "proof_env": 464, "5000": [464, 468, 474], "recal": [464, 466, 476, 482], "ddpgmlpactor": 464, "ddpgmlpqnet": 464, "materi": 464, "ornsteinuhlenbeckprocessmodul": [464, 470], "make_ddpg_actor": 464, "q_net": 464, "tight": 464, "10_000": [464, 466], "traj_len": [464, 467], "make_record": 464, "recorder_obj": 464, "pick": [464, 465, 470, 476], "buffer_s": [464, 465], "random_crop_len": 464, "prb": 464, "buffer_scratch_dir": [464, 465, 467, 472, 481], "dataflow": 464, "ceil_div": 464, "utd": [464, 467], "update_to_data": 464, "realiz": 464, "_must_": 464, "001": [464, 480], "outdat": 464, "trick": [464, 465], "despit": 464, "optimizer_actor": 464, "weight_decai": [464, 465], "optimizer_valu": 464, "total_collection_step": 464, "rewards_ev": 464, "collected_fram": 464, "numel": [464, 466, 467, 468, 474, 478, 481, 482], "current_fram": [464, 478], "sampled_tensordict": 464, "gn1": 464, "clip_grad_norm_": [464, 466, 478, 479, 480], "gn2": 464, "gn": [464, 480], "td_record": 464, "rn": 464, "2f": 464, "mention": [464, 467, 482, 485], "matplotlib": [464, 466, 467, 468, 478, 479, 480, 482, 485], "pyplot": [464, 466, 467, 468, 478, 479, 480, 482, 485], "plt": [464, 466, 467, 468, 478, 479, 480, 482, 485], "zip": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "legend": [464, 478], "xlabel": [464, 467, 479, 480], "ylabel": [464, 479], "tight_layout": 464, "takeawai": [464, 465, 468, 476], "distpatch": 464, "jupyt": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "ipynb": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485], "sphinx": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "road": 465, "highest": [465, 470], "prerequisit": [465, 467, 476], "lookup": 465, "cart": 465, "pole": 465, "un": 465, "actuat": 465, "frictionless": 465, "duelingcnndqnet": 465, "egreedymodul": [465, 467, 468, 470, 474], "is_notebook": 465, "shell": 465, "get_ipython": 465, "__class__": 465, "zmqinteractiveshel": 465, "qtconsol": 465, "terminalinteractiveshel": 465, "ipython": [465, 479, 480], "nameerror": [465, 478], "umbrella": 465, "misplac": 465, "misus": 465, "orchestr": [465, 471, 473], "five": 465, "64x64": 465, "motion": [465, 480], "obs_norm_sd": 465, "mp_context": 465, "get_norm_stat": 465, "test_env": 465, "mathbb": 465, "rightarrow": 465, "make_model": 465, "dummy_env": 465, "init_bia": 465, "exploration_modul": [465, 467, 468, 470, 474], "eps_greedy_v": 465, "eps_greedy_val_env": 465, "actor_explor": 465, "get_replay_buff": 465, "n_optim": [465, 471, 472], "parametriz": 465, "get_collector": 465, "bunch": 465, "ubiquit": [465, 469], "get_loss_modul": 465, "target_updat": [465, 478], "995": 465, "variat": 465, "2e": [465, 480], "wd": 465, "upd": 465, "harder": [465, 484], "5_000": 465, "500000": 465, "100000": 465, "005": [465, 478], "mandatori": [465, 466, 479, 480], "fairer": 465, "budget": 465, "dqn_exp_": 465, "uuid1": [465, 485], "cumbersom": 465, "buffer_hook": 465, "aliv": 465, "total_reward": 465, "print_csv_files_in_fold": 465, "folder_path": 465, "csv_file": 465, "output_str": 465, "dirpath": 465, "endswith": 465, "strip": 465, "qvaluenetwork": 465, "accuraci": 465, "fanci": [465, 472], "demonstr": [466, 468, 472, 476, 478, 479, 480, 482, 485], "talk": 466, "six": 466, "sophist": [466, 479], "invent": 466, "theta_k": 466, "pi_": 466, "exceed": 466, "discourag": [466, 480], "indispens": 466, "analyz": 466, "lingua": 466, "franca": 466, "defaultdict": [466, 480], "3e": [466, 467, 478, 479], "max_grad_norm": [466, 478, 479], "sub_batch_s": 466, "num_epoch": [466, 479], "entropy_ep": [466, 479], "charact": [466, 468], "inverteddoublependulum": 466, "transmit": 466, "stai": 466, "confid": [466, 478, 479], "ran": 466, "f_": 466, "mu_": 466, "difficulti": [466, 485], "d_ob": 466, "d_action": 466, "policy_modul": [466, 478, 479], "briefli": [466, 478, 479], "refil": [466, 479], "easiest": [466, 471, 478, 479], "mathemat": [466, 478, 479], "tradeoff": [466, 479], "advantage_modul": 466, "lr_schedul": [466, 480], "cosineannealinglr": [466, 480], "eval_str": 466, "tensordict_data": [466, 479], "data_view": [466, 479], "subdata": [466, 478, 479], "cum_reward_str": 466, "stepcount_str": 466, "param_group": [466, 478], "lr_str": 466, "eval_rollout": 466, "nice": [466, 469, 472], "figsiz": [466, 480], "subplot": [466, 478, 480, 485], "titl": [466, 467, 468, 479, 480], "84x84": [467, 468], "accessori": 467, "stamp": 467, "n_cell": 467, "customiz": 467, "wouldn": 467, "qval": 467, "stoch_polici": 467, "opportun": [467, 478], "uniniti": 467, "again": [467, 468, 469, 470, 472, 479, 481, 482, 485], "strongli": 467, "million": 467, "sake": [467, 481, 482], "20_000": [467, 480], "longest": 467, "npai": 467, "action_spread": 467, "strong": 468, "impress": 468, "arduino": 468, "raspberri": 468, "pi": [468, 478, 479, 480], "alon": 468, "examplifi": 468, "ship": 468, "stick": 468, "nearest": 468, "value_mlp": [468, 474], "init_rand_step": [468, 474], "total_count": [468, 474], "total_episod": [468, 474], "t0": [468, 474], "screen": [468, 478], "color": [468, 478], "unblock": 468, "policy_transform": 468, "fake_td": 468, "exported_polici": 468, "div": 468, "graph_modul": 468, "print_read": 468, "group0": 468, "group0_agent0_ob": 468, "collid": [468, 479], "group0_agent0": 468, "agent0_ob": 468, "comma": 468, "digress": 468, "exported_stochastic_polici": 468, "trace": 468, "batchsizetransform": 468, "hidden0": 468, "hidden1": 468, "recurrent_polici": 468, "fake_ob": 468, "fake_hidden0": 468, "fake_hidden1": 468, "fake_is_init": 468, "exported_recurrent_polici": 468, "platform": [468, 484], "aoti": 468, "_inductor": 468, "aoti_compile_and_packag": 468, "aoti_load_packag": 468, "pt2": 468, "pkg_path": 468, "package_path": 468, "compiled_modul": 468, "onnxruntim": 468, "showcas": [468, 480], "explain": [468, 481], "tensorrt": 468, "android": 468, "aleinterfac": 468, "rom": 468, "loadrom": 468, "reset_gam": 468, "screen_ob": 468, "getscreenrgb": 468, "tick_param": 468, "bottom": 468, "labelleft": 468, "labelbottom": 468, "imshow": [468, 485], "dynamo_export": 468, "onnx_policy_export": 468, "onnx_file_path": 468, "ort_sess": 468, "inferencesess": 468, "cpuexecutionprovid": 468, "onnxruntime_input": 468, "get_input": 468, "onnx_polici": 468, "lightweight": [468, 473], "onnxruntime_output": 468, "topic": [469, 470, 471], "straight": 469, "backtrack": 469, "reset_with_act": 469, "stepped_data": 469, "spatial": 469, "useless": 469, "policyless": 469, "examin": [469, 478], "tackl": 470, "delv": 470, "extractor": 470, "additivegaussianmodul": [470, 478], "exploration_polici": [470, 478], "greedili": 470, "2d": [470, 478, 479], "innov": [470, 471], "rollout_explor": 470, "sole": 471, "supervis": [471, 472, 482, 485], "n_collect": 471, "get_next_batch": 471, "concis": 471, "ddpg_loss": 471, "total_loss": 471, "prove": 471, "reliev": 471, "concern": 471, "accustom": 472, "surprisingli": 472, "art": [472, 478, 479], "countless": 472, "yourself": [472, 478, 479], "everywher": 473, "log_scalar": 473, "my_scalar": 473, "excess": 473, "lesson": 474, "voluntarili": 474, "torchrl_logg": [474, 476], "training_loop": 474, "video_record": 474, "arbitrarili": 474, "t1": 474, "conclud": [474, 481], "tutorials_python": 475, "tutorials_jupyt": 475, "playwright": 476, "autom": 476, "__future__": 476, "annot": 476, "browsertransform": 476, "filterwarn": 476, "browser_transform": 476, "websit": 476, "rewardtransform": 476, "last_item": 476, "agnost": 476, "execute_tool_act": 476, "current_st": 476, "nllm": 476, "nenviron": 476, "franc": 476, "selector": 476, "button": 476, "css": 476, "btnk": 476, "extract_typ": 476, "ref_llm": 476, "env1_obs_kei": 477, "observation_stand": 477, "env2_obs_kei": 477, "observation_walk": 477, "tdreset1": 477, "tdreset2": 477, "lazy_stack": 477, "policy_common": 477, "policy_stand": 477, "policy_walk": 477, "But": 477, "env1_mak": 477, "env2_mak": 477, "_single_task": 477, "td_rollout": 477, "matteo": [478, 479], "bettini": [478, 479], "benchmarl": [478, 479], "simple_tag": 478, "maddpg": [478, 479], "multiagentparticleenviron": 478, "mpe": 478, "centralis": [478, 479], "tie": [478, 479], "iddpg": [478, 479], "richard": 478, "andrew": 478, "mit": 478, "press": 478, "2018": 478, "mathbf": [478, 479], "decentralis": [478, 479], "literatur": [478, 479], "overcom": [478, 479], "stationari": [478, 479], "establish": 478, "gui": [478, 479], "is_sphinx": 478, "__sphinx_build__": 478, "n_iter": [478, 479, 480], "evad": 478, "iteration_when_stop_training_evad": 478, "memory_s": 478, "n_optimiser_step": 478, "train_batch_s": 478, "polyak_tau": 478, "chaser": 478, "red": 478, "circl": [478, 479], "green": 478, "touch": [478, 480], "penal": [478, 479], "obstacl": 478, "drag": [478, 479], "elast": [478, 479], "collis": [478, 479], "imped": 478, "n_chaser": 478, "n_evad": 478, "n_obstacl": 478, "use_vma": 478, "simple_tag_v3": 478, "num_good": 478, "num_adversari": 478, "num_obstacl": 478, "max_cycl": 478, "num_vmas_env": [478, 479], "num_good_ag": 478, "num_landmark": 478, "four": [478, 479, 480], "n_agents_in_that_group": 478, "stress": [478, 479], "paramount": [478, 479], "n_rollout_step": [478, 479], "evolut": [478, 479], "group_nam": 478, "n_agents_in_group": 478, "minor": 478, "agents_exploration_polici": 478, "utilis": [478, 479], "n_obs_per_ag": [478, 479], "n_actions_per_ag": [478, 479], "share_parameters_polici": [478, 479], "policy_net": [478, 479], "_agent": 478, "grant": [478, 479], "converg": [478, 479], "share_parameters_crit": [478, 479], "obs_act": 478, "cat_modul": 478, "critic_modul": 478, "fantast": [478, 479], "reset_td": 478, "interfer": 478, "subject": [478, 480], "flatten_kei": 478, "process_batch": 478, "group_shap": 478, "get_item_shap": [478, 479], "nested_done_kei": 478, "nested_terminated_kei": 478, "desc": [478, 479], "episode_reward_mean_": 478, "episode_reward_mean_map": 478, "train_group_map": 478, "group_batch": 478, "_group": 478, "loss_nam": 478, "episode_reward_mean": [478, 479], "fig": [478, 482], "set_ylabel": 478, "axvlin": 478, "orang": 478, "set_xlabel": 478, "video_logg": 478, "vmas_log": 478, "env_with_rend": 478, "vmas_rend": 478, "print_log_dir": 478, "profici": [478, 479], "lidar": 479, "sensor": 479, "mappo": 479, "ippo": 479, "analys": 479, "visualis": 479, "vmas_devic": 479, "6_000": 479, "minibatch_s": 479, "generalis": 479, "simd": 479, "warp": 479, "todai": 479, "surround": 479, "dot": [479, 480], "scenario_nam": 479, "critic_net": 479, "minibatch": 479, "episode_reward_mean_list": 479, "critic_network_param": 479, "target_critic_network_param": 479, "xvfb": 479, "pyvirtualdisplai": 479, "1400": 479, "900": 479, "pil": 479, "rendering_callback": 479, "fromarrai": 479, "gif": 479, "save_al": 479, "append_imag": 479, "freeli": 480, "broader": 480, "wider": 480, "acquaint": 480, "avenu": 480, "_apply_to_composit": 480, "default_x": 480, "default_i": 480, "upward": 480, "angular": 480, "sin": 480, "rad": 480, "angl": 480, "deleg": 480, "new_th": 480, "new_thdot": 480, "g_forc": 480, "angle_norm": 480, "albeit": 480, "high_th": 480, "high_thdot": 480, "low_th": 480, "low_thdot": 480, "trivial": 480, "irrelev": 480, "_make_spec": 480, "td_param": 480, "render_fp": 480, "random_": 480, "_make_step": 480, "staticmethod": 480, "skeleton": 480, "unitari": 480, "sine": 480, "cosin": 480, "sintransform": 480, "costransform": 480, "t_sin": 480, "t_co": 480, "cat_transform": 480, "simple_rollout": 480, "unexplor": 480, "init_td": 480, "traj_return": 480, "last_reward": 480, "is_ipython": 480, "inlin": 480, "get_backend": 480, "ion": 480, "gcf": 480, "clear_output": 480, "r3mtransform": 481, "embodi": 481, "env_transform": [481, 485], "wiser": 481, "batteri": 482, "gc": 482, "buffer_list": 482, "lowest": 482, "medium": 482, "buffer_lazytensor": 482, "tempdir": 482, "buffer_lazymemmap": 482, "fullest": 482, "mydata": 482, "buffer_lazi": 482, "_i": 482, "artifici": 482, "hamper": 482, "she": 482, "proport": 482, "reappear": 482, "unfold": 482, "problemat": 482, "4th": 482, "prioritizedslicesampl": 482, "tensordictmaxvaluewrit": 482, "demo": 484, "icml": 484, "vmoen": 484, "fb": 484, "invest": 484, "media": 484, "predominantli": 484, "data2": 484, "sub_key1": 484, "scturctur": 484, "data_stack": 484, "data_sampl": 484, "_sampler": 484, "_sum_tre": 484, "modulenotfounderror": 484, "noopresetenv": [484, 485], "backbone_modul": 484, "params_expand": 484, "exec_sequ": 484, "tensordict_exp": 484, "base_modul": 484, "tensordicts_prealloc": 484, "tensordicts_stack": 484, "tensordict_rollout": [484, 485], "automatical": 484, "60": 484, "particularili": 484, "concatmodul": 484, "loss_td": 484, "contributor": 484, "curiou": 484, "nascent": 484, "unsupervis": 485, "_build_env": 485, "deserv": 485, "__episode__": 485, "__trajectory__": 485, "void": 485, "reproduct": 485, "tensordict_tprim": 485, "wrapper1": 485, "wrapper2": 485, "obviou": 485, "truth": 485, "env_transformed_bi": 485, "stanc": 485, "transformeddistribut": 485, "base_dist": 485, "concat": 485, "mofidi": 485, "transformedenviron": 485, "moderet": 485, "computation": 485, "incom": 485, "amongst": 485, "has_cuda": 485, "convention": 485, "markovian": 485, "bar_": 485, "get_someth": 485, "aargh": 485, "is_clos": 485, "foo_list": 485, "121": 485, "evolv": 485, "steadi": 485, "approx": 485, "absor": 485, "_extra_st": 485}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [276, 0, 1, "", "implement_for"], [430, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiProcessedWeightUpdater"], [15, 0, 1, "", "MultiSyncDataCollector"], [16, 0, 1, "", "MultiaSyncDataCollector"], [17, 0, 1, "", "RayWeightUpdater"], [18, 0, 1, "", "SyncDataCollector"], [19, 0, 1, "", "VanillaWeightUpdater"], [20, 0, 1, "", "WeightUpdaterBase"], [21, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[14, 1, 1, "", "all_worker_ids"], [14, 2, 1, "", "collector"], [14, 1, 1, "", "push_weights"], [14, 1, 1, "", "register_collector"]], "torchrl.collectors.MultiSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[17, 1, 1, "", "_get_server_weights"], [17, 1, 1, "", "_maybe_map_weights"], [17, 1, 1, "", "_skip_update"], [17, 1, 1, "", "_sync_weights_with_worker"], [17, 1, 1, "id0", "all_worker_ids"], [17, 2, 1, "", "collector"], [17, 1, 1, "", "push_weights"], [17, 1, 1, "", "register_collector"]], "torchrl.collectors.SyncDataCollector": [[18, 1, 1, "", "async_shutdown"], [18, 1, 1, "", "iterator"], [18, 1, 1, "", "load_state_dict"], [18, 1, 1, "", "pause"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "rollout"], [18, 1, 1, "", "set_seed"], [18, 1, 1, "", "shutdown"], [18, 1, 1, "", "start"], [18, 1, 1, "", "state_dict"], [18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "", "push_weights"], [19, 1, 1, "", "register_collector"]], "torchrl.collectors.WeightUpdaterBase": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 1, 1, "id0", "push_weights"], [20, 1, 1, "id1", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[22, 0, 1, "", "DistributedDataCollector"], [23, 0, 1, "", "DistributedSyncDataCollector"], [24, 0, 1, "", "DistributedWeightUpdater"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RPCWeightUpdater"], [27, 0, 1, "", "RayCollector"], [28, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[24, 1, 1, "", "_get_server_weights"], [24, 1, 1, "", "_maybe_map_weights"], [24, 1, 1, "", "_sync_weights_with_worker"], [24, 1, 1, "id0", "all_worker_ids"], [24, 2, 1, "", "collector"], [24, 1, 1, "", "push_weights"], [24, 1, 1, "", "register_collector"], [24, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "async_shutdown"], [25, 1, 1, "", "pause"], [25, 1, 1, "", "start"], [25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[26, 1, 1, "", "_get_server_weights"], [26, 1, 1, "", "_maybe_map_weights"], [26, 1, 1, "", "_sync_weights_with_worker"], [26, 1, 1, "id0", "all_worker_ids"], [26, 2, 1, "", "collector"], [26, 1, 1, "", "push_weights"], [26, 1, 1, "", "register_collector"], [26, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[27, 1, 1, "", "add_collectors"], [27, 1, 1, "", "async_shutdown"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "local_policy"], [27, 1, 1, "", "pause"], [27, 2, 1, "", "remote_collectors"], [27, 1, 1, "", "set_seed"], [27, 1, 1, "", "shutdown"], [27, 1, 1, "", "start"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "stop_remote_collectors"], [27, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[29, 0, 1, "", "LLMCollector"], [30, 0, 1, "", "vLLMUpdater"]], "torchrl.collectors.llm.LLMCollector": [[29, 1, 1, "", "async_shutdown"], [29, 2, 1, "", "dialog_turns_per_batch"], [29, 1, 1, "", "iterator"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "pause"], [29, 1, 1, "", "reset"], [29, 2, 1, "", "rollout"], [29, 1, 1, "", "set_seed"], [29, 1, 1, "", "shutdown"], [29, 1, 1, "", "start"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.vLLMUpdater": [[30, 1, 1, "", "all_worker_ids"], [30, 2, 1, "", "collector"], [30, 1, 1, "", "push_weights"], [30, 1, 1, "", "register_collector"]], "torchrl.collectors.utils": [[31, 3, 1, "", "split_trajectories"]], "torchrl.data": [[32, 0, 1, "", "AdaptiveKLController"], [33, 0, 1, "", "Binary"], [34, 0, 1, "", "BinaryDiscreteTensorSpec"], [35, 0, 1, "", "BinaryToDecimal"], [36, 0, 1, "", "Bounded"], [37, 0, 1, "", "BoundedTensorSpec"], [38, 0, 1, "", "Categorical"], [39, 0, 1, "", "Composite"], [40, 0, 1, "", "CompositeSpec"], [41, 0, 1, "", "ConstantKLController"], [42, 0, 1, "", "DensifyReward"], [43, 0, 1, "", "DiscreteTensorSpec"], [44, 0, 1, "", "Flat2TED"], [45, 0, 1, "", "H5Combine"], [46, 0, 1, "", "H5Split"], [47, 0, 1, "", "HashToInt"], [48, 0, 1, "", "LazyStackedCompositeSpec"], [49, 0, 1, "", "LazyStackedTensorSpec"], [50, 0, 1, "", "MCTSForest"], [51, 0, 1, "", "MultiCategorical"], [52, 0, 1, "", "MultiDiscreteTensorSpec"], [53, 0, 1, "", "MultiOneHot"], [54, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [55, 0, 1, "", "MultiStep"], [56, 0, 1, "", "Nested2TED"], [57, 0, 1, "", "NonTensor"], [58, 0, 1, "", "NonTensorSpec"], [59, 0, 1, "", "OneHot"], [60, 0, 1, "", "OneHotDiscreteTensorSpec"], [61, 0, 1, "", "PairwiseDataset"], [62, 0, 1, "", "PrioritizedReplayBuffer"], [63, 0, 1, "", "PromptData"], [64, 0, 1, "", "PromptTensorDictTokenizer"], [65, 0, 1, "", "QueryModule"], [66, 0, 1, "", "RandomProjectionHash"], [67, 0, 1, "", "RayReplayBuffer"], [68, 0, 1, "", "RemoteTensorDictReplayBuffer"], [69, 0, 1, "", "ReplayBuffer"], [70, 0, 1, "", "RewardData"], [71, 0, 1, "", "RolloutFromModel"], [72, 0, 1, "", "SipHash"], [73, 0, 1, "", "Stacked"], [74, 0, 1, "", "StackedComposite"], [75, 0, 1, "", "TED2Flat"], [76, 0, 1, "", "TED2Nested"], [77, 0, 1, "", "TensorDictMap"], [78, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [79, 0, 1, "", "TensorDictReplayBuffer"], [80, 0, 1, "", "TensorDictTokenizer"], [81, 0, 1, "", "TensorMap"], [82, 0, 1, "", "TensorSpec"], [83, 0, 1, "", "TokenizedDatasetLoader"], [84, 0, 1, "", "Tree"], [85, 0, 1, "", "Unbounded"], [86, 0, 1, "", "UnboundedContinuous"], [87, 0, 1, "", "UnboundedContinuousTensorSpec"], [88, 0, 1, "", "UnboundedDiscrete"], [89, 0, 1, "", "UnboundedDiscreteTensorSpec"], [90, 0, 1, "", "check_no_exclusive_keys"], [91, 0, 1, "", "consolidate_spec"], [92, 0, 1, "", "contains_lazy_spec"], [93, 0, 1, "", "create_infinite_iterator"], [94, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[32, 1, 1, "", "update"]], "torchrl.data.Binary": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 4, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "erase_memoize_cache"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 1, 1, "", "memoize_encode"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "set_provisional_n"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 4, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[35, 1, 1, "", "add_module"], [35, 1, 1, "", "apply"], [35, 1, 1, "", "bfloat16"], [35, 1, 1, "", "buffers"], [35, 1, 1, "", "children"], [35, 1, 1, "", "compile"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 1, 1, "", "double"], [35, 1, 1, "", "eval"], [35, 1, 1, "", "extra_repr"], [35, 1, 1, "", "float"], [35, 1, 1, "", "forward"], [35, 1, 1, "", "get_buffer"], [35, 1, 1, "", "get_extra_state"], [35, 1, 1, "", "get_parameter"], [35, 1, 1, "", "get_submodule"], [35, 1, 1, "", "half"], [35, 1, 1, "", "ipu"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "modules"], [35, 1, 1, "", "mtia"], [35, 1, 1, "", "named_buffers"], [35, 1, 1, "", "named_children"], [35, 1, 1, "", "named_modules"], [35, 1, 1, "", "named_parameters"], [35, 1, 1, "", "parameters"], [35, 1, 1, "", "register_backward_hook"], [35, 1, 1, "", "register_buffer"], [35, 1, 1, "", "register_forward_hook"], [35, 1, 1, "", "register_forward_pre_hook"], [35, 1, 1, "", "register_full_backward_hook"], [35, 1, 1, "", "register_full_backward_pre_hook"], [35, 1, 1, "", "register_load_state_dict_post_hook"], [35, 1, 1, "", "register_load_state_dict_pre_hook"], [35, 1, 1, "", "register_module"], [35, 1, 1, "", "register_parameter"], [35, 1, 1, "", "register_state_dict_post_hook"], [35, 1, 1, "", "register_state_dict_pre_hook"], [35, 1, 1, "", "requires_grad_"], [35, 1, 1, "", "set_extra_state"], [35, 1, 1, "", "set_submodule"], [35, 1, 1, "", "share_memory"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_empty"], [35, 1, 1, "", "train"], [35, 1, 1, "", "type"], [35, 1, 1, "", "xpu"], [35, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 2, 1, "", "device"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "erase_memoize_cache"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "make_neg_dim"], [36, 1, 1, "", "memoize_encode"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "set_provisional_n"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_categorical"], [38, 1, 1, "", "to_categorical_spec"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "to_one_hot"], [38, 1, 1, "", "to_one_hot_spec"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "update_mask"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 2, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "set"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "get"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_empty"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "items"], [40, 1, 1, "", "keys"], [40, 1, 1, "", "lock_"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "pop"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "separates"], [40, 1, 1, "", "set"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unlock_"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "values"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "compile"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "is_tdmodule_compatible"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "mtia"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_load_state_dict_pre_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_post_hook"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset_out_keys"], [42, 1, 1, "", "reset_parameters_recursive"], [42, 1, 1, "", "select_out_keys"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_submodule"], [42, 1, 1, "", "share_memory"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 4, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "set_provisional_n"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "compile"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "mtia"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_load_state_dict_pre_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "register_state_dict_post_hook"], [47, 1, 1, "", "register_state_dict_pre_hook"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_submodule"], [47, 1, 1, "", "share_memory"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 2, 1, "", "device"], [48, 1, 1, "", "empty"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "erase_memoize_cache"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "get"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_empty"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "items"], [48, 1, 1, "", "keys"], [48, 1, 1, "", "lock_"], [48, 1, 1, "", "make_neg_dim"], [48, 1, 1, "", "memoize_encode"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "pop"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "separates"], [48, 1, 1, "", "set"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unlock_"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "values"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[50, 2, 1, "", "action_keys"], [50, 2, 1, "", "done_keys"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "get_keys_from_env"], [50, 2, 1, "", "observation_keys"], [50, 2, 1, "", "reward_keys"], [50, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 4, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "erase_memoize_cache"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 1, 1, "", "memoize_encode"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "set_provisional_n"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 2, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "erase_memoize_cache"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 1, 1, "", "memoize_encode"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "erase_memoize_cache"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 1, 1, "", "memoize_encode"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 4, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "erase_memoize_cache"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 1, 1, "", "memoize_encode"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_categorical"], [59, 1, 1, "", "to_categorical_spec"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "to_one_hot"], [59, 1, 1, "", "to_one_hot_spec"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "update_mask"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[61, 2, 1, "", "device"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "fields"], [61, 1, 1, "", "from_dataset"], [61, 1, 1, "", "from_tensordict"], [61, 1, 1, "", "get"], [61, 1, 1, "", "load"], [61, 1, 1, "", "load_"], [61, 1, 1, "", "load_memmap"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "memmap"], [61, 1, 1, "", "memmap_"], [61, 1, 1, "", "memmap_like"], [61, 1, 1, "", "memmap_refresh_"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to_tensordict"], [61, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[63, 2, 1, "", "device"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "fields"], [63, 1, 1, "", "from_dataset"], [63, 1, 1, "", "from_tensordict"], [63, 1, 1, "", "get"], [63, 1, 1, "", "load"], [63, 1, 1, "", "load_"], [63, 1, 1, "", "load_memmap"], [63, 1, 1, "", "load_state_dict"], [63, 1, 1, "", "memmap"], [63, 1, 1, "", "memmap_"], [63, 1, 1, "", "memmap_like"], [63, 1, 1, "", "memmap_refresh_"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set"], [63, 1, 1, "", "state_dict"], [63, 1, 1, "", "to_tensordict"], [63, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[65, 1, 1, "", "add_module"], [65, 1, 1, "", "apply"], [65, 1, 1, "", "bfloat16"], [65, 1, 1, "", "buffers"], [65, 1, 1, "", "children"], [65, 1, 1, "", "compile"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 1, 1, "", "double"], [65, 1, 1, "", "eval"], [65, 1, 1, "", "extra_repr"], [65, 1, 1, "", "float"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_buffer"], [65, 1, 1, "", "get_extra_state"], [65, 1, 1, "", "get_parameter"], [65, 1, 1, "", "get_submodule"], [65, 1, 1, "", "half"], [65, 1, 1, "", "ipu"], [65, 1, 1, "", "is_tdmodule_compatible"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "modules"], [65, 1, 1, "", "mtia"], [65, 1, 1, "", "named_buffers"], [65, 1, 1, "", "named_children"], [65, 1, 1, "", "named_modules"], [65, 1, 1, "", "named_parameters"], [65, 1, 1, "", "parameters"], [65, 1, 1, "", "register_backward_hook"], [65, 1, 1, "", "register_buffer"], [65, 1, 1, "", "register_forward_hook"], [65, 1, 1, "", "register_forward_pre_hook"], [65, 1, 1, "", "register_full_backward_hook"], [65, 1, 1, "", "register_full_backward_pre_hook"], [65, 1, 1, "", "register_load_state_dict_post_hook"], [65, 1, 1, "", "register_load_state_dict_pre_hook"], [65, 1, 1, "", "register_module"], [65, 1, 1, "", "register_parameter"], [65, 1, 1, "", "register_state_dict_post_hook"], [65, 1, 1, "", "register_state_dict_pre_hook"], [65, 1, 1, "", "requires_grad_"], [65, 1, 1, "", "reset_out_keys"], [65, 1, 1, "", "reset_parameters_recursive"], [65, 1, 1, "", "select_out_keys"], [65, 1, 1, "", "set_extra_state"], [65, 1, 1, "", "set_submodule"], [65, 1, 1, "", "share_memory"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_empty"], [65, 1, 1, "", "train"], [65, 1, 1, "", "type"], [65, 1, 1, "", "xpu"], [65, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "as_remote"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 2, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 2, 1, "", "storage"], [67, 2, 1, "", "write_count"], [67, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[70, 2, 1, "", "device"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "fields"], [70, 1, 1, "", "from_tensordict"], [70, 1, 1, "", "get"], [70, 1, 1, "", "load"], [70, 1, 1, "", "load_"], [70, 1, 1, "", "load_memmap"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "memmap"], [70, 1, 1, "", "memmap_"], [70, 1, 1, "", "memmap_like"], [70, 1, 1, "", "memmap_refresh_"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "to_tensordict"], [70, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[71, 1, 1, "", "create_rollout_td"], [71, 1, 1, "", "generate"], [71, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "cardinality"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 2, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "enumerate"], [73, 1, 1, "", "erase_memoize_cache"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 1, 1, "", "memoize_encode"], [73, 2, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "erase_memoize_cache"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "get"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_empty"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "items"], [74, 1, 1, "", "keys"], [74, 1, 1, "", "lock_"], [74, 1, 1, "", "make_neg_dim"], [74, 1, 1, "", "memoize_encode"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "pop"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "separates"], [74, 1, 1, "", "set"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unlock_"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "values"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[77, 1, 1, "", "add_module"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "bfloat16"], [77, 1, 1, "", "buffers"], [77, 1, 1, "", "children"], [77, 1, 1, "", "compile"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 1, 1, "", "double"], [77, 1, 1, "", "eval"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "float"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "from_tensordict_pair"], [77, 1, 1, "", "get_buffer"], [77, 1, 1, "", "get_extra_state"], [77, 1, 1, "", "get_parameter"], [77, 1, 1, "", "get_submodule"], [77, 1, 1, "", "half"], [77, 1, 1, "", "ipu"], [77, 1, 1, "", "is_tdmodule_compatible"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "modules"], [77, 1, 1, "", "mtia"], [77, 1, 1, "", "named_buffers"], [77, 1, 1, "", "named_children"], [77, 1, 1, "", "named_modules"], [77, 1, 1, "", "named_parameters"], [77, 1, 1, "", "parameters"], [77, 1, 1, "", "register_backward_hook"], [77, 1, 1, "", "register_buffer"], [77, 1, 1, "", "register_forward_hook"], [77, 1, 1, "", "register_forward_pre_hook"], [77, 1, 1, "", "register_full_backward_hook"], [77, 1, 1, "", "register_full_backward_pre_hook"], [77, 1, 1, "", "register_load_state_dict_post_hook"], [77, 1, 1, "", "register_load_state_dict_pre_hook"], [77, 1, 1, "", "register_module"], [77, 1, 1, "", "register_parameter"], [77, 1, 1, "", "register_state_dict_post_hook"], [77, 1, 1, "", "register_state_dict_pre_hook"], [77, 1, 1, "", "requires_grad_"], [77, 1, 1, "", "reset_out_keys"], [77, 1, 1, "", "reset_parameters_recursive"], [77, 1, 1, "", "select_out_keys"], [77, 1, 1, "", "set_extra_state"], [77, 1, 1, "", "set_submodule"], [77, 1, 1, "", "share_memory"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_empty"], [77, 1, 1, "", "train"], [77, 1, 1, "", "type"], [77, 1, 1, "", "xpu"], [77, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 1, 1, "", "as_remote"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 2, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 2, 1, "", "storage"], [78, 2, 1, "", "write_count"], [78, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "erase_memoize_cache"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 1, 1, "", "memoize_encode"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[83, 1, 1, "", "dataset_to_tensordict"], [83, 1, 1, "", "load"]], "torchrl.data.Tree": [[84, 2, 1, "", "branching_action"], [84, 2, 1, "", "device"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "edges"], [84, 1, 1, "", "fields"], [84, 1, 1, "", "from_tensordict"], [84, 2, 1, "", "full_action_spec"], [84, 2, 1, "", "full_done_spec"], [84, 2, 1, "", "full_observation_spec"], [84, 2, 1, "", "full_reward_spec"], [84, 2, 1, "", "full_state_spec"], [84, 1, 1, "", "fully_expanded"], [84, 1, 1, "", "get"], [84, 1, 1, "", "get_vertex_by_hash"], [84, 1, 1, "", "get_vertex_by_id"], [84, 2, 1, "", "is_terminal"], [84, 1, 1, "", "load"], [84, 1, 1, "", "load_"], [84, 1, 1, "", "load_memmap"], [84, 1, 1, "", "load_state_dict"], [84, 1, 1, "", "make_node"], [84, 1, 1, "", "max_length"], [84, 1, 1, "", "memmap"], [84, 1, 1, "", "memmap_"], [84, 1, 1, "", "memmap_like"], [84, 1, 1, "", "memmap_refresh_"], [84, 2, 1, "", "node_observation"], [84, 2, 1, "", "node_observations"], [84, 2, 1, "", "num_children"], [84, 1, 1, "", "num_vertices"], [84, 2, 1, "", "parent"], [84, 1, 1, "", "plot"], [84, 2, 1, "", "prev_action"], [84, 1, 1, "", "rollout_from_path"], [84, 1, 1, "", "save"], [84, 2, 1, "", "selected_actions"], [84, 1, 1, "", "set"], [84, 1, 1, "", "state_dict"], [84, 1, 1, "", "to_string"], [84, 1, 1, "", "to_tensordict"], [84, 1, 1, "", "unbind"], [84, 1, 1, "", "valid_paths"], [84, 1, 1, "", "vertices"], [84, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "erase_memoize_cache"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 1, 1, "", "memoize_encode"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "erase_memoize_cache"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 1, 1, "", "memoize_encode"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "erase_memoize_cache"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 1, 1, "", "memoize_encode"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.llm": [[95, 0, 1, "", "ContentBase"], [96, 0, 1, "", "History"], [97, 0, 1, "", "LLMData"]], "torchrl.data.llm.ContentBase": [[95, 2, 1, "", "device"], [95, 1, 1, "", "dumps"], [95, 1, 1, "", "fields"], [95, 1, 1, "", "from_tensordict"], [95, 1, 1, "", "get"], [95, 1, 1, "", "load"], [95, 1, 1, "", "load_"], [95, 1, 1, "", "load_memmap"], [95, 1, 1, "", "load_state_dict"], [95, 1, 1, "", "memmap"], [95, 1, 1, "", "memmap_"], [95, 1, 1, "", "memmap_like"], [95, 1, 1, "", "memmap_refresh_"], [95, 1, 1, "", "save"], [95, 1, 1, "", "set"], [95, 1, 1, "", "state_dict"], [95, 1, 1, "", "to_tensordict"], [95, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[96, 1, 1, "", "append"], [96, 1, 1, "", "apply_chat_template"], [96, 1, 1, "", "default_spec"], [96, 2, 1, "", "device"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "fields"], [96, 1, 1, "", "from_tensordict"], [96, 1, 1, "", "get"], [96, 1, 1, "", "load"], [96, 1, 1, "", "load_"], [96, 1, 1, "", "load_memmap"], [96, 1, 1, "", "load_state_dict"], [96, 1, 1, "", "memmap"], [96, 1, 1, "", "memmap_"], [96, 1, 1, "", "memmap_like"], [96, 1, 1, "", "memmap_refresh_"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set"], [96, 1, 1, "", "state_dict"], [96, 1, 1, "", "to_tensordict"], [96, 1, 1, "", "unbind"]], "torchrl.data.llm.LLMData": [[97, 2, 1, "", "device"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "fields"], [97, 1, 1, "", "from_tensordict"], [97, 1, 1, "", "get"], [97, 1, 1, "", "load"], [97, 1, 1, "", "load_"], [97, 1, 1, "", "load_memmap"], [97, 1, 1, "", "load_state_dict"], [97, 1, 1, "", "memmap"], [97, 1, 1, "", "memmap_"], [97, 1, 1, "", "memmap_like"], [97, 1, 1, "", "memmap_refresh_"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set"], [97, 1, 1, "", "state_dict"], [97, 1, 1, "", "to_tensordict"], [97, 1, 1, "", "unbind"]], "torchrl.data.replay_buffers": [[98, 0, 1, "", "FlatStorageCheckpointer"], [99, 0, 1, "", "H5StorageCheckpointer"], [100, 0, 1, "", "ImmutableDatasetWriter"], [101, 0, 1, "", "LazyMemmapStorage"], [102, 0, 1, "", "LazyStackStorage"], [103, 0, 1, "", "LazyTensorStorage"], [104, 0, 1, "", "ListStorage"], [105, 0, 1, "", "ListStorageCheckpointer"], [106, 0, 1, "", "NestedStorageCheckpointer"], [107, 0, 1, "", "PrioritizedSampler"], [108, 0, 1, "", "PrioritizedSliceSampler"], [109, 0, 1, "", "RandomSampler"], [110, 0, 1, "", "ReplayBufferEnsemble"], [111, 0, 1, "", "RoundRobinWriter"], [112, 0, 1, "", "Sampler"], [113, 0, 1, "", "SamplerEnsemble"], [114, 0, 1, "", "SamplerWithoutReplacement"], [115, 0, 1, "", "SliceSampler"], [116, 0, 1, "", "SliceSamplerWithoutReplacement"], [117, 0, 1, "", "Storage"], [118, 0, 1, "", "StorageCheckpointerBase"], [119, 0, 1, "", "StorageEnsemble"], [120, 0, 1, "", "StorageEnsembleCheckpointer"], [121, 0, 1, "", "TensorDictMaxValueWriter"], [122, 0, 1, "", "TensorDictRoundRobinWriter"], [123, 0, 1, "", "TensorStorage"], [124, 0, 1, "", "TensorStorageCheckpointer"], [125, 0, 1, "", "Writer"], [126, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[100, 1, 1, "", "add"], [100, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[102, 1, 1, "", "attach"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "load"], [102, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[104, 1, 1, "", "attach"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "load"], [104, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[107, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[108, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[110, 1, 1, "", "add"], [110, 1, 1, "", "append_transform"], [110, 1, 1, "", "as_remote"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "dumps"], [110, 1, 1, "", "empty"], [110, 1, 1, "", "extend"], [110, 1, 1, "", "insert_transform"], [110, 1, 1, "", "load"], [110, 1, 1, "", "loads"], [110, 1, 1, "", "register_load_hook"], [110, 1, 1, "", "register_save_hook"], [110, 1, 1, "", "sample"], [110, 2, 1, "", "sampler"], [110, 1, 1, "", "save"], [110, 1, 1, "", "set_sampler"], [110, 1, 1, "", "set_storage"], [110, 1, 1, "", "set_writer"], [110, 2, 1, "", "storage"], [110, 2, 1, "", "write_count"], [110, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[111, 1, 1, "", "add"], [111, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[119, 1, 1, "", "attach"], [119, 1, 1, "", "dump"], [119, 1, 1, "", "load"], [119, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[121, 1, 1, "", "add"], [121, 1, 1, "", "extend"], [121, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[122, 1, 1, "", "add"], [122, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[123, 1, 1, "", "attach"], [123, 1, 1, "", "dump"], [123, 1, 1, "", "load"], [123, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[125, 1, 1, "", "add"], [125, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[126, 1, 1, "", "add"], [126, 1, 1, "", "extend"]], "torchrl.envs": [[127, 0, 1, "", "AsyncEnvPool"], [128, 3, 1, "", "BraxEnv"], [129, 3, 1, "", "BraxWrapper"], [130, 0, 1, "", "ChessEnv"], [131, 3, 1, "", "DMControlEnv"], [132, 3, 1, "", "DMControlWrapper"], [133, 0, 1, "", "EnvBase"], [134, 0, 1, "", "EnvCreator"], [135, 0, 1, "", "EnvMetaData"], [136, 3, 1, "", "GymEnv"], [137, 0, 1, "", "GymLikeEnv"], [138, 3, 1, "", "GymWrapper"], [139, 3, 1, "", "HabitatEnv"], [140, 3, 1, "", "IsaacGymEnv"], [141, 3, 1, "", "IsaacGymWrapper"], [142, 3, 1, "", "IsaacLabWrapper"], [143, 3, 1, "", "JumanjiEnv"], [144, 3, 1, "", "JumanjiWrapper"], [145, 0, 1, "", "LLMHashingEnv"], [146, 3, 1, "", "MOGymEnv"], [147, 3, 1, "", "MOGymWrapper"], [148, 3, 1, "", "MarlGroupMapType"], [149, 3, 1, "", "MeltingpotEnv"], [150, 3, 1, "", "MeltingpotWrapper"], [151, 3, 1, "", "ModelBasedEnvBase"], [152, 3, 1, "", "MultiThreadedEnv"], [153, 3, 1, "", "MultiThreadedEnvWrapper"], [154, 3, 1, "", "OpenMLEnv"], [155, 3, 1, "", "OpenSpielEnv"], [156, 3, 1, "", "OpenSpielWrapper"], [157, 0, 1, "", "ParallelEnv"], [158, 0, 1, "", "PendulumEnv"], [159, 3, 1, "", "PettingZooEnv"], [160, 3, 1, "", "PettingZooWrapper"], [161, 0, 1, "", "ProcessorAsyncEnvPool"], [162, 3, 1, "", "RandomPolicy"], [163, 3, 1, "", "RoboHiveEnv"], [164, 3, 1, "", "SMACv2Env"], [165, 3, 1, "", "SMACv2Wrapper"], [166, 0, 1, "", "SerialEnv"], [167, 0, 1, "", "ThreadingAsyncEnvPool"], [168, 0, 1, "", "TicTacToeEnv"], [169, 3, 1, "", "UnityMLAgentsEnv"], [170, 3, 1, "", "UnityMLAgentsWrapper"], [171, 3, 1, "", "VmasEnv"], [172, 3, 1, "", "VmasWrapper"], [173, 3, 1, "", "check_env_specs"], [174, 3, 1, "", "check_marl_grouping"], [175, 3, 1, "", "exploration_type"], [176, 3, 1, "", "get_available_libraries"], [177, 3, 1, "", "gym_backend"], [200, 3, 1, "", "make_composite_from_td"], [151, 1, 1, "", "rand_step"], [203, 3, 1, "", "register_gym_spec_conversion"], [151, 1, 1, "", "reset"], [151, 1, 1, "", "rollout"], [204, 3, 1, "", "set_exploration_type"], [205, 3, 1, "", "set_gym_backend"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "step"], [206, 3, 1, "", "step_mdp"], [207, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[127, 2, 1, "", "action_key"], [127, 2, 1, "", "action_keys"], [127, 2, 1, "", "action_spec"], [127, 2, 1, "", "action_spec_unbatched"], [127, 1, 1, "", "add_module"], [127, 1, 1, "", "add_truncated_keys"], [127, 1, 1, "", "all_actions"], [127, 1, 1, "", "any_done"], [127, 1, 1, "", "append_transform"], [127, 1, 1, "", "apply"], [127, 1, 1, "", "auto_specs_"], [127, 2, 1, "", "batch_dims"], [127, 2, 1, "", "batch_locked"], [127, 2, 1, "", "batch_size"], [127, 1, 1, "", "bfloat16"], [127, 1, 1, "", "buffers"], [127, 1, 1, "", "cardinality"], [127, 1, 1, "", "check_env_specs"], [127, 1, 1, "", "children"], [127, 1, 1, "", "compile"], [127, 1, 1, "", "cpu"], [127, 1, 1, "", "cuda"], [127, 2, 1, "", "done_key"], [127, 2, 1, "", "done_keys"], [127, 2, 1, "", "done_keys_groups"], [127, 2, 1, "", "done_spec"], [127, 2, 1, "", "done_spec_unbatched"], [127, 1, 1, "", "double"], [127, 1, 1, "", "empty_cache"], [127, 2, 1, "", "env_batch_sizes"], [127, 1, 1, "", "eval"], [127, 1, 1, "", "extra_repr"], [127, 1, 1, "", "fake_tensordict"], [127, 1, 1, "", "float"], [127, 1, 1, "", "forward"], [127, 2, 1, "", "full_action_spec"], [127, 2, 1, "", "full_action_spec_unbatched"], [127, 2, 1, "", "full_done_spec"], [127, 2, 1, "", "full_done_spec_unbatched"], [127, 2, 1, "", "full_observation_spec_unbatched"], [127, 2, 1, "", "full_reward_spec"], [127, 2, 1, "", "full_reward_spec_unbatched"], [127, 2, 1, "", "full_state_spec"], [127, 2, 1, "", "full_state_spec_unbatched"], [127, 1, 1, "", "get_buffer"], [127, 1, 1, "", "get_extra_state"], [127, 1, 1, "", "get_parameter"], [127, 1, 1, "", "get_submodule"], [127, 1, 1, "", "half"], [127, 2, 1, "", "input_spec"], [127, 2, 1, "", "input_spec_unbatched"], [127, 1, 1, "", "ipu"], [127, 2, 1, "", "is_spec_locked"], [127, 1, 1, "", "load_state_dict"], [127, 1, 1, "", "maybe_reset"], [127, 1, 1, "", "modules"], [127, 1, 1, "", "mtia"], [127, 1, 1, "", "named_buffers"], [127, 1, 1, "", "named_children"], [127, 1, 1, "", "named_modules"], [127, 1, 1, "", "named_parameters"], [127, 2, 1, "", "observation_keys"], [127, 2, 1, "", "observation_spec"], [127, 2, 1, "", "observation_spec_unbatched"], [127, 2, 1, "", "output_spec"], [127, 2, 1, "", "output_spec_unbatched"], [127, 1, 1, "", "parameters"], [127, 1, 1, "", "rand_action"], [127, 1, 1, "", "rand_step"], [127, 1, 1, "", "register_backward_hook"], [127, 1, 1, "", "register_buffer"], [127, 1, 1, "", "register_forward_hook"], [127, 1, 1, "", "register_forward_pre_hook"], [127, 1, 1, "", "register_full_backward_hook"], [127, 1, 1, "", "register_full_backward_pre_hook"], [127, 1, 1, "", "register_gym"], [127, 1, 1, "", "register_load_state_dict_post_hook"], [127, 1, 1, "", "register_load_state_dict_pre_hook"], [127, 1, 1, "", "register_module"], [127, 1, 1, "", "register_parameter"], [127, 1, 1, "", "register_state_dict_post_hook"], [127, 1, 1, "", "register_state_dict_pre_hook"], [127, 1, 1, "", "requires_grad_"], [127, 1, 1, "", "reset"], [127, 2, 1, "", "reset_keys"], [127, 2, 1, "", "reward_key"], [127, 2, 1, "", "reward_keys"], [127, 2, 1, "", "reward_spec"], [127, 2, 1, "", "reward_spec_unbatched"], [127, 1, 1, "", "rollout"], [127, 1, 1, "", "set_extra_state"], [127, 1, 1, "", "set_seed"], [127, 1, 1, "", "set_spec_lock_"], [127, 1, 1, "", "set_submodule"], [127, 2, 1, "", "shape"], [127, 1, 1, "", "share_memory"], [127, 2, 1, "", "specs"], [127, 1, 1, "", "state_dict"], [127, 2, 1, "", "state_keys"], [127, 2, 1, "", "state_spec"], [127, 2, 1, "", "state_spec_unbatched"], [127, 1, 1, "", "step"], [127, 1, 1, "", "step_and_maybe_reset"], [127, 1, 1, "", "step_mdp"], [127, 1, 1, "", "to"], [127, 1, 1, "", "to_empty"], [127, 1, 1, "", "train"], [127, 1, 1, "", "type"], [127, 1, 1, "", "xpu"], [127, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[130, 2, 1, "", "action_key"], [130, 2, 1, "", "action_keys"], [130, 2, 1, "", "action_spec"], [130, 2, 1, "", "action_spec_unbatched"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "all_actions"], [130, 1, 1, "", "any_done"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 1, 1, "", "auto_specs_"], [130, 2, 1, "", "batch_dims"], [130, 2, 1, "", "batch_locked"], [130, 2, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "cardinality"], [130, 1, 1, "", "check_env_specs"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 2, 1, "", "done_key"], [130, 2, 1, "", "done_keys"], [130, 2, 1, "", "done_keys_groups"], [130, 2, 1, "", "done_spec"], [130, 2, 1, "", "done_spec_unbatched"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 2, 1, "", "full_action_spec"], [130, 2, 1, "", "full_action_spec_unbatched"], [130, 2, 1, "", "full_done_spec"], [130, 2, 1, "", "full_done_spec_unbatched"], [130, 2, 1, "", "full_observation_spec_unbatched"], [130, 2, 1, "", "full_reward_spec"], [130, 2, 1, "", "full_reward_spec_unbatched"], [130, 2, 1, "", "full_state_spec"], [130, 2, 1, "", "full_state_spec_unbatched"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_legal_moves"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 2, 1, "", "input_spec"], [130, 2, 1, "", "input_spec_unbatched"], [130, 1, 1, "", "ipu"], [130, 2, 1, "", "is_spec_locked"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 2, 1, "", "observation_keys"], [130, 2, 1, "", "observation_spec"], [130, 2, 1, "", "observation_spec_unbatched"], [130, 2, 1, "", "output_spec"], [130, 2, 1, "", "output_spec_unbatched"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 2, 1, "", "reset_keys"], [130, 2, 1, "", "reward_key"], [130, 2, 1, "", "reward_keys"], [130, 2, 1, "", "reward_spec"], [130, 2, 1, "", "reward_spec_unbatched"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_spec_lock_"], [130, 1, 1, "", "set_submodule"], [130, 2, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 2, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 2, 1, "", "state_keys"], [130, 2, 1, "", "state_spec"], [130, 2, 1, "", "state_spec_unbatched"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "step_mdp"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[133, 2, 1, "", "action_key"], [133, 2, 1, "", "action_keys"], [133, 2, 1, "", "action_spec"], [133, 2, 1, "", "action_spec_unbatched"], [133, 1, 1, "", "add_module"], [133, 1, 1, "", "add_truncated_keys"], [133, 1, 1, "", "all_actions"], [133, 1, 1, "", "any_done"], [133, 1, 1, "", "append_transform"], [133, 1, 1, "", "apply"], [133, 1, 1, "", "auto_specs_"], [133, 2, 1, "", "batch_dims"], [133, 2, 1, "", "batch_locked"], [133, 2, 1, "", "batch_size"], [133, 1, 1, "", "bfloat16"], [133, 1, 1, "", "buffers"], [133, 1, 1, "", "cardinality"], [133, 1, 1, "", "check_env_specs"], [133, 1, 1, "", "children"], [133, 1, 1, "", "compile"], [133, 1, 1, "", "cpu"], [133, 1, 1, "", "cuda"], [133, 2, 1, "", "done_key"], [133, 2, 1, "", "done_keys"], [133, 2, 1, "", "done_keys_groups"], [133, 2, 1, "", "done_spec"], [133, 2, 1, "", "done_spec_unbatched"], [133, 1, 1, "", "double"], [133, 1, 1, "", "empty_cache"], [133, 1, 1, "", "eval"], [133, 1, 1, "", "extra_repr"], [133, 1, 1, "", "fake_tensordict"], [133, 1, 1, "", "float"], [133, 1, 1, "", "forward"], [133, 2, 1, "", "full_action_spec"], [133, 2, 1, "", "full_action_spec_unbatched"], [133, 2, 1, "", "full_done_spec"], [133, 2, 1, "", "full_done_spec_unbatched"], [133, 2, 1, "", "full_observation_spec_unbatched"], [133, 2, 1, "", "full_reward_spec"], [133, 2, 1, "", "full_reward_spec_unbatched"], [133, 2, 1, "", "full_state_spec"], [133, 2, 1, "", "full_state_spec_unbatched"], [133, 1, 1, "", "get_buffer"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "get_parameter"], [133, 1, 1, "", "get_submodule"], [133, 1, 1, "", "half"], [133, 2, 1, "", "input_spec"], [133, 2, 1, "", "input_spec_unbatched"], [133, 1, 1, "", "ipu"], [133, 2, 1, "", "is_spec_locked"], [133, 1, 1, "", "load_state_dict"], [133, 1, 1, "", "maybe_reset"], [133, 1, 1, "", "modules"], [133, 1, 1, "", "mtia"], [133, 1, 1, "", "named_buffers"], [133, 1, 1, "", "named_children"], [133, 1, 1, "", "named_modules"], [133, 1, 1, "", "named_parameters"], [133, 2, 1, "", "observation_keys"], [133, 2, 1, "", "observation_spec"], [133, 2, 1, "", "observation_spec_unbatched"], [133, 2, 1, "", "output_spec"], [133, 2, 1, "", "output_spec_unbatched"], [133, 1, 1, "", "parameters"], [133, 1, 1, "", "rand_action"], [133, 1, 1, "id0", "rand_step"], [133, 1, 1, "", "register_backward_hook"], [133, 1, 1, "", "register_buffer"], [133, 1, 1, "", "register_forward_hook"], [133, 1, 1, "", "register_forward_pre_hook"], [133, 1, 1, "", "register_full_backward_hook"], [133, 1, 1, "", "register_full_backward_pre_hook"], [133, 1, 1, "", "register_gym"], [133, 1, 1, "", "register_load_state_dict_post_hook"], [133, 1, 1, "", "register_load_state_dict_pre_hook"], [133, 1, 1, "", "register_module"], [133, 1, 1, "", "register_parameter"], [133, 1, 1, "", "register_state_dict_post_hook"], [133, 1, 1, "", "register_state_dict_pre_hook"], [133, 1, 1, "", "requires_grad_"], [133, 1, 1, "id1", "reset"], [133, 2, 1, "", "reset_keys"], [133, 2, 1, "", "reward_key"], [133, 2, 1, "", "reward_keys"], [133, 2, 1, "", "reward_spec"], [133, 2, 1, "", "reward_spec_unbatched"], [133, 1, 1, "id2", "rollout"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "id3", "set_seed"], [133, 1, 1, "", "set_spec_lock_"], [133, 1, 1, "", "set_submodule"], [133, 2, 1, "", "shape"], [133, 1, 1, "", "share_memory"], [133, 2, 1, "", "specs"], [133, 1, 1, "", "state_dict"], [133, 2, 1, "", "state_keys"], [133, 2, 1, "", "state_spec"], [133, 2, 1, "", "state_spec_unbatched"], [133, 1, 1, "id4", "step"], [133, 1, 1, "", "step_and_maybe_reset"], [133, 1, 1, "", "step_mdp"], [133, 1, 1, "", "to"], [133, 1, 1, "", "to_empty"], [133, 1, 1, "", "train"], [133, 1, 1, "", "type"], [133, 1, 1, "", "xpu"], [133, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[134, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[137, 2, 1, "", "action_key"], [137, 2, 1, "", "action_keys"], [137, 2, 1, "", "action_spec"], [137, 2, 1, "", "action_spec_unbatched"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "all_actions"], [137, 1, 1, "", "any_done"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 1, 1, "", "auto_register_info_dict"], [137, 1, 1, "", "auto_specs_"], [137, 2, 1, "", "batch_dims"], [137, 2, 1, "", "batch_locked"], [137, 2, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "cardinality"], [137, 1, 1, "", "check_env_specs"], [137, 1, 1, "", "children"], [137, 1, 1, "", "close"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 2, 1, "", "done_key"], [137, 2, 1, "", "done_keys"], [137, 2, 1, "", "done_keys_groups"], [137, 2, 1, "", "done_spec"], [137, 2, 1, "", "done_spec_unbatched"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "fast_encoding"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 2, 1, "", "full_action_spec"], [137, 2, 1, "", "full_action_spec_unbatched"], [137, 2, 1, "", "full_done_spec"], [137, 2, 1, "", "full_done_spec_unbatched"], [137, 2, 1, "", "full_observation_spec_unbatched"], [137, 2, 1, "", "full_reward_spec"], [137, 2, 1, "", "full_reward_spec_unbatched"], [137, 2, 1, "", "full_state_spec"], [137, 2, 1, "", "full_state_spec_unbatched"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 2, 1, "", "input_spec"], [137, 2, 1, "", "input_spec_unbatched"], [137, 1, 1, "", "ipu"], [137, 2, 1, "", "is_spec_locked"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 2, 1, "", "observation_keys"], [137, 2, 1, "", "observation_spec"], [137, 2, 1, "", "observation_spec_unbatched"], [137, 2, 1, "", "output_spec"], [137, 2, 1, "", "output_spec_unbatched"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "read_action"], [137, 1, 1, "", "read_done"], [137, 1, 1, "", "read_obs"], [137, 1, 1, "", "read_reward"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 2, 1, "", "reset_keys"], [137, 2, 1, "", "reward_key"], [137, 2, 1, "", "reward_keys"], [137, 2, 1, "", "reward_spec"], [137, 2, 1, "", "reward_spec_unbatched"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_info_dict_reader"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_spec_lock_"], [137, 1, 1, "", "set_submodule"], [137, 2, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 2, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 2, 1, "", "state_keys"], [137, 2, 1, "", "state_spec"], [137, 2, 1, "", "state_spec_unbatched"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "step_mdp"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[145, 2, 1, "", "action_key"], [145, 2, 1, "", "action_keys"], [145, 2, 1, "", "action_spec"], [145, 2, 1, "", "action_spec_unbatched"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "all_actions"], [145, 1, 1, "", "any_done"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 1, 1, "", "auto_specs_"], [145, 2, 1, "", "batch_dims"], [145, 2, 1, "", "batch_locked"], [145, 2, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "cardinality"], [145, 1, 1, "", "check_env_specs"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 2, 1, "", "done_key"], [145, 2, 1, "", "done_keys"], [145, 2, 1, "", "done_keys_groups"], [145, 2, 1, "", "done_spec"], [145, 2, 1, "", "done_spec_unbatched"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 2, 1, "", "full_action_spec"], [145, 2, 1, "", "full_action_spec_unbatched"], [145, 2, 1, "", "full_done_spec"], [145, 2, 1, "", "full_done_spec_unbatched"], [145, 2, 1, "", "full_observation_spec_unbatched"], [145, 2, 1, "", "full_reward_spec"], [145, 2, 1, "", "full_reward_spec_unbatched"], [145, 2, 1, "", "full_state_spec"], [145, 2, 1, "", "full_state_spec_unbatched"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 2, 1, "", "input_spec"], [145, 2, 1, "", "input_spec_unbatched"], [145, 1, 1, "", "ipu"], [145, 2, 1, "", "is_spec_locked"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "make_tensordict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 2, 1, "", "observation_keys"], [145, 2, 1, "", "observation_spec"], [145, 2, 1, "", "observation_spec_unbatched"], [145, 2, 1, "", "output_spec"], [145, 2, 1, "", "output_spec_unbatched"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 2, 1, "", "reset_keys"], [145, 2, 1, "", "reward_key"], [145, 2, 1, "", "reward_keys"], [145, 2, 1, "", "reward_spec"], [145, 2, 1, "", "reward_spec_unbatched"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_spec_lock_"], [145, 1, 1, "", "set_submodule"], [145, 2, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 2, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 2, 1, "", "state_keys"], [145, 2, 1, "", "state_spec"], [145, 2, 1, "", "state_spec_unbatched"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "step_mdp"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[157, 2, 1, "", "action_key"], [157, 2, 1, "", "action_keys"], [157, 2, 1, "", "action_spec"], [157, 2, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "all_actions"], [157, 1, 1, "", "any_done"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "auto_specs_"], [157, 2, 1, "", "batch_dims"], [157, 2, 1, "", "batch_locked"], [157, 2, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 2, 1, "", "done_key"], [157, 2, 1, "", "done_keys"], [157, 2, 1, "", "done_keys_groups"], [157, 2, 1, "", "done_spec"], [157, 2, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 2, 1, "", "full_action_spec"], [157, 2, 1, "", "full_action_spec_unbatched"], [157, 2, 1, "", "full_done_spec"], [157, 2, 1, "", "full_done_spec_unbatched"], [157, 2, 1, "", "full_observation_spec_unbatched"], [157, 2, 1, "", "full_reward_spec"], [157, 2, 1, "", "full_reward_spec_unbatched"], [157, 2, 1, "", "full_state_spec"], [157, 2, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 2, 1, "", "input_spec"], [157, 2, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 2, 1, "", "is_spec_locked"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 2, 1, "", "observation_keys"], [157, 2, 1, "", "observation_spec"], [157, 2, 1, "", "observation_spec_unbatched"], [157, 2, 1, "", "output_spec"], [157, 2, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 2, 1, "", "reset_keys"], [157, 2, 1, "", "reward_key"], [157, 2, 1, "", "reward_keys"], [157, 2, 1, "", "reward_spec"], [157, 2, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_spec_lock_"], [157, 1, 1, "", "set_submodule"], [157, 2, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 2, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 2, 1, "", "state_keys"], [157, 2, 1, "", "state_spec"], [157, 2, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "update_kwargs"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "gen_params"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[161, 1, 1, "", "_setup"], [161, 2, 1, "", "action_key"], [161, 2, 1, "", "action_keys"], [161, 2, 1, "", "action_spec"], [161, 2, 1, "", "action_spec_unbatched"], [161, 1, 1, "", "add_module"], [161, 1, 1, "", "add_truncated_keys"], [161, 1, 1, "", "all_actions"], [161, 1, 1, "", "any_done"], [161, 1, 1, "", "append_transform"], [161, 1, 1, "", "apply"], [161, 1, 1, "", "async_reset_recv"], [161, 1, 1, "", "async_reset_send"], [161, 1, 1, "", "async_step_recv"], [161, 1, 1, "", "async_step_send"], [161, 1, 1, "", "auto_specs_"], [161, 2, 1, "", "batch_dims"], [161, 2, 1, "", "batch_locked"], [161, 2, 1, "", "batch_size"], [161, 1, 1, "", "bfloat16"], [161, 1, 1, "", "buffers"], [161, 1, 1, "", "cardinality"], [161, 1, 1, "", "check_env_specs"], [161, 1, 1, "", "children"], [161, 1, 1, "", "compile"], [161, 1, 1, "", "cpu"], [161, 1, 1, "", "cuda"], [161, 2, 1, "", "done_key"], [161, 2, 1, "", "done_keys"], [161, 2, 1, "", "done_keys_groups"], [161, 2, 1, "", "done_spec"], [161, 2, 1, "", "done_spec_unbatched"], [161, 1, 1, "", "double"], [161, 1, 1, "", "empty_cache"], [161, 2, 1, "", "env_batch_sizes"], [161, 1, 1, "", "eval"], [161, 1, 1, "", "extra_repr"], [161, 1, 1, "", "fake_tensordict"], [161, 1, 1, "", "float"], [161, 1, 1, "", "forward"], [161, 2, 1, "", "full_action_spec"], [161, 2, 1, "", "full_action_spec_unbatched"], [161, 2, 1, "", "full_done_spec"], [161, 2, 1, "", "full_done_spec_unbatched"], [161, 2, 1, "", "full_observation_spec_unbatched"], [161, 2, 1, "", "full_reward_spec"], [161, 2, 1, "", "full_reward_spec_unbatched"], [161, 2, 1, "", "full_state_spec"], [161, 2, 1, "", "full_state_spec_unbatched"], [161, 1, 1, "", "get_buffer"], [161, 1, 1, "", "get_extra_state"], [161, 1, 1, "", "get_parameter"], [161, 1, 1, "", "get_submodule"], [161, 1, 1, "", "half"], [161, 2, 1, "", "input_spec"], [161, 2, 1, "", "input_spec_unbatched"], [161, 1, 1, "", "ipu"], [161, 2, 1, "", "is_spec_locked"], [161, 1, 1, "", "load_state_dict"], [161, 1, 1, "", "maybe_reset"], [161, 1, 1, "", "modules"], [161, 1, 1, "", "mtia"], [161, 1, 1, "", "named_buffers"], [161, 1, 1, "", "named_children"], [161, 1, 1, "", "named_modules"], [161, 1, 1, "", "named_parameters"], [161, 2, 1, "", "observation_keys"], [161, 2, 1, "", "observation_spec"], [161, 2, 1, "", "observation_spec_unbatched"], [161, 2, 1, "", "output_spec"], [161, 2, 1, "", "output_spec_unbatched"], [161, 1, 1, "", "parameters"], [161, 1, 1, "", "rand_action"], [161, 1, 1, "", "rand_step"], [161, 1, 1, "", "register_backward_hook"], [161, 1, 1, "", "register_buffer"], [161, 1, 1, "", "register_forward_hook"], [161, 1, 1, "", "register_forward_pre_hook"], [161, 1, 1, "", "register_full_backward_hook"], [161, 1, 1, "", "register_full_backward_pre_hook"], [161, 1, 1, "", "register_gym"], [161, 1, 1, "", "register_load_state_dict_post_hook"], [161, 1, 1, "", "register_load_state_dict_pre_hook"], [161, 1, 1, "", "register_module"], [161, 1, 1, "", "register_parameter"], [161, 1, 1, "", "register_state_dict_post_hook"], [161, 1, 1, "", "register_state_dict_pre_hook"], [161, 1, 1, "", "requires_grad_"], [161, 1, 1, "", "reset"], [161, 2, 1, "", "reset_keys"], [161, 2, 1, "", "reward_key"], [161, 2, 1, "", "reward_keys"], [161, 2, 1, "", "reward_spec"], [161, 2, 1, "", "reward_spec_unbatched"], [161, 1, 1, "", "rollout"], [161, 1, 1, "", "set_extra_state"], [161, 1, 1, "", "set_seed"], [161, 1, 1, "", "set_spec_lock_"], [161, 1, 1, "", "set_submodule"], [161, 2, 1, "", "shape"], [161, 1, 1, "", "share_memory"], [161, 1, 1, "", "shutdown"], [161, 2, 1, "", "specs"], [161, 1, 1, "", "state_dict"], [161, 2, 1, "", "state_keys"], [161, 2, 1, "", "state_spec"], [161, 2, 1, "", "state_spec_unbatched"], [161, 1, 1, "", "step"], [161, 1, 1, "", "step_and_maybe_reset"], [161, 1, 1, "", "step_mdp"], [161, 1, 1, "", "to"], [161, 1, 1, "", "to_empty"], [161, 1, 1, "", "train"], [161, 1, 1, "", "type"], [161, 1, 1, "", "xpu"], [161, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[166, 2, 1, "", "action_key"], [166, 2, 1, "", "action_keys"], [166, 2, 1, "", "action_spec"], [166, 2, 1, "", "action_spec_unbatched"], [166, 1, 1, "", "add_module"], [166, 1, 1, "", "add_truncated_keys"], [166, 1, 1, "", "all_actions"], [166, 1, 1, "", "any_done"], [166, 1, 1, "", "append_transform"], [166, 1, 1, "", "apply"], [166, 1, 1, "", "auto_specs_"], [166, 2, 1, "", "batch_dims"], [166, 2, 1, "", "batch_locked"], [166, 2, 1, "", "batch_size"], [166, 1, 1, "", "bfloat16"], [166, 1, 1, "", "buffers"], [166, 1, 1, "", "cardinality"], [166, 1, 1, "", "check_env_specs"], [166, 1, 1, "", "children"], [166, 1, 1, "", "compile"], [166, 1, 1, "", "cpu"], [166, 1, 1, "", "cuda"], [166, 2, 1, "", "done_key"], [166, 2, 1, "", "done_keys"], [166, 2, 1, "", "done_keys_groups"], [166, 2, 1, "", "done_spec"], [166, 2, 1, "", "done_spec_unbatched"], [166, 1, 1, "", "double"], [166, 1, 1, "", "empty_cache"], [166, 1, 1, "", "eval"], [166, 1, 1, "", "extra_repr"], [166, 1, 1, "", "fake_tensordict"], [166, 1, 1, "", "float"], [166, 1, 1, "", "forward"], [166, 2, 1, "", "full_action_spec"], [166, 2, 1, "", "full_action_spec_unbatched"], [166, 2, 1, "", "full_done_spec"], [166, 2, 1, "", "full_done_spec_unbatched"], [166, 2, 1, "", "full_observation_spec_unbatched"], [166, 2, 1, "", "full_reward_spec"], [166, 2, 1, "", "full_reward_spec_unbatched"], [166, 2, 1, "", "full_state_spec"], [166, 2, 1, "", "full_state_spec_unbatched"], [166, 1, 1, "", "get_buffer"], [166, 1, 1, "", "get_extra_state"], [166, 1, 1, "", "get_parameter"], [166, 1, 1, "", "get_submodule"], [166, 1, 1, "", "half"], [166, 2, 1, "", "input_spec"], [166, 2, 1, "", "input_spec_unbatched"], [166, 1, 1, "", "ipu"], [166, 2, 1, "", "is_spec_locked"], [166, 1, 1, "", "load_state_dict"], [166, 1, 1, "", "maybe_reset"], [166, 1, 1, "", "modules"], [166, 1, 1, "", "mtia"], [166, 1, 1, "", "named_buffers"], [166, 1, 1, "", "named_children"], [166, 1, 1, "", "named_modules"], [166, 1, 1, "", "named_parameters"], [166, 2, 1, "", "observation_keys"], [166, 2, 1, "", "observation_spec"], [166, 2, 1, "", "observation_spec_unbatched"], [166, 2, 1, "", "output_spec"], [166, 2, 1, "", "output_spec_unbatched"], [166, 1, 1, "", "parameters"], [166, 1, 1, "", "rand_action"], [166, 1, 1, "", "rand_step"], [166, 1, 1, "", "register_backward_hook"], [166, 1, 1, "", "register_buffer"], [166, 1, 1, "", "register_forward_hook"], [166, 1, 1, "", "register_forward_pre_hook"], [166, 1, 1, "", "register_full_backward_hook"], [166, 1, 1, "", "register_full_backward_pre_hook"], [166, 1, 1, "", "register_gym"], [166, 1, 1, "", "register_load_state_dict_post_hook"], [166, 1, 1, "", "register_load_state_dict_pre_hook"], [166, 1, 1, "", "register_module"], [166, 1, 1, "", "register_parameter"], [166, 1, 1, "", "register_state_dict_post_hook"], [166, 1, 1, "", "register_state_dict_pre_hook"], [166, 1, 1, "", "requires_grad_"], [166, 1, 1, "", "reset"], [166, 2, 1, "", "reset_keys"], [166, 2, 1, "", "reward_key"], [166, 2, 1, "", "reward_keys"], [166, 2, 1, "", "reward_spec"], [166, 2, 1, "", "reward_spec_unbatched"], [166, 1, 1, "", "rollout"], [166, 1, 1, "", "set_extra_state"], [166, 1, 1, "", "set_seed"], [166, 1, 1, "", "set_spec_lock_"], [166, 1, 1, "", "set_submodule"], [166, 2, 1, "", "shape"], [166, 1, 1, "", "share_memory"], [166, 2, 1, "", "specs"], [166, 1, 1, "", "state_dict"], [166, 2, 1, "", "state_keys"], [166, 2, 1, "", "state_spec"], [166, 2, 1, "", "state_spec_unbatched"], [166, 1, 1, "", "step"], [166, 1, 1, "", "step_and_maybe_reset"], [166, 1, 1, "", "step_mdp"], [166, 1, 1, "", "to"], [166, 1, 1, "", "to_empty"], [166, 1, 1, "", "train"], [166, 1, 1, "", "type"], [166, 1, 1, "", "update_kwargs"], [166, 1, 1, "", "xpu"], [166, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[167, 1, 1, "", "_setup"], [167, 2, 1, "", "action_key"], [167, 2, 1, "", "action_keys"], [167, 2, 1, "", "action_spec"], [167, 2, 1, "", "action_spec_unbatched"], [167, 1, 1, "", "add_module"], [167, 1, 1, "", "add_truncated_keys"], [167, 1, 1, "", "all_actions"], [167, 1, 1, "", "any_done"], [167, 1, 1, "", "append_transform"], [167, 1, 1, "", "apply"], [167, 1, 1, "", "async_reset_recv"], [167, 1, 1, "", "async_reset_send"], [167, 1, 1, "", "async_step_recv"], [167, 1, 1, "", "async_step_send"], [167, 1, 1, "", "auto_specs_"], [167, 2, 1, "", "batch_dims"], [167, 2, 1, "", "batch_locked"], [167, 2, 1, "", "batch_size"], [167, 1, 1, "", "bfloat16"], [167, 1, 1, "", "buffers"], [167, 1, 1, "", "cardinality"], [167, 1, 1, "", "check_env_specs"], [167, 1, 1, "", "children"], [167, 1, 1, "", "compile"], [167, 1, 1, "", "cpu"], [167, 1, 1, "", "cuda"], [167, 2, 1, "", "done_key"], [167, 2, 1, "", "done_keys"], [167, 2, 1, "", "done_keys_groups"], [167, 2, 1, "", "done_spec"], [167, 2, 1, "", "done_spec_unbatched"], [167, 1, 1, "", "double"], [167, 1, 1, "", "empty_cache"], [167, 2, 1, "", "env_batch_sizes"], [167, 1, 1, "", "eval"], [167, 1, 1, "", "extra_repr"], [167, 1, 1, "", "fake_tensordict"], [167, 1, 1, "", "float"], [167, 1, 1, "", "forward"], [167, 2, 1, "", "full_action_spec"], [167, 2, 1, "", "full_action_spec_unbatched"], [167, 2, 1, "", "full_done_spec"], [167, 2, 1, "", "full_done_spec_unbatched"], [167, 2, 1, "", "full_observation_spec_unbatched"], [167, 2, 1, "", "full_reward_spec"], [167, 2, 1, "", "full_reward_spec_unbatched"], [167, 2, 1, "", "full_state_spec"], [167, 2, 1, "", "full_state_spec_unbatched"], [167, 1, 1, "", "get_buffer"], [167, 1, 1, "", "get_extra_state"], [167, 1, 1, "", "get_parameter"], [167, 1, 1, "", "get_submodule"], [167, 1, 1, "", "half"], [167, 2, 1, "", "input_spec"], [167, 2, 1, "", "input_spec_unbatched"], [167, 1, 1, "", "ipu"], [167, 2, 1, "", "is_spec_locked"], [167, 1, 1, "", "load_state_dict"], [167, 1, 1, "", "maybe_reset"], [167, 1, 1, "", "modules"], [167, 1, 1, "", "mtia"], [167, 1, 1, "", "named_buffers"], [167, 1, 1, "", "named_children"], [167, 1, 1, "", "named_modules"], [167, 1, 1, "", "named_parameters"], [167, 2, 1, "", "observation_keys"], [167, 2, 1, "", "observation_spec"], [167, 2, 1, "", "observation_spec_unbatched"], [167, 2, 1, "", "output_spec"], [167, 2, 1, "", "output_spec_unbatched"], [167, 1, 1, "", "parameters"], [167, 1, 1, "", "rand_action"], [167, 1, 1, "", "rand_step"], [167, 1, 1, "", "register_backward_hook"], [167, 1, 1, "", "register_buffer"], [167, 1, 1, "", "register_forward_hook"], [167, 1, 1, "", "register_forward_pre_hook"], [167, 1, 1, "", "register_full_backward_hook"], [167, 1, 1, "", "register_full_backward_pre_hook"], [167, 1, 1, "", "register_gym"], [167, 1, 1, "", "register_load_state_dict_post_hook"], [167, 1, 1, "", "register_load_state_dict_pre_hook"], [167, 1, 1, "", "register_module"], [167, 1, 1, "", "register_parameter"], [167, 1, 1, "", "register_state_dict_post_hook"], [167, 1, 1, "", "register_state_dict_pre_hook"], [167, 1, 1, "", "requires_grad_"], [167, 1, 1, "", "reset"], [167, 2, 1, "", "reset_keys"], [167, 2, 1, "", "reward_key"], [167, 2, 1, "", "reward_keys"], [167, 2, 1, "", "reward_spec"], [167, 2, 1, "", "reward_spec_unbatched"], [167, 1, 1, "", "rollout"], [167, 1, 1, "", "set_extra_state"], [167, 1, 1, "", "set_seed"], [167, 1, 1, "", "set_spec_lock_"], [167, 1, 1, "", "set_submodule"], [167, 2, 1, "", "shape"], [167, 1, 1, "", "share_memory"], [167, 1, 1, "", "shutdown"], [167, 2, 1, "", "specs"], [167, 1, 1, "", "state_dict"], [167, 2, 1, "", "state_keys"], [167, 2, 1, "", "state_spec"], [167, 2, 1, "", "state_spec_unbatched"], [167, 1, 1, "", "step"], [167, 1, 1, "", "step_and_maybe_reset"], [167, 1, 1, "", "step_mdp"], [167, 1, 1, "", "to"], [167, 1, 1, "", "to_empty"], [167, 1, 1, "", "train"], [167, 1, 1, "", "type"], [167, 1, 1, "", "xpu"], [167, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[168, 2, 1, "", "action_key"], [168, 2, 1, "", "action_keys"], [168, 2, 1, "", "action_spec"], [168, 2, 1, "", "action_spec_unbatched"], [168, 1, 1, "", "add_module"], [168, 1, 1, "", "add_truncated_keys"], [168, 1, 1, "", "all_actions"], [168, 1, 1, "", "any_done"], [168, 1, 1, "", "append_transform"], [168, 1, 1, "", "apply"], [168, 1, 1, "", "auto_specs_"], [168, 2, 1, "", "batch_dims"], [168, 2, 1, "", "batch_size"], [168, 1, 1, "", "bfloat16"], [168, 1, 1, "", "buffers"], [168, 1, 1, "", "cardinality"], [168, 1, 1, "", "check_env_specs"], [168, 1, 1, "", "children"], [168, 1, 1, "", "compile"], [168, 1, 1, "", "cpu"], [168, 1, 1, "", "cuda"], [168, 2, 1, "", "done_key"], [168, 2, 1, "", "done_keys"], [168, 2, 1, "", "done_keys_groups"], [168, 2, 1, "", "done_spec"], [168, 2, 1, "", "done_spec_unbatched"], [168, 1, 1, "", "double"], [168, 1, 1, "", "empty_cache"], [168, 1, 1, "", "eval"], [168, 1, 1, "", "extra_repr"], [168, 1, 1, "", "fake_tensordict"], [168, 1, 1, "", "float"], [168, 1, 1, "", "forward"], [168, 2, 1, "", "full_action_spec"], [168, 2, 1, "", "full_action_spec_unbatched"], [168, 2, 1, "", "full_done_spec"], [168, 2, 1, "", "full_done_spec_unbatched"], [168, 2, 1, "", "full_observation_spec_unbatched"], [168, 2, 1, "", "full_reward_spec"], [168, 2, 1, "", "full_reward_spec_unbatched"], [168, 2, 1, "", "full_state_spec"], [168, 2, 1, "", "full_state_spec_unbatched"], [168, 1, 1, "", "get_buffer"], [168, 1, 1, "", "get_extra_state"], [168, 1, 1, "", "get_parameter"], [168, 1, 1, "", "get_submodule"], [168, 1, 1, "", "half"], [168, 2, 1, "", "input_spec"], [168, 2, 1, "", "input_spec_unbatched"], [168, 1, 1, "", "ipu"], [168, 2, 1, "", "is_spec_locked"], [168, 1, 1, "", "load_state_dict"], [168, 1, 1, "", "maybe_reset"], [168, 1, 1, "", "modules"], [168, 1, 1, "", "mtia"], [168, 1, 1, "", "named_buffers"], [168, 1, 1, "", "named_children"], [168, 1, 1, "", "named_modules"], [168, 1, 1, "", "named_parameters"], [168, 2, 1, "", "observation_keys"], [168, 2, 1, "", "observation_spec"], [168, 2, 1, "", "observation_spec_unbatched"], [168, 2, 1, "", "output_spec"], [168, 2, 1, "", "output_spec_unbatched"], [168, 1, 1, "", "parameters"], [168, 1, 1, "", "rand_action"], [168, 1, 1, "", "rand_step"], [168, 1, 1, "", "register_backward_hook"], [168, 1, 1, "", "register_buffer"], [168, 1, 1, "", "register_forward_hook"], [168, 1, 1, "", "register_forward_pre_hook"], [168, 1, 1, "", "register_full_backward_hook"], [168, 1, 1, "", "register_full_backward_pre_hook"], [168, 1, 1, "", "register_gym"], [168, 1, 1, "", "register_load_state_dict_post_hook"], [168, 1, 1, "", "register_load_state_dict_pre_hook"], [168, 1, 1, "", "register_module"], [168, 1, 1, "", "register_parameter"], [168, 1, 1, "", "register_state_dict_post_hook"], [168, 1, 1, "", "register_state_dict_pre_hook"], [168, 1, 1, "", "requires_grad_"], [168, 1, 1, "", "reset"], [168, 2, 1, "", "reset_keys"], [168, 2, 1, "", "reward_key"], [168, 2, 1, "", "reward_keys"], [168, 2, 1, "", "reward_spec"], [168, 2, 1, "", "reward_spec_unbatched"], [168, 1, 1, "", "rollout"], [168, 1, 1, "", "set_extra_state"], [168, 1, 1, "", "set_seed"], [168, 1, 1, "", "set_spec_lock_"], [168, 1, 1, "", "set_submodule"], [168, 2, 1, "", "shape"], [168, 1, 1, "", "share_memory"], [168, 2, 1, "", "specs"], [168, 1, 1, "", "state_dict"], [168, 2, 1, "", "state_keys"], [168, 2, 1, "", "state_spec"], [168, 2, 1, "", "state_spec_unbatched"], [168, 1, 1, "", "step"], [168, 1, 1, "", "step_and_maybe_reset"], [168, 1, 1, "", "step_mdp"], [168, 1, 1, "", "to"], [168, 1, 1, "", "to_empty"], [168, 1, 1, "", "train"], [168, 1, 1, "", "type"], [168, 1, 1, "", "xpu"], [168, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[178, 0, 1, "", "ChatEnv"], [179, 0, 1, "", "DatasetChatEnv"], [180, 0, 1, "", "GSM8KEnv"], [181, 0, 1, "", "GSM8KPrepareQuestion"], [182, 0, 1, "", "GSM8KRewardParser"], [183, 0, 1, "", "IFEvalEnv"], [184, 0, 1, "", "IFEvalScoreData"], [185, 0, 1, "", "IfEvalScorer"], [186, 0, 1, "", "LLMEnv"], [187, 0, 1, "", "LLMHashingEnv"], [188, 0, 1, "", "MLGymWrapper"], [189, 0, 1, "", "make_gsm8k_env"], [190, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[178, 2, 1, "", "action_key"], [178, 2, 1, "", "action_keys"], [178, 2, 1, "", "action_spec"], [178, 2, 1, "", "action_spec_unbatched"], [178, 1, 1, "", "add_module"], [178, 1, 1, "", "add_truncated_keys"], [178, 1, 1, "", "all_actions"], [178, 1, 1, "", "any_done"], [178, 1, 1, "", "append_transform"], [178, 1, 1, "", "apply"], [178, 1, 1, "", "auto_specs_"], [178, 2, 1, "", "batch_dims"], [178, 2, 1, "", "batch_locked"], [178, 2, 1, "", "batch_size"], [178, 1, 1, "", "bfloat16"], [178, 1, 1, "", "buffers"], [178, 1, 1, "", "cardinality"], [178, 1, 1, "", "check_env_specs"], [178, 1, 1, "", "children"], [178, 1, 1, "", "compile"], [178, 1, 1, "", "cpu"], [178, 1, 1, "", "cuda"], [178, 2, 1, "", "done_key"], [178, 2, 1, "", "done_keys"], [178, 2, 1, "", "done_keys_groups"], [178, 2, 1, "", "done_spec"], [178, 2, 1, "", "done_spec_unbatched"], [178, 1, 1, "", "double"], [178, 1, 1, "", "empty_cache"], [178, 1, 1, "", "eval"], [178, 1, 1, "", "extra_repr"], [178, 1, 1, "", "fake_tensordict"], [178, 1, 1, "", "float"], [178, 1, 1, "", "forward"], [178, 2, 1, "", "full_action_spec"], [178, 2, 1, "", "full_action_spec_unbatched"], [178, 2, 1, "", "full_done_spec"], [178, 2, 1, "", "full_done_spec_unbatched"], [178, 2, 1, "", "full_observation_spec_unbatched"], [178, 2, 1, "", "full_reward_spec"], [178, 2, 1, "", "full_reward_spec_unbatched"], [178, 2, 1, "", "full_state_spec"], [178, 2, 1, "", "full_state_spec_unbatched"], [178, 1, 1, "", "get_buffer"], [178, 1, 1, "", "get_extra_state"], [178, 1, 1, "", "get_parameter"], [178, 1, 1, "", "get_submodule"], [178, 1, 1, "", "half"], [178, 2, 1, "", "input_spec"], [178, 2, 1, "", "input_spec_unbatched"], [178, 1, 1, "", "ipu"], [178, 2, 1, "", "is_spec_locked"], [178, 1, 1, "", "load_state_dict"], [178, 1, 1, "", "maybe_reset"], [178, 1, 1, "", "modules"], [178, 1, 1, "", "mtia"], [178, 1, 1, "", "named_buffers"], [178, 1, 1, "", "named_children"], [178, 1, 1, "", "named_modules"], [178, 1, 1, "", "named_parameters"], [178, 2, 1, "", "observation_keys"], [178, 2, 1, "", "observation_spec"], [178, 2, 1, "", "observation_spec_unbatched"], [178, 2, 1, "", "output_spec"], [178, 2, 1, "", "output_spec_unbatched"], [178, 1, 1, "", "parameters"], [178, 1, 1, "", "rand_action"], [178, 1, 1, "", "rand_step"], [178, 1, 1, "", "register_backward_hook"], [178, 1, 1, "", "register_buffer"], [178, 1, 1, "", "register_forward_hook"], [178, 1, 1, "", "register_forward_pre_hook"], [178, 1, 1, "", "register_full_backward_hook"], [178, 1, 1, "", "register_full_backward_pre_hook"], [178, 1, 1, "", "register_gym"], [178, 1, 1, "", "register_load_state_dict_post_hook"], [178, 1, 1, "", "register_load_state_dict_pre_hook"], [178, 1, 1, "", "register_module"], [178, 1, 1, "", "register_parameter"], [178, 1, 1, "", "register_state_dict_post_hook"], [178, 1, 1, "", "register_state_dict_pre_hook"], [178, 1, 1, "", "requires_grad_"], [178, 1, 1, "id0", "reset"], [178, 2, 1, "", "reset_keys"], [178, 2, 1, "", "reward_key"], [178, 2, 1, "", "reward_keys"], [178, 2, 1, "", "reward_spec"], [178, 2, 1, "", "reward_spec_unbatched"], [178, 1, 1, "", "rollout"], [178, 1, 1, "", "set_extra_state"], [178, 1, 1, "", "set_seed"], [178, 1, 1, "", "set_spec_lock_"], [178, 1, 1, "", "set_submodule"], [178, 2, 1, "", "shape"], [178, 1, 1, "", "share_memory"], [178, 2, 1, "", "specs"], [178, 1, 1, "", "state_dict"], [178, 2, 1, "", "state_keys"], [178, 2, 1, "", "state_spec"], [178, 2, 1, "", "state_spec_unbatched"], [178, 1, 1, "id1", "step"], [178, 1, 1, "", "step_and_maybe_reset"], [178, 1, 1, "", "step_mdp"], [178, 1, 1, "", "to"], [178, 1, 1, "", "to_empty"], [178, 1, 1, "", "train"], [178, 1, 1, "", "type"], [178, 1, 1, "", "xpu"], [178, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[179, 2, 1, "", "action_key"], [179, 2, 1, "", "action_keys"], [179, 2, 1, "", "action_spec"], [179, 2, 1, "", "action_spec_unbatched"], [179, 1, 1, "", "add_module"], [179, 1, 1, "", "add_truncated_keys"], [179, 1, 1, "", "all_actions"], [179, 1, 1, "", "any_done"], [179, 1, 1, "", "append_transform"], [179, 1, 1, "", "apply"], [179, 1, 1, "", "auto_specs_"], [179, 2, 1, "", "batch_dims"], [179, 2, 1, "", "batch_locked"], [179, 2, 1, "", "batch_size"], [179, 1, 1, "", "bfloat16"], [179, 1, 1, "", "buffers"], [179, 1, 1, "", "cardinality"], [179, 1, 1, "", "check_env_specs"], [179, 1, 1, "", "children"], [179, 1, 1, "", "compile"], [179, 1, 1, "", "cpu"], [179, 1, 1, "", "cuda"], [179, 2, 1, "", "done_key"], [179, 2, 1, "", "done_keys"], [179, 2, 1, "", "done_keys_groups"], [179, 2, 1, "", "done_spec"], [179, 2, 1, "", "done_spec_unbatched"], [179, 1, 1, "", "double"], [179, 1, 1, "", "empty_cache"], [179, 1, 1, "", "eval"], [179, 1, 1, "", "extra_repr"], [179, 1, 1, "", "fake_tensordict"], [179, 1, 1, "", "float"], [179, 1, 1, "", "forward"], [179, 2, 1, "", "full_action_spec"], [179, 2, 1, "", "full_action_spec_unbatched"], [179, 2, 1, "", "full_done_spec"], [179, 2, 1, "", "full_done_spec_unbatched"], [179, 2, 1, "", "full_observation_spec_unbatched"], [179, 2, 1, "", "full_reward_spec"], [179, 2, 1, "", "full_reward_spec_unbatched"], [179, 2, 1, "", "full_state_spec"], [179, 2, 1, "", "full_state_spec_unbatched"], [179, 1, 1, "", "get_buffer"], [179, 1, 1, "", "get_extra_state"], [179, 1, 1, "", "get_parameter"], [179, 1, 1, "", "get_submodule"], [179, 1, 1, "", "half"], [179, 2, 1, "", "input_spec"], [179, 2, 1, "", "input_spec_unbatched"], [179, 1, 1, "", "insert_transform"], [179, 1, 1, "", "ipu"], [179, 2, 1, "", "is_spec_locked"], [179, 1, 1, "", "load_state_dict"], [179, 1, 1, "", "maybe_reset"], [179, 1, 1, "", "modules"], [179, 1, 1, "", "mtia"], [179, 1, 1, "", "named_buffers"], [179, 1, 1, "", "named_children"], [179, 1, 1, "", "named_modules"], [179, 1, 1, "", "named_parameters"], [179, 2, 1, "", "observation_keys"], [179, 2, 1, "", "observation_spec"], [179, 2, 1, "", "observation_spec_unbatched"], [179, 2, 1, "", "output_spec"], [179, 2, 1, "", "output_spec_unbatched"], [179, 1, 1, "", "parameters"], [179, 1, 1, "", "rand_action"], [179, 1, 1, "", "rand_step"], [179, 1, 1, "", "register_backward_hook"], [179, 1, 1, "", "register_buffer"], [179, 1, 1, "", "register_forward_hook"], [179, 1, 1, "", "register_forward_pre_hook"], [179, 1, 1, "", "register_full_backward_hook"], [179, 1, 1, "", "register_full_backward_pre_hook"], [179, 1, 1, "", "register_gym"], [179, 1, 1, "", "register_load_state_dict_post_hook"], [179, 1, 1, "", "register_load_state_dict_pre_hook"], [179, 1, 1, "", "register_module"], [179, 1, 1, "", "register_parameter"], [179, 1, 1, "", "register_state_dict_post_hook"], [179, 1, 1, "", "register_state_dict_pre_hook"], [179, 1, 1, "", "requires_grad_"], [179, 1, 1, "", "reset"], [179, 2, 1, "", "reset_keys"], [179, 2, 1, "", "reward_key"], [179, 2, 1, "", "reward_keys"], [179, 2, 1, "", "reward_spec"], [179, 2, 1, "", "reward_spec_unbatched"], [179, 1, 1, "", "rollout"], [179, 1, 1, "", "set_extra_state"], [179, 1, 1, "", "set_missing_tolerance"], [179, 1, 1, "", "set_seed"], [179, 1, 1, "", "set_spec_lock_"], [179, 1, 1, "", "set_submodule"], [179, 2, 1, "", "shape"], [179, 1, 1, "", "share_memory"], [179, 2, 1, "", "specs"], [179, 1, 1, "", "state_dict"], [179, 2, 1, "", "state_keys"], [179, 2, 1, "", "state_spec"], [179, 2, 1, "", "state_spec_unbatched"], [179, 1, 1, "", "step"], [179, 1, 1, "", "step_and_maybe_reset"], [179, 1, 1, "", "step_mdp"], [179, 1, 1, "", "to"], [179, 1, 1, "", "to_empty"], [179, 1, 1, "", "train"], [179, 1, 1, "", "type"], [179, 1, 1, "", "xpu"], [179, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[180, 2, 1, "", "action_key"], [180, 2, 1, "", "action_keys"], [180, 2, 1, "", "action_spec"], [180, 2, 1, "", "action_spec_unbatched"], [180, 1, 1, "", "add_module"], [180, 1, 1, "", "add_truncated_keys"], [180, 1, 1, "", "all_actions"], [180, 1, 1, "", "any_done"], [180, 1, 1, "", "append_transform"], [180, 1, 1, "", "apply"], [180, 1, 1, "", "auto_specs_"], [180, 2, 1, "", "batch_dims"], [180, 2, 1, "", "batch_locked"], [180, 2, 1, "", "batch_size"], [180, 1, 1, "", "bfloat16"], [180, 1, 1, "", "buffers"], [180, 1, 1, "", "cardinality"], [180, 1, 1, "", "check_env_specs"], [180, 1, 1, "", "children"], [180, 1, 1, "", "compile"], [180, 1, 1, "", "cpu"], [180, 1, 1, "", "cuda"], [180, 2, 1, "", "done_key"], [180, 2, 1, "", "done_keys"], [180, 2, 1, "", "done_keys_groups"], [180, 2, 1, "", "done_spec"], [180, 2, 1, "", "done_spec_unbatched"], [180, 1, 1, "", "double"], [180, 1, 1, "", "empty_cache"], [180, 1, 1, "", "eval"], [180, 1, 1, "", "extra_repr"], [180, 1, 1, "", "fake_tensordict"], [180, 1, 1, "", "float"], [180, 1, 1, "", "forward"], [180, 2, 1, "", "full_action_spec"], [180, 2, 1, "", "full_action_spec_unbatched"], [180, 2, 1, "", "full_done_spec"], [180, 2, 1, "", "full_done_spec_unbatched"], [180, 2, 1, "", "full_observation_spec_unbatched"], [180, 2, 1, "", "full_reward_spec"], [180, 2, 1, "", "full_reward_spec_unbatched"], [180, 2, 1, "", "full_state_spec"], [180, 2, 1, "", "full_state_spec_unbatched"], [180, 1, 1, "", "get_buffer"], [180, 1, 1, "", "get_extra_state"], [180, 1, 1, "", "get_parameter"], [180, 1, 1, "", "get_submodule"], [180, 1, 1, "", "half"], [180, 2, 1, "", "input_spec"], [180, 2, 1, "", "input_spec_unbatched"], [180, 1, 1, "", "insert_transform"], [180, 1, 1, "", "ipu"], [180, 2, 1, "", "is_spec_locked"], [180, 1, 1, "", "load_state_dict"], [180, 1, 1, "", "maybe_reset"], [180, 1, 1, "", "modules"], [180, 1, 1, "", "mtia"], [180, 1, 1, "", "named_buffers"], [180, 1, 1, "", "named_children"], [180, 1, 1, "", "named_modules"], [180, 1, 1, "", "named_parameters"], [180, 2, 1, "", "observation_keys"], [180, 2, 1, "", "observation_spec"], [180, 2, 1, "", "observation_spec_unbatched"], [180, 2, 1, "", "output_spec"], [180, 2, 1, "", "output_spec_unbatched"], [180, 1, 1, "", "parameters"], [180, 1, 1, "", "rand_action"], [180, 1, 1, "", "rand_step"], [180, 1, 1, "", "register_backward_hook"], [180, 1, 1, "", "register_buffer"], [180, 1, 1, "", "register_forward_hook"], [180, 1, 1, "", "register_forward_pre_hook"], [180, 1, 1, "", "register_full_backward_hook"], [180, 1, 1, "", "register_full_backward_pre_hook"], [180, 1, 1, "", "register_gym"], [180, 1, 1, "", "register_load_state_dict_post_hook"], [180, 1, 1, "", "register_load_state_dict_pre_hook"], [180, 1, 1, "", "register_module"], [180, 1, 1, "", "register_parameter"], [180, 1, 1, "", "register_state_dict_post_hook"], [180, 1, 1, "", "register_state_dict_pre_hook"], [180, 1, 1, "", "requires_grad_"], [180, 1, 1, "", "reset"], [180, 2, 1, "", "reset_keys"], [180, 2, 1, "", "reward_key"], [180, 2, 1, "", "reward_keys"], [180, 2, 1, "", "reward_spec"], [180, 2, 1, "", "reward_spec_unbatched"], [180, 1, 1, "", "rollout"], [180, 1, 1, "", "set_extra_state"], [180, 1, 1, "", "set_missing_tolerance"], [180, 1, 1, "", "set_seed"], [180, 1, 1, "", "set_spec_lock_"], [180, 1, 1, "", "set_submodule"], [180, 2, 1, "", "shape"], [180, 1, 1, "", "share_memory"], [180, 2, 1, "", "specs"], [180, 1, 1, "", "state_dict"], [180, 2, 1, "", "state_keys"], [180, 2, 1, "", "state_spec"], [180, 2, 1, "", "state_spec_unbatched"], [180, 1, 1, "", "step"], [180, 1, 1, "", "step_and_maybe_reset"], [180, 1, 1, "", "step_mdp"], [180, 1, 1, "", "to"], [180, 1, 1, "", "to_empty"], [180, 1, 1, "", "train"], [180, 1, 1, "", "type"], [180, 1, 1, "", "xpu"], [180, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[181, 1, 1, "", "add_module"], [181, 1, 1, "", "apply"], [181, 1, 1, "", "bfloat16"], [181, 1, 1, "", "buffers"], [181, 1, 1, "", "children"], [181, 1, 1, "", "close"], [181, 1, 1, "", "compile"], [181, 2, 1, "", "container"], [181, 1, 1, "", "cpu"], [181, 1, 1, "", "cuda"], [181, 1, 1, "", "double"], [181, 1, 1, "", "eval"], [181, 1, 1, "", "extra_repr"], [181, 1, 1, "", "float"], [181, 1, 1, "", "forward"], [181, 1, 1, "", "get_buffer"], [181, 1, 1, "", "get_extra_state"], [181, 1, 1, "", "get_parameter"], [181, 1, 1, "", "get_submodule"], [181, 1, 1, "", "half"], [181, 1, 1, "", "init"], [181, 1, 1, "", "inv"], [181, 1, 1, "", "ipu"], [181, 1, 1, "", "load_state_dict"], [181, 1, 1, "", "modules"], [181, 1, 1, "", "mtia"], [181, 1, 1, "", "named_buffers"], [181, 1, 1, "", "named_children"], [181, 1, 1, "", "named_modules"], [181, 1, 1, "", "named_parameters"], [181, 1, 1, "", "parameters"], [181, 2, 1, "", "parent"], [181, 1, 1, "", "register_backward_hook"], [181, 1, 1, "", "register_buffer"], [181, 1, 1, "", "register_forward_hook"], [181, 1, 1, "", "register_forward_pre_hook"], [181, 1, 1, "", "register_full_backward_hook"], [181, 1, 1, "", "register_full_backward_pre_hook"], [181, 1, 1, "", "register_load_state_dict_post_hook"], [181, 1, 1, "", "register_load_state_dict_pre_hook"], [181, 1, 1, "", "register_module"], [181, 1, 1, "", "register_parameter"], [181, 1, 1, "", "register_state_dict_post_hook"], [181, 1, 1, "", "register_state_dict_pre_hook"], [181, 1, 1, "", "requires_grad_"], [181, 1, 1, "", "set_extra_state"], [181, 1, 1, "", "set_submodule"], [181, 1, 1, "", "share_memory"], [181, 1, 1, "", "state_dict"], [181, 1, 1, "", "to"], [181, 1, 1, "", "to_empty"], [181, 1, 1, "", "train"], [181, 1, 1, "", "transform_action_spec"], [181, 1, 1, "", "transform_done_spec"], [181, 1, 1, "", "transform_env_batch_size"], [181, 1, 1, "", "transform_env_device"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"], [181, 1, 1, "", "transform_output_spec"], [181, 1, 1, "", "transform_reward_spec"], [181, 1, 1, "", "transform_state_spec"], [181, 1, 1, "", "type"], [181, 1, 1, "", "xpu"], [181, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[182, 1, 1, "", "add_module"], [182, 1, 1, "", "apply"], [182, 1, 1, "", "bfloat16"], [182, 1, 1, "", "buffers"], [182, 1, 1, "", "children"], [182, 1, 1, "", "close"], [182, 1, 1, "", "compile"], [182, 2, 1, "", "container"], [182, 1, 1, "", "cpu"], [182, 1, 1, "", "cuda"], [182, 1, 1, "", "double"], [182, 1, 1, "", "eval"], [182, 1, 1, "", "extra_repr"], [182, 1, 1, "", "extract_tags"], [182, 1, 1, "", "float"], [182, 1, 1, "", "forward"], [182, 1, 1, "", "get_buffer"], [182, 1, 1, "", "get_extra_state"], [182, 1, 1, "", "get_parameter"], [182, 1, 1, "", "get_submodule"], [182, 1, 1, "", "half"], [182, 1, 1, "", "init"], [182, 1, 1, "", "inv"], [182, 1, 1, "", "ipu"], [182, 1, 1, "", "load_state_dict"], [182, 1, 1, "", "modules"], [182, 1, 1, "", "mtia"], [182, 1, 1, "", "named_buffers"], [182, 1, 1, "", "named_children"], [182, 1, 1, "", "named_modules"], [182, 1, 1, "", "named_parameters"], [182, 1, 1, "", "parameters"], [182, 2, 1, "", "parent"], [182, 1, 1, "", "register_backward_hook"], [182, 1, 1, "", "register_buffer"], [182, 1, 1, "", "register_forward_hook"], [182, 1, 1, "", "register_forward_pre_hook"], [182, 1, 1, "", "register_full_backward_hook"], [182, 1, 1, "", "register_full_backward_pre_hook"], [182, 1, 1, "", "register_load_state_dict_post_hook"], [182, 1, 1, "", "register_load_state_dict_pre_hook"], [182, 1, 1, "", "register_module"], [182, 1, 1, "", "register_parameter"], [182, 1, 1, "", "register_state_dict_post_hook"], [182, 1, 1, "", "register_state_dict_pre_hook"], [182, 1, 1, "", "requires_grad_"], [182, 1, 1, "", "set_extra_state"], [182, 1, 1, "", "set_submodule"], [182, 1, 1, "", "share_memory"], [182, 1, 1, "", "state_dict"], [182, 1, 1, "", "to"], [182, 1, 1, "", "to_empty"], [182, 1, 1, "", "train"], [182, 1, 1, "", "transform_action_spec"], [182, 1, 1, "", "transform_done_spec"], [182, 1, 1, "", "transform_env_batch_size"], [182, 1, 1, "", "transform_env_device"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"], [182, 1, 1, "", "transform_output_spec"], [182, 1, 1, "", "transform_reward_spec"], [182, 1, 1, "", "transform_state_spec"], [182, 1, 1, "", "type"], [182, 1, 1, "", "xpu"], [182, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[183, 2, 1, "", "action_key"], [183, 2, 1, "", "action_keys"], [183, 2, 1, "", "action_spec"], [183, 2, 1, "", "action_spec_unbatched"], [183, 1, 1, "", "add_module"], [183, 1, 1, "", "add_truncated_keys"], [183, 1, 1, "", "all_actions"], [183, 1, 1, "", "any_done"], [183, 1, 1, "", "append_transform"], [183, 1, 1, "", "apply"], [183, 1, 1, "", "auto_specs_"], [183, 2, 1, "", "batch_dims"], [183, 2, 1, "", "batch_locked"], [183, 2, 1, "", "batch_size"], [183, 1, 1, "", "bfloat16"], [183, 1, 1, "", "buffers"], [183, 1, 1, "", "cardinality"], [183, 1, 1, "", "check_env_specs"], [183, 1, 1, "", "children"], [183, 1, 1, "", "compile"], [183, 1, 1, "", "cpu"], [183, 1, 1, "", "cuda"], [183, 2, 1, "", "done_key"], [183, 2, 1, "", "done_keys"], [183, 2, 1, "", "done_keys_groups"], [183, 2, 1, "", "done_spec"], [183, 2, 1, "", "done_spec_unbatched"], [183, 1, 1, "", "double"], [183, 1, 1, "", "empty_cache"], [183, 1, 1, "", "eval"], [183, 1, 1, "", "extra_repr"], [183, 1, 1, "", "fake_tensordict"], [183, 1, 1, "", "float"], [183, 1, 1, "", "forward"], [183, 2, 1, "", "full_action_spec"], [183, 2, 1, "", "full_action_spec_unbatched"], [183, 2, 1, "", "full_done_spec"], [183, 2, 1, "", "full_done_spec_unbatched"], [183, 2, 1, "", "full_observation_spec_unbatched"], [183, 2, 1, "", "full_reward_spec"], [183, 2, 1, "", "full_reward_spec_unbatched"], [183, 2, 1, "", "full_state_spec"], [183, 2, 1, "", "full_state_spec_unbatched"], [183, 1, 1, "", "get_buffer"], [183, 1, 1, "", "get_extra_state"], [183, 1, 1, "", "get_parameter"], [183, 1, 1, "", "get_submodule"], [183, 1, 1, "", "half"], [183, 2, 1, "", "input_spec"], [183, 2, 1, "", "input_spec_unbatched"], [183, 1, 1, "", "insert_transform"], [183, 1, 1, "", "ipu"], [183, 2, 1, "", "is_spec_locked"], [183, 1, 1, "", "load_state_dict"], [183, 1, 1, "", "maybe_reset"], [183, 1, 1, "", "modules"], [183, 1, 1, "", "mtia"], [183, 1, 1, "", "named_buffers"], [183, 1, 1, "", "named_children"], [183, 1, 1, "", "named_modules"], [183, 1, 1, "", "named_parameters"], [183, 2, 1, "", "observation_keys"], [183, 2, 1, "", "observation_spec"], [183, 2, 1, "", "observation_spec_unbatched"], [183, 2, 1, "", "output_spec"], [183, 2, 1, "", "output_spec_unbatched"], [183, 1, 1, "", "parameters"], [183, 1, 1, "", "rand_action"], [183, 1, 1, "", "rand_step"], [183, 1, 1, "", "register_backward_hook"], [183, 1, 1, "", "register_buffer"], [183, 1, 1, "", "register_forward_hook"], [183, 1, 1, "", "register_forward_pre_hook"], [183, 1, 1, "", "register_full_backward_hook"], [183, 1, 1, "", "register_full_backward_pre_hook"], [183, 1, 1, "", "register_gym"], [183, 1, 1, "", "register_load_state_dict_post_hook"], [183, 1, 1, "", "register_load_state_dict_pre_hook"], [183, 1, 1, "", "register_module"], [183, 1, 1, "", "register_parameter"], [183, 1, 1, "", "register_state_dict_post_hook"], [183, 1, 1, "", "register_state_dict_pre_hook"], [183, 1, 1, "", "requires_grad_"], [183, 1, 1, "", "reset"], [183, 2, 1, "", "reset_keys"], [183, 2, 1, "", "reward_key"], [183, 2, 1, "", "reward_keys"], [183, 2, 1, "", "reward_spec"], [183, 2, 1, "", "reward_spec_unbatched"], [183, 1, 1, "", "rollout"], [183, 1, 1, "", "set_extra_state"], [183, 1, 1, "", "set_missing_tolerance"], [183, 1, 1, "", "set_seed"], [183, 1, 1, "", "set_spec_lock_"], [183, 1, 1, "", "set_submodule"], [183, 2, 1, "", "shape"], [183, 1, 1, "", "share_memory"], [183, 2, 1, "", "specs"], [183, 1, 1, "", "state_dict"], [183, 2, 1, "", "state_keys"], [183, 2, 1, "", "state_spec"], [183, 2, 1, "", "state_spec_unbatched"], [183, 1, 1, "", "step"], [183, 1, 1, "", "step_and_maybe_reset"], [183, 1, 1, "", "step_mdp"], [183, 1, 1, "", "to"], [183, 1, 1, "", "to_empty"], [183, 1, 1, "", "train"], [183, 1, 1, "", "type"], [183, 1, 1, "", "xpu"], [183, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[184, 2, 1, "", "device"], [184, 1, 1, "", "dumps"], [184, 1, 1, "", "fields"], [184, 1, 1, "", "from_tensordict"], [184, 1, 1, "", "get"], [184, 1, 1, "", "load"], [184, 1, 1, "", "load_"], [184, 1, 1, "", "load_memmap"], [184, 1, 1, "", "load_state_dict"], [184, 1, 1, "", "memmap"], [184, 1, 1, "", "memmap_"], [184, 1, 1, "", "memmap_like"], [184, 1, 1, "", "memmap_refresh_"], [184, 1, 1, "", "save"], [184, 1, 1, "", "set"], [184, 1, 1, "", "state_dict"], [184, 1, 1, "", "to_tensordict"], [184, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[185, 1, 1, "", "add_module"], [185, 1, 1, "", "apply"], [185, 1, 1, "", "bfloat16"], [185, 1, 1, "", "buffers"], [185, 1, 1, "", "children"], [185, 1, 1, "", "close"], [185, 1, 1, "", "compile"], [185, 2, 1, "", "container"], [185, 1, 1, "", "cpu"], [185, 1, 1, "", "cuda"], [185, 1, 1, "", "double"], [185, 1, 1, "", "eval"], [185, 1, 1, "", "extra_repr"], [185, 1, 1, "", "float"], [185, 1, 1, "", "forward"], [185, 1, 1, "", "get_buffer"], [185, 1, 1, "", "get_extra_state"], [185, 1, 1, "", "get_parameter"], [185, 1, 1, "", "get_submodule"], [185, 1, 1, "", "half"], [185, 1, 1, "", "init"], [185, 1, 1, "", "inv"], [185, 1, 1, "", "ipu"], [185, 1, 1, "", "load_state_dict"], [185, 1, 1, "", "modules"], [185, 1, 1, "", "mtia"], [185, 1, 1, "", "named_buffers"], [185, 1, 1, "", "named_children"], [185, 1, 1, "", "named_modules"], [185, 1, 1, "", "named_parameters"], [185, 1, 1, "", "parameters"], [185, 2, 1, "", "parent"], [185, 1, 1, "", "register_backward_hook"], [185, 1, 1, "", "register_buffer"], [185, 1, 1, "", "register_forward_hook"], [185, 1, 1, "", "register_forward_pre_hook"], [185, 1, 1, "", "register_full_backward_hook"], [185, 1, 1, "", "register_full_backward_pre_hook"], [185, 1, 1, "", "register_load_state_dict_post_hook"], [185, 1, 1, "", "register_load_state_dict_pre_hook"], [185, 1, 1, "", "register_module"], [185, 1, 1, "", "register_parameter"], [185, 1, 1, "", "register_state_dict_post_hook"], [185, 1, 1, "", "register_state_dict_pre_hook"], [185, 1, 1, "", "requires_grad_"], [185, 1, 1, "", "set_extra_state"], [185, 1, 1, "", "set_submodule"], [185, 1, 1, "", "share_memory"], [185, 1, 1, "", "state_dict"], [185, 1, 1, "", "to"], [185, 1, 1, "", "to_empty"], [185, 1, 1, "", "train"], [185, 1, 1, "", "transform_action_spec"], [185, 1, 1, "", "transform_done_spec"], [185, 1, 1, "", "transform_env_batch_size"], [185, 1, 1, "", "transform_env_device"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_output_spec"], [185, 1, 1, "", "transform_reward_spec"], [185, 1, 1, "", "transform_state_spec"], [185, 1, 1, "", "type"], [185, 1, 1, "", "xpu"], [185, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[186, 2, 1, "", "action_key"], [186, 2, 1, "", "action_keys"], [186, 2, 1, "", "action_spec"], [186, 2, 1, "", "action_spec_unbatched"], [186, 1, 1, "", "add_module"], [186, 1, 1, "", "add_truncated_keys"], [186, 1, 1, "", "all_actions"], [186, 1, 1, "", "any_done"], [186, 1, 1, "", "append_transform"], [186, 1, 1, "", "apply"], [186, 1, 1, "", "auto_specs_"], [186, 2, 1, "", "batch_dims"], [186, 2, 1, "", "batch_locked"], [186, 2, 1, "", "batch_size"], [186, 1, 1, "", "bfloat16"], [186, 1, 1, "", "buffers"], [186, 1, 1, "", "cardinality"], [186, 1, 1, "", "check_env_specs"], [186, 1, 1, "", "children"], [186, 1, 1, "", "compile"], [186, 1, 1, "", "cpu"], [186, 1, 1, "", "cuda"], [186, 2, 1, "", "done_key"], [186, 2, 1, "", "done_keys"], [186, 2, 1, "", "done_keys_groups"], [186, 2, 1, "", "done_spec"], [186, 2, 1, "", "done_spec_unbatched"], [186, 1, 1, "", "double"], [186, 1, 1, "", "empty_cache"], [186, 1, 1, "", "eval"], [186, 1, 1, "", "extra_repr"], [186, 1, 1, "", "fake_tensordict"], [186, 1, 1, "", "float"], [186, 1, 1, "", "forward"], [186, 1, 1, "id0", "from_dataloader"], [186, 2, 1, "", "full_action_spec"], [186, 2, 1, "", "full_action_spec_unbatched"], [186, 2, 1, "", "full_done_spec"], [186, 2, 1, "", "full_done_spec_unbatched"], [186, 2, 1, "", "full_observation_spec_unbatched"], [186, 2, 1, "", "full_reward_spec"], [186, 2, 1, "", "full_reward_spec_unbatched"], [186, 2, 1, "", "full_state_spec"], [186, 2, 1, "", "full_state_spec_unbatched"], [186, 1, 1, "", "get_buffer"], [186, 1, 1, "", "get_extra_state"], [186, 1, 1, "", "get_parameter"], [186, 1, 1, "", "get_submodule"], [186, 1, 1, "", "half"], [186, 2, 1, "", "input_spec"], [186, 2, 1, "", "input_spec_unbatched"], [186, 1, 1, "", "ipu"], [186, 2, 1, "", "is_spec_locked"], [186, 1, 1, "", "load_state_dict"], [186, 1, 1, "", "maybe_reset"], [186, 1, 1, "", "modules"], [186, 1, 1, "", "mtia"], [186, 1, 1, "", "named_buffers"], [186, 1, 1, "", "named_children"], [186, 1, 1, "", "named_modules"], [186, 1, 1, "", "named_parameters"], [186, 2, 1, "", "observation_keys"], [186, 2, 1, "", "observation_spec"], [186, 2, 1, "", "observation_spec_unbatched"], [186, 2, 1, "", "output_spec"], [186, 2, 1, "", "output_spec_unbatched"], [186, 1, 1, "", "parameters"], [186, 1, 1, "", "rand_action"], [186, 1, 1, "", "rand_step"], [186, 1, 1, "", "register_backward_hook"], [186, 1, 1, "", "register_buffer"], [186, 1, 1, "", "register_forward_hook"], [186, 1, 1, "", "register_forward_pre_hook"], [186, 1, 1, "", "register_full_backward_hook"], [186, 1, 1, "", "register_full_backward_pre_hook"], [186, 1, 1, "", "register_gym"], [186, 1, 1, "", "register_load_state_dict_post_hook"], [186, 1, 1, "", "register_load_state_dict_pre_hook"], [186, 1, 1, "", "register_module"], [186, 1, 1, "", "register_parameter"], [186, 1, 1, "", "register_state_dict_post_hook"], [186, 1, 1, "", "register_state_dict_pre_hook"], [186, 1, 1, "", "requires_grad_"], [186, 1, 1, "", "reset"], [186, 2, 1, "", "reset_keys"], [186, 2, 1, "", "reward_key"], [186, 2, 1, "", "reward_keys"], [186, 2, 1, "", "reward_spec"], [186, 2, 1, "", "reward_spec_unbatched"], [186, 1, 1, "", "rollout"], [186, 1, 1, "", "set_extra_state"], [186, 1, 1, "", "set_seed"], [186, 1, 1, "", "set_spec_lock_"], [186, 1, 1, "", "set_submodule"], [186, 2, 1, "", "shape"], [186, 1, 1, "", "share_memory"], [186, 2, 1, "", "specs"], [186, 1, 1, "", "state_dict"], [186, 2, 1, "", "state_keys"], [186, 2, 1, "", "state_spec"], [186, 2, 1, "", "state_spec_unbatched"], [186, 1, 1, "", "step"], [186, 1, 1, "", "step_and_maybe_reset"], [186, 1, 1, "", "step_mdp"], [186, 1, 1, "", "to"], [186, 1, 1, "", "to_empty"], [186, 1, 1, "", "train"], [186, 1, 1, "", "type"], [186, 1, 1, "", "xpu"], [186, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[187, 2, 1, "", "action_key"], [187, 2, 1, "", "action_keys"], [187, 2, 1, "", "action_spec"], [187, 2, 1, "", "action_spec_unbatched"], [187, 1, 1, "", "add_module"], [187, 1, 1, "", "add_truncated_keys"], [187, 1, 1, "", "all_actions"], [187, 1, 1, "", "any_done"], [187, 1, 1, "", "append_transform"], [187, 1, 1, "", "apply"], [187, 1, 1, "", "auto_specs_"], [187, 2, 1, "", "batch_dims"], [187, 2, 1, "", "batch_locked"], [187, 2, 1, "", "batch_size"], [187, 1, 1, "", "bfloat16"], [187, 1, 1, "", "buffers"], [187, 1, 1, "", "cardinality"], [187, 1, 1, "", "check_env_specs"], [187, 1, 1, "", "children"], [187, 1, 1, "", "compile"], [187, 1, 1, "", "cpu"], [187, 1, 1, "", "cuda"], [187, 2, 1, "", "done_key"], [187, 2, 1, "", "done_keys"], [187, 2, 1, "", "done_keys_groups"], [187, 2, 1, "", "done_spec"], [187, 2, 1, "", "done_spec_unbatched"], [187, 1, 1, "", "double"], [187, 1, 1, "", "empty_cache"], [187, 1, 1, "", "eval"], [187, 1, 1, "", "extra_repr"], [187, 1, 1, "", "fake_tensordict"], [187, 1, 1, "", "float"], [187, 1, 1, "", "forward"], [187, 2, 1, "", "full_action_spec"], [187, 2, 1, "", "full_action_spec_unbatched"], [187, 2, 1, "", "full_done_spec"], [187, 2, 1, "", "full_done_spec_unbatched"], [187, 2, 1, "", "full_observation_spec_unbatched"], [187, 2, 1, "", "full_reward_spec"], [187, 2, 1, "", "full_reward_spec_unbatched"], [187, 2, 1, "", "full_state_spec"], [187, 2, 1, "", "full_state_spec_unbatched"], [187, 1, 1, "", "get_buffer"], [187, 1, 1, "", "get_extra_state"], [187, 1, 1, "", "get_parameter"], [187, 1, 1, "", "get_submodule"], [187, 1, 1, "", "half"], [187, 2, 1, "", "input_spec"], [187, 2, 1, "", "input_spec_unbatched"], [187, 1, 1, "", "ipu"], [187, 2, 1, "", "is_spec_locked"], [187, 1, 1, "", "load_state_dict"], [187, 1, 1, "", "make_tensordict"], [187, 1, 1, "", "maybe_reset"], [187, 1, 1, "", "modules"], [187, 1, 1, "", "mtia"], [187, 1, 1, "", "named_buffers"], [187, 1, 1, "", "named_children"], [187, 1, 1, "", "named_modules"], [187, 1, 1, "", "named_parameters"], [187, 2, 1, "", "observation_keys"], [187, 2, 1, "", "observation_spec"], [187, 2, 1, "", "observation_spec_unbatched"], [187, 2, 1, "", "output_spec"], [187, 2, 1, "", "output_spec_unbatched"], [187, 1, 1, "", "parameters"], [187, 1, 1, "", "rand_action"], [187, 1, 1, "", "rand_step"], [187, 1, 1, "", "register_backward_hook"], [187, 1, 1, "", "register_buffer"], [187, 1, 1, "", "register_forward_hook"], [187, 1, 1, "", "register_forward_pre_hook"], [187, 1, 1, "", "register_full_backward_hook"], [187, 1, 1, "", "register_full_backward_pre_hook"], [187, 1, 1, "", "register_gym"], [187, 1, 1, "", "register_load_state_dict_post_hook"], [187, 1, 1, "", "register_load_state_dict_pre_hook"], [187, 1, 1, "", "register_module"], [187, 1, 1, "", "register_parameter"], [187, 1, 1, "", "register_state_dict_post_hook"], [187, 1, 1, "", "register_state_dict_pre_hook"], [187, 1, 1, "", "requires_grad_"], [187, 1, 1, "", "reset"], [187, 2, 1, "", "reset_keys"], [187, 2, 1, "", "reward_key"], [187, 2, 1, "", "reward_keys"], [187, 2, 1, "", "reward_spec"], [187, 2, 1, "", "reward_spec_unbatched"], [187, 1, 1, "", "rollout"], [187, 1, 1, "", "set_extra_state"], [187, 1, 1, "", "set_seed"], [187, 1, 1, "", "set_spec_lock_"], [187, 1, 1, "", "set_submodule"], [187, 2, 1, "", "shape"], [187, 1, 1, "", "share_memory"], [187, 2, 1, "", "specs"], [187, 1, 1, "", "state_dict"], [187, 2, 1, "", "state_keys"], [187, 2, 1, "", "state_spec"], [187, 2, 1, "", "state_spec_unbatched"], [187, 1, 1, "", "step"], [187, 1, 1, "", "step_and_maybe_reset"], [187, 1, 1, "", "step_mdp"], [187, 1, 1, "", "to"], [187, 1, 1, "", "to_empty"], [187, 1, 1, "", "train"], [187, 1, 1, "", "type"], [187, 1, 1, "", "xpu"], [187, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[188, 2, 1, "", "action_key"], [188, 2, 1, "", "action_keys"], [188, 2, 1, "", "action_spec"], [188, 2, 1, "", "action_spec_unbatched"], [188, 1, 1, "", "add_module"], [188, 1, 1, "", "add_truncated_keys"], [188, 1, 1, "", "all_actions"], [188, 1, 1, "", "any_done"], [188, 1, 1, "", "append_transform"], [188, 1, 1, "", "apply"], [188, 1, 1, "", "auto_register_info_dict"], [188, 1, 1, "", "auto_specs_"], [188, 2, 1, "", "batch_dims"], [188, 2, 1, "", "batch_locked"], [188, 2, 1, "", "batch_size"], [188, 1, 1, "", "bfloat16"], [188, 1, 1, "", "buffers"], [188, 1, 1, "", "cardinality"], [188, 1, 1, "", "check_env_specs"], [188, 1, 1, "", "children"], [188, 1, 1, "", "close"], [188, 1, 1, "", "compile"], [188, 1, 1, "", "cpu"], [188, 1, 1, "", "cuda"], [188, 2, 1, "", "done_key"], [188, 2, 1, "", "done_keys"], [188, 2, 1, "", "done_keys_groups"], [188, 2, 1, "", "done_spec"], [188, 2, 1, "", "done_spec_unbatched"], [188, 1, 1, "", "double"], [188, 1, 1, "", "empty_cache"], [188, 1, 1, "", "eval"], [188, 1, 1, "", "extra_repr"], [188, 1, 1, "", "fake_tensordict"], [188, 1, 1, "", "fast_encoding"], [188, 1, 1, "", "float"], [188, 1, 1, "", "forward"], [188, 2, 1, "", "full_action_spec"], [188, 2, 1, "", "full_action_spec_unbatched"], [188, 2, 1, "", "full_done_spec"], [188, 2, 1, "", "full_done_spec_unbatched"], [188, 2, 1, "", "full_observation_spec_unbatched"], [188, 2, 1, "", "full_reward_spec"], [188, 2, 1, "", "full_reward_spec_unbatched"], [188, 2, 1, "", "full_state_spec"], [188, 2, 1, "", "full_state_spec_unbatched"], [188, 1, 1, "", "get_buffer"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "get_library_name"], [188, 1, 1, "", "get_parameter"], [188, 1, 1, "", "get_submodule"], [188, 1, 1, "", "half"], [188, 2, 1, "", "input_spec"], [188, 2, 1, "", "input_spec_unbatched"], [188, 1, 1, "", "ipu"], [188, 2, 1, "", "is_spec_locked"], [188, 1, 1, "", "load_state_dict"], [188, 1, 1, "", "maybe_reset"], [188, 1, 1, "", "modules"], [188, 1, 1, "", "mtia"], [188, 1, 1, "", "named_buffers"], [188, 1, 1, "", "named_children"], [188, 1, 1, "", "named_modules"], [188, 1, 1, "", "named_parameters"], [188, 2, 1, "", "observation_keys"], [188, 2, 1, "", "observation_spec"], [188, 2, 1, "", "observation_spec_unbatched"], [188, 2, 1, "", "output_spec"], [188, 2, 1, "", "output_spec_unbatched"], [188, 1, 1, "", "parameters"], [188, 1, 1, "", "rand_action"], [188, 1, 1, "", "rand_step"], [188, 1, 1, "", "read_action"], [188, 1, 1, "", "read_done"], [188, 1, 1, "", "read_obs"], [188, 1, 1, "", "read_reward"], [188, 1, 1, "", "register_backward_hook"], [188, 1, 1, "", "register_buffer"], [188, 1, 1, "", "register_forward_hook"], [188, 1, 1, "", "register_forward_pre_hook"], [188, 1, 1, "", "register_full_backward_hook"], [188, 1, 1, "", "register_full_backward_pre_hook"], [188, 1, 1, "", "register_gym"], [188, 1, 1, "", "register_load_state_dict_post_hook"], [188, 1, 1, "", "register_load_state_dict_pre_hook"], [188, 1, 1, "", "register_module"], [188, 1, 1, "", "register_parameter"], [188, 1, 1, "", "register_state_dict_post_hook"], [188, 1, 1, "", "register_state_dict_pre_hook"], [188, 1, 1, "", "requires_grad_"], [188, 1, 1, "", "reset"], [188, 2, 1, "", "reset_keys"], [188, 2, 1, "", "reward_key"], [188, 2, 1, "", "reward_keys"], [188, 2, 1, "", "reward_spec"], [188, 2, 1, "", "reward_spec_unbatched"], [188, 1, 1, "", "rollout"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "set_info_dict_reader"], [188, 1, 1, "", "set_seed"], [188, 1, 1, "", "set_spec_lock_"], [188, 1, 1, "", "set_submodule"], [188, 2, 1, "", "shape"], [188, 1, 1, "", "share_memory"], [188, 2, 1, "", "specs"], [188, 1, 1, "", "state_dict"], [188, 2, 1, "", "state_keys"], [188, 2, 1, "", "state_spec"], [188, 2, 1, "", "state_spec_unbatched"], [188, 1, 1, "", "step"], [188, 1, 1, "", "step_and_maybe_reset"], [188, 1, 1, "", "step_mdp"], [188, 1, 1, "", "to"], [188, 1, 1, "", "to_empty"], [188, 1, 1, "", "train"], [188, 1, 1, "", "type"], [188, 1, 1, "", "xpu"], [188, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[191, 0, 1, "", "BrowserTransform"], [192, 0, 1, "", "DataLoadingPrimer"], [193, 0, 1, "", "KLRewardTransform"], [194, 0, 1, "", "MCPToolTransform"], [195, 0, 1, "", "PythonInterpreter"], [196, 0, 1, "", "TemplateTransform"], [197, 0, 1, "", "Tokenizer"], [198, 0, 1, "", "as_nested_tensor"], [199, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.BrowserTransform": [[191, 1, 1, "", "add_module"], [191, 1, 1, "", "apply"], [191, 1, 1, "", "bfloat16"], [191, 1, 1, "", "buffers"], [191, 1, 1, "", "children"], [191, 1, 1, "", "clone"], [191, 1, 1, "", "close"], [191, 1, 1, "", "compile"], [191, 2, 1, "", "container"], [191, 1, 1, "", "cpu"], [191, 1, 1, "", "cuda"], [191, 1, 1, "", "double"], [191, 1, 1, "", "eval"], [191, 1, 1, "", "extra_repr"], [191, 1, 1, "", "float"], [191, 1, 1, "", "forward"], [191, 1, 1, "", "get_buffer"], [191, 1, 1, "", "get_extra_state"], [191, 1, 1, "", "get_parameter"], [191, 1, 1, "", "get_submodule"], [191, 1, 1, "", "half"], [191, 1, 1, "", "init"], [191, 1, 1, "", "inv"], [191, 1, 1, "", "ipu"], [191, 1, 1, "", "load_state_dict"], [191, 1, 1, "", "modules"], [191, 1, 1, "", "mtia"], [191, 1, 1, "", "named_buffers"], [191, 1, 1, "", "named_children"], [191, 1, 1, "", "named_modules"], [191, 1, 1, "", "named_parameters"], [191, 1, 1, "", "parameters"], [191, 2, 1, "", "parent"], [191, 1, 1, "", "register_backward_hook"], [191, 1, 1, "", "register_buffer"], [191, 1, 1, "", "register_forward_hook"], [191, 1, 1, "", "register_forward_pre_hook"], [191, 1, 1, "", "register_full_backward_hook"], [191, 1, 1, "", "register_full_backward_pre_hook"], [191, 1, 1, "", "register_load_state_dict_post_hook"], [191, 1, 1, "", "register_load_state_dict_pre_hook"], [191, 1, 1, "", "register_module"], [191, 1, 1, "", "register_parameter"], [191, 1, 1, "", "register_state_dict_post_hook"], [191, 1, 1, "", "register_state_dict_pre_hook"], [191, 1, 1, "", "requires_grad_"], [191, 1, 1, "", "set_extra_state"], [191, 1, 1, "", "set_submodule"], [191, 1, 1, "", "share_memory"], [191, 1, 1, "", "state_dict"], [191, 1, 1, "", "to"], [191, 1, 1, "", "to_empty"], [191, 1, 1, "", "train"], [191, 1, 1, "", "transform_action_spec"], [191, 1, 1, "", "transform_done_spec"], [191, 1, 1, "", "transform_env_batch_size"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "transform_state_spec"], [191, 1, 1, "", "type"], [191, 1, 1, "", "xpu"], [191, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[192, 1, 1, "", "add_module"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "children"], [192, 1, 1, "", "close"], [192, 1, 1, "", "compile"], [192, 2, 1, "", "container"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 1, 1, "", "double"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 1, 1, "", "init"], [192, 1, 1, "", "inv"], [192, 1, 1, "", "ipu"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 1, 1, "", "parameters"], [192, 2, 1, "", "parent"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_submodule"], [192, 1, 1, "", "share_memory"], [192, 1, 1, "", "state_dict"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "transform_action_spec"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_batch_size"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "transform_state_spec"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[193, 1, 1, "", "add_module"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "children"], [193, 1, 1, "", "close"], [193, 1, 1, "", "compile"], [193, 2, 1, "", "container"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 1, 1, "", "double"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 1, 1, "", "init"], [193, 1, 1, "", "inv"], [193, 1, 1, "", "ipu"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 1, 1, "", "parameters"], [193, 2, 1, "", "parent"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_submodule"], [193, 1, 1, "", "share_memory"], [193, 1, 1, "", "state_dict"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "transform_action_spec"], [193, 1, 1, "", "transform_done_spec"], [193, 1, 1, "", "transform_env_batch_size"], [193, 1, 1, "", "transform_env_device"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_output_spec"], [193, 1, 1, "", "transform_reward_spec"], [193, 1, 1, "", "transform_state_spec"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[194, 1, 1, "", "add_module"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "children"], [194, 1, 1, "", "close"], [194, 1, 1, "", "compile"], [194, 2, 1, "", "container"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 1, 1, "", "double"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 1, 1, "", "init"], [194, 1, 1, "", "inv"], [194, 1, 1, "", "ipu"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 1, 1, "", "parameters"], [194, 2, 1, "", "parent"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_submodule"], [194, 1, 1, "", "share_memory"], [194, 1, 1, "", "state_dict"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "transform_action_spec"], [194, 1, 1, "", "transform_done_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "transform_state_spec"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "clone"], [195, 1, 1, "", "close"], [195, 1, 1, "", "compile"], [195, 2, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "init"], [195, 1, 1, "", "inv"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 2, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[196, 1, 1, "", "add_module"], [196, 1, 1, "", "apply"], [196, 1, 1, "", "bfloat16"], [196, 1, 1, "", "buffers"], [196, 1, 1, "", "children"], [196, 1, 1, "", "close"], [196, 1, 1, "", "compile"], [196, 2, 1, "", "container"], [196, 1, 1, "", "cpu"], [196, 1, 1, "", "cuda"], [196, 1, 1, "", "double"], [196, 1, 1, "", "eval"], [196, 1, 1, "", "extra_repr"], [196, 1, 1, "", "float"], [196, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffer"], [196, 1, 1, "", "get_extra_state"], [196, 1, 1, "", "get_parameter"], [196, 1, 1, "", "get_submodule"], [196, 1, 1, "", "half"], [196, 1, 1, "", "init"], [196, 1, 1, "", "inv"], [196, 1, 1, "", "ipu"], [196, 1, 1, "", "load_state_dict"], [196, 1, 1, "", "modules"], [196, 1, 1, "", "mtia"], [196, 1, 1, "", "named_buffers"], [196, 1, 1, "", "named_children"], [196, 1, 1, "", "named_modules"], [196, 1, 1, "", "named_parameters"], [196, 1, 1, "", "parameters"], [196, 2, 1, "", "parent"], [196, 1, 1, "", "register_backward_hook"], [196, 1, 1, "", "register_buffer"], [196, 1, 1, "", "register_forward_hook"], [196, 1, 1, "", "register_forward_pre_hook"], [196, 1, 1, "", "register_full_backward_hook"], [196, 1, 1, "", "register_full_backward_pre_hook"], [196, 1, 1, "", "register_load_state_dict_post_hook"], [196, 1, 1, "", "register_load_state_dict_pre_hook"], [196, 1, 1, "", "register_module"], [196, 1, 1, "", "register_parameter"], [196, 1, 1, "", "register_state_dict_post_hook"], [196, 1, 1, "", "register_state_dict_pre_hook"], [196, 1, 1, "", "requires_grad_"], [196, 1, 1, "", "set_extra_state"], [196, 1, 1, "", "set_submodule"], [196, 1, 1, "", "share_memory"], [196, 1, 1, "", "state_dict"], [196, 1, 1, "", "to"], [196, 1, 1, "", "to_empty"], [196, 1, 1, "", "train"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_batch_size"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"], [196, 1, 1, "", "type"], [196, 1, 1, "", "xpu"], [196, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[197, 1, 1, "", "add_module"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "bfloat16"], [197, 1, 1, "", "buffers"], [197, 1, 1, "", "children"], [197, 1, 1, "", "close"], [197, 1, 1, "", "compile"], [197, 2, 1, "", "container"], [197, 1, 1, "", "cpu"], [197, 1, 1, "", "cuda"], [197, 1, 1, "", "double"], [197, 1, 1, "", "eval"], [197, 1, 1, "", "extra_repr"], [197, 1, 1, "", "float"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "get_buffer"], [197, 1, 1, "", "get_extra_state"], [197, 1, 1, "", "get_parameter"], [197, 1, 1, "", "get_submodule"], [197, 1, 1, "", "half"], [197, 1, 1, "", "init"], [197, 1, 1, "", "inv"], [197, 1, 1, "", "ipu"], [197, 1, 1, "", "load_state_dict"], [197, 1, 1, "", "modules"], [197, 1, 1, "", "mtia"], [197, 1, 1, "", "named_buffers"], [197, 1, 1, "", "named_children"], [197, 1, 1, "", "named_modules"], [197, 1, 1, "", "named_parameters"], [197, 1, 1, "", "parameters"], [197, 2, 1, "", "parent"], [197, 1, 1, "", "register_backward_hook"], [197, 1, 1, "", "register_buffer"], [197, 1, 1, "", "register_forward_hook"], [197, 1, 1, "", "register_forward_pre_hook"], [197, 1, 1, "", "register_full_backward_hook"], [197, 1, 1, "", "register_full_backward_pre_hook"], [197, 1, 1, "", "register_load_state_dict_post_hook"], [197, 1, 1, "", "register_load_state_dict_pre_hook"], [197, 1, 1, "", "register_module"], [197, 1, 1, "", "register_parameter"], [197, 1, 1, "", "register_state_dict_post_hook"], [197, 1, 1, "", "register_state_dict_pre_hook"], [197, 1, 1, "", "requires_grad_"], [197, 1, 1, "", "set_extra_state"], [197, 1, 1, "", "set_submodule"], [197, 1, 1, "", "share_memory"], [197, 1, 1, "", "state_dict"], [197, 1, 1, "", "to"], [197, 1, 1, "", "to_empty"], [197, 1, 1, "", "train"], [197, 1, 1, "", "transform_action_spec"], [197, 1, 1, "", "transform_done_spec"], [197, 1, 1, "", "transform_env_batch_size"], [197, 1, 1, "", "transform_env_device"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"], [197, 1, 1, "", "transform_output_spec"], [197, 1, 1, "", "transform_reward_spec"], [197, 1, 1, "", "transform_state_spec"], [197, 1, 1, "", "type"], [197, 1, 1, "", "xpu"], [197, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[201, 3, 1, "", "DreamerDecoder"], [202, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[208, 0, 1, "", "ActionDiscretizer"], [209, 0, 1, "", "ActionMask"], [210, 0, 1, "", "AutoResetEnv"], [211, 0, 1, "", "AutoResetTransform"], [212, 0, 1, "", "BatchSizeTransform"], [213, 0, 1, "", "BinarizeReward"], [214, 0, 1, "", "BurnInTransform"], [215, 0, 1, "", "CatFrames"], [216, 0, 1, "", "CatTensors"], [217, 0, 1, "", "CenterCrop"], [218, 0, 1, "", "ClipTransform"], [219, 0, 1, "", "Compose"], [220, 0, 1, "", "ConditionalPolicySwitch"], [221, 0, 1, "", "ConditionalSkip"], [222, 0, 1, "", "Crop"], [223, 0, 1, "", "DTypeCastTransform"], [224, 0, 1, "", "DeviceCastTransform"], [225, 0, 1, "", "DiscreteActionProjection"], [226, 0, 1, "", "DoubleToFloat"], [227, 0, 1, "", "EndOfLifeTransform"], [228, 0, 1, "", "ExcludeTransform"], [229, 0, 1, "", "FiniteTensorDictCheck"], [230, 0, 1, "", "FlattenObservation"], [231, 0, 1, "", "FrameSkipTransform"], [232, 0, 1, "", "GrayScale"], [233, 0, 1, "", "Hash"], [234, 0, 1, "", "InitTracker"], [235, 0, 1, "", "KLRewardTransform"], [236, 0, 1, "", "LineariseRewards"], [237, 0, 1, "", "MultiAction"], [238, 0, 1, "", "NoopResetEnv"], [239, 0, 1, "", "ObservationNorm"], [240, 0, 1, "", "ObservationTransform"], [241, 0, 1, "", "PermuteTransform"], [242, 0, 1, "", "PinMemoryTransform"], [243, 0, 1, "", "R3MTransform"], [244, 0, 1, "", "RandomCropTensorDict"], [245, 0, 1, "", "RemoveEmptySpecs"], [246, 0, 1, "", "RenameTransform"], [247, 0, 1, "", "Resize"], [248, 0, 1, "", "Reward2GoTransform"], [249, 0, 1, "", "RewardClipping"], [250, 0, 1, "", "RewardScaling"], [251, 0, 1, "", "RewardSum"], [252, 0, 1, "", "SelectTransform"], [253, 0, 1, "", "SignTransform"], [254, 0, 1, "", "SqueezeTransform"], [255, 0, 1, "", "Stack"], [256, 0, 1, "", "StepCounter"], [257, 0, 1, "", "TargetReturn"], [258, 0, 1, "", "TensorDictPrimer"], [259, 0, 1, "", "TimeMaxPool"], [260, 0, 1, "", "Timer"], [261, 0, 1, "", "ToTensorImage"], [262, 0, 1, "", "Tokenizer"], [263, 0, 1, "", "TrajCounter"], [264, 0, 1, "", "Transform"], [265, 0, 1, "", "TransformedEnv"], [266, 0, 1, "", "UnaryTransform"], [267, 0, 1, "", "UnsqueezeTransform"], [268, 0, 1, "", "VC1Transform"], [269, 0, 1, "", "VIPRewardTransform"], [270, 0, 1, "", "VIPTransform"], [271, 0, 1, "", "VecGymEnvTransform"], [272, 0, 1, "", "VecNorm"], [273, 0, 1, "", "VecNormV2"], [274, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[208, 0, 1, "", "SamplingStrategy"], [208, 1, 1, "", "inv"], [208, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[209, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[210, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[211, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "transform_env_batch_size"], [212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[213, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[214, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_rb_transform_and_sampler"], [215, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[217, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[219, 1, 1, "", "append"], [219, 1, 1, "", "close"], [219, 1, 1, "", "forward"], [219, 1, 1, "", "init"], [219, 1, 1, "", "insert"], [219, 1, 1, "", "to"], [219, 1, 1, "", "transform_action_spec"], [219, 1, 1, "", "transform_env_batch_size"], [219, 1, 1, "", "transform_env_device"], [219, 1, 1, "", "transform_input_spec"], [219, 1, 1, "", "transform_observation_spec"], [219, 1, 1, "", "transform_output_spec"], [219, 1, 1, "", "transform_reward_spec"], [219, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[220, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[221, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[222, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_action_spec"], [224, 1, 1, "", "transform_done_spec"], [224, 1, 1, "", "transform_env_device"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_observation_spec"], [224, 1, 1, "", "transform_output_spec"], [224, 1, 1, "", "transform_reward_spec"], [224, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[225, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "register_keys"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[229, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[231, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[233, 1, 1, "", "get_input_from_hash"], [233, 1, 1, "", "reproducible_hash"], [233, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[236, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[237, 1, 1, "", "transform_input_spec"], [237, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[239, 1, 1, "", "init_stats"], [239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[241, 1, 1, "", "transform_input_spec"], [241, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[242, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[243, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[244, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "transform_input_spec"], [245, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "transform_input_spec"], [246, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[247, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[248, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[249, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[250, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "transform_input_spec"], [251, 1, 1, "", "transform_observation_spec"], [251, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[253, 1, 1, "", "transform_observation_spec"], [253, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "transform_done_spec"], [255, 1, 1, "", "transform_input_spec"], [255, 1, 1, "", "transform_observation_spec"], [255, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "transform_input_spec"], [256, 1, 1, "", "transform_observation_spec"], [256, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "transform_input_spec"], [257, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "to"], [258, 1, 1, "", "transform_input_spec"], [258, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[261, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "transform_done_spec"], [262, 1, 1, "", "transform_input_spec"], [262, 1, 1, "", "transform_observation_spec"], [262, 1, 1, "", "transform_output_spec"], [262, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "load_state_dict"], [263, 1, 1, "", "state_dict"], [263, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[264, 1, 1, "", "clone"], [264, 1, 1, "", "close"], [264, 2, 1, "", "container"], [264, 1, 1, "", "forward"], [264, 1, 1, "", "init"], [264, 1, 1, "", "inv"], [264, 2, 1, "", "parent"], [264, 1, 1, "", "reset_parent"], [264, 1, 1, "", "set_container"], [264, 1, 1, "", "to"], [264, 1, 1, "", "transform_action_spec"], [264, 1, 1, "", "transform_done_spec"], [264, 1, 1, "", "transform_env_batch_size"], [264, 1, 1, "", "transform_env_device"], [264, 1, 1, "", "transform_input_spec"], [264, 1, 1, "", "transform_observation_spec"], [264, 1, 1, "", "transform_output_spec"], [264, 1, 1, "", "transform_reward_spec"], [264, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[265, 1, 1, "", "add_truncated_keys"], [265, 1, 1, "", "append_transform"], [265, 2, 1, "", "batch_locked"], [265, 2, 1, "", "batch_size"], [265, 1, 1, "", "empty_cache"], [265, 1, 1, "", "eval"], [265, 2, 1, "", "input_spec"], [265, 1, 1, "", "insert_transform"], [265, 1, 1, "", "load_state_dict"], [265, 2, 1, "", "output_spec"], [265, 1, 1, "", "rand_action"], [265, 1, 1, "", "set_missing_tolerance"], [265, 1, 1, "", "set_seed"], [265, 1, 1, "", "state_dict"], [265, 1, 1, "", "to"], [265, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[266, 1, 1, "", "transform_action_spec"], [266, 1, 1, "", "transform_done_spec"], [266, 1, 1, "", "transform_input_spec"], [266, 1, 1, "", "transform_observation_spec"], [266, 1, 1, "", "transform_output_spec"], [266, 1, 1, "", "transform_reward_spec"], [266, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[267, 1, 1, "", "transform_action_spec"], [267, 1, 1, "", "transform_observation_spec"], [267, 1, 1, "", "transform_reward_spec"], [267, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_noload_model"], [268, 1, 1, "", "to"], [268, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[270, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[272, 1, 1, "", "build_td_for_shared_vecnorm"], [272, 1, 1, "", "forward"], [272, 1, 1, "", "freeze"], [272, 1, 1, "", "frozen_copy"], [272, 1, 1, "", "get_extra_state"], [272, 2, 1, "", "loc"], [272, 2, 1, "", "scale"], [272, 1, 1, "", "set_extra_state"], [272, 2, 1, "", "standard_normal"], [272, 1, 1, "", "to_observation_norm"], [272, 1, 1, "", "transform_observation_spec"], [272, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[273, 1, 1, "", "clone"], [273, 1, 1, "id0", "freeze"], [273, 1, 1, "id1", "frozen_copy"], [273, 1, 1, "id2", "get_extra_state"], [273, 2, 1, "id3", "loc"], [273, 2, 1, "id4", "scale"], [273, 1, 1, "id5", "set_extra_state"], [273, 2, 1, "id6", "standard_normal"], [273, 1, 1, "", "to_observation_norm"], [273, 1, 1, "id7", "transform_observation_spec"], [273, 1, 1, "id8", "transform_output_spec"], [273, 1, 1, "id9", "transform_reward_spec"], [273, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[275, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[275, 1, 1, "", "add_module"], [275, 1, 1, "", "apply"], [275, 1, 1, "", "bfloat16"], [275, 1, 1, "", "buffers"], [275, 1, 1, "", "children"], [275, 1, 1, "", "close"], [275, 1, 1, "", "compile"], [275, 2, 1, "", "container"], [275, 1, 1, "", "cpu"], [275, 1, 1, "", "cuda"], [275, 1, 1, "", "double"], [275, 1, 1, "", "eval"], [275, 1, 1, "", "extra_repr"], [275, 1, 1, "", "float"], [275, 1, 1, "", "forward"], [275, 1, 1, "", "get_buffer"], [275, 1, 1, "", "get_extra_state"], [275, 1, 1, "", "get_parameter"], [275, 1, 1, "", "get_submodule"], [275, 1, 1, "", "half"], [275, 1, 1, "", "init"], [275, 1, 1, "", "inv"], [275, 1, 1, "", "ipu"], [275, 1, 1, "", "load_state_dict"], [275, 1, 1, "", "modules"], [275, 1, 1, "", "mtia"], [275, 2, 1, "", "n_steps"], [275, 1, 1, "", "named_buffers"], [275, 1, 1, "", "named_children"], [275, 1, 1, "", "named_modules"], [275, 1, 1, "", "named_parameters"], [275, 1, 1, "", "parameters"], [275, 2, 1, "", "parent"], [275, 1, 1, "", "register_backward_hook"], [275, 1, 1, "", "register_buffer"], [275, 1, 1, "", "register_forward_hook"], [275, 1, 1, "", "register_forward_pre_hook"], [275, 1, 1, "", "register_full_backward_hook"], [275, 1, 1, "", "register_full_backward_pre_hook"], [275, 1, 1, "", "register_load_state_dict_post_hook"], [275, 1, 1, "", "register_load_state_dict_pre_hook"], [275, 1, 1, "", "register_module"], [275, 1, 1, "", "register_parameter"], [275, 1, 1, "", "register_state_dict_post_hook"], [275, 1, 1, "", "register_state_dict_pre_hook"], [275, 1, 1, "", "requires_grad_"], [275, 1, 1, "", "set_extra_state"], [275, 1, 1, "", "set_submodule"], [275, 1, 1, "", "share_memory"], [275, 1, 1, "", "state_dict"], [275, 1, 1, "", "to"], [275, 1, 1, "", "to_empty"], [275, 1, 1, "", "train"], [275, 1, 1, "", "transform_action_spec"], [275, 1, 1, "", "transform_done_spec"], [275, 1, 1, "", "transform_env_batch_size"], [275, 1, 1, "", "transform_env_device"], [275, 1, 1, "", "transform_input_spec"], [275, 1, 1, "", "transform_observation_spec"], [275, 1, 1, "", "transform_output_spec"], [275, 1, 1, "", "transform_reward_spec"], [275, 1, 1, "", "transform_state_spec"], [275, 1, 1, "", "type"], [275, 1, 1, "", "xpu"], [275, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[276, 1, 1, "", "get_class_that_defined_method"], [276, 1, 1, "", "import_module"], [276, 1, 1, "", "module_set"], [276, 1, 1, "", "reset"]], "torchrl.modules": [[277, 0, 1, "", "AdditiveGaussianModule"], [278, 0, 1, "", "BatchRenorm1d"], [279, 0, 1, "", "CEMPlanner"], [280, 0, 1, "", "ConsistentDropout"], [281, 0, 1, "", "ConsistentDropoutModule"], [282, 0, 1, "", "Conv3dNet"], [283, 0, 1, "", "ConvNet"], [284, 0, 1, "", "DTActor"], [285, 0, 1, "", "DdpgCnnActor"], [286, 0, 1, "", "DdpgCnnQNet"], [287, 0, 1, "", "DdpgMlpActor"], [288, 0, 1, "", "DdpgMlpQNet"], [289, 0, 1, "", "DecisionTransformer"], [290, 0, 1, "", "Delta"], [291, 0, 1, "", "DistributionalDQNnet"], [292, 0, 1, "", "DistributionalQValueHook"], [293, 0, 1, "", "DreamerActor"], [294, 0, 1, "", "DuelingCnnDQNet"], [295, 0, 1, "", "EGreedyModule"], [296, 0, 1, "", "GRU"], [297, 0, 1, "", "GRUCell"], [298, 0, 1, "", "GRUModule"], [299, 0, 1, "", "IndependentNormal"], [300, 0, 1, "", "LSTM"], [301, 0, 1, "", "LSTMCell"], [302, 0, 1, "", "LSTMModule"], [303, 0, 1, "", "MLP"], [304, 0, 1, "", "MPCPlannerBase"], [305, 0, 1, "", "MPPIPlanner"], [306, 0, 1, "", "MaskedCategorical"], [307, 0, 1, "", "MaskedOneHotCategorical"], [308, 0, 1, "", "MultiAgentConvNet"], [309, 0, 1, "", "MultiAgentMLP"], [310, 0, 1, "", "MultiAgentNetBase"], [311, 0, 1, "", "NoisyLazyLinear"], [312, 0, 1, "", "NoisyLinear"], [313, 0, 1, "", "ObsDecoder"], [314, 0, 1, "", "ObsEncoder"], [315, 0, 1, "", "OneHotCategorical"], [316, 0, 1, "", "OneHotOrdinal"], [317, 0, 1, "", "OnlineDTActor"], [318, 0, 1, "", "Ordinal"], [319, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [320, 0, 1, "", "QMixer"], [321, 0, 1, "", "QValueHook"], [322, 0, 1, "", "RSSMPosterior"], [323, 0, 1, "", "RSSMPrior"], [324, 0, 1, "", "Squeeze2dLayer"], [325, 0, 1, "", "SqueezeLayer"], [326, 0, 1, "", "TanhDelta"], [327, 0, 1, "", "TanhNormal"], [328, 0, 1, "", "TruncatedNormal"], [329, 0, 1, "", "VDNMixer"], [330, 0, 1, "", "VmapModule"], [338, 0, 1, "", "recurrent_mode"], [339, 0, 1, "", "reset_noise"], [340, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[278, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[279, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[280, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[282, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[283, 1, 1, "", "default_atari_dqn"], [283, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[284, 1, 1, "", "default_config"], [284, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[285, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[286, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[287, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[288, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[289, 0, 1, "", "DTConfig"], [289, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[290, 1, 1, "", "expand"], [290, 1, 1, "", "log_prob"], [290, 2, 1, "", "mean"], [290, 2, 1, "", "mode"], [290, 1, 1, "", "rsample"], [290, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[291, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[293, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[294, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "step"]], "torchrl.modules.GRU": [[296, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[297, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "make_cudnn_based"], [298, 1, 1, "", "make_python_based"], [298, 1, 1, "id0", "make_tensordict_primer"], [298, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[299, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[300, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[301, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "make_cudnn_based"], [302, 1, 1, "", "make_python_based"], [302, 1, 1, "id0", "make_tensordict_primer"], [302, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[303, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[305, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[306, 1, 1, "", "log_prob"], [306, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[307, 1, 1, "", "log_prob"], [307, 2, 1, "", "mode"], [307, 1, 1, "", "rsample"], [307, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "from_stateful_net"], [310, 1, 1, "", "get_stateful_net"], [310, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[311, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[313, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[314, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[315, 1, 1, "", "entropy"], [315, 1, 1, "", "log_prob"], [315, 2, 1, "", "mode"], [315, 1, 1, "", "rsample"], [315, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[317, 1, 1, "", "default_config"], [317, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[320, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[322, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[323, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[325, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[326, 2, 1, "", "mean"], [326, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[327, 1, 1, "", "get_mode"], [327, 2, 1, "", "mean"], [327, 2, 1, "", "mode"], [327, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[328, 1, 1, "", "log_prob"], [328, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[329, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[330, 1, 1, "", "forward"]], "torchrl.modules.llm": [[331, 0, 1, "", "CategoricalSequential"], [332, 0, 1, "", "LLMOnDevice"], [333, 0, 1, "", "TransformersWrapper"], [334, 0, 1, "", "make_vllm_worker"], [335, 0, 1, "", "stateless_init_process_group"], [336, 0, 1, "", "vLLMWorker"], [337, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.CategoricalSequential": [[331, 1, 1, "", "add_module"], [331, 1, 1, "", "apply"], [331, 1, 1, "", "bfloat16"], [331, 1, 1, "", "buffers"], [331, 1, 1, "", "children"], [331, 1, 1, "", "compile"], [331, 1, 1, "", "cpu"], [331, 1, 1, "", "cuda"], [331, 1, 1, "", "double"], [331, 1, 1, "", "eval"], [331, 1, 1, "", "extra_repr"], [331, 1, 1, "", "float"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "get_buffer"], [331, 1, 1, "", "get_extra_state"], [331, 1, 1, "", "get_parameter"], [331, 1, 1, "", "get_submodule"], [331, 1, 1, "", "half"], [331, 1, 1, "", "ipu"], [331, 1, 1, "", "is_tdmodule_compatible"], [331, 1, 1, "", "load_state_dict"], [331, 1, 1, "", "modules"], [331, 1, 1, "", "mtia"], [331, 1, 1, "", "named_buffers"], [331, 1, 1, "", "named_children"], [331, 1, 1, "", "named_modules"], [331, 1, 1, "", "named_parameters"], [331, 1, 1, "", "parameters"], [331, 1, 1, "", "register_backward_hook"], [331, 1, 1, "", "register_buffer"], [331, 1, 1, "", "register_forward_hook"], [331, 1, 1, "", "register_forward_pre_hook"], [331, 1, 1, "", "register_full_backward_hook"], [331, 1, 1, "", "register_full_backward_pre_hook"], [331, 1, 1, "", "register_load_state_dict_post_hook"], [331, 1, 1, "", "register_load_state_dict_pre_hook"], [331, 1, 1, "", "register_module"], [331, 1, 1, "", "register_parameter"], [331, 1, 1, "", "register_state_dict_post_hook"], [331, 1, 1, "", "register_state_dict_pre_hook"], [331, 1, 1, "", "requires_grad_"], [331, 1, 1, "", "reset_out_keys"], [331, 1, 1, "", "reset_parameters_recursive"], [331, 1, 1, "", "select_out_keys"], [331, 1, 1, "", "set_extra_state"], [331, 1, 1, "", "set_submodule"], [331, 1, 1, "", "share_memory"], [331, 1, 1, "", "state_dict"], [331, 1, 1, "", "to"], [331, 1, 1, "", "to_empty"], [331, 1, 1, "", "train"], [331, 1, 1, "", "type"], [331, 1, 1, "", "xpu"], [331, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.TransformersWrapper": [[333, 1, 1, "", "add_module"], [333, 1, 1, "", "apply"], [333, 1, 1, "", "bfloat16"], [333, 1, 1, "", "buffers"], [333, 1, 1, "", "children"], [333, 1, 1, "", "compile"], [333, 1, 1, "", "cpu"], [333, 1, 1, "", "cuda"], [333, 1, 1, "", "double"], [333, 1, 1, "", "eval"], [333, 1, 1, "", "extra_repr"], [333, 1, 1, "", "float"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "get_buffer"], [333, 1, 1, "", "get_extra_state"], [333, 1, 1, "", "get_parameter"], [333, 1, 1, "", "get_submodule"], [333, 1, 1, "", "half"], [333, 1, 1, "", "ipu"], [333, 1, 1, "", "is_tdmodule_compatible"], [333, 1, 1, "", "load_state_dict"], [333, 1, 1, "", "modules"], [333, 1, 1, "", "mtia"], [333, 1, 1, "", "named_buffers"], [333, 1, 1, "", "named_children"], [333, 1, 1, "", "named_modules"], [333, 1, 1, "", "named_parameters"], [333, 1, 1, "", "parameters"], [333, 1, 1, "", "register_backward_hook"], [333, 1, 1, "", "register_buffer"], [333, 1, 1, "", "register_forward_hook"], [333, 1, 1, "", "register_forward_pre_hook"], [333, 1, 1, "", "register_full_backward_hook"], [333, 1, 1, "", "register_full_backward_pre_hook"], [333, 1, 1, "", "register_load_state_dict_post_hook"], [333, 1, 1, "", "register_load_state_dict_pre_hook"], [333, 1, 1, "", "register_module"], [333, 1, 1, "", "register_parameter"], [333, 1, 1, "", "register_state_dict_post_hook"], [333, 1, 1, "", "register_state_dict_pre_hook"], [333, 1, 1, "", "requires_grad_"], [333, 1, 1, "", "reset_out_keys"], [333, 1, 1, "", "reset_parameters_recursive"], [333, 1, 1, "", "select_out_keys"], [333, 1, 1, "", "set_extra_state"], [333, 1, 1, "", "set_submodule"], [333, 1, 1, "", "share_memory"], [333, 1, 1, "", "state_dict"], [333, 1, 1, "", "to"], [333, 1, 1, "", "to_empty"], [333, 1, 1, "", "train"], [333, 1, 1, "", "type"], [333, 1, 1, "", "xpu"], [333, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWorker": [[336, 1, 1, "", "check_weights_changed"]], "torchrl.modules.llm.vLLMWrapper": [[337, 1, 1, "", "add_module"], [337, 1, 1, "", "apply"], [337, 1, 1, "", "bfloat16"], [337, 1, 1, "", "buffers"], [337, 1, 1, "", "children"], [337, 1, 1, "", "compile"], [337, 1, 1, "", "cpu"], [337, 1, 1, "", "cuda"], [337, 1, 1, "", "double"], [337, 1, 1, "", "eval"], [337, 1, 1, "", "extra_repr"], [337, 1, 1, "", "float"], [337, 1, 1, "", "forward"], [337, 1, 1, "", "get_buffer"], [337, 1, 1, "", "get_extra_state"], [337, 1, 1, "", "get_parameter"], [337, 1, 1, "", "get_submodule"], [337, 1, 1, "", "half"], [337, 1, 1, "", "ipu"], [337, 1, 1, "", "is_tdmodule_compatible"], [337, 1, 1, "", "load_state_dict"], [337, 1, 1, "", "modules"], [337, 1, 1, "", "mtia"], [337, 1, 1, "", "named_buffers"], [337, 1, 1, "", "named_children"], [337, 1, 1, "", "named_modules"], [337, 1, 1, "", "named_parameters"], [337, 1, 1, "", "parameters"], [337, 1, 1, "", "register_backward_hook"], [337, 1, 1, "", "register_buffer"], [337, 1, 1, "", "register_forward_hook"], [337, 1, 1, "", "register_forward_pre_hook"], [337, 1, 1, "", "register_full_backward_hook"], [337, 1, 1, "", "register_full_backward_pre_hook"], [337, 1, 1, "", "register_load_state_dict_post_hook"], [337, 1, 1, "", "register_load_state_dict_pre_hook"], [337, 1, 1, "", "register_module"], [337, 1, 1, "", "register_parameter"], [337, 1, 1, "", "register_state_dict_post_hook"], [337, 1, 1, "", "register_state_dict_pre_hook"], [337, 1, 1, "", "requires_grad_"], [337, 1, 1, "", "reset_out_keys"], [337, 1, 1, "", "reset_parameters_recursive"], [337, 1, 1, "", "select_out_keys"], [337, 1, 1, "", "set_extra_state"], [337, 1, 1, "", "set_submodule"], [337, 1, 1, "", "share_memory"], [337, 1, 1, "", "state_dict"], [337, 1, 1, "", "to"], [337, 1, 1, "", "to_empty"], [337, 1, 1, "", "train"], [337, 1, 1, "", "type"], [337, 1, 1, "", "xpu"], [337, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[341, 0, 1, "", "Actor"], [342, 0, 1, "", "ActorCriticOperator"], [343, 0, 1, "", "ActorCriticWrapper"], [344, 0, 1, "", "ActorValueOperator"], [345, 0, 1, "", "DecisionTransformerInferenceWrapper"], [346, 0, 1, "", "DistributionalQValueActor"], [347, 0, 1, "", "DistributionalQValueModule"], [348, 0, 1, "", "LMHeadActorValueOperator"], [349, 0, 1, "", "MultiStepActorWrapper"], [350, 0, 1, "", "ProbabilisticActor"], [351, 0, 1, "", "QValueActor"], [352, 0, 1, "", "QValueModule"], [353, 0, 1, "", "SafeModule"], [354, 0, 1, "", "SafeProbabilisticModule"], [355, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [356, 0, 1, "", "SafeSequential"], [357, 0, 1, "", "TanhModule"], [358, 0, 1, "", "ValueOperator"], [359, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[342, 1, 1, "", "get_critic_operator"], [342, 1, 1, "", "get_policy_head"], [342, 1, 1, "", "get_value_head"], [342, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[343, 1, 1, "", "get_policy_head"], [343, 1, 1, "", "get_policy_operator"], [343, 1, 1, "", "get_value_head"], [343, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[344, 1, 1, "", "get_policy_head"], [344, 1, 1, "", "get_policy_operator"], [344, 1, 1, "", "get_value_head"], [344, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[345, 1, 1, "", "forward"], [345, 1, 1, "", "mask_context"], [345, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[347, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[349, 1, 1, "", "forward"], [349, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[352, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[353, 1, 1, "", "random"], [353, 1, 1, "", "random_sample"], [353, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[354, 1, 1, "", "random"], [354, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[357, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[359, 1, 1, "", "get_reward_operator"], [359, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[360, 0, 1, "", "biased_softplus"], [361, 0, 1, "", "get_primers_from_module"], [362, 0, 1, "", "inv_softplus"], [363, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[360, 1, 1, "", "forward"]], "torchrl.objectives": [[364, 0, 1, "", "A2CLoss"], [365, 0, 1, "", "CQLLoss"], [366, 0, 1, "", "ClipPPOLoss"], [367, 0, 1, "", "CrossQLoss"], [368, 0, 1, "", "DDPGLoss"], [369, 0, 1, "", "DQNLoss"], [370, 0, 1, "", "DTLoss"], [371, 0, 1, "", "DiscreteCQLLoss"], [372, 0, 1, "", "DiscreteIQLLoss"], [373, 0, 1, "", "DiscreteSACLoss"], [374, 0, 1, "", "DistributionalDQNLoss"], [375, 0, 1, "", "DreamerActorLoss"], [376, 0, 1, "", "DreamerModelLoss"], [377, 0, 1, "", "DreamerValueLoss"], [378, 0, 1, "", "GAILLoss"], [379, 0, 1, "", "HardUpdate"], [380, 0, 1, "", "IQLLoss"], [381, 0, 1, "", "KLPENPPOLoss"], [382, 0, 1, "", "LossModule"], [383, 0, 1, "", "OnlineDTLoss"], [384, 0, 1, "", "PPOLoss"], [385, 0, 1, "", "REDQLoss"], [386, 0, 1, "", "ReinforceLoss"], [387, 0, 1, "", "SACLoss"], [388, 0, 1, "", "SoftUpdate"], [389, 0, 1, "", "TD3BCLoss"], [390, 0, 1, "", "TD3Loss"], [391, 0, 1, "", "ValueEstimators"], [392, 0, 1, "", "default_value_kwargs"], [393, 0, 1, "", "distance_loss"], [394, 0, 1, "", "group_optimizers"], [395, 0, 1, "", "hold_out_net"], [396, 0, 1, "", "hold_out_params"], [401, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[364, 4, 1, "", "default_keys"], [364, 1, 1, "", "forward"], [364, 2, 1, "", "functional"], [364, 1, 1, "", "loss_critic"], [364, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[365, 4, 1, "", "default_keys"], [365, 1, 1, "", "forward"], [365, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[366, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[367, 1, 1, "", "actor_loss"], [367, 1, 1, "", "alpha_loss"], [367, 4, 1, "", "default_keys"], [367, 1, 1, "", "forward"], [367, 1, 1, "", "load_state_dict"], [367, 1, 1, "", "make_value_estimator"], [367, 1, 1, "", "maybe_init_target_entropy"], [367, 1, 1, "", "qvalue_loss"], [367, 1, 1, "", "set_keys"], [367, 1, 1, "", "state_dict"], [367, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[368, 4, 1, "", "default_keys"], [368, 1, 1, "", "forward"], [368, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[369, 4, 1, "", "default_keys"], [369, 1, 1, "", "forward"], [369, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[370, 4, 1, "", "default_keys"], [370, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[371, 4, 1, "", "default_keys"], [371, 1, 1, "", "forward"], [371, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[372, 4, 1, "", "default_keys"], [372, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[373, 4, 1, "", "default_keys"], [373, 1, 1, "", "forward"], [373, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[374, 4, 1, "", "default_keys"], [374, 1, 1, "", "forward"], [374, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[375, 4, 1, "", "default_keys"], [375, 1, 1, "", "forward"], [375, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[376, 4, 1, "", "default_keys"], [376, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[377, 4, 1, "", "default_keys"], [377, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[378, 4, 1, "", "default_keys"], [378, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[380, 4, 1, "", "default_keys"], [380, 1, 1, "", "forward"], [380, 1, 1, "", "loss_value_diff"], [380, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[381, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[382, 1, 1, "", "convert_to_functional"], [382, 1, 1, "", "forward"], [382, 1, 1, "", "from_stateful_net"], [382, 2, 1, "", "functional"], [382, 1, 1, "", "get_stateful_net"], [382, 1, 1, "", "make_value_estimator"], [382, 1, 1, "", "named_parameters"], [382, 1, 1, "", "parameters"], [382, 1, 1, "", "reset_parameters_recursive"], [382, 1, 1, "", "set_keys"], [382, 2, 1, "", "value_estimator"], [382, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[383, 4, 1, "", "default_keys"], [383, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[384, 4, 1, "", "default_keys"], [384, 1, 1, "", "forward"], [384, 2, 1, "", "functional"], [384, 1, 1, "", "loss_critic"], [384, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[385, 4, 1, "", "default_keys"], [385, 1, 1, "", "forward"], [385, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[386, 4, 1, "", "default_keys"], [386, 1, 1, "", "forward"], [386, 2, 1, "", "functional"], [386, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[387, 4, 1, "", "default_keys"], [387, 1, 1, "", "forward"], [387, 1, 1, "", "load_state_dict"], [387, 1, 1, "", "make_value_estimator"], [387, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[389, 1, 1, "", "actor_loss"], [389, 4, 1, "", "default_keys"], [389, 1, 1, "", "forward"], [389, 1, 1, "", "make_value_estimator"], [389, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[390, 4, 1, "", "default_keys"], [390, 1, 1, "", "forward"], [390, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[397, 0, 1, "", "GRPOLoss"], [398, 0, 1, "", "GRPOLossOutput"], [399, 0, 1, "", "MCAdvantage"]], "torchrl.objectives.llm.GRPOLoss": [[397, 1, 1, "", "add_module"], [397, 1, 1, "", "apply"], [397, 1, 1, "", "bfloat16"], [397, 1, 1, "", "buffers"], [397, 1, 1, "", "children"], [397, 1, 1, "", "compile"], [397, 1, 1, "", "convert_to_functional"], [397, 1, 1, "", "cpu"], [397, 1, 1, "", "cuda"], [397, 4, 1, "", "default_keys"], [397, 1, 1, "", "double"], [397, 1, 1, "", "eval"], [397, 1, 1, "", "extra_repr"], [397, 1, 1, "", "float"], [397, 1, 1, "", "forward"], [397, 1, 1, "", "from_stateful_net"], [397, 2, 1, "", "functional"], [397, 1, 1, "", "get_buffer"], [397, 1, 1, "", "get_extra_state"], [397, 1, 1, "", "get_parameter"], [397, 1, 1, "", "get_stateful_net"], [397, 1, 1, "", "get_submodule"], [397, 1, 1, "", "half"], [397, 1, 1, "", "ipu"], [397, 1, 1, "", "is_tdmodule_compatible"], [397, 1, 1, "", "load_state_dict"], [397, 1, 1, "", "loss_critic"], [397, 1, 1, "", "make_value_estimator"], [397, 1, 1, "", "modules"], [397, 1, 1, "", "mtia"], [397, 1, 1, "", "named_buffers"], [397, 1, 1, "", "named_children"], [397, 1, 1, "", "named_modules"], [397, 1, 1, "", "named_parameters"], [397, 1, 1, "", "parameters"], [397, 1, 1, "", "register_backward_hook"], [397, 1, 1, "", "register_buffer"], [397, 1, 1, "", "register_forward_hook"], [397, 1, 1, "", "register_forward_pre_hook"], [397, 1, 1, "", "register_full_backward_hook"], [397, 1, 1, "", "register_full_backward_pre_hook"], [397, 1, 1, "", "register_load_state_dict_post_hook"], [397, 1, 1, "", "register_load_state_dict_pre_hook"], [397, 1, 1, "", "register_module"], [397, 1, 1, "", "register_parameter"], [397, 1, 1, "", "register_state_dict_post_hook"], [397, 1, 1, "", "register_state_dict_pre_hook"], [397, 1, 1, "", "requires_grad_"], [397, 1, 1, "", "reset_out_keys"], [397, 1, 1, "", "reset_parameters_recursive"], [397, 1, 1, "", "select_out_keys"], [397, 1, 1, "", "set_extra_state"], [397, 1, 1, "", "set_keys"], [397, 1, 1, "", "set_submodule"], [397, 1, 1, "", "share_memory"], [397, 1, 1, "", "state_dict"], [397, 1, 1, "", "to"], [397, 1, 1, "", "to_empty"], [397, 1, 1, "", "train"], [397, 1, 1, "", "type"], [397, 2, 1, "", "value_estimator"], [397, 2, 1, "", "vmap_randomness"], [397, 1, 1, "", "xpu"], [397, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[398, 2, 1, "", "device"], [398, 1, 1, "", "dumps"], [398, 1, 1, "", "fields"], [398, 1, 1, "", "from_tensordict"], [398, 1, 1, "", "get"], [398, 1, 1, "", "load"], [398, 1, 1, "", "load_"], [398, 1, 1, "", "load_memmap"], [398, 1, 1, "", "load_state_dict"], [398, 1, 1, "", "memmap"], [398, 1, 1, "", "memmap_"], [398, 1, 1, "", "memmap_like"], [398, 1, 1, "", "memmap_refresh_"], [398, 1, 1, "", "save"], [398, 1, 1, "", "set"], [398, 1, 1, "", "state_dict"], [398, 1, 1, "", "to_tensordict"], [398, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[399, 1, 1, "", "add_module"], [399, 1, 1, "", "apply"], [399, 1, 1, "", "bfloat16"], [399, 1, 1, "", "buffers"], [399, 1, 1, "", "children"], [399, 1, 1, "", "close"], [399, 1, 1, "", "compile"], [399, 2, 1, "", "container"], [399, 1, 1, "", "cpu"], [399, 1, 1, "", "cuda"], [399, 1, 1, "", "double"], [399, 1, 1, "", "eval"], [399, 1, 1, "", "extra_repr"], [399, 1, 1, "", "float"], [399, 1, 1, "", "forward"], [399, 1, 1, "", "get_buffer"], [399, 1, 1, "", "get_extra_state"], [399, 1, 1, "", "get_parameter"], [399, 1, 1, "", "get_submodule"], [399, 1, 1, "", "half"], [399, 1, 1, "", "init"], [399, 1, 1, "", "inv"], [399, 1, 1, "", "ipu"], [399, 1, 1, "", "load_state_dict"], [399, 1, 1, "", "modules"], [399, 1, 1, "", "mtia"], [399, 1, 1, "", "named_buffers"], [399, 1, 1, "", "named_children"], [399, 1, 1, "", "named_modules"], [399, 1, 1, "", "named_parameters"], [399, 1, 1, "", "parameters"], [399, 2, 1, "", "parent"], [399, 1, 1, "", "register_backward_hook"], [399, 1, 1, "", "register_buffer"], [399, 1, 1, "", "register_forward_hook"], [399, 1, 1, "", "register_forward_pre_hook"], [399, 1, 1, "", "register_full_backward_hook"], [399, 1, 1, "", "register_full_backward_pre_hook"], [399, 1, 1, "", "register_load_state_dict_post_hook"], [399, 1, 1, "", "register_load_state_dict_pre_hook"], [399, 1, 1, "", "register_module"], [399, 1, 1, "", "register_parameter"], [399, 1, 1, "", "register_state_dict_post_hook"], [399, 1, 1, "", "register_state_dict_pre_hook"], [399, 1, 1, "", "requires_grad_"], [399, 1, 1, "", "set_extra_state"], [399, 1, 1, "", "set_submodule"], [399, 1, 1, "", "share_memory"], [399, 1, 1, "", "state_dict"], [399, 1, 1, "", "to"], [399, 1, 1, "", "to_empty"], [399, 1, 1, "", "train"], [399, 1, 1, "", "transform_action_spec"], [399, 1, 1, "", "transform_done_spec"], [399, 1, 1, "", "transform_env_batch_size"], [399, 1, 1, "", "transform_env_device"], [399, 1, 1, "", "transform_input_spec"], [399, 1, 1, "", "transform_observation_spec"], [399, 1, 1, "", "transform_output_spec"], [399, 1, 1, "", "transform_reward_spec"], [399, 1, 1, "", "transform_state_spec"], [399, 1, 1, "", "type"], [399, 1, 1, "", "xpu"], [399, 1, 1, "", "zero_grad"]], "torchrl.objectives.multiagent": [[400, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[400, 4, 1, "", "default_keys"], [400, 1, 1, "", "forward"], [400, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[402, 0, 1, "", "GAE"], [403, 0, 1, "", "TD0Estimator"], [404, 0, 1, "", "TD1Estimator"], [405, 0, 1, "", "TDLambdaEstimator"], [406, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[402, 1, 1, "", "forward"], [402, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[403, 1, 1, "", "forward"], [403, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[404, 1, 1, "", "forward"], [404, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[405, 1, 1, "", "forward"], [405, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[406, 4, 1, "", "default_keys"], [406, 1, 1, "", "forward"], [406, 1, 1, "", "set_keys"], [406, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[407, 0, 1, "", "generalized_advantage_estimate"], [408, 0, 1, "", "reward2go"], [409, 0, 1, "", "td0_advantage_estimate"], [410, 0, 1, "", "td0_return_estimate"], [411, 0, 1, "", "td1_advantage_estimate"], [412, 0, 1, "", "td1_return_estimate"], [413, 0, 1, "", "td_lambda_advantage_estimate"], [414, 0, 1, "", "td_lambda_return_estimate"], [415, 0, 1, "", "vec_generalized_advantage_estimate"], [416, 0, 1, "", "vec_td1_advantage_estimate"], [417, 0, 1, "", "vec_td1_return_estimate"], [418, 0, 1, "", "vec_td_lambda_advantage_estimate"], [419, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[420, 3, 1, "", "PixelRenderTransform"], [421, 3, 1, "", "TensorDictRecorder"], [422, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[423, 3, 1, "", "Logger"], [425, 3, 1, "", "generate_exp_name"], [426, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[424, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[427, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[428, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[429, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[431, 0, 1, "", "BatchSubSampler"], [432, 0, 1, "", "ClearCudaCache"], [433, 0, 1, "", "CountFramesLog"], [434, 0, 1, "", "LogScalar"], [435, 0, 1, "", "LogValidationReward"], [436, 0, 1, "", "OptimizerHook"], [437, 0, 1, "", "ReplayBufferTrainer"], [438, 0, 1, "", "RewardNormalizer"], [439, 0, 1, "", "SelectKeys"], [440, 0, 1, "", "Trainer"], [441, 0, 1, "", "TrainerHookBase"], [442, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[431, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[432, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[433, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[434, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[435, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[436, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[437, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[438, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[439, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[440, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[441, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[442, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[443, 3, 1, "", "correct_for_frame_skip"], [444, 3, 1, "", "get_stats_random_rollout"], [445, 3, 1, "", "make_collector_offpolicy"], [446, 3, 1, "", "make_collector_onpolicy"], [447, 3, 1, "", "make_dqn_loss"], [448, 3, 1, "", "make_replay_buffer"], [449, 3, 1, "", "make_target_updater"], [450, 3, 1, "", "make_trainer"], [451, 3, 1, "", "parallel_env_constructor"], [452, 3, 1, "", "sync_async_collector"], [453, 3, 1, "", "sync_sync_collector"], [454, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 459, 460, 461, 462, 464, 465, 466, 468, 470, 476, 478, 479, 480, 484, 485], "instal": [0, 6, 7, 476, 484], "get": [0, 469, 470, 471, 472, 473, 474], "start": [0, 469, 470, 471, 472, 473, 474, 476], "tutori": [0, 466, 478, 479], "basic": [0, 476, 482], "intermedi": [0, 8], "advanc": 0, "refer": [0, 456], "knowledg": [0, 457], "base": [0, 2, 7, 457, 468], "indic": 0, "tabl": 0, "collector": [1, 458, 464, 465, 466, 467, 472, 474, 478, 479, 484], "packag": [1, 2, 3, 459, 460, 461, 462], "batch": [1, 3, 464, 480, 482], "size": [1, 3, 464, 482], "polici": [1, 2, 4, 460, 464, 466, 467, 468, 470, 474, 477, 478, 479, 480], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 459], "environ": [1, 3, 4, 6, 7, 458, 464, 465, 466, 467, 469, 474, 476, 477, 478, 479, 480, 484, 485], "send": 1, "receiv": 1, "model": [1, 2, 4, 459, 464, 465, 467, 468, 471, 481, 484], "weightupdat": 1, "extend": 1, "updat": [1, 464], "class": [1, 3, 458, 480, 484], "replai": [1, 2, 3, 464, 465, 466, 467, 472, 474, 478, 479, 482, 484], "buffer": [1, 2, 3, 464, 465, 466, 467, 472, 474, 478, 479, 482, 484], "interoper": 1, "run": [1, 468, 469, 485], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 458, 464, 465, 466, 472, 474, 478, 479, 484], "helper": [1, 3, 476], "function": [1, 4, 460, 465, 466, 471, 478, 479, 484], "compos": [2, 219], "support": 2, "type": 2, "choos": 2, "storag": [2, 117, 464, 472, 482], "sampl": [2, 482], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 465, 482], "trajectori": [2, 482], "checkpoint": [2, 461], "episod": [2, 4], "format": 2, "ted": [2, 469], "The": [2, 464], "rational": 2, "behind": 2, "structur": [2, 458, 482], "A": [2, 465, 482], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 459, 482, 484], "special": [2, 470, 484], "case": 2, "footnot": 2, "multi": [2, 3, 459, 460, 477, 478, 479], "agent": [2, 3, 4, 459, 460, 478, 479], "present": 2, "rnn": 2, "transform": [2, 3, 264, 458, 464, 466, 469, 478, 479, 480, 482, 484, 485], "step": [2, 3, 464, 466, 469, 472, 476, 478, 479, 482, 485], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 82], "numer": 2, "subclass": [2, 3], "categor": [2, 38], "tree": [2, 84], "forest": 2, "tensordictmap": [2, 77], "mctsforest": [2, 50], "larg": 2, "languag": 2, "reinforc": [2, 460, 466, 478, 479], "learn": [2, 4, 459, 466, 478, 479], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 458, 459, 460, 461, 478], "env": [3, 480, 484, 485], "spec": [3, 480, 485], "lock": 3, "method": [3, 464], "partial": 3, "reset": [3, 480, 485], "vector": [3, 484], "async": [3, 484], "exampl": [3, 11, 465, 482], "custom": [3, 11, 480, 482], "nativ": 3, "auto": 3, "dynam": [3, 4, 482], "forward": [3, 4, 464], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 482], "expos": 3, "outsid": 3, "world": 3, "design": [3, 474], "your": [3, 4, 6, 464, 468, 474, 480], "own": [3, 474], "tip": 3, "us": [3, 4, 6, 9, 460, 467, 481, 482, 484], "clone": [3, 7], "mask": 3, "action": [3, 4, 460, 467, 480], "record": [3, 461, 464, 473], "video": [3, 11, 473], "domain": [3, 459], "specif": [3, 459, 477], "librari": [3, 484], "thing": [4, 464, 480], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 469, 471, 484], "gener": [4, 11, 459], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 459], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 464, 465, 471, 474], "return": [4, 460], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 484], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 477], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 464, 465, 466], "standard": 4, "explor": [4, 459, 464, 465, 470], "valu": [4, 459, 460, 464, 466, 467, 470], "loss": [4, 464, 465, 466, 467, 474, 478, 479], "earli": 4, "train": [4, 8, 460, 464, 466, 467, 468, 471, 474, 478, 479, 480], "roughli": 4, "uniformli": 4, "random": [4, 460, 478, 479], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 465], "increas": 4, "an": [4, 466, 467, 469, 480], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 464], "space": 4, "effect": [4, 480], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 468], "gym": [5, 484, 485], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 464], "render": [7, 11, 474, 478, 479, 485], "all": 7, "new": 7, "bindindg": 7, "2": [7, 476], "1": [7, 476], "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 464], "pytorch": [8, 9, 10, 468], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 480], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multiprocessedweightupdat": 14, "multisyncdatacollector": 15, "multiasyncdatacollector": 16, "rayweightupdat": 17, "syncdatacollector": 18, "vanillaweightupdat": 19, "weightupdaterbas": 20, "asyncdatacollector": 21, "distributeddatacollector": 22, "distributedsyncdatacollector": 23, "distributedweightupdat": 24, "rpcdatacollector": 25, "rpcweightupdat": 26, "raycollector": 27, "submitit_delayed_launch": 28, "llmcollector": 29, "vllmupdat": 30, "split_trajectori": 31, "adaptiveklcontrol": 32, "binari": [33, 468], "binarydiscretetensorspec": 34, "binarytodecim": 35, "bound": 36, "boundedtensorspec": 37, "composit": 39, "compositespec": 40, "constantklcontrol": 41, "densifyreward": 42, "discretetensorspec": 43, "flat2t": 44, "h5combin": 45, "h5split": 46, "hashtoint": 47, "lazystackedcompositespec": 48, "lazystackedtensorspec": 49, "multicategor": 51, "multidiscretetensorspec": 52, "multionehot": 53, "multionehotdiscretetensorspec": 54, "multistep": 55, "nested2t": 56, "nontensor": 57, "nontensorspec": 58, "onehot": 59, "onehotdiscretetensorspec": 60, "pairwisedataset": 61, "prioritizedreplaybuff": 62, "promptdata": 63, "prompttensordicttoken": 64, "querymodul": 65, "randomprojectionhash": 66, "rayreplaybuff": 67, "remotetensordictreplaybuff": 68, "replaybuff": 69, "rewarddata": 70, "rolloutfrommodel": 71, "siphash": 72, "stack": [73, 255], "stackedcomposit": 74, "ted2flat": 75, "ted2nest": 76, "tensordictprioritizedreplaybuff": 78, "tensordictreplaybuff": 79, "tensordicttoken": 80, "tensormap": 81, "tokenizeddatasetload": 83, "unbound": 85, "unboundedcontinu": 86, "unboundedcontinuoustensorspec": 87, "unboundeddiscret": 88, "unboundeddiscretetensorspec": 89, "check_no_exclusive_kei": 90, "consolidate_spec": 91, "contains_lazy_spec": 92, "create_infinite_iter": 93, "get_dataload": 94, "contentbas": 95, "histori": 96, "llmdata": 97, "flatstoragecheckpoint": 98, "h5storagecheckpoint": 99, "immutabledatasetwrit": 100, "lazymemmapstorag": 101, "lazystackstorag": 102, "lazytensorstorag": 103, "liststorag": 104, "liststoragecheckpoint": 105, "nestedstoragecheckpoint": 106, "prioritizedsampl": 107, "prioritizedslicesampl": 108, "randomsampl": 109, "replaybufferensembl": 110, "roundrobinwrit": 111, "sampler": 112, "samplerensembl": 113, "samplerwithoutreplac": 114, "slicesampl": 115, "slicesamplerwithoutreplac": 116, "storagecheckpointerbas": 118, "storageensembl": 119, "storageensemblecheckpoint": 120, "tensordictmaxvaluewrit": 121, "tensordictroundrobinwrit": 122, "tensorstorag": 123, "tensorstoragecheckpoint": 124, "writer": 125, "writerensembl": 126, "asyncenvpool": 127, "braxenv": 128, "braxwrapp": 129, "chessenv": 130, "dmcontrolenv": 131, "dmcontrolwrapp": 132, "envbas": [133, 480], "envcreat": 134, "envmetadata": 135, "gymenv": 136, "gymlikeenv": 137, "gymwrapp": 138, "habitatenv": 139, "isaacgymenv": 140, "isaacgymwrapp": 141, "isaaclabwrapp": 142, "jumanjienv": 143, "jumanjiwrapp": 144, "llmhashingenv": [145, 187], "mogymenv": 146, "mogymwrapp": 147, "marlgroupmaptyp": 148, "meltingpotenv": 149, "meltingpotwrapp": 150, "modelbasedenvbas": 151, "multithreadedenv": 152, "multithreadedenvwrapp": 153, "openmlenv": 154, "openspielenv": 155, "openspielwrapp": 156, "parallelenv": 157, "pendulumenv": 158, "pettingzooenv": 159, "pettingzoowrapp": 160, "processorasyncenvpool": 161, "randompolici": 162, "robohiveenv": 163, "smacv2env": 164, "smacv2wrapp": 165, "serialenv": 166, "threadingasyncenvpool": 167, "tictactoeenv": 168, "unitymlagentsenv": 169, "unitymlagentswrapp": 170, "vmasenv": 171, "vmaswrapp": 172, "check_env_spec": 173, "check_marl_group": 174, "exploration_typ": 175, "get_available_librari": 176, "gym_backend": 177, "chatenv": 178, "datasetchatenv": 179, "gsm8kenv": 180, "gsm8kpreparequest": 181, "gsm8krewardpars": 182, "ifevalenv": 183, "ifevalscoredata": 184, "ifevalscor": 185, "llmenv": 186, "mlgymwrapp": 188, "make_gsm8k_env": 189, "make_mlgym": 190, "browsertransform": 191, "dataloadingprim": 192, "klrewardtransform": [193, 235], "mcptooltransform": 194, "pythoninterpret": 195, "templatetransform": 196, "token": [197, 262], "as_nested_tensor": 198, "as_padded_tensor": 199, "make_composite_from_td": 200, "dreamerdecod": 201, "dreamerenv": 202, "register_gym_spec_convers": 203, "set_exploration_typ": 204, "set_gym_backend": 205, "step_mdp": 206, "terminated_or_trunc": 207, "actiondiscret": 208, "actionmask": 209, "autoresetenv": 210, "autoresettransform": 211, "batchsizetransform": 212, "binarizereward": 213, "burnintransform": 214, "catfram": [215, 482], "cattensor": 216, "centercrop": 217, "cliptransform": 218, "conditionalpolicyswitch": 220, "conditionalskip": 221, "crop": 222, "dtypecasttransform": 223, "devicecasttransform": 224, "discreteactionproject": 225, "doubletofloat": 226, "endoflifetransform": 227, "excludetransform": 228, "finitetensordictcheck": 229, "flattenobserv": 230, "frameskiptransform": 231, "grayscal": 232, "hash": 233, "inittrack": 234, "linearisereward": 236, "multiact": 237, "noopresetenv": 238, "observationnorm": 239, "observationtransform": 240, "permutetransform": 241, "pinmemorytransform": 242, "r3mtransform": 243, "randomcroptensordict": 244, "removeemptyspec": 245, "renametransform": 246, "resiz": 247, "reward2gotransform": 248, "rewardclip": 249, "rewardsc": 250, "rewardsum": 251, "selecttransform": 252, "signtransform": 253, "squeezetransform": 254, "stepcount": 256, "targetreturn": 257, "tensordictprim": 258, "timemaxpool": 259, "timer": 260, "totensorimag": 261, "trajcount": 263, "transformedenv": 265, "unarytransform": 266, "unsqueezetransform": 267, "vc1transform": 268, "viprewardtransform": 269, "viptransform": 270, "vecgymenvtransform": 271, "vecnorm": [272, 485], "vecnormv2": 273, "gsdenois": 274, "multisteptransform": 275, "implement_for": 276, "additivegaussianmodul": 277, "batchrenorm1d": 278, "cemplann": 279, "consistentdropout": 280, "consistentdropoutmodul": 281, "conv3dnet": 282, "convnet": 283, "dtactor": 284, "ddpgcnnactor": 285, "ddpgcnnqnet": 286, "ddpgmlpactor": 287, "ddpgmlpqnet": 288, "decisiontransform": 289, "delta": 290, "distributionaldqnnet": 291, "distributionalqvaluehook": 292, "dreameractor": 293, "duelingcnndqnet": 294, "egreedymodul": 295, "gru": 296, "grucel": 297, "grumodul": 298, "independentnorm": 299, "lstm": [300, 467], "lstmcell": 301, "lstmmodul": 302, "mlp": [303, 467], "mpcplannerbas": 304, "mppiplann": 305, "maskedcategor": 306, "maskedonehotcategor": 307, "multiagentconvnet": 308, "multiagentmlp": 309, "multiagentnetbas": 310, "noisylazylinear": 311, "noisylinear": 312, "obsdecod": 313, "obsencod": 314, "onehotcategor": 315, "onehotordin": 316, "onlinedtactor": 317, "ordin": 318, "ornsteinuhlenbeckprocessmodul": 319, "qmixer": [320, 460], "qvaluehook": 321, "rssmposterior": 322, "rssmprior": 323, "squeeze2dlay": 324, "squeezelay": 325, "tanhdelta": 326, "tanhnorm": 327, "truncatednorm": 328, "vdnmixer": 329, "vmapmodul": 330, "categoricalsequenti": 331, "llmondevic": 332, "transformerswrapp": 333, "make_vllm_work": 334, "stateless_init_process_group": 335, "vllmworker": 336, "vllmwrapper": 337, "recurrent_mod": 338, "reset_nois": 339, "set_recurrent_mod": 340, "actor": [341, 459, 464, 470], "actorcriticoper": 342, "actorcriticwrapp": 343, "actorvalueoper": 344, "decisiontransformerinferencewrapp": 345, "distributionalqvalueactor": 346, "distributionalqvaluemodul": 347, "lmheadactorvalueoper": 348, "multistepactorwrapp": 349, "probabilisticactor": 350, "qvalueactor": [351, 459], "qvaluemodul": 352, "safemodul": [353, 459], "safeprobabilisticmodul": 354, "safeprobabilistictensordictsequenti": 355, "safesequenti": 356, "tanhmodul": 357, "valueoper": 358, "worldmodelwrapp": 359, "biased_softplu": 360, "get_primers_from_modul": 361, "inv_softplu": 362, "map": [363, 478], "a2closs": 364, "cqlloss": 365, "clipppoloss": 366, "crossqloss": 367, "ddpgloss": 368, "dqnloss": 369, "dtloss": 370, "discretecqlloss": 371, "discreteiqlloss": 372, "discretesacloss": 373, "distributionaldqnloss": 374, "dreameractorloss": 375, "dreamermodelloss": 376, "dreamervalueloss": 377, "gailloss": 378, "hardupd": 379, "iqlloss": 380, "klpenppoloss": 381, "lossmodul": [382, 464, 471], "onlinedtloss": 383, "ppoloss": 384, "redqloss": 385, "reinforceloss": 386, "sacloss": 387, "softupd": 388, "td3bcloss": 389, "td3loss": 390, "valueestim": 391, "default_value_kwarg": 392, "distance_loss": 393, "group_optim": 394, "hold_out_net": 395, "hold_out_param": 396, "grpoloss": 397, "grpolossoutput": 398, "mcadvantag": 399, "qmixerloss": 400, "next_state_valu": 401, "gae": 402, "td0estim": 403, "td1estim": 404, "tdlambdaestim": 405, "valueestimatorbas": 406, "generalized_advantage_estim": 407, "reward2go": 408, "td0_advantage_estim": 409, "td0_return_estim": 410, "td1_advantage_estim": 411, "td1_return_estim": 412, "td_lambda_advantage_estim": 413, "td_lambda_return_estim": 414, "vec_generalized_advantage_estim": 415, "vec_td1_advantage_estim": 416, "vec_td1_return_estim": 417, "vec_td_lambda_advantage_estim": 418, "vec_td_lambda_return_estim": 419, "pixelrendertransform": 420, "tensordictrecord": 421, "videorecord": 422, "logger": [423, 461, 473, 474], "csvlogger": 424, "generate_exp_nam": 425, "get_logg": 426, "mlflowlogg": 427, "tensorboardlogg": 428, "wandblogg": 429, "set_auto_unwrap_transformed_env": 430, "batchsubsampl": 431, "clearcudacach": 432, "countframeslog": 433, "logscalar": 434, "logvalidationreward": 435, "optimizerhook": 436, "replaybuffertrain": 437, "rewardnorm": 438, "selectkei": 439, "trainer": [440, 461, 465], "trainerhookbas": 441, "updateweight": 442, "correct_for_frame_skip": 443, "get_stats_random_rollout": 444, "make_collector_offpolici": 445, "make_collector_onpolici": 446, "make_dqn_loss": 447, "make_replay_buff": 448, "make_target_updat": 449, "make_train": 450, "parallel_env_constructor": 451, "sync_async_collector": 452, "sync_sync_collector": 453, "transformed_env_constructor": 454, "readm": [455, 475], "tuto": [455, 475], "api": 456, "contribut": [457, 484], "content": 457, "llm": [458, 476], "interfac": 458, "avail": 458, "modul": [458, 459, 464, 467, 468, 470, 474, 484], "wrapper": [458, 459, 470], "object": [458, 460, 464, 471, 484], "grpo": 458, "tensordictmodul": [459, 468, 470, 484], "probabilist": [459, 470], "q": [459, 465, 467, 470], "oper": 459, "join": 459, "hook": [459, 461, 465], "regular": 459, "planner": 459, "torch": 460, "vmap": [460, 484], "dqn": [460, 465, 467], "ddpg": [460, 464, 478], "sac": 460, "redq": 460, "crossq": 460, "iql": 460, "cql": 460, "gail": 460, "dt": 460, "td3": 460, "bc": 460, "ppo": [460, 466, 479], "head": 460, "a2c": 460, "dreamer": 460, "builder": 461, "_util": 462, "comput": [463, 465, 480, 483], "time": [463, 464, 483], "code": [464, 480], "overview": [464, 467], "setup": [464, 467, 476], "__init__": 464, "estim": 464, "put": 464, "togeth": [464, 480], "call": 464, "parallel": [464, 477, 485], "execut": [464, 476, 477, 480], "stat": 464, "build": [464, 465, 474, 476, 482], "evalu": 464, "construct": 464, "target": [464, 465, 471], "network": [464, 465, 466, 467, 470, 478, 479], "experi": [464, 480], "result": [464, 466, 476, 478, 479], "conclus": [464, 465, 466, 467, 468, 476, 478, 479, 480, 482], "next": [464, 466, 469, 472, 478, 479, 482], "deep": 465, "collect": [465, 466, 472], "paramet": [465, 466, 471], "hyperparamet": [465, 466, 478, 479], "regist": 465, "possibl": 465, "improv": 465, "defin": [466, 478, 479], "loop": [466, 467, 468, 474, 478, 479, 480], "recurr": [467, 468], "convolut": 467, "select": 467, "further": [467, 471], "read": 467, "export": 468, "introduct": [468, 484], "fast": 468, "recap": 468, "simpl": [468, 480], "stochast": 468, "aotinductor": 468, "free": 468, "c": 468, "onnx": 468, "rollout": [468, 469, 477, 478, 479, 480, 485], "creat": 469, "s": [470, 471], "output": 471, "consider": 471, "log": 473, "first": 474, "tool": 476, "enabl": 476, "configur": 476, "3": 476, "interact": 476, "4": 476, "perform": 476, "search": 476, "5": 476, "extract": 476, "divers": 477, "competit": 478, "group": 478, "critic": [478, 479], "pendulum": 480, "write": 480, "_step": 480, "simul": 480, "_reset": 480, "metadata": 480, "_spec": 480, "shape": 480, "seed": [480, 485], "wrap": 480, "test": 480, "our": 480, "pretrain": 481, "vanilla": 482, "integr": 482, "tensorclass": 482, "other": 482, "pytre": 482, "iter": 482, "over": 482, "fix": 482, "priorit": 482, "save": 482, "raw": 482, "imag": 482, "more": 482, "complex": 482, "config": 484, "sequenc": 484, "program": 484, "ensembl": 484, "meta": 484, "sync": 484, "multiprocess": 484, "frame_skip": 485, "deepmind": 485, "control": 485, "devic": 485, "close": 485, "access": 485, "attribut": 485, "kwarg": 485}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})