Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 82, 86, 87, 88, 89, 90, 94, 96, 97, 99, 101, 102, 103, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 130, 136, 137, 139, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 169, 170, 172, 173, 175, 176, 178, 183, 184, 186, 187, 190, 194, 199, 200, 204, 205, 206, 207, 209, 218, 219, 220, 221, 222, 224, 225, 226, 229, 232, 233, 235, 238, 242, 243, 245, 246, 247, 248, 250, 255, 256, 258, 260, 262, 263, 264, 268, 269, 271, 279, 284, 285, 287, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 312, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 353, 354, 355, 356, 370, 372, 375, 379, 385, 386, 390, 391, 394, 401, 402, 403, 404, 407, 408, 409, 413, 414, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 432, 433], "open": [0, 5, 7, 52, 54, 59, 73, 87, 236, 414, 426, 427, 432], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "reinforc": [0, 3, 9, 134, 135, 176, 240, 245, 246, 247, 248, 252, 279, 300, 317, 318, 320, 323, 324, 325, 327, 332, 333, 339, 340, 341, 342, 406, 412, 414, 418, 419, 424, 428, 431, 432], "learn": [0, 3, 7, 8, 9, 18, 46, 118, 134, 135, 139, 142, 150, 176, 240, 245, 246, 247, 248, 252, 265, 272, 278, 279, 300, 317, 318, 320, 323, 324, 325, 327, 331, 332, 333, 338, 339, 340, 341, 342, 406, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 433], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 136, 176, 218, 272, 294, 303, 311, 317, 319, 334, 335, 337, 339, 381, 405, 407, 408, 409, 410, 413, 414, 415, 421, 424, 426, 427, 429, 430, 433], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 55, 69, 115, 116, 117, 126, 137, 159, 406, 407, 408, 409, 411, 413, 414, 415, 417, 418, 419, 421, 426, 427, 428, 433], "pytorch": [0, 1, 2, 3, 23, 115, 118, 122, 129, 130, 142, 143, 150, 151, 154, 155, 156, 176, 221, 222, 240, 256, 260, 271, 272, 390, 405, 407, 408, 410, 413, 415, 416, 420, 424, 426, 427, 428, 432, 433], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 46, 56, 57, 61, 66, 69, 115, 118, 122, 126, 129, 130, 133, 134, 135, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 166, 176, 197, 225, 233, 235, 240, 260, 278, 307, 379, 380, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 164, 166, 168, 169, 170, 172, 173, 175, 176, 179, 180, 181, 183, 186, 187, 188, 191, 194, 198, 199, 200, 204, 205, 209, 212, 216, 217, 218, 219, 223, 224, 225, 226, 227, 229, 231, 233, 235, 236, 239, 241, 242, 243, 245, 255, 256, 258, 259, 260, 262, 264, 265, 268, 269, 270, 272, 279, 288, 290, 294, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 370, 372, 379, 380, 385, 402, 403, 404, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "directli": [0, 4, 8, 14, 15, 16, 23, 96, 113, 114, 115, 118, 121, 122, 129, 130, 136, 142, 143, 150, 151, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 194, 195, 196, 200, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 230, 232, 233, 235, 307, 335, 342, 404, 414, 415, 417, 418, 426, 427, 428, 430], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 93, 94, 96, 99, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 200, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 275, 277, 278, 279, 280, 281, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 345, 350, 351, 352, 353, 354, 355, 358, 370, 371, 372, 381, 387, 390, 393, 394, 398, 400, 401, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433], "pypi": [0, 2, 432], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 88, 94, 96, 101, 102, 115, 118, 122, 125, 128, 129, 130, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 176, 180, 181, 198, 204, 219, 222, 224, 225, 226, 229, 231, 233, 234, 235, 240, 241, 242, 243, 256, 258, 259, 260, 262, 263, 269, 270, 271, 278, 280, 288, 289, 293, 295, 297, 303, 306, 307, 320, 331, 335, 342, 372, 379, 387, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 430, 432, 433], "more": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 94, 96, 107, 115, 118, 121, 122, 123, 125, 126, 128, 129, 130, 134, 135, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 176, 222, 225, 229, 234, 235, 236, 237, 238, 241, 252, 260, 263, 271, 294, 299, 300, 306, 307, 311, 317, 327, 335, 337, 352, 357, 365, 379, 386, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 432, 433], "about": [0, 3, 5, 7, 9, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 69, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 408, 409, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 432, 433], "instruct": [0, 6, 7, 10, 22, 186, 188, 409, 413, 414, 415, 416, 426, 427, 430], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 41, 58, 67, 68, 96, 142, 150, 295, 296, 297, 408, 413, 418, 420, 421, 423, 425, 427], "section": [0, 2, 3, 4, 24, 118, 256, 260, 414, 417, 418, 423, 426, 427], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 58, 61, 66, 74, 83, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 181, 198, 204, 219, 224, 225, 226, 229, 231, 235, 242, 243, 256, 259, 260, 263, 269, 288, 303, 306, 387, 413, 414, 415, 416, 417, 418, 426, 428], "pip": [0, 10, 417, 418, 419, 420, 421, 422, 423, 427, 432, 433], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 38, 39, 41, 42, 44, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 72, 73, 80, 83, 87, 88, 90, 94, 95, 96, 99, 101, 102, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 167, 168, 169, 173, 175, 176, 177, 178, 179, 182, 183, 187, 191, 194, 199, 200, 202, 204, 205, 208, 209, 212, 213, 218, 219, 220, 223, 224, 226, 228, 229, 231, 232, 233, 235, 236, 242, 243, 249, 250, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 290, 294, 298, 300, 302, 303, 304, 305, 307, 310, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 381, 387, 394, 400, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 61, 66, 73, 138, 152, 153, 166, 256, 257, 258, 260, 261, 262, 266, 267, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 87, 89, 94, 101, 102, 107, 109, 115, 118, 121, 122, 123, 128, 129, 130, 142, 143, 150, 151, 172, 173, 176, 177, 181, 191, 198, 200, 204, 205, 221, 222, 226, 229, 236, 243, 250, 256, 258, 260, 262, 263, 267, 269, 271, 274, 294, 298, 299, 300, 303, 304, 306, 307, 319, 329, 334, 335, 337, 371, 372, 389, 408, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "low": [0, 3, 28, 31, 57, 66, 71, 74, 94, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 169, 179, 186, 194, 197, 219, 227, 286, 287, 288, 298, 300, 303, 307, 310, 413, 414, 415, 417, 426, 427, 428, 432], "high": [0, 3, 9, 28, 31, 52, 54, 59, 67, 73, 74, 94, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 169, 179, 186, 194, 197, 199, 219, 227, 286, 287, 288, 298, 300, 303, 307, 310, 352, 357, 365, 413, 414, 415, 426, 427, 428, 430, 432], "level": [0, 2, 3, 4, 22, 31, 32, 39, 53, 58, 63, 67, 68, 96, 121, 123, 176, 217, 225, 258, 262, 334, 413, 414, 417, 421, 432], "abstract": [0, 3, 8, 70, 71, 111, 118, 201, 264, 356, 382, 391, 410, 415, 417, 428, 432], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 90, 92, 96, 99, 100, 101, 102, 103, 105, 107, 109, 115, 118, 119, 121, 122, 123, 128, 129, 130, 133, 134, 135, 136, 139, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 161, 167, 168, 169, 171, 172, 173, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 194, 196, 197, 198, 199, 202, 204, 209, 212, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 239, 240, 248, 250, 255, 256, 257, 258, 260, 261, 262, 264, 266, 267, 268, 269, 270, 272, 275, 280, 283, 293, 298, 299, 302, 303, 304, 306, 307, 308, 309, 310, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 347, 350, 351, 352, 353, 354, 355, 356, 370, 379, 380, 387, 390, 400, 404, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 175, 186, 290, 335, 408, 432], "effici": [0, 1, 2, 4, 8, 115, 118, 122, 129, 130, 142, 143, 150, 151, 256, 272, 320, 408, 413, 414, 415, 416, 417, 420, 421, 423, 425, 426, 427, 429, 430, 432], "modular": [0, 309, 417, 430, 432], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 140, 141, 142, 143, 150, 151, 152, 153, 226, 235, 405, 414, 416, 417, 418, 421, 424, 432], "properli": [0, 1, 3, 74, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 181, 258, 262, 415, 422, 426, 427, 428, 432], "test": [0, 3, 5, 113, 114, 115, 118, 122, 127, 128, 129, 130, 134, 135, 142, 143, 150, 151, 156, 184, 224, 229, 258, 262, 385, 400, 415, 416, 417, 429, 432], "The": [0, 1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 93, 94, 96, 99, 101, 102, 103, 107, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 164, 167, 168, 169, 172, 173, 175, 176, 180, 181, 183, 184, 187, 188, 189, 194, 197, 198, 200, 202, 204, 209, 211, 212, 213, 216, 217, 218, 219, 221, 224, 225, 226, 229, 231, 232, 233, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 252, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 272, 276, 278, 279, 281, 282, 283, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 358, 370, 372, 374, 377, 378, 379, 380, 381, 386, 400, 402, 403, 406, 408, 409, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433], "code": [0, 3, 5, 7, 8, 14, 15, 57, 61, 115, 118, 122, 128, 129, 130, 142, 143, 150, 151, 204, 226, 229, 238, 256, 257, 258, 260, 261, 262, 303, 307, 309, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433], "aim": [0, 2, 3, 7, 41, 62, 63, 204, 229, 231, 263, 393, 407, 408, 409, 413, 414, 432], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 56, 59, 66, 73, 83, 87, 89, 103, 105, 109, 110, 112, 113, 114, 115, 121, 123, 127, 137, 139, 142, 144, 147, 159, 173, 176, 188, 194, 200, 219, 220, 223, 227, 252, 276, 278, 287, 290, 299, 300, 303, 306, 309, 327, 335, 352, 353, 354, 355, 377, 406, 408, 410, 415, 416, 418, 419, 427, 428, 430, 432], "research": [0, 7, 9, 134, 135, 238, 432], "most": [0, 1, 2, 3, 7, 8, 14, 15, 46, 48, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 186, 232, 413, 415, 417, 418, 419, 420, 421, 422, 423, 428, 432, 433], "written": [0, 1, 2, 3, 35, 52, 53, 54, 56, 58, 59, 64, 67, 68, 72, 73, 85, 87, 94, 96, 101, 102, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 142, 143, 147, 150, 151, 167, 168, 169, 176, 188, 191, 196, 197, 212, 217, 220, 221, 226, 232, 235, 236, 241, 279, 294, 303, 306, 307, 311, 317, 319, 334, 337, 339, 351, 370, 371, 372, 408, 409, 410, 413, 416, 417, 419, 425, 428, 432], "highli": [0, 2, 418, 432, 433], "wai": [0, 1, 2, 3, 4, 96, 107, 126, 176, 204, 207, 224, 225, 231, 232, 258, 260, 262, 337, 352, 353, 354, 355, 408, 413, 414, 415, 417, 418, 420, 421, 425, 426, 427, 428, 429, 430, 432, 433], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 409, 413, 414, 415, 418, 419, 420, 423, 426, 427, 432, 433], "swap": [0, 1, 3, 121, 232, 415, 417, 429, 432], "compon": [0, 1, 2, 3, 53, 57, 58, 67, 68, 87, 88, 89, 90, 96, 103, 105, 109, 252, 281, 299, 300, 305, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 386, 390, 413, 414, 415, 416, 417, 419, 420, 423, 425, 426, 427, 428, 429, 432], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 53, 55, 58, 60, 67, 68, 69, 84, 85, 92, 96, 105, 110, 115, 118, 119, 122, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 162, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 244, 245, 249, 252, 253, 258, 262, 277, 280, 281, 287, 289, 298, 301, 302, 310, 313, 314, 316, 323, 336, 370, 372, 387, 404, 406, 412, 414, 416, 417, 419, 421, 422, 423, 424, 429, 431], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 53, 55, 56, 57, 58, 61, 63, 66, 67, 68, 96, 107, 112, 115, 118, 119, 122, 126, 129, 130, 133, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 183, 187, 194, 197, 219, 223, 226, 227, 233, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 289, 290, 298, 300, 302, 305, 310, 313, 334, 372, 413, 414, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "write": [0, 2, 3, 8, 23, 41, 46, 52, 53, 54, 55, 58, 59, 67, 68, 72, 73, 94, 96, 101, 105, 112, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 170, 172, 173, 175, 176, 177, 179, 180, 181, 185, 188, 189, 190, 192, 195, 196, 202, 203, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 232, 233, 235, 294, 306, 307, 309, 311, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 351, 356, 372, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 93, 94, 96, 100, 115, 118, 122, 129, 130, 137, 142, 143, 148, 149, 150, 151, 167, 168, 173, 212, 216, 225, 226, 233, 235, 250, 256, 258, 262, 279, 306, 307, 312, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 379, 409, 413, 415, 418, 420, 426, 427, 428, 432, 433], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 101, 102, 115, 118, 122, 129, 130, 142, 143, 144, 145, 146, 150, 151, 177, 180, 183, 185, 187, 200, 204, 209, 216, 219, 225, 226, 229, 231, 235, 240, 266, 267, 278, 290, 306, 317, 318, 320, 321, 333, 337, 338, 340, 342, 343, 358, 413, 415, 417, 426, 427, 428, 430, 432, 433], "littl": [0, 1, 3, 69, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 240, 317, 319, 334, 337, 339, 415, 416, 417, 421, 430, 432, 433], "effort": [0, 3, 428, 430, 432], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 103, 105, 107, 109, 110, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 150, 151, 152, 154, 155, 156, 164, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 200, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 370, 371, 379, 380, 381, 383, 385, 387, 390, 392, 393, 394, 400, 404, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "repo": [0, 6, 176, 220, 229, 407, 427, 432], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 101, 102, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 142, 143, 147, 150, 151, 167, 235, 240, 307, 322, 325, 333, 350, 409, 420, 432], "align": [0, 256, 260, 432], "exist": [0, 2, 3, 4, 18, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 87, 115, 118, 122, 129, 130, 142, 143, 150, 151, 177, 185, 224, 226, 235, 236, 250, 307, 320, 340, 394, 404, 426, 427, 432, 433], "ecosystem": [0, 417, 421, 432], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 87, 89, 96, 99, 101, 107, 109, 115, 118, 119, 122, 126, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 173, 176, 184, 198, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 237, 256, 258, 260, 262, 268, 270, 287, 300, 302, 307, 317, 320, 334, 335, 337, 339, 372, 409, 413, 414, 415, 416, 417, 418, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "dataset": [0, 37, 41, 52, 53, 54, 55, 58, 59, 60, 65, 67, 68, 72, 73, 83, 86, 94, 96, 99, 101, 102, 139, 184, 233, 372, 406, 413, 414, 418, 429, 430, 432, 433], "pillar": [0, 432], "environ": [0, 1, 2, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 61, 62, 63, 71, 73, 74, 75, 76, 77, 78, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 169, 170, 172, 173, 175, 176, 177, 181, 183, 184, 185, 186, 187, 192, 198, 199, 200, 204, 205, 206, 209, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 232, 233, 236, 239, 241, 258, 262, 264, 265, 302, 324, 328, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 381, 383, 385, 393, 394, 395, 396, 400, 401, 402, 403, 404, 406, 407, 408, 409, 412, 417, 419, 420, 421, 422, 424, 429, 430, 431], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 176, 183, 204, 219, 229, 231, 234, 235, 242, 243, 244, 249, 251, 258, 262, 263, 264, 265, 269, 270, 277, 280, 289, 295, 296, 297, 301, 306, 312, 314, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 350, 390, 395, 396, 397, 406, 407, 409, 410, 412, 415, 418, 421, 424, 426, 427, 428, 430, 431, 433], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 161, 168, 170, 173, 175, 176, 183, 184, 185, 187, 189, 191, 194, 196, 200, 206, 209, 216, 217, 223, 225, 226, 227, 232, 235, 239, 240, 252, 255, 258, 262, 265, 268, 269, 279, 281, 290, 293, 294, 299, 302, 303, 304, 306, 307, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 372, 379, 381, 387, 390, 392, 395, 400, 402, 403, 404, 406, 408, 409, 410, 412, 416, 417, 418, 419, 420, 424, 428, 429, 430, 431, 433], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 46, 56, 57, 58, 60, 61, 66, 101, 102, 113, 114, 115, 118, 122, 127, 128, 129, 130, 135, 142, 143, 144, 145, 150, 151, 157, 176, 204, 209, 219, 231, 235, 238, 241, 242, 243, 249, 256, 258, 260, 262, 313, 314, 315, 316, 335, 400, 406, 411, 413, 415, 417, 419, 420, 421, 427, 428, 430, 432, 433], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 87, 89, 93, 94, 107, 109, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 154, 156, 173, 175, 177, 180, 181, 182, 191, 194, 197, 198, 200, 204, 212, 219, 221, 224, 225, 226, 229, 231, 235, 236, 256, 258, 259, 260, 262, 265, 269, 281, 287, 288, 293, 298, 300, 302, 303, 305, 306, 307, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 370, 381, 393, 403, 408, 409, 414, 415, 417, 419, 420, 422, 426, 427, 429, 430, 432, 433], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 107, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 154, 156, 173, 175, 177, 180, 191, 194, 197, 200, 204, 212, 219, 221, 224, 225, 226, 229, 231, 235, 236, 256, 258, 259, 260, 261, 262, 265, 269, 287, 288, 298, 303, 306, 307, 320, 340, 351, 361, 362, 363, 364, 366, 367, 368, 369, 370, 403, 408, 409, 414, 415, 417, 419, 422, 426, 427, 428, 429, 430, 432, 433], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 46, 60, 64, 101, 102, 115, 118, 122, 129, 130, 142, 143, 146, 150, 151, 173, 176, 209, 217, 235, 240, 258, 262, 279, 387, 390, 392, 395, 396, 400, 402, 403, 406, 409, 410, 417, 430, 433], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 86, 93, 94, 96, 97, 99, 101, 102, 103, 108, 111, 112, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 167, 168, 169, 176, 180, 183, 187, 194, 204, 216, 219, 224, 225, 226, 229, 231, 232, 233, 235, 239, 242, 243, 256, 257, 260, 261, 263, 265, 268, 269, 294, 299, 300, 303, 305, 306, 307, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 358, 376, 381, 393, 400, 401, 402, 403, 404, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433], "etc": [0, 2, 3, 7, 8, 27, 38, 41, 46, 56, 57, 61, 66, 71, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 216, 226, 235, 236, 263, 269, 287, 409, 414, 415, 421, 430, 432, 433], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 96, 100, 103, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 156, 164, 168, 169, 172, 176, 183, 187, 188, 196, 199, 200, 216, 217, 219, 223, 224, 225, 226, 233, 235, 237, 240, 242, 243, 263, 268, 269, 270, 279, 290, 302, 308, 309, 317, 319, 334, 337, 339, 342, 346, 347, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 381, 390, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "few": [0, 2, 8, 102, 122, 372, 381, 415, 416, 419, 426, 427, 430, 432, 433], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 52, 54, 74, 115, 118, 121, 122, 123, 124, 129, 130, 142, 143, 147, 150, 151, 154, 155, 183, 187, 307, 311, 337, 374, 408, 413, 415, 416, 426, 427, 428, 432, 433], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 88, 94, 101, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 180, 204, 219, 224, 225, 226, 229, 231, 235, 242, 243, 256, 257, 260, 261, 306, 370, 385, 390, 408, 413, 415, 416, 417, 419, 421, 422, 426, 427, 428, 430, 432, 433], "standard": [0, 2, 3, 48, 115, 200, 211, 233, 237, 238, 239, 253, 265, 271, 272, 277, 298, 319, 334, 337, 342, 343, 352, 353, 354, 355, 413, 414, 418, 419, 427, 430, 432], "numpi": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 123, 129, 130, 142, 143, 150, 151, 194, 222, 227, 236, 390, 417, 428, 430, 432, 433], "common": [0, 2, 3, 4, 71, 122, 127, 170, 188, 295, 296, 297, 301, 317, 318, 319, 320, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 400, 407, 408, 409, 410, 413, 415, 419, 422, 425, 426, 427, 428, 429, 432, 433], "openai": [0, 7, 24, 121, 123, 130, 147, 415, 428, 432, 433], "gym": [0, 1, 3, 4, 8, 14, 15, 16, 17, 21, 22, 115, 118, 119, 121, 122, 123, 124, 126, 129, 130, 134, 135, 137, 138, 142, 143, 147, 150, 151, 154, 155, 160, 164, 166, 172, 176, 179, 188, 195, 196, 200, 202, 207, 209, 212, 219, 225, 232, 233, 235, 236, 400, 407, 413, 414, 415, 416, 418, 422, 423, 428, 429, 430], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 87, 89, 93, 94, 96, 101, 102, 109, 115, 116, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 137, 138, 142, 143, 144, 145, 147, 150, 151, 169, 172, 176, 177, 179, 180, 181, 183, 184, 186, 187, 191, 194, 198, 200, 204, 205, 209, 216, 217, 218, 219, 220, 224, 225, 226, 229, 231, 233, 235, 236, 240, 260, 262, 268, 269, 294, 298, 299, 303, 304, 306, 307, 308, 309, 317, 319, 320, 321, 325, 326, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 352, 353, 354, 355, 356, 372, 379, 394, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 432, 433], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 161, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 282, 283, 286, 287, 288, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 374, 377, 379, 381, 383, 384, 385, 386, 387, 388, 390, 394, 400, 402, 403, 404, 408, 416, 418, 421, 426, 427, 428, 430, 432], "On": [0, 3, 7, 18, 19, 20, 21, 31, 257, 261, 408, 414, 426, 427], "end": [0, 2, 3, 14, 15, 17, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 85, 94, 96, 100, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 188, 194, 202, 217, 218, 224, 226, 235, 242, 243, 256, 257, 260, 261, 264, 302, 320, 340, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "come": [0, 1, 2, 3, 8, 41, 46, 107, 115, 118, 122, 128, 129, 130, 133, 142, 143, 150, 151, 183, 187, 293, 294, 295, 296, 297, 303, 311, 317, 319, 334, 337, 339, 372, 413, 414, 415, 416, 420, 421, 422, 423, 426, 427, 430, 432, 433], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 87, 88, 89, 96, 100, 103, 109, 115, 118, 120, 122, 123, 128, 129, 130, 134, 135, 136, 142, 143, 144, 145, 150, 151, 154, 155, 156, 165, 166, 168, 170, 172, 173, 176, 177, 180, 183, 184, 187, 194, 195, 196, 197, 204, 209, 217, 218, 219, 220, 224, 225, 226, 229, 231, 233, 235, 236, 256, 258, 260, 262, 264, 268, 269, 276, 278, 279, 287, 293, 298, 306, 307, 319, 320, 326, 331, 334, 335, 337, 340, 356, 372, 380, 381, 385, 387, 396, 404, 407, 408, 409, 411, 413, 414, 415, 416, 417, 419, 420, 421, 425, 426, 427, 428, 429, 430, 432, 433], "re": [0, 2, 3, 8, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 96, 100, 115, 118, 122, 129, 130, 142, 143, 150, 151, 191, 235, 262, 266, 267, 270, 303, 307, 379, 410, 413, 415, 416, 418, 420, 425, 426, 428, 432, 433], "usabl": [0, 410, 416, 432], "function": [0, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 87, 88, 89, 90, 96, 103, 105, 109, 115, 118, 119, 122, 123, 129, 130, 142, 143, 150, 151, 156, 164, 166, 167, 168, 172, 173, 183, 187, 194, 223, 224, 226, 227, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 273, 274, 275, 277, 279, 282, 283, 285, 288, 290, 295, 296, 297, 298, 300, 302, 303, 305, 306, 307, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 390, 400, 406, 408, 413, 416, 417, 418, 419, 422, 425, 428, 430, 433], "cost": [0, 2, 30, 88, 317, 319, 334, 337, 339, 409, 413, 414, 417, 426, 427, 428, 430], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 86, 88, 94, 96, 97, 99, 101, 102, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 150, 151, 154, 155, 158, 159, 160, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 275, 277, 280, 282, 283, 286, 287, 288, 289, 291, 294, 295, 296, 297, 298, 302, 303, 305, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 376, 380, 390, 393, 395, 400, 401, 402, 403, 404, 406, 408, 410, 413, 414, 415, 417, 419, 420, 422, 425, 426, 427, 428, 429, 430, 432, 433], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 89, 93, 94, 97, 101, 109, 115, 118, 119, 122, 126, 129, 130, 133, 137, 142, 143, 144, 145, 150, 151, 175, 176, 183, 187, 194, 219, 222, 224, 233, 235, 258, 262, 268, 269, 279, 300, 305, 406, 410, 413, 414, 416, 417, 418, 426, 427, 428, 429, 430, 432, 433], "good": [0, 1, 4, 9, 142, 413, 415, 416, 417, 419, 427, 432, 433], "runtim": [0, 2, 3, 23, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 428], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 142, 143, 147, 150, 151, 154, 155, 157, 183, 187, 194, 199, 221, 224, 226, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 270, 273, 274, 277, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 319, 320, 329, 337, 340, 385, 390, 409, 413, 414, 415, 416, 417, 418, 421, 423, 425, 426, 427, 428, 433], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 85, 94, 96, 101, 102, 105, 112, 113, 114, 115, 118, 121, 122, 123, 127, 128, 129, 130, 133, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 176, 181, 217, 219, 233, 235, 241, 258, 262, 279, 295, 296, 297, 307, 320, 326, 331, 335, 342, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 53, 55, 58, 60, 63, 64, 67, 68, 87, 88, 89, 90, 93, 96, 103, 105, 109, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 195, 196, 202, 203, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 224, 225, 228, 229, 230, 232, 233, 235, 241, 275, 294, 295, 296, 297, 299, 302, 303, 306, 307, 309, 311, 312, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 353, 354, 355, 356, 372, 385, 390, 408, 413, 414, 415, 417, 418, 419, 425, 426, 427, 428, 429, 432, 433], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 410, 413, 418, 421, 425, 429, 433], "beyond": [0, 41, 115, 118, 122, 129, 130, 142, 143, 150, 151, 417], "api": [0, 2, 3, 5, 23, 31, 32, 39, 41, 56, 63, 66, 71, 115, 118, 144, 145, 147, 204, 231, 233, 240, 408, 409, 410, 417, 418, 419, 420, 421, 422, 426, 427, 428, 430, 432, 433], "check": [0, 2, 3, 4, 5, 6, 7, 9, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 79, 81, 84, 85, 92, 101, 115, 118, 119, 121, 122, 123, 129, 130, 136, 142, 143, 150, 151, 156, 157, 176, 177, 181, 190, 196, 205, 219, 222, 226, 235, 236, 250, 258, 262, 294, 299, 300, 303, 304, 305, 306, 307, 320, 331, 342, 372, 405, 408, 409, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "paper": [0, 113, 114, 116, 117, 124, 127, 128, 134, 135, 137, 138, 147, 154, 155, 204, 229, 231, 243, 256, 280, 289, 324, 332, 342, 413, 415, 426, 427], "releas": [0, 4, 7, 10, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 340], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 392, 400, 410, 413], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 96, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 194, 219, 224, 233, 235, 240, 308, 309, 372, 413, 415, 416, 420, 423, 426, 427, 428, 433], "make": [0, 2, 3, 4, 7, 11, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 73, 96, 99, 103, 105, 112, 115, 118, 122, 123, 126, 128, 129, 130, 132, 138, 142, 143, 150, 151, 156, 167, 169, 181, 189, 197, 200, 204, 205, 209, 213, 217, 221, 225, 229, 235, 238, 241, 256, 257, 258, 260, 261, 262, 268, 269, 271, 299, 307, 317, 319, 334, 337, 339, 352, 353, 354, 355, 370, 387, 396, 404, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "sure": [0, 3, 4, 7, 103, 115, 122, 126, 181, 209, 299, 404, 408, 413, 415, 416, 417, 420, 426, 427, 428, 430, 432, 433], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 38, 46, 56, 57, 61, 66, 71, 74, 83, 84, 85, 92, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 199, 221, 233, 235, 327, 335, 408, 409, 414, 415, 416, 417, 426, 427, 428, 430], "enjoi": [0, 2, 3, 421], "latest": [0, 2, 3, 10, 137, 140, 141, 144, 145, 387, 415, 426, 427, 428, 432], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 50, 56, 66, 71, 72, 94, 101, 102, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 148, 149, 150, 151, 156, 173, 176, 191, 194, 196, 202, 219, 220, 228, 233, 238, 242, 243, 253, 254, 256, 257, 258, 260, 261, 262, 263, 268, 271, 272, 307, 314, 317, 319, 334, 337, 339, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 404, 408, 409, 413, 414, 415, 416, 417, 419, 420, 421, 423, 428, 430, 432, 433], "recent": [0, 7, 232, 236, 433], "version": [0, 1, 2, 3, 6, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 54, 56, 57, 60, 61, 66, 75, 76, 77, 78, 101, 115, 118, 121, 122, 123, 124, 129, 130, 137, 138, 142, 143, 144, 147, 150, 151, 154, 155, 167, 176, 223, 232, 233, 235, 236, 238, 258, 262, 270, 276, 297, 317, 319, 334, 335, 337, 339, 340, 352, 355, 407, 408, 409, 413, 415, 416, 417, 418, 420, 423, 426, 427, 428, 429, 433], "although": [0, 1, 3, 8, 27, 38, 56, 57, 61, 66, 74, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 409, 410, 413, 414, 421, 430], "core": [0, 2, 3, 8, 410, 416, 419, 432], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 103, 105, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 233, 235, 307, 421], "backward": [0, 8, 27, 38, 46, 56, 57, 61, 66, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235, 256, 257, 260, 261, 278, 307, 317, 318, 320, 321, 325, 326, 333, 337, 338, 339, 340, 342, 343, 413, 415, 416, 417, 420, 421, 423, 426, 427, 428], "compat": [0, 2, 3, 7, 14, 15, 16, 23, 27, 38, 46, 56, 57, 61, 66, 88, 96, 99, 101, 102, 103, 107, 115, 118, 122, 124, 129, 130, 139, 142, 143, 150, 151, 176, 217, 229, 233, 235, 236, 256, 257, 258, 260, 261, 262, 304, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 346, 413, 416, 430], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 68, 69, 72, 73, 83, 87, 89, 93, 94, 96, 101, 102, 107, 109, 113, 114, 115, 118, 119, 122, 127, 128, 129, 130, 133, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 161, 168, 172, 173, 175, 177, 180, 181, 183, 185, 186, 187, 196, 197, 200, 202, 204, 206, 209, 212, 216, 217, 218, 219, 224, 225, 226, 229, 231, 233, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 277, 278, 279, 287, 290, 298, 299, 300, 302, 306, 310, 311, 317, 318, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 381, 408, 409, 412, 413, 414, 415, 416, 417, 419, 420, 425, 426, 427, 428, 430, 431, 432, 433], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 87, 88, 89, 93, 94, 96, 101, 102, 109, 113, 114, 115, 118, 121, 122, 124, 125, 127, 128, 129, 130, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 272, 275, 278, 279, 282, 283, 286, 287, 288, 290, 294, 298, 300, 305, 306, 307, 309, 310, 313, 314, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 358, 359, 360, 381, 388, 400, 404, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 53, 56, 58, 66, 67, 68, 88, 122, 129, 142, 150, 197, 204, 207, 231, 320, 323, 335, 409, 410, 413, 414, 415, 416, 419, 421, 430, 432, 433], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 99, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 167, 168, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 251, 252, 255, 258, 262, 264, 265, 268, 269, 279, 280, 281, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 370, 371, 381, 385, 386, 387, 389, 390, 406, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 433], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 87, 196, 206, 224, 225, 295, 296, 297, 306, 325, 333, 342, 406, 413, 426, 428, 432], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 85, 87, 96, 104, 110, 115, 118, 122, 129, 130, 142, 143, 150, 151, 152, 166, 204, 231, 235, 265, 374, 379, 390, 410, 414, 417, 423, 426], "root": [0, 2, 3, 31, 32, 39, 41, 53, 58, 63, 67, 68, 73, 84, 85, 92, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 176, 198, 220, 221, 258, 259, 262, 287, 288, 409, 416, 418, 426, 427, 428, 430, 433], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 53, 69, 93, 94, 113, 114, 116, 117, 124, 126, 127, 128, 134, 135, 137, 138, 139, 140, 141, 144, 145, 147, 152, 153, 154, 155, 176, 204, 229, 238, 244, 245, 246, 247, 248, 249, 252, 253, 254, 260, 265, 266, 267, 272, 273, 274, 278, 279, 280, 282, 283, 289, 300, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 352, 357, 365, 405, 424, 429, 432], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 113, 114, 116, 117, 121, 124, 127, 128, 134, 135, 137, 138, 140, 141, 144, 145, 147, 152, 153, 154, 155, 173, 176, 229, 238, 419, 423, 426, 427, 432], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 113, 114, 116, 117, 124, 126, 127, 128, 134, 135, 137, 138, 140, 141, 144, 145, 147, 152, 153, 154, 155, 176, 238, 432], "setup": [0, 7, 113, 114, 126, 127, 128, 152], "py": [0, 3, 24, 121, 123, 166, 176, 250, 280, 289, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433], "develop": [0, 3, 4, 7, 41, 126, 413, 432], "A": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 103, 107, 108, 109, 110, 111, 115, 118, 120, 122, 124, 125, 129, 130, 142, 143, 146, 147, 150, 151, 156, 162, 167, 169, 171, 172, 173, 175, 176, 179, 181, 184, 186, 192, 196, 198, 204, 205, 207, 214, 219, 221, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 252, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 269, 270, 272, 278, 290, 298, 299, 300, 302, 303, 304, 307, 309, 310, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 350, 352, 353, 354, 355, 356, 358, 370, 373, 374, 377, 379, 380, 383, 390, 392, 400, 406, 409, 412, 413, 415, 417, 419, 420, 421, 424, 428, 431, 433], "seri": [0, 2, 3, 7, 8, 50, 86, 97, 107, 108, 111, 112, 150, 199, 225, 372, 408, 409, 413, 414, 415, 422, 423, 426, 427, 430, 433], "quick": [0, 417], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 41, 60, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 175, 194, 197, 220, 225, 235, 238, 337, 407, 408, 409, 413, 414, 415, 416, 419, 423, 426, 427, 428, 430, 432, 433], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 94, 96, 97, 99, 100, 101, 102, 107, 109, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 134, 135, 136, 137, 138, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 160, 164, 167, 168, 169, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 194, 196, 197, 198, 199, 200, 204, 205, 208, 209, 212, 213, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 231, 233, 235, 236, 241, 242, 243, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 279, 290, 294, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 366, 367, 368, 369, 370, 376, 379, 380, 386, 387, 390, 392, 394, 400, 404, 407, 409, 413, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 427, 428, 430, 432, 433], "hurri": [0, 418], "last": [0, 1, 2, 3, 4, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 100, 101, 102, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 142, 143, 147, 150, 151, 169, 172, 175, 191, 198, 200, 205, 218, 220, 222, 236, 237, 242, 243, 255, 256, 258, 260, 262, 263, 266, 267, 273, 284, 287, 290, 298, 302, 307, 320, 352, 354, 355, 414, 415, 416, 417, 418, 419, 426, 427, 428, 429, 430, 432, 433], "item": [0, 2, 3, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 88, 94, 96, 100, 107, 129, 169, 184, 190, 225, 266, 267, 321, 322, 324, 381, 409, 410, 413, 415, 416, 420, 421, 426, 427, 428, 430], "navig": [0, 427], "previou": [0, 3, 4, 10, 46, 53, 58, 60, 67, 68, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 191, 219, 235, 256, 260, 283, 298, 415, 416, 417, 418, 419, 423, 428, 433], "whenev": [0, 1, 2, 3, 23, 46, 53, 56, 58, 66, 67, 68, 73, 93, 94, 101, 102, 116, 117, 121, 123, 124, 134, 135, 147, 154, 155, 166, 184, 191, 195, 226, 232, 335, 352, 353, 354, 355, 370, 392, 408, 422, 430], "want": [0, 2, 3, 6, 7, 8, 56, 66, 102, 176, 200, 278, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 408, 413, 414, 415, 416, 417, 418, 420, 421, 422, 426, 427, 428, 429, 430, 432, 433], "ted": [0, 35, 47, 64, 65, 84, 85, 92, 406, 412, 424, 431], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 96, 101, 102, 107, 113, 114, 115, 118, 122, 126, 127, 128, 129, 130, 134, 135, 137, 142, 143, 144, 145, 150, 151, 154, 155, 156, 176, 180, 184, 194, 198, 204, 217, 219, 222, 223, 224, 225, 226, 229, 231, 233, 235, 237, 240, 242, 243, 250, 255, 258, 262, 267, 268, 269, 272, 278, 280, 287, 289, 295, 297, 300, 302, 303, 306, 307, 310, 318, 320, 325, 331, 333, 335, 340, 342, 352, 353, 354, 355, 356, 370, 408, 409, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "modul": [0, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 107, 113, 114, 115, 118, 122, 129, 130, 133, 136, 139, 142, 143, 150, 151, 166, 175, 180, 186, 188, 194, 196, 204, 205, 218, 219, 224, 225, 226, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 350, 352, 353, 354, 355, 356, 370, 390, 397, 400, 406, 409, 410, 412, 414, 415, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431], "optim": [0, 1, 2, 8, 27, 38, 46, 56, 57, 60, 61, 66, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 239, 265, 271, 272, 278, 287, 318, 320, 335, 336, 337, 340, 347, 385, 386, 390, 400, 409, 410, 412, 415, 416, 417, 418, 419, 421, 424, 426, 427, 428, 431], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 46, 53, 58, 67, 68, 96, 100, 115, 118, 122, 129, 130, 142, 143, 147, 150, 151, 156, 173, 176, 191, 200, 204, 231, 279, 302, 318, 321, 324, 326, 338, 340, 342, 343, 372, 381, 387, 390, 392, 393, 394, 400, 410, 412, 413, 416, 417, 418, 419, 420, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "storag": [0, 1, 8, 27, 35, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 73, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 109, 110, 115, 118, 120, 122, 129, 130, 142, 143, 150, 151, 175, 176, 183, 187, 209, 235, 406, 410, 412, 414, 415, 416, 417, 418, 420, 423, 424, 426, 427, 429, 431], "log": [0, 3, 4, 8, 11, 60, 250, 251, 252, 266, 267, 275, 287, 288, 299, 300, 303, 307, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 343, 350, 379, 383, 384, 385, 390, 400, 408, 409, 410, 412, 413, 414, 415, 418, 419, 423, 424, 426, 427, 428, 431, 432], "your": [0, 2, 7, 8, 10, 11, 14, 15, 18, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 126, 129, 130, 133, 142, 143, 144, 145, 150, 151, 233, 235, 307, 380, 404, 406, 407, 408, 409, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 426, 427, 430, 431, 432], "own": [0, 1, 14, 15, 17, 22, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 235, 372, 406, 409, 412, 414, 415, 418, 424, 426, 427, 428, 431], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 83, 115, 118, 122, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 156, 183, 192, 204, 218, 223, 226, 229, 231, 235, 237, 238, 240, 245, 247, 255, 258, 262, 279, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 390, 392, 400, 406, 408, 410, 412, 414, 418, 421, 422, 424, 429, 430, 431, 432, 433], "loop": [0, 8, 52, 54, 59, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 255, 278, 279, 337, 390, 409, 410, 412, 413, 414, 418, 420, 421, 422, 424, 425, 430, 431, 432], "ppo": [0, 4, 8, 303, 307, 319, 334, 337, 406, 408, 412, 413, 414, 417, 419, 420, 424, 426, 431], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 107, 115, 116, 117, 118, 119, 121, 122, 123, 129, 130, 137, 142, 143, 150, 151, 176, 179, 180, 181, 189, 195, 196, 200, 207, 209, 213, 214, 217, 219, 220, 221, 224, 225, 226, 227, 233, 235, 241, 258, 262, 400, 408, 412, 414, 415, 418, 419, 420, 424, 431, 432, 433], "introduct": [0, 409, 412, 418, 424, 426, 427, 431, 433], "multi": [0, 1, 7, 9, 27, 38, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 84, 85, 92, 115, 118, 122, 129, 130, 134, 135, 142, 143, 148, 149, 150, 151, 197, 226, 235, 256, 258, 260, 262, 263, 268, 269, 270, 302, 307, 350, 352, 353, 354, 355, 406, 412, 413, 414, 415, 416, 418, 419, 424, 428, 431, 432], "agent": [0, 9, 62, 63, 133, 134, 135, 140, 141, 144, 145, 148, 149, 152, 153, 154, 155, 157, 197, 216, 217, 218, 266, 267, 268, 269, 270, 272, 280, 289, 319, 334, 337, 350, 406, 412, 418, 424, 428, 431], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 31, 35, 38, 41, 46, 56, 57, 60, 61, 64, 66, 73, 96, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 241, 258, 262, 264, 265, 302, 306, 335, 370, 371, 372, 380, 394, 395, 396, 400, 402, 403, 404, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 101, 102, 107, 109, 113, 114, 115, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 287, 288, 289, 290, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 365, 370, 372, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 400, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433], "pretrain": [0, 412, 424, 431], "recurr": [0, 2, 175, 256, 257, 258, 260, 262, 283, 293, 412, 414, 419, 424, 430, 431], "dqn": [0, 2, 169, 188, 243, 252, 299, 300, 317, 318, 320, 321, 322, 324, 326, 327, 328, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 350, 397, 406, 408, 412, 417, 419, 420, 423, 424, 431], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 46, 64, 113, 114, 115, 118, 122, 129, 130, 136, 142, 143, 146, 150, 151, 165, 186, 196, 198, 218, 221, 237, 240, 241, 252, 255, 258, 262, 268, 269, 272, 279, 281, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 317, 318, 319, 320, 321, 325, 326, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 385, 392, 395, 396, 400, 402, 403, 406, 408, 410, 412, 414, 418, 420, 421, 424, 429, 430, 431, 432, 433], "replai": [0, 8, 16, 46, 53, 58, 67, 68, 93, 94, 95, 96, 97, 98, 100, 102, 103, 105, 107, 108, 112, 175, 176, 186, 205, 209, 219, 225, 235, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 387, 390, 398, 400, 406, 409, 410, 412, 417, 424, 428, 429, 431], "buffer": [0, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 112, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 175, 176, 180, 184, 186, 194, 204, 205, 209, 219, 224, 225, 226, 229, 231, 235, 237, 279, 298, 306, 309, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 352, 353, 354, 355, 356, 387, 390, 398, 400, 406, 409, 410, 412, 417, 422, 424, 428, 429, 431, 433], "export": [0, 6, 7, 412, 424, 431], "competit": [0, 3, 134, 135, 412, 424, 427, 431], "ddpg": [0, 245, 246, 247, 248, 321, 332, 341, 406, 408, 412, 414, 420, 424, 427, 431], "task": [0, 2, 3, 9, 60, 62, 63, 72, 115, 116, 117, 118, 122, 125, 129, 130, 134, 135, 142, 143, 144, 145, 147, 150, 151, 154, 155, 204, 217, 226, 229, 231, 325, 333, 412, 413, 414, 415, 416, 418, 419, 424, 426, 427, 428, 431, 433], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 140, 141, 142, 143, 150, 151, 154, 164, 184, 198, 219, 249, 258, 262, 298, 317, 335, 337, 339, 372, 390, 406, 409, 410, 412, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 427, 430, 431, 432], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 46, 48, 52, 54, 56, 57, 59, 61, 66, 71, 72, 73, 87, 88, 89, 90, 96, 99, 103, 105, 109, 112, 115, 118, 122, 127, 129, 130, 142, 143, 146, 150, 151, 169, 183, 187, 188, 194, 197, 200, 204, 224, 225, 226, 229, 233, 235, 258, 262, 265, 268, 269, 280, 287, 289, 294, 295, 303, 306, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 394, 395, 396, 399, 400, 404, 406, 408, 410, 412, 414, 415, 416, 417, 421, 423, 424, 426, 427, 428, 430, 431, 433], "loss": [0, 3, 8, 54, 188, 278, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 350, 351, 352, 386, 390, 397, 400, 409, 410, 412, 417, 418, 420, 421, 422, 424, 428, 430, 431], "trainer": [0, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 412, 413, 424, 431], "exampl": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 83, 87, 88, 89, 93, 94, 96, 101, 102, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 275, 277, 278, 279, 280, 281, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 350, 352, 353, 354, 355, 358, 370, 372, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 400, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433], "packag": [0, 6, 7, 10, 166, 406, 407, 433], "batch": [0, 2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 46, 48, 50, 53, 55, 58, 60, 67, 68, 69, 71, 83, 87, 88, 89, 90, 94, 95, 96, 100, 101, 102, 107, 109, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 136, 137, 139, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 168, 173, 176, 180, 181, 184, 191, 198, 200, 202, 205, 209, 216, 219, 221, 225, 226, 228, 232, 233, 235, 238, 250, 256, 257, 258, 260, 261, 262, 266, 267, 268, 269, 270, 271, 275, 279, 280, 286, 290, 293, 302, 306, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 381, 384, 387, 388, 389, 390, 392, 402, 403, 404, 406, 408, 409, 410, 414, 415, 416, 417, 418, 421, 423, 425, 426, 427, 429, 432, 433], "size": [0, 2, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 93, 94, 95, 96, 100, 101, 102, 103, 109, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 167, 169, 173, 175, 176, 177, 180, 182, 183, 184, 187, 188, 189, 191, 194, 197, 198, 202, 204, 206, 207, 209, 213, 215, 216, 217, 219, 221, 222, 225, 226, 227, 228, 231, 233, 235, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 372, 381, 387, 406, 408, 409, 414, 415, 416, 417, 418, 419, 421, 426, 427, 428, 433], "copi": [0, 2, 3, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 66, 71, 72, 73, 74, 75, 76, 77, 78, 87, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 172, 176, 194, 207, 218, 224, 225, 226, 233, 235, 236, 258, 262, 270, 298, 320, 335, 340, 370, 406, 409, 413, 414, 416, 418, 426, 430, 432], "interoper": [0, 14, 15, 406], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 36, 38, 39, 41, 44, 46, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 73, 88, 96, 102, 107, 115, 118, 121, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 169, 176, 177, 184, 197, 204, 209, 219, 224, 226, 231, 235, 242, 243, 256, 257, 258, 260, 261, 262, 263, 269, 305, 309, 318, 319, 320, 322, 324, 326, 327, 333, 334, 337, 338, 340, 342, 343, 347, 352, 353, 354, 355, 361, 362, 363, 364, 366, 367, 368, 369, 370, 404, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 432], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 41, 52, 54, 59, 63, 73, 130, 224, 406, 421, 432], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 58, 67, 68, 96, 115, 144, 145, 196, 200, 237, 239, 250, 251, 252, 253, 259, 265, 266, 267, 275, 276, 277, 278, 282, 283, 286, 287, 288, 298, 299, 300, 303, 307, 308, 317, 318, 319, 320, 325, 326, 327, 333, 334, 337, 338, 339, 340, 342, 343, 406, 409, 410, 414, 415, 417, 419, 421, 426, 427, 428, 432, 433], "helper": [0, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 413, 414, 416, 426, 428], "compos": [0, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 95, 96, 97, 98, 107, 108, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 181, 194, 208, 224, 225, 226, 233, 235, 301, 302, 320, 329, 340, 372, 406, 413, 414, 415, 416, 417, 421, 425, 427, 429, 430, 432, 433], "episod": [0, 3, 41, 94, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 172, 209, 212, 218, 239, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 406, 414, 418, 423, 426, 427, 430], "format": [0, 3, 27, 35, 38, 44, 45, 46, 47, 50, 51, 56, 57, 61, 64, 65, 66, 73, 84, 85, 92, 99, 107, 115, 118, 122, 129, 130, 142, 143, 144, 150, 151, 176, 180, 204, 219, 225, 226, 229, 231, 235, 306, 372, 406, 413, 414, 417, 418, 420, 422, 432, 433], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 115, 118, 122, 129, 130, 136, 142, 143, 146, 150, 151, 154, 155, 168, 169, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 193, 195, 196, 197, 198, 200, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 255, 279, 283, 294, 298, 299, 300, 303, 304, 305, 306, 307, 308, 310, 318, 320, 322, 325, 326, 338, 340, 342, 343, 350, 406, 428], "tree": [0, 1, 41, 52, 54, 59, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 406, 426, 430], "forest": [0, 41, 73, 406], "human": [0, 24, 406, 428], "feedback": [0, 406, 423, 432], "rlhf": [0, 60, 72, 83, 196, 406, 408], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 114, 115, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 136, 137, 138, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 161, 164, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 195, 196, 197, 198, 200, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 252, 255, 258, 262, 279, 281, 283, 294, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 423, 425, 426, 427, 432], "lock": [0, 31, 32, 39, 52, 54, 59, 63, 73, 115, 118, 122, 128, 129, 130, 142, 143, 150, 151, 173, 181, 219, 233, 406, 409, 428], "method": [0, 1, 2, 4, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 93, 94, 96, 101, 102, 103, 104, 105, 107, 109, 115, 118, 121, 122, 123, 124, 128, 129, 130, 142, 143, 146, 147, 150, 151, 164, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 198, 200, 203, 204, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 250, 255, 258, 262, 268, 269, 270, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 331, 333, 335, 337, 338, 339, 340, 342, 343, 350, 356, 370, 371, 401, 406, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 428, 430, 433], "partial": [0, 2, 115, 118, 122, 129, 130, 142, 143, 150, 151, 175, 176, 184, 218, 219, 220, 303, 390, 406, 416], "step": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 60, 73, 84, 85, 92, 94, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 167, 168, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 191, 192, 195, 196, 198, 200, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 233, 235, 237, 238, 239, 253, 255, 256, 258, 260, 262, 264, 265, 278, 279, 302, 303, 307, 317, 328, 337, 351, 352, 353, 354, 355, 358, 359, 360, 371, 374, 381, 385, 390, 406, 410, 414, 416, 417, 419, 420, 422, 423, 425, 428, 429, 432], "reset": [0, 1, 2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 96, 102, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 156, 168, 171, 172, 173, 176, 184, 188, 191, 195, 199, 204, 212, 217, 218, 219, 220, 221, 224, 225, 226, 229, 232, 233, 235, 236, 241, 256, 258, 262, 270, 279, 292, 302, 335, 371, 406, 409, 413, 414, 415, 416, 418, 421, 425, 426, 427, 432], "vector": [0, 1, 8, 25, 50, 113, 114, 123, 127, 128, 133, 144, 145, 147, 154, 155, 186, 232, 245, 247, 256, 257, 260, 261, 263, 352, 355, 365, 366, 367, 368, 369, 406, 408, 409, 413, 414, 416, 425, 426, 427, 428, 429, 433], "custom": [0, 2, 5, 27, 38, 46, 56, 57, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 229, 235, 268, 269, 310, 316, 327, 337, 344, 404, 406, 408, 413, 414, 415, 416, 419, 420, 422, 426, 427], "nativ": [0, 1, 7, 9, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 372, 406, 416, 430], "auto": [0, 89, 109, 118, 171, 172, 226, 232, 279, 318, 320, 326, 336, 338, 340, 342, 343, 406, 409, 426, 427], "dynam": [0, 2, 7, 14, 15, 16, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 235, 325, 333, 406, 415, 418, 428], "mask": [0, 1, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 170, 205, 235, 240, 241, 252, 255, 266, 267, 281, 298, 299, 300, 304, 305, 326, 340, 387, 406, 414, 416, 417, 433], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 41, 50, 60, 64, 66, 73, 93, 94, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 161, 167, 169, 170, 173, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 198, 199, 200, 202, 206, 207, 209, 213, 217, 219, 223, 225, 226, 227, 228, 232, 235, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 262, 263, 264, 265, 266, 267, 268, 277, 279, 280, 281, 283, 286, 287, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 400, 404, 406, 408, 410, 413, 414, 415, 417, 418, 419, 420, 425, 426, 427, 429, 432, 433], "record": [0, 2, 11, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 162, 169, 196, 235, 337, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 385, 400, 406, 414, 415, 419, 423, 426], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 186, 194, 219, 227, 294, 299, 300, 303, 304, 305, 306, 307, 308, 309, 314, 406, 415, 420, 426, 427, 428, 432, 433], "actor": [0, 3, 4, 21, 146, 196, 239, 244, 245, 247, 252, 253, 255, 265, 277, 279, 281, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 350, 406, 409, 414, 416, 418, 420, 423, 426, 429, 432], "explor": [0, 1, 234, 237, 240, 255, 272, 279, 294, 299, 300, 303, 304, 305, 306, 307, 317, 335, 385, 395, 396, 400, 406, 415, 416, 417, 418, 420, 421, 423, 426, 427, 428], "valu": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 93, 94, 96, 101, 102, 107, 115, 118, 122, 129, 130, 133, 142, 143, 150, 151, 156, 161, 166, 167, 168, 169, 172, 174, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 194, 199, 200, 204, 205, 208, 209, 210, 212, 214, 216, 219, 220, 225, 226, 231, 233, 235, 236, 237, 238, 241, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 265, 266, 267, 268, 269, 271, 272, 275, 279, 280, 281, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 380, 381, 383, 384, 385, 386, 387, 390, 400, 406, 410, 414, 417, 420, 421, 422, 425, 426, 427, 428, 430, 432, 433], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 56, 58, 60, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 96, 98, 100, 115, 118, 119, 122, 129, 130, 134, 135, 136, 139, 142, 143, 144, 145, 148, 149, 150, 151, 168, 173, 180, 181, 183, 184, 185, 189, 194, 196, 198, 200, 206, 207, 212, 213, 217, 219, 223, 225, 227, 232, 235, 240, 241, 250, 258, 262, 266, 267, 275, 294, 303, 307, 311, 312, 331, 338, 345, 352, 357, 365, 375, 390, 406, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "hook": [0, 2, 27, 35, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 96, 110, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 281, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 406], "planner": [0, 239, 265, 406], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 93, 94, 96, 97, 100, 101, 102, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 167, 168, 169, 170, 172, 173, 174, 175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 194, 196, 197, 200, 202, 204, 206, 207, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 225, 226, 227, 229, 231, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 315, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 381, 388, 389, 400, 406, 408, 410, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 432, 433], "vmap": [0, 256, 257, 260, 261, 270, 290, 306, 309, 335, 406, 408], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 60, 62, 63, 71, 74, 75, 76, 77, 78, 95, 107, 115, 118, 122, 129, 130, 136, 142, 143, 146, 150, 151, 156, 169, 184, 186, 199, 200, 219, 226, 241, 255, 256, 258, 260, 262, 303, 306, 307, 314, 318, 335, 338, 385, 394, 406, 408, 413, 414, 415, 417, 418, 419, 421, 428, 429, 430, 432, 433], "sac": [0, 326, 338, 340, 406], "redq": [0, 338, 406], "crossq": [0, 320, 406], "iql": [0, 325, 333, 406, 413, 426, 427], "cql": [0, 318, 324, 406], "gail": [0, 331, 406], "dt": [0, 143, 279, 406, 428], "td3": [0, 342, 343, 406], "bc": [0, 5, 342, 406], "a2c": [0, 317, 406], "dreamer": [0, 162, 163, 253, 328, 329, 330, 406, 408], "checkpoint": [0, 58, 85, 87, 91, 103, 104, 106, 110, 406, 430], "builder": [0, 406, 414, 433], "logger": [0, 3, 11, 370, 372, 374, 375, 376, 377, 378, 379, 384, 390, 400, 404, 406, 414, 426], "_util": [0, 3, 142, 236, 406, 417, 423], "implement_for": [0, 3, 406], "set_auto_unwrap_transformed_env": [0, 12, 226, 406], "auto_unwrap_transformed_env": [0, 380, 406], "thing": [0, 3, 7, 8, 115, 118, 122, 129, 130, 142, 143, 150, 151, 225, 268, 269, 326, 340, 407, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 430, 433], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 87, 89, 101, 102, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 186, 233, 235, 250, 268, 269, 286, 318, 320, 333, 338, 340, 342, 343, 352, 354, 355, 407, 409, 413, 418, 419, 420, 428, 430], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 109, 115, 118, 119, 121, 122, 123, 128, 129, 130, 133, 134, 135, 137, 139, 142, 143, 144, 145, 150, 151, 154, 155, 165, 167, 170, 172, 175, 176, 180, 183, 184, 186, 187, 196, 197, 199, 200, 204, 205, 212, 219, 221, 224, 225, 226, 229, 231, 232, 233, 235, 236, 238, 239, 250, 252, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 278, 281, 287, 302, 303, 306, 307, 309, 313, 318, 319, 320, 322, 326, 327, 333, 334, 335, 337, 338, 340, 342, 343, 344, 350, 351, 352, 353, 354, 355, 370, 371, 372, 374, 377, 379, 387, 404, 407, 408, 409, 410, 413, 414, 415, 416, 417, 419, 421, 422, 426, 427, 428, 429, 430, 432, 433], "debug": [0, 6, 8, 41, 60, 73, 221, 407, 433], "work": [0, 1, 2, 3, 4, 8, 27, 38, 46, 56, 57, 58, 61, 66, 87, 94, 99, 101, 102, 105, 112, 115, 118, 121, 122, 123, 126, 129, 130, 142, 143, 147, 150, 151, 164, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 236, 242, 243, 263, 300, 305, 310, 319, 334, 337, 390, 407, 408, 413, 414, 415, 416, 418, 421, 425, 426, 427, 428, 429, 430, 432, 433], "habitat": [0, 3, 124, 407, 429], "lab": [0, 3, 116, 117, 124, 407], "mujoco": [0, 6, 8, 147, 407, 413, 415, 416], "error": [0, 1, 3, 7, 10, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 73, 87, 115, 118, 122, 129, 130, 142, 143, 150, 151, 152, 156, 157, 205, 224, 235, 236, 335, 407, 409, 413, 415, 426, 427, 433], "solut": [0, 2, 3, 6, 7, 9, 21, 101, 407, 408, 410, 417, 432], "resourc": [0, 1, 21, 124, 407, 413, 415, 417, 426, 427], "issu": [0, 2, 3, 4, 5, 8, 85, 87, 89, 101, 109, 115, 118, 121, 122, 126, 129, 130, 142, 143, 150, 151, 167, 176, 205, 220, 294, 299, 300, 303, 304, 305, 306, 307, 407, 432], "customis": [0, 407, 414, 422], "video": [0, 4, 9, 372, 374, 377, 379, 385, 404, 406, 407, 423, 426, 427], "render": [0, 3, 8, 128, 154, 370, 372, 385, 407, 413, 414, 415, 417, 418, 422], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 93, 94, 96, 97, 99, 101, 105, 107, 108, 109, 111, 112, 115, 118, 122, 129, 130, 134, 135, 140, 141, 142, 143, 150, 151, 154, 155, 167, 171, 176, 180, 186, 226, 266, 267, 406, 418, 425, 426, 427, 430, 432], "search": [0, 2, 31, 32, 39, 63, 73, 139, 168, 414], "page": [0, 7, 24, 379, 420], "somewhat": [1, 2, 409, 419, 433], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 113, 114, 115, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 153, 173, 185, 188, 219, 221, 226, 235, 252, 260, 263, 281, 299, 300, 304, 305, 337, 387, 421, 432, 433], "dataload": [1, 83, 100, 102, 129, 184, 414, 421, 430], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 190, 209, 218, 219, 220, 224, 226, 235, 237, 255, 256, 258, 260, 262, 275, 279, 317, 320, 335, 337, 340, 372, 408, 413, 414, 418, 426, 430, 432, 433], "1": [1, 2, 3, 4, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 87, 88, 89, 93, 94, 96, 101, 102, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 161, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 194, 196, 197, 198, 200, 202, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 233, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 358, 360, 361, 362, 366, 367, 369, 370, 372, 381, 385, 387, 388, 400, 404, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 94, 96, 115, 118, 121, 122, 123, 129, 130, 133, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 172, 175, 190, 196, 204, 213, 221, 225, 226, 231, 235, 262, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 387, 390, 408, 409, 410, 413, 414, 415, 416, 417, 420, 425, 426, 427, 428, 429, 430, 432, 433], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 82, 94, 96, 100, 101, 102, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 167, 169, 184, 186, 200, 212, 220, 235, 275, 278, 287, 290, 309, 327, 329, 335, 358, 370, 393, 408, 410, 413, 414, 415, 417, 418, 419, 420, 421, 426, 427, 428, 433], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 46, 48, 49, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 88, 90, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 167, 173, 174, 176, 180, 184, 191, 204, 216, 219, 225, 226, 227, 228, 229, 231, 235, 241, 256, 258, 260, 262, 268, 306, 307, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 408, 413, 416, 417, 426, 427, 428, 430, 433], "static": [1, 56, 60, 66, 72, 94, 101, 102, 124, 143, 233, 236, 333, 418, 428, 430], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 41, 46, 48, 53, 56, 57, 58, 61, 63, 66, 67, 68, 72, 90, 96, 102, 115, 118, 119, 122, 124, 129, 130, 133, 142, 143, 144, 145, 150, 151, 156, 176, 188, 219, 222, 235, 256, 260, 269, 301, 307, 317, 319, 334, 337, 338, 339, 408, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 62, 66, 83, 88, 107, 110, 115, 118, 121, 122, 123, 124, 128, 129, 130, 142, 143, 147, 150, 151, 165, 175, 183, 186, 187, 194, 199, 207, 219, 224, 225, 226, 235, 255, 258, 262, 279, 319, 320, 334, 335, 337, 340, 372, 387, 392, 402, 403, 404, 408, 409, 413, 414, 415, 416, 421, 426, 427, 428, 430], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 74, 83, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 171, 176, 180, 191, 194, 204, 212, 216, 219, 224, 225, 226, 227, 228, 229, 231, 235, 263, 290, 306, 307, 308, 320, 340, 372, 410, 415, 417, 418, 422, 430, 432, 433], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 96, 100, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 200, 204, 224, 231, 235, 248, 256, 258, 260, 262, 268, 269, 284, 287, 307, 334, 342, 346, 385, 390, 409, 413, 414, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 430, 432, 433], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 119, 176, 307, 390, 408, 409, 413, 414, 425, 432, 433], "argument": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 85, 87, 88, 89, 93, 94, 96, 99, 100, 101, 102, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 138, 140, 141, 142, 143, 144, 147, 150, 151, 152, 153, 154, 155, 167, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 184, 185, 188, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 255, 256, 258, 260, 262, 263, 266, 267, 268, 269, 271, 279, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 350, 352, 353, 354, 355, 356, 360, 370, 371, 372, 377, 379, 383, 390, 393, 400, 401, 404, 413, 414, 415, 416, 417, 418, 419, 421, 426, 427, 428, 430, 432, 433], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 88, 90, 96, 99, 100, 101, 102, 103, 105, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 157, 167, 174, 175, 179, 183, 184, 185, 187, 196, 197, 200, 202, 204, 212, 214, 222, 223, 224, 225, 226, 228, 229, 231, 233, 235, 241, 242, 243, 245, 251, 254, 258, 262, 263, 266, 267, 273, 281, 300, 302, 304, 305, 307, 309, 310, 311, 318, 320, 333, 335, 338, 340, 342, 343, 349, 352, 355, 370, 371, 385, 387, 402, 403, 409, 413, 415, 418, 419, 420, 421, 425, 426, 428, 429, 430, 432, 433], "constructor": [1, 2, 3, 16, 18, 19, 20, 21, 58, 72, 93, 107, 115, 118, 122, 129, 130, 137, 142, 143, 150, 151, 154, 172, 176, 224, 242, 243, 263, 293, 303, 307, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 401, 404, 408, 413, 414, 415, 418, 421, 426, 427, 430, 432], "iter": [1, 2, 3, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 82, 83, 90, 96, 100, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 184, 189, 200, 213, 235, 236, 238, 240, 241, 242, 243, 263, 268, 269, 285, 294, 299, 303, 304, 306, 308, 309, 311, 335, 349, 385, 389, 390, 409, 410, 413, 415, 416, 421, 423, 426, 427, 428], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 87, 88, 96, 101, 102, 113, 114, 115, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 142, 143, 147, 150, 151, 152, 170, 181, 198, 221, 226, 235, 255, 256, 258, 260, 262, 270, 293, 302, 308, 309, 335, 342, 394, 404, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 430, 431, 432, 433], "queri": [1, 2, 3, 14, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 88, 115, 118, 122, 129, 130, 142, 143, 150, 151, 204, 229, 233, 235, 309, 409, 413, 420, 428, 432], "defin": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 205, 218, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 270, 273, 274, 277, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 314, 322, 324, 335, 352, 353, 354, 355, 356, 371, 401, 408, 413, 414, 416, 420, 423, 428, 430, 433], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 93, 94, 96, 99, 101, 102, 109, 113, 114, 115, 118, 121, 122, 123, 127, 128, 129, 130, 136, 137, 138, 139, 142, 143, 144, 145, 150, 151, 154, 155, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 186, 188, 189, 190, 192, 195, 196, 199, 200, 203, 205, 206, 207, 209, 211, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 233, 235, 237, 238, 239, 242, 243, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 273, 274, 279, 280, 282, 283, 286, 287, 288, 289, 294, 298, 302, 303, 306, 307, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 377, 379, 381, 383, 385, 390, 392, 393, 394, 402, 403, 404, 408, 409, 413, 414, 415, 416, 418, 419, 421, 423, 426, 427, 428, 429, 430, 433], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 38, 41, 42, 43, 46, 56, 57, 61, 66, 72, 73, 100, 102, 107, 115, 118, 122, 123, 129, 130, 142, 143, 150, 151, 156, 169, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 240, 256, 258, 262, 263, 271, 272, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 353, 354, 355, 387, 413, 415, 416, 417, 421, 422, 426, 427, 428, 430, 433], "deliv": [1, 2, 3, 16, 413, 414, 418, 421, 432], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 81, 88, 93, 96, 115, 118, 121, 122, 123, 129, 130, 133, 142, 143, 144, 145, 150, 151, 176, 184, 198, 233, 256, 258, 260, 261, 262, 302, 308, 309, 318, 320, 333, 338, 340, 342, 343, 371, 381, 406, 414, 417, 418, 425, 426, 428, 432], "user": [1, 2, 3, 5, 8, 23, 27, 38, 41, 46, 56, 57, 61, 66, 73, 94, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 152, 156, 177, 194, 218, 224, 226, 235, 249, 320, 337, 340, 342, 372, 401, 409, 410, 413, 414, 418, 420, 421, 428, 432, 433], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 60, 100, 115, 118, 122, 128, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 198, 217, 237, 255, 279, 413, 415, 423, 426, 427, 432, 433], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 63, 64, 66, 71, 73, 74, 75, 76, 77, 78, 84, 85, 92, 94, 96, 101, 102, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 172, 173, 176, 183, 184, 185, 187, 188, 189, 194, 198, 199, 200, 202, 206, 207, 209, 211, 213, 216, 217, 219, 220, 224, 225, 226, 227, 233, 235, 239, 256, 258, 262, 265, 287, 302, 317, 318, 319, 320, 321, 322, 324, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 409, 413, 415, 416, 417, 418, 420, 421, 423, 425, 426, 427, 428, 430, 432, 433], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 41, 46, 53, 56, 57, 58, 60, 61, 64, 66, 67, 68, 73, 84, 85, 92, 96, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 156, 167, 168, 172, 175, 176, 177, 179, 180, 181, 184, 185, 188, 191, 194, 198, 200, 207, 217, 218, 223, 224, 225, 226, 227, 228, 233, 235, 239, 244, 249, 253, 256, 257, 258, 260, 261, 262, 263, 265, 270, 273, 277, 280, 282, 283, 289, 295, 302, 306, 312, 317, 319, 320, 324, 326, 334, 335, 337, 338, 339, 340, 350, 351, 352, 353, 354, 355, 356, 390, 404, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 428, 433], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 73, 89, 96, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 153, 167, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 255, 256, 258, 262, 271, 299, 304, 320, 329, 340, 342, 414, 415, 416, 417, 418, 419, 421, 423, 426, 427, 428, 429, 430, 433], "predefin": [1, 372, 414, 416, 421, 430, 432], "becaus": [1, 2, 3, 4, 7, 27, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 73, 88, 115, 118, 122, 129, 130, 142, 143, 150, 151, 188, 196, 217, 232, 235, 248, 269, 294, 299, 300, 302, 303, 304, 305, 306, 307, 317, 337, 408, 413, 414, 416, 417, 419, 420, 421, 425, 426, 427, 428, 430, 433], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 428, 430], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 46, 56, 57, 60, 61, 66, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 168, 200, 214, 226, 230, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 273, 274, 275, 277, 279, 282, 283, 285, 287, 288, 290, 295, 298, 300, 302, 303, 305, 307, 310, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 394, 409, 413, 415, 416, 417, 418, 419, 425, 426, 427, 429, 430], "heavi": [1, 8, 430], "crucial": [1, 2, 3, 237, 255, 279, 325, 333, 335, 413, 414, 415, 416, 418, 420, 422, 426, 427, 428, 432, 433], "configur": [1, 8, 21, 22, 60, 115, 196, 244, 249, 277, 335, 337, 408, 413, 414, 415, 420, 426, 427, 428], "hyperparamet": [1, 99, 235, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 413, 422, 428, 430], "appropri": [1, 3, 4, 7, 86, 97, 107, 108, 111, 112, 130, 142, 150, 188, 401, 404, 413, 422, 430], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 103, 105, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 408, 409, 413, 416, 417, 419, 423, 426, 427, 428, 429, 432], "take": [1, 2, 3, 8, 23, 27, 38, 41, 56, 57, 60, 61, 66, 104, 110, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 179, 217, 220, 221, 225, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 301, 302, 303, 305, 307, 310, 313, 316, 337, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 381, 392, 408, 410, 413, 414, 415, 417, 418, 419, 420, 426, 427, 428, 430, 433], "consider": [1, 2, 3, 8, 121, 123, 225, 414, 426, 427, 430], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 87, 89, 96, 97, 109, 115, 118, 122, 128, 129, 130, 134, 135, 136, 142, 143, 144, 145, 150, 151, 154, 155, 168, 172, 181, 183, 184, 187, 218, 224, 226, 233, 235, 242, 243, 258, 262, 263, 307, 311, 317, 318, 319, 320, 321, 322, 324, 326, 327, 331, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 355, 380, 404, 413, 414, 415, 417, 418, 426, 427, 428, 432, 433], "should": [1, 2, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 87, 90, 94, 96, 101, 102, 103, 107, 110, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 133, 136, 142, 143, 144, 145, 150, 151, 154, 155, 156, 167, 168, 169, 172, 173, 176, 179, 180, 183, 185, 188, 189, 191, 196, 197, 198, 200, 205, 206, 207, 209, 212, 213, 217, 218, 220, 223, 225, 226, 227, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 269, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 303, 305, 306, 307, 310, 313, 317, 319, 320, 326, 332, 334, 335, 337, 338, 339, 340, 341, 342, 351, 352, 353, 354, 355, 356, 372, 374, 380, 385, 386, 387, 390, 400, 402, 403, 404, 408, 409, 410, 413, 414, 415, 416, 417, 419, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "occur": [1, 8, 15, 56, 62, 63, 66, 73, 115, 118, 122, 124, 129, 130, 142, 143, 150, 151, 168, 177, 189, 200, 205, 232, 238, 294, 299, 300, 303, 304, 305, 306, 307, 329, 417, 430, 433], "serial": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 233, 235], "parallel": [1, 3, 8, 115, 118, 121, 122, 123, 129, 130, 142, 143, 144, 145, 150, 151, 156, 226, 232, 258, 262, 317, 401, 402, 403, 404, 414, 415, 426, 427, 432], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 46, 64, 173, 176, 209, 240, 258, 262, 400, 403, 406, 413, 414, 415, 416, 417, 421, 423, 426, 427, 430], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 133, 136, 139, 142, 143, 144, 145, 147, 150, 151, 152, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 402, 403, 404, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 426, 427, 430, 433], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 52, 54, 59, 71, 72, 73, 83, 119, 137, 142, 150, 224, 233, 402, 403, 404, 413, 414, 415, 432, 433], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 240, 403, 406, 415, 421, 432], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 37, 39, 52, 54, 63, 72, 83, 94, 101, 102, 133, 144, 145, 256, 260, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 408, 410, 415, 419, 430, 432], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 53, 57, 58, 61, 67, 68, 94, 101, 102, 113, 114, 116, 117, 121, 123, 124, 126, 127, 128, 137, 138, 142, 147, 151, 224, 233, 235, 258, 262, 268, 278, 279, 335, 392, 406, 408, 409, 413, 418, 422, 426, 427, 428], "aggreg": [1, 3, 27, 56, 94, 107, 144, 145, 168, 197, 242, 243, 245, 246, 309, 409, 427], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 73, 74, 94, 96, 100, 101, 102, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 156, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 240, 255, 256, 258, 260, 262, 263, 268, 281, 287, 298, 300, 305, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 392, 409, 414, 416, 418, 419, 422, 423, 428, 429, 432, 433], "final": [1, 2, 3, 4, 21, 41, 52, 54, 59, 60, 73, 219, 232, 237, 255, 256, 258, 260, 262, 268, 279, 301, 308, 352, 385, 408, 413, 414, 415, 417, 422, 423, 426, 427, 428, 433], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 240, 402, 406, 413, 414, 415, 421, 432], "sever": [1, 2, 3, 8, 27, 38, 42, 46, 56, 57, 61, 66, 72, 115, 118, 122, 129, 130, 142, 143, 150, 151, 177, 179, 197, 226, 235, 337, 413, 415, 417, 422, 423, 430, 433], "gather": [1, 3, 18, 20, 21, 41, 72, 83, 87, 89, 94, 101, 109, 198, 205, 267, 270, 275, 335, 351, 394, 407, 414, 415, 416, 421, 426, 427, 428, 430, 432, 433], "continu": [1, 2, 3, 9, 28, 31, 41, 74, 75, 76, 102, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 154, 155, 161, 169, 194, 219, 227, 245, 246, 247, 248, 278, 279, 309, 314, 318, 341, 352, 357, 365, 408, 413, 415, 419, 426, 427, 430], "concomitantli": [1, 115, 118, 122, 129, 130, 142, 143, 150, 151], "network": [1, 4, 8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 235, 242, 243, 245, 246, 247, 248, 251, 253, 254, 260, 263, 268, 269, 270, 272, 273, 274, 276, 278, 280, 282, 283, 284, 289, 295, 296, 297, 298, 306, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 356, 399, 400, 408, 409, 410, 417, 420, 423, 425, 428, 433], "impli": [1, 73, 433], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 60, 61, 66, 94, 96, 99, 113, 114, 115, 118, 122, 129, 130, 142, 143, 148, 149, 150, 151, 180, 194, 197, 204, 219, 224, 225, 226, 229, 231, 235, 256, 257, 258, 260, 261, 262, 268, 270, 272, 306, 317, 318, 319, 320, 326, 329, 340, 342, 392, 399, 408, 410, 413, 414, 415, 425, 428, 430, 432], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 85, 88, 94, 101, 115, 118, 121, 122, 123, 124, 129, 130, 142, 143, 147, 150, 151, 156, 196, 200, 213, 224, 226, 228, 233, 235, 238, 258, 262, 263, 268, 307, 319, 326, 334, 337, 340, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 428, 429, 430, 433], "slightli": [1, 23, 409, 416, 417, 426, 428, 429, 430, 433], "lag": [1, 413, 414, 415], "therefor": [1, 2, 3, 7, 53, 58, 67, 68, 115, 118, 122, 129, 130, 142, 143, 150, 151, 209, 337, 350, 417, 420, 426, 433], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 176], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 38, 41, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 83, 85, 87, 89, 94, 96, 101, 102, 107, 109, 110, 115, 118, 122, 129, 130, 133, 136, 139, 142, 143, 144, 145, 150, 151, 164, 167, 168, 169, 170, 173, 176, 188, 196, 204, 209, 212, 217, 218, 219, 220, 221, 225, 226, 228, 231, 232, 235, 237, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 276, 278, 279, 298, 303, 306, 307, 316, 317, 318, 319, 320, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 409, 410, 413, 414, 415, 417, 418, 425, 426, 427, 428, 430, 433], "asynchron": [1, 9, 15, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306, 317, 402, 413, 414, 415], "off": [1, 2, 4, 259, 288, 299, 340, 370, 385, 395, 408, 410, 413, 414, 415, 419, 420, 426, 427, 429, 432, 433], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 87, 89, 94, 96, 101, 109, 115, 118, 121, 122, 123, 128, 129, 130, 142, 143, 144, 145, 150, 151, 152, 154, 156, 176, 183, 187, 191, 200, 218, 225, 226, 232, 235, 252, 256, 258, 260, 262, 269, 271, 295, 297, 298, 300, 304, 317, 325, 327, 333, 337, 385, 408, 409, 410, 413, 414, 415, 416, 418, 419, 421, 422, 426, 427, 428, 429, 430, 433], "remot": [1, 2, 18, 19, 20, 21, 142, 150, 433], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 41, 60, 66, 73, 107, 113, 114, 115, 118, 122, 124, 125, 127, 128, 129, 130, 134, 135, 136, 137, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 169, 170, 172, 173, 176, 179, 181, 183, 184, 187, 188, 189, 194, 196, 197, 202, 206, 207, 212, 213, 214, 217, 218, 220, 221, 224, 227, 233, 235, 239, 240, 241, 258, 262, 265, 279, 302, 317, 370, 372, 394, 408, 413, 415, 416, 419, 420, 421, 422, 423, 429, 430, 432], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 184, 213, 338, 352, 353, 354, 355, 356, 409, 413, 415, 419, 420, 421], "synchronis": [1, 119, 426, 427], "either": [1, 2, 5, 22, 25, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 198, 217, 218, 235, 312, 335, 342, 343, 376, 410, 413, 414, 416, 426, 429, 430, 432, 433], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 413, 427, 432], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 93, 94, 96, 97, 99, 100, 101, 102, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 167, 168, 169, 170, 172, 173, 175, 176, 177, 180, 181, 184, 186, 189, 191, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 211, 212, 213, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 254, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 286, 287, 288, 293, 294, 295, 296, 297, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 352, 353, 354, 355, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 379, 380, 383, 384, 385, 387, 390, 404, 408, 409, 410, 413, 414, 415, 416, 417, 419, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "second": [1, 2, 3, 8, 23, 41, 42, 43, 44, 45, 107, 142, 173, 221, 256, 258, 260, 262, 300, 319, 334, 337, 340, 372, 374, 377, 379, 389, 413, 415, 421, 426, 427, 428, 430, 432, 433], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 93, 101, 102, 109, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 164, 167, 169, 173, 180, 183, 184, 185, 187, 188, 189, 194, 196, 197, 202, 203, 204, 206, 207, 209, 213, 216, 217, 219, 222, 225, 226, 227, 229, 231, 233, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 268, 269, 271, 272, 277, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 387, 392, 398, 408, 413, 414, 415, 416, 417, 426, 427, 428, 429, 432], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 88, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 191, 196, 221, 223, 227, 235, 251, 252, 257, 261, 295, 296, 297, 299, 300, 301, 306, 312, 317, 319, 321, 322, 327, 334, 337, 339, 350, 351, 352, 353, 354, 355, 390, 406, 409, 410, 413, 414, 415, 416, 417, 418, 419, 425, 426, 427, 428, 433], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 71, 72, 73, 74, 84, 85, 87, 88, 89, 92, 94, 96, 101, 102, 109, 115, 117, 118, 119, 121, 122, 123, 129, 130, 136, 142, 143, 150, 151, 156, 161, 168, 200, 219, 226, 233, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 313, 318, 320, 322, 325, 326, 333, 335, 338, 340, 342, 343, 350, 352, 353, 354, 355, 370, 372, 376, 380, 385, 394, 395, 396, 400, 402, 403, 408, 409, 410, 413, 415, 416, 417, 418, 419, 428, 430, 433], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 93, 101, 109, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 161, 167, 169, 173, 180, 183, 184, 185, 187, 188, 189, 194, 197, 202, 204, 206, 207, 209, 213, 216, 217, 219, 225, 226, 227, 229, 231, 235, 239, 241, 251, 256, 257, 258, 260, 261, 262, 265, 271, 272, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 370, 408, 413, 414, 415, 416, 426, 427, 428, 429, 432], "slower": [1, 426], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 56, 73, 94, 101, 102, 105, 107, 115, 118, 122, 126, 129, 130, 140, 141, 142, 143, 147, 150, 151, 184, 197, 198, 207, 237, 248, 258, 260, 262, 263, 290, 294, 299, 306, 307, 311, 335, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 407, 408, 409, 413, 414, 415, 417, 418, 420, 426, 427, 428, 430, 432, 433], "one": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 92, 93, 94, 96, 97, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 169, 170, 173, 176, 179, 181, 183, 185, 186, 187, 194, 197, 199, 200, 204, 209, 212, 215, 216, 218, 219, 220, 225, 226, 228, 231, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 269, 270, 273, 274, 275, 276, 277, 279, 281, 282, 283, 285, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 347, 350, 352, 353, 354, 355, 359, 360, 372, 374, 383, 385, 386, 390, 394, 404, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 433], "cuda": [1, 2, 3, 7, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 113, 114, 115, 118, 122, 124, 125, 126, 129, 130, 142, 143, 150, 151, 180, 196, 203, 204, 219, 225, 226, 229, 231, 235, 256, 257, 260, 261, 306, 382, 413, 414, 415, 416, 426, 427, 429, 433], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 56, 58, 67, 68, 69, 73, 89, 96, 97, 109, 113, 114, 127, 128, 142, 150, 151, 177, 179, 186, 195, 198, 199, 209, 212, 216, 217, 224, 233, 256, 260, 262, 268, 271, 272, 294, 299, 303, 304, 306, 307, 310, 319, 326, 334, 337, 347, 358, 404, 408, 409, 410, 413, 414, 415, 418, 420, 421, 426, 427, 428, 430, 432], "infer": [1, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 233, 258, 262, 271, 298, 303, 307, 324, 370, 413, 415, 417, 421, 423, 430, 432], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 94, 101, 102, 113, 114, 115, 116, 117, 118, 121, 122, 127, 128, 129, 130, 136, 137, 138, 142, 143, 150, 151, 156, 180, 194, 199, 200, 216, 224, 225, 226, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 307, 308, 309, 310, 313, 320, 326, 340, 372, 379, 385, 402, 403, 404, 407, 408, 409, 410, 413, 414, 415, 416, 419, 420, 421, 422, 423, 426, 427, 428, 432], "dispatch": [1, 3, 18, 19, 20, 21, 56, 66, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 290, 302, 372, 413, 433], "avail": [1, 2, 3, 4, 6, 21, 53, 58, 67, 68, 94, 100, 101, 102, 113, 114, 116, 117, 126, 127, 128, 134, 135, 140, 141, 142, 144, 145, 147, 152, 153, 154, 155, 169, 172, 175, 194, 196, 252, 281, 303, 307, 335, 372, 402, 403, 413, 414, 415, 416, 417, 418, 419, 426, 427, 428, 430, 433], "speed": [1, 2, 4, 8, 30, 115, 118, 122, 129, 130, 142, 143, 150, 151, 409, 413, 414, 415, 416, 426, 427, 428, 430, 432], "avoid": [1, 2, 3, 27, 38, 46, 56, 57, 61, 66, 87, 89, 101, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 166, 176, 194, 224, 226, 233, 235, 238, 287, 294, 306, 311, 319, 320, 334, 337, 340, 393, 415, 417, 427], "oom": [1, 3, 52, 54, 59, 73, 87, 89, 109], "choic": [1, 2, 48, 142, 184, 408, 409, 413, 414, 420, 426, 427], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 46, 48, 53, 56, 57, 58, 60, 61, 63, 66, 67, 68, 71, 72, 85, 87, 89, 94, 96, 101, 102, 107, 109, 115, 118, 119, 120, 122, 123, 129, 130, 133, 137, 142, 143, 144, 145, 150, 151, 154, 172, 173, 176, 181, 183, 187, 197, 198, 207, 224, 228, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 269, 270, 271, 273, 274, 277, 279, 280, 282, 283, 285, 289, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 318, 319, 320, 333, 334, 335, 337, 338, 340, 342, 343, 352, 353, 354, 355, 356, 370, 387, 390, 402, 403, 404, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 430, 432, 433], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 62, 63, 66, 67, 71, 72, 74, 75, 76, 77, 78, 93, 102, 115, 118, 122, 126, 129, 130, 139, 142, 143, 150, 151, 168, 169, 176, 191, 216, 219, 228, 233, 258, 262, 298, 408, 409, 414, 427], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 41, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 85, 87, 88, 89, 90, 93, 94, 96, 101, 107, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 184, 194, 221, 232, 233, 235, 237, 239, 240, 265, 279, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 379, 406, 410, 413, 415, 416, 419, 421, 423, 426, 427, 429, 433], "while": [1, 2, 3, 7, 8, 23, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 209, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 325, 333, 334, 337, 408, 409, 413, 415, 416, 419, 421, 422, 426, 427, 428, 429, 430, 432], "wait": [1, 20, 21, 22, 152, 416, 428], "also": [1, 2, 3, 8, 9, 11, 14, 15, 23, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 66, 67, 71, 73, 83, 87, 88, 89, 94, 96, 101, 102, 107, 109, 115, 118, 122, 128, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 164, 166, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 186, 188, 189, 190, 192, 194, 195, 196, 200, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 242, 243, 256, 260, 263, 283, 302, 303, 308, 309, 310, 317, 318, 320, 321, 322, 324, 325, 326, 331, 333, 337, 340, 342, 352, 359, 360, 370, 372, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 430, 432, 433], "impact": [1, 2, 3, 128, 183, 187, 238, 317, 319, 334, 337, 339, 414, 416, 426, 427], "memori": [1, 3, 8, 21, 27, 30, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 85, 87, 88, 92, 115, 118, 119, 122, 126, 129, 130, 142, 143, 150, 151, 176, 180, 204, 219, 225, 226, 229, 231, 233, 235, 250, 260, 261, 306, 404, 406, 410, 413, 414, 416, 426, 430, 432], "manag": [1, 8, 115, 118, 122, 129, 130, 142, 143, 150, 151, 240, 258, 262, 293, 348, 349, 352, 353, 354, 355, 380, 385, 408, 416, 417, 420, 432], "kei": [1, 2, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 93, 94, 96, 99, 101, 102, 107, 115, 118, 122, 127, 128, 129, 130, 142, 143, 144, 145, 150, 151, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 200, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 239, 241, 251, 252, 255, 258, 262, 264, 265, 279, 281, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 370, 372, 384, 385, 386, 388, 389, 390, 394, 409, 410, 413, 415, 416, 417, 418, 420, 425, 426, 427, 428, 430, 432, 433], "control": [1, 3, 5, 8, 16, 23, 24, 31, 32, 33, 39, 58, 63, 67, 68, 94, 96, 101, 115, 116, 117, 118, 122, 128, 129, 130, 133, 142, 143, 144, 145, 150, 151, 167, 186, 245, 246, 247, 248, 258, 262, 264, 265, 279, 283, 290, 306, 307, 308, 317, 319, 320, 334, 335, 337, 341, 352, 357, 365, 370, 380, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 426, 427, 428, 430, 432], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 88, 96, 99, 100, 107, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 153, 154, 155, 156, 176, 177, 183, 187, 192, 194, 196, 197, 199, 200, 204, 205, 207, 217, 219, 220, 223, 225, 226, 227, 229, 233, 235, 236, 251, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 276, 278, 288, 295, 296, 297, 298, 302, 303, 306, 307, 308, 309, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 370, 372, 381, 386, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 433], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 414, 427], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 53, 54, 57, 58, 60, 61, 67, 68, 72, 83, 85, 90, 94, 96, 99, 101, 115, 118, 119, 122, 128, 129, 130, 142, 143, 144, 145, 150, 151, 172, 173, 176, 179, 183, 187, 189, 191, 192, 194, 198, 202, 214, 216, 219, 221, 223, 224, 226, 227, 228, 233, 235, 238, 240, 241, 258, 262, 269, 352, 354, 355, 385, 390, 409, 413, 414, 415, 416, 419, 420, 421, 423, 426, 427, 428, 430, 433], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 237, 302, 307, 413, 417, 421, 433], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 99, 107, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 224, 272, 337, 342, 351, 352, 353, 354, 355, 356, 371, 407, 408, 409, 410, 413, 414, 415, 416, 419, 421, 422, 427, 430, 433], "same": [1, 2, 3, 4, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 100, 101, 102, 105, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 137, 138, 142, 143, 144, 145, 147, 150, 151, 169, 176, 183, 186, 187, 192, 194, 197, 198, 199, 200, 216, 224, 225, 226, 233, 235, 236, 242, 243, 257, 258, 261, 262, 263, 266, 267, 268, 269, 279, 287, 298, 310, 318, 320, 333, 335, 338, 340, 342, 343, 347, 409, 413, 414, 415, 418, 419, 421, 425, 426, 427, 429, 430, 433], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 93, 94, 96, 97, 99, 100, 101, 102, 107, 109, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 161, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 281, 282, 283, 285, 286, 287, 288, 293, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 400, 404, 409, 410, 413, 414, 415, 416, 419, 426, 429, 430, 432, 433], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 177, 183, 187, 200, 205, 218, 226, 235, 238, 258, 259, 262, 288, 325, 333, 342, 370, 380, 385, 408, 414, 416, 426, 427, 428, 430], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 183, 187, 194, 200, 219, 220, 223, 227, 262, 278, 303, 307, 308, 309, 392, 402, 403, 408, 413, 414, 418, 419, 427, 428, 433], "choos": [1, 11, 48, 115, 133, 258, 262, 337, 406, 409, 413, 414, 415, 417, 426, 427, 430, 432], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 66, 71, 73, 94, 101, 102, 113, 114, 115, 118, 121, 122, 123, 127, 128, 129, 130, 136, 139, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 164, 172, 176, 196, 204, 229, 233, 235, 242, 243, 256, 258, 260, 262, 263, 300, 303, 304, 305, 316, 317, 318, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 372, 390, 408, 409, 410, 413, 414, 415, 416, 417, 420, 421, 425, 426, 427, 428, 430, 432, 433], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 393, 413, 415, 432], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 46, 176, 192, 235, 237, 255, 279, 302, 371, 372, 374, 377, 379, 383, 385, 390, 393, 394, 413, 414, 415, 416, 419, 426, 427, 430, 432, 433], "call": [1, 2, 3, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 87, 88, 89, 90, 94, 95, 96, 100, 101, 103, 105, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 139, 140, 141, 142, 143, 147, 150, 151, 152, 153, 156, 165, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 269, 270, 271, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 306, 307, 309, 310, 313, 319, 320, 334, 335, 337, 340, 342, 351, 352, 353, 354, 355, 370, 371, 374, 385, 409, 410, 414, 415, 416, 417, 418, 419, 421, 422, 426, 427, 428, 430, 432, 433], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 173, 176, 209, 258, 262, 393, 413, 414, 415, 416, 417, 421, 423, 426, 427, 430, 432], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 37, 38, 39, 41, 42, 44, 46, 47, 56, 57, 58, 60, 61, 63, 65, 66, 67, 73, 94, 96, 99, 101, 102, 104, 107, 115, 118, 119, 122, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 169, 184, 195, 197, 198, 204, 209, 212, 217, 218, 219, 220, 224, 225, 231, 233, 235, 236, 237, 252, 255, 256, 257, 258, 260, 262, 268, 269, 273, 280, 281, 289, 293, 299, 300, 305, 307, 309, 358, 361, 362, 363, 364, 366, 367, 368, 369, 372, 385, 387, 402, 403, 409, 413, 414, 415, 416, 419, 420, 421, 423, 426, 427, 428, 429, 430, 432, 433], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 393, 413, 414, 417, 423], "rand_step": [1, 2, 3, 35, 64, 115, 116, 117, 118, 119, 121, 122, 123, 129, 130, 131, 132, 136, 137, 138, 142, 143, 150, 151, 195, 219, 233, 428, 432, 433], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 413], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 413, 414, 415], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 46, 47, 65, 67, 73, 93, 94, 101, 102, 107, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 176, 205, 217, 224, 235, 239, 262, 265, 279, 337, 352, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 406, 409, 413, 414, 415, 416, 418, 421, 423, 428, 432, 433], "pad": [1, 2, 3, 23, 55, 69, 176, 184, 223, 242, 243, 245, 246, 262, 266, 267, 268, 387], "along": [1, 2, 3, 14, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 94, 96, 101, 102, 107, 109, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 175, 176, 177, 198, 200, 202, 205, 212, 216, 222, 235, 262, 263, 266, 267, 272, 299, 303, 306, 307, 320, 335, 342, 413, 414, 416, 418, 420, 426, 427, 428, 430, 432], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 86, 93, 94, 97, 107, 108, 111, 112, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 235, 264, 306, 316, 327, 390, 407, 414, 415, 425, 426, 427, 428, 430, 432, 433], "boolean": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 94, 101, 102, 122, 168, 172, 205, 217, 266, 267, 279, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 410, 416], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 41, 48, 63, 64, 66, 67, 73, 88, 115, 116, 117, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 154, 155, 192, 205, 221, 233, 235, 252, 266, 267, 281, 287, 299, 300, 304, 305, 346, 352, 387, 408, 413, 415, 416, 417, 418, 419, 420, 426, 427], "valid": [1, 2, 3, 23, 52, 54, 55, 72, 73, 83, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 157, 172, 205, 224, 226, 235, 237, 242, 243, 263, 266, 267, 279, 319, 326, 334, 337, 340, 352, 353, 354, 355, 387, 410, 417, 433], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 385, 406, 408, 413, 414], "strategi": [1, 2, 3, 16, 99, 133, 169, 255, 267, 275, 408, 410, 413, 414, 417, 419, 426, 427, 430, 432], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 80, 89, 96, 101, 102, 115, 118, 122, 128, 129, 130, 136, 142, 143, 144, 145, 150, 151, 154, 157, 173, 175, 176, 181, 188, 196, 217, 218, 219, 224, 226, 232, 233, 235, 236, 237, 242, 243, 258, 262, 266, 267, 268, 269, 278, 299, 303, 304, 307, 310, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 343, 350, 372, 390, 400, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433], "organ": [1, 2, 428, 430], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 88, 93, 94, 102, 115, 118, 121, 122, 123, 129, 130, 142, 143, 147, 150, 151, 168, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 187, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 293, 298, 300, 302, 305, 307, 310, 313, 314, 322, 327, 342, 350, 370, 372, 408, 409, 414, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432], "differ": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 99, 113, 114, 115, 118, 119, 122, 127, 128, 129, 130, 133, 142, 143, 144, 145, 150, 151, 172, 176, 184, 185, 186, 197, 200, 207, 216, 224, 226, 228, 235, 236, 252, 256, 257, 258, 260, 261, 262, 263, 265, 268, 269, 270, 281, 307, 333, 335, 337, 346, 352, 353, 354, 358, 359, 360, 385, 390, 392, 402, 403, 408, 409, 410, 413, 414, 415, 417, 418, 420, 422, 425, 426, 427, 428, 429, 430, 432, 433], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 46, 53, 56, 57, 61, 66, 67, 93, 94, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 169, 197, 235, 270, 303, 317, 319, 332, 334, 335, 337, 372, 374, 390, 407, 408, 413, 414, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "tabl": [1, 27, 408, 414, 419], "summar": [1, 3, 428], "what": [1, 3, 8, 11, 33, 53, 71, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 167, 188, 219, 224, 304, 320, 331, 335, 342, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 426, 427, 428, 429, 430, 432, 433], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 41, 46, 56, 57, 58, 61, 66, 71, 72, 94, 100, 101, 115, 118, 122, 129, 130, 136, 139, 142, 143, 150, 151, 156, 169, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 193, 195, 196, 197, 198, 200, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 256, 257, 258, 260, 261, 262, 268, 269, 279, 300, 306, 309, 317, 318, 319, 320, 321, 322, 324, 325, 326, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 347, 350, 394, 407, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 426, 427, 428, 430, 433], "n": [1, 2, 3, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 186, 191, 228, 235, 256, 257, 260, 265, 276, 278, 279, 302, 307, 317, 318, 326, 335, 351, 387, 410, 414, 416, 417, 430, 432, 433], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 52, 54, 56, 58, 59, 60, 61, 63, 66, 67, 68, 73, 87, 88, 107, 115, 194, 227, 256, 257, 260, 261, 268, 269, 271, 272, 280, 289, 310, 352, 353, 354, 355, 356, 358, 372, 414, 430], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 84, 93, 94, 96, 100, 101, 102, 107, 115, 118, 119, 121, 122, 129, 130, 137, 138, 142, 143, 150, 151, 156, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 187, 188, 189, 190, 192, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 231, 232, 233, 235, 236, 256, 258, 260, 262, 279, 299, 306, 317, 341, 352, 353, 354, 355, 356, 358, 372, 379, 390, 392, 404, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "p": [1, 2, 4, 96, 99, 119, 148, 149, 240, 241], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 46, 56, 57, 61, 66, 102, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 144, 145, 150, 151, 180, 183, 185, 187, 195, 204, 209, 213, 218, 219, 222, 224, 225, 226, 229, 231, 232, 235, 236, 256, 259, 260, 263, 268, 283, 287, 288, 306, 307, 309, 316, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 392, 402, 403, 404, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 433], "case": [1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 84, 85, 92, 93, 94, 96, 107, 115, 118, 121, 122, 129, 130, 142, 143, 150, 151, 156, 183, 185, 187, 195, 200, 219, 222, 226, 227, 236, 262, 263, 269, 270, 303, 306, 307, 309, 310, 316, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 372, 381, 392, 402, 403, 404, 406, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 422, 426, 427, 428, 430, 432, 433], "dimens": [1, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 58, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 94, 101, 102, 107, 109, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 142, 143, 150, 151, 154, 155, 169, 175, 176, 177, 184, 191, 198, 200, 202, 205, 212, 215, 216, 219, 222, 228, 233, 242, 243, 244, 249, 250, 258, 260, 262, 263, 266, 267, 268, 271, 272, 277, 280, 284, 285, 286, 287, 290, 299, 302, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 404, 406, 409, 413, 414, 415, 416, 418, 426, 427, 428, 430], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 84, 87, 96, 107, 113, 114, 115, 118, 119, 122, 127, 128, 129, 130, 133, 139, 142, 143, 144, 145, 147, 150, 151, 166, 167, 175, 176, 177, 198, 205, 212, 219, 220, 221, 224, 226, 233, 235, 241, 253, 256, 260, 262, 279, 293, 302, 307, 318, 319, 320, 326, 329, 333, 334, 335, 337, 338, 340, 342, 343, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 390, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 432, 433], "adapt": [1, 24, 170, 198, 217, 238, 334, 413, 417, 428], "equal": [1, 14, 15, 17, 27, 73, 94, 101, 102, 115, 137, 140, 141, 142, 150, 199, 200, 242, 243, 256, 258, 260, 262, 263, 267, 269, 341, 346, 381, 402, 403, 413, 415, 429], "introduc": [1, 2, 142, 150, 256, 258, 260, 262, 279, 413, 426], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 87, 89, 96, 107, 109, 113, 114, 115, 118, 121, 122, 123, 127, 128, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 156, 172, 204, 219, 226, 229, 235, 245, 258, 262, 285, 307, 308, 309, 372, 381, 393, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 430, 432, 433], "confus": [1, 25, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 96, 99, 100, 101, 102, 103, 105, 109, 115, 118, 121, 122, 123, 129, 130, 136, 142, 143, 150, 151, 179, 185, 186, 206, 213, 219, 222, 229, 233, 235, 240, 255, 256, 258, 262, 272, 293, 298, 300, 305, 307, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 370, 387, 402, 403, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 432, 433], "better": [1, 3, 8, 9, 14, 15, 23, 128, 258, 262, 409, 415, 418, 428, 432], "consist": [1, 2, 3, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 232, 235, 240, 243, 263, 413, 414, 415, 428, 429, 433], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 226, 303, 307, 413, 415, 417, 418, 419, 421, 426, 427, 428, 433], "keep": [1, 2, 3, 4, 7, 8, 15, 53, 58, 67, 68, 96, 100, 107, 115, 142, 150, 167, 200, 204, 231, 233, 235, 279, 372, 383, 390, 413, 414, 415, 416, 421, 422, 423, 427, 428, 430, 433], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 39, 63, 176, 204, 231, 318, 321, 324, 326, 338, 340, 342, 343, 409, 413, 414, 419, 420, 426, 427, 430, 433], "interchang": [1, 268, 269, 415, 418, 422, 429, 430], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 89, 94, 96, 97, 100, 101, 102, 109, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 156, 186, 199, 210, 221, 224, 226, 233, 235, 242, 243, 251, 256, 258, 262, 263, 268, 269, 300, 303, 307, 317, 319, 320, 321, 324, 325, 326, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 352, 385, 390, 409, 413, 414, 416, 417, 421, 426, 427, 428, 430, 433], "wherea": [1, 2, 22, 27, 38, 46, 56, 57, 61, 66, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 142, 143, 147, 150, 151, 186, 224, 226, 235, 320, 335, 340, 410, 422], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 93, 94, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 176, 194, 204, 219, 224, 226, 231, 233, 235, 240, 255, 258, 260, 262, 266, 267, 279, 303, 307, 320, 322, 325, 326, 340, 350, 352, 353, 354, 355, 356, 408, 413, 414, 415, 417, 418, 420, 421, 422, 426, 427, 428, 429], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 94, 101, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 205, 224, 235, 308, 309, 381, 390, 408, 409, 413, 414, 415, 421, 425, 432, 433], "doesn": [1, 4, 27, 38, 46, 56, 57, 61, 66, 107, 115, 118, 122, 129, 130, 137, 142, 143, 150, 151, 183, 187, 235, 236, 417, 418], "understood": [1, 413], "serv": [1, 18, 20, 21, 124, 430, 432, 433], "basi": [1, 107, 268, 430, 432], "we": [1, 2, 3, 5, 7, 9, 11, 23, 24, 27, 31, 38, 41, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 87, 100, 102, 107, 113, 114, 115, 118, 119, 122, 126, 127, 128, 129, 130, 142, 143, 150, 151, 156, 176, 196, 204, 207, 213, 224, 229, 232, 233, 235, 236, 239, 262, 268, 269, 270, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 372, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "anoth": [1, 2, 3, 8, 41, 66, 71, 88, 94, 101, 115, 118, 121, 122, 123, 126, 129, 130, 142, 143, 150, 151, 173, 181, 183, 185, 187, 219, 225, 263, 303, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 409, 413, 415, 416, 417, 419, 420, 425, 426, 427, 428, 433], "wise": [1, 198], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 88, 93, 94, 101, 102, 115, 118, 122, 126, 129, 130, 137, 142, 143, 147, 150, 151, 173, 176, 180, 194, 204, 216, 219, 224, 225, 226, 229, 231, 235, 240, 258, 262, 263, 270, 290, 306, 307, 308, 309, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 370, 372, 374, 408, 410, 413, 414, 415, 416, 418, 419, 420, 422, 426, 427, 428, 430, 432, 433], "op": [1, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 199, 232, 237, 240, 255, 372, 392], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 93, 94, 102, 107, 115, 118, 122, 129, 130, 142, 143, 144, 145, 147, 150, 151, 156, 167, 181, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 299, 300, 302, 304, 305, 310, 313, 370, 372, 409, 413, 414, 415, 416, 418, 419, 420, 426, 428, 429, 430, 432, 433], "goal": [1, 3, 4, 130, 218, 413, 414, 415, 416, 427, 428], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 414], "explicitli": [1, 2, 3, 4, 30, 72, 84, 85, 92, 96, 172, 278, 303, 380, 409, 414, 416, 421, 426, 427, 430], "do": [1, 2, 3, 4, 7, 48, 115, 118, 122, 129, 130, 142, 143, 150, 151, 154, 155, 167, 169, 205, 219, 224, 232, 233, 258, 262, 269, 271, 296, 307, 335, 352, 372, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 432, 433], "deepcopi": [1, 270, 335, 426], "structur": [1, 3, 7, 41, 48, 52, 53, 54, 58, 59, 60, 67, 68, 71, 72, 73, 88, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 183, 187, 219, 268, 279, 317, 326, 337, 340, 352, 353, 354, 355, 356, 406, 409, 413, 415, 416, 418, 421, 426, 427, 428, 429], "place": [1, 2, 3, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 87, 89, 96, 99, 101, 109, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 154, 155, 168, 172, 180, 188, 204, 219, 225, 226, 229, 231, 232, 233, 235, 270, 298, 302, 306, 387, 392, 393, 409, 414, 415, 419, 422, 426, 427, 428, 430], "instanti": [1, 2, 3, 14, 15, 21, 52, 53, 54, 58, 59, 67, 68, 71, 73, 93, 94, 126, 128, 172, 194, 219, 269, 352, 353, 354, 355, 356, 370, 413, 414, 419, 420, 422, 426, 427, 428, 430, 433], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 96, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 130, 134, 135, 136, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 157, 159, 161, 165, 167, 169, 175, 176, 179, 180, 183, 185, 187, 190, 196, 199, 200, 204, 212, 214, 216, 219, 220, 225, 226, 229, 231, 233, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 269, 270, 273, 274, 277, 279, 282, 283, 285, 290, 293, 298, 300, 302, 305, 306, 307, 309, 310, 313, 314, 317, 318, 320, 329, 333, 335, 337, 338, 339, 340, 342, 343, 347, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 386, 390, 393, 402, 403, 404, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 432, 433], "graph": [1, 3, 4, 8, 56, 66, 113, 114, 127, 128, 348, 349, 413, 417, 428], "reli": [1, 2, 3, 11, 23, 57, 61, 219, 256, 257, 258, 260, 261, 262, 317, 337, 409, 413, 415, 417, 419, 421, 428, 433], "third": [1, 200, 221, 300, 426, 427], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 52, 54, 59, 63, 73, 413, 414, 415, 416, 417, 420, 421, 426, 427, 428, 432, 433], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 176, 196, 317, 319, 334, 335, 337, 339, 409, 413, 414, 416, 426, 427, 428], "chart": 1, "show": [1, 2, 11, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 269, 372, 413, 415, 416, 417, 426, 427, 428, 430, 432], "decis": [1, 2, 3, 244, 249, 277, 298, 323, 336, 408, 416, 418, 419, 426, 427, 430, 433], "simplest": [1, 56, 66, 107, 310, 413, 415, 416, 419, 426, 427, 430, 433], "scenario": [1, 2, 134, 135, 142, 154, 155, 224, 370, 413, 419, 426, 427, 428], "transit": [1, 27, 38, 46, 56, 57, 61, 66, 94, 102, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 238, 240, 312, 413, 416, 418, 419, 421, 426, 428, 430], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 105, 107, 109, 115, 118, 122, 129, 130, 136, 139, 142, 143, 150, 151, 158, 165, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 233, 235, 237, 239, 250, 255, 259, 265, 266, 267, 275, 277, 278, 279, 282, 287, 288, 291, 294, 299, 300, 301, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 324, 334, 336, 337, 342, 343, 381, 387, 390, 393, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 421, 423, 426, 427, 429, 432, 433], "attent": [1, 2, 8, 176, 413, 416, 433], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 94, 96, 101, 102, 115, 118, 122, 129, 130, 136, 140, 141, 142, 143, 150, 151, 152, 153, 167, 180, 184, 186, 194, 200, 204, 219, 223, 225, 226, 227, 229, 231, 233, 235, 237, 239, 241, 252, 253, 255, 256, 258, 260, 262, 265, 270, 281, 285, 294, 299, 300, 302, 305, 306, 307, 308, 309, 311, 316, 321, 322, 324, 335, 351, 352, 353, 354, 355, 356, 358, 382, 385, 400, 408, 409, 410, 413, 414, 415, 418, 419, 420, 421, 422, 427, 428, 433], "built": [1, 2, 3, 5, 7, 96, 113, 114, 121, 127, 128, 139, 140, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350, 398, 400, 401, 404, 413, 414, 415, 416, 417, 420, 422, 428, 430, 433], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 107, 173, 191, 387, 406, 416, 427], "suffici": [1, 3, 4, 413], "preprocess": [1, 2, 72, 225, 414, 417], "popul": [1, 2, 3, 14, 15, 16, 53, 58, 65, 67, 68, 96, 129, 195, 219, 250, 270, 335, 413, 415, 416, 419, 421, 428, 430], "replaybuff": [1, 2, 3, 14, 15, 16, 35, 53, 64, 67, 68, 87, 88, 93, 94, 95, 96, 101, 102, 111, 176, 205, 209, 235, 322, 327, 350, 398, 400, 406, 415, 417, 421, 423, 426, 427, 429, 430, 432], "lazytensorstorag": [1, 2, 53, 58, 66, 67, 68, 93, 101, 102, 107, 209, 235, 415, 417, 423, 426, 427, 430], "lambda": [1, 2, 14, 15, 16, 17, 21, 22, 41, 56, 58, 66, 73, 107, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 166, 173, 181, 194, 196, 219, 227, 235, 236, 241, 290, 299, 302, 303, 304, 328, 330, 331, 342, 352, 355, 363, 364, 368, 369, 370, 400, 409, 413, 414, 417, 426, 427, 429, 430, 432, 433], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 101, 107, 173, 258, 262, 263, 278, 370, 415, 426, 427], "extend": [1, 2, 8, 35, 41, 53, 56, 58, 64, 67, 68, 73, 86, 87, 90, 93, 94, 96, 97, 101, 102, 105, 107, 108, 111, 112, 169, 175, 209, 225, 235, 238, 335, 387, 409, 410, 413, 414, 415, 416, 417, 421, 423, 426, 427, 429, 430, 432], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 94, 96, 101, 102, 169, 175, 176, 430], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 53, 54, 58, 59, 67, 68, 73, 101, 107, 126, 176, 270, 409, 421, 426, 427], "achiev": [1, 2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 126, 129, 130, 142, 143, 150, 151, 168, 218, 235, 241, 303, 387, 410, 413, 414, 415, 416, 417, 426, 427, 428, 430, 432, 433], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 88, 90, 96, 107, 115, 118, 119, 122, 126, 129, 130, 142, 143, 144, 150, 151, 154, 155, 161, 167, 173, 176, 184, 194, 204, 224, 225, 226, 229, 232, 233, 235, 242, 243, 245, 246, 247, 248, 249, 250, 254, 258, 262, 263, 264, 268, 269, 298, 307, 314, 320, 322, 327, 338, 340, 350, 372, 387, 394, 395, 396, 400, 402, 403, 408, 413, 414, 415, 416, 417, 419, 422, 426, 427, 428, 429, 430, 432, 433], "multidimension": [1, 2, 67, 93, 94, 430], "slicesampl": [1, 2, 94, 102, 176, 430], "sampler": [1, 2, 53, 58, 67, 68, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107, 109, 176, 205, 278, 322, 327, 350, 413, 415, 426, 427, 430], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 34, 39, 44, 45, 50, 51, 63, 72, 107, 113, 114, 142, 150, 176, 209, 229, 237, 275, 306, 310, 341, 346, 376, 413, 414, 430, 433], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 90, 94, 96, 101, 102, 103, 104, 105, 107, 109, 113, 115, 118, 119, 122, 127, 129, 130, 140, 142, 143, 144, 145, 147, 150, 151, 152, 154, 164, 169, 172, 173, 176, 179, 181, 188, 192, 194, 196, 198, 200, 202, 213, 216, 218, 219, 220, 223, 224, 226, 227, 228, 233, 235, 242, 243, 252, 258, 262, 263, 266, 267, 268, 269, 281, 294, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 409, 413, 414, 415, 416, 419, 425, 428, 430], "ensur": [1, 2, 3, 27, 38, 46, 53, 56, 57, 61, 66, 67, 73, 93, 94, 100, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 176, 184, 204, 217, 226, 229, 233, 235, 258, 262, 299, 408, 414, 415, 428, 430], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 87, 88, 89, 93, 96, 101, 107, 109, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 161, 167, 169, 173, 175, 177, 183, 184, 187, 188, 189, 194, 196, 197, 200, 202, 206, 207, 209, 213, 216, 217, 219, 222, 227, 233, 234, 235, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 275, 276, 277, 278, 279, 280, 281, 286, 287, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 381, 387, 390, 400, 408, 409, 413, 414, 415, 416, 417, 419, 420, 423, 425, 426, 427, 429, 430, 432, 433], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 48, 225, 259, 287, 288, 316, 407, 413, 414, 415, 416, 417, 420, 426, 427, 429, 433], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 61, 66, 71, 103, 107, 115, 118, 122, 126, 129, 130, 133, 142, 143, 144, 145, 150, 151, 176, 179, 181, 191, 197, 204, 207, 220, 224, 225, 226, 231, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 271, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 303, 304, 305, 306, 310, 313, 316, 326, 339, 340, 351, 356, 372, 390, 404, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 432, 433], "dimension": [1, 53, 57, 58, 66, 67, 68, 186, 258, 262, 352, 357, 365, 409, 427], "num_slic": [1, 2, 94, 101, 102, 430], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 41, 44, 45, 46, 50, 53, 56, 58, 60, 61, 63, 64, 66, 67, 68, 87, 88, 89, 96, 101, 102, 109, 113, 114, 115, 116, 117, 118, 122, 127, 128, 129, 130, 131, 132, 133, 136, 138, 142, 143, 148, 149, 150, 151, 169, 170, 172, 173, 176, 181, 188, 209, 216, 217, 218, 224, 233, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 260, 261, 263, 265, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 370, 371, 408, 412, 413, 414, 415, 416, 422, 426, 427, 428, 430, 431, 432, 433], "trajectory_kei": [1, 23, 101, 102], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 64, 173, 209, 421, 430], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 173, 176, 209, 390, 393, 400, 410, 413, 414, 415, 416, 417, 421, 423, 426, 427, 430, 432], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 101, 176, 177, 198, 202, 215, 216, 219, 228, 233, 261, 285, 290, 302, 404, 409, 414, 415, 417, 426, 428, 430], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 87, 89, 93, 94, 107, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 198, 235, 302], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 107, 115, 118, 122, 129, 130, 137, 143, 144, 145, 147, 150, 151, 224, 258, 262, 370, 401, 406, 413, 414, 415, 418, 425, 432, 433], "make_env": [1, 3, 142, 150, 155, 224, 233, 370, 395, 396, 413, 414, 432, 433], "regular": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 93, 99, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 233, 235, 238, 240, 251, 258, 262, 281, 300, 304, 305, 306, 307, 327, 337, 392, 406, 410, 413, 414, 417, 418, 419, 423, 430, 433], "behav": [1, 3, 124, 136, 256, 260, 275, 325, 333, 335, 417, 429], "accordingli": [1, 2, 3, 94, 181, 198, 217, 218, 260, 304, 416], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 73, 87, 89, 94, 96, 101, 102, 107, 109, 115, 116, 117, 118, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 161, 170, 172, 173, 176, 180, 181, 184, 186, 188, 189, 194, 196, 200, 202, 204, 206, 207, 209, 212, 213, 216, 217, 218, 219, 222, 224, 225, 226, 227, 229, 231, 235, 236, 238, 239, 241, 242, 243, 245, 246, 247, 249, 252, 254, 256, 257, 258, 260, 261, 262, 263, 265, 268, 269, 270, 275, 278, 280, 290, 294, 295, 296, 297, 299, 300, 303, 305, 306, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 389, 408, 410, 412, 413, 414, 415, 416, 418, 419, 421, 422, 426, 427, 428, 430, 431, 432, 433], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 93, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 172, 188, 194, 299, 306, 419, 420, 422, 426, 427], "current": [1, 2, 3, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 91, 94, 96, 102, 115, 118, 122, 124, 129, 130, 137, 140, 141, 142, 143, 150, 151, 158, 167, 172, 173, 176, 194, 205, 218, 219, 220, 224, 225, 226, 235, 253, 279, 283, 287, 291, 302, 317, 319, 320, 327, 334, 337, 339, 340, 375, 410, 413, 414, 415, 416, 420, 426, 427, 428, 430, 433], "fulli": [1, 8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 257, 261, 414, 417, 420, 428, 430], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 96, 97, 100, 102, 103, 105, 107, 108, 109, 111, 112, 115, 118, 119, 122, 129, 130, 137, 142, 143, 144, 145, 150, 151, 152, 154, 155, 156, 168, 170, 172, 173, 175, 176, 177, 180, 181, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 241, 242, 243, 249, 250, 263, 272, 278, 298, 302, 306, 307, 308, 309, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 352, 354, 355, 370, 372, 377, 390, 407, 409, 413, 414, 415, 416, 417, 419, 420, 426, 427, 428, 430, 432, 433], "consecut": [1, 3, 100, 126, 262, 279, 372, 416, 418, 421, 427, 430, 433], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 119, 121, 122, 129, 130, 137, 138, 142, 143, 150, 151, 204, 231, 235, 317, 390, 404, 414, 415, 418, 419], "therebi": [1, 24, 370, 409, 413, 414], "interrupt": [1, 2, 122, 302, 358], "These": [1, 2, 7, 41, 60, 110, 154, 204, 231, 408, 409, 413, 415, 426, 427, 428, 430, 433], "tool": [1, 2, 3, 5, 408, 409, 416, 418, 426, 428, 430, 433], "backend": [1, 3, 7, 18, 19, 21, 22, 73, 115, 118, 121, 122, 129, 130, 142, 143, 150, 151, 160, 166, 236, 410, 413, 415, 416, 417, 418, 421, 422, 428], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 406], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 406], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 58, 67, 68, 88, 96, 119, 120, 142, 150, 233, 413, 414, 415, 416, 421, 426, 427, 428, 429, 433], "synchron": [1, 14, 15, 16, 19, 21, 52, 54, 59, 73, 137, 402, 403, 414, 415, 426], "mode": [1, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 137, 142, 143, 150, 151, 183, 187, 218, 226, 233, 235, 240, 250, 258, 259, 262, 267, 275, 286, 287, 288, 293, 303, 307, 335, 370, 380, 385, 408, 409, 413, 414, 426, 427, 432, 433], "find": [1, 4, 6, 7, 18, 19, 20, 53, 55, 69, 101, 102, 237, 260, 279, 384, 388, 413, 414, 417, 419, 420, 426, 427], "folder": [1, 2, 52, 54, 59, 73, 154, 176, 414], "variou": [1, 2, 3, 115, 225, 258, 262, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 344, 350, 372, 402, 403, 413, 414, 415, 417, 418, 419, 420, 422, 426, 427, 430, 433], "machin": [1, 2, 7, 18, 19, 20, 46, 126, 426, 427, 432], "wonder": 1, "why": [1, 2, 3, 167, 409, 426, 428, 433], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 16, 25, 27, 30, 38, 46, 56, 57, 61, 66, 70, 73, 115, 118, 122, 128, 129, 130, 142, 143, 150, 151, 176, 191, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 317, 319, 320, 322, 325, 326, 327, 333, 334, 337, 338, 339, 340, 350, 352, 356, 360, 404, 409, 417, 418, 419, 423, 428, 430, 433], "lower": [1, 2, 3, 21, 27, 28, 179, 233, 282, 283, 310, 415, 426, 428], "io": [1, 11, 127, 128, 137, 140, 141, 152, 153, 260, 261, 417], "footprint": [1, 2, 430], "commun": [1, 2, 3, 130, 142, 150, 407, 415, 433], "yet": [1, 113, 114, 127, 429], "plai": [1, 3, 144, 145, 151, 176, 414, 415, 420, 430, 433], "role": [1, 3, 135, 414, 420, 433], "opposit": [1, 426], "direct": [1, 2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 256, 260, 335, 414, 420], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 137, 352, 353, 354, 355, 416, 417, 426, 427], "share": [1, 3, 6, 8, 23, 52, 54, 58, 59, 67, 68, 71, 73, 85, 87, 88, 89, 90, 94, 96, 97, 101, 103, 105, 109, 119, 142, 150, 216, 224, 233, 258, 262, 268, 269, 295, 296, 297, 317, 318, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 404, 406, 408, 409, 415, 417, 423, 425, 426, 427, 432, 433], "among": [1, 3, 48, 144, 145, 224, 326, 340, 409, 426, 427], "prohibit": [1, 3, 107], "slow": [1, 3, 4, 11, 52, 54, 59, 73, 88, 101, 102], "compar": [1, 3, 107, 318, 320, 333, 338, 340, 342, 343, 385, 409, 413, 415, 417, 419, 420, 426, 427, 430, 433], "gpu": [1, 7, 8, 27, 38, 46, 56, 57, 61, 66, 87, 89, 109, 115, 118, 122, 123, 126, 129, 130, 142, 143, 150, 151, 235, 413, 415, 416, 426, 427, 433], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 67, 71, 73, 88, 93, 94, 101, 102, 107, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 200, 224, 233, 237, 238, 239, 250, 253, 256, 258, 260, 262, 265, 277, 278, 286, 287, 303, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 409, 413, 414, 415, 417, 419, 426, 427, 428, 430, 433], "keyword": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 85, 87, 88, 89, 93, 94, 96, 99, 101, 102, 105, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 153, 154, 155, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 184, 185, 188, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 255, 258, 262, 266, 267, 268, 269, 279, 294, 298, 299, 302, 303, 304, 306, 307, 310, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 350, 352, 353, 354, 355, 356, 360, 370, 372, 377, 379, 390, 401, 413, 414, 415, 417, 419, 422, 426, 427, 430, 432, 433], "build": [1, 2, 3, 7, 23, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 96, 113, 114, 115, 118, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 140, 141, 142, 143, 147, 150, 151, 152, 153, 154, 155, 209, 233, 235, 239, 258, 262, 265, 301, 303, 307, 390, 397, 398, 399, 408, 409, 410, 415, 416, 417, 419, 420, 421, 422, 426, 427, 428, 429, 432, 433], "mani": [1, 2, 3, 4, 58, 113, 114, 116, 117, 118, 121, 123, 124, 127, 128, 137, 138, 147, 219, 317, 319, 326, 334, 337, 408, 413, 414, 415, 417, 418, 419, 421, 423, 426, 427, 428, 430, 432, 433], "eg": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 103, 105, 109, 115, 116, 117, 118, 121, 122, 123, 124, 126, 129, 130, 142, 143, 147, 150, 151, 186, 217, 226, 236, 268, 298, 372], "gymnasium": [1, 2, 3, 5, 66, 115, 118, 121, 122, 123, 129, 130, 131, 132, 142, 143, 150, 151, 160, 166, 189, 213, 217, 232, 236, 414, 415, 417, 428, 432], "warn": [1, 3, 57, 61, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 255, 279, 380, 414], "quickli": [1, 3, 414, 426, 427, 433], "becom": [1, 2, 3, 4, 21, 256, 260, 426, 427, 433], "quit": [1, 3, 11, 115, 118, 122, 129, 130, 142, 143, 150, 151, 413, 414, 415, 417, 419, 426, 427, 433], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 50, 63, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 134, 135, 142, 143, 144, 145, 147, 150, 151, 154, 155, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 198, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 290, 307, 335, 380, 385, 404, 409, 413, 416, 426, 429, 430, 433], "filter": [1, 2, 3, 4, 72, 94, 101, 102, 317, 318, 320, 321, 325, 326, 333, 337, 338, 340, 418], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 85, 94, 101, 102, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 156, 184, 216, 219, 235, 237, 256, 257, 260, 266, 267, 270, 271, 272, 294, 298, 299, 300, 303, 304, 305, 306, 307, 335, 348, 349, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 426, 427, 428, 430, 432, 433], "still": [1, 2, 3, 9, 56, 66, 73, 74, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 224, 279, 334, 335, 409, 413, 414, 416, 425, 428, 430, 433], "wish": [1, 3, 11, 14, 15, 17, 166, 420, 430], "displai": [1, 3, 7, 115, 118, 122, 129, 130, 142, 143, 150, 151, 390, 410, 413, 414, 427, 428], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 168, 169, 170, 172, 173, 176, 177, 180, 181, 183, 184, 187, 188, 189, 191, 194, 195, 196, 198, 199, 200, 202, 204, 205, 206, 207, 209, 211, 212, 213, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 279, 280, 281, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 379, 380, 383, 384, 385, 387, 388, 390, 404, 408, 409, 410, 413, 414, 415, 417, 422, 423, 425, 426, 427, 428, 429, 432, 433], "central": [2, 268, 269, 270, 413, 414, 418, 426, 427, 430], "part": [2, 3, 4, 8, 27, 38, 46, 56, 57, 60, 61, 66, 73, 113, 115, 118, 122, 127, 129, 130, 140, 142, 143, 150, 151, 167, 175, 200, 209, 212, 235, 258, 262, 311, 381, 404, 409, 413, 415, 416, 417, 423, 426, 428, 433], "algorithm": [2, 3, 8, 9, 136, 169, 216, 317, 337, 338, 340, 406, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 422, 426, 427, 429, 430, 432], "implement": [2, 3, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 70, 71, 74, 75, 76, 77, 78, 91, 103, 104, 115, 118, 122, 129, 130, 136, 137, 142, 143, 150, 151, 173, 180, 183, 185, 189, 192, 196, 198, 206, 207, 213, 217, 223, 225, 226, 227, 233, 235, 236, 240, 242, 256, 257, 258, 259, 260, 261, 262, 286, 287, 288, 317, 318, 320, 323, 324, 325, 331, 333, 335, 336, 337, 339, 340, 342, 370, 381, 395, 408, 410, 413, 414, 415, 416, 417, 426, 427, 428, 432], "wide": [2, 3, 5, 432], "give": [2, 3, 7, 67, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 176, 407, 409, 413, 414, 417, 426, 427, 428, 429, 432], "abil": [2, 335, 428, 430], "panel": [2, 415], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 85, 107, 173, 176, 188, 240, 258, 262, 320, 325, 333, 340, 344, 408, 413, 415, 416, 419, 420, 422, 426, 427, 430], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 84, 85, 87, 88, 89, 90, 92, 103, 105, 109, 115, 118, 122, 129, 130, 136, 140, 141, 142, 143, 150, 151, 191, 194, 218, 224, 226, 233, 235, 258, 262, 317, 320, 335, 340, 393, 408, 410, 413, 414, 415, 416, 417, 426, 427, 428, 430, 433], "almost": [2, 267, 416], "physic": [2, 6, 7, 85, 142, 143, 147, 410, 413, 426, 427, 428], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 87, 88, 89, 90, 103, 105, 109, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 219, 235, 270, 279, 322, 335, 350, 413, 414, 416, 426, 427, 429, 430, 432], "liststorag": [2, 41, 53, 58, 66, 67, 68, 88, 96, 430], "veri": [2, 3, 127, 128, 414, 418, 421, 426, 428, 430, 432, 433], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 48, 50, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 88, 94, 96, 99, 101, 102, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 167, 172, 173, 207, 235, 236, 263, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 346, 350, 408, 410, 413, 415, 416, 417, 418, 419, 420, 426, 427, 428, 430, 432, 433], "complex": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306, 413, 414, 418, 419], "tensor": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 161, 167, 168, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 186, 187, 188, 189, 191, 194, 195, 197, 200, 202, 204, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 317, 318, 320, 321, 322, 324, 325, 326, 329, 330, 333, 335, 337, 338, 339, 340, 342, 343, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 426, 427, 428, 432, 433], "contigu": [2, 3, 8, 28, 31, 38, 74, 88, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 194, 197, 219, 227, 428, 430, 432], "tensorstorag": [2, 58, 66, 87, 93, 94, 107, 110, 421, 430], "lazymemmapstorag": [2, 35, 53, 58, 64, 67, 68, 94, 96, 101, 102, 175, 176, 413, 414, 416, 421, 426, 429, 430], "citizen": 2, "pytre": [2, 53, 58, 67, 68, 90, 96, 110], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 85, 90, 94, 96, 101, 105, 107, 115, 116, 117, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 176, 194, 196, 200, 235, 241, 245, 251, 252, 258, 261, 262, 263, 270, 277, 280, 281, 299, 300, 304, 305, 310, 317, 318, 319, 320, 321, 325, 326, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 384, 385, 388, 397, 430, 432], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 94, 99, 101, 102, 115, 118, 121, 122, 123, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 194, 219, 224, 226, 235, 303, 307, 320, 340, 342, 385, 402, 403, 404, 410, 414, 415, 418, 420, 426, 428, 433], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 46, 47, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 73, 79, 87, 88, 89, 92, 96, 109, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 168, 176, 217, 220, 224, 235, 302, 352, 353, 354, 355, 356, 370, 380, 410, 414, 415, 417, 427, 428, 430, 432], "construct": [2, 3, 5, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 96, 115, 118, 119, 121, 122, 129, 130, 142, 143, 144, 150, 151, 156, 183, 187, 235, 258, 262, 283, 307, 390, 408, 414, 415, 416, 419, 426, 428, 430, 433], "ram": [2, 121, 123, 422, 430], "prealloc": [2, 3, 142, 150, 428], "ve": [2, 60, 413, 416, 423], "been": [2, 3, 5, 7, 8, 12, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 96, 100, 115, 118, 122, 126, 129, 130, 134, 135, 142, 143, 150, 151, 196, 217, 218, 225, 226, 256, 258, 260, 262, 270, 302, 317, 335, 337, 339, 413, 414, 415, 416, 425, 426, 427, 428, 430, 432, 433], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 107, 115, 116, 117, 118, 122, 126, 129, 130, 142, 143, 144, 145, 150, 151, 176, 224, 270, 379, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 423, 426, 427, 428, 430, 432, 433], "start": [2, 3, 4, 5, 14, 21, 24, 41, 71, 72, 73, 94, 101, 102, 115, 118, 119, 122, 129, 130, 133, 142, 143, 150, 151, 167, 182, 386, 412, 413, 414, 417, 424, 427, 428, 430, 431, 433], "replay_buff": [2, 8, 14, 15, 16, 53, 58, 67, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 176, 387, 400, 413, 414, 415, 421, 426, 427, 430], "import": [2, 3, 4, 6, 10, 11, 14, 15, 16, 17, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 93, 94, 96, 101, 102, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 166, 167, 168, 169, 170, 172, 173, 175, 176, 179, 181, 184, 188, 189, 194, 195, 196, 197, 200, 202, 204, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 224, 225, 227, 231, 233, 235, 236, 239, 241, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 268, 269, 270, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 370, 372, 383, 385, 400, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "rb": [2, 35, 53, 58, 64, 67, 68, 88, 93, 94, 96, 101, 102, 107, 176, 209, 235, 414, 416, 417, 421, 423, 427, 429, 430, 432], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 41, 42, 46, 53, 58, 60, 66, 67, 68, 69, 72, 73, 87, 88, 89, 93, 96, 101, 102, 107, 109, 113, 114, 115, 118, 119, 122, 127, 128, 129, 130, 136, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 169, 170, 173, 175, 176, 181, 184, 218, 220, 221, 222, 235, 239, 241, 244, 245, 247, 249, 251, 255, 256, 257, 258, 260, 261, 262, 265, 267, 277, 279, 290, 303, 307, 310, 314, 318, 322, 324, 331, 337, 338, 339, 343, 350, 352, 353, 354, 355, 358, 372, 381, 410, 413, 414, 415, 416, 417, 418, 419, 423, 426, 428, 430, 432, 433], "add": [2, 3, 4, 6, 21, 27, 31, 32, 38, 39, 41, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 86, 88, 93, 96, 97, 107, 108, 111, 112, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 194, 196, 223, 226, 235, 258, 262, 271, 301, 317, 386, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 432], "string": [2, 18, 19, 20, 27, 38, 41, 46, 48, 55, 56, 57, 61, 66, 72, 73, 83, 88, 115, 118, 122, 129, 130, 134, 140, 142, 143, 150, 151, 166, 184, 194, 204, 217, 223, 231, 235, 258, 262, 299, 302, 303, 304, 316, 371, 389, 409, 413, 415, 416, 430], "element": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 42, 44, 50, 52, 53, 54, 58, 59, 66, 67, 68, 71, 73, 87, 88, 89, 90, 93, 94, 96, 101, 102, 107, 109, 115, 118, 122, 129, 130, 139, 142, 143, 150, 151, 169, 176, 181, 184, 205, 214, 218, 219, 237, 242, 243, 256, 257, 260, 293, 294, 299, 302, 306, 307, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 381, 409, 413, 415, 419, 421, 430, 433], "30": [2, 3, 58, 66, 101, 102, 172, 199, 282, 283, 370, 374, 377, 379, 421, 427, 428, 430], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 99, 101, 102, 103, 105, 107, 109, 115, 118, 119, 121, 122, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 191, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 399, 400, 402, 403, 404, 408, 410, 413, 414, 416, 417, 428, 430, 432], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 161, 169, 171, 172, 173, 175, 176, 177, 178, 180, 182, 184, 186, 191, 192, 194, 198, 199, 200, 202, 204, 205, 208, 215, 216, 217, 220, 223, 226, 228, 231, 235, 237, 238, 239, 242, 243, 244, 245, 247, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 298, 299, 300, 302, 303, 305, 307, 317, 318, 319, 326, 328, 329, 334, 335, 336, 337, 338, 342, 343, 352, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 377, 379, 381, 382, 383, 385, 387, 390, 392, 402, 403, 404, 417, 428, 430], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 41, 46, 52, 54, 55, 56, 57, 59, 61, 63, 64, 66, 72, 73, 80, 101, 102, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 134, 135, 142, 143, 147, 150, 151, 154, 155, 167, 168, 172, 176, 178, 179, 181, 182, 183, 185, 187, 188, 191, 195, 197, 198, 200, 202, 204, 207, 209, 212, 214, 216, 217, 218, 219, 221, 224, 226, 228, 231, 233, 235, 258, 266, 267, 298, 299, 302, 304, 305, 318, 320, 340, 352, 353, 354, 355, 408, 413, 415, 416, 418, 419, 420, 422, 426, 427, 428, 429, 430, 432, 433], "onto": [2, 8, 50, 52, 54, 59, 73, 161, 185, 237, 279, 294, 299, 300, 303, 304, 305, 306, 307, 416, 428], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 86, 93, 94, 96, 97, 99, 100, 101, 102, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 142, 143, 147, 150, 151, 154, 155, 168, 169, 176, 177, 217, 218, 219, 220, 226, 235, 236, 242, 243, 263, 266, 267, 269, 279, 302, 304, 305, 313, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 394, 404, 407, 410, 415, 416, 417, 421, 422, 423, 428, 430, 433], "without": [2, 3, 7, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 154, 155, 170, 172, 183, 187, 222, 225, 235, 256, 257, 260, 261, 296, 297, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 356, 400, 407, 408, 413, 414, 415, 417, 418, 419, 420, 421, 426, 427, 428, 430, 433], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 41, 46, 52, 53, 54, 56, 57, 59, 60, 61, 66, 67, 73, 93, 94, 115, 118, 122, 129, 130, 136, 142, 143, 144, 145, 150, 151, 152, 153, 168, 170, 172, 173, 183, 186, 187, 194, 206, 217, 218, 224, 226, 230, 233, 235, 237, 239, 240, 255, 256, 258, 262, 265, 270, 279, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 385, 390, 392, 395, 396, 399, 400, 410, 414, 415, 416, 417, 420, 423, 426, 427, 428, 430, 433], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 60, 62, 63, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 94, 101, 102, 105, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 169, 176, 184, 197, 205, 233, 239, 242, 243, 245, 247, 249, 256, 260, 263, 265, 268, 269, 294, 306, 311, 381, 387, 413, 415, 416, 421, 423, 428, 430, 433], "cursor": [2, 53, 58, 67, 68, 96], "afterward": [2, 27, 38, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 426, 433], "tell": [2, 3, 4, 7, 144, 145, 224, 413, 416, 421, 426, 427], "our": [2, 3, 7, 8, 11, 18, 41, 58, 176, 372, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 432], "far": [2, 53, 58, 60, 67, 68, 96, 259, 287, 288, 423, 428, 433], "restrict": [2, 3, 409, 414, 429, 430, 433], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 90, 96, 115, 118, 122, 128, 129, 130, 139, 142, 143, 150, 151, 161, 183, 187, 204, 206, 220, 226, 229, 231, 235, 376, 413, 428], "64": [2, 3, 52, 54, 59, 73, 96, 176, 208, 245, 246, 254, 258, 262, 269, 270, 280, 350, 413, 414, 415, 416, 417, 419, 423, 425, 428, 430, 432, 433], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 88, 89, 93, 94, 101, 102, 109, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 161, 164, 167, 168, 169, 170, 173, 174, 180, 183, 184, 185, 186, 187, 188, 189, 194, 196, 197, 200, 202, 204, 206, 207, 209, 213, 216, 217, 219, 221, 222, 225, 226, 227, 229, 231, 235, 239, 241, 251, 252, 256, 257, 258, 260, 261, 262, 265, 271, 272, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 358, 408, 417, 425, 428, 430, 432, 433], "unit8": 2, "img": 2, "randint": [2, 72, 96, 184, 222, 430], "255": [2, 96, 222, 430], "uint8": [2, 3, 31, 52, 54, 59, 73, 116, 117, 134, 135, 188, 194, 202, 222, 414, 430], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 41, 46, 53, 58, 60, 63, 64, 66, 67, 68, 73, 83, 84, 85, 92, 94, 96, 101, 102, 107, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 134, 135, 136, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 161, 167, 169, 172, 173, 175, 176, 181, 183, 184, 187, 188, 189, 194, 195, 196, 197, 198, 202, 206, 207, 209, 212, 213, 217, 219, 221, 224, 227, 232, 233, 235, 239, 257, 258, 261, 262, 265, 283, 302, 312, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 333, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 372, 384, 385, 388, 414, 416, 417, 419, 423, 428, 429, 432, 433], "ask": [2, 3, 8, 94, 101, 102, 372, 415, 416, 418, 419, 426, 427, 429, 433], "automat": [2, 3, 5, 12, 28, 41, 71, 74, 87, 89, 96, 102, 109, 115, 118, 121, 122, 123, 129, 130, 142, 143, 144, 145, 150, 151, 172, 183, 184, 187, 200, 219, 232, 242, 258, 262, 294, 302, 303, 307, 370, 380, 408, 413, 415, 418, 419, 426, 427, 428, 430, 432], "hand": [2, 3, 7, 21, 31, 426, 427, 428], "look": [2, 3, 5, 7, 8, 27, 38, 46, 56, 57, 61, 66, 94, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 194, 204, 205, 229, 235, 240, 303, 307, 308, 309, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 61, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 84, 85, 92, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 175, 178, 182, 184, 191, 204, 205, 212, 219, 226, 229, 231, 241, 258, 262, 290, 293, 310, 322, 326, 327, 340, 350, 361, 362, 363, 364, 366, 367, 368, 369, 372, 413, 415, 425, 428], "lead": [2, 3, 4, 8, 10, 23, 31, 32, 39, 46, 53, 58, 63, 67, 68, 73, 100, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 142, 143, 150, 151, 219, 236, 259, 280, 287, 288, 293, 413, 416, 417, 426, 427, 428, 430, 432], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 58, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 168, 213, 409, 413, 421, 430], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 84, 96, 105, 115, 116, 117, 118, 119, 121, 122, 123, 124, 129, 130, 142, 143, 150, 151, 169, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 191, 193, 195, 196, 197, 198, 200, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 242, 243, 250, 258, 262, 263, 268, 269, 286, 294, 298, 299, 303, 304, 306, 307, 310, 311, 318, 320, 326, 334, 336, 338, 340, 387, 392, 408, 409, 413, 415, 417, 425, 427, 428, 430, 433], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 176, 225, 414, 415, 417, 421, 430, 432, 433], "throw": [2, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 433], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 41, 48, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 72, 73, 83, 87, 88, 89, 93, 94, 95, 96, 101, 102, 107, 109, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 167, 168, 169, 173, 175, 176, 180, 183, 184, 187, 188, 189, 194, 202, 206, 207, 209, 213, 216, 217, 219, 225, 226, 227, 235, 239, 241, 249, 250, 251, 252, 255, 258, 262, 265, 279, 280, 281, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 372, 381, 387, 408, 409, 413, 414, 415, 416, 421, 426, 427, 428, 430, 432, 433], "max": [2, 23, 50, 54, 67, 72, 83, 93, 94, 107, 128, 186, 220, 279, 318, 319, 320, 326, 336, 338, 340, 413, 415, 416, 417, 423], "label": [2, 54, 55, 60, 72, 73, 413, 426, 430], "100": [2, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 87, 89, 96, 101, 102, 107, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 179, 184, 188, 200, 209, 214, 217, 235, 267, 268, 300, 302, 372, 382, 400, 414, 415, 417, 418, 420, 423, 425, 426, 427, 428, 430, 432, 433], "rb_pytre": 2, "randn": [2, 53, 56, 58, 67, 68, 87, 88, 89, 94, 96, 101, 102, 109, 161, 175, 200, 241, 244, 245, 249, 251, 252, 256, 257, 260, 261, 266, 267, 268, 275, 277, 281, 294, 295, 296, 297, 298, 299, 303, 304, 306, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 389, 408, 417, 430, 432, 433], "c": [2, 3, 6, 7, 31, 52, 54, 56, 58, 59, 66, 67, 68, 73, 88, 200, 222, 227, 260, 261, 414, 430], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 87, 89, 96, 101, 102, 107, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 167, 173, 175, 177, 183, 184, 186, 187, 200, 206, 209, 216, 235, 238, 239, 246, 247, 248, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 279, 280, 289, 305, 307, 313, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 358, 416, 417, 430, 432, 433], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 96, 107, 115, 118, 122, 125, 129, 130, 142, 143, 150, 151, 156, 161, 166, 169, 173, 176, 179, 183, 187, 196, 207, 214, 226, 233, 241, 269, 290, 352, 353, 354, 355, 380, 381, 389, 421, 425, 430, 433], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 87, 89, 96, 109, 184, 202, 242, 243, 263, 269, 413, 417, 421, 423, 426, 428, 429, 430, 432], "ambigu": [2, 53, 58, 67, 68, 96], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 96, 105, 115, 118, 122, 129, 130, 142, 143, 150, 151, 164, 173, 180, 194, 204, 219, 225, 226, 229, 231, 235, 306, 409, 413, 417, 418, 428], "deal": [2, 3, 53, 58, 67, 68, 96, 335, 409, 413, 415, 427, 430], "interpret": [2, 3, 53, 58, 67, 68, 96, 414], "put": [2, 53, 58, 67, 68, 96, 122, 134, 135, 151, 154, 155, 233, 379, 404, 408, 414, 415, 416, 418, 426, 428], "solv": [2, 4, 7, 9, 10, 53, 58, 67, 68, 96, 407, 413, 414, 415, 421, 423, 426, 427, 428, 430], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 96, 115, 118, 122, 126, 129, 130, 142, 143, 150, 151, 235, 382, 418, 421], "cut": [2, 53, 58, 67, 68, 96], "distinct": [2, 3, 53, 58, 67, 68, 96, 173, 176, 420, 425], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 170, 235, 252, 256, 260, 263, 418, 428, 430, 432, 433], "through": [2, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 53, 57, 58, 61, 63, 67, 68, 73, 96, 113, 114, 115, 118, 121, 122, 123, 126, 127, 128, 129, 130, 133, 142, 143, 144, 145, 150, 151, 172, 181, 183, 187, 205, 236, 241, 263, 280, 302, 303, 307, 308, 309, 313, 316, 335, 352, 353, 354, 355, 380, 408, 409, 413, 414, 415, 418, 420, 425, 426, 427, 428, 429, 430, 433], "collate_fn": [2, 53, 58, 66, 67, 68, 96, 430, 432], "__init__": [2, 3, 7, 118, 136, 152, 166, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 239, 250, 252, 256, 260, 265, 311, 318, 320, 321, 326, 333, 338, 340, 342, 343, 410, 428, 433], "major": 2, "worri": [2, 69, 433], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 87, 88, 89, 90, 94, 101, 103, 105, 109, 115, 118, 119, 122, 126, 129, 130, 142, 143, 150, 151, 168, 172, 413, 415, 418, 426, 427, 428, 433], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 263, 415, 426, 427], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 56, 60, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 199, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 259, 287, 288, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 414, 419, 422, 428, 430, 433], "latter": [2, 18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 337, 402, 403], "inv": [2, 3, 169, 179, 186, 189, 194, 202, 209, 214, 216, 221, 225, 228, 235, 428], "obvious": [2, 417], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 78, 85, 115, 118, 122, 129, 130, 142, 143, 150, 151, 186, 189, 213, 222, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 352, 430], "multithread": [2, 3, 53, 58, 67, 68, 83, 137, 138, 421, 430], "thread": [2, 14, 15, 17, 52, 54, 59, 73, 113, 114, 127, 128, 142, 150], "prefetch": [2, 53, 58, 67, 68, 83, 413, 414, 416, 430], "advis": [2, 11, 422, 433], "benchmark": [2, 3, 9, 113, 114, 127, 128], "techniqu": [2, 8, 142, 150, 414, 417, 421, 430], "real": [2, 5, 307, 409, 416, 417, 428, 429], "life": [2, 188, 429], "adopt": [2, 3, 5, 413, 433], "throughput": [2, 9, 128, 413], "constant": [2, 11, 33, 176, 200, 218, 410, 413, 415, 416, 433], "throughout": [2, 3, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 415, 426, 433], "further": [2, 3, 5, 24, 413, 415, 417, 418], "refin": [2, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350], "coupl": [2, 416, 419, 420, 428, 430], "get": [2, 3, 4, 6, 7, 8, 9, 12, 31, 32, 39, 41, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 73, 87, 89, 94, 101, 102, 103, 105, 107, 109, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 170, 175, 177, 183, 186, 187, 196, 200, 205, 218, 219, 222, 226, 233, 255, 294, 303, 304, 307, 314, 352, 353, 354, 355, 356, 372, 376, 408, 409, 412, 413, 414, 415, 416, 417, 424, 426, 427, 428, 430, 431, 432, 433], "first_elt": 2, "128": [2, 102, 113, 114, 127, 128, 246, 249, 414, 416, 417, 423, 426, 429, 430], "wa": [2, 3, 5, 7, 31, 32, 39, 41, 53, 56, 58, 63, 66, 67, 68, 73, 94, 96, 100, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 168, 176, 194, 226, 260, 317, 319, 332, 334, 337, 339, 341, 358, 409, 414, 415, 418, 419, 425, 426, 430, 432], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 93, 94, 96, 101, 102, 107, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 160, 161, 166, 167, 168, 169, 172, 173, 176, 177, 181, 183, 184, 185, 186, 187, 195, 200, 206, 207, 209, 212, 217, 219, 220, 221, 222, 233, 235, 242, 243, 245, 246, 247, 248, 249, 252, 254, 255, 258, 262, 263, 266, 267, 268, 269, 275, 278, 279, 281, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 311, 314, 335, 370, 400, 408, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 177], "larger": [2, 4, 66, 258, 262, 325, 333, 432], "volum": 2, "due": [2, 3, 5, 23, 420, 429, 430, 433], "memorymappedtensor": [2, 35, 52, 54, 64, 72, 87, 374, 421], "well": [2, 3, 8, 21, 23, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 94, 99, 103, 110, 115, 118, 122, 129, 130, 142, 143, 150, 151, 225, 226, 235, 236, 240, 245, 260, 282, 283, 307, 335, 337, 342, 356, 408, 413, 414, 416, 417, 418, 419, 420, 422, 429, 430, 432, 433], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 96, 115, 118, 122, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 182, 183, 185, 187, 212, 215, 218, 223, 227, 228, 235, 236, 239, 260, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 379, 408, 413, 415, 416, 417, 421, 426], "file": [2, 6, 7, 8, 52, 54, 59, 73, 85, 154, 371, 372, 374, 390, 410, 412, 414, 426, 430, 431], "locat": [2, 7, 52, 54, 59, 72, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 164, 182, 188, 200, 211, 259, 287, 288, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 413, 414, 415, 422, 426, 427, 430], "improv": [2, 4, 11, 192, 317, 409, 417, 426, 427, 430], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 142, 150, 194, 415, 426, 430], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 101, 102, 115, 116, 117, 118, 121, 122, 123, 126, 129, 130, 142, 143, 150, 151, 168, 170, 176, 197, 209, 212, 220, 233, 235, 255, 268, 269, 303, 307, 334, 335, 337, 409, 413, 414, 416, 417, 418, 420, 422, 428, 430, 432], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 62, 63, 71, 74, 75, 76, 77, 78, 87, 94, 140, 141, 186, 224, 238, 260, 261, 325, 416, 417, 421, 430], "sharabl": [2, 142, 150], "collabor": 2, "rather": [2, 4, 105, 140, 141, 207, 408, 409, 413, 414, 415, 418, 420, 426, 427, 430], "incur": [2, 113, 114, 127, 128], "transmiss": 2, "overhead": [2, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 167, 307], "content": [2, 3, 8, 16, 31, 32, 39, 52, 53, 54, 58, 59, 63, 67, 68, 73, 100, 101, 102, 115, 118, 121, 122, 123, 129, 130, 137, 142, 143, 150, 151, 206, 242, 243, 263, 268, 269, 303, 335, 415, 428, 432], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 92, 93, 94, 115, 118, 122, 129, 130, 133, 134, 135, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 161, 169, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 252, 294, 295, 296, 297, 299, 303, 304, 306, 307, 309, 310, 311, 312, 320, 340, 350, 385, 406, 408, 409, 413, 414, 415, 416, 419, 420, 429], "writer": [2, 53, 58, 67, 68, 86, 89, 94, 96, 97, 101, 107, 108, 109, 112, 415, 430], "tensordictroundrobinwrit": [2, 96], "goe": [2, 4, 73, 144, 145, 413, 415, 426, 427, 433], "prioritizedsampl": [2, 53, 58, 67, 68, 94, 96, 322, 327, 350, 413, 430], "access": [2, 3, 7, 8, 11, 27, 38, 46, 53, 56, 57, 61, 66, 88, 115, 118, 122, 129, 130, 142, 143, 150, 151, 164, 176, 204, 225, 229, 235, 404, 407, 413, 418, 426, 427, 428, 430, 432], "tensordictreplaybuff": [2, 53, 58, 67, 93, 94, 96, 101, 102, 107, 175, 176, 387, 400, 406, 413, 414, 416, 430], "mp": [2, 18, 19, 20, 119, 233], "def": [2, 3, 22, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 96, 115, 118, 119, 122, 129, 130, 136, 142, 143, 150, 151, 164, 166, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 233, 235, 236, 239, 252, 256, 257, 260, 261, 265, 270, 302, 303, 311, 318, 320, 321, 326, 333, 335, 338, 340, 342, 343, 370, 380, 409, 410, 413, 414, 417, 425, 426, 427, 428, 430, 432, 433], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 41, 52, 53, 54, 56, 58, 59, 64, 66, 67, 68, 73, 87, 96, 107, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 131, 132, 140, 141, 142, 143, 146, 150, 151, 152, 153, 167, 170, 173, 175, 177, 181, 183, 184, 185, 186, 187, 195, 196, 197, 198, 200, 209, 212, 216, 219, 222, 226, 233, 239, 241, 251, 252, 255, 258, 262, 264, 265, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 303, 304, 306, 309, 311, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 381, 389, 408, 409, 413, 414, 416, 427, 428, 429, 432], "__name__": [2, 3, 14, 15, 22, 119, 370, 414, 432], "__main__": [2, 3, 14, 15, 22, 119, 370, 432], "21": [2, 41, 73, 101, 102, 142, 144, 145, 150], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 46, 56, 57, 61, 66, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 218, 235, 278, 306, 307, 317, 318, 319, 320, 321, 322, 324, 326, 327, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 356, 393, 399, 400, 409, 410, 416, 417, 423, 426, 428], "arg": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 41, 43, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 94, 96, 101, 102, 103, 105, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 184, 185, 188, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 206, 207, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 237, 239, 241, 242, 243, 250, 251, 255, 258, 262, 263, 264, 265, 279, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 379, 383, 387, 390, 404, 414, 417], "join": [2, 119, 184, 406, 414, 415, 417, 426], "now": [2, 3, 7, 53, 58, 67, 68, 96, 140, 141, 142, 176, 213, 269, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 433], "20": [2, 41, 66, 72, 73, 101, 102, 107, 115, 118, 122, 126, 129, 130, 140, 141, 142, 143, 150, 151, 218, 235, 254, 256, 257, 260, 261, 278, 298, 381, 416, 430, 433], "_data": [2, 428], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 88, 96, 99, 107, 112, 115, 118, 122, 124, 129, 130, 136, 137, 142, 143, 144, 145, 150, 151, 154, 155, 156, 167, 173, 175, 176, 188, 194, 196, 200, 205, 218, 224, 226, 232, 235, 237, 245, 247, 253, 255, 268, 269, 278, 279, 280, 282, 283, 289, 290, 300, 302, 305, 307, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 341, 343, 350, 351, 352, 370, 379, 385, 407, 408, 409, 413, 414, 416, 417, 418, 426, 427, 428, 429, 430, 432, 433], "difficult": [2, 4, 142, 422], "pai": [2, 8, 176, 413], "word": [2, 3, 11, 60, 335, 413, 421, 428, 433], "1m": [2, 393, 413, 415, 416], "doe": [2, 3, 18, 27, 38, 46, 52, 53, 54, 56, 57, 59, 61, 66, 67, 72, 73, 84, 85, 92, 93, 94, 101, 103, 105, 112, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 240, 249, 250, 256, 257, 258, 260, 261, 262, 271, 278, 290, 298, 308, 309, 317, 319, 327, 334, 335, 337, 351, 390, 409, 410, 413, 414, 415, 416, 418, 421, 426, 428, 430, 433], "howev": [2, 3, 5, 7, 27, 38, 46, 56, 57, 61, 66, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 194, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 233, 235, 317, 319, 320, 334, 337, 339, 340, 408, 413, 414, 416, 417, 420, 428, 430, 433], "capac": [2, 53, 58, 67, 68, 87, 89, 93, 101, 109, 415, 421], "There": [2, 3, 10, 96, 225, 240, 258, 262, 317, 337, 408, 409, 410, 415, 416, 417, 419, 421, 426, 427, 428, 430, 432, 433], "circumv": 2, "account": [2, 87, 89, 109, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 172, 181, 266, 267, 408, 414, 416, 430, 433], "save": [2, 3, 8, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 73, 84, 85, 87, 88, 89, 90, 92, 96, 103, 104, 105, 109, 110, 115, 118, 122, 129, 130, 142, 143, 150, 151, 232, 235, 371, 372, 374, 379, 390, 410, 417, 421, 422, 423, 426, 427], "convent": [2, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 154, 155, 409, 413, 416, 426, 427, 428], "overridden": [2, 3, 27, 38, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 352, 354, 355, 416, 426], "dim_extend": [2, 53, 58, 67, 68], "obtain": [2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 175, 204, 218, 231, 239, 241, 278, 280, 387, 413, 415, 418, 419, 420, 426, 427], "counterpart": [2, 3, 176], "desir": [2, 3, 11, 27, 30, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 165, 171, 173, 180, 181, 200, 202, 204, 205, 219, 225, 226, 229, 231, 235, 242, 243, 250, 263, 269, 294, 299, 300, 303, 304, 305, 306, 307, 408, 413, 417, 426, 427, 428, 430], "diversifi": 2, "offer": [2, 3, 7, 113, 114, 115, 118, 122, 127, 128, 129, 130, 134, 135, 142, 143, 150, 151, 224, 370, 408, 413, 414, 417, 418, 420, 421, 426, 428, 430, 433], "accomplish": [2, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 418], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 318, 324, 325, 333, 342, 379, 410, 418, 429, 430], "docstr": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 418, 419], "extens": [2, 53, 58, 67, 68, 102, 240, 410, 430], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 222, 226, 235, 240, 252, 256, 260, 270, 278, 300, 317, 327, 335, 337, 407, 410, 414, 417, 421, 425, 430], "happi": [2, 417], "concaten": [2, 8, 14, 15, 21, 41, 42, 44, 73, 129, 176, 177, 200, 216, 260, 263, 309, 413, 414, 419, 426, 427, 428, 430, 433], "schedul": [2, 4, 7, 60, 385, 415, 428], "transformedenv": [2, 3, 11, 12, 46, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 169, 170, 173, 176, 179, 180, 181, 183, 187, 188, 189, 195, 196, 197, 199, 200, 202, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, 220, 224, 225, 233, 235, 258, 262, 302, 372, 380, 413, 414, 415, 416, 417, 418, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "stepcount": [2, 41, 46, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 181, 224, 225, 226, 235, 241, 413, 414, 415, 416, 417, 418, 423, 426, 427, 432], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 41, 46, 64, 66, 107, 115, 118, 119, 122, 124, 129, 130, 142, 143, 150, 151, 169, 172, 173, 176, 179, 180, 181, 188, 194, 195, 196, 200, 202, 207, 208, 209, 212, 214, 218, 219, 220, 221, 224, 225, 226, 227, 233, 235, 241, 258, 262, 302, 370, 372, 400, 406, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 432, 433], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46, 176, 209, 406, 421, 430], "cartpol": [2, 3, 11, 35, 46, 64, 66, 115, 116, 117, 118, 119, 122, 129, 130, 142, 143, 150, 151, 172, 173, 176, 212, 218, 233, 235, 302, 370, 414, 416, 419, 421, 422, 423, 430, 433], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 46, 64, 66, 107, 115, 118, 119, 121, 122, 123, 127, 128, 129, 130, 137, 142, 143, 150, 151, 172, 173, 176, 179, 181, 189, 195, 196, 200, 207, 209, 212, 213, 214, 217, 218, 219, 220, 221, 224, 225, 227, 233, 235, 241, 258, 262, 302, 346, 361, 362, 363, 364, 366, 367, 368, 369, 370, 408, 414, 416, 418, 419, 420, 421, 422, 423, 428, 430, 432, 433], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 46, 113, 114, 115, 118, 122, 127, 128, 129, 130, 136, 142, 143, 144, 145, 146, 150, 151, 169, 170, 173, 176, 180, 183, 185, 187, 196, 200, 206, 209, 225, 226, 227, 228, 235, 239, 252, 265, 281, 283, 294, 299, 303, 304, 318, 320, 322, 324, 338, 340, 342, 343, 400, 408, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 432, 433], "8": [2, 3, 6, 7, 31, 32, 39, 46, 52, 54, 58, 59, 63, 66, 73, 93, 94, 101, 102, 113, 114, 115, 116, 117, 118, 122, 129, 130, 140, 141, 142, 143, 150, 151, 152, 169, 172, 181, 218, 221, 227, 242, 243, 245, 246, 254, 263, 295, 296, 297, 303, 306, 309, 333, 413, 414, 428, 430, 432], "traj_kei": [2, 94, 101, 102, 430], "truncated_kei": [2, 94, 101, 102, 209, 217], "strict_length": [2, 94, 101, 102, 372], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 46, 53, 56, 57, 58, 61, 63, 64, 66, 68, 69, 73, 87, 89, 93, 94, 101, 102, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 181, 182, 198, 204, 209, 212, 224, 226, 231, 235, 257, 258, 261, 262, 281, 293, 300, 302, 303, 305, 306, 307, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 381, 393, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 426, 427, 428, 430, 432, 433], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 64, 66, 68, 71, 74, 75, 76, 77, 78, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 344, 409, 413, 414, 415, 416, 423, 426, 430, 432], "break": [2, 5, 14, 15, 16, 21, 27, 38, 46, 56, 57, 58, 61, 66, 68, 83, 94, 101, 102, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 176, 209, 233, 235, 258, 262, 287, 372, 414, 417, 421, 423, 430, 432], "step_count": [2, 14, 15, 16, 46, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 181, 217, 235, 415, 416, 417, 418, 423], "32": [2, 22, 31, 53, 58, 67, 68, 96, 102, 128, 148, 149, 154, 155, 176, 194, 242, 243, 244, 245, 246, 248, 249, 254, 263, 268, 269, 273, 274, 277, 280, 289, 350, 370, 414, 416, 417, 419, 420, 428, 429, 430, 432, 433], "33": [2, 27, 31, 38, 46, 56, 57, 61, 66, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 242, 243, 263], "34": [2, 242, 243, 263], "35": [2, 242, 243, 263], "36": 2, "37": [2, 175], "38": [2, 7, 41], "39": [2, 127, 128], "40": [2, 66, 127, 128], "41": [2, 101], "11": [2, 10, 23, 41, 50, 66, 72, 73, 87, 88, 89, 93, 102, 109, 119, 169, 222, 235, 239, 265], "12": [2, 7, 10, 41, 66, 87, 89, 102, 109, 127, 128, 142, 148, 149, 150, 235, 372, 430], "13": [2, 5, 66, 101, 102, 147, 232, 235, 236], "14": [2, 6, 66, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 200, 235, 236], "15": [2, 23, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 279, 298, 328, 430], "16": [2, 3, 27, 38, 46, 56, 57, 61, 66, 94, 102, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 176, 235, 416, 430], "17": [2, 11, 101, 102, 122, 142, 169, 235], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 307, 414, 415, 422, 426, 427, 429, 433], "sai": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 268, 426, 429, 433], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 44, 50, 58, 67, 68, 89, 90, 94, 97, 101, 102, 109, 115, 118, 121, 122, 123, 126, 129, 130, 142, 143, 150, 151, 183, 187, 205, 212, 224, 268, 269, 304, 317, 320, 337, 414, 415, 416, 417, 426, 427, 428], "handl": [2, 3, 21, 27, 38, 46, 48, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 232, 233, 235, 262, 263, 317, 335, 337, 390, 402, 403, 413, 414, 415, 416, 418, 420, 427, 430], "suggest": [2, 350, 413, 427], "serialenv": [2, 3, 115, 118, 122, 129, 130, 142, 143, 151, 219, 235, 241, 302, 406, 432, 433], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 172, 173, 176, 215, 218, 242, 243, 284, 285, 413, 417, 428, 430], "6": [2, 3, 7, 14, 15, 16, 17, 23, 41, 46, 58, 61, 66, 73, 94, 102, 116, 117, 122, 142, 148, 149, 169, 172, 181, 200, 202, 218, 224, 241, 242, 243, 245, 246, 247, 250, 254, 257, 263, 268, 269, 270, 273, 286, 302, 303, 311, 414, 417, 432], "5": [2, 3, 14, 15, 23, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 50, 53, 58, 61, 63, 66, 67, 68, 96, 101, 102, 107, 115, 118, 119, 122, 127, 128, 129, 130, 134, 135, 137, 142, 143, 148, 149, 150, 151, 154, 155, 169, 172, 173, 175, 181, 197, 209, 216, 217, 218, 224, 235, 238, 239, 240, 241, 242, 243, 245, 246, 251, 252, 253, 254, 256, 259, 260, 263, 265, 268, 269, 273, 278, 281, 287, 288, 298, 299, 302, 304, 310, 334, 337, 339, 342, 343, 370, 408, 412, 413, 414, 417, 419, 423, 426, 427, 428, 430, 431, 432, 433], "7": [2, 3, 6, 10, 41, 46, 50, 53, 58, 66, 67, 94, 102, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 169, 172, 181, 218, 221, 239, 241, 242, 243, 246, 263, 265, 268, 358, 413, 430, 432], "9": [2, 3, 7, 23, 27, 41, 46, 53, 58, 66, 67, 73, 94, 102, 107, 116, 117, 133, 144, 145, 151, 169, 172, 181, 218, 221, 226, 233, 235, 267, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350, 380, 409, 413, 414, 426, 427], "18": [2, 41, 101, 102, 148, 149, 154, 155, 224, 235, 269], "19": [2, 101, 102, 107, 235, 412, 431], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 142, 150, 191, 198, 219, 228, 240, 269, 293, 317, 337, 409, 410, 413, 414, 427, 430, 432], "congruent": 2, "name": [2, 3, 6, 7, 16, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 83, 113, 115, 116, 118, 122, 127, 129, 130, 133, 134, 135, 137, 140, 142, 143, 144, 145, 147, 150, 151, 154, 155, 157, 164, 168, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 186, 188, 189, 190, 192, 194, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 232, 233, 235, 236, 258, 262, 299, 304, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 354, 355, 356, 370, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 410, 413, 414, 415, 416, 417, 420, 421, 422, 426, 427, 428, 429, 433], "randomcroptensordict": [2, 413], "unlik": [2, 25, 100, 122, 134, 135, 154, 155, 238, 240, 302, 327, 337, 372, 408, 414, 417, 419, 421, 432], "stop": [2, 3, 16, 21, 60, 94, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 415, 421, 426, 427, 432, 433], "signal": [2, 3, 14, 15, 16, 17, 23, 41, 94, 101, 102, 107, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 168, 176, 181, 188, 197, 217, 220, 409, 413, 415, 426, 427, 430, 433], "disk": [2, 3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 87, 96, 390, 410, 413, 414, 416, 417, 421, 422, 426, 430], "dump": [2, 3, 11, 35, 52, 53, 54, 58, 59, 64, 67, 68, 73, 85, 87, 88, 89, 90, 96, 103, 105, 109, 370, 371, 372, 422, 423, 426], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 72, 73, 85, 87, 88, 89, 90, 96, 103, 104, 105, 109, 110, 115, 117, 118, 122, 129, 130, 142, 143, 150, 151, 152, 166, 184, 233, 235, 390, 404, 410, 413, 415, 417, 430], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 320, 342, 415, 418, 420, 421, 426, 427, 433], "anticip": [2, 183, 187], "compli": [2, 240, 408], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 223, 232, 270, 294, 299, 300, 303, 304, 305, 306, 307, 415, 417, 426, 427, 428, 430], "exact": [2, 3, 23, 142, 260], "statu": [2, 3, 118], "prioriti": [2, 4, 53, 67, 68, 87, 88, 89, 90, 93, 94, 103, 105, 109, 320, 321, 322, 324, 325, 326, 327, 333, 338, 340, 342, 343, 350, 410, 413, 414, 430], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 41, 46, 56, 57, 60, 61, 66, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 142, 143, 147, 150, 151, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 197, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 240, 294, 299, 300, 303, 304, 305, 306, 307, 335, 352, 353, 354, 355, 356, 372, 409, 413, 414, 419, 426, 428, 433], "hood": [2, 3, 21, 115, 118, 122, 129, 130, 142, 143, 150, 151, 240, 428], "naiv": [2, 229, 418], "just": [2, 3, 4, 73, 105, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 133, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 168, 172, 179, 219, 236, 269, 381, 410, 413, 414, 415, 416, 417, 418, 419, 421, 426, 427, 428, 430, 432, 433], "public": [2, 104, 204, 231], "serializ": 2, "consum": [2, 100, 102, 302, 414, 415, 421, 427, 430], "much": [2, 3, 8, 14, 15, 17, 53, 67, 93, 94, 142, 150, 334, 337, 415, 417, 418, 422, 426, 427, 428, 430, 433], "duplic": [2, 27, 38, 46, 56, 57, 61, 66, 100, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 318, 320, 322, 327, 333, 335, 338, 340, 342, 343, 350], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 41, 46, 64, 66, 73, 84, 85, 92, 94, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 162, 167, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 193, 194, 195, 196, 198, 200, 201, 202, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 235, 241, 244, 245, 246, 247, 248, 249, 252, 255, 258, 262, 268, 273, 274, 277, 278, 279, 281, 282, 294, 295, 296, 297, 298, 299, 302, 303, 304, 311, 312, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 333, 334, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 372, 400, 408, 409, 410, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 430, 432, 433], "plu": [2, 14, 15, 17, 60, 142, 150, 428], "enabl": [2, 7, 8, 87, 89, 100, 109, 173, 258, 262, 279, 302, 370, 372, 385, 415, 418, 426, 427, 428, 430], "three": [2, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 56, 83, 320, 408, 410, 415, 417, 418, 419, 426, 427, 428, 430, 433], "flatstoragecheckpoint": 2, "discard": [2, 3, 72, 122, 167, 229, 371, 430, 433], "compress": 2, "At": [2, 221, 255, 264, 414, 415, 416, 421, 425, 428, 429], "correct": [2, 4, 52, 54, 59, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 196, 393, 415, 416], "addit": [2, 3, 4, 27, 38, 46, 48, 56, 57, 61, 66, 73, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 154, 176, 180, 204, 219, 223, 225, 226, 229, 231, 235, 237, 256, 298, 302, 306, 316, 335, 352, 370, 372, 409, 413, 414, 417, 418, 426, 427, 430], "nestedstoragecheckpoint": 2, "represent": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 88, 115, 118, 122, 129, 130, 142, 143, 150, 151, 204, 229, 231, 235, 317, 337, 413, 428, 429, 433], "appar": [2, 3, 383], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 84, 85, 92, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 161, 164, 169, 179, 186, 194, 197, 219, 227, 237, 243, 249, 252, 268, 274, 279, 281, 294, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 322, 324, 325, 326, 337, 342, 343, 350, 408, 409, 414, 415, 416, 417, 418, 419, 420, 426, 427, 428, 433], "assumpt": [2, 3, 71, 428, 430], "accur": [2, 7, 414, 428, 430], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 41, 46, 47, 55, 64, 66, 69, 72, 84, 85, 92, 94, 101, 102, 115, 116, 117, 118, 121, 122, 123, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 152, 154, 155, 168, 169, 184, 188, 189, 194, 199, 206, 209, 213, 217, 219, 226, 227, 235, 258, 262, 288, 302, 358, 413, 415, 418, 426, 433], "marl": [2, 133, 157, 176, 216, 220, 268, 269, 270, 326, 340, 409, 418, 426, 427], "extra": [2, 10, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 176, 233, 235, 379, 408, 415, 416, 430], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 170], "concret": [2, 413, 415], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 41, 46, 64, 66, 113, 114, 115, 118, 122, 127, 128, 129, 130, 136, 142, 143, 150, 151, 172, 181, 200, 207, 212, 218, 220, 226, 235, 417, 421, 423, 428, 432, 433], "manual_se": [2, 3, 25, 35, 42, 43, 53, 58, 64, 66, 67, 68, 88, 101, 102, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 170, 172, 181, 186, 200, 209, 212, 218, 220, 235, 255, 266, 267, 275, 278, 279, 294, 300, 307, 310, 317, 318, 320, 321, 325, 333, 340, 417, 421, 423, 426, 427, 428, 432, 433], "200": [2, 14, 15, 16, 21, 27, 35, 38, 46, 56, 57, 61, 64, 66, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 154, 155, 209, 235, 245, 246, 253, 282, 283, 370, 372, 413, 416, 417, 421, 423, 430], "22": [2, 101, 102, 232], "rb_test": 2, "_storag": [2, 429, 430], "max_siz": [2, 41, 53, 58, 66, 67, 68, 87, 88, 89, 90, 101, 102, 103, 107, 109, 415, 421], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 52, 54, 59, 73, 137, 224, 249, 266, 267, 268, 316, 320, 370, 413, 415, 417, 426, 427], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 233, 235, 268, 269, 320, 340, 404, 410, 413, 414, 433], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 233, 235, 320, 340, 410, 413], "drawback": 2, "struggl": 2, "big": [2, 415, 421, 430, 433], "sequenti": [2, 9, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 175, 196, 235, 293, 295, 296, 297, 303, 308, 309, 314, 317, 318, 320, 326, 333, 337, 338, 339, 340, 342, 408, 415, 416, 419, 427, 428, 429, 432, 433], "known": [2, 3, 5, 7, 8, 66, 122, 219, 359, 360, 413, 414, 418], "seamless": [2, 263], "integr": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 248, 258, 262, 265, 306, 408, 418, 419, 421, 426, 427, 428, 429], "indiffer": 2, "particularli": [2, 417, 432, 433], "heavili": [2, 11], "smooth": [2, 238, 413, 414, 420], "essenti": [2, 3, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 414, 418, 426, 428, 430], "understand": [2, 8, 413, 414, 417, 418, 419, 426, 427], "purpos": [2, 3, 7, 11, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 256, 317, 319, 331, 334, 337, 339, 400, 413, 415, 416, 417, 420, 422, 426, 427, 429, 433], "guid": [2, 11, 144, 145, 148, 149, 218, 407, 413, 427, 432], "explan": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 240], "effect": [2, 3, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 94, 96, 99, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 176, 181, 226, 235, 240, 390, 408, 413, 419, 426, 430, 433], "realm": [2, 419], "As": [2, 3, 4, 46, 58, 67, 68, 71, 96, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 209, 250, 307, 352, 408, 413, 414, 415, 416, 417, 418, 420, 421, 426, 427, 428, 429, 430, 432, 433], "practition": 2, "often": [2, 3, 8, 270, 332, 335, 390, 413, 414, 418, 420, 428, 430, 433], "encount": [2, 4, 198, 302, 407, 414, 419, 428], "situat": [2, 134, 135], "sometim": [2, 3, 71, 416, 433], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 61, 62, 63, 71, 74, 75, 76, 77, 78, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 138, 139, 140, 141, 142, 143, 147, 150, 151, 152, 153, 154, 155, 184, 221, 225, 256, 257, 258, 260, 261, 262, 265, 295, 296, 297, 335, 338, 380, 410, 414], "immedi": [2, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 351, 426, 427], "199": 2, "info": [2, 3, 14, 15, 53, 58, 67, 68, 73, 93, 94, 96, 99, 101, 102, 115, 116, 117, 118, 121, 122, 123, 124, 129, 130, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 194, 227, 229, 232, 234, 379, 418, 423, 426, 427, 430, 432], "glanc": [2, 418], "seem": [2, 413, 416, 418], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 60, 62, 63, 88, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 176, 205, 216, 225, 256, 258, 260, 262, 289, 295, 296, 297, 312, 408, 414, 416, 418, 426], "less": [2, 137, 290, 402, 403, 409, 415, 416, 430, 432], "omit": [2, 130, 237, 255, 279, 386, 415, 420, 428, 430], "proper": [2, 3, 4, 6, 7, 352, 353, 354, 355, 414, 415, 426, 427, 428, 430], "imposs": [2, 3, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 317, 319, 334, 337, 339], "determin": [2, 41, 53, 67, 73, 93, 94, 115, 118, 122, 129, 130, 142, 143, 150, 151, 154, 155, 156, 184, 204, 231, 268, 279, 320, 414, 419, 426, 427], "complic": [2, 56, 66, 428, 430, 433], "matter": [2, 33, 421], "inconsist": [2, 433], "miss": [2, 3, 4, 6, 7, 27, 31, 38, 41, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 194, 224, 226, 235, 236, 308, 309, 317, 320, 340, 407, 413, 416], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 130, 421], "elimin": [2, 3, 418], "upon": [2, 3, 8, 426, 428], "canon": 2, "definit": [2, 50, 103, 268], "markov": [2, 3, 418, 433], "mdp": [2, 167, 418, 428], "context": [2, 3, 5, 8, 27, 38, 46, 56, 57, 61, 66, 102, 115, 118, 119, 122, 129, 130, 139, 142, 143, 150, 151, 219, 228, 235, 240, 258, 262, 269, 271, 293, 298, 348, 349, 352, 353, 354, 355, 357, 365, 372, 380, 385, 408, 409, 413, 414, 415, 416, 417, 426, 427, 428, 429, 430, 432], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 129, 181, 218, 233, 299, 300, 302, 304, 305, 316, 409, 413, 426, 428, 430], "complet": [2, 7, 9, 100, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 176, 217, 407, 409, 413, 415, 418, 425], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 41, 46, 47, 60, 64, 66, 84, 85, 92, 101, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 168, 169, 172, 173, 184, 188, 194, 206, 219, 227, 235, 239, 258, 262, 265, 302, 308, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 413, 414, 415, 426, 427, 428, 432, 433], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 41, 46, 47, 52, 59, 60, 64, 66, 72, 73, 83, 93, 94, 107, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 161, 167, 169, 170, 173, 174, 179, 180, 183, 185, 187, 188, 189, 194, 196, 197, 198, 202, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 225, 226, 227, 228, 230, 231, 233, 235, 239, 258, 265, 298, 302, 312, 317, 318, 320, 321, 322, 324, 325, 326, 329, 333, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 383, 384, 385, 388, 404, 409, 410, 413, 414, 415, 416, 417, 418, 422, 426, 427, 428, 432, 433], "imit": [2, 3, 331], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 115, 118, 119, 122, 125, 128, 129, 130, 142, 143, 150, 151, 235, 241, 242, 243, 263, 269, 408, 409, 410, 413, 414, 415, 416, 417, 418, 426, 427, 428, 430, 432], "stateless": [2, 3, 41, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 181, 335, 370, 413, 418, 428, 433], "simul": [2, 3, 5, 7, 8, 71, 113, 114, 115, 124, 127, 128, 147, 154, 155, 163, 239, 265, 408, 413, 415, 417, 418, 422, 426, 427], "furthermor": [2, 426, 427], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 115, 118, 122, 129, 130, 142, 143, 150, 151, 166, 181, 192, 217, 226, 235, 255, 257, 261, 334, 413, 414, 415, 417, 423, 426, 427, 433], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 80, 99, 105, 112, 115, 118, 120, 122, 129, 130, 136, 142, 143, 150, 151, 161, 168, 170, 173, 183, 184, 185, 186, 187, 189, 194, 196, 198, 206, 207, 213, 217, 219, 223, 224, 225, 227, 235, 237, 239, 265, 294, 303, 307, 309, 310, 314, 317, 337, 406, 413, 415, 419, 428], "accommod": [2, 3, 418, 419], "uniform": [2, 53, 67, 93, 94, 426], "unambigu": 2, "distinguish": [2, 3, 134, 135, 154, 155], "happen": [2, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 236, 279, 414, 417, 420, 421, 422, 429, 433], "everyth": [2, 414, 415, 416, 422, 423], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 232, 233, 307, 413, 421, 427], "rule": [2, 66, 142, 183, 187, 307, 408, 415], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 73, 87, 88, 89, 93, 101, 109, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 167, 169, 173, 183, 184, 187, 188, 189, 194, 202, 206, 207, 209, 213, 216, 217, 219, 224, 226, 227, 235, 239, 241, 251, 252, 258, 262, 265, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 394, 407, 408, 414, 428], "taken": [2, 3, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 208, 266, 267, 409, 413, 415, 416, 419, 426, 427, 428], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 41, 52, 54, 55, 56, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 87, 88, 89, 93, 101, 109, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 167, 169, 173, 183, 184, 187, 188, 189, 194, 202, 206, 207, 209, 213, 216, 217, 219, 227, 233, 239, 241, 251, 252, 258, 262, 265, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 408, 428], "envbas": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 73, 115, 119, 122, 129, 130, 142, 143, 150, 151, 156, 167, 170, 173, 183, 187, 199, 206, 207, 225, 226, 233, 235, 239, 258, 262, 264, 265, 302, 385, 394, 395, 396, 400, 402, 403, 404, 406, 418], "brought": [2, 415, 416, 419], "step_mdp": [2, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 258, 262, 406, 416, 418, 428, 432, 433], "count": [2, 3, 41, 46, 73, 118, 119, 217, 224, 279, 385, 390, 393, 413, 414, 415, 416, 430, 433], "trigger": [2, 7, 56, 66, 129], "turn": [2, 18, 19, 20, 21, 31, 32, 39, 52, 54, 57, 59, 61, 63, 73, 115, 128, 142, 151, 193, 225, 228, 232, 299, 370, 385, 409, 413, 414, 416, 419, 428, 429], "retain": [2, 115, 118, 122, 129, 130, 142, 143, 150, 151], "regard": [2, 252, 300, 317, 327, 337, 413, 415, 428], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 87, 101, 102, 173, 219, 250, 306, 309, 318, 320, 333, 335, 338, 340, 342, 343, 426, 427, 428, 430, 432], "recur": [2, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 356, 419], "anyth": [2, 4, 14, 15, 16, 17, 18, 19, 20, 21, 409], "els": [2, 113, 114, 173, 184, 256, 257, 260, 261, 273, 408, 410, 413, 414, 415, 416, 426, 427, 428, 429], "repetit": [2, 415, 418, 421], "embed": [2, 204, 229, 230, 231, 245, 280, 294, 295, 296, 297, 306, 307, 311, 429], "strictli": [2, 3, 8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 197, 224, 226, 235, 320, 340, 413, 415], "enforc": [2, 27, 31, 38, 46, 56, 57, 61, 66, 100, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 308, 320, 340, 428], "n_action": [2, 302, 318, 320, 322, 324, 336, 340], "rightmost": [2, 409], "n_ob": [2, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 302, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 420], "estim": [2, 4, 94, 101, 102, 188, 196, 245, 287, 295, 296, 297, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 409, 414, 415, 419, 420, 426, 427], "subsequ": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 235, 416, 426], "proce": [2, 426], "state_valu": [2, 296, 297, 311, 319, 325, 333, 334, 337, 338, 340, 352, 353, 354, 355, 357, 359, 361, 363, 365, 366, 368, 408, 413, 427], "f": [2, 113, 114, 122, 127, 128, 221, 236, 261, 316, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 413, 414, 415, 416, 423, 426, 427, 428, 430, 433], "next_state_valu": [2, 342, 343, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 406], "broadcast": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 250, 326, 340], "left": [2, 48, 94, 101, 173, 180, 182, 183, 185, 189, 196, 198, 204, 206, 207, 213, 217, 220, 223, 225, 227, 229, 231, 235, 255, 268, 414, 415, 417, 421, 422], "would": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 256, 258, 260, 262, 263, 268, 307, 409, 410, 414, 415, 416, 418, 420, 421, 428, 430, 432, 433], "best": [2, 5, 9, 126, 258, 262, 426, 427, 430, 432], "bug": [2, 4], "worst": [2, 414], "twice": [2, 8, 102], "feasibl": 2, "mostli": [2, 3, 17, 278, 372, 409, 422, 430, 433], "eas": [2, 3, 426, 427], "flat": [2, 107], "manner": [2, 122, 204, 229, 408, 413, 414, 415, 421, 425, 428, 430], "ted2flat": [2, 35, 406], "flat2t": [2, 406], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 173, 302], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 96, 115, 116, 117, 118, 122, 129, 130, 142, 143, 150, 151, 191, 192, 194, 215, 216, 217, 220, 224, 226, 228, 235, 320, 340, 409, 415, 426, 427, 428, 430], "both": [2, 3, 7, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 115, 118, 119, 121, 122, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 152, 156, 168, 169, 176, 194, 207, 223, 224, 226, 235, 242, 243, 258, 261, 262, 263, 268, 269, 295, 296, 297, 300, 305, 317, 319, 320, 321, 325, 326, 333, 334, 335, 337, 338, 339, 340, 342, 343, 385, 408, 413, 415, 417, 418, 420, 426, 427, 428, 429, 430, 433], "mark": [2, 3, 16, 115, 118, 122, 129, 130, 142, 143, 150, 151, 221, 258, 262, 352, 354, 355, 421, 430], "identifi": [2, 55, 115, 118, 122, 129, 130, 142, 143, 150, 151], "abov": [2, 3, 7, 27, 38, 46, 56, 57, 61, 66, 74, 115, 118, 122, 129, 130, 142, 143, 150, 151, 225, 235, 259, 287, 288, 316, 409, 410, 413, 415, 417, 418, 419, 426, 427, 428, 433], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 73, 94, 101, 102, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 168, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 187, 189, 191, 194, 196, 198, 200, 204, 206, 207, 212, 213, 216, 217, 220, 221, 223, 225, 226, 227, 229, 231, 232, 235, 237, 242, 243, 244, 245, 246, 249, 251, 252, 253, 256, 257, 258, 260, 261, 262, 263, 268, 269, 276, 278, 279, 281, 290, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 372, 381, 408, 409, 413, 414, 415, 416, 417, 418, 419, 422, 425, 426, 427, 428, 429, 432, 433], "typic": [2, 3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 188, 218, 235, 276, 278, 303, 318, 320, 335, 337, 340, 408, 409, 410, 415, 417, 418, 420, 421, 426, 427, 428], "adjust": [2, 11, 219, 413, 426, 427, 428], "grumodul": [2, 175, 219, 293, 314, 416], "lstmmodul": [2, 258, 293, 416, 417], "skip": [2, 3, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 181, 192, 194, 198, 224, 226, 235, 303, 307, 320, 335, 340, 352, 353, 354, 355, 371, 372, 383, 385, 413, 414, 428], "accumul": [2, 8, 235], "upcom": [2, 335, 361, 362, 363, 364, 366, 367, 368, 369, 413], "popular": [2, 3, 408, 416, 420, 427], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 235, 406, 414], "shift": [2, 35, 37, 46, 47, 64, 84, 85, 92, 313, 352, 353, 354, 355, 415], "approxim": [2, 427, 433], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 176, 249, 277, 317, 323, 336, 337, 381, 404, 415, 416, 427, 430], "2x": 2, "small": [2, 102, 229, 238, 413, 415, 417, 426, 427, 433], "clearer": [2, 417, 419], "lazi": [2, 62, 63, 80, 81, 115, 118, 122, 129, 130, 142, 143, 150, 151, 154, 155, 204, 229, 242, 268, 271, 308, 309, 413, 414, 419, 421, 425, 430, 433], "certainli": 2, "benefici": 2, "welcom": [2, 418], "wrapper": [2, 3, 17, 52, 54, 59, 60, 67, 68, 73, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 232, 236, 240, 241, 290, 298, 302, 307, 312, 352, 377, 378, 379, 404, 406, 415, 416, 418, 426, 427, 429, 432, 433], "around": [2, 5, 7, 17, 67, 68, 115, 118, 122, 129, 130, 136, 142, 143, 146, 150, 151, 240, 278, 302, 307, 352, 413, 414, 427, 433], "selecttransform": [2, 115, 118, 122, 129, 130, 142, 143, 150, 151], "excludetransform": [2, 213, 430], "promptli": 2, "virtual": [2, 3, 121], "instal": [2, 3, 5, 10, 18, 19, 20, 57, 66, 115, 118, 122, 129, 130, 142, 143, 144, 145, 148, 149, 150, 151, 374, 390, 407, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 433], "respons": [2, 3, 8, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 390, 420, 421, 433], "d4rl": 2, "repositori": [2, 7, 154, 155, 426, 427], "wheel": [2, 415], "publish": 2, "openml": [2, 139], "scikit": [2, 139], "panda": 2, "raw": [2, 3, 4, 60, 194, 223, 227, 259, 287, 288, 414, 417, 421, 428], "go": [2, 3, 7, 88, 133, 142, 181, 205, 209, 298, 358, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "natur": [2, 3, 413, 419, 420, 421, 430], "modifi": [2, 3, 7, 8, 27, 38, 46, 56, 57, 61, 66, 72, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 176, 180, 181, 191, 194, 196, 204, 219, 225, 226, 229, 231, 235, 270, 279, 298, 306, 307, 393, 409, 413, 414, 415, 417, 418, 426, 427, 428], "fly": [2, 176, 233, 334, 409, 415, 428, 430, 433], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 179, 422, 433], "pre": [2, 7, 22, 27, 38, 46, 56, 57, 61, 66, 72, 89, 115, 118, 122, 129, 130, 142, 143, 150, 151, 204, 223, 229, 231, 235, 433], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 199, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 232, 233, 235, 240, 256, 260, 270, 287, 299, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 352, 370, 386, 410, 413, 414, 415, 421, 426, 428, 432, 433], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 94, 101, 107, 126, 127, 128, 142, 144, 145, 179, 198, 212, 242, 243, 253, 255, 268, 269, 302, 372, 374, 377, 379, 390, 402, 403, 413, 414, 415, 416, 417, 419, 420, 423, 426, 427, 430, 432], "pipelin": [2, 3, 7, 408, 409, 415], "replac": [2, 3, 6, 7, 27, 38, 46, 56, 57, 61, 66, 94, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 172, 186, 188, 195, 235, 255, 408, 426, 430, 432], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 198, 209, 219, 226, 235, 237, 279, 302, 388, 408, 410, 414, 415, 416, 419, 422, 428, 430, 433], "produc": [2, 3, 31, 32, 39, 41, 63, 101, 169, 172, 173, 242, 243, 263, 269, 275, 295, 297, 298, 307, 372, 415, 416, 417, 418, 419, 421, 430, 433], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 84, 100, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 224, 226, 235, 240, 317, 318, 320, 333, 335, 337, 338, 339, 340, 342, 343, 415], "download": [2, 7, 10, 126, 204, 231, 372, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 143, 414, 426, 427, 428], "robosetexperiencereplai": [2, 101, 102], "fk1": 2, "v4": [2, 122, 142, 169, 208, 361, 362, 363, 364, 366, 367, 368, 369, 413, 415, 429, 432], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 234], "obs_norm": 2, "norm": [2, 4, 8, 113, 114, 238, 390, 413, 414, 415, 426, 427, 428], "num_work": [2, 52, 54, 72, 83, 137, 142, 150, 413, 414], "os": [2, 54, 72, 83, 414], "cpu_count": [2, 54, 72, 83], "num_chunk": 2, "1000": [2, 4, 41, 58, 66, 87, 88, 93, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 233, 237, 255, 278, 279, 303, 307, 332, 413, 414, 415, 416, 417, 419, 421, 423, 428, 429, 430], "mp_start_method": [2, 142, 150, 224, 414, 432], "fork": [2, 5, 413, 414, 415, 416, 426, 427, 429, 432], "recreat": [2, 428], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 58, 67, 68, 94, 96, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 196, 417, 421, 429], "grain": [2, 3, 58, 67, 68, 94, 96, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173], "nomenclatur": 2, "compact": [2, 41, 64, 84, 85, 92], "propos": [2, 176, 188, 240, 264, 332, 341, 408, 416, 430], "replaybufferensembl": [2, 99, 105, 112], "primit": [2, 3, 4, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 94, 96, 107, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 235, 413, 427], "dummi": [2, 3, 151, 184, 370, 413, 417, 421, 433], "semant": [2, 62, 63, 121, 123, 429], "ident": [2, 3, 14, 15, 16, 46, 52, 54, 58, 59, 66, 67, 68, 73, 87, 96, 101, 115, 118, 121, 122, 123, 129, 130, 137, 142, 143, 150, 151, 188, 216, 225, 238, 268, 269, 318, 320, 333, 338, 340, 342, 343, 352, 353, 354, 355, 402, 403, 414, 418, 426, 427], "another_kei": [2, 96], "renam": [2, 3, 52, 54, 59, 73, 96, 167, 207, 209, 413], "resiz": [2, 3, 96, 176, 414, 416, 417, 418, 430, 433], "imag": [2, 3, 4, 7, 11, 176, 178, 182, 204, 222, 231, 263, 370, 372, 413, 414, 417, 418, 422, 427, 429, 433], "comops": 2, "totensorimag": [2, 3, 96, 176, 208, 414, 416, 417, 430, 432, 433], "renametransform": [2, 3, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176], "rb0": [2, 96], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 96, 113, 114, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 162, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 251, 258, 262, 265, 280, 289, 290, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 331, 333, 334, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 371, 372, 400, 408, 413, 414, 415, 416, 417, 419, 420, 423, 425, 426, 427, 428, 429, 430, 432, 433], "pixel": [2, 3, 7, 31, 96, 115, 116, 117, 121, 123, 124, 147, 176, 178, 182, 188, 191, 193, 200, 202, 204, 208, 222, 229, 231, 245, 273, 274, 370, 372, 413, 414, 416, 417, 422, 426, 429, 430, 432, 433], "rb1": [2, 96], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 96, 113, 114, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 162, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 251, 252, 258, 262, 265, 280, 281, 289, 290, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 325, 326, 331, 333, 334, 337, 338, 339, 340, 342, 350, 352, 353, 354, 355, 370, 372, 385, 400, 408, 413, 414, 415, 416, 417, 419, 423, 425, 426, 427, 428, 429, 430, 432, 433], "pixels33": [2, 96], "data0": [2, 88, 96], "244": [2, 96, 204, 231], "data1": [2, 88, 96, 432], "_": [2, 8, 53, 58, 67, 68, 88, 96, 115, 119, 126, 154, 155, 177, 183, 184, 186, 187, 196, 200, 207, 222, 233, 235, 278, 294, 306, 307, 311, 316, 317, 318, 320, 321, 325, 326, 333, 337, 338, 340, 342, 343, 352, 353, 354, 355, 374, 413, 414, 415, 416, 417, 423, 426, 427, 428, 430, 432], "rang": [2, 3, 4, 8, 53, 58, 60, 67, 68, 87, 89, 96, 107, 115, 118, 119, 122, 129, 130, 134, 135, 142, 143, 150, 151, 184, 209, 222, 233, 235, 236, 257, 261, 278, 334, 342, 343, 409, 410, 413, 415, 416, 417, 420, 421, 423, 426, 427, 428, 430, 432], "parent": [2, 3, 21, 27, 37, 38, 46, 48, 56, 57, 61, 66, 71, 73, 96, 105, 112, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 173, 176, 177, 180, 181, 185, 188, 191, 192, 198, 200, 204, 212, 217, 218, 219, 220, 224, 225, 228, 229, 235, 258, 262, 295, 314, 335, 337, 356, 370, 372, 413, 421, 428, 432, 433], "basic": [2, 3, 136, 408, 415, 420, 421, 423, 426, 432, 433], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 96, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 172, 224, 225, 226, 233, 235, 250, 259, 267, 271, 275, 286, 287, 288, 302, 317, 320, 335, 337, 339, 340, 419, 421, 428, 430], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 104, 110, 115, 118, 122, 129, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 240, 241, 242, 243, 245, 246, 247, 248, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 268, 269, 270, 271, 272, 279, 281, 282, 283, 284, 285, 287, 290, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 384, 388, 393, 400, 408, 409, 410, 413, 414, 415, 416, 417, 418, 426, 427, 428, 432, 433], "send": [2, 3, 8, 379, 432], "receiv": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 225, 226, 235, 263, 358, 409, 413, 415, 420, 425, 428], "spawn": [2, 3, 4, 18, 22, 126, 137, 142, 150, 224, 414, 426, 427], "check_env_spec": [2, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 194, 206, 227, 370, 406, 415, 426, 427, 428], "saniti": [2, 3, 7, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 415], "make_composite_from_td": [2, 71, 406, 428], "fall": [2, 4], "categori": [2, 31, 408, 410], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 46, 56, 57, 61, 66, 74, 115, 118, 122, 129, 130, 142, 143, 146, 150, 151, 179, 199, 233, 235, 237, 255, 279, 282, 283, 294, 299, 300, 303, 304, 305, 306, 307, 310, 317, 318, 320, 321, 333, 337, 338, 340, 342, 343, 406, 408, 413, 414, 415, 417, 426, 428, 432, 433], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 75, 76, 77, 78, 96, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 161, 170, 173, 183, 184, 187, 206, 219, 239, 265, 294, 306, 309, 311, 339, 406, 428, 430], "boundeddiscret": [2, 28, 31], "boundedcontinu": [2, 22, 28, 31, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 197, 227], "unboundeddiscret": [2, 74, 143, 194, 406], "unboundedcontinu": [2, 74, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 206, 219, 309, 314, 406], "implicitli": 2, "onehot": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 51, 62, 63, 71, 74, 75, 76, 77, 78, 113, 114, 121, 123, 124, 127, 128, 137, 138, 140, 141, 147, 152, 153, 252, 281, 299, 304, 322, 324, 325, 326, 350, 406, 408], "multionehot": [2, 42, 43, 45, 322, 325, 326, 350, 406], "multicategor": [2, 43, 44, 45, 406], "binari": [2, 3, 7, 26, 27, 50, 152, 170, 174, 252, 281, 299, 300, 304, 305, 322, 325, 326, 350, 406], "concept": [2, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 278, 414, 430], "arbitrari": [2, 3, 25, 50, 58, 115, 118, 122, 128, 129, 130, 142, 143, 150, 151, 172, 409, 413, 414, 428, 430], "combin": [2, 4, 36, 57, 342, 414, 417, 422, 430, 432], "relat": [2, 3, 4, 10, 53, 142, 191, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 414, 423, 428], "nevertheless": [2, 3, 415, 418, 430], "otherwis": [2, 3, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 94, 96, 101, 102, 113, 114, 115, 118, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 176, 177, 181, 186, 194, 200, 218, 219, 220, 224, 225, 226, 233, 235, 236, 238, 240, 256, 259, 260, 268, 269, 287, 288, 293, 299, 304, 307, 310, 318, 320, 329, 335, 336, 340, 352, 354, 355, 385, 387, 409, 410, 413, 414, 415, 416, 428, 433], "similarli": [2, 3, 21, 27, 38, 46, 56, 57, 61, 66, 100, 105, 115, 118, 122, 129, 130, 142, 143, 150, 151, 198, 235, 268, 308, 309, 325, 333, 433], "possess": [2, 71], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 94, 161, 170, 173, 176, 177, 222, 228, 413, 416, 417, 426, 427, 428], "move": [2, 4, 27, 38, 46, 56, 57, 61, 66, 71, 115, 118, 122, 123, 129, 130, 142, 143, 150, 151, 167, 169, 180, 185, 204, 219, 225, 226, 229, 231, 233, 235, 263, 306, 388, 413, 414, 416, 418, 433], "unbind": [2, 52, 53, 54, 58, 59, 67, 68, 73, 198, 258, 262, 302], "said": [2, 415], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 56, 67, 71, 93, 94, 176, 191, 205, 216, 228, 319, 328, 334, 337, 352, 354, 355, 409, 415, 426, 427, 428], "seen": [2, 3, 18, 19, 20, 21, 31, 32, 39, 63, 115, 118, 122, 129, 130, 142, 143, 150, 151, 185, 409, 413, 414, 416, 420, 426, 427, 430], "predict": [2, 3, 46, 60, 251, 253, 264, 265, 298, 312, 317, 319, 324, 327, 329, 330, 334, 337, 339, 351, 413, 414, 420], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 56, 57, 61, 66, 76, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 258, 262, 317, 319, 320, 322, 325, 326, 327, 333, 334, 337, 338, 339, 340, 350, 352, 353, 354, 355, 360, 433], "mont": [2, 317, 319, 334, 337, 413], "carlo": [2, 317, 319, 334, 337, 413], "mct": [2, 41], "act": [2, 3, 4, 101, 102, 144, 145, 226, 251, 269, 318, 320, 321, 333, 338, 340, 342, 343, 416, 417, 426, 427, 430, 432], "tradit": [2, 420, 426], "integ": [2, 14, 15, 16, 17, 23, 38, 42, 44, 46, 50, 56, 57, 60, 61, 73, 94, 101, 102, 103, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 172, 188, 192, 200, 217, 242, 243, 263, 268, 269, 320, 325, 333, 340, 409, 417, 430], "advanc": [2, 3, 21, 53, 58, 67, 68, 115, 118, 122, 129, 130, 142, 143, 150, 151, 418, 421, 430], "rebuild": [2, 41], "initi": [2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 96, 107, 115, 118, 122, 129, 130, 140, 141, 142, 143, 150, 151, 152, 175, 184, 194, 200, 204, 219, 226, 229, 234, 235, 236, 237, 238, 239, 255, 256, 257, 260, 261, 265, 268, 269, 270, 271, 272, 279, 302, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 404, 408, 409, 413, 414, 416, 418, 419, 421, 426, 428, 433], "pair": [2, 3, 46, 52, 54, 56, 59, 66, 73, 115, 116, 117, 118, 122, 129, 130, 142, 143, 150, 151, 209, 219, 224, 258, 295, 303, 307, 335, 352, 353, 354, 355, 356, 408, 409, 413, 414, 415, 419, 420, 425, 428, 433], "term": [2, 60, 88, 196, 260, 261, 271, 272, 316, 317, 326, 392, 414, 415, 418, 419, 427], "pseudocod": [2, 3], "next_stat": [2, 409], "associ": [2, 3, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 235, 282, 404, 413, 430], "sens": [2, 4, 52, 54, 59, 73, 176, 421, 428], "hard": [2, 3, 7, 107, 116, 117, 142, 332, 414, 433], "let": [2, 3, 6, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 176, 235, 258, 262, 268, 269, 299, 385, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433], "know": [2, 3, 4, 9, 53, 58, 67, 68, 121, 123, 237, 335, 338, 385, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 430], "next_td": 2, "Of": [2, 3, 7, 407, 428, 433], "cours": [2, 3, 4, 407, 428, 433], "handi": [2, 3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 422], "undertaken": [2, 73, 409, 428], "link": [2, 6, 7, 118, 414, 423], "hash": [2, 38, 41, 56, 57, 61, 66, 73, 115, 130], "past": [2, 4, 176, 302, 414, 430], "node_map": [2, 41], "_index": [2, 56, 66], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 232, 415, 425], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 68, 93, 94, 100, 115, 129, 212, 221, 233, 235, 279, 302, 377, 383, 414, 416, 418, 421, 427, 428, 430], "next_data": [2, 115, 118, 122, 129, 130, 142, 143, 150, 151], "data_map": [2, 41], "form": [2, 14, 15, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 84, 85, 92, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235, 256, 258, 260, 262, 307, 316, 317, 319, 334, 337, 390, 408, 419, 427], "figur": [2, 3, 73, 130, 413, 415, 416, 427, 428, 433], "flowchart": 2, "o": [2, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 261], "get_tre": [2, 41, 73], "vertex": [2, 73], "longer": [2, 73, 236, 414, 423, 426, 427, 430], "vertic": [2, 73], "branch": [2, 41, 73], "repeat": [2, 73, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 142, 143, 147, 150, 151, 239, 250, 415, 426, 427, 428], "depth": [2, 58, 71, 115, 118, 122, 129, 130, 136, 142, 143, 147, 150, 151, 239, 242, 243, 245, 246, 247, 248, 253, 254, 263, 265, 268, 269, 270, 273, 274, 299, 408, 414, 418, 420, 421, 425, 426, 427, 430], "until": [2, 3, 7, 21, 128, 220, 225, 235, 380, 415, 416, 423, 426, 427], "anymor": [2, 52, 54, 59, 73, 226, 306], "utmost": 2, "commonli": [2, 94, 101, 102, 433], "emploi": [2, 272], "languag": [2, 24, 60, 129], "scarc": 2, "address": [2, 430], "subdomain": 2, "facilit": [2, 3, 7, 203, 204, 219, 229, 231, 295, 296, 297, 408, 413, 416, 419, 428], "extern": [2, 3, 183, 187, 426, 433], "token": [2, 54, 55, 60, 69, 72, 83, 129, 130], "dm": [3, 413, 433], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 53, 58, 61, 67, 68, 72, 98, 104, 107, 108, 110, 111, 113, 114, 115, 118, 122, 126, 127, 128, 129, 130, 136, 137, 138, 142, 143, 150, 151, 154, 167, 185, 209, 223, 225, 229, 230, 258, 262, 268, 270, 295, 301, 317, 318, 320, 321, 322, 324, 325, 326, 328, 333, 337, 338, 339, 340, 342, 343, 379, 390, 408, 409, 410, 413, 414, 416, 418, 419, 420, 422, 426, 427, 428, 430, 433], "abl": [3, 41, 133, 144, 145, 258, 262, 413, 415, 416, 419, 425, 426, 427, 428, 430], "experi": [3, 53, 58, 67, 68, 93, 94, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 374, 375, 376, 377, 378, 379, 407, 414, 415, 417, 421, 422, 426, 427, 430], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 121, 123, 270, 335], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 115, 118, 119, 122, 129, 130, 134, 135, 142, 143, 144, 145, 148, 149, 150, 151, 176, 179, 188, 195, 196, 200, 202, 207, 209, 212, 219, 225, 232, 233, 235, 370, 400, 413, 414, 415, 416, 425, 427, 429, 430, 432, 433], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 113, 114, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 180, 186, 188, 196, 204, 219, 225, 226, 229, 231, 235, 239, 241, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 308, 309, 311, 314, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 400, 408, 409, 413, 414, 415, 416, 417, 419, 420, 423, 425, 426, 427, 428, 429, 432], "organis": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 414], "attribut": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 115, 118, 121, 122, 123, 128, 129, 130, 142, 143, 150, 151, 169, 188, 198, 204, 226, 229, 233, 235, 258, 262, 307, 317, 318, 320, 321, 322, 324, 326, 327, 328, 331, 333, 335, 337, 338, 339, 340, 342, 343, 350, 413, 416, 428], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 96, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 188, 235], "actual": [3, 4, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 232, 393, 409, 413, 415, 417, 426, 427, 428], "retriev": [3, 41, 52, 53, 54, 56, 58, 59, 67, 68, 73, 96, 99, 101, 102, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 167, 177, 185, 188, 200, 239, 242, 265, 302, 303, 307, 310, 314, 317, 318, 319, 320, 322, 334, 337, 338, 340, 342, 343, 350, 352, 353, 354, 355, 404, 410, 414, 415, 419, 428, 433], "care": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 372, 413, 415, 417, 426, 427, 428, 430], "parametr": [3, 272, 307, 318, 320, 325, 333, 340, 413, 415], "hardwar": [3, 417], "observation_spec": [3, 41, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 170, 173, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 191, 193, 194, 195, 196, 200, 202, 204, 206, 208, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 232, 233, 235, 239, 258, 262, 265, 394, 400, 413, 415, 420, 425, 426, 427, 428, 433], "state_spec": [3, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 170, 180, 185, 200, 225, 227, 228, 235, 239, 265, 428, 433], "reward_spec": [3, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 170, 173, 174, 179, 180, 183, 185, 187, 197, 206, 210, 211, 212, 214, 216, 225, 227, 228, 235, 239, 265, 415, 426, 427, 428, 433], "done_spec": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 183, 185, 187, 188, 206, 216, 225, 227, 235, 426, 427, 428, 433], "flag": [3, 8, 53, 58, 67, 68, 96, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155, 195, 279, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 426, 427, 428, 429], "input_spec": [3, 73, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 169, 173, 180, 183, 185, 186, 198, 202, 206, 207, 212, 213, 216, 217, 218, 219, 223, 225, 226, 227, 230, 235, 415, 428], "full_action_spec": [3, 73, 115, 118, 122, 129, 130, 140, 141, 142, 143, 150, 151, 152, 153, 169, 185, 239, 265, 426, 427], "full_state_spec": [3, 41, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 185, 239, 265], "output_spec": [3, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 180, 183, 185, 189, 196, 198, 206, 207, 213, 217, 223, 225, 226, 227, 235, 428], "full_observation_spec": [3, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 239, 265], "full_reward_spec": [3, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 185, 206, 426, 427], "full_done_spec": [3, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 173, 185, 206, 426, 427], "carri": [3, 21, 44, 72, 115, 118, 122, 129, 130, 142, 143, 150, 151, 219, 335, 414, 416, 426, 427, 428, 430], "nontensor": [3, 49, 194, 227, 406], "spec_lock": [3, 118], "modif": [3, 5, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 191, 194, 235, 335, 409, 415, 428], "children": [3, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "unlock": [3, 31, 32, 39, 52, 54, 59, 63, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151], "set_spec_lock_": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151], "reason": [3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 204, 229, 235, 262, 409, 413, 414, 415, 420, 421, 426, 428, 430], "easi": [3, 5, 11, 115, 116, 117, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 237, 255, 279, 408, 409, 413, 414, 415, 427, 429, 430, 432, 433], "cach": [3, 52, 54, 72, 83, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 172, 183, 187, 204, 225, 226, 231, 240, 382], "principl": 3, "new_spec": 3, "eras": [3, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226], "relock": 3, "previous": [3, 4, 41, 415, 433], "importantli": [3, 303, 307], "action_s": 3, "help": [3, 4, 27, 38, 46, 56, 57, 61, 66, 71, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 188, 235, 317, 319, 334, 337, 339, 407, 409, 413, 414, 415, 416, 426, 427], "With": [3, 127, 128, 133, 218, 410, 414, 425, 426, 427, 430, 433], "necessarili": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 433], "present": [3, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 93, 94, 96, 100, 115, 118, 121, 122, 129, 130, 142, 143, 150, 151, 167, 168, 189, 209, 213, 219, 224, 226, 235, 243, 244, 245, 246, 247, 248, 254, 258, 260, 262, 272, 277, 279, 302, 306, 307, 308, 309, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 404, 410, 413, 423, 425, 426, 427, 430, 432], "0s": [3, 219, 416], "step_and_maybe_reset": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 418], "done_kei": [3, 23, 35, 37, 41, 47, 64, 84, 85, 92, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 172, 176, 188, 209, 217, 235, 426, 427], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 74, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 321, 322, 324, 340, 415, 419, 426, 427, 430], "_reset": [3, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 168, 170, 172, 173, 176, 183, 187, 195, 206, 221, 239, 265, 426], "data_": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151], "append": [3, 8, 11, 41, 53, 58, 67, 68, 96, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 172, 179, 180, 184, 198, 209, 219, 226, 232, 257, 258, 261, 262, 299, 304, 413, 414, 415, 416, 417, 426, 427, 428, 429, 430, 432], "seed": [3, 14, 15, 16, 17, 21, 58, 67, 68, 96, 115, 118, 122, 129, 130, 136, 142, 143, 144, 145, 150, 151, 154, 155, 156, 170, 173, 183, 187, 194, 206, 226, 370, 390, 426], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 165, 180, 204, 219, 225, 226, 229, 231, 235, 244, 253, 273, 283, 294, 303, 306, 307, 310, 318, 335, 385, 408, 413, 414, 415, 416, 417, 419, 420, 423, 426, 428, 432, 433], "preced": [3, 46, 115, 176, 416], "risk": [3, 205], "overlap": [3, 67, 107], "reproduc": [3, 57, 61, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 176, 194, 413, 415, 417, 427], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 46, 52, 54, 55, 60, 66, 69, 72, 73, 74, 83, 87, 88, 89, 90, 93, 94, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 184, 186, 210, 217, 218, 220, 238, 286, 287, 288, 310, 318, 320, 325, 326, 333, 335, 336, 340, 372, 387, 408, 413, 414, 415, 416, 419, 426, 427, 430], "max_step": [3, 11, 107, 115, 118, 122, 129, 130, 134, 135, 136, 142, 143, 150, 151, 154, 155, 217, 224, 235, 370, 418, 419, 420, 422, 423, 426, 427, 432, 433], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 56, 60, 66, 113, 114, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 175, 196, 241, 252, 258, 262, 265, 280, 281, 289, 290, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 318, 320, 321, 325, 326, 328, 329, 330, 331, 333, 335, 338, 340, 342, 343, 350, 351, 352, 353, 354, 355, 385, 400, 406, 413, 415, 416, 420, 423, 425, 426, 427, 428, 429, 433], "trail": [3, 233], "treat": [3, 46, 409, 419, 420], "brief": [3, 415, 418, 420, 430], "deliveri": 3, "metaclass": [3, 118], "everi": [3, 8, 27, 31, 32, 38, 39, 46, 50, 53, 56, 57, 58, 61, 63, 66, 67, 68, 73, 96, 103, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 217, 218, 233, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 268, 269, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 335, 390, 410, 413, 414, 415, 416, 418, 419, 426, 427, 428], "flank": [3, 409, 416], "dual": 3, "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 176, 194, 224, 226, 233, 235, 239, 252, 253, 265, 266, 267, 268, 269, 270, 273, 274, 282, 283, 297, 300, 317, 320, 327, 328, 329, 330, 337, 340, 352, 357, 365, 412, 413, 415, 417, 419, 420, 421, 422, 426, 427, 430], "union": [3, 20, 27, 31, 32, 38, 39, 40, 44, 45, 46, 48, 50, 51, 56, 57, 61, 62, 63, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 268, 289, 324, 326, 338, 401, 404], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 63, 134, 135, 157, 413], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 94, 101, 102, 406], "adjac": [3, 23, 191, 302], "junction": 3, "inittrack": [3, 258, 262, 302, 413, 416], "tutori": [3, 143, 405, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 433], "scratch": [3, 8, 414, 428], "mere": [3, 17, 417], "batch_lock": [3, 115, 118, 120, 122, 129, 130, 142, 150, 173, 219, 226, 428], "contrast": [3, 256, 278, 332, 430], "notabl": 3, "braxenv": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 207, 406, 418], "jumanjienv": [3, 406], "straightforward": [3, 413, 414, 418, 419, 420, 421, 430], "merg": [3, 53, 58, 67, 68, 428], "correctli": [3, 7, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "silent": [3, 27, 38, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313], "_step": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235], "temporari": [3, 413], "hold": [3, 225, 348, 349, 428, 430], "arm": 3, "unbatch": [3, 256, 260], "captur": [3, 237, 255, 279, 417], "base_env": [3, 114, 115, 118, 122, 123, 128, 129, 130, 141, 142, 143, 150, 151, 153, 169, 170, 173, 179, 181, 183, 186, 187, 196, 202, 206, 208, 214, 217, 219, 220, 224, 226, 235, 372, 380, 413, 414, 415, 417, 426, 429, 432, 433], "break_when_all_don": [3, 115, 118, 122, 128, 129, 130, 142, 143, 150, 151], "conditionalskip": 3, "programmat": 3, "pretti": [3, 413, 418, 422, 430], "likewis": 3, "break_when_any_don": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 172, 224, 235, 241, 302, 427], "te": 3, "paragraph": 3, "deep": [3, 9, 176, 197, 245, 246, 247, 248, 251, 279, 317, 320, 332, 340, 341, 413, 426], "dive": 3, "gym3": 3, "envpool": [3, 137, 138], "interfac": [3, 125, 139, 263, 271, 408, 409, 413, 415, 417, 422, 428, 430], "simultan": [3, 20, 128, 137, 138, 142, 150, 428], "advantag": [3, 8, 254, 317, 319, 334, 337, 339, 352, 353, 354, 355, 356, 357, 359, 361, 363, 365, 366, 368, 409, 410, 413, 414, 415, 416, 427, 428, 433], "scale": [3, 4, 24, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 196, 200, 211, 218, 222, 233, 238, 253, 259, 282, 283, 287, 288, 295, 296, 297, 303, 307, 309, 317, 318, 320, 333, 337, 338, 339, 340, 388, 394, 404, 408, 413, 414, 415, 416, 419, 427, 432], "varieti": [3, 11], "inherit": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 264, 268, 269, 335, 410, 415, 426, 427], "from_pixel": [3, 11, 113, 114, 116, 117, 121, 123, 124, 127, 128, 147, 176, 208, 370, 372, 413, 414, 416, 418, 422, 423, 429, 430, 432, 433], "81": [3, 101], "simpli": [3, 6, 52, 54, 59, 72, 73, 105, 107, 112, 189, 213, 232, 335, 352, 408, 409, 413, 415, 420, 426, 427, 433], "d": [3, 53, 56, 58, 66, 67, 68, 83, 93, 94, 238, 256, 260, 303, 307, 432], "privat": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 232, 428, 433], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 42, 44, 50, 52, 53, 54, 58, 59, 67, 68, 73, 96, 102, 107, 319, 334, 337, 381, 383, 385, 390, 393, 394, 412, 413, 414, 415, 416, 420, 426, 427, 429, 430, 431, 432], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 52, 54, 59, 60, 73, 96, 99, 115, 118, 122, 129, 130, 142, 143, 150, 151, 152, 153, 200, 211, 259, 271, 282, 287, 288, 350, 408, 409, 419, 420, 426, 428, 430], "inner": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 186, 226, 410, 414, 415, 427, 433], "logic": [3, 426], "kept": [3, 23, 100, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 167, 186, 213, 259, 287, 288, 420, 426], "mind": [3, 94, 101, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 426, 427], "wherev": 3, "lost": [3, 8, 232], "intern": [3, 41, 70, 115, 118, 122, 129, 130, 142, 143, 150, 151, 411], "face": [3, 5, 8, 9, 418, 433], "NOT": [3, 84, 85, 92, 102, 205], "right": [3, 6, 7, 23, 60, 94, 101, 414, 415, 417, 427, 428, 433], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 181, 226, 235, 352, 353, 354, 355, 426], "preclud": 3, "presenc": [3, 56, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 420], "annihil": 3, "supersed": [3, 23], "pettingzoowrapp": [3, 406], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 133, 134, 135, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 157, 197, 216, 347, 408, 414, 419, 421, 427, 430], "__not__": [3, 303, 318, 320, 333, 338, 340, 342, 343], "constrain": [3, 196, 258, 262, 337, 433], "li": 3, "fact": [3, 7, 8, 413, 415, 418, 426, 427, 428, 429, 430, 433], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "perfectli": [3, 410, 413, 417, 428], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 380, 420, 432], "agent0": [3, 417], "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 235, 250, 372, 404, 408], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 90, 93, 94, 96, 97, 99, 100, 101, 102, 103, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 167, 168, 169, 170, 172, 173, 176, 177, 181, 183, 184, 186, 187, 188, 189, 191, 194, 196, 198, 199, 200, 202, 204, 206, 207, 209, 211, 212, 213, 216, 217, 219, 222, 223, 224, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 271, 272, 286, 287, 288, 293, 294, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 379, 380, 383, 384, 385, 387, 388, 390, 404, 414, 415, 417, 428, 432, 433], "500": [3, 413, 414], "note": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 164, 168, 183, 187, 224, 233, 235, 240, 256, 258, 260, 262, 279, 303, 307, 327, 406, 409, 414, 417, 419, 425, 426, 427, 433], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 142, 150], "bottleneck": [3, 8, 94, 101, 102], "great": [3, 7, 8, 417, 426, 432], "speedup": [3, 8, 426, 433], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 167, 183, 187, 257, 261, 413, 415], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 16, 87, 89, 109, 115, 118, 122, 126, 129, 130, 142, 143, 150, 151, 205, 433], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 87, 115, 118, 122, 129, 130, 142, 143, 150, 151, 152, 156, 157, 176, 190, 199, 209, 218, 219, 220, 224, 226, 235, 237, 255, 279, 320, 335, 340, 380, 413, 415, 426, 427, 430], "mismatch": [3, 56, 414], "subprocess": [3, 14, 15, 17, 119, 142, 150], "multithreadedenv": [3, 406], "underneath": 3, "higher": [3, 4, 94, 179, 310, 413, 414, 415, 426, 430, 433], "flexibl": [3, 9, 137, 344, 409, 410, 413, 417, 430, 433], "cover": [3, 121, 123, 407, 415, 418, 421, 422, 428, 432], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 41, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 72, 73, 74, 83, 96, 115, 118, 122, 129, 130, 133, 136, 139, 142, 143, 144, 145, 150, 151, 158, 164, 165, 167, 173, 176, 180, 183, 185, 188, 189, 194, 196, 198, 204, 206, 207, 213, 217, 219, 223, 224, 225, 226, 227, 229, 231, 233, 235, 237, 242, 243, 263, 268, 269, 272, 280, 289, 291, 299, 303, 306, 307, 314, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 347, 350, 358, 370, 402, 406, 408, 413, 414, 415, 417, 421, 426, 427, 428, 430, 433], "atari": [3, 4, 176, 243, 372, 417, 422, 433], "classic": [3, 136, 145, 414], "benchmark_batched_env": 3, "seamlessli": [3, 428], "infrastructur": [3, 426, 427], "paradigm": [3, 17, 427], "decpodp": 3, "game": [3, 4, 5, 115, 134, 135, 140, 141, 243, 372, 417, 422], "thank": [3, 413, 417, 418, 432], "carrier": [3, 415, 416, 418, 430], "particular": [3, 27, 38, 46, 56, 57, 61, 66, 72, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 226, 235, 409, 410, 414, 416, 418, 425, 427, 430], "thu": [3, 334, 427], "vma": [3, 154, 155, 370, 426, 427], "robot": [3, 5, 7, 204, 229, 231, 417, 427], "vmasenv": [3, 370, 406, 426, 427], "balanc": [3, 116, 117, 413, 414], "num_env": [3, 21, 121, 125, 138, 154, 155, 370, 426, 427], "n_agent": [3, 154, 155, 268, 269, 270, 280, 289, 350, 370, 409, 426, 427], "ground_rew": 3, "pos_rew": 3, "style": [3, 53, 58, 67, 68], "vari": [3, 121, 123, 124, 144, 145, 147, 154, 205, 409, 417, 427], "creation": [3, 142, 150, 433], "info_spec": [3, 142], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 28, 29, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 113, 114, 115, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 168, 169, 170, 188, 206, 252, 275, 278, 281, 299, 300, 303, 304, 305, 322, 325, 326, 350, 406, 416], "simpl": [3, 9, 27, 38, 46, 50, 56, 57, 61, 66, 71, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 245, 302, 307, 322, 324, 335, 339, 409, 413, 414, 415, 418, 419, 420, 426, 427, 430, 433], "prefix": [3, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 221, 224, 226, 235, 303, 320, 335, 340, 371, 416, 420, 433], "exactli": [3, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 124, 129, 130, 142, 143, 150, 151, 224, 226, 235, 256, 260, 275, 320, 340, 413, 416, 421, 426, 427], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 115, 118, 122, 129, 130, 142, 143, 146, 150, 151, 167, 169, 170, 186, 198, 237, 239, 255, 264, 265, 279, 302, 409, 426, 427], "reward_kei": [3, 35, 37, 41, 47, 64, 84, 85, 92, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 235, 239, 265, 384, 388, 426, 427], "set_kei": [3, 188, 317, 319, 320, 322, 325, 326, 327, 333, 334, 335, 337, 338, 339, 340, 350, 356, 413, 426, 427], "awai": [3, 415, 418, 426, 427, 432], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 44, 45, 48, 49, 50, 51, 63, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 195, 217, 219, 225, 307], "full": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 240, 258, 262, 300, 307, 381, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "autoresettransform": 3, "invalid": [3, 27, 38, 46, 56, 57, 61, 66, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 157, 235, 266, 267], "nan": [3, 172, 232], "auto_reset": [3, 41, 115, 118, 122, 128, 129, 130, 142, 143, 150, 151, 172, 184, 235, 428], "auto_reset_replac": [3, 172], "placehold": [3, 124, 188, 226], "set_gym_backend": [3, 115, 118, 121, 122, 129, 130, 142, 143, 150, 151, 160, 172, 406, 418, 432], "autoresettinggymenv": [3, 172], "self": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 239, 252, 255, 258, 262, 265, 268, 269, 280, 289, 303, 306, 311, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 410, 413, 428, 432], "super": [3, 136, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 187, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 239, 252, 265, 311, 318, 320, 321, 326, 333, 338, 340, 342, 343, 413, 428, 432], "td_reset": [3, 172], "exclud": [3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 172, 176, 189, 280, 319, 334, 337, 426, 427, 430], "r": [3, 4, 41, 46, 115, 169, 170, 172, 179, 181, 200, 214, 221, 224, 233, 238, 241, 257, 307, 316, 351, 370, 414, 428, 433], "3633e": [3, 172], "02": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 414, 423], "4877e": [3, 172], "01": [3, 172, 200, 238, 279, 313, 317, 319, 334, 337], "2849e": [3, 172], "7584e": [3, 172], "6609e": [3, 172], "6166e": [3, 172], "8366e": [3, 172], "2761e": [3, 172], "5685e": [3, 172], "4102e": [3, 172], "8111e": [3, 172], "9959e": [3, 172], "0865e": [3, 172], "5644e": [3, 172], "2119e": [3, 172], "2542e": [3, 172], "03": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 172, 200, 221], "9952e": [3, 172], "4059e": [3, 172], "2094e": [3, 172], "9009e": [3, 172], "5140e": [3, 172], "3554e": [3, 172], "2920e": [3, 172], "7893e": [3, 172], "6429e": [3, 172], "3057e": [3, 172], "2867e": [3, 172], "6963e": [3, 172], "3818e": [3, 172], "2576e": [3, 172], "2679e": [3, 172], "1640e": [3, 172], "00": [3, 113, 114, 172, 412, 431], "6972e": [3, 172], "0212e": [3, 172], "5959e": [3, 172], "4637e": [3, 172], "3121e": [3, 172], "2168e": [3, 172], "5232e": [3, 172], "7704e": [3, 172], "7457e": [3, 172], "4127e": [3, 172], "1064e": [3, 172], "0854e": [3, 172], "5712e": [3, 172], "2189e": [3, 172], "5235e": [3, 172], "8289e": [3, 172], "0009e": [3, 172], "0257e": [3, 172], "8893e": [3, 172], "5872e": [3, 172], "9405e": [3, 172], "7766e": [3, 172], "0403e": [3, 172], "0626e": [3, 172], "2959e": [3, 172], "7263e": [3, 172], "2775e": [3, 172], "9564e": [3, 172], "0411e": [3, 172], "6769e": [3, 172], "6354e": [3, 172], "8698e": [3, 172], "1765e": [3, 172], "6292e": [3, 172], "5375e": [3, 172], "1820e": [3, 172], "7023e": [3, 172], "5836e": [3, 172], "9016e": [3, 172], "4826e": [3, 172], "6191e": [3, 172], "6387e": [3, 172], "8667e": [3, 172], "2056e": [3, 172], "1147e": [3, 172], "5991e": [3, 172], "0278e": [3, 172], "5219e": [3, 172], "3067e": [3, 172], "6617e": [3, 172], "3322e": [3, 172], "2629e": [3, 172], "4599e": [3, 172], "7298e": [3, 172], "5848e": [3, 172], "0148e": [3, 172], "5745e": [3, 172], "6982e": [3, 172], "7877e": [3, 172], "3527e": [3, 172], "7285e": [3, 172], "6668e": [3, 172], "0583e": [3, 172], "6956e": [3, 172], "3962e": [3, 172], "9845e": [3, 172], "5015e": [3, 172], "5903e": [3, 172], "9993e": [3, 172], "9418e": [3, 172], "0196e": [3, 172], "6557e": [3, 172], "2109e": [3, 172], "8997e": [3, 172], "1507e": [3, 172], "7363e": [3, 172], "0310e": [3, 172], "9574e": [3, 172], "8980e": [3, 172], "0090e": [3, 172], "forecast": 3, "awar": [3, 7, 87, 88, 89, 90, 103, 105, 109, 258, 262, 414, 416], "detect": [3, 335, 409], "return_contigu": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 425], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 107, 115, 118, 120, 122, 129, 130, 142, 143, 150, 151, 156, 167, 168, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 188, 189, 190, 191, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 237, 239, 255, 258, 262, 264, 265, 279, 298, 300, 302, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 390, 413, 426, 428], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 46, 50, 53, 56, 57, 60, 61, 66, 67, 74, 93, 94, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 169, 172, 176, 180, 183, 187, 196, 197, 200, 204, 209, 210, 211, 218, 219, 222, 225, 226, 229, 231, 233, 235, 237, 238, 240, 241, 250, 253, 256, 259, 260, 263, 266, 267, 271, 272, 278, 282, 283, 286, 288, 306, 310, 313, 315, 316, 317, 318, 319, 320, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 351, 357, 358, 359, 360, 361, 362, 363, 364, 365, 388, 413, 414, 430, 433], "_set_se": [3, 170, 173, 183, 187, 206, 428], "lazystackedtensordict": [3, 41, 63, 88, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 184, 425], "float32": [3, 14, 15, 16, 28, 31, 35, 41, 52, 53, 54, 56, 59, 60, 64, 66, 67, 68, 71, 72, 73, 74, 87, 88, 89, 93, 94, 101, 109, 113, 114, 115, 118, 121, 122, 123, 127, 128, 129, 130, 136, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 161, 167, 169, 173, 183, 187, 188, 189, 194, 197, 200, 202, 206, 207, 209, 213, 216, 217, 219, 222, 227, 239, 241, 251, 252, 258, 262, 265, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 408, 428], "exclusive_field": [3, 41, 88, 184], "stack_dim": [3, 41, 88, 184], "dramat": 3, "carefulli": [3, 426, 427, 433], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 235, 294, 299, 300, 303, 304, 305, 306, 307, 318, 320, 333, 338, 340, 342, 343, 415, 426, 427], "plain": [3, 8, 418], "larg": [3, 4, 30, 52, 54, 59, 73, 101, 102, 183, 187, 229, 317, 319, 334, 337, 339, 414, 415, 426, 427, 430], "expens": [3, 94, 101, 102, 370, 430], "absent": [3, 31, 32, 39, 63, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 213, 226], "torchvis": [3, 11, 204, 231, 374, 426, 432, 433], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 96, 115, 118, 119, 122, 129, 130, 136, 142, 143, 150, 151, 166, 171, 173, 180, 181, 184, 188, 194, 219, 226, 227, 235, 236, 242, 243, 263, 270, 307, 316, 335, 370, 395, 396, 402, 403, 404, 414, 430], "bring": [3, 415, 418, 433], "signific": [3, 5, 8, 415, 432, 433], "kind": [3, 58, 71, 420, 426, 430], "consult": 3, "interest": [3, 303, 307, 408, 414, 415, 418, 427, 428, 433], "resize_par": 3, "revers": [3, 260], "order": [3, 11, 16, 27, 38, 46, 50, 53, 56, 57, 58, 61, 66, 67, 68, 96, 100, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151, 177, 183, 184, 187, 194, 202, 216, 224, 226, 235, 278, 294, 299, 306, 308, 309, 311, 317, 318, 320, 321, 325, 326, 333, 337, 338, 339, 340, 342, 343, 414, 426, 427], "chain": [3, 52, 53, 54, 58, 59, 67, 68, 73, 129, 130, 180, 186, 242, 243, 309, 433], "in_keys_inv": [3, 162, 179, 183, 185, 187, 194, 200, 201, 202, 206, 207, 209, 214, 223, 225, 227, 228, 413, 425, 428, 433], "append_transform": [3, 41, 53, 58, 67, 68, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 162, 169, 170, 172, 173, 175, 176, 177, 180, 181, 184, 185, 188, 189, 190, 192, 194, 195, 196, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 241, 258, 262, 370, 413, 416, 426, 428, 430, 432, 433], "doubletofloat": [3, 413, 415, 425], "float64": [3, 27, 38, 46, 56, 57, 61, 66, 115, 116, 117, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 169, 180, 183, 187, 204, 219, 225, 226, 229, 231, 235, 306], "think": [3, 407, 415, 426, 427, 433], "in_": 3, "out_": 3, "perspect": [3, 252, 300, 327, 415, 417], "outer": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 410, 413, 414, 433], "ob": [3, 4, 8, 23, 31, 32, 39, 41, 53, 58, 63, 66, 67, 68, 73, 93, 96, 101, 102, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 167, 170, 172, 183, 185, 187, 200, 214, 216, 222, 245, 246, 247, 248, 268, 269, 270, 304, 311, 318, 320, 321, 326, 333, 338, 340, 342, 343, 352, 353, 354, 355, 414, 417, 425, 426, 428, 430, 432, 433], "obs_standard": 3, "out_keys_inv": [3, 162, 179, 183, 185, 187, 194, 200, 201, 202, 206, 207, 214, 216, 223, 225, 227, 228, 428], "illustr": [3, 413, 414, 419, 430], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 87, 88, 89, 90, 94, 100, 101, 103, 105, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 173, 180, 183, 185, 187, 189, 196, 198, 206, 207, 213, 217, 223, 225, 226, 227, 233, 235, 260, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 409, 413, 416, 426, 427, 428, 429, 430, 433], "schemat": [3, 409], "outermost": 3, "innermost": 3, "similar": [3, 27, 38, 46, 48, 52, 54, 56, 57, 58, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 180, 204, 219, 225, 226, 229, 230, 231, 233, 235, 295, 297, 303, 306, 307, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 428, 430, 432, 433], "transform_action_spec": [3, 180, 185, 200, 225, 227, 228, 235], "spec_from_random_valu": 3, "_apply_transform": [3, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 428, 433], "rand": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 88, 96, 113, 114, 127, 128, 136, 140, 141, 146, 152, 153, 170, 173, 183, 187, 206, 216, 239, 265, 303, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 340, 342, 343, 428, 432, 433], "approach": [3, 53, 58, 67, 68, 176, 200, 238, 268, 269, 342, 413, 415, 420, 421, 426, 433], "insid": [3, 52, 54, 59, 73, 142, 433], "did": [3, 58, 232, 358, 414, 415, 421, 430, 433], "_inv_apply_transform": [3, 169, 225, 235, 428, 433], "actiondiscret": 3, "rand_act": [3, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 173, 184, 226, 418], "action_discret": 3, "addonetoob": 3, "Is": [3, 225], "rewrit": [3, 225], "_call": [3, 170, 172, 173, 175, 176, 177, 180, 181, 185, 186, 188, 189, 190, 191, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 428], "_inv_cal": [3, 169, 225, 235], "overwrit": [3, 225], "till": [3, 225, 232], "encapsul": [3, 225, 418, 419, 420], "forget": [3, 225, 260], "edit": [3, 225, 235, 421], "top": [3, 4, 107, 113, 114, 127, 128, 182, 225, 239, 265, 419], "transform_output_spec": [3, 173, 180, 183, 185, 189, 196, 198, 206, 207, 213, 217, 223, 225, 227, 235], "transform_input_spec": [3, 169, 173, 180, 183, 185, 186, 198, 202, 206, 207, 212, 216, 217, 218, 219, 223, 225, 227, 230, 235], "transform_observation_spec": [3, 173, 176, 177, 178, 179, 180, 182, 183, 185, 188, 189, 191, 193, 195, 196, 198, 200, 202, 206, 207, 208, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 428], "transform_state_spec": [3, 180, 185, 200, 225, 227, 228, 235], "transform_reward_spec": [3, 173, 174, 179, 180, 183, 185, 189, 196, 197, 198, 206, 207, 210, 211, 212, 213, 214, 216, 217, 223, 225, 227, 228, 235], "rewardsum": [3, 167, 225, 235, 426, 427], "undo": 3, "addonetoact": 3, "subtract": [3, 218], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 96, 115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151, 152, 153, 164, 167, 183, 187, 188, 212, 224, 226, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 370, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 410, 413, 415, 418, 430], "manipul": [3, 4, 8, 116, 117, 204, 225, 229], "third_transform": 3, "unexpect": [3, 14, 15, 16, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 433], "behviour": 3, "fortun": [3, 416, 417, 418, 419, 422], "alreadi": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 87, 115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 219, 235, 236, 307, 352, 353, 354, 355, 413, 415, 422, 426, 427], "catfram": [3, 302, 414], "notic": [3, 107, 176, 409, 415, 423, 428], "parenthood": 3, "henc": [3, 53, 168, 205, 268, 413, 415, 426, 427, 428], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 142, 150, 226, 370, 380, 428], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 121, 122, 123, 129, 130, 134, 135, 142, 143, 144, 145, 150, 151, 154, 155, 169, 186, 194, 275, 278, 281, 324, 325, 326, 327, 408, 414, 419, 427], "might": [3, 52, 54, 55, 59, 73, 376, 407, 413, 418, 433], "action_mask": [3, 115, 127, 128, 144, 145, 148, 149, 170], "unavail": [3, 144, 145], "probabl": [3, 4, 8, 60, 96, 99, 240, 241, 250, 252, 255, 256, 258, 260, 262, 263, 266, 267, 275, 287, 288, 303, 307, 320, 337, 408, 409, 414, 417, 419, 432], "probabilistictensordictmodul": [3, 196, 307, 308, 409, 432], "tensordictsequenti": [3, 56, 66, 241, 255, 258, 262, 279, 299, 302, 308, 309, 314, 408, 413, 414, 416, 417, 419, 423, 425, 426, 429, 432], "maskedcategor": [3, 267, 406], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 113, 114, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 180, 196, 204, 219, 225, 226, 229, 231, 235, 239, 241, 242, 243, 245, 246, 247, 248, 252, 254, 255, 263, 265, 268, 269, 271, 272, 279, 281, 282, 283, 294, 295, 296, 297, 301, 302, 303, 304, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 400, 408, 414, 425, 429, 432], "in_feat": 3, "out_feat": 3, "logit": [3, 54, 60, 251, 266, 267, 275, 278, 300, 303, 325, 326, 408], "dist": [3, 10, 266, 267, 275, 307, 409, 419], "distribution_class": [3, 196, 295, 296, 297, 298, 303, 307, 309, 317, 318, 320, 325, 326, 333, 337, 338, 339, 340, 408, 413, 415, 419, 426, 427, 432], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 113, 114, 115, 118, 122, 123, 127, 128, 129, 130, 135, 138, 140, 141, 142, 143, 144, 145, 150, 151, 153, 155, 156, 164, 181, 224, 226, 235, 236, 258, 262, 290, 295, 296, 297, 302, 304, 307, 312, 335, 350, 408, 413, 414, 415, 416, 420, 423, 426, 427, 433], "actionmask": [3, 115], "your_base_env": 3, "mask_kei": [3, 23, 170, 205, 235], "itself": [3, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 160, 172, 235, 335, 342, 415, 418], "ey": 3, "report": [3, 113, 114, 127, 128, 422], "foremost": 3, "callback": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151, 427], "ad": [3, 4, 16, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 80, 93, 94, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 194, 212, 224, 226, 235, 238, 271, 272, 279, 316, 317, 319, 320, 322, 327, 334, 337, 340, 350, 414, 416, 417, 419, 426, 430, 432, 433], "tensordictrecord": [3, 406], "videorecord": [3, 11, 370, 406, 415, 422, 423, 426], "csvlogger": [3, 11, 370, 372, 406, 414, 422, 423, 426], "wandblogg": [3, 406, 422], "tensorboardlogg": [3, 400, 406, 422], "tag": [3, 7, 11, 370, 372, 374, 377, 404, 422, 423, 426], "mp4": [3, 370, 372, 374, 423, 426], "video_format": [3, 370, 372, 374, 423, 426], "whc": 3, "cwh": 3, "exp": [3, 316, 409], "al": [3, 24, 121, 123, 188, 202, 239, 417, 433], "pong": [3, 138, 202, 417, 433], "v5": [3, 121, 123, 138, 188, 202, 417, 433], "grow": [3, 88], "tediou": [3, 418], "workspac": [3, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194], "pixelrendertransform": [3, 406, 426], "stream": 3, "alik": [3, 370], "envcreat": [3, 16, 22, 142, 150, 224, 370, 400, 401, 404, 406, 413, 414, 432, 433], "render_mod": [3, 370, 428], "rgb_arrai": [3, 370, 426, 427, 428], "uncom": [3, 422], "line": [3, 7, 27, 38, 41, 46, 56, 57, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 414, 422, 426, 427], "comment": [3, 410, 414, 432], "pixels_record": [3, 370], "close": [3, 16, 122, 137, 196, 317, 319, 334, 337, 370, 413, 414, 418, 425, 426, 428, 432], "mission": 3, "irrespect": [3, 306, 307], "dmcontrol": [3, 115, 118, 122, 129, 130, 142, 143, 150, 151], "jumanji": [3, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151], "special": [3, 75, 77, 406, 413, 416, 417, 433], "framework": [3, 4, 9, 22, 113, 114, 115, 118, 122, 127, 128, 129, 130, 136, 142, 143, 150, 151, 256, 432, 433], "Its": [3, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 233, 235, 306, 356], "success": [3, 176, 221, 255, 320, 342, 414, 421, 423, 428, 430, 432], "foundat": [3, 5, 144, 145, 415, 427], "inspir": [3, 417, 428], "gone": [3, 4, 5, 302], "prefer": [3, 14, 15, 17, 20, 23, 24, 53, 58, 67, 68, 101, 102, 205, 213, 337, 342, 387, 408, 415, 426, 427, 430, 432], "maintain": [3, 5, 9, 33, 48, 176, 428], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 414, 415, 416, 421, 426, 427, 428, 430, 433], "decor": [3, 8, 164, 166, 236, 258, 262, 293, 335, 352, 353, 354, 355, 380, 416, 432], "relev": [3, 60, 115, 118, 122, 129, 130, 142, 143, 150, 151, 352, 353, 354, 355, 356, 379, 417, 428], "gym_backend": [3, 166, 406], "env1": [3, 241, 425], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 115, 166], "env2": [3, 425], "_env": [3, 6, 121, 433], "classic_control": 3, "pendulumenv": [3, 41, 406, 428], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 132, 160, 197], "side": [3, 4, 433], "v0": [3, 14, 15, 31, 32, 39, 52, 54, 59, 63, 73, 115, 118, 122, 124, 127, 128, 129, 130, 131, 132, 142, 143, 150, 151, 180, 197, 226, 233, 380, 400], "26": [3, 102, 115, 118, 122, 129, 130, 142, 143, 150, 151], "fun": [3, 166, 236, 415, 426, 427], "reveal": 4, "curv": 4, "exploit": [4, 419], "cv": 4, "flip": [4, 128], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 96, 169, 176, 183, 187, 189, 194, 200, 207, 209, 221, 223, 225, 227, 235, 315, 325, 333, 406, 428], "prescript": 4, "tune": [4, 24, 196, 426, 427, 429], "coeffici": [4, 24, 33, 60, 196, 427], "bonu": [4, 317, 319, 334, 337], "beta": [4, 53, 67, 93, 94, 325, 333, 334, 413, 414, 430, 432], "reduc": [4, 6, 30, 107, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 176, 181, 218, 238, 240, 287, 406, 414, 426], "downstream": [4, 409, 413], "formul": [4, 426, 427], "rate": [4, 11, 233, 351, 414, 415, 426, 427], "gradient": [4, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 240, 259, 267, 272, 275, 287, 288, 307, 317, 319, 320, 321, 325, 326, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 390, 413, 415, 426, 427, 428], "easier": [4, 57, 408, 413, 432], "local": [4, 7, 10, 16, 21, 27, 38, 46, 56, 57, 61, 66, 94, 101, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 268, 269, 280, 289, 350, 377, 379, 417, 422, 423, 426, 427], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 256, 257, 260, 261, 402, 403], "sum": [4, 21, 27, 44, 50, 66, 107, 113, 114, 116, 117, 121, 123, 124, 127, 128, 137, 138, 147, 175, 197, 212, 266, 267, 287, 289, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 351, 358, 409, 413, 414, 415, 416, 417, 420, 423, 426, 427, 428, 433], "stat": [4, 200, 233, 394, 404, 414, 415], "w": [4, 96, 115, 140, 141, 176, 178, 182, 208, 222, 256, 279, 372, 414, 430], "yield": [4, 14, 15, 16, 21, 27, 38, 46, 56, 57, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 184, 235, 335, 413, 420], "insight": [4, 417], "auxiliari": [4, 420], "credit": 4, "futur": [4, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 84, 85, 92, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 204, 224, 226, 231, 235, 263, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 407], "spars": [4, 416], "intermedi": [4, 14, 15, 41, 56, 66, 175, 241, 258, 262, 300, 413, 417, 429], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 413], "discov": 4, "score": [4, 60, 276, 278], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 53, 56, 58, 66, 67, 68, 73, 96, 115, 134, 135, 144, 145, 146, 154, 155, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 239, 258, 262, 299, 304, 389, 408, 409, 413, 417, 418, 426, 430], "explicit": [4, 14, 15, 16, 236, 430], "mechan": [4, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 414, 420, 428], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 115, 118, 122, 129, 130, 142, 143, 150, 151, 260, 325, 333, 415, 427], "addition": [4, 250], "timestep": [4, 60, 209, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 426, 427], "realli": 4, "huge": [4, 269, 416], "std": [4, 200, 233, 237, 277, 413, 433], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 416, 418, 420, 421, 422, 423, 424, 425, 429, 430, 431], "unseen": 4, "extrins": 4, "wrong": [4, 94, 101], "bonus": 4, "denser": 4, "prior": [4, 61, 283, 329, 427], "freshli": 4, "drop": [4, 100, 102, 167], "meant": [4, 46, 129, 136], "encourag": [4, 142, 278, 413, 414, 430], "measur": [4, 87, 89, 109, 113, 114, 127, 128, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 415, 421], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 24, 419], "ideal": [4, 200, 428], "down": [4, 14, 15, 16, 17, 409, 416, 418], "distil": 4, "nois": [4, 234, 272, 279, 292, 338, 342, 343, 385, 404, 413, 426], "exploratori": [4, 317, 319, 334, 337], "misalign": 4, "trade": [4, 419], "unavoid": 4, "divers": [4, 142, 150], "bootstrap": [4, 327, 353, 359, 360, 413, 416], "noisi": [4, 271, 272, 292, 408], "unstabl": [4, 259, 287, 288], "inher": [4, 317, 337], "stochast": [4, 196, 253, 272, 273, 283, 318, 320, 323, 325, 326, 331, 333, 336, 338, 340, 408, 415, 419, 427], "enemi": 4, "pomdp": [4, 430], "loos": [4, 307, 408, 414, 415], "nonexist": 4, "architectur": [4, 249, 420, 426, 427, 432], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 42, 44, 52, 53, 54, 55, 56, 58, 60, 63, 66, 69, 72, 73, 83, 86, 96, 97, 99, 105, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 142, 143, 147, 150, 151, 162, 174, 175, 176, 177, 178, 182, 183, 186, 187, 191, 193, 194, 197, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 220, 221, 222, 223, 225, 227, 233, 242, 243, 250, 252, 256, 260, 263, 266, 267, 268, 269, 275, 281, 285, 298, 308, 309, 323, 371, 372, 385, 386, 387, 389, 390, 408, 413, 415, 416, 417, 425, 426, 427, 433], "lstm": [4, 219, 261, 262, 417], "rel": [4, 96, 219, 250, 286, 413, 414, 426, 427, 430], "tend": 4, "stabl": [4, 9, 10, 139], "compens": 4, "descent": [4, 272], "minimum": [4, 74, 142, 150, 210, 253, 286, 287, 288, 310, 313, 316, 318, 320, 326, 335, 336, 340, 381, 409, 413, 415, 423, 426, 427], "manual": [4, 11, 18, 20, 21, 41, 53, 58, 67, 68, 96, 122, 123, 413, 416, 430], "deviat": [4, 200, 233, 237, 239, 253, 265, 271, 272, 277, 278, 337, 342, 343, 413, 419, 427], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 94, 101, 172, 256, 257, 260, 261, 316, 380, 409, 417, 418, 419, 420, 421, 422, 423], "stabil": [4, 192, 240, 317, 319, 334, 337, 339], "stage": [4, 413, 428], "never": [4, 14, 15, 17, 28, 74, 94, 221, 421, 432], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 42, 43, 44, 45, 50, 51, 63, 85, 233, 259, 287, 288, 317, 319, 334, 337, 339, 388, 422, 430], "entir": [4, 115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 268, 415, 418, 428, 430], "submit": [4, 121, 173, 407, 432], "system": [4, 5, 85, 415, 426, 427, 428], "adequ": [4, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 415, 426, 427], "infeas": 4, "allevi": [4, 408], "prune": [4, 130], "fire": [4, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "illeg": 4, "chess": [4, 115, 140, 141], "grasp": 4, "wherein": 4, "cumul": [4, 212, 218, 239, 358, 415], "q": [4, 9, 115, 118, 122, 129, 130, 142, 143, 150, 151, 245, 246, 247, 248, 251, 252, 254, 280, 281, 289, 297, 300, 304, 305, 318, 320, 321, 322, 324, 325, 326, 327, 332, 333, 338, 340, 342, 343, 350, 406, 413, 420], "flow": [4, 413, 415, 426, 427, 428, 430], "reparameter": [4, 250, 267, 275], "soft": [4, 332, 340, 341, 426], "critic": [4, 8, 295, 301, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 413, 420], "clip": [4, 60, 179, 210, 317, 319, 334, 337, 339, 342, 343, 390, 415, 427, 428], "oppos": [4, 72], "incorrect": [4, 101], "thought": [4, 115, 118, 122, 129, 130, 142, 143, 150, 151], "region": 4, "squash": [4, 416, 432], "tanh": [4, 242, 243, 256, 257, 259, 260, 261, 263, 269, 286, 287, 288, 310, 415, 419, 426, 427, 428, 429], "prob": [4, 266, 267, 275, 278, 415, 427], "rememb": [4, 426], "remap": 4, "origin": [4, 8, 52, 54, 55, 56, 59, 60, 66, 69, 73, 126, 185, 186, 196, 204, 226, 231, 235, 256, 303, 306, 307, 318, 320, 332, 333, 335, 337, 338, 340, 342, 343, 413, 417, 425, 428, 433], "world": [5, 136, 312, 329, 417, 422, 426, 427, 428, 433], "histor": 5, "ceas": 5, "farama": [5, 131, 132, 144, 145, 415, 428], "gymwrapp": [5, 115, 118, 122, 129, 130, 142, 143, 150, 151, 189, 213, 217, 232, 406, 415, 432], "feel": [5, 407, 423, 432], "free": [5, 7, 167, 183, 187, 317, 329, 337, 410, 415, 423, 427, 432], "gladli": 5, "prepar": [6, 37, 415], "conda": [6, 7, 407], "cmake": 6, "activ": [6, 7, 9, 41, 242, 243, 249, 253, 263, 268, 269, 319, 334, 337, 408, 428, 432], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 407], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 124], "y": [6, 7, 56, 58, 66, 139, 254, 268, 290, 413, 427, 430], "facebookresearch": [6, 124], "subdirectori": 6, "verbos": [6, 423], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 80, 115, 118, 122, 129, 130, 142, 143, 150, 151, 206, 215, 235, 335, 426, 427, 432, 433], "command": [6, 7, 10, 151, 415, 426, 427, 428, 433], "readm": [6, 7, 154, 432], "md": [6, 7], "habitatenv": [6, 406], "_has_habitat": 6, "available_env": [6, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 433], "startswith": [6, 241, 409, 413, 420], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 119, 335, 413], "env_nam": [6, 113, 115, 116, 118, 119, 121, 122, 124, 127, 129, 130, 131, 137, 142, 143, 147, 150, 151, 413, 415, 433], "llvmlite": 6, "config": [6, 7, 204, 231, 244, 249, 277, 394, 395, 396, 398, 401], "var": [6, 7, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 335, 340], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 299, 335], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 335, 340, 417, 430], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 417], "stand": [7, 36, 116, 117, 142, 150, 425, 428], "joint": [7, 414], "contact": [7, 55, 426], "engin": [7, 147, 428], "biomechan": 7, "graphic": 7, "anim": [7, 427], "area": 7, "demand": [7, 422, 433], "fast": [7, 9, 88, 113, 114, 167, 207, 338, 413, 414, 415, 432], "articul": 7, "acquir": [7, 415], "deepmind": [7, 8, 9, 115, 116, 117, 118, 122, 129, 130, 134, 135, 140, 141, 142, 143, 150, 151, 188, 415, 418], "whomev": 7, "licenc": 7, "incorpor": [7, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 255, 279, 342, 416, 419, 428], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 407], "tip": [7, 407], "glfw": [7, 413], "osmesa": 7, "egl": 7, "advic": [7, 433], "sudo": [7, 407], "apt": [7, 427], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 130, 295, 296, 297], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 409, 413, 415, 416, 426, 427, 430], "roboti": 7, "html": [7, 14, 15, 137, 139, 140, 141], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 142, 150], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 52, 54, 72, 83], "bin": [7, 252, 278, 300, 408], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 248, 303, 307, 413, 415, 417, 430], "nvidia": [7, 126, 417], "older": [7, 236], "hack": [7, 413], "adatp": 7, "script": [7, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 380, 400, 404, 408, 409, 410, 413, 414, 417, 422, 426, 427, 428, 430], "unnot": [7, 205], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 85, 414, 430], "troubleshoot": 7, "gl": 7, "h": [7, 96, 176, 178, 182, 208, 222, 256, 257, 258, 260, 261, 262, 265, 372, 414, 430], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 44, 45, 50, 51], "directori": [7, 52, 54, 59, 72, 73, 87, 377, 379, 409, 410, 413, 419, 422, 426], "devel": 7, "ubuntu": [7, 126], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 414, 416, 425], "libstdc": 7, "glibcxx_3": 7, "29": [7, 101, 102], "compil": [7, 14, 15, 16, 23, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 86, 87, 88, 89, 90, 94, 97, 101, 102, 103, 108, 109, 111, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 236, 256, 257, 260, 261, 287, 352], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 199, 224, 226, 235, 320, 340, 409, 433], "job": [7, 18, 19, 20, 22, 58, 67, 68, 96, 430, 432], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 101, 113, 114], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 426, 427], "global": [7, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 96, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 224, 235, 280, 289, 303, 307, 350, 410, 413, 426, 427], "cuda_visible_devic": 7, "id": [7, 23, 60, 73, 94, 96, 101, 102, 115, 118, 121, 122, 129, 130, 142, 143, 150, 151, 152, 153, 279, 320, 338, 375, 379, 421, 430], "slurm_step_gpu": 7, "black": [7, 115, 426], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 427], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 410], "n_training_step": 8, "datapoint": [8, 72, 430], "n_data_per_train": 8, "no_grad": [8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 235, 240, 256, 257, 260, 261, 352, 353, 354, 355, 415, 416, 417, 427], "loss_fn": [8, 416, 420, 421, 432], "zero_grad": [8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 278, 410, 413, 415, 416, 417, 420, 423, 426, 427, 428], "backpropag": [8, 113, 114, 127, 128, 142, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 420, 427, 428], "differenti": [8, 72, 113, 114, 196, 320, 342, 352, 353, 354, 355, 416, 419, 420, 426, 427, 428], "denomin": 8, "artifact": 8, "numer": [8, 58, 122, 233, 259, 287, 288, 294, 299, 300, 303, 304, 305, 306, 307, 388, 415, 430, 433], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 50, 73, 74, 94, 101, 102, 118, 409, 428, 430], "compuat": 8, "fix": [8, 33, 142, 219, 318, 320, 336, 340, 414, 423, 428, 433], "retain_graph": [8, 113, 114], "discuss": [8, 9, 421, 426, 427], "inplac": [8, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 413], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269, 270, 271, 273, 274, 277, 279, 280, 282, 283, 285, 289, 290, 298, 300, 302, 303, 305, 306, 307, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 406, 409, 416, 428, 432], "submodul": [8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 160, 219, 235, 258, 262, 314, 335], "param": [8, 27, 38, 46, 56, 57, 60, 61, 66, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 173, 180, 183, 185, 189, 196, 198, 206, 207, 213, 217, 223, 225, 227, 235, 250, 252, 268, 269, 270, 286, 298, 303, 306, 309, 335, 345, 349, 352, 353, 354, 355, 356, 413, 417, 423, 426, 427, 428, 429, 432], "grad": [8, 27, 38, 46, 56, 57, 61, 66, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 307, 413, 415], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 280, 306], "factor": [8, 11, 24, 46, 209, 235, 237, 238, 255, 259, 272, 279, 287, 288, 318, 324, 327, 328, 330, 341, 358, 413, 414, 417, 419, 423, 426, 427, 430, 433], "fit": [8, 57, 200, 219, 236, 409, 410, 413], "brax": [8, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 207, 418, 433], "jax": [8, 113, 114, 127, 128, 236], "improperli": 8, "underli": [8, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 335, 416, 418, 420, 422, 428], "tedeiou": 8, "priorit": [8, 53, 67, 93, 94, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 413, 414, 421, 432], "amount": [8, 142, 279, 414, 430], "costli": [8, 428], "constitut": [8, 414, 427, 428], "profil": 8, "frequent": [8, 41, 430], "program": [8, 325, 333, 417, 433], "functorch": [8, 10], "incl": 8, "suit": [8, 117, 415, 418, 432, 433], "mujoco_instal": 8, "valueerror": [8, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 100, 202, 222, 417, 432, 433], "idea": [9, 338, 410, 416, 419, 426, 427], "introductori": 9, "intro": [9, 415, 416], "dai": [9, 432], "2022": [9, 10, 240, 432], "spin": [9, 116, 117], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 419], "summari": [9, 200, 233, 413, 414, 415, 416], "reddit": 9, "reagent": 9, "orient": [9, 433], "baselines3": 9, "tf": 9, "bandit": [9, 139], "tensorflow": [9, 266, 267], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 417, 423], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 432], "grade": 9, "factori": [9, 69, 413], "cherri": 9, "jaxrl": 9, "mbrl": [9, 136, 408], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 415, 416, 426, 427], "notebook": [10, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "24": [10, 102, 121, 137, 138, 278, 302, 372, 426], "pip3": [10, 413, 415, 416, 426, 427], "url": [10, 124], "org": [10, 14, 15, 24, 53, 93, 94, 113, 114, 116, 117, 124, 127, 128, 134, 135, 137, 138, 139, 147, 154, 155, 176, 204, 229, 238, 244, 245, 246, 247, 248, 249, 252, 253, 254, 260, 265, 266, 267, 272, 273, 274, 278, 279, 280, 282, 283, 289, 300, 317, 318, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 352, 357, 365, 405, 424, 429], "whl": 10, "u": [10, 256, 257, 260, 261, 428], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 176, 415, 426, 427, 428, 430], "power": [11, 414], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 213, 406], "ultim": [11, 259, 287, 288], "ffmpeg": 11, "whatev": [11, 409, 413], "fed": [11, 427, 430], "feed": [11, 204, 231, 335, 408, 413, 426, 427, 430], "suppos": [11, 142, 385, 410, 433], "snippet": [11, 204, 229, 413], "gave": 11, "extrem": [11, 142, 150, 317, 319, 334, 337, 339], "blurri": [11, 417], "stitch": 11, "exp_nam": [11, 372, 373, 374, 377, 378, 379, 400, 414, 422, 423], "my_exp": [11, 422], "pixels_onli": [11, 116, 117, 121, 123, 124, 147, 413, 414, 422, 423, 432, 433], "my_video": [11, 422], "record_env": [11, 422, 423], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 297, 408], "allow_non": 12, "unwrap": [12, 188, 226, 380], "seealso": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 119, 142, 150, 413, 432], "device_typ": [14, 16, 17, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 204, 229, 231, 242, 243, 244, 245, 246, 247, 248, 254, 263, 268, 269, 271, 272, 277, 280, 306, 387, 398], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 414], "create_env_kwarg": [14, 15, 16, 17, 21, 119, 137, 142, 150, 224, 413, 433], "dict": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 46, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 85, 94, 101, 102, 115, 118, 119, 120, 121, 122, 123, 129, 130, 134, 135, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 157, 194, 196, 219, 224, 226, 232, 233, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 254, 263, 277, 303, 307, 320, 340, 342, 372, 376, 377, 385, 390, 395, 396, 402, 403, 404, 408, 413, 414, 415, 430, 432, 433], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 46, 209, 414, 430], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 303, 335, 385, 408, 413, 414, 415, 416, 419, 426, 432], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 158, 165, 303, 307, 385], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 52, 54, 59, 73, 142, 150], "num_sub_thread": [14, 15, 17, 142, 150], "str": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 93, 94, 96, 107, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 129, 130, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 160, 165, 168, 172, 176, 184, 188, 194, 195, 196, 204, 208, 217, 218, 221, 223, 224, 226, 227, 229, 231, 232, 233, 235, 236, 239, 251, 252, 258, 262, 264, 265, 268, 269, 270, 280, 281, 289, 294, 299, 300, 303, 304, 305, 306, 307, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 404, 414, 415, 417], "set_trunc": [14, 15, 16, 17, 115, 118, 122, 129, 130, 142, 143, 150, 151], "use_buff": [14, 15, 16, 142, 150, 184], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 115, 118, 122, 129, 130, 142, 143, 150, 151], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "no_cuda_sync": [14, 15, 16], "datacollector": [14, 15, 16, 17, 46, 337, 415, 421, 430], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 94, 101, 237, 279, 286, 287, 294, 299, 300, 303, 304, 305, 306, 307, 309, 408, 432], "sota": [14, 15, 136, 192, 339, 381, 395, 413, 414, 432], "guard": [14, 15], "doc": [14, 15, 69, 124, 127, 128, 139, 147, 379, 409, 414, 426, 427, 430], "env_mak": [14, 15, 16, 21, 400, 433], "2000": [14, 15, 16, 46, 72, 125, 278, 372, 430], "50": [14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 60, 62, 63, 71, 74, 75, 76, 77, 78, 101, 102, 134, 135, 235, 416, 430], "shutdown": [14, 15, 16, 17, 21, 173, 413, 414, 430, 432], "del": [14, 15, 16, 413, 414, 415, 425, 426, 430, 432, 433], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 41, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 59, 60, 64, 67, 69, 72, 73, 83, 93, 101, 115, 118, 122, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 169, 173, 184, 188, 202, 209, 217, 252, 279, 281, 299, 300, 303, 304, 305, 408, 428], "subclass": [14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 38, 56, 57, 61, 66, 74, 96, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 171, 172, 225, 232, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 306, 307, 308, 310, 313, 335, 337, 414, 416, 421, 428, 430], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 175, 290, 299, 302, 304, 416], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 72], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 414], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 94, 101, 102, 238, 427], "endless": [14, 15, 16, 17, 18, 19, 20, 184], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 122, 172, 219, 232, 262, 416, 428, 429], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 392, 414], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 83, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 153, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 187, 188, 189, 190, 192, 195, 196, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 233, 235, 306, 426, 433], "span": [14, 15, 16, 17, 18, 19, 20, 21, 94, 101, 102], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 46, 235, 302, 414, 415, 426, 427], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 60, 379, 408, 426, 427, 428], "round": [14, 15, 16, 17, 18, 19, 20, 21, 115], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 232], "ratio": [14, 15, 17, 60, 413, 415], "finish": [14, 15, 17, 21, 122, 209, 433], "rest": [14, 15, 17, 240, 408, 415, 416, 426, 428, 432], "earli": [14, 15, 17, 46, 122, 217, 432], "safeti": [14, 15, 17, 136, 142, 150], "harm": [14, 15, 17, 142, 150], "exclus": [14, 15, 79, 80, 94, 101, 102, 173, 189, 191, 256, 258, 260, 262, 266, 267, 299, 300, 304, 305, 341, 342, 343, 352, 353, 354, 355, 356, 379, 404, 408], "add_truncated_kei": [14, 15, 16, 17, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226], "trust": [14, 15, 16, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 181, 262], "cudagraphmodul": [14, 15, 16, 115, 118, 122, 129, 130, 142, 143, 150, 151], "behaviour": [14, 15, 16, 56, 66, 416, 417, 432], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 85, 87, 88, 89, 90, 92, 93, 94, 96, 101, 102, 103, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 170, 171, 173, 180, 204, 206, 215, 219, 224, 225, 226, 228, 230, 231, 234, 235, 237, 239, 241, 242, 243, 245, 246, 247, 248, 251, 254, 255, 258, 259, 262, 263, 264, 265, 268, 269, 270, 275, 279, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 350, 351, 352, 353, 354, 355, 356, 370, 372, 376, 377, 379, 383, 390, 395, 396, 401, 402, 403, 409, 415, 417, 427], "bypass": [14, 15, 16, 419], "isaaclab": [14, 15, 16, 123], "maniskil": [14, 15, 16], "crash": [14, 15, 16, 209], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 233, 235, 320, 340], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226], "increment": [14, 15, 16, 17, 115, 118, 122, 129, 130, 142, 143, 150, 151, 200, 334], "env_fn": [14, 15, 16, 17, 119, 402, 403], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 101, 102, 247, 248], "out_se": [14, 15, 16, 17, 433], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 337], "whole": [16, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 303, 320, 340, 381, 413, 415], "_interruptor": 16, "outsid": [16, 185, 224, 409, 422, 426, 427, 428], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 419], "policy_state_dict": 16, "env_state_dict": 16, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 70, 250, 390], "respect": [18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 174, 180, 183, 187, 198, 204, 205, 214, 219, 225, 226, 229, 231, 235, 256, 260, 268, 283, 306, 311, 317, 319, 334, 337, 339, 352, 354, 355, 386, 409, 415, 416, 426, 427], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 407, 414, 415, 417, 419, 422, 430, 432], "fashion": [18, 20, 21, 52, 54, 59, 73, 102], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 41, 115, 118, 122, 129, 130, 142, 143, 150, 151, 191], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 53, 56, 57, 58, 61, 66, 67, 68, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 413], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 428], "visit": [18, 19, 20, 73], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 152], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 278, 413], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 50, 303, 307], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 402, 403, 413, 414], "coordin": [21, 182], "init": [21, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 225, 233, 235, 268, 269, 270, 379, 414, 415], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 249, 430], "equat": [21, 56, 73, 122, 233, 279, 316, 319, 341, 415, 418, 428], "exce": [21, 430], "indefinit": [21, 82], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 142, 238, 390, 416], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 342, 420], "jump": [22, 418], "host": [22, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 244, 249, 277, 298], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 94, 101, 102, 115, 118, 122, 129, 130, 142, 143, 146, 150, 151, 162, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 233, 235, 237, 241, 252, 255, 279, 281, 298, 302, 307, 322, 350, 370, 372], "as_nest": 23, "x": [23, 46, 56, 57, 58, 60, 61, 66, 102, 130, 194, 196, 222, 227, 236, 238, 240, 241, 243, 252, 254, 256, 257, 258, 260, 261, 262, 263, 265, 268, 269, 290, 299, 303, 304, 313, 316, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 390, 413, 417, 426, 428, 430, 432], "durat": [23, 427], "meta": [23, 52, 54, 59, 71, 73, 120, 124, 317, 319, 334, 337, 339, 410, 415, 426, 427, 430], "aren": [23, 218, 416], "eventu": [23, 280, 416, 428], "recov": [23, 101, 102, 308, 325, 333, 425], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 121, 123], "stride": [23, 27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 242, 243, 245, 246, 254, 268, 414, 426, 432], "jag": 23, "focu": [23, 413, 414, 415, 417, 419, 420, 421, 426], "team": [23, 426, 427, 432], "cat": [23, 41, 184, 311, 318, 320, 321, 333, 338, 340, 342, 343, 426, 430, 432], "arang": [23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 94, 101, 102, 169, 252, 267, 299, 381, 408, 430], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 41, 68, 74, 101, 127, 128, 140, 141, 151, 161, 302], "data_split": 23, "got": [23, 421], "init_kl_coef": 24, "horizon": [24, 134, 135, 154, 155, 239, 265, 415], "kl": [24, 33, 60, 196, 329, 334], "describ": [24, 52, 54, 59, 71, 73, 146, 177, 286, 287, 322, 375, 409, 413, 415, 426, 427, 428, 433], "ziegler": 24, "et": [24, 239], "relax": [24, 370], "penalti": [24, 60, 331, 334], "strai": [24, 60], "greater": [24, 94, 101, 102, 184, 197, 198, 258, 262, 320, 413, 414], "increas": [24, 85, 176, 220, 240, 279, 426, 427], "pull": [24, 41, 73, 430], "toward": [24, 231], "aggress": 24, "kl_coef": [24, 33, 60], "arxiv": [24, 53, 93, 94, 113, 114, 116, 117, 127, 128, 134, 135, 137, 138, 147, 154, 155, 176, 204, 229, 238, 244, 245, 246, 247, 248, 249, 252, 253, 254, 260, 265, 272, 273, 274, 278, 279, 280, 282, 283, 289, 300, 317, 318, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 341, 342, 352, 357, 365, 429], "pdf": [24, 176, 244, 245, 246, 247, 248, 252, 278, 279, 300, 320, 327, 331, 338, 341, 342, 352, 357, 365], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 426, 427], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 196], "newest": 24, "int8": [25, 118, 133, 144, 145, 174], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 113, 114, 118, 121, 123, 124, 127, 128, 137, 138, 140, 141, 147, 152, 153, 169, 186, 274, 275, 278, 282, 316, 414, 415, 416, 419, 428, 430], "null": [25, 28, 29, 31, 32, 39, 40, 48, 49, 53, 62, 63, 67, 71, 74, 75, 76, 77, 78, 93, 94, 174, 194], "denot": [25, 427], "clariti": [25, 41], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "cardin": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 252, 281, 299, 300, 305, 415], "outcom": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 250, 267, 286, 335, 426], "cartesian": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 433], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 122, 310, 370, 417, 426, 428], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 122, 279, 310, 370, 417, 426], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 60, 62, 63, 71, 74, 75, 76, 77, 78, 93, 115, 118, 122, 123, 129, 130, 142, 143, 150, 151, 184, 188, 256, 257, 260, 261, 413, 426], "use_mask": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 144, 145], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 242, 243, 263, 284, 285, 406, 409], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "classmethod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 229, 236, 243, 244, 277], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "index_typ": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 48, 49, 62, 63, 71, 74, 75, 76, 77, 78], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "exanpl": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "one_hot": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 252, 267, 281], "categ": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 303], "to_categorical_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "idx_one_hot": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "idx_categ": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_categor": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 113, 114, 115, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 153, 180, 183, 184, 187, 204, 219, 225, 226, 229, 231, 233, 235, 306, 316, 335, 413, 414, 415, 428, 430], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 428, 433], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 413], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 408], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 267, 275, 303, 409], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 62, 63, 71, 74, 75, 76, 77, 78, 186, 237, 260, 279, 294, 299, 300, 303, 304, 305, 306, 307, 379, 408, 432, 433], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 95, 335, 433], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151, 200, 233, 237, 238, 242, 243, 259, 263, 266, 267, 287, 288, 303, 307, 319, 320, 334, 337, 385, 388, 404, 408, 410, 416, 419, 427, 433], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 219, 255, 303, 307, 415, 426, 427], "set_provisional_n": [25, 26, 30, 34, 42, 43], "temporarili": [25, 26, 30, 34, 42, 43, 85, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 421, 430], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 204, 229, 231, 306], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 115, 118, 122, 129, 130, 142, 143, 150, 151], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 226, 286, 404], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_one_hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 113, 114, 121, 123, 124, 127, 128, 134, 135, 137, 138, 140, 141, 144, 145, 147, 152, 153, 154, 155, 169, 170, 186, 252, 275, 276, 281, 299, 300, 304, 305, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 416], "categ_sampl": [25, 26, 30, 34, 44, 45, 50, 51], "onehot_sampl": [25, 26, 30, 34, 44, 45], "to_one_hot_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "categoricalbox": [25, 26, 30, 34, 44, 45, 50, 51, 143], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "update_mask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "disabl": [25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 259, 288, 370, 413, 426, 427], "unmask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "ts": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 194, 415, 416, 418, 426, 427, 430], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "child": [27, 38, 41, 46, 56, 57, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 414], "fn": [27, 38, 46, 55, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 227, 235, 402, 403], "recurs": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 79, 80, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335, 417], "init_weight": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "m": [27, 38, 42, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 186, 235, 241, 307, 414, 428], "fill_": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 414, 416], "net": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 246, 248, 251, 254, 269, 317, 318, 320, 326, 333, 337, 338, 339, 340, 400, 414, 428, 429, 432], "in_featur": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 242, 243, 245, 246, 247, 248, 254, 263, 268, 269, 271, 272, 295, 306, 314, 322, 324, 417, 419, 420], "out_featur": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 136, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 239, 242, 243, 245, 246, 247, 248, 253, 254, 258, 262, 263, 265, 268, 269, 271, 272, 295, 299, 306, 314, 322, 324, 408, 413, 416, 417, 419, 420, 423, 432], "bia": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 194, 204, 219, 224, 225, 226, 229, 231, 235, 238, 242, 243, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 269, 271, 272, 279, 306, 313, 315, 316, 320, 335, 340, 409, 413, 414, 415, 416, 427], "requires_grad": [27, 38, 46, 56, 57, 61, 66, 113, 114, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 224, 226, 235, 278, 307, 320, 340], "bfloat16": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "datatyp": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 430], "member": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335, 372], "xdoctest": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 194, 204, 219, 224, 225, 226, 229, 231, 235, 306, 320, 335, 340], "buf": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "20l": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335], "1l": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335], "5l": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335], "__call__": [27, 38, 46, 55, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 307, 410], "doubl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 183, 185, 187, 204, 219, 225, 226, 229, 231, 235, 306, 322, 327, 332, 338, 341, 350, 413, 414, 415, 416, 433], "eval": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 233, 235, 240, 408, 413, 414, 415], "evalu": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 123, 129, 130, 134, 135, 142, 143, 150, 151, 226, 235, 240, 250, 266, 267, 275, 288, 338, 395, 396, 414, 415, 423], "dropout": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 240, 241, 256, 258, 260, 262, 263, 408, 416], "batchnorm": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 238], "comparison": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 226, 235, 335, 413, 414], "extra_repr": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "recip": [27, 38, 55, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 273, 274, 277, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313], "get_buff": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "get_submodul": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "qualifi": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "referenc": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "resolv": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "someth": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 133, 142, 143, 150, 151, 235, 407, 414, 415, 428, 433], "get_extra_st": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235], "set_extra_st": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235], "picklabl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235], "pickl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235], "get_paramet": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "net_b": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "net_c": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "conv": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 242, 243, 414], "conv2d": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 243, 245, 246, 254, 268], "kernel_s": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 242, 243, 245, 246, 254, 268, 273, 414, 432], "diagram": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "degre": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 181, 235], "named_modul": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "half": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306, 413], "ipu": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "strict": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340, 417], "descend": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340], "get_swap_module_params_on_convers": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340], "persist": [27, 36, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 194, 224, 226, 235, 320, 340], "preserv": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340], "missing_kei": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340], "unexpected_kei": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340], "namedtupl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 224, 226, 235, 320, 340], "l": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 256, 260, 351, 415, 428], "idx": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "mtia": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "named_buff": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "remove_dupl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335], "prepend": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 335, 417], "running_var": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "named_children": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "conv4": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "conv5": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "memo": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "named_paramet": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 235, 335], "register_backward_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "removablehandl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "favor": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 415], "register_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_buff": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "running_mean": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "alongsid": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 422], "num_featur": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 238], "register_forward_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 252, 281], "with_kwarg": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "always_cal": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_module_forward_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "regardless": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 319, 334, 337], "register_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "invok": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "And": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 420], "forward_pr": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_module_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "grad_input": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "grad_output": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "technic": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 414, 416, 417, 419], "caller": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_module_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "backward_pr": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_module_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_load_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "incompatible_kei": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "thrown": [27, 38, 46, 56, 57, 61, 62, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 430], "register_load_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "local_metadata": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "error_msg": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "noqa": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "b950": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_modul": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 410], "alia": [27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 87, 88, 89, 90, 96, 103, 105, 109, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 336, 337, 338, 339, 340, 342, 343, 350, 356], "register_paramet": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "register_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "keep_var": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 340], "requires_grad_": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 417], "autograd": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 340], "freez": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 233, 235], "finetun": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "gan": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "set_submodul": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "share_memori": [27, 38, 46, 56, 57, 61, 66, 115, 118, 119, 122, 129, 130, 142, 143, 150, 151, 235, 413], "share_memory_": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235, 432], "destin": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 175, 183, 185, 187, 194, 224, 226, 229, 233, 235, 320, 340, 372], "averag": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 233, 235, 279, 320, 328, 329, 340, 388, 413, 415], "shallow": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 340, 416], "pleas": [27, 38, 46, 56, 57, 61, 66, 70, 115, 118, 121, 122, 129, 130, 142, 143, 144, 145, 150, 151, 173, 176, 194, 220, 224, 226, 235, 268, 269, 270, 320, 340, 407], "design": [27, 38, 46, 48, 50, 56, 57, 61, 66, 99, 105, 112, 115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 169, 176, 194, 205, 224, 226, 235, 298, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 406, 413, 414, 415, 416, 418, 419, 420, 425, 426, 427, 428, 430, 432, 433], "detach": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 194, 224, 226, 235, 320, 331, 335, 340, 342, 352, 353, 354, 355, 413], "non_block": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306, 416], "memory_format": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "channels_last": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "unchang": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 186, 204, 219, 225, 226, 229, 231, 235, 255, 306, 372, 387, 413, 430], "tri": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306, 422], "pin": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "4d": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "ignore_w": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "1913": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "3420": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "5113": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "2325": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "torch_doctest_cuda1": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "gpu1": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "1914": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "5112": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "2324": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "float16": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 257, 261, 306], "cdoubl": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "3741": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "j": [27, 38, 46, 53, 56, 57, 61, 66, 93, 94, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306, 410, 420], "2382": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "5593": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "4443": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "complex128": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "6122": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "1150": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 180, 204, 219, 225, 226, 229, 231, 235, 306], "to_empti": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "dst_type": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "xpu": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "set_to_non": [27, 38, 46, 56, 57, 61, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 235], "upper": [28, 99, 199], "continuousbox": [28, 31, 74, 115, 118, 122, 129, 130, 142, 143, 150, 151, 161, 194, 197, 219, 227], "provision": 30, "descript": [31, 154, 172, 414, 415], "akin": 31, "unnam": 31, "compositespec": [31, 406, 428, 433], "constraint": [31, 136, 287, 415, 426, 427], "data_cl": 31, "tensorclass": [31, 52, 54, 59, 73, 83, 87, 89, 109], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 177, 413], "_nodefault": [31, 32, 39, 63], "is_empti": [31, 32, 39, 63, 428], "include_nest": [31, 32, 39, 63], "leaves_onli": [31, 32, 39, 63], "is_leaf": [31, 32, 39, 63], "_compositespecitemsview": [31, 32, 39, 63], "_compositespeckeysview": [31, 32, 39, 63], "reflect": [31, 32, 39, 63, 123, 144, 145, 167, 194, 232, 335, 393, 414, 415, 416, 427], "lock_": [31, 32, 39, 63], "propag": [31, 32, 39, 63, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 415, 426, 427], "succeed": [31, 32, 39, 63, 194, 227], "pop": [31, 32, 39, 63], "keyerror": [31, 32, 39, 63, 226], "extract": [31, 32, 39, 63, 172, 194, 223, 227, 301, 413, 415, 432], "selected_kei": [31, 32, 39, 63, 213, 413], "unlock_": [31, 32, 39, 63], "_compositespecvaluesview": [31, 32, 39, 63], "multipli": [33, 240, 256, 260, 317, 318, 319, 320, 326, 334, 336, 337, 338, 340, 388, 413, 426], "calcul": [33, 60, 209, 256, 317, 319, 324, 334, 337, 339, 342], "shift_kei": [35, 37, 47, 64], "is_full_kei": [35, 37, 47, 64], "is_ful": [35, 37, 47, 64], "tempfil": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 87, 96, 400, 413, 414, 416, 417, 421, 426, 429, 430], "register_save_hook": [35, 53, 58, 64, 67, 68, 96], "temporarydirectori": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 96, 413, 414, 416, 417, 421, 426, 429, 430], "tmpdir": [35, 53, 58, 64, 67, 68, 72, 96, 413, 414, 417, 426], "rb_load": [35, 53, 58, 67, 68, 96], "register_load_hook": [35, 53, 58, 67, 68, 96], "filesystem": [36, 430], "ted2nest": [37, 406], "stackedcomposit": [39, 406], "tensordictmap": [41, 406], "observation_kei": [41, 115, 118, 122, 129, 130, 142, 143, 150, 151], "excluded_kei": [41, 189], "consolid": [41, 66, 80, 89], "lazili": [41, 88, 269, 428], "from_tensordict_pair": [41, 66], "querymodul": [41, 66], "get_keys_from_env": 41, "cattensor": [41, 115, 118, 122, 129, 130, 142, 143, 150, 151, 413, 425, 428, 433], "unsqueezetransform": [41, 176, 428, 430], "oracl": 41, "obs_kei": 41, "state_kei": [41, 115, 118, 122, 129, 130, 142, 143, 150, 151], "reset_st": 41, "rollout0": 41, "rollout1": 41, "rollout1b": 41, "collaps": 41, "max_length": [41, 52, 54, 55, 69, 72, 73, 83, 184, 223, 417, 423], "valid_path": [41, 73], "assert_clos": [41, 258, 262], "subtre": [41, 73], "intersect": [41, 236], "Or": [41, 148, 149, 268], "rollout_from_path": [41, 73], "plot": [41, 73, 413, 415, 416, 426, 427, 428], "_nestedkei": [41, 115, 118, 122, 129, 130, 142, 143, 150, 151], "return_nod": 41, "diverg": [41, 196, 258, 262, 303, 307, 329, 334], "endpoint": 41, "noth": [41, 130, 413, 415], "r0": [41, 413], "123": [41, 73], "392": [41, 73], "989": [41, 73], "809": [41, 73], "847": [41, 73], "r1": 41, "235": 41, "td_root": [41, 73], "node_data": [41, 73], "node_id": [41, 73], "nontensordata": [41, 48, 115, 140, 141, 184, 194, 223, 227, 370], "_parent": [41, 73], "nontensorstack": [41, 48, 88, 115, 130, 184, 194, 223, 227], "weakref": [41, 73], "0x716eeb78fbf0": 41, "0x": 41, "4341220243998689835": 41, "6745467818783115365": 41, "win": [41, 73], "to_str": [41, 73], "node_format_fn": [41, 73], "indent": [41, 73], "rollouts_data": [41, 73], "456": [41, 73], "359": [41, 73], "3094": [41, 73], "75": [41, 73, 101], "948": [41, 73], "68": [41, 73, 101], "9045": [41, 73], "rollout_data": [41, 73], "nvec": [42, 44], "remove_singleton": 42, "ax": [42, 271, 272, 426], "Not": [42, 43, 58, 113, 114, 127, 224, 258, 262], "neither": [42, 43, 44, 45, 152, 428], "use_regist": [44, 50], "mone_hot": [44, 45], "boxlist": [44, 45], "gamma": [46, 209, 235, 265, 317, 318, 320, 321, 322, 324, 326, 327, 328, 330, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 400, 409, 413, 414, 415, 426, 427, 432], "sutton": [46, 409, 426, 427], "1988": 46, "tempor": [46, 258, 262, 265, 353, 354, 359, 360], "44": [46, 101], "discount": [46, 119, 209, 235, 318, 324, 327, 328, 330, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 409, 414, 415, 426, 427], "ahead": [46, 235, 433], "bias": [46, 256, 257, 260, 261, 313, 409, 413], "mitig": [46, 176], "multisteptransform": [46, 406], "99": [46, 209, 233, 265, 330, 345, 351, 358, 400, 413, 414, 415, 417, 420, 423, 426, 427, 432], "nontermin": 46, "original_reward": 46, "newli": [46, 115, 118, 122, 129, 130, 142, 143, 150, 151], "OR": 46, "row": [47, 65, 127, 128, 197], "example_data": [48, 129, 184], "conform": 48, "templat": [48, 373], "randomli": [48, 100, 151, 199, 200, 219, 255, 303, 307, 419, 426, 427, 428, 430], "unidimension": 50, "action_valu": [50, 251, 252, 281, 299, 300, 304, 305, 320, 326, 335, 350, 408, 416, 417, 419, 423], "keepdim": 50, "chosen_action_valu": [50, 280, 281, 289, 304, 305, 350, 408, 416, 419], "priori": 50, "uniqu": [50, 73, 101, 102, 130, 134, 135, 176, 188, 218, 219, 220, 224, 302, 379, 421, 430], "tensor_spec": [50, 146, 168, 170, 325, 326, 337, 339], "one_hot_sampl": [50, 51], "chosen_data": [52, 83], "rewarddata": [52, 83, 406], "rejected_data": [52, 83], "copy_exist": [52, 54, 59, 73], "return_earli": [52, 54, 59, 73], "share_non_tensor": [52, 54, 59, 73], "memmap": [52, 54, 59, 73, 87, 142, 150, 233, 372, 374, 387], "dataclass": [52, 54, 59, 71, 73, 335], "from_dataset": [52, 54, 83], "dataset_nam": [52, 54, 60, 72, 83, 139], "550": [52, 54, 60, 72, 83, 101, 102], "root_dir": [52, 54, 72, 83], "from_disk": [52, 54, 72, 83], "carperai": [52, 54, 60, 72], "openai_summarize_comparison": [52, 54, 72], "load_from_disk": [52, 54, 72, 83], "load_dataset": [52, 54, 72, 83], "attention_mask": [52, 54, 55, 59, 60, 69, 72, 83], "92534": 52, "input_id": [52, 54, 55, 59, 60, 69, 72, 83, 130], "end_scor": [52, 59, 60, 83], "sub_data": [52, 54], "from_tensordict": [52, 54, 59, 73], "non_tensordict": [52, 54, 59, 73], "getattr": [52, 54, 59, 73], "load_memmap": [52, 54, 59, 73], "load_": [52, 54, 59, 73], "load_memmap_": [52, 54, 59, 73], "fetch": [52, 54, 59, 73, 113, 114, 116, 117, 196, 419, 429, 430], "fromkei": [52, 54, 59, 73], "saved_td": [52, 54, 59, 73], "td_load": [52, 54, 59, 73], "fake": [52, 54, 59, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 413, 414, 417], "_subclass": [52, 54, 59, 73], "faketensormod": [52, 54, 59, 73], "faketensor": [52, 54, 59, 73], "from_flatten": [52, 54, 59, 73], "attemptedli": [52, 54, 59, 73], "existsok": [52, 54, 59, 73, 87], "mimic": [52, 54, 59, 73, 115, 118, 122, 129, 130, 142, 143, 150, 151], "cross": [52, 54, 59, 73, 239], "tensordictfutur": [52, 54, 59, 73], "serialis": [52, 54, 59, 73], "deepli": [52, 54, 59, 73], "memmap_": [52, 54, 59, 73, 233], "memmap_lik": [52, 54, 59, 73], "contentless": [52, 54, 59, 73], "1_000_000": [52, 53, 54, 58, 59, 67, 68, 73, 96, 101, 413, 416, 426], "alloc": [52, 54, 59, 73, 89, 250, 266, 267, 413], "memmap_refresh_": [52, 54, 59, 73], "refresh": [52, 54, 59, 73, 423, 426, 427], "saved_path": [52, 54, 59, 73], "setattr": [52, 54, 59, 73], "tent": [52, 54, 59, 72, 73], "to_tensordict": [52, 54, 59, 73, 416], "retain_non": [52, 54, 59, 73], "discrard": [52, 54, 59, 73], "switch": [52, 54, 59, 73, 226, 259, 288, 370], "alpha": [53, 67, 93, 94, 242, 243, 245, 246, 247, 248, 254, 268, 318, 320, 326, 336, 338, 340, 342, 413, 430, 432], "ep": [53, 67, 93, 94, 200, 233, 238, 279, 319, 341, 388, 409, 413, 414, 416, 417, 420, 423], "1e": [53, 67, 93, 94, 200, 233, 238, 250, 253, 286, 413, 414, 415, 427], "08": [53, 67, 93, 94], "pin_memori": [53, 58, 67, 68, 203, 413, 432], "schaul": [53, 93, 94], "quan": [53, 93, 94], "antonogl": [53, 93, 94], "silver": [53, 93, 94], "2015": [53, 93, 94], "ab": [53, 93, 94, 113, 114, 116, 117, 127, 128, 134, 135, 137, 138, 147, 154, 155, 175, 204, 229, 233, 238, 244, 249, 253, 254, 260, 265, 272, 273, 274, 280, 282, 283, 289, 317, 318, 322, 323, 324, 325, 328, 329, 330, 332, 333, 336, 337, 340, 429], "1511": [53, 93, 94, 254], "05952": [53, 93, 94], "expon": [53, 67, 93, 94], "\u03b1": [53, 67, 93, 94], "delta": [53, 67, 93, 94, 256, 260, 286, 303, 307, 406, 409, 426], "1_000": [53, 58, 67, 68, 426, 430], "mini": [53, 58, 67, 68, 427], "decid": [53, 58, 67, 68, 426, 432], "incompat": [53, 58, 67, 68, 339, 430], "drop_last": [53, 58, 67, 68, 100, 102], "notion": [53, 58, 67, 68, 278], "caution": [53, 58, 67, 68, 100, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 433], "codebas": [53, 58, 67, 68, 428], "return_info": [53, 58, 67, 68, 93, 94, 96, 430], "tensordictprioritizedreplaybuff": [53, 406, 432], "simplifi": [53, 164, 419, 428, 430], "_weight": [53, 67, 93, 94], "update_prior": [53, 93, 94, 387, 410, 414, 430, 432], "36278465": 53, "invert": [53, 58, 67, 68, 96, 315, 415], "tqdm": [53, 58, 67, 68, 96, 390, 413, 415, 416, 426, 427, 428], "randomsampl": [53, 58, 67, 68, 96, 413, 426], "td_error": [53, 58, 67, 68, 96, 320, 321, 322, 324, 325, 326, 327, 333, 335, 338, 340, 342, 343, 350, 413, 430, 432], "update_tensordict_prior": [53, 58, 67, 68, 96, 413, 430, 432], "insert_transform": [53, 58, 67, 68, 96, 171, 226], "insert": [53, 58, 67, 68, 86, 96, 97, 107, 108, 111, 112, 171, 176, 180, 216, 226, 228], "set_sampl": [53, 58, 67, 68, 96], "set_storag": [53, 58, 67, 68, 96], "set_writ": [53, 58, 67, 68, 96], "write_count": [53, 58, 67, 68, 96], "prompt_rindex": [54, 55, 60], "promptdatatldr": 54, "116722": 54, "prompt": [55, 60, 129], "return_tensordict": [55, 69], "text": [55, 60, 69, 129, 130, 256, 257, 260, 261, 279, 415], "tensodict": [55, 69], "valid_sampl": 55, "eough": 55, "toknen": 55, "meet": 55, "criterion": 55, "autotoken": [55, 69, 72], "from_pretrain": [55, 60, 69, 130], "gpt2": [55, 60, 69, 72, 130, 244, 249, 277], "pad_token": [55, 69], "eos_token": 55, "enough": [55, 430], "inde": [55, 186, 415, 417, 428], "index_kei": [56, 66], "hash_kei": 56, "_hash": 56, "hash_modul": [56, 61, 66], "siphash": [56, 57, 66, 130], "hash_to_int": 56, "hashtoint": 56, "query_modul": [56, 66], "key1": [56, 66, 177, 216, 381, 389, 432], "key2": [56, 66, 177, 216, 381, 389, 432], "write_hash": 56, "is_tdmodule_compat": [56, 66], "reset_out_kei": [56, 66], "orign": [56, 66], "mod": [56, 66, 196, 241, 258, 262, 302, 307, 310, 416, 417, 423], "select_out_kei": [56, 66, 317, 318, 320, 321, 325, 326, 333, 337, 338, 340, 342, 343, 417], "reset_parameters_recurs": [56, 66, 335], "relu": [56, 66, 136, 239, 249, 265, 316], "old_param": [56, 66], "bork": [56, 66], "dork": [56, 66], "reset_paramet": [56, 66, 270], "from_modul": [56, 66, 252, 306, 309, 432], "rid": [56, 66], "out_keys_sourc": [56, 66], "rubric": [56, 66, 200, 309], "revert": [56, 66, 115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 419, 430], "seq": [56, 66, 241, 256, 258, 260, 262, 302, 416, 417, 423, 425], "z": [56, 66, 257], "n_compon": 57, "dtype_cast": 57, "as_tensor": [57, 61, 417], "init_method": 57, "emb": [57, 416], "sklearn": [57, 139], "byte": [57, 61, 170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235], "builtin": [57, 61], "pythonhashse": [57, 61], "todo": 57, "storagecheckpointerbas": [58, 103], "roundrobinwrit": [58, 68], "_pytre": [58, 430], "tree_map": [58, 430], "assert0": [58, 430], "ref_model": 60, "reward_model": [60, 312], "max_new_token": 60, "score_clip": 60, "kl_schedul": 60, "klcontrollerbas": 60, "num_step": [60, 417], "causal": 60, "sentenc": 60, "frozen": [60, 196, 233], "gpt2rewardmodel": 60, "get_dataload": [60, 406], "promptdata": [60, 406], "gpt2lmheadmodel": 60, "dl": 60, "block_siz": [60, 83], "tensorclass_typ": [60, 83], "openai_summarize_tldr": 60, "config_class": 60, "model_path": 60, "rollout_from_model": 60, "rollout_from_data": 60, "600": 60, "reward_kl": [60, 196], "reward_raw": 60, "sample_log_prob": [60, 295, 296, 297, 303, 307, 309, 337], "create_rollout_td": 60, "log_prob": [60, 250, 266, 267, 275, 278, 288, 307, 320, 409], "log_ratio": 60, "replic": [60, 409], "rindex": 60, "eo": 60, "generation_config": 60, "generationconfig": 60, "ti": [60, 361, 362, 363, 364, 366, 367, 368, 369, 414], "log_probs_gen": 60, "logprobs_of_label": 60, "hash_a": 61, "4669941682990263259": 61, "3778166555168484291": 61, "9122128731510687521": 61, "hash_b": 61, "heterogen": [62, 63, 88, 115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 156, 268, 269, 413, 414], "220": 64, "resembl": 66, "tensormap": 66, "collat": [66, 96], "subtyp": 66, "embedding_storag": 66, "tensor_dict_storag": 66, "new_index": 66, "key3": 66, "retrieve_valu": 66, "storage_constructor": 66, "write_fn": 66, "tensordictstorag": 66, "thumb": [66, 142, 415], "lazydynamicstorag": 66, "fixedstorag": 66, "randomprojectionhash": 66, "priority_kei": [67, 68, 93, 320, 322, 325, 326, 327, 333, 335, 338, 340, 342, 343, 350, 430, 432], "reduct": [67, 93, 94, 107, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343], "prioritizedreplaybuff": [67, 406, 432], "min": [67, 93, 94, 107, 279, 318, 319, 320, 326, 336, 338, 340, 414, 415], "median": [67, 93, 94, 107, 127, 128, 169, 303, 307], "include_info": [67, 68], "huggingfac": [69, 301], "co": [69, 188, 428], "pad_trunc": 69, "am": 69, "me": 69, "reassur": 69, "ok": 69, "primarili": [71, 205, 419], "educ": 71, "guess": 71, "knowledg": [71, 115, 118, 122, 129, 130, 142, 143, 150, 151, 420, 422], "tokenizer_fn": 72, "tensordicttoken": [72, 406], "pre_tokenization_hook": 72, "valid_s": 72, "tokenizer_class": 72, "tokenizer_model_nam": 72, "tokein": 72, "elementwis": 72, "vocabulari": [72, 129, 130, 223], "loader": [72, 415], "185068": 72, "dataset_to_tensordict": 72, "data_dir": 72, "batch_dim": [72, 115, 118, 122, 129, 130, 142, 143, 150, 151, 404], "valid_mask_kei": 72, "batch_dimens": 72, "filder": 72, "from_dict": 72, "data_memmap": 72, "ref": 73, "branching_act": 73, "prev_act": 73, "edg": [73, 417], "travers": 73, "breadth": 73, "bf": 73, "fully_expand": 73, "get_vertex_by_hash": 73, "get_vertex_by_id": 73, "is_termin": 73, "make_nod": 73, "node_observ": 73, "bag": 73, "num_children": 73, "num_vertic": 73, "count_repeat": 73, "recustruct": 73, "scope": [73, 115, 118, 122, 129, 130, 142, 143, 150, 151, 417, 433], "plotli": 73, "make_label": 73, "visual": [73, 204, 229, 231, 372, 415, 426, 428], "notimplementederror": [73, 413], "unsupport": 73, "selected_act": 73, "mctsforest": [73, 130, 406], "key_typ": 73, "liter": [73, 129, 184, 293], "recurse_through_entri": 80, "recurse_through_stack": 80, "infinit": [83, 134, 135, 154, 155, 421, 430], "block": [83, 86, 112, 408, 413, 416, 417, 420, 421, 426, 430], "pairwisedataset": [83, 406], "256": [83, 134, 135, 194, 249, 414, 415, 417, 426, 427], "checkpoint_fil": 85, "h5": 85, "h5_kwarg": 85, "iff": 85, "suffix": [85, 385], "h5py": 85, "create_dataset": 85, "consequ": [85, 260, 421], "immut": [86, 115, 118, 122, 129, 130, 142, 150, 207, 226], "piec": [86, 97, 108, 111, 112, 413, 414, 415, 422, 426, 427, 428, 430], "scratch_dir": [87, 413, 414, 416, 421, 426, 429, 430], "sent": [87, 89, 109, 233], "mistak": [87, 89, 109], "overewritten": 87, "tensorstoragecheckpoint": 87, "pathlib": [87, 390, 417], "main_ckpt_dir": 87, "rb_memmap": 87, "10_000_000": 87, "myclass": [87, 89, 109], "foo": [87, 89, 109, 298, 430, 433], "bar": [87, 89, 109, 298, 383, 384, 385, 390, 410, 414], "attach": [87, 88, 89, 90, 103, 105, 109, 414], "entiti": [87, 88, 89, 90, 103, 105, 109], "lazystacktensordict": 88, "heterougen": 88, "linearli": 88, "densifi": 88, "unlimit": [88, 90], "st": 88, "expans": [89, 335], "zero_": [89, 109, 161], "liststoag": 91, "max_capac": [93, 94, 413, 430], "max_priority_within_buff": [93, 94], "data_0": 93, "data_1": 93, "smoothen": 93, "tdrb": 93, "pack": [93, 256, 260, 415, 418, 433], "nd": [93, 94], "1d": [93, 94, 101, 102, 107], "sum_tre": [93, 94], "min_tre": [93, 94], "slice_len": [94, 101, 102, 372], "end_kei": [94, 101, 102], "cache_valu": [94, 101, 102], "closer": [94, 432], "readili": [94, 101, 102, 307], "conjunct": [94, 101, 102, 414], "Will": [94, 101, 137, 372], "buffer0": [94, 101], "immutablewrit": [94, 101], "buffer1": [94, 101], "other_sampl": [94, 101], "shorter": [94, 101, 102], "short": [94, 101, 102, 113, 114, 115, 118, 122, 127, 128, 129, 130, 142, 143, 150, 151, 156, 260, 261, 414, 415, 418, 419, 427, 430], "Be": [94, 101, 102], "fewer": [94, 101], "tolist": 94, "120110917137936e": 94, "06": [94, 250, 286], "storageensembl": [96, 99], "samplerensembl": 96, "writerensembl": [96, 105], "sample_from_al": [96, 99], "num_buffer_sampl": [96, 99], "ensembl": [96, 99, 105, 106, 112, 306, 338], "forbidden": 96, "0x13a2ef430": 96, "0x13a2f9310": 96, "interpol": [96, 208, 414, 417], "interpolationmod": 96, "bilinear": [96, 208], "0x13a2f9220": 96, "0x13a2f9f70": 96, "0x13a2d9b50": 96, "0x13a2f95b0": 96, "0x128648260": 96, "roundrobin": [97, 108], "buffer_id": [99, 105], "shuffl": [100, 102, 427], "incomplet": [100, 102], "fresh": 100, "haven": [100, 429], "remain": [100, 175, 185, 186, 196, 218, 272, 420], "draw": [100, 255], "use_gpu": [101, 102], "slicesamplerwithoutreplac": [101, 430], "acceler": [101, 102, 426, 427], "significantli": [101, 102, 176, 409, 413, 414, 420, 427], "reconstruct": [101, 102, 329, 413, 433], "ep_1": [101, 102], "ep_2": [101, 102], "73": 101, "74": 101, "76": 101, "77": 101, "42": [101, 263, 278, 317, 318, 320, 321, 325, 333, 340], "43": 101, "45": 101, "67": [101, 425], "69": 101, "70": 101, "71": 101, "27": [101, 102, 113, 114, 142, 150], "28": [101, 102, 268], "31": [101, 127, 128], "80": [101, 113, 114], "82": 101, "83": 101, "84": [101, 208, 416, 417], "78": 101, "79": 101, "320": [101, 102, 116, 117], "700": [101, 102], "dataid": [101, 102], "available_dataset": [101, 102], "counter": [102, 224, 302, 383, 410, 417], "23": [102, 236], "request": [102, 173, 205], "51": 102, "__len__": 103, "rank_kei": 107, "rank": [107, 239], "samplerwithoutreplac": [107, 415, 427, 430], "get_insert_index": 107, "googl": [113, 114, 134, 135, 140, 141, 238, 415, 416, 426, 427], "convers": [113, 114, 127, 128, 164, 409], "2106": [113, 114, 323, 342], "13281": [113, 114], "categorical_action_encod": [113, 114, 115, 118, 121, 122, 123, 124, 127, 128, 129, 130, 137, 138, 142, 143, 147, 150, 151, 164, 417], "frame_skip": [113, 114, 116, 117, 121, 122, 123, 124, 127, 128, 131, 132, 137, 138, 147, 192, 383, 385, 393, 410, 413, 414, 415, 432], "allow_done_after_reset": [113, 114, 116, 117, 118, 121, 123, 124, 127, 128, 137, 138, 140, 141, 147, 152, 153], "toler": [113, 114, 116, 117, 121, 123, 124, 127, 128, 137, 138, 140, 141, 147, 152, 153, 250, 286], "is_avail": [113, 114, 413, 414, 415, 416, 426, 427, 429], "ant": [113, 114, 115, 118, 122, 125, 129, 130, 142, 143, 150, 151, 429], "87": [113, 114], "acrobot": [113, 114, 116, 117, 433], "advant": [113, 114, 127, 128], "timer": [113, 114, 127, 128], "timeit": [113, 114, 127, 128, 417], "310": [113, 114], "ms": [113, 114, 127, 128], "268": [113, 114], "433": [113, 114], "213": [113, 114], "8605": [113, 114], "pipelineenv": 114, "get_environ": 114, "san": 115, "fen": [115, 140, 141], "pgn": 115, "legal": 115, "board": [115, 151], "include_san": 115, "algebra": [115, 428], "notat": 115, "include_fen": 115, "forsyth": 115, "edward": 115, "include_pgn": 115, "portabl": [115, 422], "include_legal_mov": 115, "include_hash": 115, "mask_act": 115, "subset": [115, 428, 429], "29275": 115, "rnbqkbnr": [115, 140, 141], "pppppppp": [115, 140, 141], "kqkq": [115, 140, 141], "legal_mov": 115, "219": 115, "5p2": 115, "ppppp1pp": 115, "event": [115, 266, 267, 275, 361, 362, 363, 364, 366, 367, 368, 369, 430], "date": [115, 175, 375], "white": 115, "f4": 115, "96": 115, "kq": 115, "5n2": 115, "rnbqkb1r": 115, "nf3": 115, "na6": 115, "c4": 115, "f6": 115, "h4": 115, "rb8": 115, "na3": 115, "ra": 115, "sort": [115, 118, 122, 129, 130, 142, 143, 150, 151, 177, 279], "another_act": [115, 118, 122, 129, 130, 142, 143, 150, 151], "discretebox": [115, 118, 122, 129, 130, 142, 143, 150, 151], "mutabl": [115, 118, 122, 129, 130, 142, 143, 150, 151], "action_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151, 415, 427], "had": [115, 118, 122, 129, 130, 142, 143, 150, 151, 419, 421], "all_act": [115, 118, 122, 129, 130, 142, 143, 150, 151], "any_don": [115, 118, 122, 129, 130, 142, 143, 150, 151], "loc": [115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 200, 211, 233, 259, 287, 288, 295, 296, 297, 303, 307, 309, 317, 318, 320, 333, 337, 338, 339, 340, 394, 404, 408, 413, 414, 415, 416, 419, 427, 432], "_callabletransform": [115, 118, 122, 129, 130, 142, 143, 150, 151], "auto_specs_": [115, 118, 122, 129, 130, 142, 143, 150, 151], "action_spac": [115, 118, 122, 129, 130, 142, 143, 150, 151, 188, 252, 281, 299, 300, 304, 305, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 416, 417, 419, 423], "check_dtyp": [115, 118, 122, 129, 130, 142, 143, 150, 151, 156], "discrep": [115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 317, 319, 321, 322, 334, 337, 339, 350], "broken": [115, 118, 122, 129, 130, 142, 143, 150, 151, 156], "rng": [115, 118, 122, 129, 130, 142, 143, 150, 151, 156, 428], "done_keys_group": [115, 118, 122, 129, 130, 142, 143, 150, 151], "another_don": [115, 118, 122, 129, 130, 142, 143, 150, 151], "done_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "empty_cach": [115, 118, 122, 129, 130, 142, 143, 150, 151, 226], "fake_tensordict": [115, 118, 122, 129, 130, 142, 143, 150, 151, 414, 417], "envnam": [115, 118, 122, 129, 130, 142, 143, 150, 151], "full_action_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151, 426, 427], "full_done_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "full_observation_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "full_reward_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "pipeline_st": [115, 118, 122, 129, 130, 142, 143, 150, 151], "full_state_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "get_legal_mov": 115, "uci": 115, "input_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "is_spec_lock": [115, 118, 122, 129, 130, 142, 143, 150, 151], "maybe_reset": [115, 118, 122, 129, 130, 142, 143, 150, 151], "speak": [115, 118, 122, 129, 130, 142, 143, 150, 151, 181, 307, 413], "observation_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "output_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "register_gym": [115, 118, 122, 129, 130, 142, 143, 150, 151, 418], "entry_point": [115, 118, 122, 129, 130, 142, 143, 150, 151], "info_kei": [115, 118, 122, 129, 130, 142, 143, 150, 151], "reward_threshold": [115, 118, 122, 129, 130, 142, 143, 150, 151], "nondeterminist": [115, 118, 122, 129, 130, 142, 143, 150, 151], "max_episode_step": [115, 118, 121, 122, 123, 129, 130, 142, 143, 150, 151], "order_enforc": [115, 118, 122, 129, 130, 142, 143, 150, 151], "autoreset": [115, 118, 122, 129, 130, 142, 143, 150, 151], "disable_env_check": [115, 118, 121, 122, 129, 130, 137, 138, 142, 143, 150, 151], "apply_api_compat": [115, 118, 122, 129, 130, 142, 143, 150, 151], "nasium": [115, 118, 122, 129, 130, 142, 143, 150, 151, 164], "dmcontrolenv": [115, 118, 122, 129, 130, 142, 143, 150, 151, 372, 406, 413, 418, 425, 433], "dmc": [115, 118, 122, 129, 130, 142, 143, 150, 151], "cheetah": [115, 116, 117, 118, 122, 129, 130, 142, 143, 150, 151, 372, 413], "removeemptyspec": [115, 118, 122, 129, 130, 142, 143, 150, 151], "threshold": [115, 118, 122, 129, 130, 142, 143, 150, 151, 255, 318, 319, 415], "learnt": [115, 118, 122, 129, 130, 142, 143, 150, 151, 400], "checker": [115, 118, 121, 122, 129, 130, 137, 138, 142, 143, 150, 151], "stepapicompat": [115, 118, 122, 129, 130, 142, 143, 150, 151], "deem": [115, 118, 122, 129, 130, 134, 135, 142, 143, 150, 151, 154, 155], "task_nam": [115, 116, 118, 122, 129, 130, 142, 143, 150, 151], "envgym": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0855": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0215": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0881": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0412": [115, 118, 122, 129, 130, 142, 143, 150, 151], "1101": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0080": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0254": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0424": [115, 118, 122, 129, 130, 142, 143, 150, 151], "veloc": [115, 116, 117, 118, 122, 129, 130, 142, 143, 150, 151, 176, 426, 427, 428, 433], "9609e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "9776e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "04": [115, 118, 122, 126, 129, 130, 142, 143, 150, 151, 221], "6347e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "3842e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "5338e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "3064e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0381e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "6656e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "05": [115, 118, 122, 129, 130, 142, 143, 150, 151, 221, 238, 428], "0204e": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0833": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0275": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0612": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0770": [115, 118, 122, 129, 130, 142, 143, 150, 151], "1256": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0082": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0186": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0476": [115, 118, 122, 129, 130, 142, 143, 150, 151], "2221": [115, 118, 122, 129, 130, 142, 143, 150, 151], "2256": [115, 118, 122, 129, 130, 142, 143, 150, 151], "5930": [115, 118, 122, 129, 130, 142, 143, 150, 151], "6937": [115, 118, 122, 129, 130, 142, 143, 150, 151], "5865": [115, 118, 122, 129, 130, 142, 143, 150, 151], "5479": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0187": [115, 118, 122, 129, 130, 142, 143, 150, 151], "6825": [115, 118, 122, 129, 130, 142, 143, 150, 151], "5224": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0018": [115, 118, 122, 129, 130, 142, 143, 150, 151], "1005": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0335": [115, 118, 122, 129, 130, 142, 143, 150, 151, 181], "0268": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0133": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0627": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0074": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0488": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0353": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0075": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0069": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0098": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0058": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0033": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0157": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0004": [115, 118, 122, 129, 130, 142, 143, 150, 151, 221], "0381": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0452": [115, 118, 122, 129, 130, 142, 143, 150, 151], "11355747": [115, 118, 122, 129, 130, 142, 143, 150, 151], "04257728": [115, 118, 122, 129, 130, 142, 143, 150, 151], "00408397": [115, 118, 122, 129, 130, 142, 143, 150, 151], "04155852": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0389733": [115, 118, 122, 129, 130, 142, 143, 150, 151], "01409826": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0978704": [115, 118, 122, 129, 130, 142, 143, 150, 151], "08808327": [115, 118, 122, 129, 130, 142, 143, 150, 151], "03970837": [115, 118, 122, 129, 130, 142, 143, 150, 151], "00535434": [115, 118, 122, 129, 130, 142, 143, 150, 151], "02353762": [115, 118, 122, 129, 130, 142, 143, 150, 151], "05116226": [115, 118, 122, 129, 130, 142, 143, 150, 151], "02788907": [115, 118, 122, 129, 130, 142, 143, 150, 151], "06848346": [115, 118, 122, 129, 130, 142, 143, 150, 151], "05154399": [115, 118, 122, 129, 130, 142, 143, 150, 151], "0371798": [115, 118, 122, 129, 130, 142, 143, 150, 151], "05128025": [115, 118, 122, 129, 130, 142, 143, 150, 151], "dydact": [115, 118, 122, 129, 130, 142, 143, 150, 151], "gym_env": [115, 118, 122, 129, 130, 142, 143, 150, 151, 432], "reset_kei": [115, 118, 122, 129, 130, 142, 143, 150, 151, 176, 212, 218, 219, 220, 426], "multitask": [115, 118, 122, 129, 130, 142, 143, 150, 151], "multiag": [115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 168, 269, 280, 289, 319, 334, 337, 350], "another_reward": [115, 118, 122, 129, 130, 142, 143, 150, 151], "reward_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "auto_cast_to_devic": [115, 118, 122, 129, 130, 142, 143, 150, 151, 427], "soon": [115, 118, 122, 129, 130, 142, 143, 144, 145, 150, 151], "__sort": [115, 118, 122, 129, 130, 142, 143, 150, 151], "as__": [115, 118, 122, 129, 130, 142, 143, 150, 151], "argmaxmodul": [115, 118, 122, 129, 130, 142, 143, 150, 151], "argmax": [115, 118, 122, 129, 130, 142, 143, 150, 151, 252, 281, 300, 305, 417, 419], "n_act": [115, 118, 122, 129, 130, 142, 143, 150, 151, 196, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 420], "ourselv": [115, 118, 122, 129, 130, 142, 143, 150, 151, 415, 433], "emul": [115, 118, 122, 129, 130, 142, 143, 150, 151], "epoch": [115, 118, 122, 129, 130, 142, 143, 150, 151, 390, 415, 426, 427], "input_td": [115, 118, 122, 129, 130, 142, 143, 150, 151], "rollout_td": [115, 118, 122, 129, 130, 142, 143, 150, 151], "state_spec_unbatch": [115, 118, 122, 129, 130, 142, 143, 150, 151], "prevail": [115, 118, 122, 129, 130, 142, 143, 150, 151, 168, 177, 212], "next_tensordict": [115, 118, 122, 129, 130, 142, 143, 150, 151, 167, 173, 177, 189, 190, 191, 196, 203, 206, 207, 213, 216, 229, 233], "precomput": [115, 118, 122, 129, 130, 142, 143, 150, 151], "_stepmdp": [115, 118, 122, 129, 130, 142, 143, 150, 151, 167], "exclude_act": [115, 118, 122, 129, 130, 142, 143, 150, 151, 167], "leverag": [115, 118, 122, 129, 130, 133, 142, 143, 144, 145, 150, 151, 413, 427, 433], "minim": [115, 118, 122, 129, 130, 142, 143, 150, 151, 374, 430], "reset_data": [115, 118, 122, 129, 130, 142, 143, 150, 151, 433], "dm_control": [116, 117, 413, 425, 433], "2006": [116, 117, 318, 324], "12983": [116, 117], "240": [116, 117, 432], "swingup": [116, 117, 433], "swingup_spars": [116, 117], "ball_in_cup": [116, 117], "catch": [116, 117, 417], "balance_spars": [116, 117], "three_pol": [116, 117], "two_pol": [116, 117], "finger": [116, 117], "turn_easi": [116, 117], "turn_hard": [116, 117], "fish": [116, 117], "upright": [116, 117, 414], "swim": [116, 117], "hopper": [116, 117], "hop": [116, 117], "humanoid": [116, 117, 142, 150, 425], "walk": [116, 117, 142, 150, 414, 425], "run_pure_st": [116, 117], "bring_bal": [116, 117], "bring_peg": [116, 117], "insert_bal": [116, 117], "insert_peg": [116, 117], "point_mass": [116, 117], "reacher": [116, 117], "swimmer": [116, 117], "swimmer6": [116, 117], "swimmer15": [116, 117], "walker": [116, 117], "dog": [116, 117], "trot": [116, 117], "humanoid_cmu": [116, 117], "lqr": [116, 117], "lqr_2_1": [116, 117], "lqr_6_2": [116, 117], "quadrup": [116, 117], "escap": [116, 117], "stacker": [116, 117], "stack_2": [116, 117], "stack_4": [116, 117], "deviceless": 118, "run_type_check": [118, 136], "hint": 118, "counterenv": 118, "creator": [119, 395, 396, 402, 403, 404], "substitut": [119, 218, 233, 419], "vecnorm": [119, 404], "env_creat": [119, 413], "test_env1": 119, "_td": [119, 328], "observation_count": [119, 433], "test_env2": 119, "sleep": [119, 433], "ps": 119, "p1": 119, "p2": 119, "9934": 119, "make_vari": [119, 224], "variant": [119, 224, 240, 408], "trajcount": 119, "env_creator_pendulum": 119, "env_creator_cartpol": 119, "env_str": 120, "device_map": 120, "registri": [121, 152], "asyncvectorenv": 121, "involv": [121, 123, 124, 134, 135, 147, 173, 176, 224, 258, 262, 418, 420], "pixel_observ": [121, 123, 124, 147], "pixelobservationwrapp": [121, 123, 124, 147], "adventur": [121, 123], "airraid": [121, 123, 433], "alien": [121, 123], "time_limit": 121, "timelimit": [121, 134, 135, 154, 155], "default_info_dict_read": [121, 122, 123, 142], "reader": [121, 122, 123, 142, 414], "set_info_dict_read": [121, 122, 123, 142, 418], "info_dict": [121, 122, 123, 142], "gymlikeenv": [121, 123, 406], "auto_register_info_dict": [121, 122, 123, 142], "multibinari": [121, 123], "multidiscret": [121, 123], "rag": [121, 123], "gym_conversion_exampl": [121, 123], "info_dict_read": [122, 142], "ignore_priv": 122, "baseinfodictread": 122, "tensordictprim": [122, 142, 241, 258, 262, 314, 408, 416], "succe": [122, 142], "underscor": 122, "primer": [122, 129, 184, 219, 241, 258, 262, 314, 416], "halfcheetah": [122, 142, 169, 208, 413, 432], "reward_ctrl": [122, 142], "reward_run": [122, 142], "x_posit": [122, 142], "x_veloc": [122, 142], "raise_if_clos": 122, "read_act": 122, "read_don": 122, "nonsens": 122, "fallback": 122, "read_ob": 122, "dictat": [122, 197, 303, 307, 337, 413, 428], "read_reward": 122, "hoc": [122, 142, 419], "dict_read": 122, "my_info_kei": 122, "some_env": 122, "vecenv": 123, "vectorenv": 123, "convert_actions_to_numpi": 123, "secur": 124, "habitat3": 124, "ai": [124, 429], "habitatrenderpick": 124, "isaacgym": [125, 126], "isaacgymwrapp": [125, 406], "isaacgymenv": [126, 406], "webpag": 126, "isaac": 126, "essenc": [126, 418], "instadeepai": [127, 128], "2306": [127, 128], "09884": [127, 128], "snake": [127, 128], "grid": [127, 128, 372], "bodi": [127, 128], "body_st": [127, 128], "fruit_posit": [127, 128], "col": [127, 128], "head_posit": [127, 128], "tail": [127, 128], "game2048": [127, 128], "maze": [127, 128], "cleaner": [127, 128], "cvrp": [127, 128], "multicvrp": [127, 128], "minesweep": [127, 128], "rubikscub": [127, 128], "knapsack": [127, 128], "sudoku": [127, 128], "tsp": [127, 128], "connector": [127, 128], "v2": [127, 128, 148, 149, 346, 361, 362, 363, 364, 366, 367, 368, 369, 416], "mmst": [127, 128], "graphcolor": [127, 128], "partli": [127, 128], "scrambl": [127, 128], "robotwarehous": [127, 128], "tetri": [127, 128], "binpack": [127, 128], "jobshop": [127, 128], "0x1fca91910": 127, "122": [127, 128, 433], "0x1ff9baee0": 127, "134": [127, 128], "0x1ff9ba7c0": 127, "172": [127, 128], "jit": 128, "eager": 128, "tdreset": [128, 235, 425], "whichev": 128, "drastic": [128, 142, 430], "histori": 129, "tailor": [129, 432], "cot": 129, "from_dataload": [129, 184], "str2str": [129, 184], "vocab_s": [129, 130], "dataloadingprim": [129, 219], "data_kei": [129, 184], "data_spec": [129, 184], "stack_method": [129, 184], "as_nested_tensor": [129, 184], "as_padded_tensor": [129, 184], "overview": [130, 415, 417, 420, 426, 427, 432], "hashing_modul": 130, "text_output": 130, "decod": [130, 162, 273], "batch_decod": 130, "text_kei": 130, "gpt2token": 130, "make_tensordict": 130, "mo": [131, 132], "minecart": [131, 132], "mo_gym": [132, 197], "qualnam": 133, "neural": [133, 144, 145, 242, 243, 276, 278, 284, 306, 408, 414, 415, 416, 419, 426, 427, 428, 433], "group_map": [133, 134, 135, 140, 141, 144, 145, 152, 153, 154, 155, 157, 426], "constructiuon": [133, 144, 145], "premad": [133, 134, 135, 144, 145, 154, 155, 350], "all_in_one_group": [133, 140, 141, 157], "agent_0": [133, 144, 145, 152, 157, 216], "agent_1": [133, 144, 145, 152, 157, 216], "agent_2": [133, 144, 145, 152, 157], "agent_3": [133, 152], "one_group_per_ag": [133, 144, 145], "meltingpot": [134, 135], "2211": [134, 135], "13746": [134, 135], "melt": [134, 135], "pot": [134, 135], "novel": [134, 135, 420], "social": [134, 135], "familiar": [134, 135, 414, 427, 433], "unfamiliar": [134, 135], "broad": [134, 135], "cooper": [134, 135, 426, 427], "decept": [134, 135], "reciproc": [134, 135], "stubborn": [134, 135], "substrat": [134, 135], "ml_collect": 134, "config_dict": 134, "configdict": 134, "categorical_act": [134, 135, 140, 141, 144, 145, 148, 149, 152, 153, 154, 155], "marlgroupmaptyp": [134, 135, 140, 141, 144, 145, 152, 153, 154, 155, 157, 406, 426], "agent_nam": [134, 135, 154, 155, 157], "agent_names_to_indices_map": [134, 135, 154, 155], "env_torchrl": [134, 135], "commons_harvest__open": [134, 135], "rgb": [134, 135], "144": [134, 135], "192": [134, 135], "collective_reward": [134, 135], "ready_to_shoot": [134, 135], "88": [134, 135, 148, 149], "substrate_config": 135, "get_config": 135, "mp_env": 135, "build_from_config": 135, "default_player_rol": 135, "mymbenv": [136, 239, 265], "world_model": [136, 239, 265, 329], "hidden_observ": [136, 239, 265], "mlp": [136, 239, 242, 243, 245, 246, 247, 248, 254, 258, 262, 265, 269, 270, 295, 299, 314, 322, 324, 408, 414, 417, 419, 420, 423, 425, 429, 432], "worldmodelwrapp": [136, 239, 265], "activation_class": [136, 239, 242, 243, 245, 246, 247, 248, 253, 254, 263, 265, 268, 269, 414, 419, 426, 427, 432], "activate_last_lay": [136, 239, 248, 263, 265], "sail": [137, 138], "sg": [137, 138], "2206": [137, 138], "10558": [137, 138], "readthedoc": [137, 140, 141], "en": [137, 140, 141], "python_interfac": 137, "envpoolmixin": 138, "env_bas": 138, "task_id": 138, "env_typ": 138, "gym_reset_return_info": 138, "envpool_env": 138, "www": [139, 266, 267], "fetch_openml": 139, "adult_num": 139, "adult_onehot": 139, "mushroom_num": 139, "mushroom_onehot": 139, "covertyp": 139, "shuttl": 139, "magic": [139, 417, 418], "106": 139, "openspiel": [140, 141], "open_spiel": [140, 141], "game_str": 140, "return_st": [140, 141, 144, 145], "4672": [140, 141], "current_play": [140, 141], "674": 140, "2048": [140, 141], "add_nois": [140, 141], "amazon": [140, 141], "backgammon": [140, 141], "restor": [140, 141], "td_restor": [140, 141], "pyspiel": 141, "load_gam": 141, "new_initial_st": 141, "3009": 141, "my_env_fun": [142, 150], "custom_attribute_list": [142, 150], "custom_attribut": [142, 150], "custom_method_list": [142, 150], "custom_method": [142, 150], "deploi": [142, 150, 173, 417], "slight": [142, 150, 414], "share_individual_td": [142, 150], "shared_memori": [142, 150], "policy_proof": [142, 150], "ll": [142, 150, 256, 257, 260, 261, 413, 414, 415, 416, 418, 419, 420, 421, 423, 427, 433], "hidden": [142, 150, 175, 245, 253, 256, 257, 258, 260, 261, 262, 273, 274, 282, 283, 295, 296, 297, 298, 306, 309, 319, 334, 337, 408, 416, 425, 432], "serial_for_singl": [142, 150, 414], "circular": [142, 150, 413], "list_of_kwarg": [142, 150], "com_veloc": [142, 150], "head_height": [142, 150], "joint_angl": [142, 150], "torso_vert": [142, 150], "timeout": 142, "idl": 142, "batched_pipe_timeout": 142, "stringent": [142, 415, 426, 427], "inter": 142, "penv": [142, 224], "env_fix": 142, "influenc": 142, "myenv": [142, 173, 183, 187], "pipe": 142, "update_kwarg": [142, 150], "th": [143, 191, 228, 256, 260, 428], "thdot": [143, 428], "max_spe": [143, 428], "max_torqu": [143, 428], "gen_param": [143, 428], "gravit": [143, 428], "torqu": [143, 428], "pettingzoo": [144, 145, 426, 427], "pet": [144, 145], "zoo": [144, 145], "__": [144, 145], "aecenv": [144, 145], "dead": [144, 145], "done_on_ani": [144, 145, 426], "compulsori": [144, 145], "adversary_0": [144, 145], "adversari": [144, 145, 331, 426], "sisl": 144, "multiwalker_v9": 144, "aec": [144, 145], "n_piston": [144, 145], "pistonball_v6": [144, 145], "piston": [144, 145], "piston_0": [144, 145], "piston_1": [144, 145], "piston_20": [144, 145], "tictactoe_v3": [144, 145], "player": [144, 145, 151], "player_1": [144, 145], "player_2": [144, 145], "butterfli": 145, "parallel_env": [145, 413, 432, 433], "cube": 146, "roboh": 147, "expos": [147, 183, 187, 308, 414], "vikashplu": 147, "wiki": 147, "2310": 147, "06828": 147, "from_depth": 147, "smacv2": [148, 149], "starcraft": [148, 149], "challeng": [148, 149, 418, 428, 429], "10gen_terran": [148, 149], "10gen_zerg": [148, 149], "10gen_protoss": [148, 149], "3m": [148, 149], "8m": [148, 149], "25m": [148, 149], "5m_vs_6m": [148, 149], "8m_vs_9m": [148, 149], "10m_vs_11m": [148, 149], "27m_vs_30m": [148, 149], "mmm": [148, 149], "mmm2": [148, 149], "2s3z": [148, 149], "3s5z": [148, 149], "3s5z_vs_3s6z": [148, 149], "3s_vs_3z": [148, 149], "3s_vs_4z": [148, 149], "3s_vs_5z": [148, 149], "1c3s5z": [148, 149], "2m_vs_1z": [148, 149], "corridor": [148, 149], "6h_vs_8z": [148, 149], "2s_vs_1sc": [148, 149], "so_many_banel": [148, 149], "bane_vs_ban": [148, 149], "2c_vs_64zg": [148, 149], "old": [148, 149, 334, 433], "smac": [148, 149], "map_nam": [148, 149], "176": [148, 149], "battle_won": [148, 149], "dead_al": [148, 149], "dead_enemi": [148, 149], "episode_limit": [148, 149], "322": [148, 149], "procedur": [148, 149], "distribution_config": [148, 149], "n_unit": [148, 149], "n_enemi": [148, 149], "team_gen": [148, 149], "dist_typ": [148, 149], "weighted_team": [148, 149], "unit_typ": [148, 149], "marin": [148, 149], "maraud": [148, 149], "medivac": [148, 149], "exception_unit_typ": [148, 149], "start_posit": [148, 149], "surrounded_and_reflect": [148, 149], "map_x": [148, 149], "map_i": [148, 149], "capability_config": [148, 149], "131": [148, 149], "starcraft2env": 149, "tic": 151, "tac": 151, "toe": 151, "single_play": 151, "player1": 151, "desired_batch_s": 151, "player0": 151, "uniti": [152, 153], "ml": [152, 153], "technolog": [152, 153], "llapi": [152, 153], "mlagents_env": [152, 153], "unityenviron": [152, 153], "file_nam": 152, "registered_nam": 152, "nor": 152, "localhost": 152, "connect": 152, "3dball": 152, "group_0": 152, "vectorsensor_size8": 152, "continuous_act": [152, 154, 155, 370, 426, 427], "agent_10": 152, "agent_11": 152, "agent_4": 152, "agent_5": 152, "agent_6": 152, "agent_7": 152, "agent_8": 152, "agent_9": 152, "group_reward": 152, "proroklab": [154, 155], "vectorizedmultiagentsimul": [154, 155], "2207": [154, 155], "03530": [154, 155], "basescenario": 154, "defaultt": 154, "chosen": [154, 155, 218, 219, 280, 281, 289, 305, 372, 408, 422], "sparsiti": 154, "unbatched_action_spec": [154, 155], "unbatched_observation_spec": [154, 155], "unbatched_reward_spec": [154, 155], "het_spec": [154, 155], "het_specs_map": [154, 155], "flock": [154, 155, 370], "agent_collision_rew": [154, 155], "agent_distance_rew": [154, 155], "ca": 157, "environment4": 157, "get_group_map": 157, "sumbodul": 160, "unsqueeze_null_shap": 161, "model_bas": [162, 163, 239, 265], "model_based_env": [162, 328], "dreamerenv": [162, 328, 406], "model_based_env_ev": 162, "spec_typ": 164, "convert_specnam": 164, "remap_state_to_observ": 164, "spectyp": 164, "unus": 164, "probabilistictdmodul": [165, 263, 303, 307, 351, 385], "keep_oth": [167, 428], "exclude_reward": 167, "exclude_don": 167, "next_": 167, "write_full_fals": 168, "_terminated_or_trunc": 168, "num_interv": 169, "out_action_kei": 169, "samplingstrategi": 169, "optino": 169, "intenum": 169, "interv": [169, 221, 371, 372, 382, 392, 414, 428], "action_disc": 169, "masker": 170, "maskedenv": 170, "ones_lik": 170, "scatter": 170, "transformthatmeasuresbyt": [170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235], "bytes_in_td": [170, 172, 173, 175, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 196, 203, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 235], "fill_float": 172, "fill_int": 172, "fill_bool": 172, "someenvclass": 172, "autoresetenv": 172, "fooenv": 172, "sign": [172, 214, 352, 426], "envtyp": 172, "reshape_fn": [173, 417], "reset_func": 173, "env_kwarg": [173, 402, 403, 413], "accompani": [173, 217], "tensordict_batch_s": 173, "tensordict_reset": [173, 428], "transform_env_batch_s": [173, 180, 225, 235], "untouch": [173, 180, 183, 185, 189, 196, 198, 206, 207, 213, 217, 223, 225, 227, 235], "transform_full_done_spec": [173, 180, 183, 185, 189, 196, 198, 206, 207, 213, 217, 223, 225, 227, 235], "biner": 174, "burn_in": 175, "burn": 175, "burnt": 175, "gru_modul": [175, 258, 314], "input_s": [175, 219, 256, 257, 258, 260, 261, 262, 314, 416, 417], "hidden_s": [175, 219, 256, 257, 258, 260, 261, 262, 314, 416, 417], "default_recurrent_mod": [175, 258, 262], "burn_in_transform": 175, "gru": [175, 219, 257, 258, 314, 417], "num_lay": [175, 256, 258, 260, 262, 273, 274, 314, 417], "is_init": [175, 195, 258, 262, 279, 302, 314, 416, 417], "86": 175, "3008": 175, "0344": 175, "padding_valu": [176, 266, 267], "as_invers": 176, "movement": 176, "1312": 176, "5602": 176, "consumpt": [176, 406], "pictur": 176, "pixels_trsf": [176, 430], "grayscal": [176, 414, 416, 417, 430, 433], "data_exclud": [176, 430], "make_rb_transform_and_sampl": 176, "sampler_kwarg": 176, "redund": [176, 416], "del_kei": [177, 216, 229, 425, 428], "unsqueeze_if_oor": 177, "observation_posit": 177, "observation_veloc": 177, "delet": [177, 216, 379], "crop": [178, 205, 372], "center": [178, 278, 372], "width": [178, 182, 208], "height": [178, 182, 208], "squar": [178, 182, 259, 287, 288, 372], "scalar": [179, 210, 237, 246, 248, 255, 271, 272, 279, 313, 317, 318, 319, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 350, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 414, 420, 428], "permit": [179, 191, 216, 228, 317, 319, 334, 337, 339], "rewardsc": [180, 226, 413, 414, 416], "rewardclip": 180, "transformed_env": [180, 226, 418], "transform_env_devic": [180, 185, 225, 235], "cond": 181, "met": [181, 316, 426, 428], "altogeth": 181, "exectu": 181, "palliat": [181, 419], "step_count_kei": [181, 217], "inner_count": 181, "middle_env": 181, "middle_count": 181, "auto_unwrap": [181, 226, 380], "9670": 181, "2546": 181, "9669": 181, "9802": 181, "1981": 181, "1601": 181, "9926": 181, "1214": 181, "5556": 181, "9994": 181, "7622": 181, "9984": 181, "0561": 181, "7933": 181, "9895": 181, "1445": 181, "7779": 181, "dtype_in": 183, "dtype_out": 183, "scan": [183, 187, 308, 309], "resp": [183, 187], "not_transform": [183, 187], "auto_batch_s": 184, "maybe_dense_stack": 184, "endless_dataload": 184, "llmenv": [184, 406], "set_capture_non_tensor_stack": 184, "dummydataload": 184, "generate_random_str": 184, "ascii_lowercas": 184, "__iter__": 184, "__next__": 184, "llm": 184, "zxwvupirska": 184, "stringa": 184, "zxwvupirsk": 184, "roll": 184, "init_st": 184, "nngcmflsana": 184, "vrrbnhzpmga": 184, "nngcmflsan": 184, "vrrb": 184, "dummytensordataload": 184, "generate_random_tensor": 184, "pad_tensor": 184, "padding_length": 184, "orig_devic": 185, "unspecifi": 185, "transform_done_spec": [185, 216, 225, 227, 235], "num_actions_effect": 186, "max_act": 186, "include_forward": 186, "num_act": [186, 243, 326, 417, 419], "action_out": 186, "eol_kei": 188, "lives_kei": 188, "eol_attribut": 188, "breakout": 188, "210": [188, 202], "160": [188, 202], "eol_transform": 188, "eol": 188, "dqnloss": [188, 317, 318, 320, 321, 324, 326, 327, 328, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 350, 397, 406, 409, 414, 416, 417, 423], "register_kei": 188, "loss_or_advantag": 188, "lossmodul": [188, 390, 399, 400, 406, 409], "valueestimatorbas": [188, 335, 406], "finit": [190, 278, 419, 430], "first_dim": 191, "last_dim": 191, "allow_positive_dim": [191, 216, 228], "frameskip": 191, "repeatedli": [192, 415, 427], "hash_fn": 194, "use_raw_nontensor": [194, 223, 227], "repertoir": 194, "reproducible_hash": 194, "unarytransform": 194, "observation_str": 194, "tobyt": [194, 227], "observation_hash": 194, "x08": 194, "x8b": 194, "xbexav": 194, "xbf": 194, "x00": 194, "xee": 194, "xb5": 194, "x17": 194, "x8f": 194, "xbe": [194, 227], "x88": 194, "xccu": 194, "xc0vr": 194, "get_input_from_hash": 194, "hash_tensor": 194, "init_kei": [195, 302], "tracker": 195, "pi_curr": 196, "pi_0": 196, "overfit": 196, "probabilist": [196, 303, 317, 337, 406, 415, 432], "get_dist": [196, 307, 308], "normalparamextractor": [196, 295, 296, 297, 303, 309, 317, 318, 320, 326, 333, 337, 338, 339, 340, 342, 343, 408, 415, 419, 427, 432], "probabilisticactor": [196, 295, 296, 297, 298, 317, 318, 320, 323, 325, 326, 333, 336, 337, 338, 339, 340, 342, 343, 408, 413, 415, 419, 426, 427], "tanhnorm": [196, 295, 296, 297, 303, 309, 317, 318, 320, 333, 337, 338, 339, 340, 342, 343, 406, 415, 427, 432], "return_log_prob": [196, 295, 296, 297, 303, 307, 309, 339, 408, 415, 419, 426, 427, 432], "apply_": 196, "copy_": [196, 413], "formula": [196, 259, 287, 288, 317, 319, 334, 337, 409, 415], "mogymwrapp": [197, 406], "mo_env": 197, "sea": 197, "treasur": 197, "so_env": 197, "stack_reward": 198, "stack_observ": 198, "auto_batch_size_": 198, "macro": [198, 302], "noop": 199, "trial": 199, "standard_norm": [200, 211, 233, 413, 414, 416], "affin": [200, 211, 233], "layer": [200, 233, 238, 242, 243, 245, 246, 251, 253, 256, 257, 258, 260, 261, 262, 263, 268, 269, 271, 272, 273, 274, 284, 285, 292, 301, 310, 408, 414, 415, 416, 417, 419, 426, 429], "epsilon": [200, 237, 255, 279, 341, 388, 414, 415, 416, 419], "recover": 200, "set_default_tensor_typ": 200, "doubletensor": 200, "isclos": 200, "next_ob": [200, 352, 353, 354, 355, 432], "init_stat": [200, 413, 414, 415, 416], "3752e": 200, "5087e": 200, "9294e": 200, "9636": 200, "5608": 200, "6408": 200, "num_it": [200, 414, 415], "reduce_dim": [200, 413, 414, 415, 416], "cat_dim": [200, 413, 414, 415, 416], "keep_dim": [200, 414, 416], "statist": [200, 233, 238, 339, 404, 413, 414, 415, 433], "gaussian": [200, 219, 237, 239, 265, 271, 272, 277, 415, 417, 426], "empir": [200, 239, 265, 303, 307, 413, 415, 427], "3d": [200, 242], "reorder": 202, "in_keys_in": [202, 228], "channel": [202, 222, 268, 273, 274, 414], "r3m": [204, 429], "resnet": [204, 229, 231], "ego4d": [204, 229, 231], "univers": [204, 229, 231, 418], "suraj": [204, 229], "nair": [204, 229], "aravind": [204, 229], "rajeswaran": [204, 229], "vikash": [204, 229, 231], "kumar": [204, 229, 231], "chelsea": [204, 229], "finn": [204, 229], "abhinav": [204, 229], "gupta": [204, 229], "2203": [204, 229, 265, 429], "12601": [204, 229, 429], "_init": [204, 229, 413], "resnet50": [204, 231, 429], "model_nam": [204, 229, 231, 375], "resnet34": 204, "resnet18": 204, "r3m_vec": [204, 429], "stack_imag": [204, 231], "tread": [204, 231], "hub": [204, 231, 418], "resnet50_weight": [204, 231], "imagenet1k_v1": [204, 231], "download_path": [204, 231], "tensor_pixels_kei": [204, 231], "sub_seq_len": 205, "sample_dim": [205, 413], "hesit": 205, "robust": [205, 238], "mix": [205, 280, 289, 350, 413, 426, 427], "improp": 205, "dummyenv": 206, "another_oth": 206, "other_reward": 206, "create_copi": 207, "stuff": [207, 421], "newnam": 207, "r2g": 209, "reward_to_go": 209, "bernoulli_": 209, "9010": 209, "9404": [209, 358], "9701": [209, 358], "9900": [209, 358], "0000": [209, 220, 221, 255, 278, 310, 358], "clamp_min": 210, "clamp_max": 210, "clip_min": 210, "clip_max": 210, "episode_": 212, "reward1": 212, "reward2": 212, "episode_reward": [212, 426, 427], "keep_reward": 213, "keep_don": 213, "logical_or": 214, "in_key_inv": 216, "unstack": 216, "update_don": 217, "disjunct": 217, "recognis": 217, "target_return": 218, "default_valu": [219, 314], "expand_spec": 219, "single_default_valu": 219, "call_before_env_reset": 219, "unit": [219, 239, 253, 256, 257, 273, 274, 282, 283, 415], "scala": 219, "mykei": 219, "__unless": 219, "exists__": 219, "get_primers_from_modul": [219, 241, 258, 262, 406], "recurrent_st": [219, 258, 262, 314, 416], "pool": 220, "10th": 220, "0216": 220, "1149": 220, "1990": 220, "2749": 220, "3281": 220, "9290": 220, "3702": 220, "8978": 220, "time_kei": 221, "elaps": [221, 422], "monitor": [221, 418], "expend": 221, "_polici": 221, "time_reset": 221, "time_polici": 221, "time_step": [221, 261, 302], "0882": 221, "0002": 221, "5797e": 221, "6289e": 221, "7990e": 221, "0824e": 221, "0837e": 221, "6056e": 221, "2016e": 221, "1062e": 221, "7009e": 221, "from_int": 222, "shape_toler": 222, "ri": 222, "pretrainedtokenizerbas": 223, "additional_token": 223, "skip_special_token": 223, "add_special_token": 223, "bert": 223, "uncas": 223, "traj_count": 224, "traj": 224, "countingenv": 224, "mocking_class": 224, "make_env_c0": 224, "make_env_c1": 224, "set_contain": 225, "reset_par": 225, "smoothli": [226, 238], "add_1": 226, "cache_spec": 226, "set_missing_toler": 226, "inv_fn": 227, "unari": 227, "durin": 227, "ommit": 227, "observation_trsf": 227, "xbc": 227, "x7f": 227, "x859": 227, "x81": 227, "x9a": 227, "xbd": 227, "xb8t8": 227, "test_input_spec": 227, "test_output_spec": 227, "danger": 228, "vc1": 229, "vc1_vec": 229, "untrain": 229, "make_noload_model": 229, "vip": [230, 231, 429], "implicit": [231, 325, 333, 430], "jason": 231, "ma": 231, "shagun": 231, "sodhani": 231, "dinesh": 231, "jayaraman": 231, "osbert": 231, "bastani": 231, "ami": 231, "zhang": 231, "vip_vec": 231, "final_nam": 232, "sb3": 232, "terminal_obs_read": 232, "truli": [232, 432], "shared_td": 233, "decai": [233, 237, 255, 341, 388, 413, 414, 416, 433], "9999": 233, "0001": [233, 253], "to_observation_norm": 233, "frozen_copi": 233, "race": 233, "underflow": [233, 388], "build_td_for_shared_vecnorm": 233, "memmori": 233, "queue": [233, 430, 432], "td_share": 233, "v": [233, 256, 257, 260, 261, 295, 325, 333, 340, 413, 414], "unfreez": 233, "observationnorm": [233, 404, 413, 414, 415, 416, 432], "train_env": 233, "eval_env": 233, "state_dim": [234, 244, 249, 277, 282, 283, 298], "action_dim": [234, 244, 245, 247, 249, 277, 298, 413, 425], "gsde": [234, 338, 404], "gsdemodul": 234, "rb_transform": 235, "resist": 235, "insensit": 235, "sensit": [235, 414, 416], "_orig": 235, "95": [235, 265, 345, 415, 416], "window": [235, 302, 426, 430, 432], "module_nam": [236, 335], "from_vers": 236, "to_vers": 236, "class_method": 236, "vs": [236, 258, 262], "import_modul": 236, "get_class_that_defined_method": 236, "module_set": 236, "setters_dict": 236, "setter": 236, "setter_dict": 236, "po": 237, "sigma_init": [237, 426], "sigma_end": [237, 426], "annealing_num_step": [237, 255, 279, 413, 414, 416, 417, 419, 423, 426], "sigma": [237, 256, 257, 259, 260, 261, 279, 287, 288, 415, 426], "omiss": [237, 255, 279], "momentum": 238, "max_r": 238, "max_d": 238, "warmup_step": 238, "batchrenorm": 238, "1702": 238, "03275": 238, "corenet": 238, "enhanc": 238, "warmup": 238, "phase": [238, 240, 427, 430], "outlier": 238, "period": 238, "varianc": [238, 239, 240, 259, 287, 288, 409, 413, 415, 427], "warm": 238, "renorm": 238, "entropi": [239, 275, 317, 318, 319, 320, 325, 326, 333, 334, 336, 337, 338, 340, 342, 343, 427], "botev": 239, "2013": 239, "cem": 239, "plan": [239, 264, 265], "k": [239, 241, 256, 257, 260, 261], "maximis": [239, 245, 247, 265, 414, 415, 427], "modelbasedenv": [239, 265], "planning_horizon": [239, 265], "optim_step": [239, 265, 417, 423], "mpc": [239, 264, 265], "num_candid": [239, 265], "candid": [239, 265], "top_k": [239, 265], "modelbasedenvbas": [239, 264, 265, 406], "safemodul": [239, 264, 295, 297, 307, 317, 318, 320, 325, 326, 333, 337, 338, 339, 340, 342, 343, 395, 396, 400, 406, 432], "hausknecht": 240, "wagen": 240, "reus": [240, 245, 379], "consistentdropoutmodul": [240, 408], "capit": 240, "themselv": [240, 414], "conceptu": 240, "devianc": 240, "set_exploration_typ": [240, 335, 385, 406, 408, 415, 416, 417, 419, 426, 432], "_main_async_collector": 240, "asyncdatacollector": [240, 406], "ditto": 240, "consistentdropout": 241, "input_shap": 241, "batcht": 241, "make_tensordict_prim": [241, 258, 262, 416], "input_dtyp": 241, "get_default_dtyp": [241, 388], "mask_6127171760": 241, "env0": [241, 433], "num_cel": [242, 243, 245, 246, 247, 248, 253, 254, 258, 262, 263, 268, 269, 295, 314, 414, 415, 416, 417, 419, 420, 423, 426, 427, 432], "elu": [242, 243, 245, 246, 247, 248, 253, 254, 268, 414, 432], "activation_kwarg": [242, 243, 263], "norm_class": [242, 243, 245, 246, 263], "norm_kwarg": [242, 243, 263], "bias_last_lay": [242, 243, 245, 246, 247, 248, 254, 263], "aggregator_class": [242, 243, 245, 246, 414, 416, 432], "squashdim": [242, 243, 245, 254, 268, 432], "aggregator_kwarg": [242, 243, 245, 246, 414, 416], "squeeze_output": [242, 243, 245, 246, 414, 416], "convolut": [242, 243, 245, 246, 268, 284, 417, 419], "cell": [242, 243, 256, 257, 258, 260, 261, 262, 263, 268, 269, 415, 417, 418, 419, 420, 421, 422, 423], "kernel": [242, 243, 268], "cnet": [242, 243], "conv3d": 242, "rectangular": [242, 243], "lazyconv2d": [243, 245, 246, 254, 268], "default_atari_dqn": [243, 417], "semin": 243, "transformer_config": [244, 277, 298], "decisiontransform": [244, 277], "dtconfig": [244, 249, 277], "2202": [244, 249, 336], "05607": [244, 249, 336], "return_to_go": [244, 249, 277, 298], "conv_net_kwarg": [245, 246], "mlp_net_kwarg": [245, 246, 247], "use_avg_pool": [245, 246], "WITH": [245, 246, 247, 248, 279, 341], "1509": [245, 246, 247, 248, 265, 279, 322, 332, 341], "02971": [245, 246, 247, 248, 279, 341], "convnet": [245, 246, 254, 268, 416, 417, 419, 432], "ndims_in": 245, "avgpool": [245, 246], "lazylinear": [245, 246, 247, 248, 254, 263, 408, 415, 419, 428, 429], "2304": 245, "adaptiveavgpool2d": [246, 414, 416], "output_s": [246, 414, 416], "squeeze2dlay": 246, "400": [247, 248, 427], "mlp_net_kwargs_net1": 248, "mlp_net_kwargs_net2": 248, "mlp1": 248, "mlp2": 248, "desdescrib": 249, "n_embd": 249, "n_layer": [249, 256, 260], "n_head": 249, "n_inner": 249, "n_posit": 249, "resid_pdrop": 249, "attn_pdrop": 249, "gpt2config": 249, "atol": [250, 286], "rtol": [250, 286], "batch_shap": [250, 275, 286], "event_shap": [250, 286], "absolut": [250, 286, 413], "_instanc": 250, "densiti": [250, 266, 267, 275, 288], "mass": [250, 266, 267, 275, 288, 428], "rsampl": [250, 267, 275, 307], "sample_shap": [250, 266, 267, 275], "softmax": [251, 267, 275, 299, 300], "var_num": [252, 281, 299, 300, 305], "action_value_kei": [252, 281, 299, 300, 304, 305, 320, 335, 350], "action_mask_kei": [252, 255, 281, 299, 300, 304, 305], "1707": [252, 300, 327, 337], "06887": [252, 300, 327], "mult": [252, 269, 281, 299, 300, 304, 305], "tensordict_modul": [252, 256, 257, 260, 261, 281, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 320, 321, 325, 326, 333, 337, 338, 339, 340, 342, 343, 408], "nbin": [252, 299, 408], "customdistributionalqv": 252, "log_softmax": [252, 299], "qvalue_actor": [252, 281, 299, 304, 408], "to_modul": [252, 306, 309, 413, 432], "std_bia": 253, "std_min_val": 253, "belief": [253, 273, 282, 283], "1912": [253, 328, 329, 330], "01603": [253, 328, 329, 330], "softplu": [253, 313, 315, 316], "out_features_valu": 254, "cnn_kwarg": [254, 414], "mlp_kwarg": [254, 414], "duel": 254, "cnn": [254, 268, 414, 417, 419, 432], "06581": 254, "512": 254, "greedi": [255, 281, 300, 305, 414, 416, 417, 419], "eps_init": [255, 279, 414, 416, 417, 419, 423], "eps_end": [255, 279, 414], "explorative_polici": [255, 279], "9055": 255, "9277": 255, "6295": 255, "2532": 255, "grad_fn": [255, 294, 307], "addbackward0": 255, "batch_first": [256, 258, 260, 262, 416], "bidirect": [256, 260, 416], "cudnn": [256, 257, 258, 260, 261, 262, 416, 417], "rnn": [256, 257, 258, 260, 261, 262, 293, 326, 340, 416, 417, 419], "device_count": [256, 257, 260, 261, 433], "n_in": [256, 257, 260, 261], "n_out": [256, 257, 260, 261], "h0": [256, 257, 260, 261], "h1": [256, 257, 260, 261], "vectoris": [256, 257, 260, 261], "call_gru": [256, 257], "h_out": [256, 257, 260, 261], "batched_cal": [256, 257, 260, 261], "gate": [256, 257, 260], "r_t": 256, "w_": [256, 257, 260, 261], "ir": [256, 257], "x_t": [256, 260], "b_": [256, 257, 260, 261], "hr": [256, 257, 260], "h_": [256, 257, 260], "z_t": 256, "iz": [256, 257], "hz": [256, 257], "n_t": 256, "odot": [256, 257, 260, 261], "hn": [256, 257, 260], "h_t": [256, 260], "sigmoid": [256, 257, 260, 261], "hadamard": [256, 257, 260, 261], "multilay": [256, 260], "_t": [256, 260, 427, 428], "ge": [256, 260], "bernoulli": [256, 260], "b_ih": [256, 257, 260, 261, 262], "b_hh": [256, 257, 260, 261, 262], "h_0": [256, 260, 261], "pack_padded_sequ": [256, 260], "pack_sequ": [256, 260], "num": [256, 260, 423], "_layer": [256, 260], "_size": [256, 257, 260, 261], "h_n": [256, 260], "packedsequ": [256, 260], "weight_ih_l": [256, 260], "learnabl": [256, 257, 260, 261], "w_ir": 256, "w_iz": 256, "w_in": 256, "num_direct": [256, 260], "weight_hh_l": [256, 260], "w_hr": 256, "w_hz": 256, "w_hn": 256, "bias_ih_l": [256, 260], "b_ir": 256, "b_iz": 256, "b_in": 256, "bias_hh_l": [256, 260], "b_hr": 256, "b_hz": 256, "b_hn": 256, "mathcal": [256, 257, 260, 261], "sqrt": [256, 257, 260, 261, 279], "frac": [256, 257, 260, 261, 415], "seq_len": [256, 260], "subtli": 256, "matrix": [256, 260, 271, 272], "hx": [256, 257, 260, 261], "lstmcell": [257, 262, 417], "gru_cel": 257, "weight_ih": [257, 261], "weight_hh": [257, 261], "bias_ih": [257, 261], "bias_hh": [257, 261], "rocm": [257, 261], "embedd": [258, 262], "grucel": [258, 306], "python_bas": [258, 262], "custom_kei": [258, 262], "hasn": [258, 262], "set_recurrent_mod": [258, 262, 416], "recurrent_mod": [258, 262, 293], "rs": [258, 413], "gru_module_train": 258, "policy_train": [258, 262], "traj_td": [258, 262], "make_cudnn_bas": [258, 262], "make_python_bas": [258, 262, 417], "supplementari": [258, 262, 415, 433], "That": [258, 262, 415, 426], "dealt": [258, 262], "poorli": [258, 262], "meth": [258, 262, 335, 428], "data_collector": [258, 262, 414], "policy_infer": [258, 262], "td_inf": [258, 262], "upscal": [259, 287, 288], "tanh_loc": [259, 287, 288], "event_dim": [259, 286, 287], "poor": [259, 287, 288], "explos": [259, 287, 288], "proj_siz": 260, "c0": [260, 261], "c1": [260, 261], "call_lstm": [260, 261], "c_out": [260, 261], "i_t": 260, "ii": [260, 261], "hi": [260, 261], "f_t": 260, "hf": [260, 261], "g_t": 260, "ig": [260, 261], "hg": [260, 261], "o_t": 260, "ho": [260, 261], "c_t": 260, "c_": 260, "1402": 260, "1128": 260, "c_0": [260, 261], "proj": 260, "c_n": 260, "w_ii": 260, "w_if": 260, "w_ig": 260, "w_io": 260, "w_hi": 260, "w_hf": 260, "w_hg": 260, "w_ho": 260, "b_ii": 260, "b_if": 260, "b_ig": 260, "b_io": 260, "b_hi": 260, "b_hf": 260, "b_hg": 260, "b_ho": 260, "weight_hr_l": 260, "_revers": 260, "analog": [260, 419], "cn": 260, "lstm_cell": 261, "h_1": 261, "c_1": 261, "cx": 261, "recurrent_state_h": 262, "recurrent_state_c": 262, "triplet": [262, 304, 305], "lstm_modul": 262, "rs_h": 262, "rs_c": 262, "hidden0": [262, 417], "hidden1": [262, 417], "single_bias_last_lay": 263, "layer_class": 263, "layer_kwarg": 263, "perceptron": [263, 419], "noisylinear": [263, 271, 406, 414], "noisylazylinear": [263, 406], "mpcplanner": 264, "tensordict_out": [264, 433], "mppi": 265, "covari": 265, "william": [265, 339], "aldrich": 265, "theodor": 265, "01149": 265, "hansen": 265, "wang": 265, "su": 265, "04955": 265, "valueoper": [265, 295, 296, 297, 317, 318, 319, 320, 321, 326, 333, 334, 337, 338, 339, 340, 342, 343, 400, 408, 413, 415, 420], "tdlambdaestim": [265, 406, 413], "value_net": [265, 322, 324, 339, 352, 353, 354, 355, 415, 417, 419, 420, 423], "adv": 265, "lmbda": [265, 345, 352, 355, 357, 363, 364, 365, 368, 369, 409, 413, 415, 427], "value_network": [265, 321, 322, 324, 325, 327, 333, 340, 352, 353, 354, 355, 409, 413, 415, 417, 420, 423, 426], "temperatur": [265, 318, 325, 333], "neg_inf": [266, 267], "inf": [266, 267], "api_doc": [266, 267], "tf_agent": [266, 267], "unnorm": [266, 267, 275], "sparse_mask": [266, 267], "dens": [266, 267], "0831": [266, 267], "1203": [266, 267], "0928": [266, 267], "1972": [266, 267], "grad_method": [267, 275], "reparamgradientstrategi": [267, 275], "passthrough": [267, 275], "relaxedonehot": [267, 275], "sample_non_valid": 267, "zeros_lik": [267, 428], "share_param": [268, 269, 270, 426, 427], "use_td_param": [268, 269, 270], "get_stateful_net": [268, 269, 270, 335, 408, 409], "from_stateful_net": [268, 269, 270, 335, 409], "homogen": [268, 269, 426, 427], "tensordictparam": [268, 269, 307], "_empty_net": [268, 269], "roughli": [268, 269, 432], "agent_network": [268, 269], "modulelist": [268, 269], "2592": 268, "decentr": 268, "n_agent_input": [269, 270, 426, 427], "n_agent_output": [269, 270, 426, 427], "toech": 269, "centalis": 269, "shown": [269, 408, 417, 425, 426, 427, 430], "agent_dim": 270, "vmap_random": [270, 335, 409], "stateful_net": [270, 335], "Such": [270, 335], "multiagentmlp": [270, 426, 427], "snet": 270, "hasattr": [270, 413], "kaiming_normal_": 270, "std_init": [271, 272], "initialize_paramet": 271, "isol": [271, 335, 417], "1706": [272, 289], "10295v3": 272, "induc": [272, 307], "aid": 272, "1803": [273, 274, 280], "10122": [273, 274], "rnn_hidden": 273, "latent": 274, "ordin": [276, 406], "parametris": [276, 278], "inres": 277, "mu": [277, 279, 415], "impos": [278, 408], "proxim": [278, 337, 415, 427], "atom": 278, "tang": 278, "agraw": 278, "2020": 278, "1901": 278, "10500": 278, "discretis": 278, "num_atom": 278, "num_sampl": 278, "middl": 278, "adam": [278, 287, 413, 414, 415, 416, 417, 420, 423, 426, 427, 428], "lr": [278, 413, 414, 415, 416, 423, 426, 427, 428], "optimis": [278, 426, 427], "minimis": 278, "penalis": 278, "0308": 278, "1586": 278, "4727": 278, "2260": 278, "1120": 278, "histogram": 278, "return_typ": 278, "hist": [278, 430], "158": 278, "478": 278, "228": 278, "112": 278, "bin_edg": 278, "8000": 278, "6000": 278, "4000": 278, "ornstein": [279, 413, 417], "uhlenbeck": [279, 413, 417], "ou": [279, 413], "correl": 279, "noise_t": 279, "noise_": 279, "theta": [279, 415, 428], "sigma_t": 279, "sigma_": 279, "anneal": [279, 414, 419, 426], "ou_prev_nois": 279, "ou_step": 279, "x0": 279, "sigma_min": 279, "n_steps_ann": 279, "is_init_kei": 279, "_ou_prev_nois": 279, "_ou_step": 279, "state_shap": [280, 350], "mixing_embed_dim": [280, 350], "qmix": [280, 426, 427], "mixer": [280, 289, 350], "monoton": 280, "hyper": 280, "11485": 280, "qmixerloss": [280, 289], "qmix_vdn": [280, 289], "vdn": [280, 289], "hidden_dim": [282, 283], "scale_lb": [282, 283], "posterior": [282, 329], "rssm": [282, 283, 329], "1811": [282, 283], "04551": [282, 283], "obs_embed": 282, "rnn_hidden_dim": 283, "dream": 283, "safe_tanh": 287, "tanhtransform": 287, "overflow": [287, 294, 299, 300, 303, 304, 305, 306, 307], "get_mod": [287, 307], "decomposit": 289, "05296": 289, "hide": [290, 415, 426, 427], "satisfi": [290, 408], "vmap_dim": 290, "lam": 290, "sample_in": 290, "sample_in_td": 290, "vm": 290, "translat": [294, 303], "character": [294, 299, 303, 304, 306, 430], "td_modul": [294, 295, 296, 297, 303, 306, 307, 309, 311, 419, 432], "3635": 294, "0340": 294, "1476": 294, "3911": 294, "1664": 294, "5455": 294, "2247": 294, "4583": 294, "2916": 294, "2160": 294, "5337": 294, "5193": 294, "addmmbackward0": 294, "actorvalueoper": [295, 319, 334, 337, 408, 419], "get_policy_oper": [295, 296, 297, 319, 334, 337, 408], "standalon": [295, 296, 297, 417, 419], "tdmodul": [295, 296, 297, 400], "get_critic_oper": 295, "common_oper": [295, 297], "policy_oper": [295, 296, 297], "value_oper": [295, 296, 297], "module_hidden": [295, 297], "td_module_hidden": [295, 297], "module_act": [295, 297], "td_module_act": [295, 296, 297], "module_valu": [295, 296, 297], "td_module_valu": [295, 296, 297], "state_action_valu": [295, 311, 318, 320, 325, 333, 340, 351, 400, 408, 413, 426, 432], "td_clone": [295, 296, 297], "tensordictmodulewrapp": [295, 395, 396, 400], "get_policy_head": [295, 296, 297], "safesequenti": [295, 296, 297, 350], "head": [295, 297, 307, 314, 319, 334, 337, 406], "get_value_head": [295, 296, 297], "get_value_oper": [295, 296, 297, 319, 334, 337], "action_modul": 296, "actorcriticoper": [297, 408, 419], "actorcriticwrapp": [297, 408, 413], "inferec": 298, "set_tensor_kei": 298, "dt_inference_wrapp": 298, "baz": 298, "inference_context": 298, "obs_dim": 298, "tanhdelta": [298, 406, 413, 426], "dtactor": 298, "actor_modul": [298, 432], "dist_class": 298, "dist_kwarg": 298, "distribution_kwarg": [298, 303, 307, 415, 426, 427], "inference_actor": 298, "sequence_length": 298, "mask_context": 298, "out_act": 298, "qvaluemodul": [299, 304, 350, 416, 417, 419, 423], "distributionaldqnnet": 299, "make_log_softmax": 299, "my_action_valu": [300, 305], "chanc": 300, "lmheadmodel": 301, "actor_head": [301, 319, 334, 337], "base_model": 301, "lm_head": 301, "lookahead": 302, "reshape_cat": 302, "actor_bas": 302, "obs_cat": 302, "obs_cat_reshap": 302, "action_orig": 302, "multistepenvwrapp": 302, "alter": [302, 335, 408], "ego": 302, "default_interaction_typ": [303, 307, 419], "interaction_typ": [303, 307], "datacollectorbas": [303, 307, 392, 395, 396, 400, 406], "set_interaction_typ": [303, 307], "compositedistribut": [303, 307, 317, 337, 409, 419], "distribution_map": [303, 307], "name_map": [303, 307], "cache_dist": [303, 307], "n_empirical_estim": [303, 307], "compound": [303, 419], "chose": 305, "functionalmodul": 306, "functionalmodulewithbuff": 306, "td_fmodul": 306, "td_function": 306, "td_state": 306, "params_repeat": 306, "td_vmap": [306, 309], "random_sampl": [306, 307], "suppli": 307, "paliat": 307, "get_median": 307, "get_mean": 307, "transfer": 307, "log_prob_kei": [307, 409], "sample_key_nam": 307, "_log_prob": 307, "composite_lp_aggreg": 307, "clampbackward0": 307, "clamp": [307, 310, 329, 390, 409, 426, 428], "anihil": 307, "probabilistictensordictsequenti": [308, 317, 319, 334, 337, 339, 395, 396, 409, 432], "partial_toler": [308, 309, 425], "AND": [308, 309, 320], "tensordictsequ": 309, "safeprobabilisticmodul": [309, 408], "spec1": 309, "net1": 309, "module1": 309, "td_module1": 309, "spec2": 309, "module2": 309, "td_module2": 309, "boundari": [310, 415, 417, 426, 427], "resolut": 310, "9944": 310, "9991": 310, "3020": 310, "2299": 310, "5418": 310, "2989": 310, "6849": 310, "3169": 310, "2690": 310, "9649": 310, "5686": 310, "8602": 310, "0315": 310, "8455": 310, "6027": 310, "4746": 310, "7843": 310, "7782": 310, "2111": 310, "5115": 310, "4687": 310, "5760": 310, "custommodul": 311, "imaginari": 312, "imagin": 312, "transition_model": 312, "get_reward_oper": 312, "get_transition_model_oper": 312, "min_val": [313, 316], "_bia": 313, "surject": 316, "expln": 316, "biased_softplu": [316, 406], "biased_softplus_": 316, "syntax": [316, 413], "add_custom_map": 316, "1602": 317, "01783v2": 317, "actor_network": [317, 318, 319, 320, 321, 323, 325, 326, 333, 334, 336, 337, 338, 339, 340, 342, 343, 409, 413, 415, 420, 426, 427], "critic_network": [317, 319, 334, 337, 339, 415, 427], "entropy_bonu": [317, 319, 334, 337, 415], "favour": [317, 319, 334, 337], "samples_mc_entropi": [317, 319, 334, 336, 337], "entropy_coef": [317, 319, 334, 337, 415, 427], "critic_coef": [317, 319, 334, 337, 415], "loss_critic_typ": [317, 319, 334, 337, 339, 415], "l1": [317, 319, 321, 322, 326, 334, 337, 338, 339, 342, 343, 346, 350, 408, 413], "l2": [317, 319, 321, 322, 323, 324, 326, 329, 330, 334, 337, 338, 339, 342, 343, 346, 350, 413, 426], "smooth_l1": [317, 318, 319, 320, 321, 322, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 346, 350, 415], "separate_loss": [317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343], "advantage_kei": [317, 319, 334, 337, 339, 352, 353, 354, 355], "value_target_kei": [317, 319, 334, 337, 339, 352, 353, 354, 355], "value_target": [317, 319, 334, 337, 339, 352, 353, 354, 355, 415, 427], "ddp": [317, 319, 334, 337, 339], "fsdp": [317, 319, 334, 337, 339], "divid": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 393, 413, 426, 427, 428], "clip_valu": [317, 319, 334, 337, 339], "loss_crit": [317, 337, 415, 427], "loss_entropi": [317, 337, 415, 427], "loss_object": [317, 337, 415, 427], "next_reward": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355], "next_don": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355], "next_termin": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355], "loss_obj": 317, "next_observ": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 425], "sacloss": [317, 332, 341, 406], "default_kei": [317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 336, 337, 338, 339, 340, 342, 343, 350, 356], "_acceptedkei": [317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 342, 343, 350, 356], "fraction": 317, "make_value_estim": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350, 409, 413, 414, 426, 427, 432], "value_typ": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 413], "valueestim": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 406, 409, 413, 426, 427], "hyperparam": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 413], "enum": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 413], "default_value_estim": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 413, 432], "default_value_kwarg": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 406, 413], "dqn_loss": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350], "td1": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 413], "conserv": [318, 324], "04779": [318, 324], "qvalue_network": [318, 320, 325, 326, 333, 338, 340, 342, 343], "unti": [318, 320, 333, 338, 340, 342, 343], "loss_funct": [318, 320, 321, 322, 323, 324, 325, 326, 333, 338, 340, 342, 343, 346, 350, 413, 426], "alpha_init": [318, 320, 326, 336, 338, 340], "min_alpha": [318, 320, 326, 336, 338, 340], "max_alpha": [318, 320, 326, 336, 338, 340], "fixed_alpha": [318, 320, 326, 336, 338, 340], "target_entropi": [318, 320, 326, 336, 338, 340], "prod": [318, 320, 336, 340], "delay_actor": [318, 321, 340, 342, 343], "delay_qvalu": [318, 326, 338, 340, 342, 343], "min_q_weight": 318, "max_q_backup": 318, "backup": 318, "deterministic_backup": 318, "num_random": 318, "with_lagrang": 318, "lagrang": 318, "lagrange_thresh": 318, "valueclass": [318, 320, 321, 326, 338, 340, 342, 343], "qvalu": [318, 320, 325, 326, 333, 338, 340, 342, 343], "loss_actor": [318, 320, 321, 325, 326, 333, 338, 339, 340, 342, 343, 386, 413, 426], "loss_actor_bc": 318, "loss_alpha": [318, 320, 326, 338, 340], "loss_cql": [318, 324], "loss_qvalu": [318, 320, 324, 325, 326, 333, 338, 340, 342, 343], "loss_alpha_prim": 318, "clip_epsilon": [319, 415, 427], "normalize_advantag": [319, 334, 337, 427], "normalize_advantage_exclude_dim": [319, 334, 337], "multiobject": [319, 334, 337], "value_kei": [319, 334, 337, 352, 353, 354, 355, 413], "somemodul": [319, 334, 337], "someactor": [319, 334, 337], "value_head": [319, 334, 337], "somevalu": [319, 334, 337], "loss_modul": [319, 332, 334, 335, 337, 341, 390, 399, 400, 409, 410, 413, 414, 415, 426, 427, 430], "IN": 320, "FOR": 320, "simplic": [320, 414, 415, 421, 429, 430, 432], "openreview": [320, 338], "pczqttstix": 320, "qvalue_loss": [320, 342], "actor_loss": [320, 342], "alpha_loss": 320, "num_qvalue_net": [320, 325, 326, 333, 338, 340, 342, 343], "maybe_init_target_entropi": 320, "fault_toler": 320, "target_entropy_buff": 320, "delay_valu": [321, 322, 324, 327, 339, 340, 350, 414, 416, 417, 423, 426], "loss_valu": [321, 325, 333, 339, 340, 413, 415, 426, 427], "pred_valu": [321, 324, 342, 343, 413], "pred_value_max": [321, 413], "target_valu": [321, 324, 338, 342, 343, 351, 409, 413], "target_value_max": [321, 413], "qvalueactor": [322, 324, 350, 414, 416], "double_dqn": 322, "06461": [322, 332], "mult_one_hot": [322, 325, 326, 350], "loss_val": [322, 324, 409, 413, 415, 416, 417, 420, 421, 423, 426, 427, 430], "01345": 323, "distanc": [324, 334, 346, 351, 352, 427], "dcql_loss": 324, "2110": [325, 333], "06169": [325, 333], "expectil": [325, 333], "tau": [325, 333, 341, 413, 414, 426], "antmaz": [325, 333], "sticht": [325, 333], "onehotcategor": [325, 326, 406], "target_entropy_weight": 326, "skip_done_st": [326, 340], "disctount": 327, "distributionalqvalueactor": [327, 408], "input_tensordict": [327, 413], "actor_model": 328, "value_model": [328, 330], "imagination_horizon": 328, "unrol": [328, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369], "discount_loss": [328, 330], "lambda_kl": 329, "lambda_reco": 329, "lambda_reward": 329, "reco_loss": 329, "reward_loss": 329, "free_nat": 329, "nat": 329, "delayed_clamp": 329, "global_averag": 329, "value_loss": 330, "fake_data": 330, "1606": 331, "03476": 331, "discriminator_network": 331, "use_grad_penalti": 331, "gp_lambda": 331, "discrimin": 331, "ddpgloss": [332, 341, 400, 406, 413, 420, 426, 432], "td3loss": [332, 341, 406], "value_network_update_interv": 332, "qvalueclass": 333, "loss_value_diff": 333, "diff": 333, "old_polici": 334, "new_polici": 334, "apart": [334, 427], "dtarg": 334, "samples_mc_kl": 334, "analyt": 334, "decrement": 334, "loss_": [335, 386, 409, 413, 420], "equip": [335, 416, 417, 419], "gh": 335, "_forward_value_estimator_kei": 335, "value_estim": [335, 352, 353, 354, 355, 356, 409, 413, 427], "myloss": 335, "action2": 335, "augment": [335, 421, 423, 430], "deterministic_sampling_mod": 335, "convert_to_funct": [335, 413], "expand_dim": 335, "create_target_param": [335, 413], "compare_against": [335, 413], "_param": 335, "resampl": 335, "_target_param": 335, "network_nam": 335, "blend": 335, "add_random_modul": [335, 409], "flavor": [337, 413, 426, 427, 432], "clipppoloss": [337, 406, 415, 427], "klpenppoloss": [337, 406], "06347": 337, "gae": [337, 406, 409, 413, 415, 427], "ppo_loss": 337, "tdlambda": [337, 345, 409, 413], "base_lay": 337, "randn_lik": 337, "samplelogprob": 337, "ay8zfzm0tdd": 338, "sub_sample_len": 338, "subsampl": [338, 381, 410], "action_log_prob_actor": 338, "state_action_value_actor": [338, 342, 343], "connectionist": 339, "1992": 339, "doi": 339, "1007": 339, "bf00992696": 339, "actor_net": [339, 413, 415], "1801": 340, "01290": 340, "applic": [340, 350, 418, 419, 428], "1812": 340, "05905": 340, "redqloss": [341, 406], "math": 341, "theta_t": [341, 428], "theta_": [341, 428], "polyak": 341, "minimalist": 342, "06860": 342, "policy_nois": [342, 343], "noise_clip": [342, 343], "td3_bc": 342, "bc_loss": 342, "lmbd": 342, "td0": [344, 413, 426], "strict_shap": 346, "view_a": 346, "qmixer": [350, 406], "local_valu": 350, "visibl": [350, 427], "acceptedkei": 350, "global_valu": 350, "penultim": 350, "local_value_network": 350, "mixer_network": 350, "value_modul": [350, 415, 432], "qnet": [350, 413], "next_val_kei": 351, "pred_next_v": 351, "mse": 351, "q_valu": 351, "n_steps_to_next": 351, "value_next_st": 351, "1506": [352, 357, 365], "02438": [352, 357, 365], "exponenti": [352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 388], "average_ga": [352, 415], "skip_exist": [352, 353, 354, 355], "get_default_devic": [352, 353, 354, 355, 356], "time_dim": [352, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369], "gradient_mod": 352, "value_error": [352, 353, 354, 355, 356], "target_param": [352, 353, 354, 355, 356, 413, 427], "98": [352, 353, 354, 355], "94": [352, 355], "unpack": [352, 353, 354, 355], "tensor_kei": [352, 353, 354, 355, 356], "next_valu": [352, 353, 354, 355, 356], "aka": [353, 414, 426], "average_reward": [353, 354, 355], "tdestim": [353, 354, 356], "infti": 354, "valuefunctionbas": 356, "old_stat": [357, 359, 361, 363, 365, 366, 368], "new_stat": [357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "rolling_gamma": [361, 362, 363, 364, 366, 367, 368, 369], "g1": [361, 362, 363, 364, 366, 367, 368, 369], "g2": [361, 362, 363, 364, 366, 367, 368, 369], "g3": [361, 362, 363, 364, 366, 367, 368, 369], "g4": [361, 362, 363, 364, 366, 367, 368, 369], "v3": [361, 362, 363, 364, 366, 367, 368, 369], "preproc": [370, 417, 426], "as_non_tensor": [370, 426], "render_method": 370, "pass_tensordict": 370, "syntact": 370, "sugar": 370, "out_file_bas": 371, "skip_reset": 371, "center_crop": 372, "make_grid": 372, "fp": [372, 377, 379], "log_video": 372, "csv": [372, 374, 376, 414, 422, 423], "wandb": [372, 376, 379, 422, 432], "tensorboard": [372, 376, 378, 422, 432], "log_dir": [372, 373, 374, 376, 378, 379, 414, 423], "cheetah_video": 372, "run_video": 372, "openxexperiencereplai": 372, "sec": [372, 428], "video_fp": [372, 374, 377], "cmu_stretch": 372, "run_video_0": 372, "pt": [374, 410], "cur_dir": 374, "csv_log": 374, "add_video": 374, "video_": 374, "experiment_nam": [375, 376], "uuid": [375, 414, 433], "logger_typ": 376, "logger_nam": 376, "mlflow": [376, 377], "wandb_kwarg": 376, "mlflow_kwarg": 376, "tracking_uri": 377, "uri": 377, "datastor": 377, "tb_log": 378, "tensoarboard": 378, "td_log": 378, "save_dir": 379, "resum": 379, "uncategor": 379, "my_funct": 380, "sub_traj_len": 381, "min_sub_traj_len": 381, "register_op": [381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 410, 414], "process_optim_batch": [381, 387, 388, 410], "td_out": [381, 389], "_process_optim_batch_hook": [381, 410], "batch_subsampl": 381, "clear_cuda": 382, "pre_optim_step": [382, 410], "log_pbar": [383, 384, 385, 388, 410, 414], "progress": [383, 384, 385, 390, 410, 414, 416, 433], "count_fram": 383, "pre_steps_log": [383, 384, 410], "count_frames_log": 383, "lognam": 384, "r_train": 384, "log_reward": [384, 414], "record_interv": [385, 413, 414], "record_fram": [385, 393, 413, 414], "policy_explor": [385, 400, 413, 414, 417, 419, 423], "log_kei": [385, 414], "underestim": 385, "r_evalu": [385, 413], "loss_compon": 386, "appl": 386, "optimizer_hook": 386, "flatten_tensordict": [387, 414], "max_dim": 387, "rb_trainer": 387, "batch_process": [387, 388, 389, 410], "post_loss": [387, 410], "999": [388, 414], "jitter": 388, "finfo": 388, "default_dtyp": 388, "reward_norm": 388, "update_reward_stat": 388, "normalize_reward": 388, "make_train": [389, 406], "_process_batch_hook": [389, 410], "select_kei": [389, 410], "versatil": [390, 418], "optim_steps_per_batch": [390, 410, 414], "clip_grad_norm": 390, "clip_norm": 390, "progress_bar": 390, "save_trainer_interv": 390, "log_interv": [390, 414], "save_trainer_fil": [390, 410], "load_from_fil": [390, 410], "update_weights_interv": [392, 414], "update_weight": 392, "post_step": [392, 410, 414], "cfg": [393, 394, 395, 396, 397, 398, 399, 400, 401, 404], "dictconfig": [393, 394, 395, 396, 398, 399, 400, 401, 404], "unknowingli": 393, "annealing_fram": [393, 413], "init_env_step": [393, 394, 413], "proof_environ": [394, 413], "sta": 394, "ot": 394, "actor_model_explor": [395, 396, 413], "make_env_kwarg": [395, 396], "targetnetupdat": [397, 399, 400], "replayargsconfig": 398, "target_net_updat": [400, 413, 414], "constitu": 400, "egreedywrapp": 400, "env_proof": 400, "obs_spec": 400, "net_valu": 400, "dir": [400, 410, 414], "gettempdir": 400, "argpars": [401, 404], "namespac": [401, 404], "parser": [401, 404], "transformed_env_constructor": [401, 406], "num_env_per_collector": [402, 403], "video_tag": 404, "norm_obs_onli": 404, "use_env_cr": 404, "custom_env_mak": 404, "custom_env": 404, "return_transformed_env": 404, "action_dim_gsd": 404, "state_dim_gsd": 404, "obs_norm_state_dict": 404, "maker": [404, 414], "distributedsyncdatacollector": 406, "submitit_delayed_launch": 406, "raycollector": 406, "rational": 406, "footnot": 406, "binarydiscretetensorspec": 406, "boundedtensorspec": 406, "discretetensorspec": 406, "lazystackedcompositespec": 406, "lazystackedtensorspec": 406, "multidiscretetensorspec": 406, "multionehotdiscretetensorspec": 406, "nontensorspec": 406, "onehotdiscretetensorspec": 406, "unboundedcontinuoustensorspec": 406, "unboundeddiscretetensorspec": 406, "prompttensordicttoken": 406, "rolloutfrommodel": 406, "tokenizeddatasetload": 406, "create_infinite_iter": 406, "constantklcontrol": 406, "adaptiveklcontrol": 406, "consolidate_spec": 406, "check_no_exclusive_kei": 406, "contains_lazy_spec": 406, "nested2t": 406, "h5combin": 406, "h5split": 406, "envmetadata": 406, "chessenv": 406, "tictactoeenv": 406, "llmhashingenv": 406, "check_marl_group": 406, "get_available_librari": 406, "terminated_or_trunc": 406, "dreamerdecod": 406, "braxwrapp": 406, "dmcontrolwrapp": 406, "jumanjiwrapp": 406, "meltingpotenv": 406, "meltingpotwrapp": 406, "mogymenv": 406, "multithreadedenvwrapp": 406, "openmlenv": 406, "openspielwrapp": 406, "openspielenv": 406, "pettingzooenv": [406, 426], "robohiveenv": 406, "smacv2env": 406, "smacv2wrapp": 406, "unitymlagentsenv": 406, "unitymlagentswrapp": 406, "vmaswrapp": 406, "register_gym_spec_convers": 406, "qvaluehook": 406, "distributionalqvaluehook": 406, "reset_nois": 406, "cemplann": 406, "mpcplannerbas": 406, "mppiplann": 406, "independentnorm": 406, "truncatednorm": 406, "maskedonehotcategor": 406, "onehotordin": 406, "inv_softplu": 406, "vmapmodul": 406, "distributionaldqnloss": [406, 414], "discretesacloss": 406, "crossqloss": 406, "iqlloss": 406, "discreteiqlloss": 406, "cqlloss": 406, "discretecqlloss": 406, "gailloss": 406, "dtloss": 406, "onlinedtloss": 406, "td3bcloss": 406, "ppoloss": 406, "a2closs": 406, "reinforceloss": 406, "dreameractorloss": 406, "dreamermodelloss": 406, "dreamervalueloss": 406, "td0estim": [406, 413], "td1estim": [406, 413], "td0_return_estim": 406, "td0_advantage_estim": 406, "td1_return_estim": 406, "vec_td1_return_estim": 406, "td1_advantage_estim": 406, "vec_td1_advantage_estim": 406, "td_lambda_return_estim": 406, "vec_td_lambda_return_estim": 406, "td_lambda_advantage_estim": 406, "vec_td_lambda_advantage_estim": 406, "generalized_advantage_estim": 406, "vec_generalized_advantage_estim": 406, "reward2go": 406, "hardupd": [406, 413, 420], "softupd": [406, 413, 414, 416, 417, 420, 423, 426], "distance_loss": [406, 413], "group_optim": 406, "hold_out_net": 406, "hold_out_param": [406, 413], "batchsubsampl": [406, 410], "clearcudacach": 406, "countframeslog": 406, "logscalar": [406, 410, 414], "optimizerhook": [406, 414], "logvalidationreward": [406, 410, 413, 414], "replaybuffertrain": [406, 410, 414], "rewardnorm": 406, "selectkei": [406, 410], "trainerhookbas": [406, 410, 414], "updateweight": [406, 410, 414], "make_collector_offpolici": 406, "make_collector_onpolici": 406, "make_dqn_loss": 406, "make_replay_buff": [406, 413], "make_target_updat": 406, "parallel_env_constructor": [406, 413], "sync_async_collector": 406, "sync_sync_collector": 406, "correct_for_frame_skip": 406, "get_stats_random_rollout": 406, "mlflowlogg": 406, "get_logg": 406, "generate_exp_nam": 406, "journei": 407, "textbook": 407, "highlight": [407, 426], "ever": [407, 427], "bump": 407, "benefit": [407, 418, 426, 427, 430], "pr": 407, "ground": [408, 413, 428], "recycl": [408, 430], "noisier": 408, "Their": [408, 426, 427], "sd": [408, 433], "prob_modul": 408, "uncertainti": 408, "soften": 408, "backbon": [408, 416, 419, 425, 432], "make_actor": 408, "make_valu": 408, "shared_param": 408, "make_common": 408, "reusabl": [409, 413, 430], "swappabl": [409, 413], "characterist": [409, 413, 428], "trainabl": [409, 413, 420, 429], "smth": [409, 413], "metric": [409, 413], "plenti": [409, 417], "amort": [409, 414, 415], "told": [409, 415], "pseudo": [409, 421, 428], "buri": 409, "str_valu": 409, "nutshel": [409, 413], "barto": [409, 426, 427], "chapter": [409, 422], "value_net_loss": 409, "pow": [409, 413], "room": 409, "signifi": [409, 426, 427], "underperform": 409, "thin": 409, "intric": [409, 419], "set_composite_lp_aggreg": [409, 427], "action_td": 409, "action0": 409, "f0": 409, "action1": 409, "f1": 409, "f2": 409, "legitim": [409, 433], "f3": 409, "action0_log_prob": 409, "action1_log_prob": 409, "inferior": 409, "multivari": 409, "dirichlet": 409, "contrari": 409, "prev_log_prob": 409, "new_log_prob": 409, "log_weight": 409, "appreci": [409, 418], "multihead": 409, "believ": 410, "scheme": [410, 433], "substanti": 410, "_pre_steps_log_hook": 410, "_pre_optim_hook": 410, "sub_batch": 410, "_post_loss_hook": 410, "_post_optim_hook": 410, "post_optim": [410, 414], "_post_optim_log": 410, "post_optim_log": 410, "_post_steps_hook": 410, "_post_steps_log_hook": 410, "post_steps_log": 410, "reserv": 410, "logginghook": 410, "logging_hook": 410, "save_dict": 410, "some_valu": 410, "torchsnapshot": 410, "ckpt_backend": 410, "filepath": 410, "save_train": 410, "000": [412, 431], "galleri": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "mem": [412, 431], "mb": [412, 431], "coding_ddpg": [412, 413, 431], "coding_dqn": [412, 414, 431], "coding_ppo": [412, 415, 431], "dqn_with_rnn": [412, 416, 431], "multi_task": [412, 425, 431], "multiagent_competitive_ddpg": [412, 426, 431], "multiagent_ppo": [412, 427, 431], "pretrained_model": [412, 429, 431], "rb_tutori": [412, 430, 431], "torchrl_demo": [412, 431, 432], "torchrl_env": [412, 431, 433], "author": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 433], "vincent": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 430, 433], "moen": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 430, 433], "assembl": 413, "focus": [413, 420], "maxim": [413, 420, 428], "transpar": [413, 416], "bash": 413, "is_fork": [413, 414, 415, 416, 426, 427, 429], "get_start_method": [413, 414, 415, 416, 426, 427, 429], "collector_devic": 413, "loss_dict": 413, "modal": 413, "oblivi": [413, 415, 430], "elementari": 413, "didact": [413, 417], "dilut": 413, "pessimist": [413, 414, 415], "target_actor_network_param": 413, "actor_in_kei": 413, "actor_crit": 413, "compromis": 413, "hp": 413, "_value_estim": 413, "elif": [413, 414], "unknown": 413, "_loss_actor": 413, "td_copi": 413, "actor_network_param": [413, 426], "value_network_param": [413, 426], "_loss_valu": 413, "pred_val": 413, "target_value_network_param": 413, "glue": 413, "_forward": 413, "remaind": 413, "env_librari": 413, "env_task": 413, "env_arg": [413, 414], "friendli": 413, "torchr": 413, "rescal": 413, "presum": 413, "make_transformed_env": 413, "reward_sc": 413, "marker": 413, "env_per_collector": 413, "transform_state_dict": 413, "make_t_env": 413, "cheat": 413, "10m": 413, "cautiou": 413, "magnitud": [413, 426], "thousand": [413, 416], "get_env_stat": 413, "proof_env": 413, "5000": [413, 417, 423], "recal": [413, 415, 430], "ddpgmlpactor": 413, "ddpgmlpqnet": 413, "materi": 413, "ornsteinuhlenbeckprocessmodul": [413, 419], "make_ddpg_actor": 413, "q_net": 413, "tight": 413, "decoupl": [413, 420, 432], "10_000": [413, 415], "traj_len": [413, 416], "make_record": 413, "recorder_obj": 413, "pick": [413, 414, 419], "buffer_s": [413, 414], "random_crop_len": 413, "prb": 413, "buffer_scratch_dir": [413, 414, 416, 421, 429], "25": 413, "dataflow": 413, "ceil_div": 413, "utd": [413, 416], "update_to_data": 413, "realiz": 413, "_must_": 413, "001": [413, 428], "outdat": 413, "trick": [413, 414], "despit": 413, "optimizer_actor": 413, "weight_decai": [413, 414], "optimizer_valu": 413, "total_collection_step": 413, "rewards_ev": 413, "collected_fram": 413, "pbar": [413, 415, 416, 426, 427, 428], "numel": [413, 415, 416, 417, 423, 426, 429, 430], "current_fram": [413, 426], "sampled_tensordict": 413, "gn1": 413, "clip_grad_norm_": [413, 415, 426, 427, 428], "gn2": 413, "gn": [413, 428], "td_record": 413, "rn": 413, "set_descript": [413, 415, 416, 426, 427, 428], "2f": 413, "mention": [413, 416, 430, 433], "matplotlib": [413, 415, 416, 417, 426, 427, 428, 430, 433], "pyplot": [413, 415, 416, 417, 426, 427, 428, 430, 433], "plt": [413, 415, 416, 417, 426, 427, 428, 430, 433], "zip": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "legend": [413, 426], "xlabel": [413, 416, 427, 428], "ylabel": [413, 427], "tight_layout": 413, "takeawai": [413, 414, 417], "distpatch": 413, "jupyt": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "ipynb": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433], "sphinx": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433], "road": 414, "aspect": [414, 420], "highest": [414, 419], "prerequisit": [414, 416], "lookup": 414, "cart": 414, "pole": 414, "un": 414, "actuat": 414, "frictionless": 414, "duelingcnndqnet": 414, "egreedymodul": [414, 416, 417, 419, 423], "is_notebook": 414, "shell": 414, "get_ipython": 414, "__class__": 414, "zmqinteractiveshel": 414, "qtconsol": 414, "terminalinteractiveshel": 414, "ipython": [414, 427, 428], "nameerror": [414, 426], "umbrella": 414, "misplac": 414, "misus": 414, "orchestr": [414, 420, 422], "five": 414, "64x64": 414, "motion": [414, 428], "obs_norm_sd": 414, "mp_context": 414, "simpler": [414, 418], "get_norm_stat": 414, "test_env": 414, "mathbb": 414, "rightarrow": 414, "make_model": 414, "dummy_env": 414, "init_bia": 414, "exploration_modul": [414, 416, 417, 419, 423], "eps_greedy_v": 414, "eps_greedy_val_env": 414, "actor_explor": 414, "get_replay_buff": 414, "n_optim": [414, 420, 421], "parametriz": 414, "get_collector": 414, "cl": 414, "bunch": 414, "ubiquit": [414, 418], "get_loss_modul": 414, "target_updat": [414, 426], "995": 414, "hopefulli": 414, "variat": 414, "2e": [414, 428], "wd": 414, "upd": 414, "harder": [414, 432], "5_000": 414, "500000": 414, "100000": 414, "005": [414, 426], "mandatori": [414, 415, 427, 428], "fairer": 414, "budget": 414, "dqn_exp_": 414, "uuid1": [414, 433], "registr": 414, "cumbersom": 414, "buffer_hook": 414, "weight_updat": 414, "aliv": 414, "total_reward": 414, "print_csv_files_in_fold": 414, "folder_path": 414, "csv_file": 414, "output_str": 414, "dirpath": 414, "endswith": 414, "strip": 414, "qvaluenetwork": 414, "accuraci": 414, "fanci": [414, 421], "demonstr": [415, 417, 421, 426, 427, 428, 430, 433], "talk": 415, "six": 415, "sophist": [415, 427], "invent": 415, "theta_k": 415, "pi_": 415, "exceed": 415, "discourag": [415, 428], "indispens": 415, "analyz": 415, "lingua": 415, "franca": 415, "defaultdict": [415, 428], "3e": [415, 416, 426, 427], "max_grad_norm": [415, 426, 427], "sub_batch_s": 415, "num_epoch": [415, 427], "entropy_ep": [415, 427], "charact": [415, 417], "inverteddoublependulum": 415, "transmit": 415, "stai": 415, "confid": [415, 426, 427], "ran": 415, "f_": 415, "mu_": 415, "difficulti": [415, 433], "d_ob": 415, "d_action": 415, "policy_modul": [415, 426, 427], "briefli": [415, 426, 427], "refil": [415, 427], "easiest": [415, 420, 426, 427], "mathemat": [415, 426, 427], "tradeoff": [415, 427], "advantage_modul": 415, "lr_schedul": [415, 428], "cosineannealinglr": [415, 428], "eval_str": 415, "tensordict_data": [415, 427], "data_view": [415, 427], "subdata": [415, 426, 427], "cum_reward_str": 415, "4f": [415, 416, 428], "stepcount_str": 415, "param_group": [415, 426], "lr_str": 415, "eval_rollout": 415, "nice": [415, 418, 421], "cap": [415, 430], "figsiz": [415, 428], "subplot": [415, 426, 428, 433], "titl": [415, 416, 417, 427, 428], "84x84": [416, 417], "accessori": 416, "stamp": 416, "assist": 416, "n_cell": 416, "customiz": 416, "wouldn": 416, "qval": 416, "stoch_polici": 416, "opportun": [416, 426], "uniniti": 416, "again": [416, 417, 418, 419, 421, 427, 429, 430, 433], "strongli": 416, "million": 416, "sake": [416, 429, 430], "20_000": [416, 428], "longest": 416, "npai": 416, "action_spread": 416, "rom": 417, "licens": 417, "strong": 417, "impress": 417, "arduino": 417, "raspberri": 417, "pi": [417, 426, 427, 428], "alon": 417, "examplifi": 417, "ship": 417, "stick": 417, "nearest": 417, "value_mlp": [417, 423], "100_000": [417, 423], "init_rand_step": [417, 423], "total_count": [417, 423], "total_episod": [417, 423], "t0": [417, 423], "screen": [417, 426], "color": [417, 426], "unblock": 417, "policy_transform": 417, "fake_td": 417, "exported_polici": 417, "div": 417, "graph_modul": 417, "print_read": 417, "group0": 417, "group0_agent0_ob": 417, "collid": [417, 427], "group0_agent0": 417, "agent0_ob": 417, "comma": 417, "digress": 417, "exported_stochastic_polici": 417, "trace": 417, "batchsizetransform": 417, "recurrent_polici": 417, "fake_ob": 417, "fake_hidden0": 417, "fake_hidden1": 417, "fake_is_init": 417, "exported_recurrent_polici": 417, "platform": [417, 432], "aoti": 417, "_inductor": 417, "aoti_compile_and_packag": 417, "aoti_load_packag": 417, "pt2": 417, "pkg_path": 417, "package_path": 417, "compiled_modul": 417, "onnxruntim": 417, "showcas": [417, 428], "web": 417, "explain": [417, 429], "tensorrt": 417, "android": 417, "ale_pi": 417, "aleinterfac": 417, "loadrom": 417, "reset_gam": 417, "screen_ob": 417, "getscreenrgb": 417, "tick_param": 417, "bottom": 417, "labelleft": 417, "labelbottom": 417, "imshow": [417, 433], "dynamo_export": 417, "onnx_policy_export": 417, "onnx_file_path": 417, "ort_sess": 417, "inferencesess": 417, "cpuexecutionprovid": 417, "onnxruntime_input": 417, "get_input": 417, "onnx_polici": 417, "lightweight": [417, 422], "onnxruntime_output": 417, "deploy": 417, "topic": [418, 419, 420], "straight": 418, "backtrack": 418, "reset_with_act": 418, "stepped_data": 418, "spatial": 418, "useless": 418, "policyless": 418, "examin": [418, 426], "tackl": 419, "delv": 419, "extractor": 419, "additivegaussianmodul": [419, 426], "exploration_polici": [419, 426], "greedili": 419, "2d": [419, 426, 427], "innov": [419, 420], "rollout_explor": 419, "sole": 420, "supervis": [420, 421, 430, 433], "n_collect": 420, "get_next_batch": 420, "concis": 420, "ddpg_loss": 420, "total_loss": 420, "prove": 420, "reliev": 420, "concern": 420, "accustom": 421, "surprisingli": 421, "fundament": 421, "art": [421, 426, 427], "countless": 421, "yourself": [421, 426, 427], "everywher": 422, "log_scalar": 422, "my_scalar": 422, "saw": [422, 428, 430], "excess": 422, "lesson": 423, "voluntarili": 423, "torchrl_logg": 423, "training_loop": 423, "video_record": 423, "arbitrarili": 423, "t1": 423, "conclud": [423, 429], "tutorials_python": 424, "tutorials_jupyt": 424, "env1_obs_kei": 425, "observation_stand": 425, "env2_obs_kei": 425, "observation_walk": 425, "tdreset1": 425, "tdreset2": 425, "lazy_stack": 425, "policy_common": 425, "policy_stand": 425, "policy_walk": 425, "But": 425, "env1_mak": 425, "env2_mak": 425, "_single_task": 425, "td_rollout": 425, "matteo": [426, 427], "bettini": [426, 427], "benchmarl": [426, 427], "simple_tag": 426, "maddpg": [426, 427], "multiagentparticleenviron": 426, "mpe": 426, "centralis": [426, 427], "tie": [426, 427], "iddpg": [426, 427], "richard": 426, "andrew": 426, "mit": 426, "press": 426, "2018": 426, "mathbf": [426, 427], "decentralis": [426, 427], "literatur": [426, 427], "overcom": [426, 427], "stationari": [426, 427], "concurr": [426, 427], "establish": 426, "gui": [426, 427], "is_sphinx": 426, "__sphinx_build__": 426, "n_iter": [426, 427, 428], "evad": 426, "iteration_when_stop_training_evad": 426, "memory_s": 426, "n_optimiser_step": 426, "train_batch_s": 426, "polyak_tau": 426, "chaser": 426, "red": 426, "circl": [426, 427], "green": 426, "touch": [426, 428], "penal": [426, 427], "obstacl": 426, "drag": [426, 427], "elast": [426, 427], "collis": [426, 427], "imped": 426, "n_chaser": 426, "n_evad": 426, "n_obstacl": 426, "use_vma": 426, "simple_tag_v3": 426, "num_good": 426, "num_adversari": 426, "num_obstacl": 426, "max_cycl": 426, "num_vmas_env": [426, 427], "num_good_ag": 426, "num_landmark": 426, "four": [426, 427, 428], "n_agents_in_that_group": 426, "stress": [426, 427], "paramount": [426, 427], "n_rollout_step": [426, 427], "evolut": [426, 427], "group_nam": 426, "n_agents_in_group": 426, "minor": 426, "agents_exploration_polici": 426, "utilis": [426, 427], "n_obs_per_ag": [426, 427], "n_actions_per_ag": [426, 427], "share_parameters_polici": [426, 427], "policy_net": [426, 427], "_agent": 426, "grant": [426, 427], "converg": [426, 427], "share_parameters_crit": [426, 427], "obs_act": 426, "cat_modul": 426, "critic_modul": 426, "fantast": [426, 427], "reset_td": 426, "interfer": 426, "subject": [426, 428], "flatten_kei": 426, "process_batch": 426, "group_shap": 426, "get_item_shap": [426, 427], "nested_done_kei": 426, "nested_terminated_kei": 426, "desc": [426, 427], "episode_reward_mean_": 426, "episode_reward_mean_map": 426, "train_group_map": 426, "group_batch": 426, "_group": 426, "loss_nam": 426, "episode_reward_mean": [426, 427], "fig": [426, 430], "set_ylabel": 426, "axvlin": 426, "orang": 426, "set_xlabel": 426, "video_logg": 426, "vmas_log": 426, "env_with_rend": 426, "vmas_rend": 426, "print_log_dir": 426, "profici": [426, 427], "lidar": 427, "sensor": 427, "mappo": 427, "ippo": 427, "analys": 427, "visualis": 427, "vmas_devic": 427, "6_000": 427, "minibatch_s": 427, "generalis": 427, "simd": 427, "warp": 427, "todai": 427, "surround": 427, "dot": [427, 428], "scenario_nam": 427, "critic_net": 427, "minibatch": 427, "episode_reward_mean_list": 427, "critic_network_param": 427, "target_critic_network_param": 427, "xvfb": 427, "pyvirtualdisplai": 427, "1400": 427, "900": 427, "pil": 427, "rendering_callback": 427, "fromarrai": 427, "gif": 427, "save_al": 427, "append_imag": 427, "freeli": 428, "broader": 428, "wider": 428, "acquaint": 428, "avenu": 428, "_apply_to_composit": 428, "default_x": 428, "default_i": 428, "upward": 428, "angular": 428, "sin": 428, "rad": 428, "angl": 428, "deleg": 428, "new_th": 428, "new_thdot": 428, "g_forc": 428, "angle_norm": 428, "albeit": 428, "high_th": 428, "high_thdot": 428, "low_th": 428, "low_thdot": 428, "trivial": 428, "irrelev": 428, "_make_spec": 428, "td_param": 428, "render_fp": 428, "random_": 428, "_make_step": 428, "staticmethod": 428, "skeleton": 428, "unitari": 428, "sine": 428, "cosin": 428, "sintransform": 428, "costransform": 428, "t_sin": 428, "t_co": 428, "cat_transform": 428, "simple_rollout": 428, "unexplor": 428, "init_td": 428, "traj_return": 428, "last_reward": 428, "is_ipython": 428, "inlin": 428, "get_backend": 428, "ion": 428, "gcf": 428, "clear_output": 428, "r3mtransform": 429, "embodi": 429, "env_transform": [429, 433], "wiser": 429, "batteri": 430, "buffer_list": 430, "lowest": 430, "medium": 430, "buffer_lazytensor": 430, "tempdir": 430, "buffer_lazymemmap": 430, "fullest": 430, "mydata": 430, "buffer_lazi": 430, "background": 430, "question": [430, 432], "_i": 430, "artifici": 430, "hamper": 430, "she": 430, "pars": 430, "proport": 430, "reappear": 430, "unfold": 430, "problemat": 430, "4th": 430, "gc": 430, "prioritizedslicesampl": 430, "tensordictmaxvaluewrit": 430, "demo": 432, "icml": 432, "vmoen": 432, "fb": 432, "invest": 432, "media": 432, "predominantli": 432, "data2": 432, "sub_key1": 432, "scturctur": 432, "data_stack": 432, "data_sampl": 432, "_sampler": 432, "_sum_tre": 432, "modulenotfounderror": 432, "noopresetenv": [432, 433], "backbone_modul": 432, "params_expand": 432, "exec_sequ": 432, "tensordict_exp": 432, "base_modul": 432, "tensordicts_prealloc": 432, "tensordicts_stack": 432, "tensordict_rollout": [432, 433], "automatical": 432, "60": 432, "particularili": 432, "concatmodul": 432, "loss_td": 432, "contributor": 432, "curiou": 432, "nascent": 432, "unsupervis": 433, "unifi": 433, "_build_env": 433, "deserv": 433, "__episode__": 433, "__trajectory__": 433, "void": 433, "reproduct": 433, "tensordict_tprim": 433, "wrapper1": 433, "wrapper2": 433, "obviou": 433, "truth": 433, "env_transformed_bi": 433, "stanc": 433, "transformeddistribut": 433, "base_dist": 433, "concat": 433, "mofidi": 433, "transformedenviron": 433, "moderet": 433, "computation": 433, "incom": 433, "amongst": 433, "has_cuda": 433, "convention": 433, "markovian": 433, "bar_": 433, "get_someth": 433, "aargh": 433, "is_clos": 433, "foo_list": 433, "121": 433, "evolv": 433, "steadi": 433, "approx": 433, "absor": 433, "_extra_st": 433}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [236, 0, 1, "", "implement_for"], [380, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MCTSForest"], [42, 0, 1, "", "MultiCategorical"], [43, 0, 1, "", "MultiDiscreteTensorSpec"], [44, 0, 1, "", "MultiOneHot"], [45, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [46, 0, 1, "", "MultiStep"], [47, 0, 1, "", "Nested2TED"], [48, 0, 1, "", "NonTensor"], [49, 0, 1, "", "NonTensorSpec"], [50, 0, 1, "", "OneHot"], [51, 0, 1, "", "OneHotDiscreteTensorSpec"], [52, 0, 1, "", "PairwiseDataset"], [53, 0, 1, "", "PrioritizedReplayBuffer"], [54, 0, 1, "", "PromptData"], [55, 0, 1, "", "PromptTensorDictTokenizer"], [56, 0, 1, "", "QueryModule"], [57, 0, 1, "", "RandomProjectionHash"], [58, 0, 1, "", "ReplayBuffer"], [59, 0, 1, "", "RewardData"], [60, 0, 1, "", "RolloutFromModel"], [61, 0, 1, "", "SipHash"], [62, 0, 1, "", "Stacked"], [63, 0, 1, "", "StackedComposite"], [64, 0, 1, "", "TED2Flat"], [65, 0, 1, "", "TED2Nested"], [66, 0, 1, "", "TensorDictMap"], [67, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [68, 0, 1, "", "TensorDictReplayBuffer"], [69, 0, 1, "", "TensorDictTokenizer"], [70, 0, 1, "", "TensorMap"], [71, 0, 1, "", "TensorSpec"], [72, 0, 1, "", "TokenizedDatasetLoader"], [73, 0, 1, "", "Tree"], [74, 0, 1, "", "Unbounded"], [75, 0, 1, "", "UnboundedContinuous"], [76, 0, 1, "", "UnboundedContinuousTensorSpec"], [77, 0, 1, "", "UnboundedDiscrete"], [78, 0, 1, "", "UnboundedDiscreteTensorSpec"], [79, 0, 1, "", "check_no_exclusive_keys"], [80, 0, 1, "", "consolidate_spec"], [81, 0, 1, "", "contains_lazy_spec"], [82, 0, 1, "", "create_infinite_iterator"], [83, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "set"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "set"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "set"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[41, 4, 1, "", "action_keys"], [41, 4, 1, "", "done_keys"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "get_keys_from_env"], [41, 4, 1, "", "observation_keys"], [41, 4, 1, "", "reward_keys"], [41, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "set_provisional_n"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "set_provisional_n"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "cardinality"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 3, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "compile"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "mtia"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_load_state_dict_pre_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "register_state_dict_post_hook"], [46, 1, 1, "", "register_state_dict_pre_hook"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_submodule"], [46, 1, 1, "", "share_memory"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 3, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 4, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_categorical"], [50, 1, 1, "", "to_categorical_spec"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "to_one_hot"], [50, 1, 1, "", "to_one_hot_spec"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "update_mask"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 3, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 4, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[52, 4, 1, "", "device"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "fields"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dump"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "load"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "register_load_hook"], [53, 1, 1, "", "register_save_hook"], [53, 1, 1, "", "sample"], [53, 4, 1, "", "sampler"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 4, 1, "", "storage"], [53, 4, 1, "", "write_count"], [53, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[54, 4, 1, "", "device"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "fields"], [54, 1, 1, "", "from_dataset"], [54, 1, 1, "", "from_tensordict"], [54, 1, 1, "", "get"], [54, 1, 1, "", "load"], [54, 1, 1, "", "load_"], [54, 1, 1, "", "load_memmap"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "memmap"], [54, 1, 1, "", "memmap_"], [54, 1, 1, "", "memmap_like"], [54, 1, 1, "", "memmap_refresh_"], [54, 1, 1, "", "save"], [54, 1, 1, "", "set"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to_tensordict"], [54, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "is_tdmodule_compatible"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "reset_out_keys"], [56, 1, 1, "", "reset_parameters_recursive"], [56, 1, 1, "", "select_out_keys"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[57, 1, 1, "", "add_module"], [57, 1, 1, "", "apply"], [57, 1, 1, "", "bfloat16"], [57, 1, 1, "", "buffers"], [57, 1, 1, "", "children"], [57, 1, 1, "", "compile"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 1, 1, "", "double"], [57, 1, 1, "", "eval"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "float"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "get_buffer"], [57, 1, 1, "", "get_extra_state"], [57, 1, 1, "", "get_parameter"], [57, 1, 1, "", "get_submodule"], [57, 1, 1, "", "half"], [57, 1, 1, "", "ipu"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "modules"], [57, 1, 1, "", "mtia"], [57, 1, 1, "", "named_buffers"], [57, 1, 1, "", "named_children"], [57, 1, 1, "", "named_modules"], [57, 1, 1, "", "named_parameters"], [57, 1, 1, "", "parameters"], [57, 1, 1, "", "register_backward_hook"], [57, 1, 1, "", "register_buffer"], [57, 1, 1, "", "register_forward_hook"], [57, 1, 1, "", "register_forward_pre_hook"], [57, 1, 1, "", "register_full_backward_hook"], [57, 1, 1, "", "register_full_backward_pre_hook"], [57, 1, 1, "", "register_load_state_dict_post_hook"], [57, 1, 1, "", "register_load_state_dict_pre_hook"], [57, 1, 1, "", "register_module"], [57, 1, 1, "", "register_parameter"], [57, 1, 1, "", "register_state_dict_post_hook"], [57, 1, 1, "", "register_state_dict_pre_hook"], [57, 1, 1, "", "requires_grad_"], [57, 1, 1, "", "set_extra_state"], [57, 1, 1, "", "set_submodule"], [57, 1, 1, "", "share_memory"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_empty"], [57, 1, 1, "", "train"], [57, 1, 1, "", "type"], [57, 1, 1, "", "xpu"], [57, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dump"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "load"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "register_load_hook"], [58, 1, 1, "", "register_save_hook"], [58, 1, 1, "", "sample"], [58, 4, 1, "", "sampler"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 4, 1, "", "storage"], [58, 4, 1, "", "write_count"], [58, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[59, 4, 1, "", "device"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "fields"], [59, 1, 1, "", "from_tensordict"], [59, 1, 1, "", "get"], [59, 1, 1, "", "load"], [59, 1, 1, "", "load_"], [59, 1, 1, "", "load_memmap"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "memmap"], [59, 1, 1, "", "memmap_"], [59, 1, 1, "", "memmap_like"], [59, 1, 1, "", "memmap_refresh_"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to_tensordict"], [59, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[60, 1, 1, "", "create_rollout_td"], [60, 1, 1, "", "generate"], [60, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "cardinality"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "cardinality"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "get"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_empty"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "items"], [63, 1, 1, "", "keys"], [63, 1, 1, "", "lock_"], [63, 1, 1, "", "make_neg_dim"], [63, 4, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "pop"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "separates"], [63, 1, 1, "", "set"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unlock_"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "values"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "from_tensordict_pair"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 4, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 4, 1, "", "storage"], [67, 4, 1, "", "write_count"], [67, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 4, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 4, 1, "", "storage"], [68, 4, 1, "", "write_count"], [68, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "cardinality"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "enumerate"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[72, 1, 1, "", "dataset_to_tensordict"], [72, 1, 1, "", "load"]], "torchrl.data.Tree": [[73, 4, 1, "", "branching_action"], [73, 4, 1, "", "device"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "edges"], [73, 1, 1, "", "fields"], [73, 1, 1, "", "from_tensordict"], [73, 4, 1, "", "full_action_spec"], [73, 4, 1, "", "full_done_spec"], [73, 4, 1, "", "full_observation_spec"], [73, 4, 1, "", "full_reward_spec"], [73, 4, 1, "", "full_state_spec"], [73, 1, 1, "", "fully_expanded"], [73, 1, 1, "", "get"], [73, 1, 1, "", "get_vertex_by_hash"], [73, 1, 1, "", "get_vertex_by_id"], [73, 4, 1, "", "is_terminal"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "make_node"], [73, 1, 1, "", "max_length"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 4, 1, "", "node_observation"], [73, 4, 1, "", "node_observations"], [73, 4, 1, "", "num_children"], [73, 1, 1, "", "num_vertices"], [73, 4, 1, "", "parent"], [73, 1, 1, "", "plot"], [73, 4, 1, "", "prev_action"], [73, 1, 1, "", "rollout_from_path"], [73, 1, 1, "", "save"], [73, 4, 1, "", "selected_actions"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_string"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"], [73, 1, 1, "", "valid_paths"], [73, 1, 1, "", "vertices"], [73, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 4, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 4, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "cardinality"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[84, 0, 1, "", "FlatStorageCheckpointer"], [85, 0, 1, "", "H5StorageCheckpointer"], [86, 0, 1, "", "ImmutableDatasetWriter"], [87, 0, 1, "", "LazyMemmapStorage"], [88, 0, 1, "", "LazyStackStorage"], [89, 0, 1, "", "LazyTensorStorage"], [90, 0, 1, "", "ListStorage"], [91, 0, 1, "", "ListStorageCheckpointer"], [92, 0, 1, "", "NestedStorageCheckpointer"], [93, 0, 1, "", "PrioritizedSampler"], [94, 0, 1, "", "PrioritizedSliceSampler"], [95, 0, 1, "", "RandomSampler"], [96, 0, 1, "", "ReplayBufferEnsemble"], [97, 0, 1, "", "RoundRobinWriter"], [98, 0, 1, "", "Sampler"], [99, 0, 1, "", "SamplerEnsemble"], [100, 0, 1, "", "SamplerWithoutReplacement"], [101, 0, 1, "", "SliceSampler"], [102, 0, 1, "", "SliceSamplerWithoutReplacement"], [103, 0, 1, "", "Storage"], [104, 0, 1, "", "StorageCheckpointerBase"], [105, 0, 1, "", "StorageEnsemble"], [106, 0, 1, "", "StorageEnsembleCheckpointer"], [107, 0, 1, "", "TensorDictMaxValueWriter"], [108, 0, 1, "", "TensorDictRoundRobinWriter"], [109, 0, 1, "", "TensorStorage"], [110, 0, 1, "", "TensorStorageCheckpointer"], [111, 0, 1, "", "Writer"], [112, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[86, 1, 1, "", "add"], [86, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[87, 1, 1, "", "attach"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "load"], [87, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[90, 1, 1, "", "attach"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "load"], [90, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[93, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[94, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[96, 1, 1, "", "add"], [96, 1, 1, "", "append_transform"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "empty"], [96, 1, 1, "", "extend"], [96, 1, 1, "", "insert_transform"], [96, 1, 1, "", "load"], [96, 1, 1, "", "loads"], [96, 1, 1, "", "register_load_hook"], [96, 1, 1, "", "register_save_hook"], [96, 1, 1, "", "sample"], [96, 4, 1, "", "sampler"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set_sampler"], [96, 1, 1, "", "set_storage"], [96, 1, 1, "", "set_writer"], [96, 4, 1, "", "storage"], [96, 4, 1, "", "write_count"], [96, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[105, 1, 1, "", "attach"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "load"], [105, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[107, 1, 1, "", "add"], [107, 1, 1, "", "extend"], [107, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[108, 1, 1, "", "add"], [108, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[111, 1, 1, "", "add"], [111, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"]], "torchrl.envs": [[113, 2, 1, "", "BraxEnv"], [114, 2, 1, "", "BraxWrapper"], [115, 0, 1, "", "ChessEnv"], [116, 2, 1, "", "DMControlEnv"], [117, 2, 1, "", "DMControlWrapper"], [118, 0, 1, "", "EnvBase"], [119, 0, 1, "", "EnvCreator"], [120, 0, 1, "", "EnvMetaData"], [121, 2, 1, "", "GymEnv"], [122, 0, 1, "", "GymLikeEnv"], [123, 2, 1, "", "GymWrapper"], [124, 2, 1, "", "HabitatEnv"], [125, 2, 1, "", "IsaacGymEnv"], [126, 2, 1, "", "IsaacGymWrapper"], [127, 2, 1, "", "JumanjiEnv"], [128, 2, 1, "", "JumanjiWrapper"], [129, 0, 1, "", "LLMEnv"], [130, 0, 1, "", "LLMHashingEnv"], [131, 2, 1, "", "MOGymEnv"], [132, 2, 1, "", "MOGymWrapper"], [133, 2, 1, "", "MarlGroupMapType"], [134, 2, 1, "", "MeltingpotEnv"], [135, 2, 1, "", "MeltingpotWrapper"], [136, 2, 1, "", "ModelBasedEnvBase"], [137, 2, 1, "", "MultiThreadedEnv"], [138, 2, 1, "", "MultiThreadedEnvWrapper"], [139, 2, 1, "", "OpenMLEnv"], [140, 2, 1, "", "OpenSpielEnv"], [141, 2, 1, "", "OpenSpielWrapper"], [142, 0, 1, "", "ParallelEnv"], [143, 0, 1, "", "PendulumEnv"], [144, 2, 1, "", "PettingZooEnv"], [145, 2, 1, "", "PettingZooWrapper"], [146, 2, 1, "", "RandomPolicy"], [147, 2, 1, "", "RoboHiveEnv"], [148, 2, 1, "", "SMACv2Env"], [149, 2, 1, "", "SMACv2Wrapper"], [150, 0, 1, "", "SerialEnv"], [151, 0, 1, "", "TicTacToeEnv"], [152, 2, 1, "", "UnityMLAgentsEnv"], [153, 2, 1, "", "UnityMLAgentsWrapper"], [154, 2, 1, "", "VmasEnv"], [155, 2, 1, "", "VmasWrapper"], [156, 2, 1, "", "check_env_specs"], [157, 2, 1, "", "check_marl_grouping"], [158, 2, 1, "", "exploration_type"], [159, 2, 1, "", "get_available_libraries"], [160, 2, 1, "", "gym_backend"], [161, 2, 1, "", "make_composite_from_td"], [136, 1, 1, "", "rand_step"], [164, 2, 1, "", "register_gym_spec_conversion"], [136, 1, 1, "", "reset"], [136, 1, 1, "", "rollout"], [165, 2, 1, "", "set_exploration_type"], [166, 2, 1, "", "set_gym_backend"], [136, 1, 1, "", "set_seed"], [136, 1, 1, "", "step"], [167, 2, 1, "", "step_mdp"], [168, 2, 1, "", "terminated_or_truncated"]], "torchrl.envs.ChessEnv": [[115, 4, 1, "", "action_key"], [115, 4, 1, "", "action_keys"], [115, 4, 1, "", "action_spec"], [115, 4, 1, "", "action_spec_unbatched"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "all_actions"], [115, 1, 1, "", "any_done"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 1, 1, "", "auto_specs_"], [115, 4, 1, "", "batch_dims"], [115, 4, 1, "", "batch_locked"], [115, 4, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "cardinality"], [115, 1, 1, "", "check_env_specs"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 4, 1, "", "done_key"], [115, 4, 1, "", "done_keys"], [115, 4, 1, "", "done_keys_groups"], [115, 4, 1, "", "done_spec"], [115, 4, 1, "", "done_spec_unbatched"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 4, 1, "", "full_action_spec"], [115, 4, 1, "", "full_action_spec_unbatched"], [115, 4, 1, "", "full_done_spec"], [115, 4, 1, "", "full_done_spec_unbatched"], [115, 4, 1, "", "full_observation_spec_unbatched"], [115, 4, 1, "", "full_reward_spec"], [115, 4, 1, "", "full_reward_spec_unbatched"], [115, 4, 1, "", "full_state_spec"], [115, 4, 1, "", "full_state_spec_unbatched"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_legal_moves"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 4, 1, "", "input_spec"], [115, 4, 1, "", "input_spec_unbatched"], [115, 1, 1, "", "ipu"], [115, 4, 1, "", "is_spec_locked"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "mtia"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 4, 1, "", "observation_keys"], [115, 4, 1, "", "observation_spec"], [115, 4, 1, "", "observation_spec_unbatched"], [115, 4, 1, "", "output_spec"], [115, 4, 1, "", "output_spec_unbatched"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_load_state_dict_pre_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_post_hook"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "", "reset"], [115, 4, 1, "", "reset_keys"], [115, 4, 1, "", "reward_key"], [115, 4, 1, "", "reward_keys"], [115, 4, 1, "", "reward_spec"], [115, 4, 1, "", "reward_spec_unbatched"], [115, 1, 1, "", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "", "set_seed"], [115, 1, 1, "", "set_spec_lock_"], [115, 1, 1, "", "set_submodule"], [115, 4, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 4, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 4, 1, "", "state_keys"], [115, 4, 1, "", "state_spec"], [115, 4, 1, "", "state_spec_unbatched"], [115, 1, 1, "", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "step_mdp"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[118, 4, 1, "", "action_key"], [118, 4, 1, "", "action_keys"], [118, 4, 1, "", "action_spec"], [118, 4, 1, "", "action_spec_unbatched"], [118, 1, 1, "", "add_module"], [118, 1, 1, "", "add_truncated_keys"], [118, 1, 1, "", "all_actions"], [118, 1, 1, "", "any_done"], [118, 1, 1, "", "append_transform"], [118, 1, 1, "", "apply"], [118, 1, 1, "", "auto_specs_"], [118, 4, 1, "", "batch_dims"], [118, 4, 1, "", "batch_locked"], [118, 4, 1, "", "batch_size"], [118, 1, 1, "", "bfloat16"], [118, 1, 1, "", "buffers"], [118, 1, 1, "", "cardinality"], [118, 1, 1, "", "check_env_specs"], [118, 1, 1, "", "children"], [118, 1, 1, "", "compile"], [118, 1, 1, "", "cpu"], [118, 1, 1, "", "cuda"], [118, 4, 1, "", "done_key"], [118, 4, 1, "", "done_keys"], [118, 4, 1, "", "done_keys_groups"], [118, 4, 1, "", "done_spec"], [118, 4, 1, "", "done_spec_unbatched"], [118, 1, 1, "", "double"], [118, 1, 1, "", "empty_cache"], [118, 1, 1, "", "eval"], [118, 1, 1, "", "extra_repr"], [118, 1, 1, "", "fake_tensordict"], [118, 1, 1, "", "float"], [118, 1, 1, "", "forward"], [118, 4, 1, "", "full_action_spec"], [118, 4, 1, "", "full_action_spec_unbatched"], [118, 4, 1, "", "full_done_spec"], [118, 4, 1, "", "full_done_spec_unbatched"], [118, 4, 1, "", "full_observation_spec_unbatched"], [118, 4, 1, "", "full_reward_spec"], [118, 4, 1, "", "full_reward_spec_unbatched"], [118, 4, 1, "", "full_state_spec"], [118, 4, 1, "", "full_state_spec_unbatched"], [118, 1, 1, "", "get_buffer"], [118, 1, 1, "", "get_extra_state"], [118, 1, 1, "", "get_parameter"], [118, 1, 1, "", "get_submodule"], [118, 1, 1, "", "half"], [118, 4, 1, "", "input_spec"], [118, 4, 1, "", "input_spec_unbatched"], [118, 1, 1, "", "ipu"], [118, 4, 1, "", "is_spec_locked"], [118, 1, 1, "", "load_state_dict"], [118, 1, 1, "", "maybe_reset"], [118, 1, 1, "", "modules"], [118, 1, 1, "", "mtia"], [118, 1, 1, "", "named_buffers"], [118, 1, 1, "", "named_children"], [118, 1, 1, "", "named_modules"], [118, 1, 1, "", "named_parameters"], [118, 4, 1, "", "observation_keys"], [118, 4, 1, "", "observation_spec"], [118, 4, 1, "", "observation_spec_unbatched"], [118, 4, 1, "", "output_spec"], [118, 4, 1, "", "output_spec_unbatched"], [118, 1, 1, "", "parameters"], [118, 1, 1, "", "rand_action"], [118, 1, 1, "id0", "rand_step"], [118, 1, 1, "", "register_backward_hook"], [118, 1, 1, "", "register_buffer"], [118, 1, 1, "", "register_forward_hook"], [118, 1, 1, "", "register_forward_pre_hook"], [118, 1, 1, "", "register_full_backward_hook"], [118, 1, 1, "", "register_full_backward_pre_hook"], [118, 1, 1, "", "register_gym"], [118, 1, 1, "", "register_load_state_dict_post_hook"], [118, 1, 1, "", "register_load_state_dict_pre_hook"], [118, 1, 1, "", "register_module"], [118, 1, 1, "", "register_parameter"], [118, 1, 1, "", "register_state_dict_post_hook"], [118, 1, 1, "", "register_state_dict_pre_hook"], [118, 1, 1, "", "requires_grad_"], [118, 1, 1, "id1", "reset"], [118, 4, 1, "", "reset_keys"], [118, 4, 1, "", "reward_key"], [118, 4, 1, "", "reward_keys"], [118, 4, 1, "", "reward_spec"], [118, 4, 1, "", "reward_spec_unbatched"], [118, 1, 1, "id2", "rollout"], [118, 1, 1, "", "set_extra_state"], [118, 1, 1, "id3", "set_seed"], [118, 1, 1, "", "set_spec_lock_"], [118, 1, 1, "", "set_submodule"], [118, 4, 1, "", "shape"], [118, 1, 1, "", "share_memory"], [118, 4, 1, "", "specs"], [118, 1, 1, "", "state_dict"], [118, 4, 1, "", "state_keys"], [118, 4, 1, "", "state_spec"], [118, 4, 1, "", "state_spec_unbatched"], [118, 1, 1, "id4", "step"], [118, 1, 1, "", "step_and_maybe_reset"], [118, 1, 1, "", "step_mdp"], [118, 1, 1, "", "to"], [118, 1, 1, "", "to_empty"], [118, 1, 1, "", "train"], [118, 1, 1, "", "type"], [118, 1, 1, "", "xpu"], [118, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[119, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[122, 4, 1, "", "action_key"], [122, 4, 1, "", "action_keys"], [122, 4, 1, "", "action_spec"], [122, 4, 1, "", "action_spec_unbatched"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "all_actions"], [122, 1, 1, "", "any_done"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 1, 1, "", "auto_register_info_dict"], [122, 1, 1, "", "auto_specs_"], [122, 4, 1, "", "batch_dims"], [122, 4, 1, "", "batch_locked"], [122, 4, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "cardinality"], [122, 1, 1, "", "check_env_specs"], [122, 1, 1, "", "children"], [122, 1, 1, "", "close"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 4, 1, "", "done_key"], [122, 4, 1, "", "done_keys"], [122, 4, 1, "", "done_keys_groups"], [122, 4, 1, "", "done_spec"], [122, 4, 1, "", "done_spec_unbatched"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 4, 1, "", "full_action_spec"], [122, 4, 1, "", "full_action_spec_unbatched"], [122, 4, 1, "", "full_done_spec"], [122, 4, 1, "", "full_done_spec_unbatched"], [122, 4, 1, "", "full_observation_spec_unbatched"], [122, 4, 1, "", "full_reward_spec"], [122, 4, 1, "", "full_reward_spec_unbatched"], [122, 4, 1, "", "full_state_spec"], [122, 4, 1, "", "full_state_spec_unbatched"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 4, 1, "", "input_spec"], [122, 4, 1, "", "input_spec_unbatched"], [122, 1, 1, "", "ipu"], [122, 4, 1, "", "is_spec_locked"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 4, 1, "", "observation_keys"], [122, 4, 1, "", "observation_spec"], [122, 4, 1, "", "observation_spec_unbatched"], [122, 4, 1, "", "output_spec"], [122, 4, 1, "", "output_spec_unbatched"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "", "rand_step"], [122, 1, 1, "", "read_action"], [122, 1, 1, "", "read_done"], [122, 1, 1, "", "read_obs"], [122, 1, 1, "", "read_reward"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "", "reset"], [122, 4, 1, "", "reset_keys"], [122, 4, 1, "", "reward_key"], [122, 4, 1, "", "reward_keys"], [122, 4, 1, "", "reward_spec"], [122, 4, 1, "", "reward_spec_unbatched"], [122, 1, 1, "", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "", "set_info_dict_reader"], [122, 1, 1, "", "set_seed"], [122, 1, 1, "", "set_spec_lock_"], [122, 1, 1, "", "set_submodule"], [122, 4, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 4, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 4, 1, "", "state_keys"], [122, 4, 1, "", "state_spec"], [122, 4, 1, "", "state_spec_unbatched"], [122, 1, 1, "", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "step_mdp"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[129, 4, 1, "", "action_key"], [129, 4, 1, "", "action_keys"], [129, 4, 1, "", "action_spec"], [129, 4, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "all_actions"], [129, 1, 1, "", "any_done"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_specs_"], [129, 4, 1, "", "batch_dims"], [129, 4, 1, "", "batch_locked"], [129, 4, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 4, 1, "", "done_key"], [129, 4, 1, "", "done_keys"], [129, 4, 1, "", "done_keys_groups"], [129, 4, 1, "", "done_spec"], [129, 4, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 1, 1, "id0", "from_dataloader"], [129, 4, 1, "", "full_action_spec"], [129, 4, 1, "", "full_action_spec_unbatched"], [129, 4, 1, "", "full_done_spec"], [129, 4, 1, "", "full_done_spec_unbatched"], [129, 4, 1, "", "full_observation_spec_unbatched"], [129, 4, 1, "", "full_reward_spec"], [129, 4, 1, "", "full_reward_spec_unbatched"], [129, 4, 1, "", "full_state_spec"], [129, 4, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 4, 1, "", "input_spec"], [129, 4, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 4, 1, "", "is_spec_locked"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 4, 1, "", "observation_keys"], [129, 4, 1, "", "observation_spec"], [129, 4, 1, "", "observation_spec_unbatched"], [129, 4, 1, "", "output_spec"], [129, 4, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 4, 1, "", "reset_keys"], [129, 4, 1, "", "reward_key"], [129, 4, 1, "", "reward_keys"], [129, 4, 1, "", "reward_spec"], [129, 4, 1, "", "reward_spec_unbatched"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_spec_lock_"], [129, 1, 1, "", "set_submodule"], [129, 4, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 4, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 4, 1, "", "state_keys"], [129, 4, 1, "", "state_spec"], [129, 4, 1, "", "state_spec_unbatched"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[130, 4, 1, "", "action_key"], [130, 4, 1, "", "action_keys"], [130, 4, 1, "", "action_spec"], [130, 4, 1, "", "action_spec_unbatched"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "all_actions"], [130, 1, 1, "", "any_done"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 1, 1, "", "auto_specs_"], [130, 4, 1, "", "batch_dims"], [130, 4, 1, "", "batch_locked"], [130, 4, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "cardinality"], [130, 1, 1, "", "check_env_specs"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 4, 1, "", "done_key"], [130, 4, 1, "", "done_keys"], [130, 4, 1, "", "done_keys_groups"], [130, 4, 1, "", "done_spec"], [130, 4, 1, "", "done_spec_unbatched"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 4, 1, "", "full_action_spec"], [130, 4, 1, "", "full_action_spec_unbatched"], [130, 4, 1, "", "full_done_spec"], [130, 4, 1, "", "full_done_spec_unbatched"], [130, 4, 1, "", "full_observation_spec_unbatched"], [130, 4, 1, "", "full_reward_spec"], [130, 4, 1, "", "full_reward_spec_unbatched"], [130, 4, 1, "", "full_state_spec"], [130, 4, 1, "", "full_state_spec_unbatched"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 4, 1, "", "input_spec"], [130, 4, 1, "", "input_spec_unbatched"], [130, 1, 1, "", "ipu"], [130, 4, 1, "", "is_spec_locked"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "make_tensordict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 4, 1, "", "observation_keys"], [130, 4, 1, "", "observation_spec"], [130, 4, 1, "", "observation_spec_unbatched"], [130, 4, 1, "", "output_spec"], [130, 4, 1, "", "output_spec_unbatched"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 4, 1, "", "reset_keys"], [130, 4, 1, "", "reward_key"], [130, 4, 1, "", "reward_keys"], [130, 4, 1, "", "reward_spec"], [130, 4, 1, "", "reward_spec_unbatched"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_spec_lock_"], [130, 1, 1, "", "set_submodule"], [130, 4, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 4, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 4, 1, "", "state_keys"], [130, 4, 1, "", "state_spec"], [130, 4, 1, "", "state_spec_unbatched"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "step_mdp"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[142, 4, 1, "", "action_key"], [142, 4, 1, "", "action_keys"], [142, 4, 1, "", "action_spec"], [142, 4, 1, "", "action_spec_unbatched"], [142, 1, 1, "", "add_module"], [142, 1, 1, "", "add_truncated_keys"], [142, 1, 1, "", "all_actions"], [142, 1, 1, "", "any_done"], [142, 1, 1, "", "append_transform"], [142, 1, 1, "", "apply"], [142, 1, 1, "", "auto_specs_"], [142, 4, 1, "", "batch_dims"], [142, 4, 1, "", "batch_locked"], [142, 4, 1, "", "batch_size"], [142, 1, 1, "", "bfloat16"], [142, 1, 1, "", "buffers"], [142, 1, 1, "", "cardinality"], [142, 1, 1, "", "check_env_specs"], [142, 1, 1, "", "children"], [142, 1, 1, "", "compile"], [142, 1, 1, "", "cpu"], [142, 1, 1, "", "cuda"], [142, 4, 1, "", "done_key"], [142, 4, 1, "", "done_keys"], [142, 4, 1, "", "done_keys_groups"], [142, 4, 1, "", "done_spec"], [142, 4, 1, "", "done_spec_unbatched"], [142, 1, 1, "", "double"], [142, 1, 1, "", "empty_cache"], [142, 1, 1, "", "eval"], [142, 1, 1, "", "extra_repr"], [142, 1, 1, "", "fake_tensordict"], [142, 1, 1, "", "float"], [142, 1, 1, "", "forward"], [142, 4, 1, "", "full_action_spec"], [142, 4, 1, "", "full_action_spec_unbatched"], [142, 4, 1, "", "full_done_spec"], [142, 4, 1, "", "full_done_spec_unbatched"], [142, 4, 1, "", "full_observation_spec_unbatched"], [142, 4, 1, "", "full_reward_spec"], [142, 4, 1, "", "full_reward_spec_unbatched"], [142, 4, 1, "", "full_state_spec"], [142, 4, 1, "", "full_state_spec_unbatched"], [142, 1, 1, "", "get_buffer"], [142, 1, 1, "", "get_extra_state"], [142, 1, 1, "", "get_parameter"], [142, 1, 1, "", "get_submodule"], [142, 1, 1, "", "half"], [142, 4, 1, "", "input_spec"], [142, 4, 1, "", "input_spec_unbatched"], [142, 1, 1, "", "ipu"], [142, 4, 1, "", "is_spec_locked"], [142, 1, 1, "", "load_state_dict"], [142, 1, 1, "", "maybe_reset"], [142, 1, 1, "", "modules"], [142, 1, 1, "", "mtia"], [142, 1, 1, "", "named_buffers"], [142, 1, 1, "", "named_children"], [142, 1, 1, "", "named_modules"], [142, 1, 1, "", "named_parameters"], [142, 4, 1, "", "observation_keys"], [142, 4, 1, "", "observation_spec"], [142, 4, 1, "", "observation_spec_unbatched"], [142, 4, 1, "", "output_spec"], [142, 4, 1, "", "output_spec_unbatched"], [142, 1, 1, "", "parameters"], [142, 1, 1, "", "rand_action"], [142, 1, 1, "", "rand_step"], [142, 1, 1, "", "register_backward_hook"], [142, 1, 1, "", "register_buffer"], [142, 1, 1, "", "register_forward_hook"], [142, 1, 1, "", "register_forward_pre_hook"], [142, 1, 1, "", "register_full_backward_hook"], [142, 1, 1, "", "register_full_backward_pre_hook"], [142, 1, 1, "", "register_gym"], [142, 1, 1, "", "register_load_state_dict_post_hook"], [142, 1, 1, "", "register_load_state_dict_pre_hook"], [142, 1, 1, "", "register_module"], [142, 1, 1, "", "register_parameter"], [142, 1, 1, "", "register_state_dict_post_hook"], [142, 1, 1, "", "register_state_dict_pre_hook"], [142, 1, 1, "", "requires_grad_"], [142, 1, 1, "", "reset"], [142, 4, 1, "", "reset_keys"], [142, 4, 1, "", "reward_key"], [142, 4, 1, "", "reward_keys"], [142, 4, 1, "", "reward_spec"], [142, 4, 1, "", "reward_spec_unbatched"], [142, 1, 1, "", "rollout"], [142, 1, 1, "", "set_extra_state"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "set_spec_lock_"], [142, 1, 1, "", "set_submodule"], [142, 4, 1, "", "shape"], [142, 1, 1, "", "share_memory"], [142, 4, 1, "", "specs"], [142, 1, 1, "", "state_dict"], [142, 4, 1, "", "state_keys"], [142, 4, 1, "", "state_spec"], [142, 4, 1, "", "state_spec_unbatched"], [142, 1, 1, "", "step"], [142, 1, 1, "", "step_and_maybe_reset"], [142, 1, 1, "", "step_mdp"], [142, 1, 1, "", "to"], [142, 1, 1, "", "to_empty"], [142, 1, 1, "", "train"], [142, 1, 1, "", "type"], [142, 1, 1, "", "update_kwargs"], [142, 1, 1, "", "xpu"], [142, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[143, 4, 1, "", "action_key"], [143, 4, 1, "", "action_keys"], [143, 4, 1, "", "action_spec"], [143, 4, 1, "", "action_spec_unbatched"], [143, 1, 1, "", "add_module"], [143, 1, 1, "", "add_truncated_keys"], [143, 1, 1, "", "all_actions"], [143, 1, 1, "", "any_done"], [143, 1, 1, "", "append_transform"], [143, 1, 1, "", "apply"], [143, 1, 1, "", "auto_specs_"], [143, 4, 1, "", "batch_dims"], [143, 4, 1, "", "batch_size"], [143, 1, 1, "", "bfloat16"], [143, 1, 1, "", "buffers"], [143, 1, 1, "", "cardinality"], [143, 1, 1, "", "check_env_specs"], [143, 1, 1, "", "children"], [143, 1, 1, "", "compile"], [143, 1, 1, "", "cpu"], [143, 1, 1, "", "cuda"], [143, 4, 1, "", "done_key"], [143, 4, 1, "", "done_keys"], [143, 4, 1, "", "done_keys_groups"], [143, 4, 1, "", "done_spec"], [143, 4, 1, "", "done_spec_unbatched"], [143, 1, 1, "", "double"], [143, 1, 1, "", "empty_cache"], [143, 1, 1, "", "eval"], [143, 1, 1, "", "extra_repr"], [143, 1, 1, "", "fake_tensordict"], [143, 1, 1, "", "float"], [143, 1, 1, "", "forward"], [143, 4, 1, "", "full_action_spec"], [143, 4, 1, "", "full_action_spec_unbatched"], [143, 4, 1, "", "full_done_spec"], [143, 4, 1, "", "full_done_spec_unbatched"], [143, 4, 1, "", "full_observation_spec_unbatched"], [143, 4, 1, "", "full_reward_spec"], [143, 4, 1, "", "full_reward_spec_unbatched"], [143, 4, 1, "", "full_state_spec"], [143, 4, 1, "", "full_state_spec_unbatched"], [143, 1, 1, "", "gen_params"], [143, 1, 1, "", "get_buffer"], [143, 1, 1, "", "get_extra_state"], [143, 1, 1, "", "get_parameter"], [143, 1, 1, "", "get_submodule"], [143, 1, 1, "", "half"], [143, 4, 1, "", "input_spec"], [143, 4, 1, "", "input_spec_unbatched"], [143, 1, 1, "", "ipu"], [143, 4, 1, "", "is_spec_locked"], [143, 1, 1, "", "load_state_dict"], [143, 1, 1, "", "maybe_reset"], [143, 1, 1, "", "modules"], [143, 1, 1, "", "mtia"], [143, 1, 1, "", "named_buffers"], [143, 1, 1, "", "named_children"], [143, 1, 1, "", "named_modules"], [143, 1, 1, "", "named_parameters"], [143, 4, 1, "", "observation_keys"], [143, 4, 1, "", "observation_spec"], [143, 4, 1, "", "observation_spec_unbatched"], [143, 4, 1, "", "output_spec"], [143, 4, 1, "", "output_spec_unbatched"], [143, 1, 1, "", "parameters"], [143, 1, 1, "", "rand_action"], [143, 1, 1, "", "rand_step"], [143, 1, 1, "", "register_backward_hook"], [143, 1, 1, "", "register_buffer"], [143, 1, 1, "", "register_forward_hook"], [143, 1, 1, "", "register_forward_pre_hook"], [143, 1, 1, "", "register_full_backward_hook"], [143, 1, 1, "", "register_full_backward_pre_hook"], [143, 1, 1, "", "register_gym"], [143, 1, 1, "", "register_load_state_dict_post_hook"], [143, 1, 1, "", "register_load_state_dict_pre_hook"], [143, 1, 1, "", "register_module"], [143, 1, 1, "", "register_parameter"], [143, 1, 1, "", "register_state_dict_post_hook"], [143, 1, 1, "", "register_state_dict_pre_hook"], [143, 1, 1, "", "requires_grad_"], [143, 1, 1, "", "reset"], [143, 4, 1, "", "reset_keys"], [143, 4, 1, "", "reward_key"], [143, 4, 1, "", "reward_keys"], [143, 4, 1, "", "reward_spec"], [143, 4, 1, "", "reward_spec_unbatched"], [143, 1, 1, "", "rollout"], [143, 1, 1, "", "set_extra_state"], [143, 1, 1, "", "set_seed"], [143, 1, 1, "", "set_spec_lock_"], [143, 1, 1, "", "set_submodule"], [143, 4, 1, "", "shape"], [143, 1, 1, "", "share_memory"], [143, 4, 1, "", "specs"], [143, 1, 1, "", "state_dict"], [143, 4, 1, "", "state_keys"], [143, 4, 1, "", "state_spec"], [143, 4, 1, "", "state_spec_unbatched"], [143, 1, 1, "", "step"], [143, 1, 1, "", "step_and_maybe_reset"], [143, 1, 1, "", "step_mdp"], [143, 1, 1, "", "to"], [143, 1, 1, "", "to_empty"], [143, 1, 1, "", "train"], [143, 1, 1, "", "type"], [143, 1, 1, "", "xpu"], [143, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[150, 4, 1, "", "action_key"], [150, 4, 1, "", "action_keys"], [150, 4, 1, "", "action_spec"], [150, 4, 1, "", "action_spec_unbatched"], [150, 1, 1, "", "add_module"], [150, 1, 1, "", "add_truncated_keys"], [150, 1, 1, "", "all_actions"], [150, 1, 1, "", "any_done"], [150, 1, 1, "", "append_transform"], [150, 1, 1, "", "apply"], [150, 1, 1, "", "auto_specs_"], [150, 4, 1, "", "batch_dims"], [150, 4, 1, "", "batch_locked"], [150, 4, 1, "", "batch_size"], [150, 1, 1, "", "bfloat16"], [150, 1, 1, "", "buffers"], [150, 1, 1, "", "cardinality"], [150, 1, 1, "", "check_env_specs"], [150, 1, 1, "", "children"], [150, 1, 1, "", "compile"], [150, 1, 1, "", "cpu"], [150, 1, 1, "", "cuda"], [150, 4, 1, "", "done_key"], [150, 4, 1, "", "done_keys"], [150, 4, 1, "", "done_keys_groups"], [150, 4, 1, "", "done_spec"], [150, 4, 1, "", "done_spec_unbatched"], [150, 1, 1, "", "double"], [150, 1, 1, "", "empty_cache"], [150, 1, 1, "", "eval"], [150, 1, 1, "", "extra_repr"], [150, 1, 1, "", "fake_tensordict"], [150, 1, 1, "", "float"], [150, 1, 1, "", "forward"], [150, 4, 1, "", "full_action_spec"], [150, 4, 1, "", "full_action_spec_unbatched"], [150, 4, 1, "", "full_done_spec"], [150, 4, 1, "", "full_done_spec_unbatched"], [150, 4, 1, "", "full_observation_spec_unbatched"], [150, 4, 1, "", "full_reward_spec"], [150, 4, 1, "", "full_reward_spec_unbatched"], [150, 4, 1, "", "full_state_spec"], [150, 4, 1, "", "full_state_spec_unbatched"], [150, 1, 1, "", "get_buffer"], [150, 1, 1, "", "get_extra_state"], [150, 1, 1, "", "get_parameter"], [150, 1, 1, "", "get_submodule"], [150, 1, 1, "", "half"], [150, 4, 1, "", "input_spec"], [150, 4, 1, "", "input_spec_unbatched"], [150, 1, 1, "", "ipu"], [150, 4, 1, "", "is_spec_locked"], [150, 1, 1, "", "load_state_dict"], [150, 1, 1, "", "maybe_reset"], [150, 1, 1, "", "modules"], [150, 1, 1, "", "mtia"], [150, 1, 1, "", "named_buffers"], [150, 1, 1, "", "named_children"], [150, 1, 1, "", "named_modules"], [150, 1, 1, "", "named_parameters"], [150, 4, 1, "", "observation_keys"], [150, 4, 1, "", "observation_spec"], [150, 4, 1, "", "observation_spec_unbatched"], [150, 4, 1, "", "output_spec"], [150, 4, 1, "", "output_spec_unbatched"], [150, 1, 1, "", "parameters"], [150, 1, 1, "", "rand_action"], [150, 1, 1, "", "rand_step"], [150, 1, 1, "", "register_backward_hook"], [150, 1, 1, "", "register_buffer"], [150, 1, 1, "", "register_forward_hook"], [150, 1, 1, "", "register_forward_pre_hook"], [150, 1, 1, "", "register_full_backward_hook"], [150, 1, 1, "", "register_full_backward_pre_hook"], [150, 1, 1, "", "register_gym"], [150, 1, 1, "", "register_load_state_dict_post_hook"], [150, 1, 1, "", "register_load_state_dict_pre_hook"], [150, 1, 1, "", "register_module"], [150, 1, 1, "", "register_parameter"], [150, 1, 1, "", "register_state_dict_post_hook"], [150, 1, 1, "", "register_state_dict_pre_hook"], [150, 1, 1, "", "requires_grad_"], [150, 1, 1, "", "reset"], [150, 4, 1, "", "reset_keys"], [150, 4, 1, "", "reward_key"], [150, 4, 1, "", "reward_keys"], [150, 4, 1, "", "reward_spec"], [150, 4, 1, "", "reward_spec_unbatched"], [150, 1, 1, "", "rollout"], [150, 1, 1, "", "set_extra_state"], [150, 1, 1, "", "set_seed"], [150, 1, 1, "", "set_spec_lock_"], [150, 1, 1, "", "set_submodule"], [150, 4, 1, "", "shape"], [150, 1, 1, "", "share_memory"], [150, 4, 1, "", "specs"], [150, 1, 1, "", "state_dict"], [150, 4, 1, "", "state_keys"], [150, 4, 1, "", "state_spec"], [150, 4, 1, "", "state_spec_unbatched"], [150, 1, 1, "", "step"], [150, 1, 1, "", "step_and_maybe_reset"], [150, 1, 1, "", "step_mdp"], [150, 1, 1, "", "to"], [150, 1, 1, "", "to_empty"], [150, 1, 1, "", "train"], [150, 1, 1, "", "type"], [150, 1, 1, "", "update_kwargs"], [150, 1, 1, "", "xpu"], [150, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[151, 4, 1, "", "action_key"], [151, 4, 1, "", "action_keys"], [151, 4, 1, "", "action_spec"], [151, 4, 1, "", "action_spec_unbatched"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "all_actions"], [151, 1, 1, "", "any_done"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 1, 1, "", "auto_specs_"], [151, 4, 1, "", "batch_dims"], [151, 4, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "cardinality"], [151, 1, 1, "", "check_env_specs"], [151, 1, 1, "", "children"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 4, 1, "", "done_key"], [151, 4, 1, "", "done_keys"], [151, 4, 1, "", "done_keys_groups"], [151, 4, 1, "", "done_spec"], [151, 4, 1, "", "done_spec_unbatched"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 4, 1, "", "full_action_spec"], [151, 4, 1, "", "full_action_spec_unbatched"], [151, 4, 1, "", "full_done_spec"], [151, 4, 1, "", "full_done_spec_unbatched"], [151, 4, 1, "", "full_observation_spec_unbatched"], [151, 4, 1, "", "full_reward_spec"], [151, 4, 1, "", "full_reward_spec_unbatched"], [151, 4, 1, "", "full_state_spec"], [151, 4, 1, "", "full_state_spec_unbatched"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 4, 1, "", "input_spec"], [151, 4, 1, "", "input_spec_unbatched"], [151, 1, 1, "", "ipu"], [151, 4, 1, "", "is_spec_locked"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 4, 1, "", "observation_keys"], [151, 4, 1, "", "observation_spec"], [151, 4, 1, "", "observation_spec_unbatched"], [151, 4, 1, "", "output_spec"], [151, 4, 1, "", "output_spec_unbatched"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 4, 1, "", "reset_keys"], [151, 4, 1, "", "reward_key"], [151, 4, 1, "", "reward_keys"], [151, 4, 1, "", "reward_spec"], [151, 4, 1, "", "reward_spec_unbatched"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_spec_lock_"], [151, 1, 1, "", "set_submodule"], [151, 4, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 4, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 4, 1, "", "state_keys"], [151, 4, 1, "", "state_spec"], [151, 4, 1, "", "state_spec_unbatched"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "step_mdp"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[162, 2, 1, "", "DreamerDecoder"], [163, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[169, 0, 1, "", "ActionDiscretizer"], [170, 0, 1, "", "ActionMask"], [171, 0, 1, "", "AutoResetEnv"], [172, 0, 1, "", "AutoResetTransform"], [173, 0, 1, "", "BatchSizeTransform"], [174, 0, 1, "", "BinarizeReward"], [175, 0, 1, "", "BurnInTransform"], [176, 0, 1, "", "CatFrames"], [177, 0, 1, "", "CatTensors"], [178, 0, 1, "", "CenterCrop"], [179, 0, 1, "", "ClipTransform"], [180, 0, 1, "", "Compose"], [181, 0, 1, "", "ConditionalSkip"], [182, 0, 1, "", "Crop"], [183, 0, 1, "", "DTypeCastTransform"], [184, 0, 1, "", "DataLoadingPrimer"], [185, 0, 1, "", "DeviceCastTransform"], [186, 0, 1, "", "DiscreteActionProjection"], [187, 0, 1, "", "DoubleToFloat"], [188, 0, 1, "", "EndOfLifeTransform"], [189, 0, 1, "", "ExcludeTransform"], [190, 0, 1, "", "FiniteTensorDictCheck"], [191, 0, 1, "", "FlattenObservation"], [192, 0, 1, "", "FrameSkipTransform"], [193, 0, 1, "", "GrayScale"], [194, 0, 1, "", "Hash"], [195, 0, 1, "", "InitTracker"], [196, 0, 1, "", "KLRewardTransform"], [197, 0, 1, "", "LineariseRewards"], [198, 0, 1, "", "MultiAction"], [199, 0, 1, "", "NoopResetEnv"], [200, 0, 1, "", "ObservationNorm"], [201, 0, 1, "", "ObservationTransform"], [202, 0, 1, "", "PermuteTransform"], [203, 0, 1, "", "PinMemoryTransform"], [204, 0, 1, "", "R3MTransform"], [205, 0, 1, "", "RandomCropTensorDict"], [206, 0, 1, "", "RemoveEmptySpecs"], [207, 0, 1, "", "RenameTransform"], [208, 0, 1, "", "Resize"], [209, 0, 1, "", "Reward2GoTransform"], [210, 0, 1, "", "RewardClipping"], [211, 0, 1, "", "RewardScaling"], [212, 0, 1, "", "RewardSum"], [213, 0, 1, "", "SelectTransform"], [214, 0, 1, "", "SignTransform"], [215, 0, 1, "", "SqueezeTransform"], [216, 0, 1, "", "Stack"], [217, 0, 1, "", "StepCounter"], [218, 0, 1, "", "TargetReturn"], [219, 0, 1, "", "TensorDictPrimer"], [220, 0, 1, "", "TimeMaxPool"], [221, 0, 1, "", "Timer"], [222, 0, 1, "", "ToTensorImage"], [223, 0, 1, "", "Tokenizer"], [224, 0, 1, "", "TrajCounter"], [225, 0, 1, "", "Transform"], [226, 0, 1, "", "TransformedEnv"], [227, 0, 1, "", "UnaryTransform"], [228, 0, 1, "", "UnsqueezeTransform"], [229, 0, 1, "", "VC1Transform"], [230, 0, 1, "", "VIPRewardTransform"], [231, 0, 1, "", "VIPTransform"], [232, 0, 1, "", "VecGymEnvTransform"], [233, 0, 1, "", "VecNorm"], [234, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[169, 0, 1, "", "SamplingStrategy"], [169, 1, 1, "", "inv"], [169, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[171, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_env_batch_size"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[175, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "make_rb_transform_and_sampler"], [176, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[178, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[179, 1, 1, "", "transform_observation_spec"], [179, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[180, 1, 1, "", "append"], [180, 1, 1, "", "forward"], [180, 1, 1, "", "init"], [180, 1, 1, "", "insert"], [180, 1, 1, "", "to"], [180, 1, 1, "", "transform_action_spec"], [180, 1, 1, "", "transform_env_batch_size"], [180, 1, 1, "", "transform_env_device"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"], [180, 1, 1, "", "transform_output_spec"], [180, 1, 1, "", "transform_reward_spec"], [180, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_action_spec"], [185, 1, 1, "", "transform_done_spec"], [185, 1, 1, "", "transform_env_device"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_output_spec"], [185, 1, 1, "", "transform_reward_spec"], [185, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[186, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "register_keys"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[190, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[192, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[194, 1, 1, "", "get_input_from_hash"], [194, 1, 1, "", "reproducible_hash"], [194, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[197, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[200, 1, 1, "", "init_stats"], [200, 1, 1, "", "transform_action_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[203, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[204, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[205, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[209, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[210, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_observation_spec"], [212, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[214, 1, 1, "", "transform_observation_spec"], [214, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "transform_done_spec"], [216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "to"], [219, 1, 1, "", "transform_input_spec"], [219, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[222, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TrajCounter": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "load_state_dict"], [224, 1, 1, "", "state_dict"], [224, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[225, 1, 1, "", "clone"], [225, 4, 1, "", "container"], [225, 1, 1, "", "forward"], [225, 1, 1, "", "init"], [225, 1, 1, "", "inv"], [225, 4, 1, "", "parent"], [225, 1, 1, "", "reset_parent"], [225, 1, 1, "", "set_container"], [225, 1, 1, "", "to"], [225, 1, 1, "", "transform_action_spec"], [225, 1, 1, "", "transform_done_spec"], [225, 1, 1, "", "transform_env_batch_size"], [225, 1, 1, "", "transform_env_device"], [225, 1, 1, "", "transform_input_spec"], [225, 1, 1, "", "transform_observation_spec"], [225, 1, 1, "", "transform_output_spec"], [225, 1, 1, "", "transform_reward_spec"], [225, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[226, 1, 1, "", "add_truncated_keys"], [226, 1, 1, "", "append_transform"], [226, 4, 1, "", "batch_locked"], [226, 4, 1, "", "batch_size"], [226, 1, 1, "", "empty_cache"], [226, 1, 1, "", "eval"], [226, 4, 1, "", "input_spec"], [226, 1, 1, "", "insert_transform"], [226, 1, 1, "", "load_state_dict"], [226, 4, 1, "", "output_spec"], [226, 1, 1, "", "rand_action"], [226, 1, 1, "", "set_missing_tolerance"], [226, 1, 1, "", "set_seed"], [226, 1, 1, "", "state_dict"], [226, 1, 1, "", "to"], [226, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[227, 1, 1, "", "transform_action_spec"], [227, 1, 1, "", "transform_done_spec"], [227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_observation_spec"], [227, 1, 1, "", "transform_output_spec"], [227, 1, 1, "", "transform_reward_spec"], [227, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[228, 1, 1, "", "transform_action_spec"], [228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_reward_spec"], [228, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "make_noload_model"], [229, 1, 1, "", "to"], [229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[231, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[233, 1, 1, "", "build_td_for_shared_vecnorm"], [233, 1, 1, "", "forward"], [233, 1, 1, "", "freeze"], [233, 1, 1, "", "frozen_copy"], [233, 1, 1, "", "get_extra_state"], [233, 4, 1, "", "loc"], [233, 4, 1, "", "scale"], [233, 1, 1, "", "set_extra_state"], [233, 4, 1, "", "standard_normal"], [233, 1, 1, "", "to_observation_norm"], [233, 1, 1, "", "transform_observation_spec"], [233, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[235, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[235, 1, 1, "", "add_module"], [235, 1, 1, "", "apply"], [235, 1, 1, "", "bfloat16"], [235, 1, 1, "", "buffers"], [235, 1, 1, "", "children"], [235, 1, 1, "", "compile"], [235, 4, 1, "", "container"], [235, 1, 1, "", "cpu"], [235, 1, 1, "", "cuda"], [235, 1, 1, "", "double"], [235, 1, 1, "", "eval"], [235, 1, 1, "", "extra_repr"], [235, 1, 1, "", "float"], [235, 1, 1, "", "forward"], [235, 1, 1, "", "get_buffer"], [235, 1, 1, "", "get_extra_state"], [235, 1, 1, "", "get_parameter"], [235, 1, 1, "", "get_submodule"], [235, 1, 1, "", "half"], [235, 1, 1, "", "init"], [235, 1, 1, "", "inv"], [235, 1, 1, "", "ipu"], [235, 1, 1, "", "load_state_dict"], [235, 1, 1, "", "modules"], [235, 1, 1, "", "mtia"], [235, 4, 1, "", "n_steps"], [235, 1, 1, "", "named_buffers"], [235, 1, 1, "", "named_children"], [235, 1, 1, "", "named_modules"], [235, 1, 1, "", "named_parameters"], [235, 1, 1, "", "parameters"], [235, 4, 1, "", "parent"], [235, 1, 1, "", "register_backward_hook"], [235, 1, 1, "", "register_buffer"], [235, 1, 1, "", "register_forward_hook"], [235, 1, 1, "", "register_forward_pre_hook"], [235, 1, 1, "", "register_full_backward_hook"], [235, 1, 1, "", "register_full_backward_pre_hook"], [235, 1, 1, "", "register_load_state_dict_post_hook"], [235, 1, 1, "", "register_load_state_dict_pre_hook"], [235, 1, 1, "", "register_module"], [235, 1, 1, "", "register_parameter"], [235, 1, 1, "", "register_state_dict_post_hook"], [235, 1, 1, "", "register_state_dict_pre_hook"], [235, 1, 1, "", "requires_grad_"], [235, 1, 1, "", "set_extra_state"], [235, 1, 1, "", "set_submodule"], [235, 1, 1, "", "share_memory"], [235, 1, 1, "", "state_dict"], [235, 1, 1, "", "to"], [235, 1, 1, "", "to_empty"], [235, 1, 1, "", "train"], [235, 1, 1, "", "transform_action_spec"], [235, 1, 1, "", "transform_done_spec"], [235, 1, 1, "", "transform_env_batch_size"], [235, 1, 1, "", "transform_env_device"], [235, 1, 1, "", "transform_input_spec"], [235, 1, 1, "", "transform_observation_spec"], [235, 1, 1, "", "transform_output_spec"], [235, 1, 1, "", "transform_reward_spec"], [235, 1, 1, "", "transform_state_spec"], [235, 1, 1, "", "type"], [235, 1, 1, "", "xpu"], [235, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[236, 1, 1, "", "get_class_that_defined_method"], [236, 1, 1, "", "import_module"], [236, 1, 1, "", "module_set"], [236, 1, 1, "", "reset"]], "torchrl.modules": [[237, 0, 1, "", "AdditiveGaussianModule"], [238, 0, 1, "", "BatchRenorm1d"], [239, 0, 1, "", "CEMPlanner"], [240, 0, 1, "", "ConsistentDropout"], [241, 0, 1, "", "ConsistentDropoutModule"], [242, 0, 1, "", "Conv3dNet"], [243, 0, 1, "", "ConvNet"], [244, 0, 1, "", "DTActor"], [245, 0, 1, "", "DdpgCnnActor"], [246, 0, 1, "", "DdpgCnnQNet"], [247, 0, 1, "", "DdpgMlpActor"], [248, 0, 1, "", "DdpgMlpQNet"], [249, 0, 1, "", "DecisionTransformer"], [250, 0, 1, "", "Delta"], [251, 0, 1, "", "DistributionalDQNnet"], [252, 0, 1, "", "DistributionalQValueHook"], [253, 0, 1, "", "DreamerActor"], [254, 0, 1, "", "DuelingCnnDQNet"], [255, 0, 1, "", "EGreedyModule"], [256, 0, 1, "", "GRU"], [257, 0, 1, "", "GRUCell"], [258, 0, 1, "", "GRUModule"], [259, 0, 1, "", "IndependentNormal"], [260, 0, 1, "", "LSTM"], [261, 0, 1, "", "LSTMCell"], [262, 0, 1, "", "LSTMModule"], [263, 0, 1, "", "MLP"], [264, 0, 1, "", "MPCPlannerBase"], [265, 0, 1, "", "MPPIPlanner"], [266, 0, 1, "", "MaskedCategorical"], [267, 0, 1, "", "MaskedOneHotCategorical"], [268, 0, 1, "", "MultiAgentConvNet"], [269, 0, 1, "", "MultiAgentMLP"], [270, 0, 1, "", "MultiAgentNetBase"], [271, 0, 1, "", "NoisyLazyLinear"], [272, 0, 1, "", "NoisyLinear"], [273, 0, 1, "", "ObsDecoder"], [274, 0, 1, "", "ObsEncoder"], [275, 0, 1, "", "OneHotCategorical"], [276, 0, 1, "", "OneHotOrdinal"], [277, 0, 1, "", "OnlineDTActor"], [278, 0, 1, "", "Ordinal"], [279, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [280, 0, 1, "", "QMixer"], [281, 0, 1, "", "QValueHook"], [282, 0, 1, "", "RSSMPosterior"], [283, 0, 1, "", "RSSMPrior"], [284, 0, 1, "", "Squeeze2dLayer"], [285, 0, 1, "", "SqueezeLayer"], [286, 0, 1, "", "TanhDelta"], [287, 0, 1, "", "TanhNormal"], [288, 0, 1, "", "TruncatedNormal"], [289, 0, 1, "", "VDNMixer"], [290, 0, 1, "", "VmapModule"], [291, 0, 1, "", "recurrent_mode"], [292, 0, 1, "", "reset_noise"], [293, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[238, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[239, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[240, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[242, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[243, 1, 1, "", "default_atari_dqn"], [243, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[244, 1, 1, "", "default_config"], [244, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[245, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[246, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[247, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[248, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[249, 0, 1, "", "DTConfig"], [249, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[250, 1, 1, "", "expand"], [250, 1, 1, "", "log_prob"], [250, 4, 1, "", "mean"], [250, 4, 1, "", "mode"], [250, 1, 1, "", "rsample"], [250, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[251, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[253, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[254, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "step"]], "torchrl.modules.GRU": [[256, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[257, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_cudnn_based"], [258, 1, 1, "", "make_python_based"], [258, 1, 1, "id0", "make_tensordict_primer"], [258, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[259, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[260, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[261, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_cudnn_based"], [262, 1, 1, "", "make_python_based"], [262, 1, 1, "id0", "make_tensordict_primer"], [262, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[263, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[265, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[266, 1, 1, "", "log_prob"], [266, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[267, 1, 1, "", "log_prob"], [267, 4, 1, "", "mode"], [267, 1, 1, "", "rsample"], [267, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "from_stateful_net"], [270, 1, 1, "", "get_stateful_net"], [270, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[271, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[273, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[274, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[275, 1, 1, "", "entropy"], [275, 1, 1, "", "log_prob"], [275, 4, 1, "", "mode"], [275, 1, 1, "", "rsample"], [275, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[277, 1, 1, "", "default_config"], [277, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[280, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[282, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[283, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[285, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[286, 4, 1, "", "mean"], [286, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[287, 1, 1, "", "get_mode"], [287, 4, 1, "", "mean"], [287, 4, 1, "", "mode"], [287, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[288, 1, 1, "", "log_prob"], [288, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[289, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[290, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[294, 0, 1, "", "Actor"], [295, 0, 1, "", "ActorCriticOperator"], [296, 0, 1, "", "ActorCriticWrapper"], [297, 0, 1, "", "ActorValueOperator"], [298, 0, 1, "", "DecisionTransformerInferenceWrapper"], [299, 0, 1, "", "DistributionalQValueActor"], [300, 0, 1, "", "DistributionalQValueModule"], [301, 0, 1, "", "LMHeadActorValueOperator"], [302, 0, 1, "", "MultiStepActorWrapper"], [303, 0, 1, "", "ProbabilisticActor"], [304, 0, 1, "", "QValueActor"], [305, 0, 1, "", "QValueModule"], [306, 0, 1, "", "SafeModule"], [307, 0, 1, "", "SafeProbabilisticModule"], [308, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [309, 0, 1, "", "SafeSequential"], [310, 0, 1, "", "TanhModule"], [311, 0, 1, "", "ValueOperator"], [312, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[295, 1, 1, "", "get_critic_operator"], [295, 1, 1, "", "get_policy_head"], [295, 1, 1, "", "get_value_head"], [295, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[296, 1, 1, "", "get_policy_head"], [296, 1, 1, "", "get_policy_operator"], [296, 1, 1, "", "get_value_head"], [296, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[297, 1, 1, "", "get_policy_head"], [297, 1, 1, "", "get_policy_operator"], [297, 1, 1, "", "get_value_head"], [297, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "mask_context"], [298, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[300, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[302, 1, 1, "", "forward"], [302, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[305, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[306, 1, 1, "", "random"], [306, 1, 1, "", "random_sample"], [306, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[307, 1, 1, "", "random"], [307, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[310, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[312, 1, 1, "", "get_reward_operator"], [312, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[313, 0, 1, "", "biased_softplus"], [314, 0, 1, "", "get_primers_from_module"], [315, 0, 1, "", "inv_softplus"], [316, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[313, 1, 1, "", "forward"]], "torchrl.objectives": [[317, 0, 1, "", "A2CLoss"], [318, 0, 1, "", "CQLLoss"], [319, 0, 1, "", "ClipPPOLoss"], [320, 0, 1, "", "CrossQLoss"], [321, 0, 1, "", "DDPGLoss"], [322, 0, 1, "", "DQNLoss"], [323, 0, 1, "", "DTLoss"], [324, 0, 1, "", "DiscreteCQLLoss"], [325, 0, 1, "", "DiscreteIQLLoss"], [326, 0, 1, "", "DiscreteSACLoss"], [327, 0, 1, "", "DistributionalDQNLoss"], [328, 0, 1, "", "DreamerActorLoss"], [329, 0, 1, "", "DreamerModelLoss"], [330, 0, 1, "", "DreamerValueLoss"], [331, 0, 1, "", "GAILLoss"], [332, 0, 1, "", "HardUpdate"], [333, 0, 1, "", "IQLLoss"], [334, 0, 1, "", "KLPENPPOLoss"], [335, 0, 1, "", "LossModule"], [336, 0, 1, "", "OnlineDTLoss"], [337, 0, 1, "", "PPOLoss"], [338, 0, 1, "", "REDQLoss"], [339, 0, 1, "", "ReinforceLoss"], [340, 0, 1, "", "SACLoss"], [341, 0, 1, "", "SoftUpdate"], [342, 0, 1, "", "TD3BCLoss"], [343, 0, 1, "", "TD3Loss"], [344, 0, 1, "", "ValueEstimators"], [345, 0, 1, "", "default_value_kwargs"], [346, 0, 1, "", "distance_loss"], [347, 0, 1, "", "group_optimizers"], [348, 0, 1, "", "hold_out_net"], [349, 0, 1, "", "hold_out_params"], [351, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[317, 3, 1, "", "default_keys"], [317, 1, 1, "", "forward"], [317, 4, 1, "", "functional"], [317, 1, 1, "", "loss_critic"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[318, 3, 1, "", "default_keys"], [318, 1, 1, "", "forward"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[319, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[320, 1, 1, "", "actor_loss"], [320, 1, 1, "", "alpha_loss"], [320, 3, 1, "", "default_keys"], [320, 1, 1, "", "forward"], [320, 1, 1, "", "load_state_dict"], [320, 1, 1, "", "make_value_estimator"], [320, 1, 1, "", "maybe_init_target_entropy"], [320, 1, 1, "", "qvalue_loss"], [320, 1, 1, "", "set_keys"], [320, 1, 1, "", "state_dict"], [320, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[321, 3, 1, "", "default_keys"], [321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[322, 3, 1, "", "default_keys"], [322, 1, 1, "", "forward"], [322, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[323, 3, 1, "", "default_keys"], [323, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[324, 3, 1, "", "default_keys"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[325, 3, 1, "", "default_keys"], [325, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[326, 3, 1, "", "default_keys"], [326, 1, 1, "", "forward"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[327, 3, 1, "", "default_keys"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[328, 3, 1, "", "default_keys"], [328, 1, 1, "", "forward"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[329, 3, 1, "", "default_keys"], [329, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[330, 3, 1, "", "default_keys"], [330, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[331, 3, 1, "", "default_keys"], [331, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[333, 3, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "loss_value_diff"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[334, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[335, 1, 1, "", "convert_to_functional"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "from_stateful_net"], [335, 4, 1, "", "functional"], [335, 1, 1, "", "get_stateful_net"], [335, 1, 1, "", "make_value_estimator"], [335, 1, 1, "", "named_parameters"], [335, 1, 1, "", "parameters"], [335, 1, 1, "", "reset_parameters_recursive"], [335, 1, 1, "", "set_keys"], [335, 4, 1, "", "value_estimator"], [335, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[336, 3, 1, "", "default_keys"], [336, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[337, 3, 1, "", "default_keys"], [337, 1, 1, "", "forward"], [337, 4, 1, "", "functional"], [337, 1, 1, "", "loss_critic"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[338, 3, 1, "", "default_keys"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[339, 3, 1, "", "default_keys"], [339, 1, 1, "", "forward"], [339, 4, 1, "", "functional"], [339, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[340, 3, 1, "", "default_keys"], [340, 1, 1, "", "forward"], [340, 1, 1, "", "load_state_dict"], [340, 1, 1, "", "make_value_estimator"], [340, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[342, 1, 1, "", "actor_loss"], [342, 3, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"], [342, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[343, 3, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[350, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[350, 3, 1, "", "default_keys"], [350, 1, 1, "", "forward"], [350, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[352, 0, 1, "", "GAE"], [353, 0, 1, "", "TD0Estimator"], [354, 0, 1, "", "TD1Estimator"], [355, 0, 1, "", "TDLambdaEstimator"], [356, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[352, 1, 1, "", "forward"], [352, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[353, 1, 1, "", "forward"], [353, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[354, 1, 1, "", "forward"], [354, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[355, 1, 1, "", "forward"], [355, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[356, 3, 1, "", "default_keys"], [356, 1, 1, "", "forward"], [356, 1, 1, "", "set_keys"], [356, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[357, 0, 1, "", "generalized_advantage_estimate"], [358, 0, 1, "", "reward2go"], [359, 0, 1, "", "td0_advantage_estimate"], [360, 0, 1, "", "td0_return_estimate"], [361, 0, 1, "", "td1_advantage_estimate"], [362, 0, 1, "", "td1_return_estimate"], [363, 0, 1, "", "td_lambda_advantage_estimate"], [364, 0, 1, "", "td_lambda_return_estimate"], [365, 0, 1, "", "vec_generalized_advantage_estimate"], [366, 0, 1, "", "vec_td1_advantage_estimate"], [367, 0, 1, "", "vec_td1_return_estimate"], [368, 0, 1, "", "vec_td_lambda_advantage_estimate"], [369, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[370, 2, 1, "", "PixelRenderTransform"], [371, 2, 1, "", "TensorDictRecorder"], [372, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[373, 2, 1, "", "Logger"], [375, 2, 1, "", "generate_exp_name"], [376, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[374, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[377, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[378, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[379, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[381, 0, 1, "", "BatchSubSampler"], [382, 0, 1, "", "ClearCudaCache"], [383, 0, 1, "", "CountFramesLog"], [384, 0, 1, "", "LogScalar"], [385, 0, 1, "", "LogValidationReward"], [386, 0, 1, "", "OptimizerHook"], [387, 0, 1, "", "ReplayBufferTrainer"], [388, 0, 1, "", "RewardNormalizer"], [389, 0, 1, "", "SelectKeys"], [390, 0, 1, "", "Trainer"], [391, 0, 1, "", "TrainerHookBase"], [392, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[381, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[382, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[383, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[384, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[385, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[386, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[387, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[388, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[389, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[390, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[391, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[392, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[393, 2, 1, "", "correct_for_frame_skip"], [394, 2, 1, "", "get_stats_random_rollout"], [395, 2, 1, "", "make_collector_offpolicy"], [396, 2, 1, "", "make_collector_onpolicy"], [397, 2, 1, "", "make_dqn_loss"], [398, 2, 1, "", "make_replay_buffer"], [399, 2, 1, "", "make_target_updater"], [400, 2, 1, "", "make_trainer"], [401, 2, 1, "", "parallel_env_constructor"], [402, 2, 1, "", "sync_async_collector"], [403, 2, 1, "", "sync_sync_collector"], [404, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 408, 409, 410, 411, 413, 414, 415, 417, 419, 426, 427, 428, 432, 433], "instal": [0, 6, 7, 432], "get": [0, 418, 419, 420, 421, 422, 423], "start": [0, 418, 419, 420, 421, 422, 423], "tutori": [0, 415, 426, 427], "basic": [0, 430], "intermedi": [0, 8], "advanc": 0, "refer": [0, 406], "knowledg": [0, 407], "base": [0, 2, 7, 407, 417], "indic": 0, "tabl": 0, "collector": [1, 413, 414, 415, 416, 421, 423, 426, 427, 432], "packag": [1, 2, 3, 408, 409, 410, 411], "batch": [1, 3, 413, 428, 430], "size": [1, 3, 413, 430], "polici": [1, 2, 4, 409, 413, 415, 416, 417, 419, 423, 425, 426, 427, 428], "copi": 1, "replai": [1, 2, 3, 413, 414, 415, 416, 421, 423, 426, 427, 430, 432], "buffer": [1, 2, 3, 413, 414, 415, 416, 421, 423, 426, 427, 430, 432], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 413, 414, 415, 421, 423, 426, 427, 432], "distribut": [1, 408], "helper": [1, 3], "function": [1, 4, 409, 414, 415, 420, 426, 427, 432], "compos": [2, 180], "support": 2, "type": 2, "choos": 2, "storag": [2, 103, 413, 421, 430], "sampl": [2, 430], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 414, 430], "trajectori": [2, 430], "checkpoint": [2, 410], "episod": [2, 4], "format": 2, "ted": [2, 418], "The": [2, 413], "rational": 2, "behind": 2, "structur": [2, 430], "A": [2, 414, 430], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 408, 430, 432], "special": [2, 419, 432], "case": 2, "footnot": 2, "multi": [2, 3, 408, 409, 425, 426, 427], "agent": [2, 3, 4, 408, 409, 426, 427], "present": 2, "rnn": 2, "transform": [2, 3, 225, 413, 415, 418, 426, 427, 428, 430, 432, 433], "step": [2, 3, 413, 415, 418, 421, 426, 427, 430, 433], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 71], "numer": 2, "subclass": [2, 3], "categor": [2, 30], "tree": [2, 73], "forest": 2, "tensordictmap": [2, 66], "mctsforest": [2, 41], "reinforc": [2, 409, 415, 426, 427], "learn": [2, 4, 408, 415, 426, 427], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 408, 409, 410, 426], "env": [3, 428, 432, 433], "spec": [3, 428, 433], "lock": 3, "method": [3, 413], "partial": 3, "reset": [3, 428, 433], "environ": [3, 4, 6, 7, 413, 414, 415, 416, 418, 423, 425, 426, 427, 428, 432, 433], "vector": [3, 432], "custom": [3, 11, 428, 430], "nativ": 3, "auto": 3, "dynam": [3, 4, 430], "forward": [3, 4, 413], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 430], "expos": 3, "outsid": 3, "world": 3, "design": [3, 423], "your": [3, 4, 6, 413, 417, 423, 428], "own": [3, 423], "tip": 3, "us": [3, 4, 6, 9, 409, 416, 429, 430, 432], "clone": [3, 7], "mask": 3, "action": [3, 4, 409, 416, 428], "record": [3, 410, 413, 422], "video": [3, 11, 422], "domain": [3, 408], "specif": [3, 408, 425], "librari": [3, 432], "thing": [4, 413, 428], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 418, 420, 432], "gener": [4, 11, 408], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 408], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 413, 414, 420, 423], "return": [4, 409], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 432], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 425], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 413, 414, 415], "standard": 4, "explor": [4, 408, 413, 414, 419], "valu": [4, 408, 409, 413, 415, 416, 419], "loss": [4, 413, 414, 415, 416, 423, 426, 427], "earli": 4, "train": [4, 8, 409, 413, 415, 416, 417, 420, 423, 426, 427, 428], "roughli": 4, "uniformli": 4, "random": [4, 409, 426, 427], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 414], "increas": 4, "an": [4, 415, 416, 418, 428], "can": 4, "low": 4, "model": [4, 408, 413, 414, 416, 417, 420, 429, 432], "also": 4, "offlin": 4, "observ": [4, 413], "space": 4, "effect": [4, 428], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 417], "gym": [5, 432, 433], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 413], "render": [7, 11, 423, 426, 427, 433], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 413], "pytorch": [8, 9, 10, 417], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 428], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 414, 430], "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 417], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 42, "multidiscretetensorspec": 43, "multionehot": 44, "multionehotdiscretetensorspec": 45, "multistep": 46, "nested2t": 47, "nontensor": 48, "nontensorspec": 49, "onehot": 50, "onehotdiscretetensorspec": 51, "pairwisedataset": 52, "prioritizedreplaybuff": 53, "promptdata": 54, "prompttensordicttoken": 55, "querymodul": 56, "randomprojectionhash": 57, "replaybuff": 58, "rewarddata": 59, "rolloutfrommodel": 60, "siphash": 61, "stack": [62, 216], "stackedcomposit": 63, "ted2flat": 64, "ted2nest": 65, "tensordictprioritizedreplaybuff": 67, "tensordictreplaybuff": 68, "tensordicttoken": 69, "tensormap": 70, "tokenizeddatasetload": 72, "unbound": 74, "unboundedcontinu": 75, "unboundedcontinuoustensorspec": 76, "unboundeddiscret": 77, "unboundeddiscretetensorspec": 78, "check_no_exclusive_kei": 79, "consolidate_spec": 80, "contains_lazy_spec": 81, "create_infinite_iter": 82, "get_dataload": 83, "flatstoragecheckpoint": 84, "h5storagecheckpoint": 85, "immutabledatasetwrit": 86, "lazymemmapstorag": 87, "lazystackstorag": 88, "lazytensorstorag": 89, "liststorag": 90, "liststoragecheckpoint": 91, "nestedstoragecheckpoint": 92, "prioritizedsampl": 93, "prioritizedslicesampl": 94, "randomsampl": 95, "replaybufferensembl": 96, "roundrobinwrit": 97, "sampler": 98, "samplerensembl": 99, "samplerwithoutreplac": 100, "slicesampl": 101, "slicesamplerwithoutreplac": 102, "storagecheckpointerbas": 104, "storageensembl": 105, "storageensemblecheckpoint": 106, "tensordictmaxvaluewrit": 107, "tensordictroundrobinwrit": 108, "tensorstorag": 109, "tensorstoragecheckpoint": 110, "writer": 111, "writerensembl": 112, "braxenv": 113, "braxwrapp": 114, "chessenv": 115, "dmcontrolenv": 116, "dmcontrolwrapp": 117, "envbas": [118, 428], "envcreat": 119, "envmetadata": 120, "gymenv": 121, "gymlikeenv": 122, "gymwrapp": 123, "habitatenv": 124, "isaacgymenv": 125, "isaacgymwrapp": 126, "jumanjienv": 127, "jumanjiwrapp": 128, "llmenv": 129, "llmhashingenv": 130, "mogymenv": 131, "mogymwrapp": 132, "marlgroupmaptyp": 133, "meltingpotenv": 134, "meltingpotwrapp": 135, "modelbasedenvbas": 136, "multithreadedenv": 137, "multithreadedenvwrapp": 138, "openmlenv": 139, "openspielenv": 140, "openspielwrapp": 141, "parallelenv": 142, "pendulumenv": 143, "pettingzooenv": 144, "pettingzoowrapp": 145, "randompolici": 146, "robohiveenv": 147, "smacv2env": 148, "smacv2wrapp": 149, "serialenv": 150, "tictactoeenv": 151, "unitymlagentsenv": 152, "unitymlagentswrapp": 153, "vmasenv": 154, "vmaswrapp": 155, "check_env_spec": 156, "check_marl_group": 157, "exploration_typ": 158, "get_available_librari": 159, "gym_backend": 160, "make_composite_from_td": 161, "dreamerdecod": 162, "dreamerenv": 163, "register_gym_spec_convers": 164, "set_exploration_typ": 165, "set_gym_backend": 166, "step_mdp": 167, "terminated_or_trunc": 168, "actiondiscret": 169, "actionmask": 170, "autoresetenv": 171, "autoresettransform": 172, "batchsizetransform": 173, "binarizereward": 174, "burnintransform": 175, "catfram": [176, 430], "cattensor": 177, "centercrop": 178, "cliptransform": 179, "conditionalskip": 181, "crop": 182, "dtypecasttransform": 183, "dataloadingprim": 184, "devicecasttransform": 185, "discreteactionproject": 186, "doubletofloat": 187, "endoflifetransform": 188, "excludetransform": 189, "finitetensordictcheck": 190, "flattenobserv": 191, "frameskiptransform": 192, "grayscal": 193, "hash": 194, "inittrack": 195, "klrewardtransform": 196, "linearisereward": 197, "multiact": 198, "noopresetenv": 199, "observationnorm": 200, "observationtransform": 201, "permutetransform": 202, "pinmemorytransform": 203, "r3mtransform": 204, "randomcroptensordict": 205, "removeemptyspec": 206, "renametransform": 207, "resiz": 208, "reward2gotransform": 209, "rewardclip": 210, "rewardsc": 211, "rewardsum": 212, "selecttransform": 213, "signtransform": 214, "squeezetransform": 215, "stepcount": 217, "targetreturn": 218, "tensordictprim": 219, "timemaxpool": 220, "timer": 221, "totensorimag": 222, "token": 223, "trajcount": 224, "transformedenv": 226, "unarytransform": 227, "unsqueezetransform": 228, "vc1transform": 229, "viprewardtransform": 230, "viptransform": 231, "vecgymenvtransform": 232, "vecnorm": [233, 433], "gsdenois": 234, "multisteptransform": 235, "implement_for": 236, "additivegaussianmodul": 237, "batchrenorm1d": 238, "cemplann": 239, "consistentdropout": 240, "consistentdropoutmodul": 241, "conv3dnet": 242, "convnet": 243, "dtactor": 244, "ddpgcnnactor": 245, "ddpgcnnqnet": 246, "ddpgmlpactor": 247, "ddpgmlpqnet": 248, "decisiontransform": 249, "delta": 250, "distributionaldqnnet": 251, "distributionalqvaluehook": 252, "dreameractor": 253, "duelingcnndqnet": 254, "egreedymodul": 255, "gru": 256, "grucel": 257, "grumodul": 258, "independentnorm": 259, "lstm": [260, 416], "lstmcell": 261, "lstmmodul": 262, "mlp": [263, 416], "mpcplannerbas": 264, "mppiplann": 265, "maskedcategor": 266, "maskedonehotcategor": 267, "multiagentconvnet": 268, "multiagentmlp": 269, "multiagentnetbas": 270, "noisylazylinear": 271, "noisylinear": 272, "obsdecod": 273, "obsencod": 274, "onehotcategor": 275, "onehotordin": 276, "onlinedtactor": 277, "ordin": 278, "ornsteinuhlenbeckprocessmodul": 279, "qmixer": [280, 409], "qvaluehook": 281, "rssmposterior": 282, "rssmprior": 283, "squeeze2dlay": 284, "squeezelay": 285, "tanhdelta": 286, "tanhnorm": 287, "truncatednorm": 288, "vdnmixer": 289, "vmapmodul": 290, "recurrent_mod": 291, "reset_nois": 292, "set_recurrent_mod": 293, "actor": [294, 408, 413, 419], "actorcriticoper": 295, "actorcriticwrapp": 296, "actorvalueoper": 297, "decisiontransformerinferencewrapp": 298, "distributionalqvalueactor": 299, "distributionalqvaluemodul": 300, "lmheadactorvalueoper": 301, "multistepactorwrapp": 302, "probabilisticactor": 303, "qvalueactor": [304, 408], "qvaluemodul": 305, "safemodul": [306, 408], "safeprobabilisticmodul": 307, "safeprobabilistictensordictsequenti": 308, "safesequenti": 309, "tanhmodul": 310, "valueoper": 311, "worldmodelwrapp": 312, "biased_softplu": 313, "get_primers_from_modul": 314, "inv_softplu": 315, "map": [316, 426], "a2closs": 317, "cqlloss": 318, "clipppoloss": 319, "crossqloss": 320, "ddpgloss": 321, "dqnloss": 322, "dtloss": 323, "discretecqlloss": 324, "discreteiqlloss": 325, "discretesacloss": 326, "distributionaldqnloss": 327, "dreameractorloss": 328, "dreamermodelloss": 329, "dreamervalueloss": 330, "gailloss": 331, "hardupd": 332, "iqlloss": 333, "klpenppoloss": 334, "lossmodul": [335, 413, 420], "onlinedtloss": 336, "ppoloss": 337, "redqloss": 338, "reinforceloss": 339, "sacloss": 340, "softupd": 341, "td3bcloss": 342, "td3loss": 343, "valueestim": 344, "default_value_kwarg": 345, "distance_loss": 346, "group_optim": 347, "hold_out_net": 348, "hold_out_param": 349, "qmixerloss": 350, "next_state_valu": 351, "gae": 352, "td0estim": 353, "td1estim": 354, "tdlambdaestim": 355, "valueestimatorbas": 356, "generalized_advantage_estim": 357, "reward2go": 358, "td0_advantage_estim": 359, "td0_return_estim": 360, "td1_advantage_estim": 361, "td1_return_estim": 362, "td_lambda_advantage_estim": 363, "td_lambda_return_estim": 364, "vec_generalized_advantage_estim": 365, "vec_td1_advantage_estim": 366, "vec_td1_return_estim": 367, "vec_td_lambda_advantage_estim": 368, "vec_td_lambda_return_estim": 369, "pixelrendertransform": 370, "tensordictrecord": 371, "videorecord": 372, "logger": [373, 410, 422, 423], "csvlogger": 374, "generate_exp_nam": 375, "get_logg": 376, "mlflowlogg": 377, "tensorboardlogg": 378, "wandblogg": 379, "set_auto_unwrap_transformed_env": 380, "batchsubsampl": 381, "clearcudacach": 382, "countframeslog": 383, "logscalar": 384, "logvalidationreward": 385, "optimizerhook": 386, "replaybuffertrain": 387, "rewardnorm": 388, "selectkei": 389, "trainer": [390, 410, 414], "trainerhookbas": 391, "updateweight": 392, "correct_for_frame_skip": 393, "get_stats_random_rollout": 394, "make_collector_offpolici": 395, "make_collector_onpolici": 396, "make_dqn_loss": 397, "make_replay_buff": 398, "make_target_updat": 399, "make_train": 400, "parallel_env_constructor": 401, "sync_async_collector": 402, "sync_sync_collector": 403, "transformed_env_constructor": 404, "readm": [405, 424], "tuto": [405, 424], "api": 406, "contribut": [407, 432], "content": 407, "modul": [408, 413, 416, 417, 419, 423, 432], "tensordictmodul": [408, 417, 419, 432], "wrapper": [408, 419], "probabilist": [408, 419], "q": [408, 414, 416, 419], "oper": 408, "join": 408, "hook": [408, 410, 414], "regular": 408, "planner": 408, "object": [409, 413, 420, 432], "torch": 409, "vmap": [409, 432], "dqn": [409, 414, 416], "ddpg": [409, 413, 426], "sac": 409, "redq": 409, "crossq": 409, "iql": 409, "cql": 409, "gail": 409, "dt": 409, "td3": 409, "bc": 409, "ppo": [409, 415, 427], "head": 409, "a2c": 409, "dreamer": 409, "builder": 410, "_util": 411, "comput": [412, 414, 428, 431], "time": [412, 413, 431], "code": [413, 428], "overview": [413, 416], "setup": [413, 416], "__init__": 413, "estim": 413, "put": 413, "togeth": [413, 428], "call": 413, "parallel": [413, 425, 433], "execut": [413, 425, 428], "stat": 413, "build": [413, 414, 423, 430], "evalu": 413, "construct": 413, "target": [413, 414, 420], "network": [413, 414, 415, 416, 419, 426, 427], "updat": 413, "experi": [413, 428], "result": [413, 415, 426, 427], "conclus": [413, 414, 415, 416, 417, 426, 427, 428, 430], "next": [413, 415, 418, 421, 426, 427, 430], "deep": 414, "collect": [414, 415, 421], "paramet": [414, 415, 420], "hyperparamet": [414, 415, 426, 427], "regist": 414, "possibl": 414, "improv": 414, "defin": [415, 426, 427], "loop": [415, 416, 417, 423, 426, 427, 428], "recurr": [416, 417], "convolut": 416, "select": 416, "further": [416, 420], "read": 416, "export": 417, "introduct": [417, 432], "fast": 417, "recap": 417, "simpl": [417, 428], "stochast": 417, "aotinductor": 417, "free": 417, "c": 417, "onnx": 417, "run": [417, 418, 433], "rollout": [417, 418, 425, 426, 427, 428, 433], "creat": 418, "s": [419, 420], "output": 420, "consider": 420, "log": 422, "first": 423, "divers": 425, "competit": 426, "group": 426, "critic": [426, 427], "pendulum": 428, "write": 428, "_step": 428, "simul": 428, "_reset": 428, "metadata": 428, "_spec": 428, "shape": 428, "seed": [428, 433], "wrap": 428, "class": [428, 432], "test": 428, "our": 428, "pretrain": 429, "vanilla": 430, "integr": 430, "tensorclass": 430, "other": 430, "pytre": 430, "iter": 430, "over": 430, "fix": 430, "priorit": 430, "save": 430, "raw": 430, "imag": 430, "more": 430, "complex": 430, "config": 432, "sequenc": 432, "program": 432, "ensembl": 432, "meta": 432, "sync": 432, "multiprocess": 432, "async": 432, "frame_skip": 433, "deepmind": 433, "control": 433, "devic": 433, "close": 433, "access": 433, "attribut": 433, "kwarg": 433}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})