Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater.rst", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "LocalWeightUpdaterBase", "MultiProcessedRemoteWeightUpdate", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayRemoteWeightUpdater", "RemoteWeightUpdaterBase", "SyncDataCollector", "VanillaLocalWeightUpdater", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 93, 97, 98, 99, 100, 101, 105, 107, 108, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 147, 148, 150, 153, 154, 155, 156, 158, 161, 162, 163, 167, 168, 180, 181, 183, 184, 186, 187, 189, 194, 195, 197, 198, 201, 205, 210, 211, 215, 216, 217, 218, 220, 229, 230, 231, 232, 233, 235, 236, 237, 240, 243, 244, 246, 249, 253, 254, 256, 257, 258, 259, 261, 266, 267, 269, 271, 273, 274, 275, 279, 280, 282, 290, 295, 296, 298, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 323, 327, 328, 329, 330, 331, 333, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 363, 364, 365, 366, 367, 381, 383, 386, 390, 396, 397, 401, 402, 405, 412, 413, 414, 415, 418, 419, 420, 424, 425, 428, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 443, 444], "open": [0, 5, 7, 45, 46, 47, 61, 63, 70, 84, 98, 247, 425, 437, 438, 443], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "reinforc": [0, 1, 3, 9, 145, 146, 187, 251, 256, 257, 258, 259, 263, 290, 311, 328, 329, 331, 334, 335, 336, 338, 343, 344, 350, 351, 352, 353, 417, 423, 425, 429, 430, 435, 439, 442, 443], "learn": [0, 1, 3, 7, 8, 9, 23, 55, 129, 145, 146, 150, 153, 161, 187, 251, 256, 257, 258, 259, 263, 276, 283, 289, 290, 311, 328, 329, 331, 334, 335, 336, 338, 342, 343, 344, 349, 350, 351, 352, 353, 417, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 443, 444], "rl": [0, 1, 2, 3, 5, 8, 10, 16, 17, 20, 22, 147, 187, 229, 283, 305, 314, 322, 328, 330, 345, 346, 348, 350, 392, 416, 418, 419, 420, 421, 424, 425, 426, 432, 435, 437, 438, 440, 441, 444], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 16, 17, 23, 24, 25, 64, 80, 126, 127, 128, 137, 148, 170, 417, 418, 419, 420, 422, 424, 425, 426, 428, 429, 430, 432, 437, 438, 439, 444], "pytorch": [0, 1, 2, 3, 28, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 167, 187, 232, 233, 251, 267, 271, 282, 283, 401, 416, 418, 419, 421, 424, 426, 427, 431, 435, 437, 438, 439, 443, 444], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 32, 39, 44, 55, 65, 66, 72, 77, 80, 126, 129, 133, 137, 140, 141, 144, 145, 146, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 177, 187, 208, 236, 244, 246, 251, 271, 289, 318, 390, 391, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 104, 105, 107, 111, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 175, 177, 179, 180, 181, 183, 184, 186, 187, 190, 191, 192, 194, 195, 197, 198, 199, 202, 205, 209, 210, 211, 215, 216, 220, 223, 227, 228, 229, 230, 234, 235, 236, 237, 238, 240, 242, 244, 246, 247, 250, 252, 253, 254, 256, 266, 267, 269, 270, 271, 273, 275, 276, 279, 280, 281, 283, 290, 299, 301, 305, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 381, 383, 390, 391, 396, 413, 414, 415, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "directli": [0, 4, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 107, 124, 125, 126, 129, 132, 133, 140, 141, 147, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 211, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 240, 241, 243, 244, 246, 318, 346, 353, 415, 425, 426, 428, 429, 437, 438, 439, 441], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 211, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 286, 288, 289, 290, 291, 292, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 344, 345, 346, 348, 349, 350, 351, 353, 354, 356, 361, 362, 363, 364, 365, 366, 369, 381, 382, 383, 392, 398, 401, 404, 405, 409, 411, 412, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444], "pypi": [0, 2, 443], "see": [0, 1, 2, 3, 6, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 94, 99, 105, 107, 112, 113, 126, 129, 133, 136, 139, 140, 141, 145, 146, 148, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 187, 191, 192, 195, 209, 215, 230, 233, 235, 236, 237, 240, 242, 244, 245, 246, 251, 252, 253, 254, 267, 269, 270, 271, 273, 274, 280, 281, 282, 289, 291, 299, 300, 304, 306, 308, 314, 317, 318, 331, 342, 346, 353, 383, 390, 398, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 441, 443, 444], "more": [0, 1, 2, 3, 4, 6, 8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 105, 107, 118, 126, 129, 132, 133, 134, 136, 137, 139, 140, 141, 145, 146, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 187, 233, 236, 240, 245, 246, 247, 248, 249, 252, 263, 271, 274, 282, 305, 310, 311, 317, 318, 322, 328, 338, 346, 348, 363, 368, 376, 390, 397, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 443, 444], "about": [0, 3, 5, 7, 9, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 80, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 419, 420, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 443, 444], "instruct": [0, 6, 7, 10, 27, 197, 199, 420, 424, 425, 426, 427, 437, 438, 441], "dedic": [0, 1, 2, 3, 23, 24, 25, 26, 50, 69, 78, 79, 107, 153, 161, 306, 307, 308, 419, 424, 429, 431, 432, 434, 436, 438], "section": [0, 2, 3, 4, 29, 129, 267, 271, 425, 428, 429, 434, 437, 438], "below": [0, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 85, 94, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 192, 195, 209, 215, 230, 235, 236, 237, 240, 242, 246, 253, 254, 267, 270, 271, 274, 280, 299, 314, 317, 398, 424, 425, 426, 427, 428, 429, 437, 439], "pip": [0, 10, 428, 429, 430, 431, 432, 433, 434, 438, 443, 444], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 50, 51, 53, 55, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 83, 84, 91, 94, 98, 99, 101, 105, 106, 107, 110, 112, 113, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 178, 179, 180, 184, 186, 187, 188, 189, 190, 193, 194, 198, 202, 205, 210, 211, 213, 215, 216, 219, 220, 223, 224, 229, 230, 231, 234, 235, 237, 239, 240, 242, 243, 244, 246, 247, 253, 254, 260, 261, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 301, 305, 309, 311, 313, 314, 315, 316, 318, 321, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 387, 392, 398, 405, 411, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "python": [0, 3, 5, 6, 7, 10, 16, 17, 26, 62, 67, 68, 69, 72, 77, 78, 79, 84, 107, 149, 163, 164, 177, 267, 268, 269, 271, 272, 273, 277, 278, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 100, 105, 112, 113, 118, 120, 126, 129, 132, 133, 134, 139, 140, 141, 153, 154, 161, 162, 183, 184, 187, 188, 192, 202, 209, 211, 215, 216, 232, 233, 237, 240, 247, 254, 261, 267, 269, 271, 273, 274, 277, 278, 280, 282, 285, 305, 309, 310, 311, 314, 315, 317, 318, 330, 340, 345, 346, 348, 382, 383, 400, 419, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "low": [0, 3, 33, 36, 66, 77, 82, 85, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 180, 190, 197, 205, 208, 230, 238, 297, 298, 299, 309, 311, 314, 318, 321, 424, 425, 426, 428, 437, 438, 439, 443], "high": [0, 3, 9, 33, 36, 45, 46, 47, 61, 63, 70, 78, 84, 85, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 180, 190, 197, 205, 208, 210, 230, 238, 297, 298, 299, 309, 311, 314, 318, 321, 363, 368, 376, 424, 425, 426, 437, 438, 439, 441, 443], "level": [0, 2, 3, 4, 27, 36, 37, 48, 62, 67, 68, 69, 74, 78, 79, 107, 132, 134, 187, 228, 236, 269, 273, 345, 424, 425, 428, 432, 443], "abstract": [0, 1, 3, 8, 14, 19, 81, 82, 122, 129, 212, 275, 367, 393, 402, 421, 426, 428, 439, 443], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 103, 107, 110, 111, 112, 113, 114, 116, 118, 120, 126, 129, 130, 132, 133, 134, 139, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 172, 178, 179, 180, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 205, 207, 208, 209, 210, 213, 215, 220, 223, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 248, 250, 251, 259, 261, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 281, 283, 286, 291, 294, 304, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 357, 358, 361, 362, 363, 364, 365, 366, 367, 381, 390, 391, 398, 401, 411, 415, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "intend": [0, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 186, 197, 301, 346, 419, 443], "effici": [0, 1, 2, 4, 8, 18, 126, 129, 133, 140, 141, 153, 154, 161, 162, 267, 283, 331, 419, 424, 425, 426, 427, 428, 431, 432, 434, 436, 437, 438, 440, 441, 443], "modular": [0, 320, 428, 441, 443], "document": [0, 2, 5, 7, 11, 23, 24, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 164, 237, 246, 416, 425, 427, 428, 429, 432, 435, 443], "properli": [0, 1, 3, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 192, 269, 273, 426, 433, 437, 438, 439, 443], "test": [0, 3, 5, 124, 125, 126, 129, 133, 138, 139, 140, 141, 145, 146, 153, 154, 161, 162, 167, 195, 235, 240, 269, 273, 396, 411, 426, 427, 428, 440, 443], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 104, 105, 107, 110, 112, 113, 114, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 165, 166, 167, 175, 178, 179, 180, 183, 184, 186, 187, 191, 192, 194, 195, 198, 199, 200, 205, 208, 209, 211, 213, 215, 220, 222, 223, 224, 227, 228, 229, 230, 232, 235, 236, 237, 240, 242, 243, 244, 246, 248, 249, 250, 251, 256, 257, 258, 259, 260, 263, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 283, 287, 289, 290, 292, 293, 294, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 369, 381, 383, 385, 388, 389, 390, 391, 392, 397, 411, 413, 414, 417, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444], "code": [0, 3, 5, 7, 8, 16, 17, 66, 72, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 215, 237, 240, 249, 267, 268, 269, 271, 272, 273, 314, 318, 320, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444], "aim": [0, 2, 3, 7, 50, 73, 74, 215, 240, 242, 274, 404, 418, 419, 420, 424, 425, 443], "support": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 39, 45, 46, 47, 61, 63, 65, 70, 77, 84, 94, 98, 100, 114, 116, 120, 121, 123, 124, 125, 126, 132, 134, 138, 148, 150, 153, 155, 158, 170, 184, 187, 199, 205, 211, 230, 231, 234, 238, 263, 287, 289, 298, 301, 310, 311, 314, 317, 320, 338, 346, 363, 364, 365, 366, 388, 417, 419, 421, 426, 427, 429, 430, 438, 439, 441, 443], "research": [0, 7, 9, 145, 146, 249, 443], "most": [0, 1, 2, 3, 7, 8, 16, 17, 55, 57, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 197, 243, 424, 426, 428, 429, 430, 431, 432, 433, 434, 439, 443, 444], "written": [0, 1, 2, 3, 41, 45, 46, 47, 61, 62, 63, 65, 67, 68, 69, 70, 75, 78, 79, 83, 84, 96, 98, 105, 107, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 178, 179, 180, 187, 199, 202, 207, 208, 223, 228, 231, 232, 237, 243, 246, 247, 252, 290, 305, 314, 317, 318, 322, 328, 330, 345, 348, 350, 362, 381, 382, 383, 419, 420, 421, 424, 427, 428, 430, 436, 439, 443], "highli": [0, 2, 429, 443, 444], "wai": [0, 1, 2, 3, 4, 107, 118, 137, 187, 215, 218, 235, 236, 242, 243, 269, 271, 273, 348, 363, 364, 365, 366, 419, 424, 425, 426, 428, 429, 431, 432, 436, 437, 438, 439, 440, 441, 443, 444], "easili": [0, 1, 2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 420, 424, 425, 426, 429, 430, 431, 434, 437, 438, 443, 444], "swap": [0, 1, 3, 132, 243, 426, 428, 440, 443], "compon": [0, 1, 2, 3, 62, 66, 67, 68, 69, 78, 79, 98, 99, 100, 101, 107, 114, 116, 120, 263, 292, 310, 311, 316, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 397, 401, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 443], "transform": [0, 1, 4, 8, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 39, 50, 55, 62, 64, 67, 68, 69, 71, 78, 79, 80, 95, 96, 103, 107, 116, 121, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 173, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 252, 255, 256, 260, 263, 264, 269, 273, 288, 291, 292, 298, 300, 309, 312, 313, 321, 324, 325, 327, 334, 347, 381, 383, 398, 415, 417, 423, 425, 427, 428, 430, 432, 433, 434, 435, 440, 442], "them": [0, 2, 3, 7, 9, 11, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 62, 64, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 107, 118, 123, 126, 129, 130, 133, 137, 140, 141, 144, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 194, 198, 205, 208, 230, 234, 237, 238, 244, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 300, 301, 309, 311, 313, 316, 321, 324, 345, 383, 424, 425, 427, 428, 429, 430, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "write": [0, 2, 3, 8, 28, 45, 46, 47, 50, 55, 61, 62, 63, 64, 67, 68, 69, 70, 78, 79, 83, 84, 105, 107, 112, 116, 123, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 181, 183, 184, 186, 187, 188, 190, 191, 192, 196, 199, 200, 201, 203, 206, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 246, 305, 317, 318, 320, 322, 331, 332, 333, 335, 336, 337, 344, 349, 351, 353, 354, 362, 367, 383, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444], "new": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 104, 105, 107, 111, 126, 129, 133, 140, 141, 148, 153, 154, 159, 160, 161, 162, 178, 179, 184, 223, 227, 236, 237, 244, 246, 261, 267, 269, 273, 290, 317, 318, 323, 328, 329, 330, 333, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 390, 420, 424, 426, 429, 431, 437, 438, 439, 443, 444], "ones": [0, 2, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 112, 113, 126, 129, 133, 140, 141, 153, 154, 155, 156, 157, 161, 162, 188, 191, 194, 196, 198, 211, 215, 220, 227, 230, 236, 237, 240, 242, 246, 251, 277, 278, 289, 301, 317, 328, 329, 331, 332, 344, 348, 349, 351, 353, 354, 369, 424, 426, 428, 437, 438, 439, 441, 443, 444], "littl": [0, 1, 3, 80, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 251, 328, 330, 345, 348, 350, 426, 427, 428, 432, 441, 443, 444], "effort": [0, 3, 439, 441, 443], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 120, 121, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 167, 175, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 211, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 296, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 361, 363, 364, 365, 366, 367, 381, 382, 390, 391, 392, 394, 396, 398, 401, 403, 404, 405, 411, 415, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "repo": [0, 6, 187, 231, 240, 418, 438, 443], "attempt": [0, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 178, 195, 246, 251, 318, 333, 336, 344, 361, 420, 431, 443], "align": [0, 267, 271, 443], "exist": [0, 1, 2, 3, 4, 23, 26, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 196, 235, 237, 246, 247, 261, 318, 331, 351, 405, 415, 437, 438, 443, 444], "ecosystem": [0, 428, 432, 443], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 107, 110, 112, 118, 120, 126, 129, 130, 133, 137, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 184, 187, 195, 209, 228, 229, 230, 231, 232, 234, 235, 236, 237, 246, 248, 267, 269, 271, 273, 279, 281, 298, 311, 313, 318, 328, 331, 345, 346, 348, 350, 383, 420, 424, 425, 426, 427, 428, 429, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "dataset": [0, 43, 45, 46, 47, 50, 61, 62, 63, 64, 69, 70, 71, 76, 78, 79, 83, 84, 94, 97, 105, 107, 110, 112, 113, 140, 150, 195, 244, 383, 417, 424, 425, 429, 440, 441, 443, 444], "pillar": [0, 443], "environ": [0, 2, 5, 8, 10, 15, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 181, 183, 184, 186, 187, 188, 192, 194, 195, 196, 197, 198, 203, 209, 210, 211, 215, 216, 217, 220, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 243, 244, 247, 250, 252, 269, 273, 275, 276, 313, 335, 339, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 391, 392, 394, 396, 404, 405, 406, 407, 411, 412, 413, 414, 415, 417, 418, 419, 420, 423, 428, 430, 431, 432, 433, 435, 440, 441, 442], "model": [0, 1, 3, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 194, 215, 230, 240, 242, 245, 246, 253, 254, 255, 260, 262, 269, 273, 274, 275, 276, 280, 281, 288, 291, 300, 306, 307, 308, 312, 317, 323, 325, 328, 329, 330, 331, 333, 334, 335, 336, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 361, 401, 406, 407, 408, 417, 418, 420, 421, 423, 426, 429, 432, 435, 437, 438, 439, 441, 442, 444], "data": [0, 3, 8, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 167, 172, 179, 181, 184, 186, 187, 194, 195, 196, 198, 200, 202, 205, 207, 211, 217, 220, 227, 228, 234, 236, 237, 238, 243, 246, 250, 251, 263, 266, 269, 273, 276, 279, 280, 290, 292, 301, 304, 305, 310, 313, 314, 315, 317, 318, 320, 321, 322, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 381, 383, 390, 392, 398, 401, 403, 406, 411, 413, 414, 415, 417, 419, 420, 421, 423, 427, 428, 429, 430, 431, 435, 439, 440, 441, 442, 444], "util": [0, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 32, 39, 44, 55, 65, 66, 69, 71, 72, 77, 112, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 146, 153, 154, 155, 156, 161, 162, 168, 187, 215, 220, 230, 242, 246, 249, 252, 253, 254, 260, 267, 269, 271, 273, 324, 325, 326, 327, 346, 411, 417, 422, 424, 426, 428, 430, 431, 432, 438, 439, 441, 443, 444], "e": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 100, 104, 105, 118, 120, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 167, 184, 186, 188, 191, 192, 193, 195, 202, 205, 208, 209, 211, 215, 223, 230, 232, 235, 236, 237, 240, 242, 246, 247, 267, 269, 270, 271, 273, 276, 280, 292, 298, 299, 304, 309, 311, 313, 314, 316, 317, 318, 328, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 362, 363, 364, 365, 366, 381, 392, 404, 414, 419, 420, 425, 426, 428, 430, 431, 433, 437, 438, 440, 441, 443, 444], "g": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 118, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 167, 184, 186, 188, 191, 195, 202, 205, 208, 211, 215, 223, 230, 232, 235, 236, 237, 240, 242, 246, 247, 267, 269, 270, 271, 272, 273, 276, 280, 298, 299, 309, 314, 317, 318, 331, 351, 362, 372, 373, 374, 375, 377, 378, 379, 380, 381, 414, 419, 420, 425, 426, 428, 430, 433, 437, 438, 439, 440, 441, 443, 444], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 55, 62, 67, 68, 69, 71, 75, 78, 79, 107, 112, 113, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 184, 187, 220, 228, 246, 251, 269, 273, 290, 398, 401, 403, 406, 407, 411, 413, 414, 417, 420, 421, 428, 441, 444], "contain": [0, 2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 97, 104, 105, 107, 108, 110, 112, 113, 114, 119, 122, 123, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 178, 179, 180, 187, 191, 194, 198, 205, 215, 227, 230, 235, 236, 237, 240, 242, 243, 244, 246, 250, 253, 254, 267, 268, 271, 272, 274, 276, 279, 280, 305, 310, 311, 314, 316, 317, 318, 322, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 369, 387, 392, 404, 411, 412, 413, 414, 415, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444], "etc": [0, 2, 3, 7, 8, 32, 39, 44, 50, 55, 65, 66, 72, 77, 82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 227, 237, 246, 247, 274, 280, 298, 420, 425, 426, 432, 441, 443, 444], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 16, 17, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 107, 111, 114, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 167, 172, 175, 179, 180, 183, 187, 194, 195, 198, 199, 207, 210, 211, 227, 228, 230, 234, 235, 236, 237, 244, 246, 248, 251, 253, 254, 274, 279, 280, 281, 290, 301, 313, 319, 320, 328, 330, 345, 348, 350, 353, 357, 358, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 392, 401, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "few": [0, 2, 8, 113, 133, 383, 392, 426, 427, 430, 437, 438, 441, 443, 444], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 33, 61, 63, 85, 126, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 165, 166, 194, 198, 318, 322, 348, 385, 419, 424, 426, 427, 437, 438, 439, 443, 444], "possibl": [0, 1, 2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 99, 105, 112, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 191, 215, 230, 235, 236, 237, 240, 242, 246, 253, 254, 267, 268, 271, 272, 317, 381, 396, 401, 419, 424, 426, 427, 428, 430, 432, 433, 437, 438, 439, 441, 443, 444], "standard": [0, 2, 3, 57, 126, 211, 222, 244, 248, 249, 250, 264, 276, 282, 283, 288, 309, 330, 345, 348, 353, 354, 363, 364, 365, 366, 424, 425, 429, 430, 438, 441, 443], "numpi": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 205, 233, 238, 247, 401, 428, 439, 441, 443, 444], "common": [0, 1, 2, 3, 4, 82, 133, 138, 181, 199, 306, 307, 308, 312, 328, 329, 330, 331, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 411, 418, 419, 420, 421, 424, 426, 430, 433, 436, 437, 438, 439, 440, 443, 444], "openai": [0, 7, 29, 132, 134, 141, 158, 426, 439, 443, 444], "gym": [0, 1, 3, 4, 8, 16, 17, 20, 22, 26, 27, 67, 126, 129, 130, 132, 133, 134, 135, 137, 140, 141, 145, 146, 148, 149, 153, 154, 158, 161, 162, 165, 166, 171, 175, 177, 183, 187, 190, 199, 206, 207, 211, 213, 218, 220, 223, 230, 236, 243, 244, 246, 247, 411, 418, 424, 425, 426, 427, 429, 433, 434, 439, 440, 441], "onli": [0, 1, 2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 104, 105, 107, 112, 113, 120, 126, 127, 128, 129, 132, 133, 134, 135, 137, 139, 140, 141, 148, 149, 153, 154, 155, 156, 158, 161, 162, 180, 183, 187, 188, 190, 191, 192, 194, 195, 197, 198, 202, 205, 209, 211, 215, 216, 220, 227, 228, 229, 230, 231, 235, 236, 237, 240, 242, 244, 246, 247, 251, 271, 273, 279, 280, 305, 309, 310, 314, 315, 317, 318, 319, 320, 328, 330, 331, 332, 336, 337, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 363, 364, 365, 366, 367, 383, 390, 405, 420, 421, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 443, 444], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 215, 216, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 299, 301, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 385, 388, 390, 392, 394, 395, 396, 397, 398, 399, 401, 405, 411, 413, 414, 415, 419, 427, 429, 432, 437, 438, 439, 441, 443], "On": [0, 3, 7, 23, 24, 25, 26, 36, 268, 272, 419, 425, 437, 438], "end": [0, 2, 3, 16, 17, 22, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 96, 105, 107, 111, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 199, 205, 213, 228, 229, 235, 237, 246, 253, 254, 267, 268, 271, 272, 275, 313, 331, 351, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "come": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 50, 55, 118, 126, 129, 133, 139, 140, 141, 144, 153, 154, 161, 162, 194, 198, 304, 305, 306, 307, 308, 314, 322, 328, 330, 345, 348, 350, 383, 424, 425, 426, 427, 431, 432, 433, 434, 437, 438, 441, 443, 444], "set": [0, 1, 2, 3, 7, 9, 12, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 84, 98, 99, 100, 107, 111, 114, 120, 126, 129, 131, 133, 134, 139, 140, 141, 145, 146, 147, 153, 154, 155, 156, 161, 162, 165, 166, 167, 176, 177, 179, 181, 183, 184, 187, 188, 191, 194, 195, 198, 205, 206, 207, 208, 215, 220, 228, 229, 230, 231, 235, 236, 237, 240, 242, 244, 246, 247, 267, 269, 271, 273, 275, 279, 280, 287, 289, 290, 298, 304, 309, 317, 318, 330, 331, 337, 342, 345, 346, 348, 351, 367, 383, 391, 392, 396, 398, 407, 415, 418, 419, 420, 422, 424, 425, 426, 427, 428, 430, 431, 432, 436, 437, 438, 439, 440, 441, 443, 444], "re": [0, 2, 3, 8, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 107, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 202, 246, 273, 277, 278, 281, 314, 318, 390, 421, 424, 426, 427, 429, 431, 436, 437, 439, 443, 444], "usabl": [0, 421, 427, 443], "function": [0, 2, 3, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 100, 101, 107, 114, 116, 120, 126, 129, 130, 133, 134, 140, 141, 153, 154, 161, 162, 167, 175, 177, 178, 179, 183, 184, 194, 195, 198, 205, 207, 234, 235, 237, 238, 244, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 284, 285, 286, 288, 290, 293, 294, 296, 299, 301, 306, 307, 308, 309, 311, 313, 314, 316, 317, 318, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 401, 411, 417, 419, 424, 427, 428, 429, 430, 433, 436, 439, 441, 444], "cost": [0, 2, 35, 99, 328, 330, 345, 348, 350, 420, 424, 425, 428, 437, 438, 439, 441], "return": [0, 2, 3, 7, 8, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 99, 105, 107, 108, 110, 112, 113, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 161, 162, 165, 166, 169, 170, 171, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 250, 251, 254, 255, 256, 257, 258, 259, 261, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 288, 291, 293, 294, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 313, 314, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 357, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 387, 391, 401, 404, 406, 411, 412, 413, 414, 415, 417, 419, 421, 424, 425, 426, 428, 430, 431, 433, 436, 437, 438, 439, 440, 441, 443, 444], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 80, 83, 84, 100, 104, 105, 108, 112, 120, 126, 129, 130, 133, 137, 140, 141, 144, 148, 153, 154, 155, 156, 161, 162, 186, 187, 194, 198, 205, 230, 233, 235, 244, 246, 269, 273, 279, 280, 290, 311, 316, 417, 421, 424, 425, 427, 428, 429, 437, 438, 439, 440, 441, 443, 444], "good": [0, 1, 4, 9, 153, 424, 426, 427, 428, 430, 438, 443, 444], "runtim": [0, 2, 3, 28, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 439], "perform": [0, 1, 2, 3, 4, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 153, 154, 158, 161, 162, 165, 166, 168, 194, 198, 205, 210, 232, 235, 237, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 281, 284, 285, 288, 289, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 330, 331, 340, 348, 351, 396, 401, 420, 424, 425, 426, 427, 428, 429, 432, 434, 436, 437, 438, 439, 444], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 19, 23, 24, 25, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 96, 105, 107, 112, 113, 116, 123, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 144, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 187, 192, 228, 230, 244, 246, 252, 269, 273, 290, 306, 307, 308, 318, 331, 337, 342, 346, 353, 383, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444], "read": [0, 2, 3, 7, 28, 36, 37, 41, 48, 62, 64, 67, 68, 69, 71, 74, 75, 78, 79, 98, 99, 100, 101, 104, 107, 114, 116, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 206, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 252, 286, 305, 306, 307, 308, 310, 313, 314, 317, 318, 320, 322, 323, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 363, 364, 365, 366, 367, 383, 396, 401, 419, 424, 425, 426, 428, 429, 430, 436, 437, 438, 439, 440, 443, 444], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 18, 26, 28, 421, 424, 429, 432, 436, 440, 444], "beyond": [0, 50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 428], "api": [0, 1, 2, 3, 5, 28, 36, 37, 39, 48, 50, 65, 74, 77, 82, 126, 129, 155, 156, 158, 215, 242, 244, 251, 419, 420, 421, 428, 429, 430, 431, 432, 433, 437, 438, 439, 441, 443, 444], "check": [0, 2, 3, 4, 5, 6, 7, 9, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 90, 92, 95, 96, 103, 112, 126, 129, 130, 132, 133, 134, 140, 141, 147, 153, 154, 161, 162, 167, 168, 187, 188, 192, 201, 207, 216, 230, 233, 237, 246, 247, 261, 269, 273, 305, 310, 311, 314, 315, 316, 317, 318, 331, 342, 353, 383, 416, 419, 420, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "paper": [0, 124, 125, 127, 128, 135, 138, 139, 145, 146, 148, 149, 158, 165, 166, 215, 240, 242, 254, 267, 291, 300, 335, 343, 353, 424, 426, 437, 438], "releas": [0, 4, 7, 10, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 351], "sync": [0, 1, 16, 17, 22, 23, 24, 25, 26, 403, 411, 421, 424], "so": [0, 2, 3, 4, 6, 7, 10, 11, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 107, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 205, 230, 235, 244, 246, 251, 319, 320, 383, 424, 426, 427, 431, 434, 437, 438, 439, 444], "make": [0, 2, 3, 4, 7, 11, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 82, 84, 107, 110, 114, 116, 123, 126, 129, 133, 134, 137, 139, 140, 141, 143, 149, 153, 154, 161, 162, 167, 178, 180, 192, 200, 208, 211, 215, 216, 220, 224, 228, 232, 236, 240, 246, 249, 252, 267, 268, 269, 271, 272, 273, 279, 280, 282, 310, 318, 328, 330, 345, 348, 350, 363, 364, 365, 366, 381, 398, 407, 415, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "sure": [0, 3, 4, 7, 39, 114, 126, 133, 137, 192, 220, 310, 415, 419, 424, 426, 427, 428, 431, 437, 438, 439, 441, 443, 444], "alwai": [0, 2, 3, 16, 17, 25, 32, 33, 39, 44, 55, 65, 66, 72, 77, 82, 85, 94, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 210, 232, 244, 246, 338, 346, 419, 420, 425, 426, 427, 428, 437, 438, 439, 441], "enjoi": [0, 2, 3, 432], "latest": [0, 1, 2, 3, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 148, 151, 152, 155, 156, 398, 426, 437, 438, 439, 443], "featur": [0, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 59, 65, 77, 82, 83, 105, 112, 113, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 159, 160, 161, 162, 167, 184, 187, 202, 205, 207, 213, 230, 231, 239, 244, 249, 253, 254, 264, 265, 267, 268, 269, 271, 272, 273, 274, 279, 282, 283, 318, 325, 328, 330, 345, 348, 350, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 415, 419, 420, 424, 425, 426, 427, 428, 430, 431, 432, 434, 439, 441, 443, 444], "recent": [0, 7, 243, 247, 444], "version": [0, 1, 2, 3, 6, 31, 32, 34, 37, 39, 40, 44, 48, 49, 52, 54, 55, 58, 60, 61, 63, 65, 66, 71, 72, 77, 86, 87, 88, 89, 112, 126, 129, 132, 133, 134, 135, 140, 141, 148, 149, 153, 154, 155, 158, 161, 162, 165, 166, 178, 187, 234, 243, 244, 246, 247, 249, 269, 273, 281, 287, 308, 328, 330, 345, 346, 348, 350, 351, 363, 366, 418, 419, 420, 424, 426, 427, 428, 429, 431, 434, 437, 438, 439, 440, 444], "although": [0, 1, 3, 8, 26, 32, 39, 44, 65, 66, 72, 77, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 420, 421, 424, 425, 432, 441], "core": [0, 2, 3, 8, 62, 67, 68, 69, 78, 79, 107, 421, 427, 430, 443], "guarante": [0, 2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 244, 246, 318, 432], "backward": [0, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246, 267, 268, 271, 272, 289, 318, 328, 329, 331, 332, 336, 337, 344, 348, 349, 350, 351, 353, 354, 424, 426, 427, 428, 431, 432, 434, 437, 438, 439], "compat": [0, 2, 3, 7, 16, 17, 20, 28, 32, 39, 44, 55, 65, 66, 72, 77, 99, 107, 110, 112, 113, 114, 118, 126, 129, 133, 135, 140, 141, 150, 153, 154, 161, 162, 187, 228, 240, 244, 246, 247, 267, 268, 269, 271, 272, 273, 315, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 357, 424, 427, 441], "2": [0, 1, 2, 3, 8, 9, 10, 16, 17, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 44, 48, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 69, 72, 74, 75, 77, 78, 79, 80, 83, 84, 94, 98, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 144, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 172, 179, 183, 184, 186, 188, 191, 192, 194, 196, 197, 198, 207, 208, 211, 213, 215, 217, 220, 223, 227, 228, 229, 230, 235, 236, 237, 240, 242, 244, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 288, 289, 290, 298, 301, 309, 310, 311, 313, 317, 321, 322, 328, 329, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 362, 363, 364, 365, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 392, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 436, 437, 438, 439, 441, 442, 443, 444], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 104, 105, 107, 112, 113, 120, 124, 125, 126, 129, 132, 133, 135, 136, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 158, 159, 160, 161, 162, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 283, 286, 289, 290, 293, 294, 297, 298, 299, 301, 305, 309, 311, 316, 317, 318, 320, 321, 324, 325, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 361, 362, 363, 364, 365, 366, 369, 370, 371, 392, 399, 411, 415, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 25, 39, 62, 65, 69, 77, 78, 79, 99, 133, 140, 153, 161, 208, 215, 218, 242, 331, 334, 346, 420, 421, 424, 425, 426, 427, 430, 432, 441, 443, 444], "tensordict": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 250, 251, 252, 262, 263, 266, 269, 273, 275, 276, 279, 280, 290, 291, 292, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 381, 382, 392, 396, 397, 398, 400, 401, 417, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 444], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 207, 217, 235, 236, 306, 307, 308, 317, 336, 344, 353, 417, 424, 437, 439, 443], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 83, 84, 94, 96, 98, 107, 115, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 177, 215, 242, 246, 276, 385, 390, 401, 421, 425, 428, 434, 437], "root": [0, 2, 3, 36, 37, 48, 50, 62, 67, 68, 69, 74, 78, 79, 84, 95, 96, 103, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 187, 209, 231, 232, 269, 270, 273, 298, 299, 420, 427, 429, 437, 438, 439, 441, 444], "http": [0, 2, 5, 6, 7, 10, 16, 17, 23, 24, 25, 29, 62, 80, 104, 105, 124, 125, 127, 128, 135, 137, 138, 139, 145, 146, 148, 149, 150, 151, 152, 155, 156, 158, 163, 164, 165, 166, 187, 215, 240, 249, 255, 256, 257, 258, 259, 260, 263, 264, 265, 271, 276, 277, 278, 283, 284, 285, 289, 290, 291, 293, 294, 300, 311, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 363, 368, 376, 416, 435, 440, 443], "github": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 124, 125, 127, 128, 132, 135, 138, 139, 145, 146, 148, 149, 151, 152, 155, 156, 158, 163, 164, 165, 166, 184, 187, 240, 249, 430, 434, 437, 438, 443], "com": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 124, 125, 127, 128, 135, 137, 138, 139, 145, 146, 148, 149, 151, 152, 155, 156, 158, 163, 164, 165, 166, 187, 249, 443], "setup": [0, 1, 7, 124, 125, 137, 138, 139, 163], "py": [0, 3, 29, 132, 134, 177, 187, 261, 291, 300, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444], "develop": [0, 3, 4, 7, 50, 137, 424, 443], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 126, 129, 131, 133, 135, 136, 140, 141, 153, 154, 157, 158, 161, 162, 167, 173, 178, 180, 182, 183, 184, 186, 187, 190, 192, 195, 197, 203, 207, 209, 215, 216, 218, 225, 230, 232, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 263, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 280, 281, 283, 289, 301, 309, 310, 311, 313, 314, 315, 318, 320, 321, 324, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 361, 363, 364, 365, 366, 367, 369, 381, 384, 385, 388, 390, 391, 394, 401, 403, 411, 417, 420, 423, 424, 426, 428, 430, 431, 432, 435, 439, 442, 444], "seri": [0, 2, 3, 7, 8, 59, 97, 108, 118, 119, 122, 123, 161, 210, 236, 383, 419, 420, 424, 425, 426, 433, 434, 437, 438, 441, 444], "quick": [0, 428], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 35, 50, 71, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 186, 205, 208, 231, 236, 246, 249, 348, 418, 419, 420, 424, 425, 426, 427, 430, 434, 437, 438, 439, 441, 443, 444], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 105, 107, 108, 110, 111, 112, 113, 118, 120, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 171, 175, 178, 179, 180, 183, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 205, 207, 208, 209, 210, 211, 215, 216, 219, 220, 223, 224, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 244, 246, 247, 252, 253, 254, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 290, 301, 305, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 377, 378, 379, 380, 381, 387, 390, 391, 397, 398, 401, 403, 405, 411, 415, 418, 420, 424, 425, 426, 427, 428, 429, 431, 433, 434, 436, 437, 438, 439, 441, 443, 444], "hurri": [0, 429], "last": [0, 1, 2, 3, 4, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 111, 112, 113, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 172, 180, 183, 186, 202, 209, 211, 216, 229, 231, 233, 247, 248, 253, 254, 266, 267, 269, 271, 273, 274, 277, 278, 284, 295, 298, 301, 309, 313, 318, 331, 363, 365, 366, 425, 426, 427, 428, 429, 430, 437, 438, 439, 440, 441, 443, 444], "item": [0, 2, 3, 8, 16, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 94, 99, 105, 107, 111, 118, 140, 180, 195, 201, 236, 277, 278, 332, 333, 335, 392, 420, 421, 424, 426, 427, 431, 432, 437, 438, 439, 441], "navig": [0, 438], "previou": [0, 3, 4, 10, 55, 62, 67, 68, 69, 71, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 202, 230, 246, 267, 271, 294, 309, 426, 427, 428, 429, 430, 434, 439, 444], "whenev": [0, 1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 55, 62, 65, 69, 77, 78, 79, 84, 104, 105, 112, 113, 127, 128, 132, 134, 135, 145, 146, 158, 165, 166, 177, 195, 202, 206, 237, 243, 346, 363, 364, 365, 366, 381, 403, 419, 433, 441], "want": [0, 2, 3, 6, 7, 8, 39, 65, 77, 113, 187, 211, 289, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 419, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 440, 441, 443, 444], "ted": [0, 41, 56, 75, 76, 95, 96, 103, 417, 423, 435, 442], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 107, 112, 113, 118, 124, 125, 126, 129, 133, 137, 138, 139, 140, 141, 145, 146, 148, 153, 154, 155, 156, 161, 162, 165, 166, 167, 187, 191, 195, 205, 209, 215, 228, 230, 233, 234, 235, 236, 237, 240, 242, 244, 246, 248, 251, 253, 254, 261, 266, 269, 273, 278, 279, 280, 283, 289, 291, 298, 300, 306, 308, 311, 313, 314, 317, 318, 321, 329, 331, 336, 342, 344, 346, 351, 353, 363, 364, 365, 366, 367, 381, 419, 420, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "modul": [0, 2, 3, 4, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 71, 72, 77, 118, 124, 125, 126, 129, 133, 140, 141, 144, 147, 150, 153, 154, 161, 162, 177, 186, 191, 195, 197, 199, 205, 207, 215, 216, 229, 230, 235, 236, 237, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 359, 361, 363, 364, 365, 366, 367, 381, 401, 408, 411, 417, 420, 421, 423, 425, 426, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442], "optim": [0, 1, 2, 8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 250, 276, 282, 283, 289, 298, 329, 331, 346, 347, 348, 351, 358, 396, 397, 401, 411, 420, 421, 423, 426, 427, 428, 429, 430, 432, 435, 437, 438, 439, 442], "collect": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 50, 55, 62, 67, 68, 69, 78, 79, 107, 111, 126, 129, 133, 140, 141, 153, 154, 158, 161, 162, 167, 184, 187, 195, 202, 211, 215, 242, 290, 313, 329, 332, 335, 337, 349, 351, 353, 354, 383, 392, 398, 401, 403, 404, 405, 411, 421, 423, 424, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444], "storag": [0, 1, 8, 32, 39, 41, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 81, 84, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 113, 115, 116, 117, 118, 120, 121, 126, 129, 131, 133, 140, 141, 153, 154, 161, 162, 186, 187, 194, 198, 220, 246, 417, 421, 423, 425, 426, 427, 428, 429, 431, 434, 435, 437, 438, 440, 442], "log": [0, 3, 4, 8, 11, 71, 261, 262, 263, 277, 278, 286, 298, 299, 310, 311, 314, 318, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 354, 361, 390, 394, 395, 396, 401, 411, 419, 420, 421, 423, 424, 425, 426, 429, 430, 434, 435, 437, 438, 439, 442, 443], "your": [0, 1, 2, 7, 8, 10, 11, 15, 16, 17, 18, 21, 23, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 137, 140, 141, 144, 153, 154, 155, 156, 161, 162, 244, 246, 318, 391, 415, 417, 418, 419, 420, 423, 425, 426, 427, 429, 430, 431, 432, 433, 435, 437, 438, 441, 442, 443], "own": [0, 1, 16, 17, 22, 26, 27, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 246, 383, 417, 420, 423, 425, 426, 429, 435, 437, 438, 439, 442], "train": [0, 1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 32, 35, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 94, 126, 129, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 167, 194, 203, 215, 229, 234, 237, 240, 242, 246, 248, 249, 251, 256, 258, 266, 269, 273, 290, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 363, 401, 403, 411, 417, 419, 421, 423, 425, 429, 432, 433, 435, 440, 441, 442, 443, 444], "loop": [0, 8, 45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 266, 289, 290, 348, 401, 420, 421, 423, 424, 425, 429, 431, 432, 433, 435, 436, 441, 442, 443], "ppo": [0, 4, 8, 314, 318, 330, 345, 348, 417, 419, 423, 424, 425, 428, 430, 431, 435, 437, 442], "pendulum": [0, 3, 16, 17, 20, 22, 26, 27, 67, 118, 126, 127, 128, 129, 130, 132, 133, 134, 140, 141, 148, 153, 154, 161, 162, 187, 190, 191, 192, 200, 206, 207, 211, 218, 220, 224, 225, 228, 230, 231, 232, 235, 236, 237, 238, 244, 246, 252, 269, 273, 411, 419, 423, 425, 426, 429, 430, 431, 435, 442, 443, 444], "introduct": [0, 420, 423, 429, 435, 437, 438, 442, 444], "multi": [0, 1, 7, 9, 32, 39, 44, 55, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 95, 96, 103, 126, 129, 133, 140, 141, 145, 146, 153, 154, 159, 160, 161, 162, 208, 237, 246, 267, 269, 271, 273, 274, 279, 280, 281, 313, 318, 361, 363, 364, 365, 366, 417, 423, 424, 425, 426, 427, 429, 430, 435, 439, 442, 443], "agent": [0, 9, 68, 73, 74, 144, 145, 146, 151, 152, 155, 156, 159, 160, 163, 164, 165, 166, 168, 208, 227, 228, 229, 277, 278, 279, 280, 281, 283, 291, 300, 330, 345, 348, 361, 417, 423, 429, 435, 439, 442], "env": [0, 1, 2, 5, 6, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 36, 39, 41, 44, 50, 55, 65, 66, 67, 71, 72, 75, 77, 84, 107, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 269, 273, 275, 276, 313, 317, 346, 381, 382, 383, 391, 405, 406, 407, 411, 413, 414, 415, 417, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 99, 103, 104, 105, 106, 107, 112, 113, 118, 120, 124, 125, 126, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 286, 288, 289, 290, 291, 292, 298, 299, 300, 301, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 376, 381, 383, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 444], "pretrain": [0, 423, 435, 442], "recurr": [0, 2, 186, 267, 268, 269, 271, 273, 294, 304, 423, 425, 430, 435, 441, 442], "dqn": [0, 2, 180, 199, 254, 263, 310, 311, 328, 329, 331, 332, 333, 335, 337, 338, 339, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 361, 408, 417, 419, 423, 428, 430, 431, 434, 435, 442], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 41, 55, 67, 75, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 176, 197, 207, 209, 229, 232, 248, 251, 252, 263, 266, 269, 273, 279, 280, 283, 290, 292, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 328, 329, 330, 331, 332, 336, 337, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 396, 403, 406, 407, 411, 413, 414, 417, 419, 421, 423, 425, 429, 431, 432, 435, 440, 441, 442, 443, 444], "replai": [0, 8, 20, 26, 55, 62, 67, 68, 69, 78, 79, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 118, 119, 123, 186, 187, 197, 216, 220, 230, 236, 246, 331, 332, 333, 335, 336, 337, 344, 349, 351, 353, 354, 398, 401, 409, 411, 417, 420, 421, 423, 428, 435, 439, 440, 442], "buffer": [0, 4, 8, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 186, 187, 191, 195, 197, 205, 215, 216, 220, 230, 235, 236, 237, 240, 242, 246, 248, 290, 309, 317, 320, 331, 332, 333, 335, 336, 337, 344, 349, 351, 353, 354, 363, 364, 365, 366, 367, 398, 401, 409, 411, 417, 420, 421, 423, 428, 433, 435, 439, 440, 442, 444], "export": [0, 6, 7, 423, 435, 442], "competit": [0, 3, 145, 146, 423, 435, 438, 442], "ddpg": [0, 256, 257, 258, 259, 332, 343, 352, 417, 419, 423, 425, 431, 435, 438, 442], "task": [0, 2, 3, 9, 71, 73, 74, 83, 126, 127, 128, 129, 133, 136, 140, 141, 145, 146, 153, 154, 155, 156, 158, 161, 162, 165, 166, 215, 228, 237, 240, 242, 336, 344, 423, 424, 425, 426, 427, 429, 430, 435, 437, 438, 439, 442, 444], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 165, 175, 195, 209, 230, 260, 269, 273, 309, 328, 346, 348, 350, 383, 401, 417, 420, 421, 423, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 441, 442, 443], "object": [0, 2, 3, 4, 6, 7, 16, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 36, 39, 44, 45, 46, 47, 55, 57, 61, 63, 65, 66, 70, 72, 77, 82, 83, 84, 98, 99, 100, 101, 107, 110, 114, 116, 120, 123, 126, 129, 133, 138, 140, 141, 153, 154, 157, 161, 162, 180, 194, 198, 199, 205, 208, 211, 215, 235, 236, 237, 240, 244, 246, 269, 273, 276, 279, 280, 291, 298, 300, 305, 306, 314, 317, 318, 319, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 405, 406, 407, 410, 411, 415, 417, 419, 421, 423, 425, 426, 427, 428, 432, 434, 435, 437, 438, 439, 441, 442, 444], "loss": [0, 3, 8, 63, 199, 289, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 361, 362, 363, 397, 401, 408, 411, 420, 421, 423, 428, 429, 431, 432, 433, 435, 439, 441, 442], "trainer": [0, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 423, 424, 435, 442], "exampl": [0, 1, 2, 3, 4, 9, 10, 16, 17, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 83, 84, 85, 94, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 288, 289, 290, 291, 292, 300, 301, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 363, 364, 365, 366, 369, 381, 383, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 411, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444], "packag": [0, 6, 7, 10, 177, 417, 418, 444], "batch": [0, 2, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 36, 55, 57, 59, 62, 64, 67, 68, 69, 71, 78, 79, 80, 82, 94, 98, 99, 100, 101, 105, 106, 107, 111, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 179, 184, 187, 191, 192, 195, 202, 209, 211, 213, 216, 220, 227, 230, 232, 236, 237, 239, 243, 244, 246, 249, 261, 267, 268, 269, 271, 272, 273, 277, 278, 279, 280, 281, 282, 286, 290, 291, 297, 301, 304, 313, 317, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 392, 395, 398, 399, 400, 401, 403, 413, 414, 415, 417, 419, 420, 421, 425, 426, 427, 428, 429, 432, 434, 436, 437, 438, 440, 443, 444], "size": [0, 2, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 178, 180, 184, 186, 187, 188, 191, 193, 194, 195, 198, 199, 200, 202, 205, 208, 209, 213, 215, 217, 218, 220, 224, 226, 227, 228, 230, 232, 233, 236, 237, 238, 239, 242, 244, 246, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 300, 301, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 383, 392, 398, 417, 419, 420, 425, 426, 427, 428, 429, 430, 432, 437, 438, 439, 444], "copi": [0, 2, 3, 15, 18, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 187, 205, 218, 229, 235, 236, 237, 244, 246, 247, 269, 273, 281, 309, 331, 346, 351, 381, 417, 420, 424, 425, 427, 429, 437, 441, 443], "interoper": [0, 16, 17, 417], "singl": [0, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 50, 53, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 80, 84, 99, 107, 113, 118, 126, 129, 132, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 180, 187, 188, 195, 208, 215, 220, 230, 235, 237, 242, 246, 253, 254, 267, 268, 269, 271, 272, 273, 274, 280, 316, 320, 329, 330, 331, 333, 335, 337, 338, 344, 345, 348, 349, 351, 353, 354, 358, 363, 364, 365, 366, 372, 373, 374, 375, 377, 378, 379, 380, 381, 415, 417, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 443], "node": [0, 2, 19, 23, 24, 25, 26, 27, 36, 37, 45, 46, 47, 48, 50, 61, 63, 70, 74, 84, 141, 235, 417, 432, 443], "distribut": [0, 2, 3, 4, 9, 10, 15, 18, 19, 23, 24, 25, 26, 27, 62, 67, 68, 69, 78, 79, 107, 126, 155, 156, 207, 211, 248, 250, 261, 262, 263, 264, 270, 276, 277, 278, 286, 287, 288, 289, 293, 294, 297, 298, 299, 309, 310, 311, 314, 318, 319, 328, 329, 330, 331, 336, 337, 338, 344, 345, 348, 349, 350, 351, 353, 354, 417, 420, 421, 425, 426, 428, 430, 432, 437, 438, 439, 443, 444], "helper": [0, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 424, 425, 427, 437, 439], "compos": [0, 3, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 106, 107, 108, 109, 118, 119, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 192, 205, 219, 235, 236, 237, 244, 246, 312, 313, 331, 340, 351, 383, 417, 424, 425, 426, 427, 428, 432, 436, 438, 440, 441, 443, 444], "episod": [0, 3, 50, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 220, 223, 229, 250, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 417, 425, 429, 434, 437, 438, 441], "format": [0, 3, 32, 39, 41, 44, 53, 54, 55, 56, 59, 60, 65, 66, 72, 75, 76, 77, 84, 95, 96, 103, 110, 118, 126, 129, 133, 140, 141, 153, 154, 155, 161, 162, 187, 191, 215, 230, 236, 237, 240, 242, 246, 317, 383, 417, 424, 425, 428, 429, 431, 433, 443, 444], "tensorspec": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 165, 166, 179, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 248, 266, 290, 294, 305, 309, 310, 311, 314, 315, 316, 317, 318, 319, 321, 329, 331, 333, 336, 337, 349, 351, 353, 354, 361, 417, 439], "tree": [0, 1, 45, 46, 47, 50, 61, 63, 70, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 417, 437, 441], "forest": [0, 50, 84, 417], "human": [0, 29, 417, 439], "feedback": [0, 417, 434, 443], "rlhf": [0, 207, 417, 419], "spec": [0, 1, 2, 16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 124, 125, 126, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 172, 175, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 248, 263, 266, 269, 273, 290, 292, 294, 305, 309, 310, 311, 314, 315, 316, 317, 318, 320, 321, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 417, 419, 420, 424, 425, 426, 427, 428, 429, 430, 434, 436, 437, 438, 443], "lock": [0, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 184, 192, 230, 244, 417, 420, 439], "method": [0, 1, 2, 4, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 112, 113, 114, 115, 116, 118, 120, 126, 129, 132, 133, 134, 135, 139, 140, 141, 153, 154, 157, 158, 161, 162, 175, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 209, 211, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 261, 266, 269, 273, 279, 280, 281, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 325, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 342, 344, 346, 348, 349, 350, 351, 353, 354, 361, 367, 381, 382, 412, 417, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 441, 444], "partial": [0, 2, 126, 129, 133, 140, 141, 153, 154, 161, 162, 186, 187, 195, 229, 230, 231, 314, 401, 417, 427], "step": [0, 1, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 55, 71, 84, 95, 96, 103, 105, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 178, 179, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 202, 203, 206, 207, 209, 211, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 248, 249, 250, 264, 266, 267, 269, 271, 273, 275, 276, 289, 290, 313, 314, 318, 328, 339, 348, 362, 363, 364, 365, 366, 369, 370, 371, 382, 385, 392, 396, 401, 417, 421, 425, 427, 428, 430, 431, 433, 434, 436, 439, 440, 443], "reset": [0, 1, 2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 113, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 167, 179, 182, 183, 184, 187, 195, 199, 202, 206, 210, 215, 223, 228, 229, 230, 231, 232, 235, 236, 237, 240, 243, 244, 246, 247, 252, 267, 269, 273, 281, 290, 303, 313, 346, 382, 417, 420, 424, 425, 426, 427, 429, 432, 436, 437, 438, 443], "vector": [0, 1, 8, 30, 59, 124, 125, 134, 138, 139, 144, 155, 156, 158, 165, 166, 197, 243, 256, 258, 267, 268, 271, 272, 274, 363, 366, 376, 377, 378, 379, 380, 417, 419, 420, 424, 425, 427, 436, 437, 438, 439, 440, 444], "custom": [0, 1, 2, 5, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 240, 246, 279, 280, 321, 327, 338, 348, 355, 415, 417, 419, 424, 425, 426, 427, 430, 431, 433, 437, 438], "nativ": [0, 1, 7, 9, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 383, 417, 427, 441], "auto": [0, 100, 120, 129, 182, 183, 237, 243, 290, 329, 331, 337, 347, 349, 351, 353, 354, 417, 420, 437, 438], "dynam": [0, 2, 7, 16, 17, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 172, 246, 336, 344, 417, 426, 429, 439], "mask": [0, 1, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 181, 216, 246, 251, 252, 263, 266, 277, 278, 292, 309, 310, 311, 315, 316, 337, 351, 398, 417, 425, 427, 428, 444], "action": [0, 2, 8, 9, 16, 17, 20, 22, 26, 41, 50, 59, 67, 71, 75, 77, 84, 104, 105, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 172, 178, 180, 181, 184, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 207, 209, 210, 211, 213, 217, 218, 220, 224, 228, 230, 234, 236, 237, 238, 239, 243, 246, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 269, 273, 274, 275, 276, 277, 278, 279, 288, 290, 291, 292, 294, 297, 298, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 321, 322, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 411, 415, 417, 419, 421, 424, 425, 426, 428, 429, 430, 431, 436, 437, 438, 440, 443, 444], "record": [0, 2, 11, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 173, 180, 207, 246, 348, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 396, 411, 417, 425, 426, 430, 434, 437], "domain": [0, 2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 197, 205, 230, 238, 305, 310, 311, 314, 315, 316, 317, 318, 319, 320, 325, 417, 426, 431, 437, 438, 439, 443, 444], "actor": [0, 3, 4, 26, 157, 207, 250, 255, 256, 258, 263, 264, 266, 276, 288, 290, 292, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 361, 417, 420, 425, 427, 429, 431, 434, 437, 440, 443], "explor": [0, 1, 245, 248, 251, 266, 283, 290, 305, 310, 311, 314, 315, 316, 317, 318, 328, 346, 396, 406, 407, 411, 417, 426, 427, 428, 429, 431, 432, 434, 437, 438, 439], "valu": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 104, 105, 107, 112, 113, 118, 126, 129, 133, 140, 141, 144, 153, 154, 161, 162, 167, 172, 177, 178, 179, 180, 183, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 205, 210, 211, 215, 216, 219, 220, 221, 223, 225, 227, 230, 231, 236, 237, 242, 244, 246, 247, 248, 249, 252, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 273, 274, 276, 277, 278, 279, 280, 282, 283, 286, 290, 291, 292, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 391, 392, 394, 395, 396, 397, 398, 401, 411, 417, 421, 425, 428, 431, 432, 433, 436, 437, 438, 439, 441, 443, 444], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 71, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 109, 111, 126, 129, 130, 133, 140, 141, 145, 146, 147, 150, 153, 154, 155, 156, 159, 160, 161, 162, 179, 184, 191, 192, 194, 195, 196, 200, 205, 207, 209, 211, 217, 218, 223, 224, 228, 230, 234, 236, 238, 243, 246, 251, 252, 261, 269, 273, 277, 278, 286, 305, 314, 318, 322, 323, 342, 349, 356, 363, 368, 376, 386, 401, 417, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "hook": [0, 2, 32, 39, 41, 44, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 107, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 292, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 417], "planner": [0, 250, 276, 417], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 238, 240, 242, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 326, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 392, 399, 400, 411, 417, 419, 421, 424, 425, 426, 427, 428, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 443, 444], "vmap": [0, 267, 268, 271, 272, 281, 301, 317, 320, 346, 417, 419], "random": [0, 1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 71, 73, 74, 82, 85, 86, 87, 88, 89, 106, 118, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 167, 180, 195, 197, 210, 211, 230, 237, 252, 266, 267, 269, 271, 273, 314, 317, 318, 325, 329, 346, 349, 396, 405, 417, 419, 424, 425, 426, 428, 429, 430, 432, 439, 440, 441, 443, 444], "sac": [0, 337, 349, 351, 417], "redq": [0, 349, 417], "crossq": [0, 331, 417], "iql": [0, 336, 344, 417, 424, 437, 438], "cql": [0, 329, 335, 417], "gail": [0, 342, 417], "dt": [0, 154, 290, 417, 439], "td3": [0, 353, 354, 417], "bc": [0, 5, 353, 417], "a2c": [0, 328, 417], "dreamer": [0, 173, 174, 264, 339, 340, 341, 417, 419], "checkpoint": [0, 69, 96, 98, 102, 114, 115, 117, 121, 417, 441], "builder": [0, 417, 425, 444], "logger": [0, 3, 11, 381, 383, 385, 386, 387, 388, 389, 390, 395, 401, 411, 415, 417, 425, 437], "_util": [0, 3, 153, 247, 417, 428, 434], "implement_for": [0, 3, 417], "set_auto_unwrap_transformed_env": [0, 12, 237, 417], "auto_unwrap_transformed_env": [0, 391, 417], "thing": [0, 3, 7, 8, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 279, 280, 337, 351, 418, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 441, 444], "consid": [0, 1, 2, 3, 8, 15, 18, 21, 25, 32, 36, 37, 39, 44, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 98, 100, 112, 113, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 197, 244, 246, 261, 279, 280, 297, 329, 331, 344, 349, 351, 353, 354, 363, 365, 366, 418, 420, 424, 429, 430, 431, 439, 441], "when": [0, 1, 2, 3, 5, 8, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 116, 120, 126, 129, 130, 132, 133, 134, 139, 140, 141, 144, 145, 146, 148, 150, 153, 154, 155, 156, 161, 162, 165, 166, 176, 178, 181, 183, 186, 187, 191, 194, 195, 197, 198, 207, 208, 210, 211, 215, 216, 223, 230, 232, 235, 236, 237, 240, 242, 243, 244, 246, 247, 249, 250, 261, 263, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 289, 292, 298, 313, 314, 317, 318, 320, 324, 329, 330, 331, 333, 337, 338, 344, 345, 346, 348, 349, 351, 353, 354, 355, 361, 362, 363, 364, 365, 366, 381, 382, 383, 385, 388, 390, 398, 415, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 432, 433, 437, 438, 439, 440, 441, 443, 444], "debug": [0, 6, 8, 50, 71, 84, 232, 418, 444], "work": [0, 1, 2, 3, 4, 8, 32, 39, 44, 55, 65, 66, 69, 72, 77, 98, 105, 110, 112, 113, 116, 123, 126, 129, 132, 133, 134, 137, 140, 141, 153, 154, 158, 161, 162, 175, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 247, 253, 254, 274, 311, 316, 321, 330, 345, 348, 401, 418, 419, 424, 425, 426, 427, 429, 432, 436, 437, 438, 439, 440, 441, 443, 444], "habitat": [0, 3, 135, 418, 440], "lab": [0, 3, 127, 128, 135, 418], "mujoco": [0, 6, 8, 158, 418, 424, 426, 427], "error": [0, 1, 3, 7, 10, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 70, 72, 73, 77, 84, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 167, 168, 216, 235, 246, 247, 346, 418, 420, 424, 426, 437, 438, 444], "solut": [0, 2, 3, 6, 7, 9, 26, 112, 418, 419, 421, 428, 443], "resourc": [0, 1, 26, 135, 418, 424, 426, 428, 437, 438], "issu": [0, 2, 3, 4, 5, 8, 67, 96, 98, 100, 112, 120, 126, 129, 132, 133, 137, 140, 141, 153, 154, 161, 162, 178, 187, 216, 231, 305, 310, 311, 314, 315, 316, 317, 318, 418, 443], "customis": [0, 418, 425, 433], "video": [0, 4, 9, 383, 385, 388, 390, 396, 415, 417, 418, 434, 437, 438], "render": [0, 3, 8, 139, 165, 381, 383, 396, 418, 424, 425, 426, 428, 429, 433], "index": [0, 3, 7, 8, 10, 20, 30, 31, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 104, 105, 107, 108, 110, 112, 116, 118, 119, 120, 122, 123, 126, 129, 133, 140, 141, 145, 146, 151, 152, 153, 154, 161, 162, 165, 166, 178, 182, 187, 191, 197, 237, 277, 278, 313, 417, 429, 436, 437, 438, 441, 443], "search": [0, 2, 36, 37, 48, 74, 84, 150, 179, 425], "page": [0, 7, 29, 390, 431], "somewhat": [1, 2, 195, 420, 430, 444], "equival": [1, 3, 26, 30, 31, 32, 35, 36, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 83, 84, 94, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 184, 196, 199, 230, 232, 237, 246, 263, 271, 274, 292, 310, 311, 315, 316, 348, 398, 432, 443, 444], "dataload": [1, 94, 111, 113, 140, 195, 425, 432, 441], "except": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 201, 220, 229, 230, 231, 235, 237, 246, 248, 266, 267, 269, 271, 273, 286, 290, 328, 331, 346, 348, 351, 383, 419, 424, 425, 429, 437, 441, 443, 444], "1": [1, 2, 3, 4, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 211, 213, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 244, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 283, 286, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 361, 362, 363, 364, 365, 366, 369, 371, 372, 373, 377, 378, 380, 381, 383, 392, 396, 398, 399, 411, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444], "thei": [1, 2, 3, 4, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 105, 107, 126, 129, 132, 133, 134, 140, 141, 144, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 183, 186, 201, 207, 215, 224, 232, 236, 237, 242, 246, 273, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 398, 401, 419, 420, 421, 424, 425, 426, 427, 428, 431, 436, 437, 438, 439, 440, 441, 443, 444], "over": [1, 2, 3, 4, 8, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 93, 105, 107, 111, 112, 113, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 178, 180, 195, 197, 211, 223, 231, 246, 286, 289, 298, 301, 320, 338, 340, 346, 369, 381, 404, 419, 421, 424, 425, 426, 428, 429, 430, 431, 432, 437, 438, 439, 444], "non": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 48, 49, 55, 57, 58, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 99, 101, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 178, 184, 185, 187, 191, 195, 202, 215, 227, 230, 236, 237, 238, 239, 240, 242, 246, 252, 267, 269, 271, 273, 279, 317, 318, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 419, 424, 427, 428, 437, 438, 439, 441, 444], "static": [1, 39, 65, 71, 77, 83, 105, 112, 113, 135, 154, 244, 247, 344, 429, 439, 441], "like": [1, 2, 3, 4, 7, 11, 26, 32, 36, 37, 39, 44, 48, 50, 55, 57, 62, 65, 66, 69, 72, 74, 77, 78, 79, 83, 101, 107, 113, 126, 129, 130, 133, 135, 140, 141, 144, 153, 154, 155, 156, 161, 162, 167, 187, 195, 199, 230, 233, 246, 267, 271, 280, 312, 318, 328, 330, 345, 348, 349, 350, 419, 420, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444], "being": [1, 2, 3, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 73, 77, 94, 99, 118, 121, 126, 129, 132, 133, 134, 135, 139, 140, 141, 153, 154, 158, 161, 162, 176, 186, 194, 197, 198, 205, 210, 218, 230, 235, 236, 237, 246, 266, 269, 273, 290, 330, 331, 345, 346, 348, 351, 383, 398, 403, 413, 414, 415, 419, 420, 424, 425, 426, 427, 432, 437, 438, 439, 441], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 69, 70, 72, 77, 84, 85, 94, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 182, 187, 191, 202, 205, 215, 223, 227, 230, 235, 236, 237, 238, 239, 240, 242, 246, 274, 301, 317, 318, 319, 331, 351, 383, 421, 426, 428, 429, 433, 441, 443, 444], "two": [1, 2, 3, 4, 8, 10, 32, 39, 44, 50, 51, 52, 53, 54, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 84, 107, 111, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 211, 215, 235, 242, 246, 259, 267, 269, 271, 273, 279, 280, 295, 298, 318, 345, 353, 357, 396, 401, 420, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438, 439, 441, 443, 444], "main": [1, 2, 3, 5, 16, 17, 25, 27, 28, 67, 130, 187, 318, 401, 419, 420, 424, 425, 436, 443, 444], "argument": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 96, 98, 99, 100, 104, 105, 107, 110, 111, 112, 113, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 172, 178, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 253, 254, 266, 267, 269, 271, 273, 274, 277, 278, 279, 280, 282, 290, 301, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 356, 361, 363, 364, 365, 366, 367, 371, 381, 382, 383, 388, 390, 394, 401, 404, 411, 412, 415, 424, 425, 426, 427, 428, 429, 430, 432, 437, 438, 439, 441, 443, 444], "list": [1, 2, 3, 6, 7, 8, 9, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 99, 101, 107, 110, 111, 112, 113, 114, 116, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 168, 178, 185, 186, 190, 194, 195, 196, 198, 207, 208, 211, 213, 215, 223, 225, 233, 234, 235, 236, 237, 239, 240, 242, 244, 246, 252, 253, 254, 256, 262, 265, 269, 273, 274, 277, 278, 284, 292, 311, 313, 315, 316, 318, 320, 321, 322, 329, 331, 344, 346, 349, 351, 353, 354, 360, 363, 366, 381, 382, 396, 398, 413, 414, 420, 424, 426, 429, 430, 431, 432, 436, 437, 439, 440, 441, 443, 444], "constructor": [1, 2, 3, 20, 23, 24, 25, 26, 67, 69, 78, 79, 83, 104, 118, 126, 129, 133, 140, 141, 148, 153, 154, 161, 162, 165, 183, 187, 235, 253, 254, 274, 304, 314, 318, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 412, 415, 419, 424, 425, 426, 429, 432, 437, 438, 441, 443], "iter": [1, 2, 3, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 93, 94, 101, 107, 111, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 195, 200, 211, 224, 246, 247, 249, 251, 252, 253, 254, 274, 279, 280, 296, 305, 310, 314, 315, 317, 319, 320, 322, 346, 360, 396, 400, 401, 420, 421, 424, 426, 427, 432, 434, 437, 438, 439], "execut": [1, 2, 3, 6, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 64, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 98, 99, 107, 112, 113, 124, 125, 126, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 147, 148, 153, 154, 158, 161, 162, 163, 181, 192, 209, 232, 237, 246, 266, 267, 269, 271, 273, 281, 304, 313, 319, 320, 346, 353, 405, 415, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 441, 442, 443, 444], "queri": [1, 2, 3, 16, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 215, 240, 244, 246, 320, 420, 424, 431, 439, 443], "defin": [1, 2, 3, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 216, 229, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 281, 284, 285, 288, 289, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 325, 333, 335, 346, 363, 364, 365, 366, 367, 382, 412, 419, 424, 425, 427, 431, 434, 439, 441, 444], "number": [1, 2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 110, 112, 113, 120, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 147, 148, 149, 150, 153, 154, 155, 156, 161, 162, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 197, 199, 200, 201, 203, 206, 207, 210, 211, 214, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 248, 249, 250, 253, 254, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 284, 285, 290, 291, 293, 294, 297, 298, 299, 300, 305, 309, 313, 314, 317, 318, 322, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 388, 390, 392, 394, 396, 401, 403, 404, 405, 413, 414, 415, 419, 420, 424, 425, 426, 427, 429, 430, 432, 434, 437, 438, 439, 440, 441, 444], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 39, 40, 44, 50, 51, 52, 55, 65, 66, 72, 77, 83, 84, 111, 113, 118, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 167, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 246, 251, 267, 269, 273, 274, 282, 283, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 364, 365, 366, 398, 424, 426, 427, 428, 432, 433, 437, 438, 439, 441, 444], "deliv": [1, 2, 3, 20, 195, 424, 425, 429, 432, 443], "stack": [1, 2, 3, 7, 8, 16, 17, 20, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 92, 99, 104, 107, 126, 129, 132, 133, 134, 140, 141, 144, 153, 154, 155, 156, 161, 162, 187, 195, 209, 244, 267, 269, 271, 272, 273, 313, 319, 320, 329, 331, 344, 349, 351, 353, 354, 382, 392, 417, 425, 428, 429, 436, 437, 439, 443], "user": [1, 2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 105, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 167, 188, 205, 229, 235, 237, 246, 260, 331, 348, 351, 353, 383, 412, 420, 421, 424, 425, 429, 431, 432, 439, 443, 444], "reach": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 71, 111, 126, 129, 133, 139, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 209, 228, 248, 266, 290, 424, 426, 434, 437, 438, 443, 444], "done": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 74, 75, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 103, 105, 107, 112, 113, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 181, 183, 184, 187, 194, 195, 196, 198, 199, 200, 205, 209, 210, 211, 213, 217, 218, 220, 222, 224, 227, 228, 230, 231, 234, 235, 236, 237, 238, 244, 246, 250, 267, 269, 273, 276, 298, 313, 328, 329, 330, 331, 332, 333, 335, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 419, 420, 424, 426, 427, 428, 429, 431, 432, 434, 436, 437, 438, 439, 441, 443, 444], "state": [1, 2, 3, 4, 16, 17, 20, 22, 32, 39, 41, 44, 50, 55, 62, 65, 66, 67, 68, 69, 71, 72, 75, 77, 78, 79, 84, 95, 96, 103, 107, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 167, 178, 179, 183, 186, 187, 188, 190, 191, 192, 195, 196, 199, 202, 205, 209, 211, 218, 228, 229, 234, 235, 236, 237, 238, 239, 244, 246, 250, 255, 260, 264, 267, 268, 269, 271, 272, 273, 274, 276, 281, 284, 288, 291, 293, 294, 300, 306, 313, 317, 323, 328, 330, 331, 335, 337, 345, 346, 348, 349, 350, 351, 361, 362, 363, 364, 365, 366, 367, 401, 415, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 438, 439, 444], "after": [1, 2, 3, 8, 16, 17, 22, 23, 25, 26, 32, 39, 41, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 100, 107, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 248, 249, 266, 267, 269, 273, 282, 310, 315, 331, 340, 351, 353, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 439, 440, 441, 444], "predefin": [1, 383, 425, 427, 432, 441, 443], "becaus": [1, 2, 3, 4, 7, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 199, 207, 228, 243, 246, 259, 280, 305, 310, 311, 313, 314, 315, 316, 317, 318, 328, 348, 419, 424, 425, 427, 428, 430, 431, 432, 436, 437, 438, 439, 441, 444], "potenti": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 439, 441], "comput": [1, 3, 4, 8, 16, 18, 20, 26, 32, 35, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 179, 211, 225, 237, 241, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 284, 285, 286, 288, 290, 293, 294, 296, 298, 299, 301, 306, 309, 311, 313, 314, 316, 318, 321, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 405, 420, 424, 426, 427, 428, 429, 430, 436, 437, 438, 440, 441], "heavi": [1, 8, 441], "crucial": [1, 2, 3, 248, 266, 290, 336, 344, 346, 424, 425, 426, 427, 429, 431, 433, 437, 438, 439, 443, 444], "configur": [1, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 71, 126, 207, 255, 260, 288, 346, 348, 419, 424, 425, 426, 431, 437, 438, 439], "hyperparamet": [1, 110, 246, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 424, 433, 439, 441], "appropri": [1, 3, 4, 7, 97, 108, 118, 119, 122, 123, 141, 153, 161, 199, 412, 415, 424, 433, 441], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 114, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 419, 420, 424, 427, 428, 430, 434, 437, 438, 439, 440, 443], "take": [1, 2, 3, 8, 28, 32, 39, 44, 50, 65, 66, 71, 72, 77, 115, 121, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 190, 228, 231, 232, 236, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 312, 313, 314, 316, 318, 321, 324, 327, 348, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 392, 403, 419, 421, 424, 425, 426, 428, 429, 430, 431, 437, 438, 439, 441, 444], "whether": [1, 2, 3, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 98, 100, 107, 108, 120, 126, 129, 133, 139, 140, 141, 145, 146, 147, 153, 154, 155, 156, 161, 162, 165, 166, 179, 183, 192, 194, 195, 198, 229, 235, 237, 244, 246, 253, 254, 269, 273, 274, 313, 318, 322, 328, 329, 330, 331, 332, 333, 335, 337, 338, 342, 345, 346, 348, 349, 350, 351, 353, 354, 361, 363, 366, 391, 415, 424, 425, 426, 428, 429, 437, 438, 439, 443, 444], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 101, 105, 107, 112, 113, 114, 118, 121, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 144, 147, 153, 154, 155, 156, 161, 162, 165, 166, 167, 178, 179, 180, 183, 184, 187, 190, 191, 194, 196, 199, 200, 202, 207, 208, 209, 211, 216, 217, 218, 220, 223, 224, 228, 229, 231, 234, 236, 237, 238, 243, 244, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 280, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 314, 316, 317, 318, 321, 324, 328, 330, 331, 337, 343, 345, 346, 348, 349, 350, 351, 352, 353, 362, 363, 364, 365, 366, 367, 383, 385, 391, 396, 397, 398, 401, 411, 413, 414, 415, 419, 420, 421, 424, 425, 426, 427, 428, 430, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "occur": [1, 8, 17, 39, 65, 73, 74, 77, 84, 126, 129, 133, 135, 140, 141, 153, 154, 161, 162, 179, 188, 200, 211, 216, 243, 249, 305, 310, 311, 314, 315, 316, 317, 318, 340, 428, 441, 444], "serial": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 244, 246], "parallel": [1, 3, 8, 126, 129, 132, 133, 134, 140, 141, 153, 154, 155, 156, 161, 162, 167, 237, 243, 269, 273, 328, 412, 413, 414, 415, 425, 426, 437, 438, 443], "syncdatacollector": [1, 2, 3, 16, 17, 21, 22, 23, 24, 25, 26, 41, 55, 75, 184, 187, 220, 251, 269, 273, 411, 414, 417, 424, 425, 426, 427, 428, 432, 434, 437, 438, 441], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 45, 46, 47, 61, 63, 70, 82, 83, 84, 94, 130, 148, 153, 161, 235, 244, 413, 414, 415, 424, 425, 426, 443, 444], "multisyncdatacollector": [1, 17, 23, 24, 25, 26, 251, 414, 417, 426, 432, 443], "split": [1, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 43, 48, 61, 63, 74, 83, 94, 105, 112, 113, 144, 155, 156, 267, 271, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 419, 421, 426, 430, 441, 443], "workload": 1, "across": [1, 3, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 57, 62, 66, 69, 72, 78, 79, 105, 112, 113, 124, 125, 127, 128, 132, 134, 135, 137, 138, 139, 148, 149, 153, 158, 162, 235, 244, 246, 269, 273, 279, 289, 290, 346, 403, 417, 419, 420, 424, 429, 433, 437, 438, 439], "aggreg": [1, 3, 32, 65, 105, 118, 155, 156, 179, 208, 253, 254, 256, 257, 320, 420, 438], "result": [1, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 33, 39, 44, 45, 46, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 84, 85, 105, 107, 111, 112, 113, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 167, 178, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 248, 251, 266, 267, 269, 271, 273, 274, 279, 292, 298, 309, 311, 316, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 403, 420, 425, 427, 429, 430, 433, 434, 439, 440, 443, 444], "final": [1, 2, 3, 4, 26, 45, 46, 47, 50, 61, 63, 70, 71, 84, 230, 243, 248, 266, 267, 269, 271, 273, 279, 290, 312, 319, 363, 396, 419, 424, 425, 426, 428, 433, 434, 437, 438, 439, 444], "multiasyncdatacollector": [1, 22, 23, 24, 25, 26, 251, 413, 417, 424, 425, 426, 432, 443], "sever": [1, 2, 3, 8, 32, 39, 44, 51, 55, 65, 66, 72, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 190, 208, 237, 246, 348, 424, 426, 428, 433, 434, 441, 444], "gather": [1, 3, 23, 25, 26, 50, 83, 94, 98, 100, 105, 112, 120, 209, 216, 278, 281, 286, 346, 362, 405, 418, 425, 426, 427, 432, 437, 438, 439, 441, 443, 444], "continu": [1, 2, 3, 9, 33, 36, 50, 85, 86, 87, 113, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 165, 166, 172, 180, 205, 230, 238, 256, 257, 258, 259, 289, 290, 320, 325, 329, 352, 363, 368, 376, 419, 424, 426, 430, 437, 438, 441], "concomitantli": [1, 126, 129, 133, 140, 141, 153, 154, 161, 162], "network": [1, 4, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 246, 253, 254, 256, 257, 258, 259, 262, 264, 265, 271, 274, 279, 280, 281, 283, 284, 285, 287, 289, 291, 293, 294, 295, 300, 306, 307, 308, 309, 317, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 359, 361, 363, 364, 365, 366, 367, 410, 411, 419, 420, 421, 428, 431, 434, 436, 439, 444], "impli": [1, 84, 444], "mai": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 96, 99, 105, 112, 126, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 167, 195, 207, 211, 224, 235, 237, 239, 244, 246, 249, 269, 273, 274, 279, 318, 330, 337, 345, 348, 351, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 438, 439, 440, 441, 444], "slightli": [1, 28, 420, 427, 428, 437, 439, 440, 441, 444], "lag": [1, 424, 425, 426], "therefor": [1, 2, 3, 7, 62, 69, 78, 79, 126, 129, 133, 140, 141, 153, 154, 161, 162, 220, 348, 361, 428, 431, 437, 444], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 187], "where": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 39, 41, 43, 44, 45, 46, 47, 50, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 94, 96, 98, 100, 105, 107, 112, 113, 118, 120, 121, 126, 129, 133, 140, 141, 144, 147, 150, 153, 154, 155, 156, 161, 162, 175, 178, 179, 180, 181, 184, 187, 195, 199, 207, 215, 220, 223, 228, 229, 230, 231, 232, 236, 237, 239, 242, 243, 246, 248, 266, 267, 268, 269, 271, 272, 273, 277, 278, 279, 287, 289, 290, 309, 314, 317, 318, 327, 328, 329, 330, 331, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 420, 421, 424, 425, 426, 428, 429, 436, 437, 438, 439, 441, 444], "asynchron": [1, 9, 17, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317, 328, 413, 424, 425, 426], "off": [1, 2, 4, 270, 299, 310, 351, 381, 396, 406, 419, 421, 424, 425, 426, 430, 431, 437, 438, 440, 443, 444], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 105, 107, 112, 120, 126, 129, 132, 133, 134, 139, 140, 141, 153, 154, 155, 156, 161, 162, 163, 165, 167, 187, 194, 198, 202, 211, 229, 236, 237, 243, 246, 263, 267, 269, 271, 273, 280, 282, 306, 308, 309, 311, 315, 328, 336, 338, 344, 348, 396, 419, 420, 421, 424, 425, 426, 427, 429, 430, 432, 433, 437, 438, 439, 440, 441, 444], "rollout": [1, 2, 3, 11, 16, 17, 20, 22, 26, 28, 50, 71, 77, 84, 118, 124, 125, 126, 129, 133, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 180, 181, 183, 184, 187, 190, 192, 194, 195, 198, 199, 200, 205, 207, 208, 213, 217, 218, 223, 224, 225, 228, 229, 231, 232, 235, 238, 244, 246, 250, 251, 252, 269, 273, 276, 290, 313, 328, 381, 383, 405, 419, 424, 426, 427, 430, 431, 432, 433, 434, 440, 441, 443], "necessari": [1, 4, 6, 8, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 195, 224, 349, 363, 364, 365, 366, 367, 420, 424, 426, 430, 431, 432], "synchronis": [1, 130, 437, 438], "either": [1, 2, 5, 27, 30, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 94, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 209, 228, 229, 246, 323, 346, 353, 354, 387, 421, 424, 425, 427, 437, 440, 441, 443, 444], "update_policy_weights_": [1, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 424, 438, 443], "update_at_each_batch": [1, 16, 17, 22], "true": [1, 2, 3, 4, 8, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 113, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 197, 200, 202, 205, 206, 207, 208, 209, 210, 211, 215, 216, 218, 219, 222, 223, 224, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 265, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 297, 298, 299, 304, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 363, 364, 365, 366, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 390, 391, 394, 395, 396, 398, 401, 415, 419, 420, 421, 424, 425, 426, 427, 428, 430, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "second": [1, 2, 3, 8, 28, 50, 51, 52, 53, 54, 118, 153, 184, 232, 267, 269, 271, 273, 311, 330, 345, 348, 351, 383, 385, 388, 390, 400, 424, 426, 432, 437, 438, 439, 441, 443, 444], "devic": [1, 2, 3, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 112, 113, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 175, 178, 180, 184, 191, 194, 195, 196, 198, 199, 200, 205, 207, 208, 213, 214, 215, 217, 218, 220, 224, 227, 228, 230, 233, 236, 237, 238, 240, 242, 244, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 282, 283, 288, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 381, 398, 403, 409, 419, 424, 425, 426, 427, 428, 437, 438, 439, 440, 443], "oper": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 99, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 202, 207, 232, 234, 238, 246, 262, 263, 268, 272, 306, 307, 308, 310, 311, 312, 317, 323, 328, 330, 332, 333, 338, 345, 348, 350, 361, 362, 363, 364, 365, 366, 401, 417, 420, 421, 424, 425, 426, 427, 428, 429, 430, 436, 437, 438, 439, 444], "instanc": [1, 2, 3, 4, 7, 8, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 39, 44, 45, 46, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 82, 83, 84, 85, 95, 96, 98, 99, 100, 103, 105, 107, 112, 113, 120, 126, 128, 129, 130, 132, 133, 134, 140, 141, 147, 153, 154, 161, 162, 167, 172, 179, 211, 230, 237, 244, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 279, 280, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 329, 331, 333, 336, 337, 344, 346, 349, 351, 353, 354, 361, 363, 364, 365, 366, 381, 383, 387, 391, 396, 405, 406, 407, 411, 413, 414, 419, 420, 421, 424, 426, 427, 428, 429, 430, 439, 441, 444], "cpu": [1, 2, 3, 8, 10, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 107, 112, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 184, 191, 194, 195, 196, 198, 199, 200, 205, 208, 213, 215, 217, 218, 220, 224, 227, 228, 230, 236, 237, 238, 240, 242, 246, 250, 252, 262, 267, 268, 269, 271, 272, 273, 276, 282, 283, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 381, 419, 424, 425, 426, 427, 437, 438, 439, 440, 443], "slower": [1, 437], "than": [1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 32, 65, 84, 105, 112, 113, 116, 118, 126, 129, 133, 137, 140, 141, 151, 152, 153, 154, 158, 161, 162, 195, 208, 209, 218, 248, 259, 269, 271, 273, 274, 301, 305, 310, 317, 318, 322, 346, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 418, 419, 420, 424, 425, 426, 428, 429, 431, 437, 438, 439, 441, 443, 444], "one": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 103, 104, 105, 107, 108, 112, 113, 114, 116, 118, 119, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 180, 181, 184, 187, 190, 192, 194, 196, 197, 198, 205, 208, 210, 211, 215, 220, 223, 226, 227, 229, 230, 231, 236, 237, 239, 242, 244, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 280, 281, 284, 285, 286, 287, 288, 290, 292, 293, 294, 296, 301, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 324, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 358, 361, 363, 364, 365, 366, 370, 371, 383, 385, 394, 396, 397, 401, 405, 415, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 444], "cuda": [1, 2, 3, 7, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 125, 126, 129, 133, 135, 136, 137, 140, 141, 153, 154, 161, 162, 191, 207, 214, 215, 230, 236, 237, 240, 242, 246, 267, 268, 271, 272, 317, 393, 424, 425, 426, 427, 437, 438, 440, 444], "multipl": [1, 2, 3, 5, 8, 15, 16, 17, 20, 22, 23, 24, 25, 26, 53, 65, 69, 78, 79, 80, 84, 100, 107, 108, 120, 124, 125, 138, 139, 140, 153, 161, 162, 188, 190, 195, 197, 206, 209, 210, 220, 223, 227, 228, 235, 244, 267, 271, 273, 279, 282, 283, 305, 310, 314, 315, 317, 318, 321, 330, 337, 345, 348, 358, 369, 415, 419, 420, 421, 424, 425, 426, 429, 431, 432, 437, 438, 439, 441, 443], "infer": [1, 3, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 244, 269, 273, 282, 309, 314, 318, 335, 381, 424, 426, 428, 432, 434, 441, 443], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 105, 112, 113, 124, 125, 126, 127, 128, 129, 132, 133, 138, 139, 140, 141, 147, 148, 149, 153, 154, 161, 162, 167, 191, 205, 210, 211, 227, 235, 236, 237, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 318, 319, 320, 321, 324, 331, 337, 351, 383, 390, 396, 413, 414, 415, 418, 419, 420, 421, 424, 425, 426, 427, 430, 431, 432, 433, 434, 437, 438, 439, 443], "dispatch": [1, 3, 23, 24, 25, 26, 39, 65, 77, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 301, 313, 383, 424, 444], "avail": [1, 2, 3, 4, 6, 13, 16, 17, 20, 22, 23, 24, 25, 26, 62, 69, 78, 79, 105, 111, 112, 113, 124, 125, 127, 128, 137, 138, 139, 145, 146, 151, 152, 153, 155, 156, 158, 163, 164, 165, 166, 180, 183, 186, 205, 207, 263, 292, 314, 318, 346, 383, 413, 414, 424, 425, 426, 427, 428, 429, 430, 437, 438, 439, 441, 444], "speed": [1, 2, 4, 8, 35, 126, 129, 133, 140, 141, 153, 154, 161, 162, 420, 424, 425, 426, 427, 437, 438, 439, 441, 443], "avoid": [1, 2, 3, 32, 39, 44, 55, 65, 66, 72, 77, 98, 100, 112, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 177, 187, 205, 235, 237, 244, 246, 249, 298, 305, 317, 322, 330, 331, 345, 348, 351, 404, 426, 428, 438], "oom": [1, 3, 45, 46, 47, 61, 63, 70, 84, 98, 100, 120], "choic": [1, 2, 57, 153, 195, 419, 420, 424, 425, 431, 437, 438], "pass": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 32, 36, 37, 39, 44, 48, 55, 57, 62, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 82, 83, 96, 98, 100, 105, 107, 112, 113, 118, 120, 126, 129, 130, 131, 133, 134, 140, 141, 144, 148, 153, 154, 155, 156, 161, 162, 165, 183, 184, 187, 192, 194, 195, 198, 208, 209, 218, 235, 239, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 280, 281, 282, 284, 285, 288, 290, 291, 293, 294, 296, 300, 301, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 329, 330, 331, 344, 345, 346, 348, 349, 351, 353, 354, 363, 364, 365, 366, 367, 381, 398, 401, 413, 414, 415, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 441, 443, 444], "ie": [1, 2, 3, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 89, 104, 113, 126, 129, 133, 137, 140, 141, 150, 153, 154, 161, 162, 179, 180, 187, 202, 227, 230, 239, 244, 269, 273, 309, 317, 419, 420, 425, 438], "store": [1, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 42, 43, 44, 45, 46, 47, 50, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 83, 84, 94, 96, 98, 99, 100, 101, 104, 105, 107, 112, 118, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 195, 205, 232, 243, 244, 246, 248, 250, 251, 276, 290, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 390, 417, 421, 424, 426, 427, 430, 432, 434, 437, 438, 440, 444], "while": [1, 2, 3, 7, 8, 28, 32, 39, 44, 55, 65, 66, 67, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 220, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 336, 344, 345, 348, 419, 420, 424, 426, 427, 430, 432, 433, 437, 438, 439, 440, 441, 443], "wait": [1, 24, 26, 27, 67, 163, 427, 439], "also": [1, 2, 3, 8, 9, 11, 16, 17, 28, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 69, 70, 72, 77, 78, 79, 82, 84, 94, 98, 99, 100, 105, 107, 112, 113, 118, 120, 126, 129, 133, 139, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 175, 177, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 197, 199, 200, 201, 203, 205, 206, 207, 211, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 247, 253, 254, 267, 271, 274, 294, 313, 314, 319, 320, 321, 328, 329, 331, 332, 333, 335, 336, 337, 342, 344, 348, 351, 353, 363, 370, 371, 381, 383, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 441, 443, 444], "impact": [1, 2, 3, 139, 194, 198, 249, 328, 330, 345, 348, 350, 425, 427, 437, 438], "memori": [1, 3, 8, 26, 32, 35, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 67, 70, 72, 77, 83, 84, 96, 98, 99, 103, 126, 129, 130, 133, 137, 140, 141, 153, 154, 161, 162, 187, 191, 215, 230, 236, 237, 240, 242, 244, 246, 261, 271, 272, 317, 415, 417, 421, 424, 425, 427, 437, 441, 443], "manag": [1, 8, 18, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 251, 269, 273, 304, 359, 360, 363, 364, 365, 366, 391, 396, 419, 427, 428, 431, 443], "kei": [1, 2, 7, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 104, 105, 107, 110, 112, 113, 118, 126, 129, 133, 138, 139, 140, 141, 153, 154, 155, 156, 161, 162, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 248, 250, 252, 262, 263, 266, 269, 273, 275, 276, 290, 292, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 381, 383, 395, 396, 397, 399, 400, 401, 405, 420, 421, 424, 426, 427, 428, 429, 431, 436, 437, 438, 439, 441, 443, 444], "control": [1, 3, 5, 8, 20, 28, 29, 36, 37, 38, 48, 69, 74, 78, 79, 105, 107, 112, 126, 127, 128, 129, 133, 139, 140, 141, 144, 153, 154, 155, 156, 161, 162, 178, 197, 256, 257, 258, 259, 269, 273, 275, 276, 290, 294, 301, 317, 318, 319, 328, 330, 331, 345, 346, 348, 352, 363, 368, 376, 381, 391, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 441, 443], "which": [1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 107, 110, 111, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 167, 187, 188, 194, 198, 203, 205, 207, 208, 210, 211, 215, 216, 218, 228, 230, 231, 234, 236, 237, 238, 240, 244, 246, 247, 262, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 287, 289, 299, 306, 307, 308, 309, 313, 314, 317, 318, 319, 320, 328, 329, 330, 331, 333, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 357, 361, 363, 364, 365, 366, 381, 383, 392, 397, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 444], "storing_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 425, 438], "dure": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 62, 63, 66, 67, 68, 69, 71, 72, 78, 79, 83, 94, 96, 101, 105, 107, 110, 112, 126, 129, 130, 133, 139, 140, 141, 153, 154, 155, 156, 161, 162, 183, 184, 187, 190, 194, 195, 198, 200, 202, 203, 205, 209, 213, 225, 227, 230, 232, 234, 235, 237, 238, 239, 244, 246, 249, 251, 252, 269, 273, 280, 313, 363, 365, 366, 396, 401, 420, 424, 425, 426, 427, 430, 431, 432, 434, 437, 438, 439, 441, 444], "heurist": [1, 4, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 248, 313, 318, 424, 428, 432, 444], "usual": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 110, 118, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 235, 283, 348, 353, 362, 363, 364, 365, 366, 367, 382, 418, 419, 420, 421, 424, 425, 426, 427, 430, 432, 433, 438, 441, 444], "same": [1, 2, 3, 4, 20, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 111, 112, 113, 116, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 148, 149, 153, 154, 155, 156, 158, 161, 162, 180, 187, 194, 195, 197, 198, 203, 205, 208, 209, 210, 211, 227, 235, 236, 237, 244, 246, 247, 253, 254, 268, 269, 272, 273, 274, 277, 278, 279, 280, 290, 298, 309, 321, 329, 331, 344, 346, 349, 351, 353, 354, 358, 420, 424, 425, 426, 429, 430, 432, 436, 437, 438, 440, 441, 444], "behavior": [1, 2, 3, 4, 16, 17, 26, 32, 39, 44, 55, 65, 66, 72, 77, 82, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 188, 194, 198, 211, 216, 229, 237, 246, 249, 269, 270, 273, 299, 336, 344, 353, 381, 391, 396, 419, 425, 427, 437, 438, 439, 441], "besid": 1, "those": [1, 2, 3, 5, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 194, 198, 205, 211, 230, 231, 234, 238, 273, 289, 314, 318, 319, 320, 403, 413, 414, 419, 424, 425, 429, 430, 438, 439, 444], "choos": [1, 11, 57, 126, 144, 269, 273, 348, 417, 420, 424, 425, 426, 428, 437, 438, 441, 443], "follow": [1, 2, 3, 6, 7, 8, 11, 14, 19, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 77, 82, 84, 105, 112, 113, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 147, 150, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 175, 183, 187, 207, 215, 240, 244, 246, 253, 254, 267, 269, 271, 273, 274, 311, 314, 315, 316, 327, 328, 329, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 383, 401, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 436, 437, 438, 439, 441, 443, 444], "max_frames_per_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 404, 424, 426, 443], "frame": [1, 2, 11, 16, 17, 20, 22, 23, 24, 25, 26, 55, 187, 203, 246, 248, 266, 290, 313, 382, 383, 385, 388, 390, 394, 396, 401, 404, 405, 424, 425, 426, 427, 430, 437, 438, 441, 443, 444], "call": [1, 2, 3, 7, 8, 11, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 101, 105, 106, 107, 111, 112, 114, 116, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 158, 161, 162, 163, 164, 167, 176, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 280, 281, 282, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 317, 318, 320, 321, 324, 330, 331, 345, 346, 348, 351, 353, 362, 363, 364, 365, 366, 381, 382, 385, 396, 420, 421, 425, 426, 427, 428, 429, 430, 432, 433, 437, 438, 439, 441, 443, 444], "frames_per_batch": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 55, 67, 75, 184, 187, 220, 269, 273, 404, 424, 425, 426, 427, 428, 432, 434, 437, 438, 441, 443], "each": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 32, 36, 37, 39, 43, 44, 48, 50, 51, 53, 55, 56, 65, 66, 69, 71, 72, 74, 76, 77, 78, 84, 105, 107, 110, 112, 113, 115, 118, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 180, 195, 206, 208, 209, 215, 220, 223, 228, 229, 230, 231, 235, 236, 242, 244, 246, 247, 248, 263, 266, 267, 268, 269, 271, 273, 279, 280, 284, 291, 292, 300, 304, 310, 311, 316, 318, 320, 369, 372, 373, 374, 375, 377, 378, 379, 380, 383, 396, 398, 413, 414, 420, 424, 425, 426, 427, 430, 431, 432, 434, 437, 438, 439, 440, 441, 443, 444], "init_random_fram": [1, 16, 17, 20, 22, 23, 24, 25, 26, 404, 424, 425, 428, 434], "rand_step": [1, 2, 3, 41, 75, 126, 127, 128, 129, 130, 132, 133, 134, 140, 141, 142, 143, 147, 148, 149, 153, 154, 161, 162, 206, 230, 244, 439, 443, 444], "reset_at_each_it": [1, 16, 17, 20, 22, 23, 24, 25, 26, 424], "split_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 424, 425, 426], "trajectori": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 42, 43, 55, 56, 76, 78, 84, 104, 105, 112, 113, 118, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 187, 216, 228, 235, 246, 250, 273, 276, 290, 348, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 392, 417, 420, 424, 425, 426, 427, 429, 432, 434, 439, 443, 444], "pad": [1, 2, 3, 28, 64, 80, 187, 195, 234, 253, 254, 256, 257, 273, 277, 278, 279, 398], "along": [1, 2, 3, 16, 17, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 100, 105, 107, 112, 113, 118, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 172, 186, 187, 188, 209, 211, 213, 216, 223, 227, 233, 246, 273, 274, 277, 278, 283, 310, 314, 317, 318, 331, 346, 353, 424, 425, 427, 429, 431, 437, 438, 439, 441, 443], "point": [1, 2, 3, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 97, 104, 105, 108, 118, 119, 122, 123, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 275, 317, 327, 338, 401, 418, 425, 426, 436, 437, 438, 439, 441, 443, 444], "boolean": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 113, 133, 179, 183, 216, 228, 277, 278, 290, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 421, 427], "repres": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 41, 48, 50, 57, 74, 75, 77, 78, 84, 99, 126, 127, 128, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 165, 166, 203, 216, 232, 244, 246, 263, 277, 278, 292, 298, 310, 311, 315, 316, 357, 363, 398, 419, 424, 426, 427, 428, 429, 430, 431, 437, 438], "valid": [1, 2, 3, 28, 61, 63, 64, 83, 84, 94, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 168, 183, 216, 235, 237, 246, 248, 253, 254, 274, 277, 278, 290, 330, 337, 345, 348, 351, 363, 364, 365, 366, 398, 421, 428, 444], "exploration_typ": [1, 16, 17, 20, 22, 23, 24, 25, 26, 396, 417, 419, 424, 425], "strategi": [1, 2, 3, 20, 110, 144, 180, 266, 278, 286, 419, 421, 424, 425, 428, 430, 437, 438, 441, 443], "reset_when_don": [1, 16, 17, 20, 22], "its": [1, 2, 3, 4, 5, 7, 9, 11, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 91, 100, 107, 112, 113, 126, 129, 133, 139, 140, 141, 147, 153, 154, 155, 156, 161, 162, 165, 168, 184, 186, 187, 192, 199, 207, 228, 229, 230, 235, 237, 243, 244, 246, 247, 248, 253, 254, 269, 273, 277, 278, 279, 280, 289, 310, 314, 315, 318, 321, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 361, 383, 401, 411, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444], "organ": [1, 2, 439, 441], "within": [1, 2, 3, 16, 17, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 99, 104, 105, 113, 126, 129, 132, 133, 134, 140, 141, 153, 154, 158, 161, 162, 179, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 304, 309, 311, 313, 316, 318, 321, 324, 325, 333, 338, 353, 361, 381, 383, 419, 420, 425, 428, 429, 430, 431, 432, 433, 434, 437, 439, 443], "differ": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 107, 110, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 144, 153, 154, 155, 156, 161, 162, 183, 187, 195, 196, 197, 208, 211, 218, 227, 235, 237, 239, 246, 247, 263, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 281, 292, 318, 344, 346, 348, 357, 363, 364, 365, 369, 370, 371, 396, 401, 403, 413, 414, 419, 420, 421, 424, 425, 426, 428, 429, 431, 433, 436, 437, 438, 439, 440, 441, 443, 444], "how": [1, 2, 3, 11, 14, 19, 23, 24, 25, 29, 32, 39, 44, 55, 62, 65, 66, 72, 77, 78, 104, 105, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 180, 195, 208, 246, 281, 314, 328, 330, 343, 345, 346, 348, 383, 385, 401, 418, 419, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "tabl": [1, 32, 419, 425, 430], "summar": [1, 3, 439], "what": [1, 3, 8, 11, 38, 39, 62, 82, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 178, 199, 230, 235, 315, 331, 342, 346, 353, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 443, 444], "expect": [1, 2, 3, 4, 7, 32, 36, 39, 44, 50, 55, 65, 66, 69, 72, 77, 82, 83, 105, 111, 112, 126, 129, 133, 140, 141, 147, 150, 153, 154, 161, 162, 167, 180, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 267, 268, 269, 271, 272, 273, 279, 280, 290, 311, 317, 320, 328, 329, 330, 331, 332, 333, 335, 336, 337, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 358, 361, 405, 418, 419, 420, 421, 424, 426, 427, 429, 430, 431, 432, 437, 438, 439, 441, 444], "n": [1, 2, 3, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 197, 202, 239, 246, 267, 268, 271, 276, 287, 289, 290, 313, 318, 328, 329, 337, 346, 362, 398, 421, 425, 427, 428, 441, 443, 444], "b": [1, 2, 3, 7, 8, 28, 36, 37, 39, 45, 46, 47, 48, 61, 63, 65, 69, 70, 71, 72, 74, 77, 78, 79, 84, 98, 99, 118, 126, 205, 238, 267, 268, 271, 272, 279, 280, 282, 283, 291, 300, 321, 363, 364, 365, 366, 367, 369, 383, 425, 441], "cat_result": [1, 16, 17], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 104, 105, 107, 111, 112, 113, 118, 126, 129, 130, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162, 167, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 205, 206, 207, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 246, 247, 267, 269, 271, 273, 290, 310, 317, 328, 352, 363, 364, 365, 366, 367, 369, 383, 390, 401, 403, 415, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "p": [1, 2, 4, 107, 110, 130, 159, 160, 251, 252], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 39, 44, 55, 65, 66, 72, 77, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 155, 156, 161, 162, 191, 194, 196, 198, 206, 215, 220, 224, 229, 230, 233, 235, 236, 237, 240, 242, 243, 246, 247, 267, 270, 271, 274, 279, 294, 298, 299, 317, 318, 320, 327, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 403, 413, 414, 415, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 444], "case": [1, 3, 4, 5, 7, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 103, 104, 105, 107, 118, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 167, 194, 195, 196, 198, 206, 211, 230, 233, 237, 238, 247, 273, 274, 280, 281, 314, 317, 318, 320, 321, 327, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 383, 392, 403, 413, 414, 415, 417, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 433, 437, 438, 439, 441, 443, 444], "dimens": [1, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 69, 70, 71, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 100, 105, 112, 113, 118, 120, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 161, 162, 165, 166, 172, 180, 186, 187, 188, 202, 209, 211, 213, 216, 223, 226, 227, 230, 233, 239, 244, 253, 254, 255, 260, 261, 269, 271, 273, 274, 277, 278, 279, 282, 283, 288, 291, 295, 296, 297, 298, 301, 310, 313, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 415, 417, 420, 424, 425, 426, 427, 429, 437, 438, 439, 441], "time": [1, 2, 3, 4, 7, 8, 16, 17, 20, 23, 24, 25, 26, 28, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 95, 98, 107, 118, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 144, 150, 153, 154, 155, 156, 158, 161, 162, 177, 178, 186, 187, 188, 195, 209, 216, 223, 230, 231, 232, 235, 237, 244, 246, 252, 264, 267, 271, 273, 290, 304, 313, 318, 329, 330, 331, 337, 340, 344, 345, 346, 348, 349, 351, 353, 354, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 401, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 443, 444], "adapt": [1, 29, 181, 209, 228, 249, 345, 424, 428, 439], "equal": [1, 16, 17, 22, 32, 84, 105, 112, 113, 126, 140, 148, 151, 152, 153, 161, 210, 211, 253, 254, 267, 269, 271, 273, 274, 277, 278, 280, 352, 357, 392, 413, 414, 424, 426, 440], "introduc": [1, 2, 153, 161, 267, 269, 271, 273, 290, 424, 437], "some": [1, 2, 3, 4, 7, 8, 9, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 107, 118, 120, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 167, 183, 215, 230, 237, 240, 246, 256, 269, 273, 296, 318, 319, 320, 383, 392, 404, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 441, 443, 444], "confus": [1, 30, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246], "other": [1, 2, 3, 4, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 107, 110, 111, 112, 113, 114, 116, 120, 126, 129, 132, 133, 134, 140, 141, 147, 153, 154, 161, 162, 190, 196, 197, 217, 224, 230, 233, 240, 244, 246, 251, 266, 267, 269, 273, 283, 304, 309, 311, 316, 318, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 363, 381, 398, 413, 414, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 443, 444], "better": [1, 3, 8, 9, 16, 17, 28, 139, 269, 273, 420, 426, 429, 439, 443], "consist": [1, 2, 3, 32, 36, 37, 39, 44, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 243, 246, 251, 254, 274, 424, 425, 426, 439, 440, 444], "interact": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 237, 314, 318, 424, 426, 428, 429, 430, 432, 437, 438, 439, 444], "keep": [1, 2, 3, 4, 7, 8, 17, 62, 69, 78, 79, 107, 111, 118, 126, 153, 161, 178, 211, 215, 242, 244, 246, 290, 313, 383, 394, 401, 424, 425, 426, 427, 432, 433, 434, 438, 439, 441, 444], "separ": [1, 2, 4, 8, 16, 17, 22, 23, 25, 26, 28, 36, 37, 48, 69, 74, 78, 79, 187, 215, 242, 329, 332, 335, 337, 349, 351, 353, 354, 420, 424, 425, 430, 431, 437, 438, 441, 444], "interchang": [1, 279, 280, 426, 429, 433, 440, 441], "between": [1, 2, 3, 4, 5, 16, 17, 18, 22, 26, 29, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 100, 105, 107, 108, 111, 112, 113, 120, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 167, 197, 210, 221, 232, 235, 237, 244, 246, 253, 254, 262, 267, 269, 273, 274, 279, 280, 311, 314, 318, 328, 330, 331, 332, 335, 336, 337, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 357, 363, 396, 401, 420, 424, 425, 427, 428, 432, 437, 438, 439, 441, 444], "wherea": [1, 2, 27, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 197, 235, 237, 246, 331, 346, 351, 421, 433], "correspond": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 104, 105, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 205, 215, 230, 235, 237, 242, 244, 246, 251, 266, 269, 271, 273, 277, 278, 290, 314, 318, 331, 333, 336, 337, 351, 361, 363, 364, 365, 366, 367, 419, 424, 425, 426, 428, 429, 431, 432, 433, 437, 438, 439, 440], "sub": [1, 2, 3, 16, 17, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 105, 112, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 216, 235, 246, 319, 320, 392, 401, 419, 420, 424, 425, 426, 432, 436, 443, 444], "doesn": [1, 4, 32, 39, 44, 55, 65, 66, 72, 77, 118, 126, 129, 133, 140, 141, 148, 153, 154, 161, 162, 194, 198, 246, 247, 428, 429], "understood": [1, 424], "serv": [1, 23, 25, 26, 135, 441, 443, 444], "basi": [1, 118, 279, 441, 443], "we": [1, 2, 3, 5, 7, 9, 11, 28, 29, 32, 36, 39, 44, 50, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 98, 111, 113, 118, 124, 125, 126, 129, 130, 133, 137, 138, 139, 140, 141, 153, 154, 161, 162, 167, 187, 195, 207, 215, 218, 224, 235, 240, 243, 244, 246, 247, 250, 273, 279, 280, 281, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 383, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "anoth": [1, 2, 3, 8, 14, 15, 18, 19, 21, 50, 77, 82, 99, 105, 112, 126, 129, 132, 133, 134, 137, 140, 141, 153, 154, 161, 162, 184, 192, 194, 196, 198, 230, 236, 274, 314, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 420, 424, 426, 427, 428, 430, 431, 436, 437, 438, 439, 444], "wise": [1, 209], "requir": [1, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 99, 104, 105, 112, 113, 126, 129, 133, 137, 140, 141, 148, 153, 154, 158, 161, 162, 184, 187, 191, 205, 215, 227, 230, 235, 236, 237, 240, 242, 246, 251, 269, 273, 274, 281, 301, 317, 318, 319, 320, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 381, 383, 385, 419, 421, 424, 425, 426, 427, 429, 430, 431, 433, 437, 438, 439, 441, 443, 444], "op": [1, 15, 18, 21, 30, 31, 33, 34, 35, 40, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 210, 243, 248, 251, 266, 383, 403], "sinc": [1, 2, 3, 4, 5, 7, 11, 28, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 104, 105, 113, 118, 126, 129, 133, 140, 141, 153, 154, 155, 156, 158, 161, 162, 167, 178, 192, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 310, 311, 313, 315, 316, 321, 324, 381, 383, 420, 424, 425, 426, 427, 429, 430, 431, 437, 439, 440, 441, 443, 444], "goal": [1, 3, 4, 141, 229, 424, 425, 426, 427, 438, 439], "policy_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 425], "explicitli": [1, 2, 3, 4, 35, 83, 95, 96, 103, 107, 183, 289, 314, 391, 420, 425, 427, 432, 437, 438, 441], "do": [1, 2, 3, 4, 7, 57, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 178, 180, 216, 230, 235, 243, 244, 269, 273, 280, 282, 307, 318, 346, 363, 383, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 443, 444], "deepcopi": [1, 281, 346, 437], "structur": [1, 3, 7, 45, 46, 47, 50, 57, 61, 62, 63, 69, 70, 71, 78, 79, 82, 83, 84, 99, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 194, 198, 230, 279, 290, 328, 337, 348, 351, 363, 364, 365, 366, 367, 417, 420, 424, 426, 427, 429, 432, 437, 438, 439, 440], "place": [1, 2, 3, 29, 32, 38, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 98, 100, 107, 110, 112, 120, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 166, 179, 183, 191, 199, 215, 230, 236, 237, 240, 242, 243, 244, 246, 281, 309, 313, 317, 398, 403, 404, 420, 425, 426, 430, 433, 437, 438, 439, 441], "instanti": [1, 2, 3, 16, 17, 26, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 78, 79, 82, 84, 104, 105, 107, 137, 139, 183, 205, 230, 280, 363, 364, 365, 366, 367, 381, 424, 425, 430, 431, 433, 437, 438, 439, 441, 444], "all": [1, 2, 3, 4, 8, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 107, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 155, 156, 161, 162, 165, 166, 168, 170, 172, 176, 178, 180, 186, 187, 190, 191, 194, 195, 196, 198, 201, 207, 210, 211, 215, 223, 225, 227, 230, 231, 236, 237, 240, 242, 244, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 280, 281, 284, 285, 288, 290, 293, 294, 296, 301, 304, 309, 311, 313, 316, 317, 318, 320, 321, 324, 325, 328, 329, 331, 340, 344, 346, 348, 349, 350, 351, 353, 354, 358, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 397, 401, 404, 413, 414, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 443, 444], "graph": [1, 3, 4, 8, 39, 65, 77, 124, 125, 138, 139, 359, 360, 424, 428, 439], "reli": [1, 2, 3, 11, 28, 66, 72, 230, 267, 268, 269, 271, 272, 273, 328, 348, 420, 424, 426, 428, 430, 432, 439, 444], "third": [1, 211, 232, 311, 437, 438], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 424, 425, 426, 427, 428, 431, 432, 437, 438, 439, 443, 444], "limit": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 207, 328, 330, 345, 346, 348, 350, 420, 424, 425, 427, 437, 438, 439], "chart": 1, "show": [1, 2, 11, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 280, 383, 424, 426, 427, 428, 437, 438, 439, 441, 443], "decis": [1, 2, 3, 255, 260, 288, 309, 334, 347, 419, 427, 429, 430, 437, 438, 441, 444], "multiprocess": [1, 2, 3, 15, 16, 17, 23, 24, 25, 69, 78, 79, 99, 107, 130, 131, 153, 161, 244, 424, 425, 426, 427, 432, 437, 438, 439, 440, 444], "ensur": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 72, 77, 78, 84, 104, 105, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 187, 195, 215, 228, 237, 240, 244, 246, 269, 273, 310, 419, 425, 426, 439, 441], "flexibl": [1, 3, 9, 148, 355, 420, 421, 424, 428, 441, 444], "extens": [1, 2, 62, 69, 78, 79, 113, 251, 421, 441], "mechan": [1, 4, 15, 18, 21, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 425, 431, 439], "accommod": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 429, 430], "variou": [1, 2, 3, 15, 126, 236, 269, 273, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 355, 361, 383, 413, 414, 424, 425, 426, 428, 429, 430, 431, 433, 437, 438, 441, 444], "deploy": [1, 428], "scenario": [1, 2, 21, 145, 146, 153, 165, 166, 235, 381, 424, 430, 437, 438, 439], "facilit": [1, 2, 3, 7, 214, 215, 230, 240, 242, 306, 307, 308, 419, 424, 427, 430, 439], "localweightupdaterbas": [1, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26], "remoteweightupdaterbas": [1, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26], "These": [1, 2, 7, 50, 71, 121, 165, 215, 242, 419, 420, 424, 426, 437, 438, 439, 441, 444], "base": [1, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 32, 50, 62, 69, 72, 78, 79, 83, 109, 115, 118, 119, 121, 122, 124, 125, 126, 129, 133, 137, 138, 139, 140, 141, 147, 148, 149, 153, 154, 161, 162, 165, 178, 196, 220, 234, 236, 240, 241, 269, 273, 279, 281, 306, 312, 328, 329, 331, 332, 333, 335, 336, 337, 339, 344, 348, 349, 350, 351, 353, 354, 390, 401, 419, 420, 421, 424, 425, 427, 429, 430, 431, 433, 437, 438, 439, 441, 444], "interfac": [1, 3, 14, 19, 136, 150, 274, 282, 419, 420, 424, 426, 428, 433, 439, 441], "logic": [1, 3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 437], "allow": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 57, 59, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 84, 99, 105, 107, 110, 112, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 178, 183, 184, 218, 246, 247, 274, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 355, 357, 361, 419, 421, 424, 426, 427, 428, 429, 430, 431, 437, 438, 439, 441, 443, 444], "tailor": [1, 140, 443], "need": [1, 2, 3, 4, 7, 8, 10, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 61, 63, 65, 66, 72, 77, 82, 114, 118, 126, 129, 133, 137, 140, 141, 144, 153, 154, 155, 156, 161, 162, 187, 190, 192, 195, 202, 208, 215, 218, 231, 235, 236, 237, 242, 244, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 282, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 314, 315, 316, 317, 321, 324, 327, 337, 350, 351, 362, 367, 383, 401, 415, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 443, 444], "respons": [1, 2, 3, 8, 14, 16, 17, 19, 20, 23, 25, 26, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 401, 431, 432, 444], "It": [1, 2, 3, 4, 7, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 71, 72, 73, 74, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 99, 107, 110, 118, 123, 126, 129, 133, 135, 140, 141, 147, 148, 153, 154, 155, 156, 161, 162, 165, 166, 167, 178, 184, 186, 187, 199, 205, 207, 211, 216, 229, 235, 237, 243, 246, 248, 256, 258, 264, 266, 279, 280, 289, 290, 291, 293, 294, 300, 301, 311, 313, 316, 318, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 354, 361, 362, 363, 381, 390, 396, 418, 419, 420, 424, 425, 427, 428, 429, 437, 438, 439, 440, 441, 443, 444], "particularli": [1, 2, 428, 443, 444], "machin": [1, 2, 7, 23, 24, 25, 55, 137, 437, 438, 443], "fetch": [1, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 124, 125, 127, 128, 207, 430, 440, 441], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "appli": [1, 2, 3, 4, 15, 18, 20, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 210, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 251, 267, 271, 281, 298, 310, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 347, 348, 349, 350, 351, 353, 354, 363, 381, 397, 421, 424, 425, 426, 432, 437, 439, 443, 444], "ask": [1, 2, 3, 8, 105, 112, 113, 195, 383, 426, 427, 429, 430, 437, 438, 440, 444], "contrast": [1, 3, 267, 289, 343, 441], "situat": [1, 2, 140, 145, 146, 195], "decid": [1, 62, 69, 78, 79, 437, 443], "handl": [1, 2, 3, 15, 16, 17, 23, 25, 26, 32, 39, 44, 55, 57, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 244, 246, 273, 274, 328, 346, 348, 401, 413, 414, 424, 425, 426, 427, 429, 431, 438, 441], "essenti": [1, 2, 3, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 425, 429, 437, 439, 441], "system": [1, 4, 5, 96, 426, 437, 438, 439], "kept": [1, 3, 28, 111, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 178, 197, 224, 270, 298, 299, 431, 437], "central": [1, 2, 15, 19, 279, 280, 281, 424, 425, 429, 437, 438, 441], "divers": [1, 4, 153, 161], "benefici": [1, 2], "involv": [1, 132, 134, 135, 145, 146, 158, 184, 187, 235, 269, 273, 429, 431], "complex": [1, 2, 15, 18, 21, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317, 424, 425, 429, 430], "architectur": [1, 4, 260, 431, 437, 438, 443], "special": [1, 3, 86, 88, 417, 424, 427, 428, 444], "hardwar": [1, 3, 428], "By": [1, 2, 3, 36, 37, 48, 59, 74, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 153, 154, 155, 156, 158, 161, 162, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 209, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 301, 318, 346, 391, 396, 415, 420, 424, 427, 437, 440, 441, 444], "retriev": [1, 3, 14, 15, 18, 19, 21, 45, 46, 47, 50, 61, 62, 63, 65, 67, 68, 69, 70, 78, 79, 84, 107, 110, 112, 113, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 178, 188, 196, 199, 211, 250, 253, 276, 313, 314, 318, 321, 325, 328, 329, 330, 331, 333, 345, 348, 349, 351, 353, 354, 361, 363, 364, 365, 366, 415, 421, 425, 426, 430, 439, 444], "seamless": [1, 2, 274], "integr": [1, 2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 259, 269, 273, 276, 317, 419, 429, 430, 432, 437, 438, 439, 440], "infrastructur": [1, 3, 437, 438], "vanillalocalweightupdat": [1, 20], "multiprocessedremoteweightupd": [1, 16, 17], "rayremoteweightupdat": [1, 26], "rpcremoteweightupdat": [1, 25], "distributedremoteweightupdat": [1, 23], "cover": [1, 3, 132, 134, 418, 426, 429, 432, 433, 439, 443], "rang": [1, 2, 3, 4, 8, 62, 67, 68, 69, 71, 78, 79, 98, 100, 107, 118, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 161, 162, 195, 220, 233, 244, 246, 247, 268, 272, 289, 345, 353, 354, 420, 421, 424, 426, 427, 428, 431, 432, 434, 437, 438, 439, 441, 443], "typic": [1, 2, 3, 4, 8, 15, 18, 20, 21, 23, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 195, 199, 229, 246, 287, 289, 314, 329, 331, 346, 348, 351, 419, 420, 421, 426, 428, 429, 431, 432, 437, 438, 439], "larg": [1, 3, 4, 35, 45, 46, 47, 61, 63, 70, 84, 112, 113, 194, 198, 240, 328, 330, 345, 348, 350, 425, 426, 437, 438, 441], "scale": [1, 3, 4, 29, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 207, 211, 222, 229, 233, 244, 249, 264, 270, 293, 294, 298, 299, 306, 307, 308, 314, 318, 320, 328, 329, 331, 344, 348, 349, 350, 351, 399, 405, 415, 419, 424, 425, 426, 427, 430, 438, 443], "design": [1, 15, 32, 39, 44, 55, 57, 59, 65, 66, 72, 77, 110, 116, 123, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 180, 187, 205, 216, 235, 237, 246, 309, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 417, 424, 425, 426, 427, 429, 430, 431, 436, 437, 438, 439, 441, 443, 444], "leverag": [1, 18, 26, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 424, 438, 444], "latenc": [1, 2], "account": [1, 2, 98, 100, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 183, 192, 277, 278, 419, 425, 427, 441, 444], "delai": [1, 27, 353, 431], "transfer": [1, 13, 16, 17, 20, 22, 23, 24, 25, 26, 318], "receiv": [1, 2, 3, 18, 32, 39, 44, 55, 65, 66, 71, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 237, 246, 274, 369, 420, 424, 426, 431, 436, 439], "manner": [1, 2, 133, 215, 240, 419, 424, 425, 426, 432, 436, 439, 441], "maintain": [1, 3, 5, 9, 38, 57, 187, 439], "import": [1, 2, 3, 4, 6, 10, 11, 16, 17, 20, 22, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 171, 172, 177, 178, 179, 180, 181, 183, 184, 186, 187, 190, 192, 195, 199, 200, 205, 206, 207, 208, 211, 213, 215, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 236, 238, 242, 244, 246, 247, 250, 252, 256, 257, 258, 259, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 281, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 381, 383, 394, 396, 411, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "stale": 1, "lead": [1, 2, 3, 4, 8, 10, 28, 36, 37, 48, 55, 62, 69, 74, 84, 111, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 161, 162, 230, 247, 270, 291, 298, 299, 304, 424, 427, 428, 437, 438, 439, 441, 443], "suboptim": 1, "scalabl": 1, "As": [1, 2, 3, 4, 55, 69, 78, 79, 82, 107, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 220, 261, 318, 363, 419, 424, 425, 426, 427, 428, 429, 431, 432, 437, 438, 439, 440, 441, 443, 444], "grow": [1, 3, 99], "overhead": [1, 2, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 178, 318], "broadcast": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 261, 337, 351], "minim": [1, 126, 129, 133, 140, 141, 153, 154, 161, 162, 385, 441], "bottleneck": [1, 3, 8, 105, 112, 113], "achiev": [1, 2, 3, 4, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 179, 229, 246, 252, 314, 398, 421, 424, 425, 426, 427, 428, 437, 438, 439, 441, 443, 444], "robust": [1, 216, 249], "varieti": [1, 3, 11], "remain": [1, 111, 186, 196, 197, 207, 229, 283, 431], "date": [1, 15, 18, 126, 186, 386], "simplest": [1, 39, 65, 77, 118, 321, 424, 426, 427, 430, 437, 438, 441, 444], "transit": [1, 32, 39, 44, 55, 65, 66, 72, 77, 105, 113, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 249, 251, 323, 424, 427, 429, 430, 432, 437, 439, 441], "sampl": [1, 4, 8, 9, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 116, 118, 120, 126, 129, 133, 140, 141, 147, 150, 153, 154, 161, 162, 169, 176, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 248, 250, 261, 266, 270, 276, 277, 278, 286, 288, 289, 290, 293, 298, 299, 302, 305, 310, 311, 312, 314, 315, 316, 317, 318, 328, 329, 330, 331, 332, 333, 335, 345, 347, 348, 353, 354, 392, 398, 401, 404, 417, 419, 420, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 440, 443, 444], "attent": [1, 2, 8, 140, 187, 424, 427, 444], "given": [1, 2, 3, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 105, 107, 112, 113, 126, 129, 133, 140, 141, 147, 151, 152, 153, 154, 161, 162, 163, 164, 178, 191, 195, 197, 205, 211, 215, 230, 234, 236, 237, 238, 240, 242, 244, 246, 248, 250, 252, 263, 264, 266, 267, 269, 271, 273, 276, 281, 292, 296, 305, 310, 311, 313, 316, 317, 318, 319, 320, 322, 327, 332, 333, 335, 346, 362, 363, 364, 365, 366, 367, 369, 393, 396, 411, 419, 420, 421, 424, 425, 426, 429, 430, 431, 432, 433, 438, 439, 444], "built": [1, 2, 3, 5, 7, 107, 124, 125, 132, 138, 139, 150, 151, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 355, 361, 409, 411, 412, 415, 424, 425, 426, 427, 428, 431, 433, 439, 441, 444], "flatten": [1, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 118, 184, 202, 398, 417, 427, 438], "suffici": [1, 3, 4, 424], "preprocess": [1, 2, 83, 236, 425, 428], "popul": [1, 2, 3, 16, 17, 20, 26, 62, 67, 68, 69, 76, 78, 79, 107, 140, 206, 230, 261, 281, 346, 424, 426, 427, 430, 432, 439, 441], "replaybuff": [1, 2, 3, 16, 17, 20, 26, 41, 62, 67, 68, 75, 78, 79, 98, 99, 104, 105, 106, 107, 112, 113, 122, 187, 216, 220, 246, 333, 338, 361, 409, 411, 417, 426, 428, 432, 434, 437, 438, 440, 441, 443], "lazytensorstorag": [1, 2, 62, 69, 77, 78, 79, 104, 112, 113, 118, 220, 246, 426, 428, 434, 437, 438, 441], "lambda": [1, 2, 16, 17, 20, 22, 26, 27, 39, 50, 65, 69, 77, 84, 118, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 177, 184, 192, 205, 207, 230, 238, 246, 247, 252, 301, 310, 313, 314, 315, 339, 341, 342, 353, 363, 366, 374, 375, 379, 380, 381, 411, 420, 424, 425, 428, 437, 438, 440, 441, 443, 444], "reshap": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 112, 118, 184, 269, 273, 274, 289, 381, 426, 437, 438], "slice": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 105, 107, 112, 113, 180, 186, 187, 441], "recommend": [1, 2, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 112, 118, 137, 187, 281, 420, 432, 437, 438], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 101, 107, 118, 126, 129, 130, 133, 137, 140, 141, 153, 154, 155, 161, 162, 165, 166, 172, 178, 184, 187, 195, 205, 215, 235, 236, 237, 240, 243, 244, 246, 253, 254, 256, 257, 258, 259, 260, 261, 265, 269, 273, 274, 275, 279, 280, 309, 317, 318, 325, 331, 333, 338, 349, 351, 361, 383, 398, 405, 406, 407, 411, 413, 414, 419, 424, 425, 426, 427, 428, 430, 433, 437, 438, 439, 440, 441, 443, 444], "multidimension": [1, 2, 78, 104, 105, 441], "slicesampl": [1, 2, 105, 113, 187, 441], "sampler": [1, 2, 62, 67, 68, 69, 78, 79, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 118, 120, 187, 216, 289, 333, 338, 361, 424, 426, 437, 438, 441], "One": [1, 2, 4, 8, 30, 31, 35, 36, 37, 40, 48, 53, 54, 59, 60, 74, 83, 118, 124, 125, 153, 161, 187, 220, 240, 248, 286, 317, 321, 352, 357, 387, 424, 425, 441, 444], "must": [1, 2, 3, 7, 11, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 105, 107, 112, 113, 114, 115, 116, 118, 120, 124, 126, 129, 130, 133, 138, 140, 141, 151, 153, 154, 155, 156, 158, 161, 162, 163, 165, 175, 180, 183, 184, 187, 190, 192, 195, 199, 203, 205, 207, 209, 211, 213, 224, 227, 229, 230, 231, 234, 235, 237, 238, 239, 244, 246, 253, 254, 263, 269, 273, 274, 277, 278, 279, 280, 292, 305, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 352, 353, 354, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 420, 424, 425, 426, 427, 430, 436, 439, 441], "shape": [1, 2, 3, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 104, 107, 112, 118, 120, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 172, 178, 180, 184, 186, 188, 194, 195, 198, 199, 200, 205, 207, 208, 211, 213, 217, 218, 220, 224, 227, 228, 230, 233, 238, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 357, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 392, 398, 401, 411, 419, 420, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 440, 441, 443, 444], "clearli": [1, 2], "dimension": [1, 62, 66, 69, 77, 78, 79, 197, 269, 273, 363, 368, 376, 420, 438], "num_slic": [1, 2, 105, 112, 113, 441], "4": [1, 2, 3, 7, 30, 32, 36, 37, 41, 48, 50, 53, 54, 55, 59, 62, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 98, 99, 100, 107, 112, 113, 120, 124, 125, 126, 127, 128, 129, 133, 138, 139, 140, 141, 142, 143, 144, 147, 149, 153, 154, 159, 160, 161, 162, 180, 181, 183, 184, 187, 192, 199, 220, 227, 228, 229, 235, 244, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 271, 272, 274, 276, 277, 278, 279, 280, 284, 285, 286, 288, 289, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 381, 382, 419, 423, 424, 425, 426, 427, 433, 437, 438, 439, 441, 442, 443, 444], "trajectory_kei": [1, 28, 112, 113], "traj_id": [1, 2, 3, 16, 17, 20, 28, 41, 75, 184, 220, 432, 441], "total_fram": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 55, 67, 75, 184, 187, 220, 401, 404, 411, 421, 424, 425, 426, 427, 428, 432, 434, 437, 438, 441, 443], "dim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 112, 187, 188, 209, 213, 226, 227, 230, 239, 244, 272, 296, 301, 313, 415, 420, 425, 426, 428, 437, 439, 441], "ndim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 100, 104, 105, 118, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 209, 246, 313], "parallelenv": [1, 2, 3, 16, 17, 20, 22, 25, 118, 126, 129, 133, 140, 141, 148, 154, 155, 156, 158, 161, 162, 235, 269, 273, 381, 412, 417, 424, 425, 426, 429, 436, 443, 444], "make_env": [1, 3, 153, 161, 166, 235, 244, 381, 406, 407, 424, 425, 443, 444], "regular": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 104, 110, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 249, 251, 262, 269, 273, 292, 311, 315, 316, 317, 318, 338, 348, 403, 417, 421, 424, 425, 428, 429, 430, 434, 441, 444], "behav": [1, 3, 135, 147, 267, 271, 286, 336, 344, 346, 428, 440], "accordingli": [1, 2, 3, 105, 192, 209, 228, 229, 271, 315, 427], "3": [1, 2, 3, 6, 7, 10, 11, 16, 17, 20, 22, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 84, 98, 100, 105, 107, 112, 113, 118, 120, 126, 127, 128, 129, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 172, 181, 183, 184, 187, 191, 192, 195, 197, 199, 200, 205, 207, 211, 213, 215, 217, 218, 220, 223, 224, 227, 228, 229, 230, 233, 235, 236, 237, 238, 240, 242, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 260, 263, 265, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 286, 289, 291, 301, 305, 306, 307, 308, 310, 311, 314, 316, 317, 320, 321, 322, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 400, 419, 421, 423, 424, 425, 426, 427, 429, 430, 432, 433, 437, 438, 439, 441, 442, 443, 444], "isn": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 104, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 183, 199, 205, 310, 317, 430, 431, 433, 437, 438], "current": [1, 2, 3, 12, 14, 15, 16, 17, 18, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 102, 105, 107, 113, 126, 129, 133, 135, 140, 141, 148, 151, 152, 153, 154, 161, 162, 169, 178, 183, 184, 187, 205, 216, 229, 230, 231, 235, 236, 237, 246, 264, 290, 294, 298, 302, 313, 328, 330, 331, 338, 345, 348, 350, 351, 386, 421, 424, 425, 426, 427, 431, 437, 438, 439, 441, 444], "fulli": [1, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 268, 272, 425, 428, 431, 439, 441], "ani": [1, 2, 3, 5, 8, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 107, 108, 111, 113, 114, 116, 118, 119, 120, 122, 123, 126, 129, 130, 133, 140, 141, 148, 153, 154, 155, 156, 161, 162, 163, 165, 166, 167, 179, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 252, 253, 254, 260, 261, 274, 283, 289, 309, 313, 317, 318, 319, 320, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 363, 365, 366, 381, 383, 388, 401, 418, 420, 424, 425, 426, 427, 428, 430, 431, 437, 438, 439, 441, 443, 444], "consecut": [1, 3, 111, 137, 273, 290, 383, 427, 429, 432, 438, 441, 444], "won": [1, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 130, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162, 215, 242, 246, 328, 401, 415, 425, 426, 429, 430], "therebi": [1, 29, 381, 420, 424, 425], "interrupt": [1, 2, 133, 313, 369], "tool": [1, 2, 3, 5, 419, 420, 427, 429, 437, 439, 441, 444], "backend": [1, 3, 7, 23, 24, 26, 27, 84, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 171, 177, 247, 421, 424, 426, 427, 428, 429, 432, 433, 439], "gloo": [1, 23, 24, 27], "nccl": [1, 23, 24], "mpi": [1, 23, 24], "distributeddatacollector": [1, 27, 417], "rpc": [1, 25, 27, 68], "rpcdatacollector": [1, 27, 417], "launcher": [1, 23, 24, 25, 27], "rai": [1, 18, 26, 62, 67, 68, 69, 78, 79, 107], "submitit": [1, 23, 24, 25, 27], "mode": [1, 3, 6, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 148, 153, 154, 161, 162, 194, 198, 229, 237, 244, 246, 251, 261, 269, 270, 273, 278, 286, 297, 298, 299, 304, 314, 318, 346, 381, 391, 396, 419, 420, 424, 425, 437, 438, 443, 444], "find": [1, 4, 6, 7, 23, 24, 25, 62, 64, 80, 112, 113, 248, 271, 290, 395, 399, 424, 425, 428, 430, 431, 437, 438], "folder": [1, 2, 45, 46, 47, 61, 63, 70, 84, 165, 187, 425], "wonder": 1, "why": [1, 2, 3, 178, 420, 437, 439, 444], "instead": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 35, 39, 44, 55, 65, 66, 67, 72, 77, 81, 84, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 187, 202, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 317, 321, 324, 328, 330, 331, 333, 336, 337, 338, 344, 345, 348, 349, 350, 351, 361, 363, 367, 371, 415, 420, 428, 429, 430, 434, 439, 441, 444], "lower": [1, 2, 3, 26, 32, 33, 190, 244, 293, 294, 321, 426, 437, 439], "io": [1, 11, 138, 139, 148, 151, 152, 163, 164, 271, 272, 428], "footprint": [1, 2, 441], "commun": [1, 2, 3, 141, 153, 161, 418, 426, 444], "yet": [1, 124, 125, 138, 440], "plai": [1, 3, 155, 156, 162, 187, 425, 426, 431, 441, 444], "role": [1, 3, 146, 425, 431, 444], "opposit": [1, 437], "direct": [1, 2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 267, 271, 346, 425, 431], "faster": [1, 2, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 148, 363, 364, 365, 366, 427, 428, 437, 438], "share": [1, 3, 6, 8, 28, 45, 46, 47, 61, 63, 69, 70, 78, 79, 82, 84, 96, 98, 99, 100, 101, 105, 107, 108, 112, 114, 116, 120, 130, 153, 161, 227, 235, 244, 269, 273, 279, 280, 306, 307, 308, 328, 329, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 415, 417, 419, 420, 426, 428, 434, 436, 437, 438, 443, 444], "among": [1, 3, 57, 155, 156, 235, 337, 351, 420, 437, 438], "prohibit": [1, 3, 118], "slow": [1, 3, 4, 11, 45, 46, 47, 61, 63, 70, 84, 99, 112, 113], "compar": [1, 3, 118, 329, 331, 344, 349, 351, 353, 354, 396, 420, 424, 426, 428, 430, 431, 437, 438, 441, 444], "gpu": [1, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 98, 100, 120, 126, 129, 133, 134, 137, 140, 141, 153, 154, 161, 162, 246, 424, 426, 427, 437, 438, 444], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 78, 82, 84, 99, 104, 105, 112, 113, 118, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 211, 235, 244, 248, 249, 250, 261, 264, 267, 269, 271, 273, 276, 288, 289, 297, 298, 314, 318, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 419, 420, 424, 425, 426, 428, 430, 437, 438, 439, 441, 444], "keyword": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 96, 98, 99, 100, 104, 105, 107, 110, 112, 113, 116, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 172, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 266, 269, 273, 277, 278, 279, 280, 290, 305, 309, 310, 313, 314, 315, 317, 318, 321, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 356, 361, 363, 364, 365, 366, 367, 371, 381, 383, 388, 390, 401, 412, 424, 425, 426, 428, 430, 433, 437, 438, 441, 443, 444], "build": [1, 2, 3, 7, 28, 32, 36, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 107, 124, 125, 126, 129, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 220, 244, 246, 250, 269, 273, 276, 312, 314, 318, 401, 408, 409, 410, 419, 420, 421, 426, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 443, 444], "mani": [1, 2, 3, 4, 69, 124, 125, 127, 128, 129, 132, 134, 135, 138, 139, 140, 148, 149, 158, 195, 230, 328, 330, 337, 345, 348, 419, 424, 425, 426, 428, 429, 430, 432, 434, 437, 438, 439, 441, 443, 444], "eg": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 126, 127, 128, 129, 132, 133, 134, 135, 137, 140, 141, 153, 154, 158, 161, 162, 197, 228, 237, 247, 279, 309, 383], "gymnasium": [1, 2, 3, 5, 77, 126, 129, 132, 133, 134, 140, 141, 142, 143, 153, 154, 161, 162, 171, 177, 200, 224, 228, 243, 247, 425, 426, 428, 439, 443], "warn": [1, 3, 66, 72, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 266, 290, 391, 425], "quickli": [1, 3, 425, 437, 438, 444], "becom": [1, 2, 3, 4, 26, 267, 271, 437, 438, 444], "quit": [1, 3, 11, 126, 129, 133, 140, 141, 153, 154, 161, 162, 424, 425, 426, 428, 430, 437, 438, 444], "annoi": [1, 3], "filter": [1, 2, 3, 4, 83, 105, 112, 113, 328, 329, 331, 332, 336, 337, 344, 348, 349, 351, 429], "out": [1, 2, 3, 4, 5, 9, 26, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 96, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 167, 195, 227, 230, 246, 248, 267, 268, 271, 277, 278, 281, 282, 283, 305, 309, 310, 311, 314, 315, 316, 317, 318, 346, 359, 360, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 437, 438, 439, 441, 443, 444], "still": [1, 2, 3, 9, 39, 65, 77, 84, 85, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 235, 290, 345, 346, 420, 424, 425, 427, 436, 439, 441, 444], "wish": [1, 3, 11, 16, 17, 22, 177, 431, 441], "displai": [1, 3, 7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 401, 421, 424, 425, 438, 439], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 187, 188, 191, 192, 194, 195, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 290, 291, 292, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 361, 363, 364, 365, 366, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 390, 391, 394, 395, 396, 398, 399, 401, 415, 419, 420, 421, 424, 425, 426, 428, 433, 434, 436, 437, 438, 439, 440, 443, 444], "part": [2, 3, 4, 8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 84, 124, 126, 129, 133, 138, 140, 141, 151, 153, 154, 161, 162, 178, 186, 211, 220, 223, 246, 269, 273, 322, 392, 415, 420, 424, 426, 427, 428, 434, 437, 439, 444], "algorithm": [2, 3, 8, 9, 147, 180, 227, 328, 348, 349, 351, 417, 420, 421, 424, 425, 426, 427, 428, 430, 431, 432, 433, 437, 438, 440, 441, 443], "implement": [2, 3, 9, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 81, 82, 85, 86, 87, 88, 89, 102, 114, 115, 126, 129, 133, 140, 141, 147, 148, 153, 154, 161, 162, 184, 191, 194, 196, 200, 203, 207, 209, 217, 218, 224, 228, 234, 236, 237, 238, 244, 246, 247, 251, 253, 267, 268, 269, 270, 271, 272, 273, 297, 298, 299, 328, 329, 331, 334, 335, 336, 342, 344, 346, 347, 348, 350, 351, 353, 381, 392, 406, 417, 419, 421, 424, 425, 426, 427, 428, 437, 438, 439, 443], "wide": [2, 3, 5, 443], "give": [2, 3, 7, 78, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 195, 418, 420, 424, 425, 428, 437, 438, 439, 440, 443], "abil": [2, 346, 439, 441], "panel": [2, 426], "usag": [2, 3, 5, 7, 16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 77, 96, 118, 184, 187, 199, 251, 269, 273, 331, 336, 344, 351, 355, 419, 424, 426, 427, 430, 431, 433, 437, 438, 441], "includ": [2, 3, 4, 7, 9, 26, 32, 39, 44, 55, 65, 66, 72, 77, 82, 84, 95, 96, 98, 99, 100, 101, 103, 114, 116, 120, 126, 129, 133, 140, 141, 147, 151, 152, 153, 154, 161, 162, 202, 205, 229, 235, 237, 244, 246, 269, 273, 328, 331, 346, 351, 404, 419, 421, 424, 425, 426, 427, 428, 437, 438, 439, 441, 444], "almost": [2, 277, 278, 427], "physic": [2, 6, 7, 96, 153, 154, 158, 421, 424, 437, 438, 439], "theori": 2, "crude": 2, "made": [2, 3, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 230, 246, 281, 290, 333, 346, 361, 424, 425, 427, 437, 438, 440, 441, 443], "liststorag": [2, 50, 62, 67, 68, 69, 77, 78, 79, 99, 107, 441], "veri": [2, 3, 138, 139, 425, 429, 432, 437, 439, 441, 443, 444], "ineffici": [2, 4], "tensor": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 112, 113, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 172, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 197, 198, 199, 200, 202, 205, 206, 208, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 326, 328, 329, 331, 332, 333, 335, 336, 337, 340, 341, 344, 346, 348, 349, 350, 351, 353, 354, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 437, 438, 439, 443, 444], "contigu": [2, 3, 8, 33, 36, 44, 85, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 205, 208, 230, 238, 439, 441, 443], "tensorstorag": [2, 69, 77, 98, 104, 105, 118, 121, 432, 441], "lazymemmapstorag": [2, 41, 62, 67, 68, 69, 75, 78, 79, 105, 107, 112, 113, 186, 187, 424, 425, 427, 432, 437, 440, 441], "class": [2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 144, 147, 150, 153, 154, 155, 156, 158, 161, 162, 163, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 413, 414, 415, 417, 419, 420, 421, 424, 425, 426, 427, 429, 430, 431, 432, 433, 437, 438, 441, 444], "citizen": 2, "pytre": [2, 62, 67, 68, 69, 78, 79, 101, 107, 121], "tupl": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 101, 105, 107, 112, 116, 118, 126, 127, 128, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 187, 205, 207, 211, 246, 252, 256, 262, 263, 269, 272, 273, 274, 281, 288, 291, 292, 310, 311, 315, 316, 321, 328, 329, 330, 331, 332, 336, 337, 339, 344, 345, 346, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 395, 396, 399, 408, 441, 443], "dictionari": [2, 15, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 105, 110, 112, 113, 126, 129, 132, 133, 134, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 205, 230, 235, 237, 246, 314, 318, 331, 351, 353, 396, 413, 414, 415, 421, 425, 426, 429, 431, 437, 439, 444], "nest": [2, 3, 28, 32, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 55, 56, 61, 63, 65, 66, 69, 70, 72, 74, 75, 76, 77, 84, 90, 98, 99, 100, 103, 107, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 179, 187, 228, 231, 235, 246, 313, 363, 364, 365, 366, 367, 381, 391, 421, 425, 426, 428, 438, 439, 441, 443], "construct": [2, 3, 5, 28, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 107, 126, 129, 130, 132, 133, 140, 141, 153, 154, 155, 161, 162, 167, 194, 198, 246, 269, 273, 294, 318, 401, 419, 425, 426, 427, 430, 437, 439, 441, 444], "ram": [2, 132, 134, 433, 441], "prealloc": [2, 3, 153, 161, 439], "ve": [2, 71, 424, 427, 434], "been": [2, 3, 5, 7, 8, 12, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 107, 111, 126, 129, 133, 137, 140, 141, 145, 146, 153, 154, 161, 162, 207, 228, 229, 236, 237, 267, 269, 271, 273, 281, 313, 328, 346, 348, 350, 424, 425, 426, 427, 436, 437, 438, 439, 441, 443, 444], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 50, 62, 65, 67, 68, 69, 75, 78, 79, 84, 97, 98, 101, 104, 105, 107, 108, 112, 113, 116, 118, 119, 122, 123, 180, 186, 220, 236, 246, 249, 346, 398, 417, 420, 421, 424, 425, 426, 427, 428, 432, 434, 437, 438, 440, 441, 443], "here": [2, 3, 4, 7, 8, 9, 10, 16, 17, 26, 118, 126, 127, 128, 129, 133, 137, 140, 141, 153, 154, 155, 156, 161, 162, 187, 235, 281, 390, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 439, 441, 443, 444], "start": [2, 3, 4, 5, 16, 26, 29, 50, 67, 82, 83, 84, 105, 112, 113, 126, 129, 130, 133, 140, 141, 144, 153, 154, 161, 162, 178, 193, 397, 423, 424, 425, 428, 435, 438, 439, 441, 442, 444], "replay_buff": [2, 8, 16, 17, 20, 26, 62, 67, 68, 69, 78, 79, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 187, 398, 411, 424, 425, 426, 432, 437, 438, 441], "rb": [2, 41, 62, 67, 68, 69, 75, 78, 79, 99, 104, 105, 107, 112, 113, 118, 187, 220, 246, 425, 427, 428, 432, 434, 438, 440, 441, 443], "10": [2, 3, 7, 27, 28, 30, 31, 32, 35, 39, 40, 50, 51, 55, 62, 67, 68, 69, 71, 77, 78, 79, 80, 83, 84, 98, 99, 100, 104, 107, 112, 113, 118, 120, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 147, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 180, 181, 184, 186, 187, 192, 195, 229, 231, 232, 233, 246, 250, 252, 255, 256, 258, 260, 262, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 288, 290, 301, 314, 318, 321, 325, 329, 333, 335, 342, 348, 349, 350, 354, 361, 363, 364, 365, 366, 369, 383, 392, 421, 424, 425, 426, 427, 428, 429, 430, 434, 437, 439, 441, 443, 444], "add": [2, 3, 4, 6, 26, 32, 36, 37, 39, 44, 48, 50, 55, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 97, 99, 104, 107, 108, 118, 119, 122, 123, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 205, 207, 234, 237, 246, 269, 273, 282, 312, 328, 397, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 443], "string": [2, 23, 24, 25, 32, 39, 44, 50, 55, 57, 64, 65, 66, 72, 77, 83, 84, 94, 99, 126, 129, 133, 140, 141, 145, 151, 153, 154, 161, 162, 177, 195, 205, 215, 228, 234, 242, 246, 269, 273, 310, 313, 314, 315, 327, 382, 400, 420, 424, 426, 427, 441], "element": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 45, 46, 47, 50, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 77, 78, 79, 82, 84, 98, 99, 100, 101, 104, 105, 107, 112, 113, 118, 120, 126, 129, 133, 140, 141, 150, 153, 154, 161, 162, 180, 187, 192, 195, 216, 225, 229, 230, 248, 253, 254, 267, 268, 271, 304, 305, 310, 313, 317, 318, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 392, 420, 424, 426, 430, 432, 441, 444], "30": [2, 3, 69, 77, 112, 113, 183, 210, 293, 294, 381, 385, 388, 390, 432, 438, 439, 441], "none": [2, 3, 8, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 112, 113, 114, 116, 118, 120, 126, 129, 130, 132, 133, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 202, 204, 205, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 298, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 410, 411, 413, 414, 415, 419, 421, 424, 425, 427, 428, 439, 441, 443], "int": [2, 3, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 161, 162, 165, 166, 167, 172, 180, 182, 183, 184, 186, 187, 188, 189, 191, 193, 195, 197, 202, 203, 205, 209, 210, 211, 213, 215, 216, 219, 226, 227, 228, 231, 234, 235, 237, 239, 242, 246, 248, 249, 250, 253, 254, 255, 256, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 309, 310, 311, 313, 314, 316, 318, 328, 329, 330, 337, 339, 340, 345, 346, 347, 348, 349, 353, 354, 363, 365, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 388, 390, 392, 393, 394, 396, 398, 401, 403, 413, 414, 415, 428, 439, 441], "entri": [2, 3, 16, 17, 22, 28, 32, 36, 37, 39, 41, 44, 45, 46, 47, 48, 50, 55, 61, 63, 64, 65, 66, 70, 72, 74, 75, 77, 83, 84, 91, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 153, 154, 158, 161, 162, 165, 166, 178, 179, 183, 187, 189, 190, 192, 193, 194, 196, 198, 199, 202, 206, 208, 209, 211, 213, 215, 218, 220, 223, 225, 227, 228, 229, 230, 232, 235, 237, 239, 242, 244, 246, 269, 277, 278, 309, 310, 313, 315, 316, 329, 331, 351, 363, 364, 365, 366, 419, 424, 426, 427, 429, 430, 431, 433, 437, 438, 439, 440, 441, 443, 444], "onto": [2, 8, 45, 46, 47, 59, 61, 63, 70, 84, 172, 196, 248, 290, 305, 310, 311, 314, 315, 316, 317, 318, 427, 439], "__setitem__": 2, "indic": [2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 104, 105, 107, 108, 110, 111, 112, 113, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 165, 166, 179, 180, 187, 188, 228, 229, 230, 231, 237, 246, 247, 253, 254, 274, 277, 278, 280, 290, 313, 315, 316, 324, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 405, 415, 418, 421, 426, 427, 428, 432, 433, 434, 439, 441, 444], "without": [2, 3, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 181, 183, 194, 198, 233, 236, 246, 267, 268, 271, 272, 307, 308, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 362, 363, 364, 365, 366, 367, 411, 418, 419, 424, 425, 426, 428, 429, 430, 431, 432, 437, 438, 439, 441, 444], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 70, 71, 72, 77, 78, 84, 104, 105, 126, 129, 133, 140, 141, 147, 153, 154, 155, 156, 161, 162, 163, 164, 179, 181, 183, 184, 194, 197, 198, 205, 217, 228, 229, 235, 237, 241, 244, 246, 248, 250, 251, 266, 267, 269, 273, 276, 281, 290, 314, 315, 316, 317, 318, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 361, 363, 364, 365, 366, 367, 396, 401, 403, 406, 407, 410, 411, 417, 421, 425, 426, 427, 428, 431, 434, 437, 438, 439, 441, 444], "length": [2, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 71, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 112, 113, 116, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 180, 187, 195, 208, 216, 244, 250, 253, 254, 256, 258, 260, 267, 271, 274, 276, 279, 280, 305, 317, 322, 392, 398, 424, 426, 427, 432, 434, 439, 441, 444], "cursor": [2, 62, 67, 68, 69, 78, 79, 107], "afterward": [2, 32, 39, 44, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 437, 444], "tell": [2, 3, 4, 7, 155, 156, 235, 424, 427, 432, 437, 438], "our": [2, 3, 7, 8, 11, 23, 50, 69, 187, 383, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 443], "far": [2, 62, 67, 68, 69, 71, 78, 79, 107, 270, 298, 299, 434, 439, 444], "restrict": [2, 3, 420, 425, 440, 441, 444], "empti": [2, 3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 107, 126, 129, 133, 139, 140, 141, 150, 153, 154, 161, 162, 172, 194, 195, 198, 215, 217, 231, 237, 240, 242, 246, 317, 387, 424, 439], "64": [2, 3, 45, 46, 47, 61, 63, 70, 84, 107, 187, 219, 256, 257, 265, 269, 273, 280, 281, 291, 361, 424, 425, 426, 427, 428, 430, 434, 436, 439, 441, 443, 444], "dtype": [2, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 112, 113, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 172, 175, 178, 179, 180, 181, 184, 185, 191, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 211, 213, 215, 217, 218, 220, 224, 227, 228, 230, 232, 233, 236, 237, 238, 240, 242, 246, 250, 252, 262, 263, 267, 268, 269, 271, 272, 273, 276, 282, 283, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 369, 419, 428, 436, 439, 441, 443, 444], "unit8": 2, "img": 2, "randint": [2, 83, 107, 195, 233, 441], "255": [2, 107, 233, 441], "uint8": [2, 3, 36, 45, 46, 47, 61, 63, 70, 84, 127, 128, 145, 146, 199, 205, 213, 233, 425, 441], "next": [2, 3, 4, 8, 16, 17, 20, 28, 36, 37, 39, 41, 43, 48, 50, 55, 62, 67, 68, 69, 71, 74, 75, 77, 78, 79, 84, 94, 95, 96, 103, 105, 107, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 183, 184, 186, 187, 192, 194, 195, 198, 199, 200, 205, 206, 207, 208, 209, 213, 217, 218, 220, 223, 224, 228, 230, 232, 235, 238, 243, 244, 246, 250, 268, 269, 272, 273, 276, 294, 313, 323, 325, 328, 329, 331, 332, 333, 335, 336, 337, 338, 344, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 383, 395, 396, 399, 425, 427, 428, 430, 434, 439, 440, 443, 444], "automat": [2, 3, 5, 12, 19, 33, 50, 82, 85, 98, 100, 107, 113, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 155, 156, 161, 162, 183, 194, 198, 211, 230, 243, 253, 269, 273, 305, 313, 314, 318, 381, 391, 419, 424, 426, 429, 430, 437, 438, 439, 441, 443], "hand": [2, 3, 7, 26, 36, 437, 438, 439], "look": [2, 3, 5, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 105, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 205, 215, 216, 240, 246, 251, 314, 318, 319, 320, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444], "assum": [2, 3, 6, 15, 16, 17, 18, 20, 21, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 95, 96, 103, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 186, 189, 193, 195, 202, 215, 216, 223, 230, 237, 240, 242, 252, 269, 273, 301, 304, 321, 333, 337, 338, 351, 361, 372, 373, 374, 375, 377, 378, 379, 380, 383, 424, 426, 436, 439], "leav": [2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 69, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 179, 224, 420, 424, 432, 441], "match": [2, 3, 6, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 107, 116, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 153, 154, 161, 162, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 253, 254, 261, 269, 273, 274, 279, 280, 297, 305, 309, 310, 314, 315, 317, 318, 321, 322, 329, 331, 337, 345, 347, 349, 351, 398, 403, 419, 420, 424, 426, 428, 436, 438, 439, 441, 444], "don": [2, 3, 4, 6, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 187, 236, 425, 426, 428, 432, 441, 443, 444], "throw": [2, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 444], "rb_td": 2, "batch_siz": [2, 3, 8, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 50, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 83, 84, 94, 98, 99, 100, 104, 105, 106, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 178, 179, 180, 184, 186, 187, 191, 194, 195, 198, 199, 200, 205, 213, 217, 218, 220, 224, 227, 228, 230, 236, 237, 238, 246, 250, 252, 260, 261, 262, 263, 266, 269, 273, 276, 290, 291, 292, 300, 301, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 383, 392, 398, 419, 420, 424, 425, 426, 427, 432, 437, 438, 439, 441, 443, 444], "max": [2, 28, 59, 63, 78, 83, 94, 104, 105, 118, 139, 197, 231, 290, 329, 330, 331, 337, 347, 349, 351, 424, 426, 427, 428, 434], "label": [2, 63, 64, 71, 83, 84, 424, 437, 441], "100": [2, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 98, 100, 107, 112, 113, 118, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 190, 195, 199, 211, 220, 225, 228, 246, 277, 278, 279, 311, 313, 383, 393, 411, 425, 426, 428, 429, 431, 434, 436, 437, 438, 439, 441, 443, 444], "rb_pytre": 2, "randn": [2, 62, 65, 67, 68, 69, 78, 79, 98, 99, 100, 105, 107, 112, 113, 120, 172, 186, 211, 252, 255, 256, 260, 262, 263, 267, 268, 271, 272, 277, 278, 279, 286, 288, 292, 305, 306, 307, 308, 309, 310, 314, 315, 317, 320, 321, 322, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 400, 419, 428, 441, 443, 444], "c": [2, 3, 6, 7, 36, 39, 45, 46, 47, 61, 63, 65, 69, 70, 77, 78, 79, 84, 99, 211, 233, 238, 271, 272, 425, 441], "zero": [2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 107, 112, 113, 118, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 178, 184, 186, 188, 194, 195, 197, 198, 211, 217, 220, 227, 246, 249, 250, 257, 258, 259, 265, 266, 267, 268, 269, 271, 272, 273, 277, 278, 280, 281, 290, 291, 300, 316, 318, 324, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 369, 427, 428, 441, 443, 444], "assert": [2, 3, 6, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 118, 126, 129, 133, 136, 140, 141, 153, 154, 161, 162, 167, 172, 177, 180, 184, 187, 190, 194, 198, 207, 218, 225, 237, 244, 252, 280, 301, 363, 364, 365, 366, 391, 392, 400, 432, 436, 441, 444], "len": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 100, 107, 120, 195, 213, 253, 254, 274, 280, 424, 428, 432, 434, 437, 439, 440, 441, 443], "ambigu": [2, 62, 67, 68, 69, 78, 79, 107], "signatur": [2, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 107, 116, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 184, 191, 205, 215, 230, 236, 237, 240, 242, 246, 317, 420, 424, 428, 429, 439], "deal": [2, 3, 62, 67, 68, 69, 78, 79, 107, 346, 420, 424, 426, 438, 441], "interpret": [2, 3, 62, 67, 68, 69, 78, 79, 107, 425], "put": [2, 62, 67, 68, 69, 78, 79, 107, 133, 145, 146, 162, 165, 166, 195, 244, 390, 415, 419, 425, 426, 427, 429, 437, 439], "solv": [2, 4, 7, 9, 10, 62, 67, 68, 69, 78, 79, 107, 418, 424, 425, 426, 432, 434, 437, 438, 439, 441], "clear": [2, 3, 11, 32, 36, 37, 39, 44, 48, 49, 55, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 107, 126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 246, 393, 429, 432], "cut": [2, 62, 67, 68, 69, 78, 79, 107], "distinct": [2, 3, 62, 67, 68, 69, 78, 79, 107, 184, 187, 431, 436], "view": [2, 3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 246, 263, 267, 271, 274, 429, 439, 441, 443, 444], "through": [2, 3, 4, 5, 8, 16, 17, 20, 22, 23, 25, 26, 36, 37, 48, 62, 66, 67, 68, 69, 72, 74, 78, 79, 84, 107, 124, 125, 126, 129, 132, 133, 134, 137, 138, 139, 140, 141, 144, 153, 154, 155, 156, 161, 162, 183, 192, 194, 195, 198, 216, 247, 252, 274, 291, 313, 314, 318, 319, 320, 324, 327, 346, 363, 364, 365, 366, 391, 419, 420, 424, 425, 426, 429, 431, 436, 437, 438, 439, 440, 441, 444], "collate_fn": [2, 62, 67, 68, 69, 77, 78, 79, 107, 441, 443], "__init__": [2, 3, 7, 129, 147, 163, 177, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 250, 261, 263, 267, 271, 276, 322, 329, 331, 332, 337, 344, 349, 351, 353, 354, 421, 439, 444], "default": [2, 3, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 290, 292, 293, 294, 296, 297, 298, 299, 304, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 411, 415, 417, 420, 421, 424, 425, 426, 427, 430, 437, 440, 441, 443, 444], "major": 2, "worri": [2, 80, 444], "even": [2, 3, 4, 8, 11, 17, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 112, 114, 116, 120, 126, 129, 130, 133, 137, 140, 141, 153, 154, 161, 162, 179, 183, 424, 426, 429, 437, 438, 439, 444], "though": [2, 4, 11, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 274, 426, 437, 438], "too": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 65, 71, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 210, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 270, 298, 299, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 425, 430, 433, 439, 441, 444], "latter": [2, 23, 24, 25, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 348, 413, 414], "inv": [2, 3, 180, 190, 197, 200, 205, 213, 220, 225, 227, 232, 236, 239, 246, 439], "obvious": [2, 428], "ignor": [2, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 72, 73, 74, 77, 80, 82, 85, 86, 87, 88, 89, 96, 126, 129, 133, 140, 141, 153, 154, 161, 162, 197, 200, 224, 233, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 363, 441], "multithread": [2, 3, 62, 69, 78, 79, 94, 148, 149, 432, 441], "thread": [2, 16, 17, 22, 45, 46, 47, 61, 63, 70, 84, 124, 125, 138, 139, 153, 161], "prefetch": [2, 62, 69, 78, 79, 94, 424, 425, 427, 441], "advis": [2, 11, 433, 444], "benchmark": [2, 3, 9, 124, 125, 138, 139], "techniqu": [2, 8, 153, 161, 425, 428, 432, 441], "real": [2, 5, 318, 420, 427, 428, 439, 440], "life": [2, 199, 440], "adopt": [2, 3, 5, 424, 444], "throughput": [2, 9, 139, 424], "practic": [2, 3, 4, 5, 8, 57, 236, 270, 298, 299, 327, 417, 418, 424, 425, 426, 427, 428, 431, 437, 438, 440, 444], "constant": [2, 11, 38, 187, 211, 229, 421, 424, 426, 427, 444], "throughout": [2, 3, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 426, 437, 444], "further": [2, 3, 5, 29, 424, 426, 428, 429], "refin": [2, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361], "coupl": [2, 427, 430, 431, 439, 441], "get": [2, 3, 4, 6, 7, 8, 9, 12, 36, 37, 39, 45, 46, 47, 48, 50, 61, 62, 63, 65, 66, 69, 70, 72, 74, 77, 84, 98, 100, 105, 112, 113, 114, 116, 118, 120, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 181, 186, 188, 194, 197, 198, 207, 211, 216, 229, 230, 233, 237, 244, 266, 305, 314, 315, 318, 325, 363, 364, 365, 366, 367, 383, 387, 419, 420, 423, 424, 425, 426, 427, 428, 435, 437, 438, 439, 441, 442, 443, 444], "first_elt": 2, "128": [2, 113, 124, 125, 138, 139, 257, 260, 425, 427, 428, 434, 437, 440, 441], "wa": [2, 3, 5, 7, 36, 37, 39, 48, 50, 62, 65, 67, 68, 69, 74, 77, 78, 79, 84, 105, 107, 111, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 179, 187, 205, 237, 271, 328, 330, 343, 345, 348, 350, 352, 369, 420, 425, 426, 429, 430, 436, 437, 441, 443], "print": [2, 3, 6, 7, 16, 17, 20, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 104, 105, 107, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 171, 172, 177, 178, 179, 180, 183, 184, 187, 188, 192, 194, 195, 196, 197, 198, 206, 211, 217, 218, 220, 223, 228, 230, 231, 232, 233, 244, 246, 253, 254, 256, 257, 258, 259, 260, 263, 265, 266, 269, 273, 274, 277, 278, 279, 280, 286, 289, 290, 292, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 320, 322, 325, 346, 381, 411, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "influenti": 2, "especi": [2, 3, 7, 8, 188], "larger": [2, 4, 77, 269, 273, 336, 344, 443], "volum": 2, "due": [2, 3, 5, 28, 431, 440, 441, 444], "memorymappedtensor": [2, 41, 61, 63, 75, 83, 98, 385, 432], "well": [2, 3, 8, 26, 28, 32, 39, 44, 55, 62, 64, 65, 66, 69, 72, 77, 78, 79, 82, 105, 110, 114, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 237, 246, 247, 251, 256, 271, 293, 294, 318, 346, 348, 353, 367, 419, 424, 425, 427, 428, 429, 430, 431, 433, 440, 441, 443, 444], "specifi": [2, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 193, 194, 196, 198, 223, 226, 229, 234, 238, 239, 246, 247, 250, 271, 317, 318, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 390, 419, 424, 426, 427, 428, 432, 437], "file": [2, 6, 7, 8, 45, 46, 47, 61, 63, 70, 84, 96, 165, 382, 383, 385, 401, 421, 423, 425, 437, 441, 442], "locat": [2, 7, 45, 46, 47, 61, 63, 70, 83, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 193, 199, 211, 222, 270, 298, 299, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 424, 425, 426, 433, 437, 438, 441], "improv": [2, 4, 11, 203, 328, 420, 428, 437, 438, 441], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 153, 161, 205, 426, 437, 441], "found": [2, 3, 6, 7, 10, 16, 17, 20, 22, 26, 28, 32, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 112, 113, 126, 127, 128, 129, 132, 133, 134, 137, 140, 141, 153, 154, 161, 162, 179, 181, 187, 208, 220, 223, 231, 244, 246, 266, 279, 280, 314, 318, 345, 346, 348, 420, 424, 425, 427, 428, 429, 431, 433, 439, 441, 443], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 73, 74, 82, 85, 86, 87, 88, 89, 98, 105, 151, 152, 197, 235, 249, 271, 272, 336, 427, 428, 432, 441], "sharabl": [2, 153, 161], "collabor": 2, "rather": [2, 4, 116, 140, 151, 152, 195, 218, 419, 420, 424, 425, 426, 429, 431, 437, 438, 441], "incur": [2, 124, 125, 138, 139], "transmiss": 2, "content": [2, 3, 8, 20, 36, 37, 45, 46, 47, 48, 61, 62, 63, 69, 70, 74, 78, 79, 84, 111, 112, 113, 126, 129, 132, 133, 134, 140, 141, 148, 153, 154, 161, 162, 217, 253, 254, 274, 279, 280, 314, 346, 426, 439, 443], "map": [2, 3, 8, 14, 15, 18, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 103, 104, 105, 126, 129, 133, 140, 141, 144, 145, 146, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 168, 172, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 246, 263, 305, 306, 307, 308, 310, 314, 315, 317, 318, 320, 321, 322, 323, 331, 351, 361, 396, 417, 419, 420, 424, 425, 426, 427, 430, 431, 440], "writer": [2, 62, 67, 68, 69, 78, 79, 97, 100, 105, 107, 108, 112, 118, 119, 120, 123, 426, 441], "tensordictroundrobinwrit": [2, 79, 107], "goe": [2, 4, 84, 155, 156, 424, 426, 437, 438, 444], "prioritizedsampl": [2, 62, 67, 68, 69, 78, 79, 105, 107, 333, 338, 361, 424, 441], "access": [2, 3, 7, 8, 11, 14, 21, 32, 39, 44, 55, 62, 65, 66, 72, 77, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 187, 215, 236, 240, 246, 415, 418, 424, 429, 437, 438, 439, 441, 443], "tensordictreplaybuff": [2, 62, 67, 68, 69, 78, 104, 105, 107, 112, 113, 118, 186, 187, 398, 411, 417, 424, 425, 427, 441], "mp": [2, 23, 24, 25, 130, 244], "def": [2, 3, 27, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 126, 129, 130, 133, 140, 141, 147, 153, 154, 161, 162, 175, 177, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 247, 250, 263, 267, 268, 271, 272, 276, 281, 313, 314, 322, 329, 331, 332, 337, 344, 346, 349, 351, 353, 354, 381, 391, 420, 421, 424, 425, 428, 436, 437, 438, 439, 441, 443, 444], "td": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 39, 41, 45, 46, 47, 50, 61, 62, 63, 65, 67, 68, 69, 70, 75, 77, 78, 79, 84, 98, 107, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 142, 143, 151, 152, 153, 154, 157, 161, 162, 163, 164, 178, 181, 184, 186, 188, 192, 194, 195, 196, 197, 198, 206, 207, 208, 209, 211, 220, 223, 227, 230, 233, 237, 244, 250, 252, 262, 263, 266, 269, 273, 275, 276, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 314, 315, 317, 320, 322, 361, 364, 365, 366, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 392, 400, 419, 420, 424, 425, 427, 438, 439, 440, 443], "__name__": [2, 3, 16, 17, 27, 67, 130, 381, 425, 443], "__main__": [2, 3, 16, 17, 27, 67, 130, 381, 443], "21": [2, 50, 84, 112, 113, 153, 155, 156, 161], "proc": 2, "target": [2, 4, 8, 26, 29, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 229, 246, 289, 317, 318, 328, 329, 330, 331, 332, 333, 335, 337, 338, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 361, 362, 363, 364, 365, 366, 367, 404, 410, 411, 420, 421, 427, 428, 434, 437, 439], "arg": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 107, 112, 113, 114, 116, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 215, 216, 217, 218, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 248, 250, 252, 253, 254, 261, 262, 266, 269, 273, 274, 275, 276, 290, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 390, 394, 398, 401, 415, 425, 428], "join": [2, 130, 195, 417, 425, 426, 428, 437], "now": [2, 3, 7, 62, 69, 78, 79, 107, 151, 152, 153, 187, 224, 280, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 440, 441, 444], "20": [2, 50, 77, 83, 84, 112, 113, 118, 126, 129, 133, 137, 140, 141, 151, 152, 153, 154, 161, 162, 229, 246, 265, 267, 268, 271, 272, 289, 309, 392, 427, 441, 444], "_data": [2, 439], "remot": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 62, 67, 68, 69, 78, 79, 107, 153, 161, 417, 444], "difficult": [2, 4, 153, 433], "pai": [2, 8, 187, 424], "word": [2, 3, 11, 71, 346, 424, 432, 439, 444], "1m": [2, 404, 424, 426, 427], "doe": [2, 3, 21, 23, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 70, 72, 77, 78, 83, 84, 95, 96, 103, 104, 105, 112, 114, 116, 123, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 251, 260, 261, 267, 268, 269, 271, 272, 273, 282, 289, 301, 309, 319, 320, 328, 330, 338, 345, 346, 348, 362, 401, 420, 421, 424, 425, 426, 427, 429, 432, 437, 439, 441, 444], "howev": [2, 3, 5, 7, 32, 39, 44, 55, 65, 66, 72, 77, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 328, 330, 331, 345, 348, 350, 351, 419, 424, 425, 427, 428, 431, 439, 441, 444], "capac": [2, 62, 69, 78, 79, 98, 100, 104, 112, 120, 426, 432], "There": [2, 3, 10, 107, 236, 251, 269, 273, 328, 348, 419, 420, 421, 426, 427, 428, 430, 432, 437, 438, 439, 441, 443, 444], "circumv": 2, "save": [2, 3, 8, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 84, 95, 96, 98, 99, 100, 101, 103, 107, 114, 115, 116, 120, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 246, 382, 383, 385, 390, 401, 421, 428, 432, 433, 434, 437, 438], "convent": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 420, 424, 427, 437, 438, 439], "overridden": [2, 3, 32, 39, 44, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 363, 365, 366, 427, 437], "dim_extend": [2, 62, 69, 78, 79], "obtain": [2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 186, 215, 229, 242, 250, 252, 289, 291, 398, 424, 426, 429, 430, 431, 437, 438], "counterpart": [2, 3, 187], "desir": [2, 3, 11, 32, 35, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 176, 182, 184, 191, 192, 211, 213, 215, 216, 230, 236, 237, 240, 242, 246, 253, 254, 261, 274, 280, 305, 310, 311, 314, 315, 316, 317, 318, 419, 424, 428, 437, 438, 439, 441], "diversifi": 2, "offer": [2, 3, 7, 124, 125, 126, 129, 133, 138, 139, 140, 141, 145, 146, 153, 154, 161, 162, 235, 381, 419, 424, 425, 428, 429, 431, 432, 437, 439, 441, 444], "accomplish": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 429], "__especially__": 2, "offlin": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 329, 335, 336, 344, 353, 390, 421, 429, 440, 441], "docstr": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 429, 430], "detail": [2, 3, 5, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 233, 237, 246, 251, 263, 267, 271, 281, 289, 311, 328, 338, 346, 348, 418, 421, 425, 428, 432, 436, 441], "happi": [2, 428], "concaten": [2, 8, 16, 17, 26, 50, 51, 53, 84, 140, 187, 188, 211, 227, 271, 274, 320, 424, 425, 430, 437, 438, 439, 441, 444], "schedul": [2, 4, 7, 71, 396, 426, 439], "transformedenv": [2, 3, 11, 12, 55, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 180, 181, 184, 187, 190, 191, 192, 194, 198, 199, 200, 206, 207, 208, 210, 211, 213, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 235, 236, 244, 246, 269, 273, 313, 383, 391, 424, 425, 426, 427, 428, 429, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "stepcount": [2, 50, 55, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 192, 235, 236, 237, 246, 252, 424, 425, 426, 427, 428, 429, 434, 437, 438, 443], "gymenv": [2, 3, 5, 11, 16, 17, 20, 22, 26, 27, 41, 50, 55, 67, 75, 77, 118, 126, 129, 130, 133, 135, 140, 141, 153, 154, 161, 162, 180, 183, 184, 187, 190, 191, 192, 199, 205, 206, 207, 211, 213, 218, 219, 220, 223, 225, 229, 230, 231, 232, 235, 236, 237, 238, 244, 246, 252, 269, 273, 313, 381, 383, 411, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 441, 443, 444], "randompolici": [2, 16, 17, 20, 22, 23, 24, 25, 26, 27, 55, 187, 220, 417, 432, 441], "cartpol": [2, 3, 11, 41, 55, 75, 77, 126, 127, 128, 129, 130, 133, 140, 141, 153, 154, 161, 162, 183, 184, 187, 223, 229, 244, 246, 313, 381, 425, 427, 430, 432, 433, 434, 441, 444], "v1": [2, 3, 11, 16, 17, 20, 22, 26, 27, 41, 55, 67, 75, 77, 118, 126, 129, 130, 132, 133, 134, 138, 139, 140, 141, 148, 153, 154, 161, 162, 183, 184, 187, 190, 192, 200, 206, 207, 211, 218, 220, 223, 224, 225, 228, 229, 230, 231, 232, 235, 236, 238, 244, 246, 252, 269, 273, 313, 357, 372, 373, 374, 375, 377, 378, 379, 380, 381, 419, 425, 427, 429, 430, 431, 432, 433, 434, 439, 441, 443, 444], "action_spec": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 55, 124, 125, 126, 129, 133, 138, 139, 140, 141, 147, 153, 154, 155, 156, 157, 161, 162, 180, 181, 184, 187, 191, 194, 196, 198, 207, 211, 217, 220, 236, 237, 238, 239, 246, 250, 263, 276, 292, 294, 305, 310, 314, 315, 329, 331, 333, 335, 349, 351, 353, 354, 411, 419, 424, 425, 426, 427, 428, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 443, 444], "8": [2, 3, 6, 7, 36, 37, 45, 46, 47, 48, 55, 61, 63, 69, 70, 74, 77, 84, 104, 105, 112, 113, 124, 125, 126, 127, 128, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 180, 183, 192, 229, 232, 238, 253, 254, 256, 257, 265, 274, 306, 307, 308, 314, 317, 320, 344, 424, 425, 439, 441, 443], "traj_kei": [2, 105, 112, 113, 441], "truncated_kei": [2, 105, 112, 113, 220, 228], "strict_length": [2, 105, 112, 113, 383], "i": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 41, 44, 48, 55, 62, 65, 66, 69, 72, 74, 75, 77, 79, 80, 84, 98, 100, 104, 105, 112, 113, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 192, 193, 195, 209, 215, 220, 223, 235, 237, 242, 246, 268, 269, 272, 273, 292, 304, 311, 313, 314, 316, 317, 318, 328, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 392, 404, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 437, 438, 439, 441, 443, 444], "enumer": [2, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 75, 77, 79, 82, 85, 86, 87, 88, 89, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 355, 420, 424, 425, 426, 427, 434, 437, 441, 443], "break": [2, 5, 16, 17, 20, 26, 32, 39, 44, 55, 65, 66, 67, 69, 72, 77, 79, 94, 105, 112, 113, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 187, 220, 244, 246, 269, 273, 298, 383, 425, 428, 432, 434, 441, 443], "step_count": [2, 16, 17, 20, 55, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 192, 228, 246, 426, 427, 428, 429, 434], "32": [2, 27, 36, 62, 67, 68, 69, 78, 79, 107, 113, 139, 159, 160, 165, 166, 187, 205, 253, 254, 255, 256, 257, 259, 260, 265, 274, 279, 280, 284, 285, 288, 291, 300, 361, 381, 425, 427, 428, 430, 431, 439, 440, 441, 443, 444], "33": [2, 32, 36, 39, 44, 55, 65, 66, 72, 77, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 253, 254, 274], "34": [2, 253, 254, 274], "35": [2, 253, 254, 274], "36": 2, "37": [2, 186], "38": [2, 7, 50], "39": [2, 138, 139], "40": [2, 77, 138, 139], "41": [2, 112], "11": [2, 10, 28, 50, 59, 77, 83, 84, 98, 99, 100, 104, 113, 120, 130, 180, 233, 246, 250, 276], "12": [2, 7, 10, 50, 77, 98, 100, 113, 120, 138, 139, 153, 159, 160, 161, 246, 383, 441], "13": [2, 5, 77, 112, 113, 158, 243, 246, 247], "14": [2, 6, 77, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 211, 246, 247], "15": [2, 28, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 290, 309, 339, 441], "16": [2, 3, 32, 39, 44, 55, 65, 66, 72, 77, 105, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 187, 246, 427, 441], "17": [2, 11, 112, 113, 133, 153, 180, 246], "could": [2, 3, 4, 6, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 318, 425, 426, 433, 437, 438, 440, 444], "sai": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 279, 437, 440, 444], "interleav": 2, "cannot": [2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 36, 53, 59, 69, 78, 79, 100, 101, 105, 108, 112, 113, 120, 126, 129, 132, 133, 134, 137, 140, 141, 153, 154, 161, 162, 194, 198, 216, 223, 235, 279, 280, 315, 328, 331, 348, 425, 426, 427, 428, 437, 438, 439], "suggest": [2, 361, 424, 438], "serialenv": [2, 3, 126, 129, 133, 140, 141, 153, 154, 162, 230, 246, 252, 313, 417, 443, 444], "squeez": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 183, 184, 187, 226, 229, 253, 254, 295, 296, 424, 428, 439, 441], "6": [2, 3, 7, 16, 17, 20, 22, 28, 50, 55, 69, 72, 77, 84, 105, 113, 127, 128, 133, 153, 159, 160, 180, 183, 192, 211, 213, 229, 235, 252, 253, 254, 256, 257, 258, 261, 265, 268, 274, 279, 280, 281, 284, 297, 313, 314, 322, 425, 428, 443], "5": [2, 3, 16, 17, 28, 35, 36, 37, 48, 50, 51, 52, 53, 54, 55, 59, 62, 67, 69, 72, 74, 77, 78, 79, 107, 112, 113, 118, 126, 129, 130, 133, 138, 139, 140, 141, 145, 146, 148, 153, 154, 159, 160, 161, 162, 165, 166, 180, 183, 184, 186, 192, 208, 220, 227, 228, 229, 235, 246, 249, 250, 251, 252, 253, 254, 256, 257, 262, 263, 264, 265, 267, 270, 271, 274, 276, 279, 280, 284, 289, 292, 298, 299, 309, 310, 313, 315, 321, 345, 348, 350, 353, 354, 381, 419, 423, 424, 425, 428, 430, 434, 437, 438, 439, 441, 442, 443, 444], "7": [2, 3, 6, 10, 39, 50, 55, 59, 62, 69, 77, 78, 105, 113, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 180, 183, 192, 229, 232, 250, 252, 253, 254, 257, 274, 276, 279, 369, 424, 441, 443], "9": [2, 3, 7, 28, 32, 50, 55, 62, 69, 77, 78, 84, 105, 113, 118, 127, 128, 144, 155, 156, 162, 180, 183, 192, 229, 232, 237, 244, 246, 277, 278, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 355, 361, 391, 420, 424, 425, 437, 438], "18": [2, 50, 112, 113, 159, 160, 165, 166, 235, 246, 280], "19": [2, 112, 113, 118, 246, 423, 442], "independ": [2, 16, 17, 20, 22, 23, 24, 25, 26, 153, 161, 202, 209, 230, 239, 251, 280, 304, 328, 348, 420, 421, 424, 425, 438, 441, 443], "congruent": 2, "name": [2, 3, 6, 7, 20, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 94, 124, 126, 127, 129, 133, 138, 140, 141, 144, 145, 146, 148, 151, 153, 154, 155, 156, 158, 161, 162, 165, 166, 168, 175, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 197, 199, 200, 201, 203, 205, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 246, 247, 269, 273, 310, 315, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 363, 365, 366, 367, 381, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 421, 424, 425, 426, 427, 428, 431, 432, 433, 437, 438, 439, 440, 444], "randomcroptensordict": [2, 424], "unlik": [2, 30, 69, 78, 79, 111, 133, 145, 146, 165, 166, 249, 251, 313, 338, 348, 383, 419, 425, 428, 430, 432, 443], "stop": [2, 3, 20, 26, 71, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 426, 432, 437, 438, 443, 444], "signal": [2, 3, 16, 17, 20, 22, 28, 50, 105, 112, 113, 118, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 179, 187, 192, 199, 208, 228, 231, 420, 424, 426, 437, 438, 441, 444], "disk": [2, 3, 45, 46, 47, 50, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 98, 107, 401, 421, 424, 425, 427, 428, 432, 433, 437, 441], "dump": [2, 3, 11, 41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 84, 96, 98, 99, 100, 101, 107, 114, 116, 120, 381, 382, 383, 433, 434, 437], "load": [2, 6, 7, 16, 17, 20, 22, 32, 39, 41, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 96, 98, 99, 100, 101, 107, 114, 115, 116, 120, 121, 126, 128, 129, 133, 140, 141, 153, 154, 161, 162, 163, 177, 195, 244, 246, 401, 415, 421, 424, 426, 428, 441], "json": 2, "metadata": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 331, 353, 426, 429, 431, 432, 437, 438, 444], "anticip": [2, 194, 198], "compli": [2, 251, 419], "back": [2, 29, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 234, 243, 281, 305, 310, 311, 314, 315, 316, 317, 318, 426, 428, 437, 438, 439, 441], "exact": [2, 3, 28, 153, 271], "statu": [2, 3, 129], "prioriti": [2, 4, 62, 78, 79, 98, 99, 100, 101, 104, 105, 114, 116, 120, 331, 332, 333, 335, 336, 337, 338, 344, 349, 351, 353, 354, 361, 421, 424, 425, 441], "heap": 2, "under": [2, 3, 4, 26, 32, 39, 44, 50, 55, 65, 66, 71, 72, 77, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 208, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 251, 305, 310, 311, 314, 315, 316, 317, 318, 346, 363, 364, 365, 366, 367, 383, 420, 424, 425, 430, 437, 439, 444], "hood": [2, 3, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 251, 439], "naiv": [2, 240, 429], "just": [2, 3, 4, 84, 116, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 179, 183, 190, 230, 247, 280, 392, 421, 424, 425, 426, 427, 428, 429, 430, 432, 437, 438, 439, 441, 443, 444], "public": [2, 68, 115, 215, 242], "serializ": 2, "consum": [2, 111, 113, 313, 425, 426, 432, 438, 441], "much": [2, 3, 8, 16, 17, 22, 62, 78, 104, 105, 153, 161, 345, 348, 426, 428, 429, 433, 437, 438, 439, 441, 444], "duplic": [2, 32, 39, 44, 55, 65, 66, 72, 77, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 329, 331, 333, 338, 344, 346, 349, 351, 353, 354, 361], "observ": [2, 3, 8, 16, 17, 20, 22, 26, 29, 41, 50, 55, 67, 75, 77, 84, 95, 96, 103, 105, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 173, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 209, 211, 212, 213, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 252, 255, 256, 257, 258, 259, 260, 263, 266, 269, 273, 279, 284, 285, 288, 289, 290, 292, 293, 305, 306, 307, 308, 309, 310, 313, 314, 315, 322, 323, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 344, 345, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 381, 383, 411, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 441, 443, 444], "plu": [2, 16, 17, 22, 71, 153, 161, 439], "enabl": [2, 7, 8, 98, 100, 111, 120, 184, 269, 273, 290, 313, 381, 383, 396, 426, 429, 437, 438, 439, 441], "three": [2, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 65, 94, 331, 419, 421, 426, 428, 429, 430, 437, 438, 439, 441, 444], "flatstoragecheckpoint": 2, "discard": [2, 3, 83, 133, 178, 240, 382, 441, 444], "compress": 2, "At": [2, 232, 266, 275, 425, 426, 427, 432, 436, 439, 440], "correct": [2, 4, 45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 207, 404, 426, 427], "addit": [2, 3, 4, 15, 18, 21, 32, 39, 44, 55, 57, 65, 66, 72, 77, 84, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 187, 191, 215, 230, 234, 236, 237, 240, 242, 246, 248, 267, 309, 313, 317, 327, 346, 363, 381, 383, 420, 424, 425, 428, 429, 437, 438, 441], "nestedstoragecheckpoint": 2, "represent": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 215, 240, 242, 246, 328, 348, 424, 439, 440, 444], "appar": [2, 3, 394], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 95, 96, 103, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 172, 175, 180, 190, 197, 205, 208, 230, 238, 248, 254, 260, 263, 279, 285, 290, 292, 305, 310, 311, 314, 315, 316, 317, 318, 320, 321, 322, 325, 328, 333, 335, 336, 337, 348, 353, 354, 361, 419, 420, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 444], "assumpt": [2, 3, 82, 439, 441], "accur": [2, 7, 425, 439, 441], "truncat": [2, 3, 16, 17, 20, 22, 41, 43, 50, 55, 56, 64, 75, 77, 80, 83, 95, 96, 103, 105, 112, 113, 126, 127, 128, 129, 132, 133, 134, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 163, 165, 166, 179, 180, 195, 199, 200, 205, 210, 217, 220, 224, 228, 230, 237, 238, 246, 269, 273, 299, 313, 369, 424, 426, 429, 437, 444], "marl": [2, 144, 168, 187, 227, 231, 279, 280, 281, 337, 351, 420, 429, 437, 438], "extra": [2, 10, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 187, 244, 246, 390, 419, 426, 427, 441], "fail": [2, 7, 27, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 181], "concret": [2, 424, 426], "set_se": [2, 3, 16, 17, 20, 22, 26, 41, 50, 55, 75, 77, 124, 125, 126, 129, 133, 138, 139, 140, 141, 147, 153, 154, 161, 162, 183, 192, 211, 218, 223, 229, 231, 237, 246, 428, 432, 434, 439, 443, 444], "manual_se": [2, 3, 30, 41, 51, 52, 62, 69, 75, 77, 78, 79, 99, 112, 113, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 192, 197, 211, 220, 223, 229, 231, 246, 266, 277, 278, 286, 289, 290, 305, 311, 318, 321, 328, 329, 331, 332, 336, 344, 351, 428, 432, 434, 437, 438, 439, 443, 444], "200": [2, 16, 17, 20, 26, 32, 39, 41, 44, 55, 65, 66, 67, 72, 75, 77, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 165, 166, 220, 246, 256, 257, 264, 293, 294, 381, 383, 424, 427, 428, 432, 434, 441], "22": [2, 112, 113, 243], "rb_test": 2, "_storag": [2, 440, 441], "max_siz": [2, 50, 62, 69, 77, 78, 79, 98, 99, 100, 101, 112, 113, 114, 118, 120, 426, 432], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 35, 45, 46, 47, 61, 63, 70, 84, 148, 235, 260, 277, 278, 279, 327, 331, 381, 424, 426, 428, 437, 438], "state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 246, 279, 280, 331, 351, 415, 421, 424, 425, 444], "load_state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 244, 246, 331, 351, 421, 424], "drawback": 2, "struggl": 2, "big": [2, 426, 432, 441, 444], "sequenti": [2, 9, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 186, 207, 246, 304, 306, 307, 308, 314, 319, 320, 325, 328, 329, 331, 337, 344, 348, 349, 350, 351, 353, 419, 426, 427, 430, 438, 439, 440, 443, 444], "known": [2, 3, 5, 7, 8, 77, 133, 230, 370, 371, 424, 425, 429], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 249, 424, 425, 431], "understand": [2, 8, 39, 424, 425, 428, 429, 430, 437, 438], "purpos": [2, 3, 7, 11, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 267, 328, 330, 342, 345, 348, 350, 411, 424, 426, 427, 428, 431, 433, 437, 438, 440, 444], "guid": [2, 11, 155, 156, 159, 160, 229, 418, 424, 438, 443], "explan": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 251], "effect": [2, 3, 32, 36, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 105, 107, 110, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 187, 192, 237, 246, 251, 401, 419, 424, 430, 437, 441, 444], "realm": [2, 430], "practition": 2, "often": [2, 3, 8, 281, 343, 346, 401, 424, 425, 429, 431, 439, 441, 444], "encount": [2, 4, 209, 313, 418, 425, 430, 439], "sometim": [2, 3, 82, 427, 444], "variabl": [2, 3, 4, 7, 8, 14, 19, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 72, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 149, 150, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 195, 232, 236, 267, 268, 269, 271, 272, 273, 276, 306, 307, 308, 346, 349, 391, 421, 425], "immedi": [2, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 362, 437, 438], "199": 2, "info": [2, 3, 16, 17, 62, 67, 68, 69, 78, 79, 84, 104, 105, 107, 110, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 205, 238, 240, 243, 245, 390, 429, 434, 437, 438, 441, 443], "glanc": [2, 429], "seem": [2, 424, 427, 429], "togeth": [2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 50, 65, 71, 73, 74, 99, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 187, 216, 227, 236, 267, 269, 271, 273, 300, 306, 307, 308, 323, 419, 425, 427, 429, 437], "less": [2, 148, 301, 413, 414, 420, 426, 427, 441, 443], "omit": [2, 141, 248, 266, 290, 397, 426, 431, 439, 441], "proper": [2, 3, 4, 6, 7, 363, 364, 365, 366, 425, 426, 437, 438, 439, 441], "imposs": [2, 3, 69, 78, 79, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 328, 330, 345, 348, 350], "determin": [2, 18, 50, 62, 78, 84, 104, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 167, 215, 242, 279, 290, 331, 425, 430, 437, 438], "complic": [2, 39, 65, 77, 439, 441, 444], "matter": [2, 38, 432], "inconsist": [2, 444], "miss": [2, 3, 4, 6, 7, 32, 36, 39, 44, 50, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 205, 235, 237, 246, 247, 319, 320, 328, 331, 351, 418, 424, 427], "primari": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 141, 432], "elimin": [2, 3, 429], "upon": [2, 3, 8, 19, 437, 439], "canon": 2, "definit": [2, 59, 114, 279], "markov": [2, 3, 429, 444], "mdp": [2, 178, 429, 439], "context": [2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 113, 126, 129, 130, 133, 140, 141, 150, 153, 154, 161, 162, 230, 239, 246, 251, 269, 273, 280, 282, 304, 309, 359, 360, 363, 364, 365, 366, 368, 376, 383, 391, 396, 419, 420, 424, 425, 426, 427, 428, 437, 438, 439, 440, 441, 443], "condit": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 140, 192, 229, 244, 310, 311, 313, 315, 316, 327, 420, 424, 437, 439, 441], "complet": [2, 7, 9, 111, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 187, 228, 418, 420, 424, 426, 429, 436], "termin": [2, 3, 7, 16, 17, 20, 22, 41, 43, 50, 55, 56, 71, 75, 77, 95, 96, 103, 112, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 179, 180, 183, 184, 195, 199, 205, 217, 230, 238, 246, 250, 269, 273, 276, 313, 319, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 424, 425, 426, 437, 438, 439, 443, 444], "reward": [2, 3, 16, 17, 20, 38, 39, 41, 43, 50, 55, 56, 61, 70, 71, 75, 77, 83, 84, 94, 104, 105, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 181, 184, 185, 190, 191, 194, 196, 198, 199, 200, 205, 207, 208, 209, 213, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 236, 237, 238, 239, 241, 242, 244, 246, 250, 269, 276, 309, 313, 323, 328, 329, 331, 332, 333, 335, 336, 337, 340, 344, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 394, 395, 396, 399, 415, 420, 421, 424, 425, 426, 427, 428, 429, 433, 437, 438, 439, 443, 444], "imit": [2, 3, 342], "inform": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 126, 129, 130, 133, 136, 139, 140, 141, 153, 154, 161, 162, 246, 252, 253, 254, 274, 280, 419, 420, 421, 424, 425, 426, 427, 428, 429, 437, 438, 439, 441, 443], "stateless": [2, 3, 50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 192, 346, 381, 424, 429, 439, 444], "simul": [2, 3, 5, 7, 8, 82, 124, 125, 126, 135, 138, 139, 158, 165, 166, 174, 250, 276, 419, 424, 426, 428, 429, 433, 437, 438], "furthermor": [2, 437, 438], "certain": [2, 4, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 177, 192, 203, 228, 237, 246, 266, 268, 272, 345, 424, 425, 426, 428, 434, 437, 438, 444], "composit": [2, 3, 30, 31, 33, 34, 35, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 91, 110, 116, 123, 126, 129, 131, 133, 140, 141, 147, 153, 154, 161, 162, 172, 179, 181, 184, 194, 195, 196, 197, 198, 200, 205, 207, 209, 217, 218, 224, 228, 230, 234, 235, 236, 238, 246, 248, 250, 276, 305, 314, 318, 320, 321, 325, 328, 348, 417, 424, 426, 430, 439], "uniform": [2, 62, 78, 104, 105, 437], "unambigu": 2, "distinguish": [2, 3, 69, 78, 79, 145, 146, 165, 166], "happen": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 290, 425, 428, 431, 432, 433, 440, 444], "everyth": [2, 425, 426, 427, 433, 434], "belong": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 243, 244, 318, 424, 432, 438], "rule": [2, 77, 153, 194, 198, 318, 419, 426], "field": [2, 3, 16, 17, 20, 22, 28, 32, 36, 39, 41, 44, 45, 46, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 98, 99, 100, 104, 112, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 178, 180, 184, 194, 195, 198, 199, 200, 205, 213, 217, 218, 220, 224, 227, 228, 230, 235, 237, 238, 246, 250, 252, 262, 263, 269, 273, 276, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 405, 418, 419, 425, 439], "taken": [2, 3, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 219, 277, 278, 420, 424, 426, 427, 430, 437, 438, 439], "is_shar": [2, 3, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 50, 61, 63, 64, 65, 70, 71, 75, 77, 78, 79, 80, 83, 84, 94, 98, 99, 100, 104, 112, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 178, 180, 184, 194, 195, 198, 199, 200, 205, 213, 217, 218, 220, 224, 227, 228, 230, 238, 244, 250, 252, 262, 263, 269, 273, 276, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 419, 439], "envbas": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 50, 84, 126, 130, 133, 140, 141, 153, 154, 161, 162, 167, 178, 181, 184, 194, 198, 210, 217, 218, 236, 237, 244, 246, 250, 269, 273, 275, 276, 313, 396, 405, 406, 407, 411, 413, 414, 415, 417, 429], "brought": [2, 426, 427, 430], "step_mdp": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 269, 273, 417, 427, 429, 439, 443, 444], "count": [2, 3, 50, 55, 84, 129, 130, 228, 235, 290, 396, 401, 404, 424, 425, 426, 427, 441, 444], "trigger": [2, 7, 39, 65, 77, 140], "turn": [2, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 61, 63, 66, 70, 72, 74, 84, 126, 139, 153, 162, 204, 236, 239, 243, 310, 381, 396, 420, 424, 425, 427, 430, 439, 440], "retain": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162], "consider": [2, 3, 8, 132, 134, 236, 417, 425, 437, 438, 441], "regard": [2, 263, 311, 328, 338, 348, 424, 426, 439], "expand": [2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 112, 113, 184, 230, 261, 317, 320, 329, 331, 344, 346, 349, 351, 353, 354, 437, 438, 439, 441, 443], "recur": [2, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 367, 430], "anyth": [2, 4, 16, 17, 20, 22, 23, 24, 25, 26, 420], "els": [2, 124, 125, 184, 195, 267, 268, 271, 272, 284, 419, 421, 424, 425, 426, 427, 437, 438, 439, 440], "repetit": [2, 426, 429, 432], "embed": [2, 215, 240, 241, 242, 256, 291, 305, 306, 307, 308, 317, 318, 322, 440], "strictli": [2, 3, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 208, 235, 237, 246, 331, 351, 424, 426], "enforc": [2, 32, 36, 39, 44, 55, 65, 66, 72, 77, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 319, 331, 351, 439], "n_action": [2, 313, 329, 331, 333, 335, 347, 351], "rightmost": [2, 420], "n_ob": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 313, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 431], "estim": [2, 4, 105, 112, 113, 140, 195, 199, 207, 256, 298, 306, 307, 308, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 420, 425, 426, 430, 431, 437, 438], "subsequ": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 246, 427, 437], "proce": [2, 437], "state_valu": [2, 307, 308, 322, 330, 336, 344, 345, 348, 349, 351, 363, 364, 365, 366, 368, 370, 372, 374, 376, 377, 379, 419, 424, 438], "f": [2, 124, 125, 133, 138, 139, 232, 247, 272, 327, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 424, 425, 426, 427, 434, 437, 438, 439, 441, 444], "next_state_valu": [2, 353, 354, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 417], "left": [2, 16, 17, 57, 105, 112, 140, 184, 191, 193, 194, 195, 196, 200, 207, 209, 215, 217, 218, 224, 228, 231, 234, 236, 238, 240, 242, 246, 266, 279, 425, 426, 428, 432, 433], "would": [2, 3, 32, 39, 44, 55, 65, 66, 71, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 267, 269, 271, 273, 274, 279, 318, 420, 421, 425, 426, 427, 429, 431, 432, 439, 441, 443, 444], "best": [2, 5, 9, 137, 269, 273, 437, 438, 441, 443], "bug": [2, 4], "worst": [2, 425], "twice": [2, 8, 113], "feasibl": 2, "mostli": [2, 3, 22, 289, 383, 420, 433, 441, 444], "eas": [2, 3, 437, 438], "flat": [2, 118], "ted2flat": [2, 41, 417], "flat2t": [2, 417], "unflatten": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 184, 313], "deseri": [2, 3, 41], "posit": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 202, 203, 205, 226, 227, 228, 231, 235, 237, 239, 246, 331, 351, 420, 426, 437, 438, 439, 441], "both": [2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 126, 129, 130, 132, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 163, 167, 179, 180, 187, 205, 218, 234, 235, 237, 246, 253, 254, 269, 272, 273, 274, 279, 280, 306, 307, 308, 311, 316, 328, 330, 331, 332, 336, 337, 344, 345, 346, 348, 349, 350, 351, 353, 354, 396, 419, 424, 426, 428, 429, 431, 437, 438, 439, 440, 441, 444], "mark": [2, 3, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162, 232, 269, 273, 363, 365, 366, 432, 441], "identifi": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 64, 126, 129, 133, 140, 141, 153, 154, 161, 162], "abov": [2, 3, 7, 32, 39, 44, 55, 65, 66, 72, 77, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 246, 270, 298, 299, 327, 420, 421, 424, 426, 428, 429, 430, 437, 438, 439, 444], "output": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 84, 105, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 179, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 205, 207, 209, 211, 215, 217, 218, 223, 224, 227, 228, 231, 232, 234, 236, 237, 238, 240, 242, 243, 246, 248, 253, 254, 255, 256, 257, 260, 262, 263, 264, 267, 268, 269, 271, 272, 273, 274, 279, 280, 287, 289, 290, 292, 301, 305, 306, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 381, 383, 392, 419, 420, 424, 425, 426, 427, 428, 429, 430, 433, 436, 437, 438, 439, 440, 443, 444], "adjust": [2, 11, 230, 424, 437, 438, 439], "grumodul": [2, 186, 230, 304, 325, 427], "lstmmodul": [2, 269, 304, 427, 428], "skip": [2, 3, 18, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 192, 203, 205, 209, 235, 237, 246, 314, 318, 331, 346, 351, 363, 364, 365, 366, 382, 383, 394, 396, 424, 425, 439], "accumul": [2, 8, 246], "upcom": [2, 346, 372, 373, 374, 375, 377, 378, 379, 380, 424], "popular": [2, 3, 419, 427, 431, 438], "rainbow": 2, "multistep": [2, 16, 17, 20, 22, 23, 24, 25, 26, 246, 417, 425], "shift": [2, 41, 43, 55, 56, 75, 95, 96, 103, 324, 363, 364, 365, 366, 426], "approxim": [2, 438, 444], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 16, 22, 187, 260, 288, 328, 334, 347, 348, 392, 415, 426, 427, 438, 441], "2x": 2, "small": [2, 113, 240, 249, 424, 426, 428, 437, 438, 444], "clearer": [2, 428, 430], "lazi": [2, 73, 74, 91, 92, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 215, 240, 253, 279, 282, 319, 320, 424, 425, 430, 432, 436, 441, 444], "certainli": 2, "welcom": [2, 429], "wrapper": [2, 3, 22, 45, 46, 47, 61, 63, 70, 71, 78, 79, 84, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 195, 243, 247, 251, 252, 301, 309, 313, 318, 323, 363, 388, 389, 390, 415, 417, 426, 427, 429, 437, 438, 440, 443, 444], "around": [2, 5, 7, 22, 78, 79, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 195, 251, 289, 313, 318, 363, 424, 425, 438, 444], "selecttransform": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162], "excludetransform": [2, 224, 441], "promptli": 2, "virtual": [2, 3, 132], "instal": [2, 3, 5, 10, 23, 24, 25, 66, 77, 126, 129, 133, 140, 141, 153, 154, 155, 156, 159, 160, 161, 162, 385, 401, 418, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 444], "d4rl": 2, "repositori": [2, 7, 165, 166, 437, 438], "wheel": [2, 426], "publish": 2, "openml": [2, 150], "scikit": [2, 150], "panda": 2, "raw": [2, 3, 4, 71, 205, 234, 238, 270, 298, 299, 425, 428, 432, 439], "go": [2, 3, 7, 99, 144, 153, 192, 216, 220, 309, 369, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "natur": [2, 3, 424, 430, 431, 432, 441], "modifi": [2, 3, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 187, 191, 192, 202, 205, 207, 215, 230, 236, 237, 240, 242, 246, 281, 290, 309, 317, 318, 404, 420, 424, 425, 426, 428, 429, 437, 438, 439], "fly": [2, 187, 244, 345, 420, 426, 439, 441, 444], "least": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 190, 433, 444], "pre": [2, 7, 27, 32, 39, 44, 55, 65, 66, 72, 77, 83, 100, 126, 129, 133, 140, 141, 153, 154, 161, 162, 215, 234, 240, 242, 246, 444], "conisder": 2, "per": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 118, 137, 138, 139, 153, 155, 156, 190, 209, 223, 253, 254, 264, 266, 279, 280, 313, 383, 385, 388, 390, 401, 413, 414, 424, 425, 426, 427, 428, 430, 431, 434, 437, 438, 441, 443], "pipelin": [2, 3, 7, 419, 420, 426], "replac": [2, 3, 6, 7, 32, 39, 44, 55, 65, 66, 72, 77, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 197, 199, 206, 246, 266, 419, 437, 441, 443], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 209, 220, 230, 237, 246, 248, 290, 313, 399, 419, 421, 425, 426, 427, 430, 433, 439, 441, 444], "produc": [2, 3, 36, 37, 48, 50, 74, 112, 180, 183, 184, 253, 254, 274, 280, 286, 306, 308, 309, 318, 383, 426, 427, 428, 429, 430, 432, 441, 444], "unless": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 95, 111, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 235, 237, 246, 251, 328, 329, 331, 344, 346, 348, 349, 350, 351, 353, 354, 426], "download": [2, 7, 10, 13, 14, 16, 17, 20, 22, 23, 24, 25, 26, 137, 215, 242, 383, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "forc": [2, 3, 6, 7, 16, 17, 22, 23, 24, 25, 26, 154, 425, 437, 438, 439], "robosetexperiencereplai": [2, 112, 113], "fk1": 2, "v4": [2, 133, 153, 180, 219, 372, 373, 374, 375, 377, 378, 379, 380, 424, 426, 440, 443], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 245], "obs_norm": 2, "norm": [2, 4, 8, 124, 125, 249, 401, 424, 425, 426, 437, 438, 439], "num_work": [2, 61, 63, 83, 94, 148, 153, 161, 424, 425], "os": [2, 63, 83, 94, 425], "cpu_count": [2, 63, 83, 94], "num_chunk": 2, "1000": [2, 4, 50, 69, 77, 98, 99, 104, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 244, 248, 266, 289, 290, 314, 318, 343, 424, 425, 426, 427, 428, 430, 432, 434, 439, 440, 441], "mp_start_method": [2, 153, 161, 235, 425, 443], "fork": [2, 5, 424, 425, 426, 427, 437, 438, 440, 443], "recreat": [2, 439], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 29, 69, 78, 79, 105, 107, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 207, 428, 432, 440], "grain": [2, 3, 69, 78, 79, 105, 107, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184], "nomenclatur": 2, "compact": [2, 50, 75, 95, 96, 103], "propos": [2, 187, 199, 251, 275, 343, 352, 419, 427, 441], "replaybufferensembl": [2, 110, 116, 123], "primit": [2, 3, 4, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354], "individu": [2, 4, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 83, 105, 107, 118, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 246, 424, 438], "dummi": [2, 3, 162, 195, 381, 424, 428, 432, 444], "semant": [2, 73, 74, 132, 134, 440], "ident": [2, 3, 16, 17, 20, 45, 46, 47, 55, 61, 63, 69, 70, 77, 78, 79, 84, 98, 107, 112, 126, 129, 132, 133, 134, 140, 141, 148, 153, 154, 161, 162, 199, 227, 236, 249, 279, 280, 329, 331, 344, 349, 351, 353, 354, 363, 364, 365, 366, 413, 414, 425, 429, 437, 438], "another_kei": [2, 107], "renam": [2, 3, 45, 46, 47, 61, 63, 70, 84, 107, 178, 218, 220, 424], "resiz": [2, 3, 107, 187, 425, 427, 428, 429, 441, 444], "imag": [2, 3, 4, 7, 11, 187, 189, 193, 215, 233, 242, 274, 381, 383, 424, 425, 428, 429, 433, 438, 440, 444], "comops": 2, "totensorimag": [2, 3, 107, 187, 219, 425, 427, 428, 441, 443, 444], "renametransform": [2, 3, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187], "rb0": [2, 107], "in_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 65, 67, 77, 107, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 173, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 250, 252, 262, 269, 273, 276, 291, 300, 301, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 342, 344, 345, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 382, 383, 411, 419, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 443, 444], "pixel": [2, 3, 7, 36, 107, 126, 127, 128, 132, 134, 135, 158, 187, 189, 193, 199, 202, 204, 211, 213, 215, 219, 233, 240, 242, 256, 284, 285, 381, 383, 424, 425, 427, 428, 433, 437, 440, 441, 443, 444], "rb1": [2, 107], "out_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 65, 67, 77, 107, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 173, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 250, 252, 262, 263, 269, 273, 276, 291, 292, 300, 301, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 328, 329, 330, 331, 336, 337, 342, 344, 345, 348, 349, 350, 351, 353, 361, 363, 364, 365, 366, 381, 383, 396, 411, 419, 424, 425, 426, 427, 428, 430, 434, 436, 437, 438, 439, 440, 441, 443, 444], "pixels33": [2, 107], "data0": [2, 99, 107], "244": [2, 107, 215, 242], "data1": [2, 99, 107, 443], "_": [2, 8, 62, 67, 68, 69, 78, 79, 99, 107, 126, 130, 137, 165, 166, 188, 194, 195, 197, 198, 207, 211, 218, 233, 244, 246, 289, 305, 317, 318, 322, 327, 328, 329, 331, 332, 336, 337, 344, 348, 349, 351, 353, 354, 363, 364, 365, 366, 385, 424, 425, 426, 427, 428, 434, 437, 438, 439, 441, 443], "parent": [2, 3, 26, 32, 39, 43, 44, 55, 57, 65, 66, 72, 77, 82, 84, 107, 116, 123, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 184, 187, 188, 191, 192, 195, 196, 199, 202, 203, 209, 211, 215, 223, 228, 229, 230, 231, 235, 236, 239, 240, 246, 269, 273, 306, 325, 346, 348, 367, 381, 383, 424, 432, 439, 443, 444], "basic": [2, 3, 21, 147, 419, 426, 431, 432, 434, 437, 443, 444], "properti": [2, 3, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 183, 235, 236, 237, 244, 246, 261, 270, 278, 282, 286, 297, 298, 299, 313, 328, 331, 346, 348, 350, 351, 430, 432, 439, 441], "input": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 115, 121, 126, 129, 133, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 279, 280, 281, 282, 283, 290, 292, 293, 294, 295, 296, 298, 301, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 395, 399, 404, 411, 419, 420, 421, 424, 425, 426, 427, 428, 429, 437, 438, 439, 443, 444], "send": [2, 3, 8, 390, 443], "spawn": [2, 3, 4, 23, 27, 137, 148, 153, 161, 235, 425, 437, 438], "check_env_spec": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 205, 217, 238, 381, 417, 426, 437, 438, 439], "saniti": [2, 3, 7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 426], "make_composite_from_td": [2, 82, 417, 439], "fall": [2, 4], "categori": [2, 36, 419, 421], "bound": [2, 3, 4, 26, 32, 34, 36, 39, 44, 55, 65, 66, 72, 77, 85, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 190, 210, 244, 246, 248, 266, 290, 293, 294, 305, 310, 311, 314, 315, 316, 317, 318, 321, 328, 329, 331, 332, 344, 348, 349, 351, 353, 354, 417, 419, 424, 425, 426, 428, 437, 439, 443, 444], "unbound": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 172, 181, 184, 194, 195, 198, 217, 230, 250, 276, 305, 317, 320, 322, 350, 417, 439, 441], "boundeddiscret": [2, 33, 36], "boundedcontinu": [2, 27, 33, 36, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 208, 238], "unboundeddiscret": [2, 85, 154, 205, 417], "unboundedcontinu": [2, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 217, 230, 320, 325, 417], "implicitli": 2, "onehot": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164, 263, 292, 310, 315, 333, 335, 336, 337, 361, 417, 419], "multionehot": [2, 51, 52, 54, 333, 336, 337, 361, 417], "multicategor": [2, 52, 53, 54, 417], "binari": [2, 3, 7, 31, 32, 59, 163, 181, 185, 263, 292, 310, 311, 315, 316, 333, 336, 337, 361, 417], "concept": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 289, 425, 441], "arbitrari": [2, 3, 30, 59, 69, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 183, 420, 424, 425, 439, 441], "combin": [2, 4, 42, 66, 353, 425, 428, 433, 441, 443], "relat": [2, 3, 4, 10, 62, 153, 202, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 425, 434, 439], "nevertheless": [2, 3, 426, 429, 441], "otherwis": [2, 3, 12, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 107, 112, 113, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 187, 188, 192, 197, 205, 211, 229, 230, 231, 235, 236, 237, 244, 246, 247, 249, 251, 267, 270, 271, 279, 280, 298, 299, 304, 310, 315, 318, 321, 329, 331, 340, 346, 347, 351, 363, 365, 366, 396, 398, 420, 421, 424, 425, 426, 427, 439, 444], "similarli": [2, 3, 26, 32, 39, 44, 55, 65, 66, 72, 77, 111, 116, 126, 129, 133, 140, 141, 153, 154, 161, 162, 209, 246, 279, 319, 320, 336, 344, 444], "possess": [2, 82], "unsqueez": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 105, 172, 181, 184, 187, 188, 233, 239, 424, 427, 428, 437, 438, 439], "move": [2, 4, 32, 39, 44, 55, 65, 66, 72, 77, 82, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 178, 180, 191, 196, 215, 230, 236, 237, 240, 242, 244, 246, 274, 317, 399, 424, 425, 427, 429, 444], "unbind": [2, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 209, 269, 273, 313], "said": [2, 426], "neg": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 62, 65, 78, 82, 104, 105, 187, 202, 216, 227, 239, 330, 339, 345, 348, 363, 365, 366, 420, 426, 437, 438, 439], "seen": [2, 3, 23, 24, 25, 26, 36, 37, 48, 74, 126, 129, 133, 140, 141, 153, 154, 161, 162, 196, 420, 424, 425, 427, 431, 437, 438, 441], "predict": [2, 3, 55, 71, 262, 264, 275, 276, 309, 323, 328, 330, 335, 338, 340, 341, 345, 348, 350, 362, 424, 425, 431], "deprec": [2, 28, 31, 32, 34, 37, 39, 40, 44, 48, 49, 52, 54, 55, 58, 60, 65, 66, 72, 77, 87, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 269, 273, 328, 330, 331, 333, 336, 337, 338, 344, 345, 348, 349, 350, 351, 361, 363, 364, 365, 366, 371, 444], "mont": [2, 140, 195, 328, 330, 345, 348, 424], "carlo": [2, 140, 195, 328, 330, 345, 348, 424], "mct": [2, 50], "act": [2, 3, 4, 112, 113, 155, 156, 237, 262, 280, 329, 331, 332, 344, 349, 351, 353, 354, 427, 428, 437, 438, 441, 443], "tradit": [2, 431, 437], "integ": [2, 16, 17, 20, 22, 28, 44, 51, 53, 55, 59, 65, 66, 71, 72, 84, 105, 112, 113, 114, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 183, 199, 203, 211, 228, 253, 254, 274, 279, 280, 331, 336, 344, 351, 420, 428, 441], "advanc": [2, 3, 26, 62, 69, 78, 79, 126, 129, 133, 140, 141, 153, 154, 161, 162, 429, 432, 441], "rebuild": [2, 50], "initi": [2, 4, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 107, 118, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 186, 195, 205, 211, 215, 230, 237, 240, 245, 246, 247, 248, 249, 250, 266, 267, 268, 271, 272, 276, 279, 280, 281, 282, 283, 290, 313, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 415, 419, 420, 424, 425, 427, 429, 430, 432, 437, 439, 444], "pair": [2, 3, 45, 46, 47, 55, 61, 63, 65, 70, 77, 84, 126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 220, 230, 235, 269, 306, 314, 318, 346, 363, 364, 365, 366, 367, 419, 420, 424, 425, 426, 430, 431, 436, 439, 444], "term": [2, 71, 99, 207, 271, 272, 282, 283, 327, 328, 337, 403, 425, 426, 429, 430, 438], "pseudocod": [2, 3], "next_stat": [2, 420], "associ": [2, 3, 32, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 246, 293, 415, 424, 441], "sens": [2, 4, 45, 46, 47, 61, 63, 70, 84, 187, 195, 432, 439], "hard": [2, 3, 7, 118, 127, 128, 153, 343, 425, 444], "let": [2, 3, 6, 7, 11, 28, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 80, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 187, 246, 269, 273, 279, 280, 310, 396, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444], "know": [2, 3, 4, 9, 62, 69, 78, 79, 132, 134, 248, 346, 349, 396, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 438, 441], "next_td": 2, "Of": [2, 3, 7, 418, 439, 444], "cours": [2, 3, 4, 418, 439, 444], "handi": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 433], "undertaken": [2, 84, 420, 439], "link": [2, 6, 7, 129, 425, 434], "hash": [2, 44, 50, 65, 66, 72, 77, 84, 126, 141], "past": [2, 4, 140, 187, 313, 425, 441], "node_map": [2, 50], "_index": [2, 65, 77], "Then": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 243, 426, 436], "track": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 79, 104, 105, 111, 126, 140, 223, 232, 244, 246, 290, 313, 388, 394, 425, 427, 429, 432, 438, 439, 441], "next_data": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162], "data_map": [2, 50], "form": [2, 16, 17, 22, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246, 267, 269, 271, 273, 318, 327, 328, 330, 345, 348, 401, 419, 430, 438], "figur": [2, 3, 84, 141, 195, 424, 426, 427, 438, 439, 444], "flowchart": 2, "o": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 272], "get_tre": [2, 50, 84], "vertex": [2, 84], "longer": [2, 84, 247, 425, 434, 437, 438, 441], "vertic": [2, 84], "branch": [2, 50, 84], "repeat": [2, 84, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 195, 235, 250, 261, 426, 437, 438, 439], "depth": [2, 69, 82, 126, 129, 133, 140, 141, 147, 153, 154, 158, 161, 162, 250, 253, 254, 256, 257, 258, 259, 264, 265, 274, 276, 279, 280, 281, 284, 285, 310, 419, 425, 429, 431, 432, 436, 437, 438, 441], "until": [2, 3, 7, 26, 139, 231, 236, 246, 391, 426, 427, 434, 437, 438], "anymor": [2, 45, 46, 47, 61, 63, 70, 84, 237, 317], "utmost": 2, "commonli": [2, 105, 112, 113, 444], "emploi": [2, 283], "languag": [2, 29, 71, 140], "scarc": 2, "address": [2, 441], "subdomain": 2, "extern": [2, 3, 194, 198, 437, 444], "token": [2, 45, 46, 47, 63, 64, 71, 80, 83, 94, 140, 141], "dm": [3, 424, 444], "abl": [3, 50, 144, 155, 156, 269, 273, 424, 426, 427, 430, 436, 437, 438, 439, 441], "experi": [3, 62, 69, 78, 79, 104, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 385, 386, 387, 388, 389, 390, 418, 425, 426, 428, 432, 433, 437, 438, 441], "box": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 132, 134, 281, 346], "lib": [3, 5, 6, 7, 9, 10, 16, 17, 20, 22, 26, 27, 67, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 155, 156, 159, 160, 161, 162, 187, 190, 199, 206, 207, 211, 213, 218, 220, 223, 230, 236, 243, 244, 246, 381, 411, 424, 425, 426, 427, 436, 438, 440, 441, 443, 444], "hope": [3, 11], "nn": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 67, 71, 72, 77, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 191, 197, 199, 207, 215, 230, 236, 237, 240, 242, 246, 250, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 278, 279, 280, 281, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 325, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 411, 419, 420, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 443], "organis": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 425], "attribut": [3, 4, 7, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 126, 129, 132, 133, 134, 139, 140, 141, 153, 154, 161, 162, 180, 195, 199, 209, 215, 237, 240, 244, 246, 269, 273, 318, 328, 329, 331, 332, 333, 335, 337, 338, 339, 342, 344, 346, 348, 349, 350, 351, 353, 354, 361, 424, 427, 439], "live": [3, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 199, 246], "actual": [3, 4, 7, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 404, 420, 424, 426, 428, 437, 438, 439], "care": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 383, 424, 426, 428, 437, 438, 439, 441], "parametr": [3, 283, 318, 329, 331, 336, 344, 351, 424, 426], "observation_spec": [3, 50, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 184, 187, 188, 189, 190, 191, 193, 194, 196, 198, 199, 202, 204, 205, 206, 207, 211, 213, 215, 217, 219, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 246, 250, 269, 273, 276, 405, 411, 424, 426, 431, 436, 437, 438, 439, 444], "state_spec": [3, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 191, 196, 211, 236, 238, 239, 246, 250, 276, 439, 444], "reward_spec": [3, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 184, 185, 190, 191, 194, 196, 198, 208, 217, 221, 222, 223, 225, 227, 234, 236, 238, 239, 246, 250, 276, 426, 437, 438, 439, 444], "done_spec": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 194, 196, 198, 199, 217, 227, 234, 236, 238, 246, 437, 438, 439, 444], "flag": [3, 8, 39, 62, 67, 68, 69, 78, 79, 107, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 206, 290, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 419, 437, 438, 439, 440], "input_spec": [3, 84, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 180, 184, 191, 194, 196, 197, 209, 213, 217, 218, 223, 224, 227, 228, 229, 230, 234, 236, 237, 238, 241, 246, 426, 439], "full_action_spec": [3, 84, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 164, 180, 196, 250, 276, 437, 438], "full_state_spec": [3, 50, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 196, 250, 276], "output_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 237, 238, 246, 439], "full_observation_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 250, 276], "full_reward_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 196, 217, 437, 438], "full_done_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 184, 196, 217, 437, 438], "carri": [3, 26, 53, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 230, 346, 425, 427, 437, 438, 439, 441], "nontensor": [3, 58, 205, 238, 417], "spec_lock": [3, 129], "modif": [3, 5, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 202, 205, 246, 346, 420, 426, 439], "children": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "unlock": [3, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162], "set_spec_lock_": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162], "reason": [3, 4, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 215, 240, 246, 273, 420, 424, 425, 426, 431, 432, 437, 439, 441], "easi": [3, 5, 11, 126, 127, 128, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 248, 266, 290, 419, 420, 424, 425, 426, 438, 440, 441, 443, 444], "cach": [3, 14, 61, 63, 83, 94, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 194, 198, 215, 236, 237, 242, 251, 393], "principl": 3, "new_spec": 3, "eras": [3, 30, 31, 33, 34, 35, 40, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "relock": 3, "previous": [3, 4, 50, 426, 444], "importantli": [3, 314, 318], "action_s": 3, "help": [3, 4, 32, 39, 44, 55, 65, 66, 72, 77, 82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 199, 246, 328, 330, 345, 348, 350, 418, 420, 424, 425, 426, 427, 437, 438], "With": [3, 138, 139, 144, 229, 421, 425, 436, 437, 438, 441, 444], "necessarili": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 444], "present": [3, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 104, 105, 107, 111, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 178, 179, 195, 200, 220, 224, 230, 235, 237, 246, 254, 255, 256, 257, 258, 259, 265, 269, 271, 273, 283, 288, 290, 313, 317, 318, 319, 320, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 415, 421, 424, 434, 436, 437, 438, 441, 443], "0s": [3, 230, 427], "step_and_maybe_reset": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 429], "done_kei": [3, 28, 39, 41, 43, 50, 56, 75, 95, 96, 103, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 187, 199, 220, 228, 246, 437, 438], "assign": [3, 4, 16, 17, 22, 32, 33, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 332, 333, 335, 351, 426, 430, 437, 438, 441], "_reset": [3, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 179, 181, 183, 184, 187, 194, 198, 206, 217, 232, 250, 276, 437], "data_": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162], "append": [3, 8, 11, 50, 62, 67, 68, 69, 78, 79, 107, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 183, 190, 191, 195, 209, 220, 230, 237, 243, 268, 269, 272, 273, 310, 315, 424, 425, 426, 427, 428, 437, 438, 439, 440, 441, 443], "seed": [3, 16, 17, 20, 22, 26, 69, 78, 79, 107, 126, 129, 133, 140, 141, 147, 153, 154, 155, 156, 161, 162, 165, 166, 167, 181, 184, 194, 198, 205, 217, 237, 381, 401, 437], "determinist": [3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 176, 191, 215, 230, 236, 237, 240, 242, 246, 255, 264, 284, 294, 305, 314, 317, 318, 321, 329, 346, 396, 419, 424, 425, 426, 427, 428, 430, 431, 434, 437, 439, 443, 444], "preced": [3, 55, 126, 187, 427], "risk": [3, 216], "overlap": [3, 78, 118], "reproduc": [3, 66, 72, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 187, 205, 424, 426, 428, 438], "maximum": [3, 4, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 55, 61, 63, 64, 71, 77, 80, 83, 84, 85, 94, 98, 99, 100, 101, 104, 105, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 195, 197, 221, 228, 229, 231, 249, 297, 298, 299, 321, 329, 331, 336, 337, 344, 346, 347, 351, 383, 398, 419, 424, 425, 426, 427, 430, 437, 438, 441], "max_step": [3, 11, 118, 126, 129, 133, 140, 141, 145, 146, 147, 153, 154, 161, 162, 165, 166, 228, 235, 246, 381, 429, 430, 431, 433, 434, 437, 438, 443, 444], "tensordictmodul": [3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 67, 71, 77, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 186, 207, 252, 263, 269, 273, 276, 291, 292, 300, 301, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 319, 320, 321, 323, 325, 329, 331, 332, 336, 337, 339, 340, 341, 342, 344, 346, 349, 351, 353, 354, 361, 362, 363, 364, 365, 366, 396, 411, 417, 424, 426, 427, 431, 434, 436, 437, 438, 439, 440, 444], "trail": [3, 244], "treat": [3, 55, 420, 430, 431], "brief": [3, 426, 429, 431, 441], "deliveri": 3, "metaclass": [3, 129], "everi": [3, 8, 18, 32, 36, 37, 39, 44, 48, 55, 59, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 84, 107, 114, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 228, 229, 244, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 279, 280, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 346, 401, 421, 424, 425, 426, 427, 429, 430, 437, 438, 439], "flank": [3, 420, 427], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 187, 205, 235, 237, 244, 246, 250, 263, 264, 276, 277, 278, 279, 280, 281, 284, 285, 293, 294, 308, 311, 328, 331, 338, 339, 340, 341, 348, 351, 363, 368, 376, 423, 424, 426, 428, 430, 431, 432, 433, 437, 438, 441], "union": [3, 25, 32, 36, 37, 39, 44, 48, 49, 53, 54, 55, 57, 59, 60, 65, 66, 72, 73, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 279, 300, 335, 337, 349, 412, 415], "assess": [3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 48, 74, 145, 146, 168, 424], "split_trajectori": [3, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 113, 417], "adjac": [3, 28, 202, 313], "junction": 3, "inittrack": [3, 269, 273, 313, 424, 427], "tutori": [3, 154, 416, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444], "scratch": [3, 8, 425, 439], "mere": [3, 22, 428], "batch_lock": [3, 126, 129, 131, 133, 140, 141, 153, 161, 184, 230, 237, 439], "notabl": 3, "braxenv": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 218, 417, 429], "jumanjienv": [3, 417], "straightforward": [3, 21, 424, 425, 429, 430, 431, 432, 441], "merg": [3, 62, 69, 78, 79, 439], "correctli": [3, 7, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "silent": [3, 32, 39, 44, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324], "_step": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246], "temporari": [3, 424], "hold": [3, 236, 359, 360, 439, 441], "arm": 3, "unbatch": [3, 267, 271], "captur": [3, 248, 266, 290, 428], "base_env": [3, 125, 126, 129, 133, 134, 139, 140, 141, 152, 153, 154, 161, 162, 164, 180, 181, 184, 190, 192, 194, 197, 198, 207, 213, 217, 219, 225, 228, 230, 231, 235, 237, 246, 383, 391, 424, 425, 426, 428, 437, 440, 443, 444], "break_when_all_don": [3, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162], "conditionalskip": 3, "programmat": 3, "pretti": [3, 424, 429, 433, 441], "likewis": 3, "break_when_any_don": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 183, 235, 246, 252, 313, 438], "te": 3, "paragraph": 3, "deep": [3, 9, 187, 208, 256, 257, 258, 259, 262, 290, 328, 331, 343, 351, 352, 424, 437], "dive": 3, "gym3": 3, "envpool": [3, 148, 149], "simultan": [3, 25, 139, 148, 149, 153, 161, 439], "advantag": [3, 8, 140, 195, 265, 328, 330, 345, 348, 350, 363, 364, 365, 366, 367, 368, 370, 372, 374, 376, 377, 379, 420, 421, 424, 425, 426, 427, 438, 439, 444], "inherit": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 275, 279, 280, 346, 421, 426, 437, 438], "from_pixel": [3, 11, 124, 125, 127, 128, 132, 134, 135, 138, 139, 158, 187, 219, 381, 383, 424, 425, 427, 429, 433, 434, 440, 441, 443, 444], "81": [3, 112], "simpli": [3, 6, 45, 46, 47, 61, 63, 70, 83, 84, 116, 118, 123, 200, 224, 243, 346, 363, 419, 420, 424, 426, 431, 437, 438, 444], "d": [3, 39, 62, 65, 69, 77, 78, 79, 94, 104, 105, 249, 267, 271, 314, 318, 443], "privat": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 439, 444], "absenc": 3, "total": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 45, 46, 47, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 107, 113, 118, 330, 345, 348, 392, 394, 396, 401, 404, 405, 423, 424, 425, 426, 427, 431, 437, 438, 440, 441, 442, 443], "accord": [3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 50, 61, 63, 70, 71, 84, 107, 110, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 164, 211, 222, 270, 282, 293, 298, 299, 361, 419, 420, 430, 431, 437, 439, 441], "inner": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 197, 237, 421, 425, 426, 438, 444], "mind": [3, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 437, 438], "wherev": 3, "lost": [3, 8, 243], "intern": [3, 50, 81, 126, 129, 133, 140, 141, 153, 154, 161, 162, 422], "face": [3, 5, 8, 9, 429, 444], "NOT": [3, 95, 96, 103, 113, 216], "right": [3, 6, 7, 28, 71, 105, 112, 425, 426, 428, 438, 439, 444], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 192, 237, 246, 363, 364, 365, 366, 437], "preclud": 3, "presenc": [3, 39, 65, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 431], "annihil": 3, "supersed": [3, 28], "pettingzoowrapp": [3, 417], "group": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 144, 145, 146, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 195, 208, 227, 358, 419, 425, 430, 432, 438, 441], "__not__": [3, 314, 329, 331, 344, 349, 351, 353, 354], "constrain": [3, 207, 269, 273, 348, 444], "li": 3, "fact": [3, 7, 8, 424, 426, 429, 437, 438, 439, 440, 441, 444], "meaning": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "perfectli": [3, 421, 424, 428, 439], "meaningless": 3, "val": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 391, 431, 443], "agent0": [3, 428], "agent1": 3, "overrid": [3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 246, 261, 383, 415, 419], "bool": [3, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 187, 188, 192, 194, 195, 197, 198, 199, 200, 202, 205, 207, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 227, 228, 230, 233, 234, 235, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 282, 283, 297, 298, 299, 304, 305, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 361, 363, 364, 365, 366, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 390, 391, 394, 395, 396, 398, 399, 401, 415, 425, 426, 428, 439, 443, 444], "500": [3, 424, 425], "note": [3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 179, 194, 198, 235, 244, 246, 251, 267, 269, 271, 273, 290, 314, 318, 338, 417, 420, 425, 428, 430, 436, 437, 438, 444], "launch": [3, 16, 17, 22, 23, 24, 25, 27, 153, 161], "great": [3, 7, 8, 428, 437, 443], "speedup": [3, 8, 437, 444], "precis": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 178, 194, 198, 268, 272, 424, 426], "misspecifi": 3, "caus": [3, 7, 8, 16, 17, 20, 98, 100, 120, 126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 216, 444], "breakag": 3, "rais": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 167, 168, 187, 201, 210, 220, 229, 230, 231, 235, 237, 246, 248, 266, 290, 331, 346, 351, 391, 424, 426, 437, 438, 441], "mismatch": [3, 65, 425], "subprocess": [3, 16, 17, 22, 130, 153, 161], "multithreadedenv": [3, 417], "underneath": 3, "higher": [3, 4, 105, 190, 321, 424, 425, 426, 437, 441, 444], "type": [3, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 57, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 83, 84, 85, 94, 107, 126, 129, 133, 140, 141, 144, 147, 150, 153, 154, 155, 156, 161, 162, 169, 175, 176, 178, 184, 187, 191, 194, 196, 199, 200, 205, 207, 209, 215, 217, 218, 224, 228, 230, 234, 235, 236, 237, 238, 240, 242, 244, 246, 248, 253, 254, 274, 279, 280, 283, 291, 300, 302, 310, 314, 317, 318, 325, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 356, 358, 361, 369, 381, 413, 417, 419, 424, 425, 426, 428, 432, 437, 438, 439, 441, 444], "atari": [3, 4, 187, 254, 383, 428, 433, 444], "classic": [3, 147, 156, 425], "benchmark_batched_env": 3, "seamlessli": [3, 439], "paradigm": [3, 22, 438], "decpodp": 3, "game": [3, 4, 5, 126, 145, 146, 151, 152, 254, 383, 428, 433], "thank": [3, 424, 428, 429, 443], "carrier": [3, 426, 427, 429, 441], "particular": [3, 32, 39, 44, 55, 65, 66, 72, 77, 83, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 237, 246, 420, 421, 425, 427, 429, 436, 438, 441], "thu": [3, 345, 438], "vma": [3, 165, 166, 381, 437, 438], "robot": [3, 5, 7, 215, 240, 242, 428, 438], "vmasenv": [3, 381, 417, 437, 438], "balanc": [3, 127, 128, 424, 425], "num_env": [3, 26, 132, 136, 149, 165, 166, 381, 437, 438], "n_agent": [3, 165, 166, 279, 280, 281, 291, 300, 361, 381, 420, 437, 438], "ground_rew": 3, "pos_rew": 3, "style": [3, 62, 69, 78, 79], "vari": [3, 132, 134, 135, 155, 156, 158, 165, 216, 420, 428, 438], "creation": [3, 153, 161, 444], "info_spec": [3, 153], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 30, 31, 33, 34, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 179, 180, 181, 199, 217, 263, 286, 289, 292, 310, 311, 314, 315, 316, 333, 336, 337, 361, 417, 427], "simpl": [3, 9, 21, 32, 39, 44, 55, 59, 65, 66, 72, 77, 82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 256, 313, 318, 333, 335, 346, 350, 420, 424, 425, 426, 429, 430, 431, 437, 438, 441, 444], "prefix": [3, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 232, 235, 237, 246, 314, 331, 346, 351, 382, 427, 431, 444], "exactli": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 135, 140, 141, 153, 154, 161, 162, 235, 237, 246, 267, 271, 286, 331, 351, 424, 427, 432, 437, 438], "action_kei": [3, 16, 17, 20, 22, 23, 24, 25, 26, 50, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 178, 180, 181, 197, 207, 209, 248, 250, 266, 275, 276, 290, 313, 420, 437, 438], "reward_kei": [3, 39, 41, 43, 50, 56, 75, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 246, 250, 276, 395, 399, 437, 438], "set_kei": [3, 199, 328, 330, 331, 333, 336, 337, 338, 344, 345, 346, 348, 349, 350, 351, 361, 367, 424, 437, 438], "awai": [3, 426, 429, 437, 438, 443], "leaf": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 206, 228, 230, 236, 318], "full": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 251, 269, 273, 311, 318, 392, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "autoresettransform": 3, "invalid": [3, 32, 39, 44, 55, 65, 66, 72, 77, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 168, 246, 277, 278], "nan": [3, 183, 243], "auto_reset": [3, 50, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 183, 195, 246, 439], "auto_reset_replac": [3, 183], "placehold": [3, 135, 199, 237], "set_gym_backend": [3, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 171, 183, 417, 429, 443], "autoresettinggymenv": [3, 183], "self": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 250, 263, 266, 269, 273, 276, 279, 280, 291, 300, 314, 317, 322, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 421, 424, 439, 443], "super": [3, 147, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 250, 263, 276, 322, 329, 331, 332, 337, 344, 349, 351, 353, 354, 424, 439, 443], "td_reset": [3, 183], "exclud": [3, 8, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 187, 200, 291, 330, 345, 348, 437, 438, 441], "r": [3, 4, 50, 55, 126, 180, 181, 183, 190, 192, 211, 225, 232, 235, 244, 249, 252, 268, 318, 327, 362, 381, 425, 439, 444], "3633e": [3, 183], "02": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 425, 434], "4877e": [3, 183], "01": [3, 183, 211, 249, 290, 324, 328, 330, 345, 348], "2849e": [3, 183], "7584e": [3, 183], "6609e": [3, 183], "6166e": [3, 183], "8366e": [3, 183], "2761e": [3, 183], "5685e": [3, 183], "4102e": [3, 183], "8111e": [3, 183], "9959e": [3, 183], "0865e": [3, 183], "5644e": [3, 183], "2119e": [3, 183], "2542e": [3, 183], "03": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 211, 232], "9952e": [3, 183], "4059e": [3, 183], "2094e": [3, 183], "9009e": [3, 183], "5140e": [3, 183], "3554e": [3, 183], "2920e": [3, 183], "7893e": [3, 183], "6429e": [3, 183], "3057e": [3, 183], "2867e": [3, 183], "6963e": [3, 183], "3818e": [3, 183], "2576e": [3, 183], "2679e": [3, 183], "1640e": [3, 183], "00": [3, 124, 125, 183, 423, 442], "6972e": [3, 183], "0212e": [3, 183], "5959e": [3, 183], "4637e": [3, 183], "3121e": [3, 183], "2168e": [3, 183], "5232e": [3, 183], "7704e": [3, 183], "7457e": [3, 183], "4127e": [3, 183], "1064e": [3, 183], "0854e": [3, 183], "5712e": [3, 183], "2189e": [3, 183], "5235e": [3, 183], "8289e": [3, 183], "0009e": [3, 183], "0257e": [3, 183], "8893e": [3, 183], "5872e": [3, 183], "9405e": [3, 183], "7766e": [3, 183], "0403e": [3, 183], "0626e": [3, 183], "2959e": [3, 183], "7263e": [3, 183], "2775e": [3, 183], "9564e": [3, 183], "0411e": [3, 183], "6769e": [3, 183], "6354e": [3, 183], "8698e": [3, 183], "1765e": [3, 183], "6292e": [3, 183], "5375e": [3, 183], "1820e": [3, 183], "7023e": [3, 183], "5836e": [3, 183], "9016e": [3, 183], "4826e": [3, 183], "6191e": [3, 183], "6387e": [3, 183], "8667e": [3, 183], "2056e": [3, 183], "1147e": [3, 183], "5991e": [3, 183], "0278e": [3, 183], "5219e": [3, 183], "3067e": [3, 183], "6617e": [3, 183], "3322e": [3, 183], "2629e": [3, 183], "4599e": [3, 183], "7298e": [3, 183], "5848e": [3, 183], "0148e": [3, 183], "5745e": [3, 183], "6982e": [3, 183], "7877e": [3, 183], "3527e": [3, 183], "7285e": [3, 183], "6668e": [3, 183], "0583e": [3, 183], "6956e": [3, 183], "3962e": [3, 183], "9845e": [3, 183], "5015e": [3, 183], "5903e": [3, 183], "9993e": [3, 183], "9418e": [3, 183], "0196e": [3, 183], "6557e": [3, 183], "2109e": [3, 183], "8997e": [3, 183], "1507e": [3, 183], "7363e": [3, 183], "0310e": [3, 183], "9574e": [3, 183], "8980e": [3, 183], "0090e": [3, 183], "forecast": 3, "awar": [3, 7, 98, 99, 100, 101, 114, 116, 120, 269, 273, 425, 427], "detect": [3, 346, 420], "return_contigu": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 436], "tensordictbas": [3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 68, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 118, 126, 129, 131, 133, 140, 141, 153, 154, 161, 162, 167, 178, 179, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 199, 200, 201, 202, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 248, 250, 266, 269, 273, 275, 276, 290, 309, 311, 313, 316, 317, 318, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 401, 424, 437, 439], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 16, 17, 22, 29, 32, 33, 36, 38, 39, 44, 55, 59, 62, 65, 66, 71, 72, 77, 78, 85, 104, 105, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 183, 187, 191, 194, 198, 207, 208, 211, 215, 220, 221, 222, 229, 230, 233, 236, 237, 240, 242, 244, 246, 248, 249, 251, 252, 261, 264, 267, 270, 271, 274, 277, 278, 282, 283, 289, 293, 294, 297, 299, 317, 321, 324, 326, 327, 328, 329, 330, 331, 335, 336, 337, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 362, 368, 369, 370, 371, 372, 373, 374, 375, 376, 399, 424, 425, 441, 444], "_set_se": [3, 181, 184, 194, 198, 217, 439], "lazystackedtensordict": [3, 50, 74, 99, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 195, 436], "float32": [3, 16, 17, 20, 33, 36, 39, 41, 45, 46, 47, 50, 61, 62, 63, 65, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 98, 99, 100, 104, 105, 112, 120, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 147, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 184, 194, 198, 199, 200, 205, 208, 211, 213, 217, 218, 220, 224, 227, 228, 230, 233, 238, 250, 252, 262, 263, 269, 273, 276, 290, 291, 292, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 320, 322, 325, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 361, 419, 439], "exclusive_field": [3, 50, 99, 195], "stack_dim": [3, 50, 99, 195], "dramat": 3, "carefulli": [3, 437, 438, 444], "against": [3, 5, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 246, 305, 310, 311, 314, 315, 316, 317, 318, 329, 331, 344, 349, 351, 353, 354, 426, 437, 438], "plain": [3, 8, 140, 429], "expens": [3, 105, 112, 113, 381, 441], "absent": [3, 36, 37, 48, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 224, 237], "torchvis": [3, 11, 215, 242, 385, 437, 443, 444], "callabl": [3, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 107, 126, 129, 130, 133, 140, 141, 147, 153, 154, 161, 162, 177, 182, 184, 191, 192, 195, 199, 205, 230, 237, 238, 246, 247, 253, 254, 274, 281, 318, 327, 346, 381, 406, 407, 413, 414, 415, 425, 441], "bring": [3, 426, 429, 444], "signific": [3, 5, 8, 426, 443, 444], "kind": [3, 69, 82, 431, 437, 441], "consult": 3, "interest": [3, 314, 318, 419, 425, 426, 429, 438, 439, 444], "resize_par": 3, "revers": [3, 271], "order": [3, 11, 20, 32, 39, 44, 55, 59, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 111, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 194, 195, 198, 205, 213, 227, 235, 237, 246, 289, 305, 310, 317, 319, 320, 322, 328, 329, 331, 332, 336, 337, 344, 348, 349, 350, 351, 353, 354, 425, 437, 438], "chain": [3, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 140, 141, 191, 197, 253, 254, 320, 444], "in_keys_inv": [3, 173, 190, 194, 196, 198, 205, 211, 212, 213, 217, 218, 220, 225, 234, 236, 238, 239, 424, 436, 439, 444], "append_transform": [3, 50, 62, 67, 68, 69, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 173, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 252, 269, 273, 381, 424, 427, 437, 439, 441, 443, 444], "doubletofloat": [3, 424, 426, 436], "float64": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 127, 128, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 180, 191, 194, 198, 215, 230, 236, 237, 240, 242, 246, 317], "think": [3, 418, 426, 437, 438, 444], "in_": 3, "out_": 3, "perspect": [3, 263, 311, 338, 426, 428], "outer": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 421, 424, 425, 444], "ob": [3, 4, 8, 28, 36, 37, 48, 50, 62, 67, 68, 69, 74, 77, 78, 79, 84, 104, 107, 112, 113, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 178, 181, 183, 194, 196, 198, 211, 225, 227, 233, 256, 257, 258, 259, 279, 280, 281, 315, 322, 329, 331, 332, 337, 344, 349, 351, 353, 354, 363, 364, 365, 366, 425, 428, 436, 437, 439, 441, 443, 444], "obs_standard": 3, "out_keys_inv": [3, 173, 190, 194, 196, 198, 205, 211, 212, 213, 217, 218, 225, 227, 234, 236, 238, 239, 439], "illustr": [3, 424, 425, 430, 441], "chang": [3, 5, 7, 11, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 111, 112, 114, 116, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 191, 194, 196, 198, 200, 207, 209, 217, 218, 224, 228, 234, 236, 237, 238, 244, 246, 271, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 420, 424, 427, 437, 438, 439, 440, 441, 444], "schemat": [3, 420], "outermost": 3, "innermost": 3, "similar": [3, 32, 39, 44, 45, 46, 47, 55, 57, 61, 63, 65, 66, 69, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 191, 195, 215, 230, 236, 237, 240, 241, 242, 244, 246, 306, 308, 314, 317, 318, 420, 424, 425, 426, 427, 428, 430, 431, 432, 433, 439, 441, 443, 444], "transform_action_spec": [3, 191, 196, 211, 236, 238, 239, 246], "spec_from_random_valu": 3, "_apply_transform": [3, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 439, 444], "rand": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 99, 107, 124, 125, 138, 139, 147, 151, 152, 157, 163, 164, 181, 184, 194, 198, 217, 227, 250, 276, 314, 328, 329, 331, 332, 333, 335, 336, 337, 344, 346, 348, 349, 351, 353, 354, 439, 443, 444], "approach": [3, 62, 69, 78, 79, 187, 211, 249, 279, 280, 353, 424, 426, 431, 432, 437, 444], "insid": [3, 45, 46, 47, 61, 63, 70, 84, 153, 444], "did": [3, 69, 243, 369, 425, 426, 432, 441, 444], "_inv_apply_transform": [3, 180, 236, 246, 439, 444], "actiondiscret": 3, "rand_act": [3, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 184, 195, 237, 429], "action_discret": 3, "addonetoob": 3, "Is": [3, 236], "rewrit": [3, 236], "_call": [3, 181, 183, 184, 186, 187, 188, 191, 192, 196, 197, 199, 200, 201, 202, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 439], "_inv_cal": [3, 180, 236, 246], "overwrit": [3, 236], "till": [3, 236, 243], "encapsul": [3, 236, 429, 430, 431], "forget": [3, 236, 271], "edit": [3, 236, 246, 432], "top": [3, 4, 118, 124, 125, 138, 139, 193, 236, 250, 276, 430], "transform_output_spec": [3, 184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 246], "transform_input_spec": [3, 180, 184, 191, 194, 196, 197, 209, 213, 217, 218, 223, 227, 228, 229, 230, 234, 236, 238, 241, 246], "transform_observation_spec": [3, 184, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 202, 204, 206, 207, 209, 211, 213, 217, 218, 219, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 246, 439], "transform_state_spec": [3, 191, 196, 211, 236, 238, 239, 246], "transform_reward_spec": [3, 184, 185, 190, 191, 194, 196, 200, 207, 208, 209, 217, 218, 221, 222, 223, 224, 225, 227, 228, 234, 236, 238, 239, 246], "rewardsum": [3, 178, 236, 246, 437, 438], "undo": 3, "addonetoact": 3, "subtract": [3, 229], "regist": [3, 14, 15, 18, 19, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 163, 164, 175, 178, 194, 198, 199, 223, 235, 237, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 381, 383, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 421, 424, 426, 429, 441], "manipul": [3, 4, 8, 127, 128, 215, 236, 240], "third_transform": 3, "unexpect": [3, 16, 17, 20, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 444], "behviour": 3, "fortun": [3, 427, 428, 429, 430, 433], "alreadi": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 230, 246, 247, 318, 363, 364, 365, 366, 424, 426, 433, 437, 438], "catfram": [3, 313, 425], "notic": [3, 118, 187, 420, 426, 434, 439], "parenthood": 3, "henc": [3, 62, 179, 216, 279, 424, 426, 437, 438, 439], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 153, 161, 237, 381, 391, 439], "discret": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 132, 133, 134, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 180, 197, 205, 286, 289, 292, 335, 336, 337, 338, 419, 425, 430, 438], "might": [3, 45, 46, 47, 61, 63, 64, 70, 84, 387, 418, 424, 429, 444], "action_mask": [3, 126, 138, 139, 155, 156, 159, 160, 181], "unavail": [3, 155, 156], "probabl": [3, 4, 8, 71, 107, 110, 251, 252, 261, 263, 266, 267, 269, 271, 273, 274, 277, 278, 286, 298, 299, 314, 318, 331, 348, 419, 420, 425, 428, 430, 443], "probabilistictensordictmodul": [3, 207, 318, 319, 420, 443], "tensordictsequenti": [3, 39, 65, 77, 252, 266, 269, 273, 290, 310, 313, 319, 320, 325, 419, 424, 425, 427, 428, 430, 434, 436, 437, 440, 443], "maskedcategor": [3, 278, 417], "linear": [3, 16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 191, 207, 215, 230, 236, 237, 240, 242, 246, 250, 252, 253, 254, 256, 257, 258, 259, 263, 265, 266, 274, 276, 279, 280, 282, 283, 290, 292, 293, 294, 305, 306, 307, 308, 312, 313, 314, 315, 317, 320, 322, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 411, 419, 425, 436, 440, 443], "in_feat": 3, "out_feat": 3, "logit": [3, 45, 47, 63, 71, 262, 277, 278, 286, 289, 311, 314, 336, 337, 419], "dist": [3, 10, 277, 278, 286, 318, 420, 430], "distribution_class": [3, 207, 306, 307, 308, 309, 314, 318, 320, 328, 329, 331, 336, 337, 344, 348, 349, 350, 351, 419, 424, 426, 430, 437, 438, 443], "wrap": [3, 5, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 129, 133, 134, 138, 139, 140, 141, 146, 149, 151, 152, 153, 154, 155, 156, 161, 162, 164, 166, 167, 175, 192, 235, 237, 246, 247, 269, 273, 301, 306, 307, 308, 313, 315, 318, 323, 346, 361, 419, 424, 425, 426, 427, 431, 434, 437, 438, 444], "actionmask": [3, 126], "your_base_env": 3, "mask_kei": [3, 28, 181, 216, 246], "itself": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 171, 183, 246, 346, 353, 426, 429], "ey": 3, "report": [3, 124, 125, 138, 139, 433], "foremost": 3, "callback": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 438], "ad": [3, 4, 20, 28, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 91, 104, 105, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 205, 223, 235, 237, 246, 249, 282, 283, 290, 327, 328, 330, 331, 333, 338, 345, 348, 351, 361, 425, 427, 428, 430, 437, 441, 443, 444], "tensordictrecord": [3, 417], "videorecord": [3, 11, 381, 417, 426, 433, 434, 437], "csvlogger": [3, 11, 381, 383, 417, 425, 433, 434, 437], "wandblogg": [3, 417, 433], "tensorboardlogg": [3, 411, 417, 433], "tag": [3, 7, 11, 381, 383, 385, 388, 415, 433, 434, 437], "mp4": [3, 381, 383, 385, 434, 437], "video_format": [3, 381, 383, 385, 434, 437], "whc": 3, "cwh": 3, "exp": [3, 327, 420], "al": [3, 29, 132, 134, 199, 213, 250, 428, 444], "pong": [3, 149, 213, 428, 444], "v5": [3, 132, 134, 149, 199, 213, 428, 444], "tediou": [3, 429], "workspac": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205], "pixelrendertransform": [3, 417, 437], "stream": 3, "alik": [3, 381], "envcreat": [3, 20, 27, 153, 161, 235, 381, 411, 412, 415, 417, 424, 425, 443, 444], "render_mod": [3, 381, 439], "rgb_arrai": [3, 381, 437, 438, 439], "uncom": [3, 433], "line": [3, 7, 32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 425, 433, 437, 438], "comment": [3, 421, 425, 443], "pixels_record": [3, 381], "close": [3, 20, 133, 148, 207, 328, 330, 345, 348, 381, 424, 425, 429, 436, 437, 439, 443], "mission": 3, "irrespect": [3, 317, 318], "dmcontrol": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162], "jumanji": [3, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162], "framework": [3, 4, 9, 27, 124, 125, 126, 129, 133, 138, 139, 140, 141, 147, 153, 154, 161, 162, 267, 443, 444], "Its": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 244, 246, 317, 367], "success": [3, 140, 187, 195, 232, 266, 331, 353, 425, 432, 434, 439, 441, 443], "foundat": [3, 5, 155, 156, 426, 438], "inspir": [3, 428, 439], "gone": [3, 4, 5, 313], "prefer": [3, 16, 17, 22, 25, 28, 29, 62, 69, 78, 79, 112, 113, 216, 224, 348, 353, 398, 419, 426, 437, 438, 441, 443], "concomittantli": 3, "problem": [3, 7, 8, 9, 20, 425, 426, 427, 432, 437, 438, 439, 441, 444], "decor": [3, 8, 175, 177, 247, 269, 273, 304, 346, 363, 364, 365, 366, 391, 427, 443], "relev": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 71, 126, 129, 133, 140, 141, 153, 154, 161, 162, 363, 364, 365, 366, 367, 390, 428, 439], "gym_backend": [3, 177, 417], "env1": [3, 252, 436], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 126, 177], "env2": [3, 436], "_env": [3, 6, 132, 444], "classic_control": 3, "pendulumenv": [3, 50, 417, 439], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 143, 171, 208], "side": [3, 4, 444], "v0": [3, 16, 17, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 126, 129, 133, 135, 138, 139, 140, 141, 142, 143, 153, 154, 161, 162, 191, 208, 237, 244, 391, 411], "26": [3, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162], "fun": [3, 177, 247, 426, 437, 438], "reveal": 4, "curv": 4, "exploit": [4, 430], "cv": 4, "flip": [4, 139], "correspondingli": 4, "invers": [4, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 107, 180, 187, 194, 198, 200, 205, 211, 218, 220, 232, 234, 236, 238, 246, 326, 336, 344, 417, 439], "prescript": 4, "tune": [4, 29, 207, 437, 438, 440], "coeffici": [4, 29, 38, 71, 207, 438], "bonu": [4, 328, 330, 345, 348], "beta": [4, 62, 78, 104, 105, 336, 344, 345, 424, 425, 441, 443], "reduc": [4, 6, 35, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 187, 192, 229, 249, 251, 298, 417, 425, 437], "downstream": [4, 420, 424], "formul": [4, 437, 438], "rate": [4, 11, 244, 362, 425, 426, 437, 438], "gradient": [4, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 251, 270, 278, 283, 286, 298, 299, 318, 328, 330, 331, 332, 336, 337, 342, 344, 345, 346, 348, 349, 350, 351, 353, 354, 362, 363, 364, 365, 366, 401, 424, 426, 437, 438, 439], "easier": [4, 66, 419, 424, 443], "local": [4, 7, 10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 68, 72, 77, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 279, 280, 291, 300, 361, 388, 390, 417, 428, 433, 434, 437, 438], "optima": 4, "product": [4, 9, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 267, 268, 271, 272, 413, 414], "sum": [4, 26, 32, 39, 53, 59, 77, 118, 124, 125, 127, 128, 132, 134, 135, 138, 139, 148, 149, 158, 186, 208, 223, 277, 278, 298, 300, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 344, 345, 347, 348, 349, 350, 351, 353, 354, 362, 369, 420, 424, 425, 426, 427, 428, 431, 434, 437, 438, 439, 444], "stat": [4, 211, 244, 405, 415, 425, 426], "w": [4, 107, 126, 151, 152, 187, 189, 193, 219, 233, 267, 290, 383, 425, 441], "yield": [4, 16, 17, 20, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 195, 246, 346, 424, 431], "insight": [4, 428], "auxiliari": [4, 431], "weight": [4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 71, 72, 77, 105, 107, 110, 124, 125, 126, 129, 133, 140, 141, 153, 154, 159, 160, 161, 162, 191, 205, 208, 215, 230, 235, 236, 237, 240, 242, 246, 267, 268, 269, 271, 272, 273, 279, 281, 283, 317, 328, 329, 330, 331, 337, 340, 351, 353, 403, 410, 417, 419, 421, 424, 425, 426, 436, 439, 441, 443], "credit": 4, "futur": [4, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 215, 235, 237, 242, 246, 274, 328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 418], "spars": [4, 39, 427], "intermedi": [4, 16, 17, 39, 50, 65, 77, 186, 252, 269, 273, 311, 424, 428, 440], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 424], "discov": 4, "score": [4, 71, 287, 289], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 39, 62, 65, 67, 68, 69, 77, 78, 79, 84, 107, 126, 145, 146, 155, 156, 157, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 206, 207, 209, 210, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 250, 269, 273, 310, 315, 400, 419, 420, 424, 428, 429, 437, 441], "explicit": [4, 16, 17, 20, 247, 441], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 29, 126, 129, 133, 140, 141, 153, 154, 161, 162, 271, 336, 344, 426, 438], "addition": [4, 261], "timestep": [4, 71, 220, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 437, 438], "realli": 4, "huge": [4, 280, 427], "std": [4, 211, 244, 248, 288, 424, 444], "torchrlunseen": [4, 140], "extrins": 4, "wrong": [4, 105, 112], "bonus": 4, "denser": 4, "prior": [4, 72, 294, 340, 438], "freshli": 4, "drop": [4, 111, 113, 178], "meant": [4, 55, 140, 147], "encourag": [4, 153, 289, 424, 425, 441], "measur": [4, 98, 100, 120, 124, 125, 138, 139, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 426, 432], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 29, 430], "ideal": [4, 211, 439], "down": [4, 16, 17, 20, 22, 420, 427, 429], "distil": 4, "nois": [4, 245, 283, 290, 303, 349, 353, 354, 396, 415, 424, 437], "exploratori": [4, 328, 330, 345, 348], "misalign": 4, "trade": [4, 430], "unavoid": 4, "bootstrap": [4, 338, 364, 370, 371, 424, 427], "noisi": [4, 282, 283, 303, 419], "unstabl": [4, 270, 298, 299], "inher": [4, 328, 348], "stochast": [4, 207, 264, 283, 284, 294, 329, 331, 334, 336, 337, 342, 344, 347, 349, 351, 419, 426, 430, 438], "enemi": 4, "pomdp": [4, 441], "loos": [4, 318, 419, 425, 426], "nonexist": 4, "sequenc": [4, 16, 17, 20, 22, 29, 36, 37, 39, 48, 51, 53, 61, 62, 63, 64, 65, 69, 71, 74, 77, 80, 83, 84, 94, 97, 107, 108, 110, 116, 119, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 173, 185, 186, 187, 188, 189, 193, 194, 197, 198, 202, 204, 205, 208, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 231, 232, 233, 234, 236, 238, 244, 253, 254, 261, 263, 267, 271, 274, 277, 278, 279, 280, 286, 292, 296, 309, 319, 320, 334, 382, 383, 396, 397, 398, 400, 401, 419, 424, 426, 427, 428, 436, 437, 438, 444], "lstm": [4, 230, 272, 273, 428], "rel": [4, 107, 230, 261, 297, 424, 425, 437, 438, 441], "tend": 4, "stabl": [4, 9, 10, 150], "compens": 4, "descent": [4, 283], "minimum": [4, 85, 153, 161, 221, 264, 297, 298, 299, 321, 324, 327, 329, 331, 337, 346, 347, 351, 392, 420, 424, 426, 434, 437, 438], "manual": [4, 11, 23, 25, 26, 50, 62, 67, 68, 69, 78, 79, 107, 133, 134, 424, 427, 441], "deviat": [4, 211, 244, 248, 250, 264, 276, 282, 283, 288, 289, 348, 353, 354, 424, 430, 438], "radic": 4, "begin": [4, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 183, 267, 268, 271, 272, 327, 391, 420, 428, 429, 430, 431, 432, 433, 434], "stabil": [4, 203, 251, 328, 330, 345, 348, 350], "stage": [4, 424, 439], "never": [4, 16, 17, 22, 33, 85, 105, 232, 432, 443], "prevent": [4, 30, 31, 35, 36, 37, 40, 48, 51, 52, 53, 54, 59, 60, 67, 74, 96, 244, 270, 298, 299, 328, 330, 345, 348, 350, 399, 433, 441], "entir": [4, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 279, 426, 429, 439, 441], "submit": [4, 132, 184, 418, 443], "adequ": [4, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 426, 437, 438], "infeas": 4, "allevi": [4, 419], "prune": [4, 141], "fire": [4, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "illeg": 4, "chess": [4, 126, 151, 152], "grasp": 4, "wherein": 4, "cumul": [4, 39, 223, 229, 250, 369, 426], "q": [4, 9, 126, 129, 133, 140, 141, 153, 154, 161, 162, 256, 257, 258, 259, 262, 263, 265, 291, 292, 300, 308, 311, 315, 316, 329, 331, 332, 333, 335, 336, 337, 338, 343, 344, 349, 351, 353, 354, 361, 417, 424, 431], "flow": [4, 424, 426, 437, 438, 439, 441], "reparameter": [4, 261, 278, 286], "soft": [4, 343, 351, 352, 437], "critic": [4, 8, 306, 312, 328, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 424, 431], "clip": [4, 71, 190, 221, 328, 330, 345, 348, 350, 353, 354, 401, 426, 438, 439], "oppos": [4, 83], "incorrect": [4, 112], "thought": [4, 126, 129, 133, 140, 141, 153, 154, 161, 162], "region": 4, "squash": [4, 427, 443], "tanh": [4, 253, 254, 267, 268, 270, 271, 272, 274, 280, 297, 298, 299, 321, 426, 430, 437, 438, 439, 440], "prob": [4, 277, 278, 286, 289, 426, 438], "rememb": [4, 437], "remap": 4, "origin": [4, 8, 39, 45, 46, 47, 61, 63, 64, 65, 70, 71, 77, 80, 84, 137, 196, 197, 207, 215, 237, 242, 246, 267, 314, 317, 318, 329, 331, 343, 344, 346, 348, 349, 351, 353, 354, 424, 428, 436, 439, 444], "world": [5, 147, 323, 340, 428, 433, 437, 438, 439, 444], "histor": 5, "ceas": 5, "farama": [5, 142, 143, 155, 156, 426, 439], "gymwrapp": [5, 126, 129, 133, 140, 141, 153, 154, 161, 162, 200, 224, 228, 243, 417, 426, 443], "feel": [5, 418, 434, 443], "free": [5, 7, 178, 194, 198, 328, 340, 348, 421, 426, 434, 438, 443], "gladli": 5, "prepar": [6, 43, 426], "conda": [6, 7, 418], "cmake": 6, "activ": [6, 7, 9, 50, 253, 254, 260, 264, 274, 279, 280, 330, 345, 348, 419, 439, 443], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 23, 26, 418], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 135], "y": [6, 7, 39, 65, 69, 77, 150, 265, 279, 301, 424, 438, 441], "facebookresearch": [6, 135], "subdirectori": 6, "verbos": [6, 434], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 91, 126, 129, 133, 140, 141, 153, 154, 161, 162, 217, 226, 246, 346, 437, 438, 443, 444], "command": [6, 7, 10, 162, 426, 437, 438, 439, 444], "readm": [6, 7, 165, 443], "md": [6, 7], "habitatenv": [6, 417], "_has_habitat": 6, "available_env": [6, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 444], "startswith": [6, 252, 420, 424, 431], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 130, 346, 424], "env_nam": [6, 124, 126, 127, 129, 130, 132, 133, 135, 138, 140, 141, 142, 148, 153, 154, 158, 161, 162, 424, 426, 444], "llvmlite": 6, "config": [6, 7, 215, 242, 255, 260, 288, 405, 406, 407, 409, 412], "var": [6, 7, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 346, 351], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 310, 346], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 35, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 346, 351, 428, 441], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 428], "stand": [7, 42, 127, 128, 153, 161, 436, 439], "joint": [7, 425], "contact": [7, 64, 437], "engin": [7, 158, 439], "biomechan": 7, "graphic": 7, "anim": [7, 438], "area": 7, "demand": [7, 433, 444], "fast": [7, 9, 99, 124, 125, 178, 218, 349, 424, 425, 426, 443], "articul": 7, "acquir": [7, 426], "deepmind": [7, 8, 9, 126, 127, 128, 129, 133, 140, 141, 145, 146, 151, 152, 153, 154, 161, 162, 199, 426, 429], "whomev": 7, "licenc": 7, "incorpor": [7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 266, 290, 353, 427, 430, 439], "relianc": 7, "obsolet": 7, "legaci": [7, 28], "pro": [7, 418], "tip": [7, 418], "glfw": [7, 424], "osmesa": 7, "egl": 7, "advic": [7, 444], "sudo": [7, 418], "apt": [7, 438], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 141, 306, 307, 308], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 420, 424, 426, 427, 437, 438, 441], "roboti": 7, "html": [7, 16, 17, 148, 150, 151, 152], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 16, 17, 22, 153, 161], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 61, 63, 83, 94], "bin": [7, 263, 289, 311, 419], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 259, 314, 318, 424, 426, 428, 441], "nvidia": [7, 137, 428], "older": [7, 247], "hack": [7, 424], "adatp": 7, "script": [7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 391, 411, 415, 419, 420, 421, 424, 425, 428, 433, 437, 438, 439, 441], "unnot": [7, 216], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 96, 425, 441], "troubleshoot": 7, "gl": 7, "h": [7, 107, 187, 189, 193, 219, 233, 267, 268, 269, 271, 272, 273, 276, 383, 425, 441], "eglshim": 7, "fatal": 7, "No": [7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 53, 54, 59, 60], "directori": [7, 45, 46, 47, 61, 63, 70, 83, 84, 98, 388, 390, 420, 421, 424, 430, 433, 437], "devel": 7, "ubuntu": [7, 137], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 425, 427, 436], "libstdc": 7, "glibcxx_3": 7, "29": [7, 112, 113], "compil": [7, 16, 17, 20, 28, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 97, 98, 99, 100, 101, 105, 108, 112, 113, 114, 119, 120, 122, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 247, 267, 268, 271, 272, 298, 363], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 32, 35, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 210, 235, 237, 246, 331, 351, 420, 444], "job": [7, 23, 24, 25, 27, 69, 78, 79, 107, 441, 443], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 112, 124, 125], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 437, 438], "global": [7, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 235, 246, 291, 300, 314, 318, 361, 421, 424, 437, 438], "cuda_visible_devic": 7, "id": [7, 28, 71, 84, 105, 107, 112, 113, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 163, 164, 290, 331, 349, 386, 390, 432, 441], "slurm_step_gpu": 7, "black": [7, 126, 437], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 438], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 421], "n_training_step": 8, "datapoint": [8, 83, 441], "n_data_per_train": 8, "no_grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 246, 251, 267, 268, 271, 272, 363, 364, 365, 366, 426, 427, 428, 438], "loss_fn": [8, 427, 431, 432, 443], "zero_grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 289, 421, 424, 426, 427, 428, 431, 434, 437, 438, 439], "backpropag": [8, 124, 125, 138, 139, 153, 328, 329, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 361, 431, 438, 439], "differenti": [8, 83, 124, 125, 207, 331, 353, 363, 364, 365, 366, 427, 430, 431, 437, 438, 439], "denomin": 8, "artifact": 8, "numer": [8, 69, 133, 244, 270, 298, 299, 305, 310, 311, 314, 315, 316, 317, 318, 399, 426, 441, 444], "misconcept": 8, "freed": 8, "appear": [8, 11, 33, 59, 84, 85, 105, 112, 113, 129, 140, 195, 420, 439, 441], "compuat": 8, "fix": [8, 38, 153, 230, 329, 331, 347, 351, 425, 434, 439, 444], "retain_graph": [8, 124, 125], "discuss": [8, 9, 432, 437, 438], "inplac": [8, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 317, 424], "forward": [8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 279, 280, 281, 282, 284, 285, 288, 290, 291, 293, 294, 296, 300, 301, 309, 311, 313, 314, 316, 317, 318, 321, 322, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 363, 364, 365, 366, 367, 417, 420, 427, 439, 443], "submodul": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 171, 230, 246, 269, 273, 325, 346], "param": [8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 246, 261, 263, 279, 280, 281, 297, 309, 314, 317, 320, 346, 356, 360, 363, 364, 365, 366, 367, 424, 428, 434, 437, 438, 439, 440, 443], "grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 318, 424, 426], "whose": [8, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 291, 317], "factor": [8, 11, 29, 39, 55, 220, 246, 248, 249, 266, 270, 283, 290, 298, 299, 329, 335, 338, 339, 341, 352, 369, 424, 425, 428, 430, 434, 437, 438, 441, 444], "fit": [8, 66, 211, 230, 247, 420, 421, 424], "brax": [8, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 218, 429, 444], "jax": [8, 124, 125, 138, 139, 247], "improperli": 8, "underli": [8, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 346, 427, 429, 431, 433, 439], "tedeiou": 8, "priorit": [8, 62, 78, 104, 105, 331, 332, 333, 335, 336, 337, 344, 349, 351, 353, 354, 424, 425, 432, 443], "amount": [8, 153, 290, 425, 441], "costli": [8, 439], "constitut": [8, 425, 438, 439], "profil": 8, "frequent": [8, 50, 441], "program": [8, 336, 344, 428, 444], "functorch": [8, 10], "incl": 8, "suit": [8, 128, 426, 429, 443, 444], "mujoco_instal": 8, "valueerror": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 111, 213, 233, 428, 443, 444], "idea": [9, 349, 421, 427, 430, 437, 438], "introductori": 9, "intro": [9, 426, 427], "dai": [9, 443], "2022": [9, 10, 251, 443], "spin": [9, 127, 128], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 430], "summari": [9, 211, 244, 424, 425, 426, 427], "reddit": 9, "reagent": 9, "orient": [9, 444], "baselines3": 9, "tf": 9, "bandit": [9, 150], "tensorflow": [9, 277, 278], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 428, 434], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 443], "grade": 9, "factori": [9, 16, 17, 20, 22, 23, 24, 25, 26, 67, 69, 78, 79, 80, 424], "cherri": 9, "jaxrl": 9, "mbrl": [9, 147, 419], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 426, 427, 437, 438], "notebook": [10, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "24": [10, 113, 132, 148, 149, 289, 313, 383, 437], "pip3": [10, 424, 426, 427, 437, 438], "url": [10, 135], "org": [10, 16, 17, 29, 62, 104, 105, 124, 125, 127, 128, 135, 138, 139, 145, 146, 148, 149, 150, 158, 165, 166, 187, 215, 240, 249, 255, 256, 257, 258, 259, 260, 263, 264, 265, 271, 276, 277, 278, 283, 284, 285, 289, 290, 291, 293, 294, 300, 311, 328, 329, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 350, 351, 352, 353, 363, 368, 376, 416, 435, 440], "whl": 10, "u": [10, 267, 268, 271, 272, 439], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 187, 426, 437, 438, 439, 441], "power": [11, 425], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 224, 417], "ultim": [11, 270, 298, 299], "ffmpeg": 11, "whatev": [11, 420, 424], "fed": [11, 438, 441], "feed": [11, 215, 242, 346, 419, 424, 437, 438, 441], "suppos": [11, 153, 396, 421, 444], "snippet": [11, 215, 240, 424], "gave": 11, "extrem": [11, 153, 161, 328, 330, 345, 348, 350], "blurri": [11, 428], "stitch": 11, "exp_nam": [11, 383, 384, 385, 388, 389, 390, 411, 425, 433, 434], "my_exp": [11, 433], "pixels_onli": [11, 127, 128, 132, 134, 135, 158, 424, 425, 433, 434, 443, 444], "my_video": [11, 433], "record_env": [11, 433, 434], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 308, 419], "allow_non": 12, "unwrap": [12, 199, 237, 391], "seealso": 12, "policy_weight": [13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], "worker_id": [13, 16, 17, 20, 22, 23, 24, 25, 26], "kwarg": [13, 16, 17, 20, 22, 23, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 52, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 96, 98, 99, 100, 101, 103, 104, 105, 107, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 181, 182, 184, 191, 215, 217, 226, 230, 235, 236, 237, 239, 241, 242, 245, 246, 248, 250, 252, 253, 254, 256, 257, 258, 259, 262, 265, 266, 269, 270, 273, 274, 275, 276, 279, 280, 281, 286, 290, 299, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 361, 362, 363, 364, 365, 366, 367, 381, 383, 387, 388, 390, 394, 401, 406, 407, 412, 413, 414, 420, 426, 428, 438], "synchron": [13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 148, 413, 414, 417, 425, 426, 437], "upload": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "typeerror": [13, 16, 17, 20, 22, 23, 24, 25, 26], "remote_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "local_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "overwritten": [13, 16, 17, 20, 22, 23, 24, 25, 26, 50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 202], "localweightsupdaterbas": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "remoteweightsupdaterbas": [13, 14, 16, 17, 20, 22, 23, 24, 25, 26], "decentr": [14, 279], "_get_server_weight": [14, 15, 18, 19, 21], "_get_local_weight": [14, 21], "_maybe_map_weight": [14, 15, 18, 19, 21], "get_weights_from_polici": 14, "extract": [14, 36, 37, 48, 74, 183, 205, 234, 238, 312, 424, 426, 443], "get_weights_from_serv": 14, "weight_map_fn": 14, "cache_policy_weight": 14, "update_weight": [14, 19, 403], "register_collector": [14, 15, 18, 19, 21], "datacollectorbas": [14, 15, 18, 19, 21, 314, 318, 403, 406, 407, 411, 417], "get_server_weight": 15, "dict": [15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 105, 107, 112, 113, 126, 129, 130, 131, 132, 133, 134, 140, 141, 145, 146, 148, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 205, 207, 230, 235, 237, 243, 244, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 265, 274, 288, 314, 318, 331, 351, 353, 383, 387, 388, 396, 401, 406, 407, 413, 414, 415, 419, 424, 425, 426, 441, 443, 444], "all_worker_id": [15, 18, 19], "_sync_weights_with_work": [15, 18, 19], "create_env_fn": [16, 17, 20, 22, 23, 24, 25, 26, 130, 153, 161, 424, 443], "policy_factori": [16, 17, 20, 22, 23, 24, 25, 26], "device_typ": [16, 20, 22, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 215, 240, 242, 253, 254, 255, 256, 257, 258, 259, 265, 274, 279, 280, 282, 283, 288, 291, 317, 398, 409], "env_devic": [16, 17, 20, 22, 23, 24, 25, 26, 425], "create_env_kwarg": [16, 17, 20, 22, 26, 130, 148, 153, 161, 235, 424, 444], "postproc": [16, 17, 20, 22, 23, 24, 25, 26, 55, 220, 425, 441], "explorationtyp": [16, 17, 20, 22, 23, 24, 25, 26, 314, 346, 396, 419, 424, 425, 426, 427, 430, 437, 443], "interactiontyp": [16, 20, 22, 23, 24, 25, 26, 169, 176, 314, 318, 396], "preemptive_threshold": [16, 17, 22], "num_thread": [16, 17, 22, 45, 46, 47, 61, 63, 70, 84, 153, 161], "num_sub_thread": [16, 17, 22, 153, 161], "str": [16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 104, 105, 107, 118, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 176, 179, 183, 187, 195, 199, 205, 206, 207, 215, 219, 228, 229, 232, 234, 235, 237, 238, 240, 242, 243, 244, 246, 247, 250, 262, 263, 269, 273, 275, 276, 279, 280, 281, 291, 292, 300, 305, 310, 311, 314, 315, 316, 317, 318, 321, 322, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 361, 362, 363, 364, 365, 366, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 415, 425, 426, 428], "set_trunc": [16, 17, 20, 22, 126, 129, 133, 140, 141, 153, 154, 161, 162], "use_buff": [16, 17, 20, 153, 161, 195], "replay_buffer_chunk": 16, "trust_polici": [16, 17, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162], "compile_polici": [16, 17, 20], "cudagraph_polici": [16, 17, 20], "no_cuda_sync": [16, 17, 20], "datacollector": [16, 17, 20, 22, 26, 55, 348, 426, 432, 441], "recept": 16, "safe": [16, 17, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 105, 112, 248, 290, 297, 298, 305, 310, 311, 314, 315, 316, 317, 318, 320, 419, 443], "sota": [16, 17, 147, 203, 350, 392, 406, 424, 425, 443], "guard": [16, 17], "doc": [16, 17, 80, 135, 138, 139, 150, 158, 390, 420, 425, 437, 438, 441], "env_mak": [16, 17, 20, 26, 67, 411, 444], "2000": [16, 17, 20, 55, 83, 136, 289, 383, 441], "50": [16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 71, 73, 74, 82, 85, 86, 87, 88, 89, 112, 113, 145, 146, 246, 427, 441], "shutdown": [16, 17, 20, 22, 26, 184, 424, 425, 441, 443], "del": [16, 17, 20, 424, 425, 426, 436, 437, 441, 443, 444], "int64": [16, 17, 20, 28, 30, 31, 35, 40, 41, 45, 46, 47, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 70, 71, 75, 78, 80, 83, 84, 94, 104, 112, 126, 129, 133, 140, 141, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 180, 184, 195, 199, 213, 220, 228, 263, 290, 292, 310, 311, 314, 315, 316, 419, 439], "subclass": [16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 39, 44, 65, 66, 72, 77, 85, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 182, 183, 236, 243, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 317, 318, 319, 321, 324, 346, 348, 425, 427, 432, 439, 441], "tensordictmodulebas": [16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 77, 186, 301, 310, 313, 315, 427], "undergon": [16, 17, 20, 22, 23, 24, 25, 26, 83], "env_obs_kei": [16, 17, 20, 22, 23, 24, 25, 26], "mustn": [16, 17, 20, 22, 23, 24, 25, 26], "pickl": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246], "exclus": [16, 17, 20, 22, 23, 24, 25, 26, 69, 78, 79, 90, 91, 105, 112, 113, 184, 200, 202, 267, 269, 271, 273, 277, 278, 310, 311, 315, 316, 352, 353, 354, 363, 364, 365, 366, 367, 390, 415, 419], "lifespan": [16, 17, 20, 22, 23, 24, 25, 425], "divis": [16, 17, 20, 22, 23, 24, 25, 32, 105, 112, 113, 249, 438], "endless": [16, 17, 20, 22, 23, 24, 25, 195], "fill": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 133, 183, 230, 243, 273, 427, 439, 440], "sit": [16, 17, 20, 22, 23, 24, 25, 26, 403, 425], "cast": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 94, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 317, 437, 444], "span": [16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 113], "n_step": [16, 17, 20, 22, 23, 24, 25, 26, 55, 246, 313, 425, 426, 437, 438], "mainli": [16, 17, 20, 22, 23, 24, 25, 26, 71, 390, 419, 437, 438, 439], "round": [16, 17, 20, 22, 23, 24, 25, 26, 126], "closest": [16, 17, 20, 22, 23, 24, 25, 26], "post": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "boolm": [16, 17, 22], "update_policy_weight_": [16, 17, 22], "async": [16, 17, 22, 23, 24, 25, 26, 67, 243], "ratio": [16, 17, 22, 71, 424, 426], "finish": [16, 17, 22, 26, 133, 220, 444], "rest": [16, 17, 22, 39, 251, 419, 426, 427, 437, 439, 443], "earli": [16, 17, 22, 55, 133, 228, 443], "safeti": [16, 17, 22, 147, 153, 161], "harm": [16, 17, 22, 153, 161], "add_truncated_kei": [16, 17, 20, 22, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "trust": [16, 17, 20, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 192, 273], "cudagraphmodul": [16, 17, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162], "behaviour": [16, 17, 20, 39, 65, 77, 427, 428, 443], "bypass": [16, 17, 20, 430], "isaaclab": [16, 17, 20, 134], "maniskil": [16, 17, 20], "crash": [16, 17, 20, 220], "unus": [16, 17, 175], "ordereddict": [16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 246, 331, 351], "worker0": [16, 17, 22], "state_dict0": [16, 17, 22], "worker1": [16, 17, 22], "state_dict1": [16, 17, 22], "reset_idx": [16, 17, 22], "static_se": [16, 17, 20, 22, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "increment": [16, 17, 20, 22, 126, 129, 133, 140, 141, 153, 154, 161, 162, 211, 345], "env_fn": [16, 17, 20, 22, 130, 413, 414], "env_fn_parallel": [16, 17, 20, 22], "300": [16, 17, 20, 22, 112, 113, 258, 259], "out_se": [16, 17, 20, 22, 444], "shut": [16, 17, 20, 22], "irrevers": [16, 17, 22], "remote_collector": [18, 26], "max_interv": 18, "_skip_upd": 18, "interv": [18, 180, 232, 382, 383, 393, 403, 425, 439], "raycollector": [18, 67, 417], "registr": [19, 425], "return_same_td": 20, "interruptor": 20, "cautious": [20, 348], "whole": [20, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 314, 331, 351, 392, 424, 426], "_interruptor": 20, "outsid": [20, 196, 235, 420, 433, 437, 438, 439], "start_collect": 20, "stop_collect": 20, "preeptiv": 20, "chunk": [20, 430], "policy_state_dict": 20, "env_state_dict": 20, "weight_gett": 21, "_map_weight": 21, "_update_local_weight": 21, "exporationtyp": [23, 24, 25], "collector_class": [23, 24, 25, 26], "collector_kwarg": [23, 24, 25, 26], "num_workers_per_collector": [23, 24, 25, 26], "slurm_kwarg": [23, 24, 25], "update_after_each_batch": [23, 24, 25, 26], "max_weight_update_interv": [23, 24, 25, 26], "tcp_port": [23, 24, 25, 27], "deriv": [23, 24, 25, 26, 81, 261, 401], "respect": [23, 24, 25, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 185, 191, 194, 198, 209, 215, 216, 225, 230, 236, 237, 240, 242, 246, 267, 271, 279, 294, 317, 322, 328, 330, 345, 348, 350, 363, 365, 366, 397, 420, 426, 427, 437, 438], "subnod": [23, 24, 25, 26], "readi": [23, 25, 26, 418, 425, 426, 428, 430, 433, 441, 443], "fashion": [23, 25, 26, 45, 46, 47, 61, 63, 70, 84, 113], "executor": [23, 24, 25], "distributed_back": [23, 24], "ucc": [23, 24], "submitit_delai": [23, 27], "former": [23, 24, 25, 28, 32, 39, 44, 62, 65, 66, 69, 72, 77, 78, 79, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324, 424], "whilst": [23, 24, 25], "homonym": [23, 24, 25, 439], "visit": [23, 24, 25, 84], "facebookincub": [23, 24, 25], "tcp": [23, 24, 25, 27], "port": [23, 24, 25, 27, 163], "10003": [23, 24, 25, 27], "focus": [23, 25, 26, 424, 431], "update_interv": 24, "frequenc": [24, 289, 424], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 28, 59, 314, 318], "tensorpiperpcbackendopt": 25, "ray_init_config": [26, 67], "remote_config": [26, 62, 67, 68, 69, 78, 79, 107], "num_collector": [26, 413, 414, 424, 425], "coordin": [26, 193], "init": [26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 236, 244, 246, 279, 280, 281, 390, 425, 426], "autodetect": 26, "num_cpu": [26, 67], "num_gpu": [26, 67], "1024": [26, 67, 260, 441], "equat": [26, 65, 84, 133, 195, 244, 290, 327, 330, 352, 426, 429, 439], "exce": [26, 441], "indefinit": [26, 93], "rayreplaybuff": [26, 417], "enfoc": 26, "distributed_collector": [26, 67], "10000": [26, 153, 249, 401, 427], "add_collector": 26, "async_shutdown": [26, 67], "local_polici": 26, "stop_remote_collector": 26, "num_job": 27, "tcpport": 27, "submitit_main_conf": 27, "slurm_cpus_per_task": 27, "slurm_gpus_per_nod": 27, "slurm_partit": 27, "timeout_min": 27, "submitit_collection_conf": 27, "jump": [27, 429], "host": [27, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "satellit": 27, "rendezv": 27, "hang": 27, "forev": 27, "default_config": [27, 255, 260, 288, 309], "default_slurm_conf_main": 27, "default_slurm_conf": 27, "rollout_tensordict": 28, "nestedkei": [28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 70, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 173, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 246, 248, 252, 263, 266, 290, 292, 309, 313, 318, 333, 361, 381, 383], "as_nest": 28, "x": [28, 39, 55, 65, 66, 69, 71, 72, 77, 113, 141, 205, 207, 233, 238, 247, 249, 251, 252, 254, 263, 265, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 301, 310, 314, 315, 324, 327, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 401, 424, 428, 437, 439, 441, 443], "durat": [28, 438], "meta": [28, 45, 46, 47, 61, 63, 70, 82, 84, 131, 135, 328, 330, 345, 348, 350, 421, 426, 437, 438, 441], "aren": [28, 229, 427], "eventu": [28, 291, 427, 439], "recov": [28, 112, 113, 319, 336, 344, 436], "layout": 28, "to_padded_tensor": 28, "nested_tensor": [28, 132, 134], "stride": [28, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 253, 254, 256, 257, 265, 279, 425, 437, 443], "jag": 28, "focu": [28, 424, 425, 426, 428, 430, 431, 432, 437], "team": [28, 437, 438, 443], "cat": [28, 50, 195, 322, 329, 331, 332, 344, 349, 351, 353, 354, 437, 441, 443], "arang": [28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 113, 180, 263, 277, 278, 310, 392, 419, 441], "obs_": 28, "trajectory_id": 28, "int32": [28, 32, 33, 50, 79, 85, 112, 138, 139, 151, 152, 162, 172, 313], "data_split": 28, "got": [28, 432], "init_kl_coef": 29, "horizon": [29, 145, 146, 165, 166, 250, 276, 426], "kl": [29, 38, 71, 207, 340, 345], "describ": [29, 45, 46, 47, 61, 63, 70, 82, 84, 157, 188, 297, 298, 333, 386, 420, 424, 426, 437, 438, 439, 444], "ziegler": 29, "et": [29, 250], "relax": [29, 381], "penalti": [29, 71, 342, 345], "strai": [29, 71], "greater": [29, 105, 112, 113, 195, 208, 209, 269, 273, 331, 424, 425], "increas": [29, 96, 187, 231, 251, 290, 437, 438], "pull": [29, 50, 84, 441], "toward": [29, 242], "aggress": 29, "kl_coef": [29, 38, 71], "arxiv": [29, 62, 104, 105, 124, 125, 127, 128, 138, 139, 145, 146, 148, 149, 158, 165, 166, 187, 215, 240, 249, 255, 256, 257, 258, 259, 260, 263, 264, 265, 271, 276, 283, 284, 285, 289, 290, 291, 293, 294, 300, 311, 328, 329, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 351, 352, 353, 363, 368, 376, 440], "pdf": [29, 187, 255, 256, 257, 258, 259, 263, 289, 290, 311, 331, 338, 342, 349, 352, 353, 363, 368, 376], "1909": 29, "08593": 29, "lm": 29, "blob": 29, "master": [29, 437, 438], "lm_human_prefer": 29, "train_polici": 29, "kl_valu": 29, "coef": [29, 207], "newest": 29, "int8": [30, 129, 144, 155, 156, 185], "encod": [30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 129, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164, 180, 197, 285, 286, 289, 293, 327, 425, 426, 427, 430, 439, 441], "null": [30, 33, 34, 36, 37, 39, 48, 49, 57, 58, 62, 73, 74, 78, 82, 85, 86, 87, 88, 89, 104, 105, 185, 205], "denot": [30, 438], "clariti": [30, 50], "assert_is_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "cardin": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 263, 292, 310, 311, 316, 426], "outcom": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 261, 277, 278, 297, 346, 437], "cartesian": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "clear_device_": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "is_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 444], "np": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 133, 321, 381, 428, 437, 439], "ndarrai": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 133, 290, 321, 381, 428, 437], "ignore_devic": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "arrai": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 71, 73, 74, 82, 85, 86, 87, 88, 89, 104, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 195, 199, 267, 268, 271, 272, 424, 437], "use_mask": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 155, 156], "compliant": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "singleton": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 253, 254, 274, 295, 296, 417, 420], "start_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "end_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "classmethod": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 240, 247, 254, 255, 288], "implements_for_spec": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "torch_funct": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "index_typ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 57, 58, 73, 74, 82, 85, 86, 87, 88, 89], "tensor_to_index": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "exanpl": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 263, 278, 292], "categ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 314], "to_categorical_spec": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_categ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_categor": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "make_neg_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "convert": [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 191, 194, 195, 198, 215, 230, 236, 237, 240, 242, 244, 246, 317, 327, 346, 424, 425, 426, 439, 441], "shortcut": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 439, 444], "ndimens": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 424], "violat": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 419], "proxi": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 278, 286, 314, 420], "project": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 73, 74, 82, 85, 86, 87, 88, 89, 197, 248, 271, 290, 305, 310, 311, 314, 315, 316, 317, 318, 390, 419, 443, 444], "uniformli": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 106, 346, 444], "normal": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 68, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 211, 244, 248, 249, 253, 254, 270, 274, 277, 278, 298, 299, 314, 318, 330, 331, 345, 348, 396, 399, 415, 419, 421, 427, 430, 438, 444], "drawn": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 230, 266, 314, 318, 426, 437, 438], "set_provisional_n": [30, 31, 35, 40, 51, 52], "temporarili": [30, 31, 35, 40, 51, 52, 96, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 432, 441], "dest": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 215, 240, 242, 317], "to_numpi": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162], "transformed_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 237, 297, 415], "check_spec_encod": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_one_hot": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "hot": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 124, 125, 132, 134, 135, 138, 139, 145, 146, 148, 149, 151, 152, 155, 156, 158, 163, 164, 165, 166, 180, 181, 197, 263, 286, 287, 292, 310, 311, 315, 316, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 427], "categ_sampl": [30, 31, 35, 40, 53, 54, 59, 60], "onehot_sampl": [30, 31, 35, 40, 53, 54], "to_one_hot_spec": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "categoricalbox": [30, 31, 35, 40, 53, 54, 59, 60, 154], "type_check": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "update_mask": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "disabl": [30, 31, 32, 35, 39, 40, 44, 51, 52, 53, 54, 55, 59, 60, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 270, 299, 381, 424, 437, 438], "unmask": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "ts": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "num_bit": 32, "convert_to_binari": 32, "decim": 32, "1001": 32, "bit": [32, 205, 426, 427, 429, 437, 438, 441], "heavysid": 32, "binary_to_decim": 32, "add_modul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "child": [32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 425], "fn": [32, 39, 44, 55, 64, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 238, 246, 413, 414], "recurs": [32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 90, 91, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346, 428], "init_weight": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "m": [32, 39, 44, 51, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 197, 246, 252, 318, 425, 439], "fill_": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 425, 427], "net": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 257, 259, 262, 265, 280, 328, 329, 331, 337, 344, 348, 349, 350, 351, 411, 425, 439, 440, 443], "in_featur": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 253, 254, 256, 257, 258, 259, 265, 274, 279, 280, 282, 283, 306, 317, 325, 333, 335, 428, 430, 431], "out_featur": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 250, 253, 254, 256, 257, 258, 259, 264, 265, 269, 273, 274, 276, 279, 280, 282, 283, 306, 310, 317, 325, 333, 335, 419, 424, 427, 428, 430, 431, 434, 443], "bia": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 205, 215, 230, 235, 236, 237, 240, 242, 246, 249, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 280, 282, 283, 290, 317, 324, 326, 327, 331, 346, 351, 420, 424, 425, 426, 427, 438], "requires_grad": [32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 235, 237, 246, 289, 318, 331, 351], "bfloat16": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "datatyp": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 441], "member": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346, 383], "xdoctest": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 205, 215, 230, 235, 236, 237, 240, 242, 246, 317, 331, 346, 351], "buf": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "20l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346], "1l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346], "5l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346], "__call__": [32, 39, 44, 55, 64, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 318, 421], "doubl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 194, 196, 198, 215, 230, 236, 237, 240, 242, 246, 317, 333, 338, 343, 349, 352, 361, 424, 425, 426, 427, 444], "eval": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 244, 246, 251, 419, 424, 425, 426], "evalu": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 134, 140, 141, 145, 146, 153, 154, 161, 162, 237, 246, 251, 261, 277, 278, 286, 299, 349, 406, 407, 425, 426, 434], "dropout": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 251, 252, 267, 269, 271, 273, 274, 419, 427], "batchnorm": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 249], "comparison": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 246, 346, 424, 425], "extra_repr": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "recip": [32, 39, 44, 64, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 281, 284, 285, 288, 290, 293, 294, 296, 301, 309, 311, 313, 316, 321, 324], "get_buff": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "get_submodul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "qualifi": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "referenc": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "resolv": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "someth": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 144, 153, 154, 161, 162, 246, 418, 425, 426, 439, 444], "get_extra_st": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246], "set_extra_st": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246], "picklabl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246], "get_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "net_b": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "net_c": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "conv": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 253, 254, 425], "conv2d": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 254, 256, 257, 265, 279], "kernel_s": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 253, 254, 256, 257, 265, 279, 284, 425, 443], "diagram": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "degre": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 192, 246], "named_modul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "half": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317, 424], "ipu": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "strict": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 351, 428], "descend": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 351], "get_swap_module_params_on_convers": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 351], "persist": [32, 39, 42, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 205, 235, 237, 246, 331, 351], "preserv": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 317, 331, 351], "missing_kei": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 351], "unexpected_kei": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 351], "namedtupl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 246, 331, 351], "l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 267, 271, 362, 426, 439], "idx": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "mtia": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "named_buff": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "remove_dupl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346], "prepend": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 346, 428], "running_var": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "named_children": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "conv4": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "conv5": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "memo": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "named_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 246, 346], "register_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "removablehandl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "favor": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 426], "register_full_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_buff": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "running_mean": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "alongsid": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 433], "num_featur": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 249], "register_forward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 263, 292], "with_kwarg": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "always_cal": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_module_forward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "regardless": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 330, 345, 348], "register_forward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "invok": [32, 39, 44, 55, 65, 66, 68, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "And": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 431], "forward_pr": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_module_forward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "grad_input": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "grad_output": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "technic": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 425, 427, 428, 430], "caller": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_module_full_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_full_backward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "backward_pr": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_module_full_backward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_load_state_dict_post_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "incompatible_kei": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "thrown": [32, 39, 44, 55, 65, 66, 72, 73, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 441], "register_load_state_dict_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "local_metadata": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "error_msg": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "noqa": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "b950": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_modul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 421], "alia": [32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 98, 99, 100, 101, 107, 114, 116, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 347, 348, 349, 350, 351, 353, 354, 361, 367], "register_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_state_dict_post_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "register_state_dict_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "keep_var": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 351], "requires_grad_": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 428], "autograd": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 351], "freez": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 246], "finetun": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "gan": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "set_submodul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "share_memori": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 246, 424], "share_memory_": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246, 443], "destin": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 186, 194, 196, 198, 205, 235, 237, 240, 244, 246, 331, 351, 383], "averag": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 246, 290, 331, 339, 340, 351, 399, 424, 426], "shallow": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 351, 427], "pleas": [32, 39, 44, 55, 65, 66, 72, 77, 81, 126, 129, 132, 133, 140, 141, 153, 154, 155, 156, 161, 162, 184, 187, 205, 231, 235, 237, 246, 279, 280, 281, 331, 351, 418], "detach": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 246, 331, 342, 346, 351, 353, 363, 364, 365, 366, 424], "non_block": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317, 427], "memory_format": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "channels_last": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "unchang": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 197, 215, 230, 236, 237, 240, 242, 246, 266, 317, 383, 398, 424, 441], "tri": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317, 433], "pin": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "4d": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "ignore_w": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "1913": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "3420": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "5113": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "2325": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "torch_doctest_cuda1": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "gpu1": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "1914": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "5112": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "2324": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "float16": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 268, 272, 317], "cdoubl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "3741": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "j": [32, 39, 44, 55, 62, 65, 66, 72, 77, 104, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317, 421, 431], "2382": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "5593": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "4443": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "complex128": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "6122": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "1150": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 246, 317], "to_empti": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "dst_type": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "xpu": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "set_to_non": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 246], "upper": [33, 110, 210], "continuousbox": [33, 36, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 205, 208, 230, 238], "provision": 35, "descript": [36, 165, 183, 425, 426], "akin": 36, "unnam": 36, "compositespec": [36, 417, 439, 444], "constraint": [36, 147, 298, 426, 437, 438], "data_cl": 36, "tensorclass": [36, 45, 46, 47, 61, 63, 70, 84, 94, 98, 100, 120], "pixels_spec": 36, "observation_vector_spec": 36, "composite_spec": 36, "observation_vector": [36, 188, 424], "_nodefault": [36, 37, 48, 74], "is_empti": [36, 37, 48, 74, 439], "include_nest": [36, 37, 48, 74], "leaves_onli": [36, 37, 48, 74], "is_leaf": [36, 37, 48, 74], "_compositespecitemsview": [36, 37, 48, 74], "_compositespeckeysview": [36, 37, 48, 74], "reflect": [36, 37, 48, 74, 134, 155, 156, 178, 205, 243, 346, 404, 425, 426, 427, 438], "lock_": [36, 37, 48, 74], "propag": [36, 37, 48, 74, 328, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366, 426, 437, 438], "succeed": [36, 37, 48, 74, 205, 238], "pop": [36, 37, 48, 74], "keyerror": [36, 37, 48, 74, 237], "selected_kei": [36, 37, 48, 74, 224, 424], "unlock_": [36, 37, 48, 74], "_compositespecvaluesview": [36, 37, 48, 74], "multipli": [38, 140, 195, 251, 267, 271, 328, 329, 330, 331, 337, 345, 347, 348, 349, 351, 399, 424, 437], "calcul": [38, 71, 220, 267, 328, 330, 335, 345, 348, 350, 353], "reassign": 39, "reward2go": [39, 417], "reward_key_out": 39, "time_dim": [39, 363, 365, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380], "unrol": [39, 339, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380], "discount": [39, 55, 130, 220, 246, 329, 335, 338, 339, 341, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 420, 425, 426, 437, 438], "lastrewardtotraj": 39, "last_reward_to_traj": 39, "new_tensordict": 39, "is_tdmodule_compat": [39, 65, 77], "reset_out_kei": [39, 65, 77], "orign": [39, 65, 77], "mod": [39, 65, 77, 207, 252, 269, 273, 313, 318, 321, 427, 428, 434], "select_out_kei": [39, 65, 77, 328, 329, 331, 332, 336, 337, 344, 348, 349, 351, 353, 354, 428], "reset_parameters_recurs": [39, 65, 77, 346], "relu": [39, 65, 77, 147, 250, 260, 276, 327], "old_param": [39, 65, 77], "bork": [39, 65, 77], "dork": [39, 65, 77], "reset_paramet": [39, 65, 77, 281], "from_modul": [39, 65, 77, 263, 317, 320, 443], "rid": [39, 65, 77], "out_keys_sourc": [39, 65, 77], "rubric": [39, 65, 77, 211, 320], "revert": [39, 65, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 430, 441], "seq": [39, 65, 77, 252, 267, 269, 271, 273, 313, 427, 428, 434, 436], "z": [39, 65, 77, 268], "shift_kei": [41, 43, 56, 75], "is_full_kei": [41, 43, 56, 75], "is_ful": [41, 43, 56, 75], "tempfil": [41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 98, 107, 411, 424, 425, 427, 428, 432, 437, 440, 441], "register_save_hook": [41, 62, 67, 68, 69, 75, 78, 79, 107], "temporarydirectori": [41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 107, 424, 425, 427, 428, 432, 437, 440, 441], "tmpdir": [41, 62, 67, 68, 69, 75, 78, 79, 83, 107, 424, 425, 428, 437], "rb_load": [41, 62, 67, 68, 69, 78, 79, 107], "register_load_hook": [41, 62, 67, 68, 69, 78, 79, 107], "filesystem": [42, 441], "ted2nest": [43, 417], "tokens_respons": [45, 47, 140], "attention_mask": [45, 46, 61, 63, 64, 70, 71, 80, 83, 94, 140], "token_list": [45, 46, 47], "tokens_response_list": [45, 47], "log_prob": [45, 47, 71, 261, 277, 278, 286, 289, 299, 318, 331, 420], "text": [45, 46, 47, 64, 71, 80, 140, 141, 267, 268, 271, 272, 290, 426], "text_respons": [45, 140], "copy_exist": [45, 46, 47, 61, 63, 70, 84], "return_earli": [45, 46, 47, 61, 63, 70, 84], "share_non_tensor": [45, 46, 47, 61, 63, 70, 84], "memmap": [45, 46, 47, 61, 63, 70, 84, 98, 153, 161, 244, 383, 385, 398], "dataclass": [45, 46, 47, 61, 63, 70, 82, 84, 346], "from_tensordict": [45, 46, 47, 61, 63, 70, 84], "non_tensordict": [45, 46, 47, 61, 63, 70, 84], "getattr": [45, 46, 47, 61, 63, 70, 84], "load_memmap": [45, 46, 47, 61, 63, 70, 84], "load_": [45, 46, 47, 61, 63, 70, 84], "load_memmap_": [45, 46, 47, 61, 63, 70, 84], "fromkei": [45, 46, 47, 61, 63, 70, 84], "saved_td": [45, 46, 47, 61, 63, 70, 84], "td_load": [45, 46, 47, 61, 63, 70, 84], "fake": [45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 424, 425, 428], "_subclass": [45, 46, 47, 61, 63, 70, 84], "faketensormod": [45, 46, 47, 61, 63, 70, 84], "faketensor": [45, 46, 47, 61, 63, 70, 84], "from_flatten": [45, 46, 47, 61, 63, 70, 84], "attemptedli": [45, 46, 47, 61, 63, 70, 84], "existsok": [45, 46, 47, 61, 63, 70, 84, 98], "mimic": [45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162], "cross": [45, 46, 47, 61, 63, 70, 84, 250], "tensordictfutur": [45, 46, 47, 61, 63, 70, 84], "serialis": [45, 46, 47, 61, 63, 70, 84], "deepli": [45, 46, 47, 61, 63, 70, 84], "memmap_": [45, 46, 47, 61, 63, 70, 84, 244], "memmap_lik": [45, 46, 47, 61, 63, 70, 84], "contentless": [45, 46, 47, 61, 63, 70, 84], "1_000_000": [45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 107, 112, 424, 427, 437], "alloc": [45, 46, 47, 61, 63, 70, 84, 100, 261, 277, 278, 424], "memmap_refresh_": [45, 46, 47, 61, 63, 70, 84], "refresh": [45, 46, 47, 61, 63, 70, 84, 434, 437, 438], "saved_path": [45, 46, 47, 61, 63, 70, 84], "setattr": [45, 46, 47, 61, 63, 70, 84], "tent": [45, 46, 47, 61, 63, 70, 83, 84], "to_tensordict": [45, 46, 47, 61, 63, 70, 84, 427], "retain_non": [45, 46, 47, 61, 63, 70, 84], "discrard": [45, 46, 47, 61, 63, 70, 84], "switch": [45, 46, 47, 61, 63, 70, 84, 237, 270, 299, 381], "stackedcomposit": [48, 417], "tensordictmap": [50, 417], "observation_kei": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162], "excluded_kei": [50, 200], "consolid": [50, 77, 91, 100], "lazili": [50, 99, 280, 439], "from_tensordict_pair": [50, 77], "querymodul": [50, 77], "get_keys_from_env": 50, "cattensor": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 424, 436, 439, 444], "unsqueezetransform": [50, 187, 439, 441], "oracl": 50, "obs_kei": 50, "state_kei": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162], "reset_st": 50, "rollout0": 50, "rollout1": 50, "rollout1b": 50, "collaps": 50, "max_length": [50, 61, 63, 64, 80, 83, 84, 94, 195, 234, 428, 434], "valid_path": [50, 84], "assert_clos": [50, 269, 273], "subtre": [50, 84], "intersect": [50, 247], "Or": [50, 159, 160, 279], "rollout_from_path": [50, 84], "plot": [50, 84, 424, 426, 427, 437, 438, 439], "_nestedkei": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162], "return_nod": 50, "diverg": [50, 207, 269, 273, 314, 318, 340, 345], "endpoint": 50, "noth": [50, 141, 424, 426], "r0": [50, 424], "123": [50, 84], "392": [50, 84], "989": [50, 84], "809": [50, 84], "847": [50, 84], "r1": 50, "235": 50, "td_root": [50, 84], "node_data": [50, 84], "node_id": [50, 84], "nontensordata": [50, 57, 126, 151, 152, 195, 205, 234, 238, 381], "_parent": [50, 84], "nontensorstack": [50, 57, 99, 126, 141, 195, 205, 234, 238], "weakref": [50, 84], "0x716eeb78fbf0": 50, "0x": 50, "4341220243998689835": 50, "6745467818783115365": 50, "win": [50, 84], "to_str": [50, 84], "node_format_fn": [50, 84], "indent": [50, 84], "rollouts_data": [50, 84], "456": [50, 84], "359": [50, 84], "3094": [50, 84], "75": [50, 84, 112], "948": [50, 84], "68": [50, 84, 112], "9045": [50, 84], "rollout_data": [50, 84], "nvec": [51, 53], "remove_singleton": 51, "ax": [51, 282, 283, 437], "Not": [51, 52, 69, 124, 125, 138, 235, 269, 273], "neither": [51, 52, 53, 54, 163, 439], "use_regist": [53, 59], "mone_hot": [53, 54], "boxlist": [53, 54], "gamma": [55, 220, 246, 276, 328, 329, 331, 332, 333, 335, 337, 338, 339, 341, 344, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 411, 420, 424, 425, 426, 437, 438, 443], "sutton": [55, 420, 437, 438], "1988": 55, "tempor": [55, 269, 273, 276, 364, 365, 370, 371], "44": [55, 112], "ahead": [55, 246, 444], "bias": [55, 267, 268, 271, 272, 324, 420, 424], "mitig": [55, 187], "multisteptransform": [55, 417], "99": [55, 220, 244, 276, 341, 356, 362, 369, 411, 424, 425, 426, 428, 431, 434, 437, 438, 443], "nontermin": 55, "original_reward": 55, "newli": [55, 126, 129, 133, 140, 141, 153, 154, 161, 162], "OR": 55, "row": [56, 76, 138, 139, 208], "example_data": [57, 140, 195], "conform": 57, "templat": [57, 384], "randomli": [57, 111, 162, 210, 211, 230, 266, 314, 318, 430, 437, 438, 439, 441], "unidimension": 59, "action_valu": [59, 262, 263, 292, 310, 311, 315, 316, 331, 337, 346, 361, 419, 427, 428, 430, 434], "keepdim": 59, "chosen_action_valu": [59, 291, 292, 300, 315, 316, 361, 419, 427, 430], "priori": 59, "uniqu": [59, 84, 112, 113, 141, 145, 146, 187, 199, 229, 230, 231, 235, 313, 390, 432, 441], "tensor_spec": [59, 157, 179, 181, 336, 337, 348, 350], "one_hot_sampl": [59, 60], "chosen_data": [61, 94], "rewarddata": [61, 94, 417], "rejected_data": [61, 94], "from_dataset": [61, 63, 94], "dataset_nam": [61, 63, 71, 83, 94, 150], "550": [61, 63, 71, 83, 94, 112, 113], "root_dir": [61, 63, 83, 94], "from_disk": [61, 63, 83, 94], "carperai": [61, 63, 71, 83], "openai_summarize_comparison": [61, 63, 83], "load_from_disk": [61, 63, 83, 94], "load_dataset": [61, 63, 83, 94], "92534": 61, "input_id": [61, 63, 64, 70, 71, 80, 83, 94, 140, 141], "end_scor": [61, 70, 71, 94], "sub_data": [61, 63], "alpha": [62, 78, 104, 105, 253, 254, 256, 257, 258, 259, 265, 279, 329, 331, 337, 347, 349, 351, 353, 424, 441, 443], "ep": [62, 78, 104, 105, 211, 244, 249, 290, 330, 352, 399, 420, 424, 425, 427, 428, 431, 434], "1e": [62, 78, 104, 105, 211, 244, 249, 261, 264, 297, 424, 425, 426, 438], "08": [62, 78, 104, 105], "pin_memori": [62, 69, 78, 79, 214, 424, 443], "schaul": [62, 104, 105], "quan": [62, 104, 105], "antonogl": [62, 104, 105], "silver": [62, 104, 105], "2015": [62, 104, 105], "ab": [62, 104, 105, 124, 125, 127, 128, 138, 139, 145, 146, 148, 149, 158, 165, 166, 186, 215, 240, 244, 249, 255, 260, 264, 265, 271, 276, 283, 284, 285, 291, 293, 294, 300, 328, 329, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 351, 440], "1511": [62, 104, 105, 265], "05952": [62, 104, 105], "expon": [62, 78, 104, 105], "\u03b1": [62, 78, 104, 105], "delta": [62, 78, 104, 105, 267, 271, 297, 314, 318, 417, 420, 437], "1_000": [62, 69, 78, 79, 437, 441], "mini": [62, 69, 78, 79, 438], "incompat": [62, 69, 78, 79, 350, 441], "drop_last": [62, 69, 78, 79, 111, 113], "notion": [62, 69, 78, 79, 289], "caution": [62, 69, 78, 79, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 444], "codebas": [62, 69, 78, 79, 439], "return_info": [62, 67, 68, 69, 78, 79, 104, 105, 107, 441], "tensordictprioritizedreplaybuff": [62, 417, 443], "simplifi": [62, 175, 430, 439, 441], "_weight": [62, 78, 104, 105], "update_prior": [62, 104, 105, 398, 421, 425, 441, 443], "36278465": 62, "invert": [62, 67, 68, 69, 78, 79, 107, 326, 426], "as_remot": [62, 67, 68, 69, 78, 79, 107], "cl": [62, 67, 68, 69, 78, 79, 107, 425], "quantiti": [62, 67, 68, 69, 78, 79, 107], "reserv": [62, 67, 68, 69, 78, 79, 107, 421], "default_remote_class_config": [62, 67, 68, 69, 78, 79, 107], "tqdm": [62, 67, 68, 69, 78, 79, 107, 401, 424, 426, 427, 437, 438, 439], "randomsampl": [62, 67, 68, 69, 78, 79, 107, 424, 437], "td_error": [62, 67, 68, 69, 78, 79, 107, 331, 332, 333, 335, 336, 337, 338, 344, 346, 349, 351, 353, 354, 361, 424, 441, 443], "update_tensordict_prior": [62, 67, 68, 69, 78, 79, 107, 424, 441, 443], "insert_transform": [62, 67, 68, 69, 78, 79, 107, 182, 237], "insert": [62, 67, 68, 69, 78, 79, 97, 107, 108, 118, 119, 122, 123, 182, 187, 191, 227, 237, 239], "set_sampl": [62, 67, 68, 69, 78, 79, 107], "set_storag": [62, 67, 68, 69, 78, 79, 107], "set_writ": [62, 67, 68, 69, 78, 79, 107], "write_count": [62, 67, 68, 69, 78, 79, 107], "prompt_rindex": [63, 64, 71], "promptdatatldr": 63, "116722": 63, "prompt": [64, 71, 140, 195], "return_tensordict": [64, 80], "tensodict": [64, 80], "valid_sampl": 64, "eough": 64, "toknen": 64, "meet": 64, "criterion": 64, "autotoken": [64, 80, 83], "from_pretrain": [64, 71, 80, 141], "gpt2": [64, 71, 80, 83, 141, 255, 260, 288], "pad_token": [64, 80], "eos_token": 64, "enough": [64, 441], "inde": [64, 197, 426, 428, 439], "index_kei": [65, 77], "hash_kei": 65, "_hash": 65, "hash_modul": [65, 72, 77], "siphash": [65, 66, 77, 141], "hash_to_int": 65, "hashtoint": 65, "query_modul": [65, 77], "key1": [65, 77, 188, 227, 392, 400, 443], "key2": [65, 77, 188, 227, 392, 400, 443], "write_hash": 65, "n_compon": 66, "dtype_cast": 66, "as_tensor": [66, 72, 428], "init_method": 66, "emb": [66, 427], "sklearn": [66, 150], "byte": [66, 72, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246], "builtin": [66, 72], "pythonhashse": [66, 72], "todo": 66, "optiona": 67, "transform_factori": [67, 69, 78, 79], "asyncio": 67, "ray_buff": 67, "object_store_memori": 67, "600": [67, 71], "await": 67, "sleep": [67, 130, 444], "invoc": 68, "friendli": [68, 424], "include_info": [68, 78, 79], "storagecheckpointerbas": [69, 114], "roundrobinwrit": 69, "_pytre": [69, 441], "tree_map": [69, 441], "assert0": [69, 441], "ref_model": 71, "reward_model": [71, 323], "max_new_token": 71, "score_clip": 71, "kl_schedul": 71, "klcontrollerbas": 71, "num_step": [71, 428], "causal": 71, "sentenc": 71, "frozen": [71, 207, 244], "llm": [71, 83, 94, 140, 195], "gpt2rewardmodel": 71, "get_dataload": [71, 417], "promptdata": [71, 417], "gpt2lmheadmodel": 71, "dl": [71, 195], "block_siz": [71, 94], "tensorclass_typ": [71, 94], "openai_summarize_tldr": 71, "config_class": 71, "model_path": 71, "rollout_from_model": 71, "rollout_from_data": 71, "reward_kl": [71, 207], "reward_raw": 71, "sample_log_prob": [71, 207, 306, 307, 308, 314, 318, 320, 348], "create_rollout_td": 71, "log_ratio": 71, "replic": [71, 420], "rindex": 71, "eo": 71, "generation_config": 71, "generationconfig": 71, "ti": [71, 372, 373, 374, 375, 377, 378, 379, 380, 425], "log_probs_gen": 71, "logprobs_of_label": 71, "hash_a": 72, "4669941682990263259": 72, "3778166555168484291": 72, "9122128731510687521": 72, "hash_b": 72, "heterogen": [73, 74, 99, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 167, 279, 280, 424, 425], "220": 75, "resembl": 77, "tensormap": 77, "collat": [77, 107], "subtyp": 77, "embedding_storag": 77, "tensor_dict_storag": 77, "new_index": 77, "key3": 77, "retrieve_valu": 77, "storage_constructor": 77, "write_fn": 77, "tensordictstorag": 77, "thumb": [77, 153, 426], "lazydynamicstorag": 77, "fixedstorag": 77, "randomprojectionhash": 77, "priority_kei": [78, 79, 104, 331, 333, 336, 337, 338, 344, 346, 349, 351, 353, 354, 361, 441, 443], "reduct": [78, 104, 105, 118, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 347, 348, 349, 350, 351, 353, 354], "prioritizedreplaybuff": [78, 417, 443], "min": [78, 104, 105, 118, 290, 329, 330, 331, 337, 347, 349, 351, 425, 426], "median": [78, 104, 105, 118, 138, 139, 180, 314, 318], "huggingfac": [80, 312], "co": [80, 199, 439], "pad_trunc": 80, "am": 80, "me": 80, "reassur": 80, "ok": 80, "primarili": [82, 216, 430], "educ": 82, "guess": 82, "knowledg": [82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 431, 433], "tokenizer_fn": 83, "tensordicttoken": [83, 417], "pre_tokenization_hook": 83, "valid_s": 83, "tokenizer_class": 83, "tokenizer_model_nam": 83, "tokein": 83, "elementwis": 83, "vocabulari": [83, 140, 141, 234], "loader": [83, 426], "185068": 83, "dataset_to_tensordict": 83, "data_dir": 83, "batch_dim": [83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 415], "valid_mask_kei": 83, "batch_dimens": 83, "filder": 83, "from_dict": [83, 195], "data_memmap": 83, "ref": 84, "branching_act": 84, "prev_act": 84, "edg": [84, 428], "travers": 84, "breadth": 84, "bf": 84, "fully_expand": 84, "get_vertex_by_hash": 84, "get_vertex_by_id": 84, "is_termin": 84, "make_nod": 84, "node_observ": 84, "bag": 84, "num_children": 84, "num_vertic": 84, "count_repeat": 84, "recustruct": 84, "scope": [84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 428, 444], "plotli": 84, "make_label": 84, "visual": [84, 215, 240, 242, 383, 426, 437, 439], "notimplementederror": [84, 424], "unsupport": 84, "selected_act": 84, "mctsforest": [84, 141, 417], "key_typ": 84, "liter": [84, 140, 195, 304], "recurse_through_entri": 91, "recurse_through_stack": 91, "infinit": [94, 145, 146, 165, 166, 432, 441], "block": [94, 97, 123, 419, 424, 427, 428, 431, 432, 437, 441], "pairwisedataset": [94, 417], "256": [94, 145, 146, 205, 260, 425, 426, 428, 437, 438], "checkpoint_fil": 96, "h5": 96, "h5_kwarg": 96, "iff": 96, "suffix": [96, 396], "h5py": 96, "create_dataset": 96, "consequ": [96, 271, 432], "immut": [97, 126, 129, 133, 140, 141, 153, 161, 218, 237], "piec": [97, 108, 119, 122, 123, 424, 425, 426, 433, 437, 438, 439, 441], "scratch_dir": [98, 424, 425, 427, 432, 437, 440, 441], "sent": [98, 100, 120, 244], "mistak": [98, 100, 120], "overewritten": 98, "tensorstoragecheckpoint": 98, "pathlib": [98, 401, 428], "main_ckpt_dir": 98, "rb_memmap": 98, "10_000_000": 98, "myclass": [98, 100, 120], "foo": [98, 100, 120, 309, 441, 444], "bar": [98, 100, 120, 309, 394, 395, 396, 401, 421, 425], "attach": [98, 99, 100, 101, 114, 116, 120, 425], "entiti": [98, 99, 100, 101, 114, 116, 120], "lazystacktensordict": 99, "heterougen": 99, "linearli": 99, "densifi": 99, "unlimit": [99, 101], "st": 99, "expans": [100, 346], "zero_": [100, 120, 172], "liststoag": 102, "max_capac": [104, 105, 424, 441], "max_priority_within_buff": [104, 105], "data_0": 104, "data_1": 104, "smoothen": 104, "tdrb": 104, "pack": [104, 267, 271, 426, 429, 444], "nd": [104, 105], "1d": [104, 105, 112, 113, 118], "sum_tre": [104, 105], "min_tre": [104, 105], "slice_len": [105, 112, 113, 383], "end_kei": [105, 112, 113], "cache_valu": [105, 112, 113], "closer": [105, 443], "readili": [105, 112, 113, 318], "conjunct": [105, 112, 113, 425], "Will": [105, 112, 148, 383], "buffer0": [105, 112], "immutablewrit": [105, 112], "buffer1": [105, 112], "other_sampl": [105, 112], "shorter": [105, 112, 113], "short": [105, 112, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 167, 271, 272, 425, 426, 429, 430, 438, 441], "Be": [105, 112, 113], "fewer": [105, 112], "tolist": 105, "120110917137936e": 105, "06": [105, 261, 297], "storageensembl": [107, 110], "samplerensembl": 107, "writerensembl": [107, 116], "sample_from_al": [107, 110], "num_buffer_sampl": [107, 110], "ensembl": [107, 110, 116, 117, 123, 317, 349], "forbidden": 107, "0x13a2ef430": 107, "0x13a2f9310": 107, "interpol": [107, 219, 425, 428], "interpolationmod": 107, "bilinear": [107, 219], "0x13a2f9220": 107, "0x13a2f9f70": 107, "0x13a2d9b50": 107, "0x13a2f95b0": 107, "0x128648260": 107, "roundrobin": [108, 119], "buffer_id": [110, 116], "shuffl": [111, 113, 438], "incomplet": [111, 113], "fresh": 111, "haven": [111, 440], "draw": [111, 266], "use_gpu": [112, 113], "slicesamplerwithoutreplac": [112, 441], "acceler": [112, 113, 437, 438], "significantli": [112, 113, 187, 420, 424, 425, 431, 438], "reconstruct": [112, 113, 340, 424, 444], "ep_1": [112, 113], "ep_2": [112, 113], "73": 112, "74": 112, "76": 112, "77": 112, "42": [112, 274, 289, 328, 329, 331, 332, 336, 344, 351], "43": 112, "45": 112, "67": [112, 436], "69": 112, "70": 112, "71": 112, "27": [112, 113, 124, 125, 153, 161], "28": [112, 113, 279], "31": [112, 138, 139], "80": [112, 124, 125], "82": 112, "83": 112, "84": [112, 219, 427, 428], "78": 112, "79": 112, "320": [112, 113, 127, 128], "700": [112, 113], "dataid": [112, 113], "available_dataset": [112, 113], "counter": [113, 235, 313, 394, 421, 428], "23": [113, 247], "request": [113, 184, 216], "51": 113, "__len__": 114, "rank_kei": 118, "rank": [118, 250], "samplerwithoutreplac": [118, 426, 438, 441], "get_insert_index": 118, "googl": [124, 125, 145, 146, 151, 152, 249, 426, 427, 437, 438], "convers": [124, 125, 138, 139, 140, 175, 420], "2106": [124, 125, 334, 353], "13281": [124, 125], "categorical_action_encod": [124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 175, 428], "frame_skip": [124, 125, 127, 128, 132, 133, 134, 135, 138, 139, 142, 143, 148, 149, 158, 203, 394, 396, 404, 421, 424, 425, 426, 443], "allow_done_after_reset": [124, 125, 127, 128, 129, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164], "toler": [124, 125, 127, 128, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164, 261, 297], "is_avail": [124, 125, 424, 425, 426, 427, 437, 438, 440], "ant": [124, 125, 126, 129, 133, 136, 140, 141, 153, 154, 161, 162, 440], "87": [124, 125], "acrobot": [124, 125, 127, 128, 444], "advant": [124, 125, 138, 139], "timer": [124, 125, 138, 139], "timeit": [124, 125, 138, 139, 428], "310": [124, 125], "ms": [124, 125, 138, 139], "268": [124, 125], "433": [124, 125], "213": [124, 125], "8605": [124, 125], "pipelineenv": 125, "get_environ": 125, "san": 126, "fen": [126, 151, 152], "pgn": 126, "legal": 126, "board": [126, 162], "include_san": 126, "algebra": [126, 439], "notat": 126, "include_fen": 126, "forsyth": 126, "edward": 126, "include_pgn": 126, "portabl": [126, 433], "include_legal_mov": 126, "include_hash": 126, "mask_act": 126, "subset": [126, 439, 440], "29275": 126, "rnbqkbnr": [126, 151, 152], "pppppppp": [126, 151, 152], "kqkq": [126, 151, 152], "legal_mov": 126, "219": 126, "5p2": 126, "ppppp1pp": 126, "event": [126, 277, 278, 286, 372, 373, 374, 375, 377, 378, 379, 380, 441], "white": 126, "f4": 126, "96": 126, "kq": 126, "5n2": 126, "rnbqkb1r": 126, "nf3": 126, "na6": 126, "c4": 126, "f6": 126, "h4": 126, "rb8": 126, "na3": 126, "ra": 126, "sort": [126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 290], "another_act": [126, 129, 133, 140, 141, 153, 154, 161, 162], "discretebox": [126, 129, 133, 140, 141, 153, 154, 161, 162], "mutabl": [126, 129, 133, 140, 141, 153, 154, 161, 162], "action_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162, 426, 438], "had": [126, 129, 133, 140, 141, 153, 154, 161, 162, 430, 432], "all_act": [126, 129, 133, 140, 141, 153, 154, 161, 162], "any_don": [126, 129, 133, 140, 141, 153, 154, 161, 162], "loc": [126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 211, 222, 244, 270, 298, 299, 306, 307, 308, 314, 318, 320, 328, 329, 331, 344, 348, 349, 350, 351, 405, 415, 419, 424, 425, 426, 427, 430, 438, 443], "_callabletransform": [126, 129, 133, 140, 141, 153, 154, 161, 162], "auto_specs_": [126, 129, 133, 140, 141, 153, 154, 161, 162], "action_spac": [126, 129, 133, 140, 141, 153, 154, 161, 162, 199, 263, 292, 310, 311, 315, 316, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 427, 428, 430, 434], "check_dtyp": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167], "discrep": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 328, 330, 332, 333, 345, 348, 350, 361], "broken": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167], "rng": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 439], "done_keys_group": [126, 129, 133, 140, 141, 153, 154, 161, 162], "another_don": [126, 129, 133, 140, 141, 153, 154, 161, 162], "done_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "empty_cach": [126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "fake_tensordict": [126, 129, 133, 140, 141, 153, 154, 161, 162, 425, 428], "envnam": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_action_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162, 437, 438], "full_done_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_observation_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_reward_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "pipeline_st": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_state_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "get_legal_mov": 126, "uci": 126, "input_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "is_spec_lock": [126, 129, 133, 140, 141, 153, 154, 161, 162], "maybe_reset": [126, 129, 133, 140, 141, 153, 154, 161, 162], "speak": [126, 129, 133, 140, 141, 153, 154, 161, 162, 192, 318, 424], "observation_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "output_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "register_gym": [126, 129, 133, 140, 141, 153, 154, 161, 162, 429], "entry_point": [126, 129, 133, 140, 141, 153, 154, 161, 162], "info_kei": [126, 129, 133, 140, 141, 153, 154, 161, 162], "reward_threshold": [126, 129, 133, 140, 141, 153, 154, 161, 162], "nondeterminist": [126, 129, 133, 140, 141, 153, 154, 161, 162], "max_episode_step": [126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162], "order_enforc": [126, 129, 133, 140, 141, 153, 154, 161, 162], "autoreset": [126, 129, 133, 140, 141, 153, 154, 161, 162], "disable_env_check": [126, 129, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162], "apply_api_compat": [126, 129, 133, 140, 141, 153, 154, 161, 162], "nasium": [126, 129, 133, 140, 141, 153, 154, 161, 162, 175], "dmcontrolenv": [126, 129, 133, 140, 141, 153, 154, 161, 162, 383, 417, 424, 429, 436, 444], "dmc": [126, 129, 133, 140, 141, 153, 154, 161, 162], "cheetah": [126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 383, 424], "removeemptyspec": [126, 129, 133, 140, 141, 153, 154, 161, 162], "threshold": [126, 129, 133, 140, 141, 153, 154, 161, 162, 266, 329, 330, 426], "learnt": [126, 129, 133, 140, 141, 153, 154, 161, 162, 411], "checker": [126, 129, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162], "stepapicompat": [126, 129, 133, 140, 141, 153, 154, 161, 162], "deem": [126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166], "task_nam": [126, 127, 129, 133, 140, 141, 153, 154, 161, 162], "envgym": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0855": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0215": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0881": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0412": [126, 129, 133, 140, 141, 153, 154, 161, 162], "1101": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0080": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0254": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0424": [126, 129, 133, 140, 141, 153, 154, 161, 162], "veloc": [126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 187, 437, 438, 439, 444], "9609e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "9776e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "04": [126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 232], "6347e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "3842e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5338e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "3064e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0381e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "6656e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05": [126, 129, 133, 140, 141, 153, 154, 161, 162, 232, 249, 439], "0204e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0833": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0275": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0612": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0770": [126, 129, 133, 140, 141, 153, 154, 161, 162], "1256": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0082": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0186": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0476": [126, 129, 133, 140, 141, 153, 154, 161, 162], "2221": [126, 129, 133, 140, 141, 153, 154, 161, 162], "2256": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5930": [126, 129, 133, 140, 141, 153, 154, 161, 162], "6937": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5865": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5479": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0187": [126, 129, 133, 140, 141, 153, 154, 161, 162], "6825": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5224": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0018": [126, 129, 133, 140, 141, 153, 154, 161, 162], "1005": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0335": [126, 129, 133, 140, 141, 153, 154, 161, 162, 192], "0268": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0133": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0627": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0074": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0488": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0353": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0075": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0069": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0098": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0058": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0033": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0157": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0004": [126, 129, 133, 140, 141, 153, 154, 161, 162, 232], "0381": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0452": [126, 129, 133, 140, 141, 153, 154, 161, 162], "11355747": [126, 129, 133, 140, 141, 153, 154, 161, 162], "04257728": [126, 129, 133, 140, 141, 153, 154, 161, 162], "00408397": [126, 129, 133, 140, 141, 153, 154, 161, 162], "04155852": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0389733": [126, 129, 133, 140, 141, 153, 154, 161, 162], "01409826": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0978704": [126, 129, 133, 140, 141, 153, 154, 161, 162], "08808327": [126, 129, 133, 140, 141, 153, 154, 161, 162], "03970837": [126, 129, 133, 140, 141, 153, 154, 161, 162], "00535434": [126, 129, 133, 140, 141, 153, 154, 161, 162], "02353762": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05116226": [126, 129, 133, 140, 141, 153, 154, 161, 162], "02788907": [126, 129, 133, 140, 141, 153, 154, 161, 162], "06848346": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05154399": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0371798": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05128025": [126, 129, 133, 140, 141, 153, 154, 161, 162], "dydact": [126, 129, 133, 140, 141, 153, 154, 161, 162], "gym_env": [126, 129, 133, 140, 141, 153, 154, 161, 162, 443], "reset_kei": [126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 223, 229, 230, 231, 437], "multitask": [126, 129, 133, 140, 141, 153, 154, 161, 162], "multiag": [126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 179, 280, 291, 300, 330, 345, 348, 361], "another_reward": [126, 129, 133, 140, 141, 153, 154, 161, 162], "reward_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "auto_cast_to_devic": [126, 129, 133, 140, 141, 153, 154, 161, 162, 438], "soon": [126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162], "__sort": [126, 129, 133, 140, 141, 153, 154, 161, 162], "as__": [126, 129, 133, 140, 141, 153, 154, 161, 162], "argmaxmodul": [126, 129, 133, 140, 141, 153, 154, 161, 162], "argmax": [126, 129, 133, 140, 141, 153, 154, 161, 162, 263, 292, 311, 316, 428, 430], "n_act": [126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 431], "ourselv": [126, 129, 133, 140, 141, 153, 154, 161, 162, 426, 444], "emul": [126, 129, 133, 140, 141, 153, 154, 161, 162], "epoch": [126, 129, 133, 140, 141, 153, 154, 161, 162, 401, 426, 437, 438], "input_td": [126, 129, 133, 140, 141, 153, 154, 161, 162], "rollout_td": [126, 129, 133, 140, 141, 153, 154, 161, 162], "state_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "prevail": [126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 188, 223], "next_tensordict": [126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 184, 188, 200, 201, 202, 207, 214, 217, 218, 224, 227, 240, 244], "precomput": [126, 129, 133, 140, 141, 153, 154, 161, 162], "_stepmdp": [126, 129, 133, 140, 141, 153, 154, 161, 162, 178], "exclude_act": [126, 129, 133, 140, 141, 153, 154, 161, 162, 178], "reset_data": [126, 129, 133, 140, 141, 153, 154, 161, 162, 444], "dm_control": [127, 128, 424, 436, 444], "2006": [127, 128, 329, 335], "12983": [127, 128], "240": [127, 128, 443], "swingup": [127, 128, 444], "swingup_spars": [127, 128], "ball_in_cup": [127, 128], "catch": [127, 128, 428], "balance_spars": [127, 128], "three_pol": [127, 128], "two_pol": [127, 128], "finger": [127, 128], "turn_easi": [127, 128], "turn_hard": [127, 128], "fish": [127, 128], "upright": [127, 128, 425], "swim": [127, 128], "hopper": [127, 128], "hop": [127, 128], "humanoid": [127, 128, 153, 161, 436], "walk": [127, 128, 153, 161, 425, 436], "run_pure_st": [127, 128], "bring_bal": [127, 128], "bring_peg": [127, 128], "insert_bal": [127, 128], "insert_peg": [127, 128], "point_mass": [127, 128], "reacher": [127, 128], "swimmer": [127, 128], "swimmer6": [127, 128], "swimmer15": [127, 128], "walker": [127, 128], "dog": [127, 128], "trot": [127, 128], "humanoid_cmu": [127, 128], "lqr": [127, 128], "lqr_2_1": [127, 128], "lqr_6_2": [127, 128], "quadrup": [127, 128], "escap": [127, 128], "stacker": [127, 128], "stack_2": [127, 128], "stack_4": [127, 128], "deviceless": 129, "run_type_check": [129, 147], "hint": 129, "counterenv": 129, "creator": [130, 406, 407, 413, 414, 415], "substitut": [130, 229, 244, 430], "vecnorm": [130, 415], "env_creat": [130, 424], "test_env1": 130, "_td": [130, 339], "observation_count": [130, 444], "test_env2": 130, "ps": 130, "p1": 130, "p2": 130, "9934": 130, "make_vari": [130, 235], "variant": [130, 235, 251, 419], "trajcount": 130, "env_creator_pendulum": 130, "env_creator_cartpol": 130, "env_str": 131, "device_map": 131, "registri": [132, 163], "asyncvectorenv": 132, "pixel_observ": [132, 134, 135, 158], "pixelobservationwrapp": [132, 134, 135, 158], "adventur": [132, 134], "airraid": [132, 134, 444], "alien": [132, 134], "time_limit": 132, "timelimit": [132, 145, 146, 165, 166], "default_info_dict_read": [132, 133, 134, 153], "reader": [132, 133, 134, 153, 425], "set_info_dict_read": [132, 133, 134, 153, 429], "info_dict": [132, 133, 134, 153], "gymlikeenv": [132, 134, 417], "auto_register_info_dict": [132, 133, 134, 153], "multibinari": [132, 134], "multidiscret": [132, 134], "rag": [132, 134], "gym_conversion_exampl": [132, 134], "info_dict_read": [133, 153], "ignore_priv": 133, "baseinfodictread": 133, "tensordictprim": [133, 153, 252, 269, 273, 325, 419, 427], "succe": [133, 153], "underscor": 133, "primer": [133, 140, 195, 230, 252, 269, 273, 325, 427], "halfcheetah": [133, 153, 180, 219, 424, 443], "reward_ctrl": [133, 153], "reward_run": [133, 153], "x_posit": [133, 153], "x_veloc": [133, 153], "raise_if_clos": 133, "read_act": 133, "read_don": 133, "nonsens": 133, "fallback": 133, "read_ob": 133, "dictat": [133, 208, 314, 318, 348, 424, 439], "read_reward": 133, "hoc": [133, 153, 430], "dict_read": 133, "my_info_kei": 133, "some_env": 133, "vecenv": 134, "vectorenv": 134, "convert_actions_to_numpi": 134, "secur": 135, "habitat3": 135, "ai": [135, 440], "habitatrenderpick": 135, "isaacgym": [136, 137], "isaacgymwrapp": [136, 417], "isaacgymenv": [137, 417], "webpag": 137, "isaac": 137, "essenc": [137, 429], "instadeepai": [138, 139], "2306": [138, 139], "09884": [138, 139], "snake": [138, 139], "grid": [138, 139, 383], "bodi": [138, 139], "body_st": [138, 139], "fruit_posit": [138, 139], "col": [138, 139], "head_posit": [138, 139], "tail": [138, 139], "game2048": [138, 139], "maze": [138, 139], "cleaner": [138, 139], "cvrp": [138, 139], "multicvrp": [138, 139], "minesweep": [138, 139], "rubikscub": [138, 139], "knapsack": [138, 139], "sudoku": [138, 139], "tsp": [138, 139], "connector": [138, 139], "v2": [138, 139, 159, 160, 357, 372, 373, 374, 375, 377, 378, 379, 380, 427], "mmst": [138, 139], "graphcolor": [138, 139], "partli": [138, 139], "scrambl": [138, 139], "robotwarehous": [138, 139], "tetri": [138, 139], "binpack": [138, 139], "jobshop": [138, 139], "0x1fca91910": 138, "122": [138, 139, 444], "0x1ff9baee0": 138, "134": [138, 139], "0x1ff9ba7c0": 138, "172": [138, 139], "jit": 139, "eager": 139, "tdreset": [139, 246, 436], "whichev": 139, "drastic": [139, 153, 441], "histori": 140, "cot": 140, "from_dataload": [140, 195], "token_kei": 140, "str2str": [140, 195], "str_kei": 140, "attention_kei": 140, "assign_reward": 140, "vocab_s": [140, 141], "no_stack": 140, "has_attent": 140, "assign_don": 140, "batchless": 140, "dataloadingprim": [140, 230], "pretrainedtokenizerbas": [140, 234], "as_llm_data": 140, "data_kei": [140, 195], "data_spec": [140, 195], "stack_method": [140, 195], "as_nested_tensor": [140, 195], "as_padded_tensor": [140, 195], "group_repeat": [140, 195], "bert": [140, 234], "uncas": [140, 234], "tokens_in": 140, "tokens_out": 140, "grpo": [140, 195], "overview": [141, 426, 428, 431, 437, 438, 443], "hashing_modul": 141, "text_output": 141, "decod": [141, 173, 284], "batch_decod": 141, "text_kei": 141, "gpt2token": 141, "make_tensordict": 141, "mo": [142, 143], "minecart": [142, 143], "mo_gym": [143, 208], "qualnam": 144, "neural": [144, 155, 156, 253, 254, 287, 289, 295, 317, 419, 425, 426, 427, 430, 437, 438, 439, 444], "group_map": [144, 145, 146, 151, 152, 155, 156, 163, 164, 165, 166, 168, 437], "constructiuon": [144, 155, 156], "premad": [144, 145, 146, 155, 156, 165, 166, 361], "all_in_one_group": [144, 151, 152, 168], "agent_0": [144, 155, 156, 163, 168, 227], "agent_1": [144, 155, 156, 163, 168, 227], "agent_2": [144, 155, 156, 163, 168], "agent_3": [144, 163], "one_group_per_ag": [144, 155, 156], "meltingpot": [145, 146], "2211": [145, 146], "13746": [145, 146], "melt": [145, 146], "pot": [145, 146], "novel": [145, 146, 431], "social": [145, 146], "familiar": [145, 146, 425, 438, 444], "unfamiliar": [145, 146], "broad": [145, 146], "cooper": [145, 146, 437, 438], "decept": [145, 146], "reciproc": [145, 146], "stubborn": [145, 146], "substrat": [145, 146], "ml_collect": 145, "config_dict": 145, "configdict": 145, "categorical_act": [145, 146, 151, 152, 155, 156, 159, 160, 163, 164, 165, 166], "marlgroupmaptyp": [145, 146, 151, 152, 155, 156, 163, 164, 165, 166, 168, 417, 437], "agent_nam": [145, 146, 165, 166, 168], "agent_names_to_indices_map": [145, 146, 165, 166], "env_torchrl": [145, 146], "commons_harvest__open": [145, 146], "rgb": [145, 146], "144": [145, 146], "192": [145, 146], "collective_reward": [145, 146], "ready_to_shoot": [145, 146], "88": [145, 146, 159, 160], "substrate_config": 146, "get_config": 146, "mp_env": 146, "build_from_config": 146, "default_player_rol": 146, "mymbenv": [147, 250, 276], "world_model": [147, 250, 276, 340], "hidden_observ": [147, 250, 276], "mlp": [147, 250, 253, 254, 256, 257, 258, 259, 265, 269, 273, 276, 280, 281, 306, 310, 325, 333, 335, 419, 425, 428, 430, 431, 434, 436, 440, 443], "worldmodelwrapp": [147, 250, 276], "activation_class": [147, 250, 253, 254, 256, 257, 258, 259, 264, 265, 274, 276, 279, 280, 425, 430, 437, 438, 443], "activate_last_lay": [147, 250, 259, 274, 276], "sail": [148, 149], "sg": [148, 149], "2206": [148, 149], "10558": [148, 149], "readthedoc": [148, 151, 152], "en": [148, 151, 152], "python_interfac": 148, "envpoolmixin": 149, "env_bas": 149, "task_id": 149, "env_typ": 149, "gym_reset_return_info": 149, "envpool_env": 149, "www": [150, 277, 278], "fetch_openml": 150, "adult_num": 150, "adult_onehot": 150, "mushroom_num": 150, "mushroom_onehot": 150, "covertyp": 150, "shuttl": 150, "magic": [150, 428, 429], "106": 150, "openspiel": [151, 152], "open_spiel": [151, 152], "game_str": 151, "return_st": [151, 152, 155, 156], "4672": [151, 152], "current_play": [151, 152], "674": 151, "2048": [151, 152], "add_nois": [151, 152], "amazon": [151, 152], "backgammon": [151, 152], "restor": [151, 152], "td_restor": [151, 152], "pyspiel": 152, "load_gam": 152, "new_initial_st": 152, "3009": 152, "my_env_fun": [153, 161], "custom_attribute_list": [153, 161], "custom_attribut": [153, 161], "custom_method_list": [153, 161], "custom_method": [153, 161], "deploi": [153, 161, 184, 428], "slight": [153, 161, 425], "share_individual_td": [153, 161], "shared_memori": [153, 161], "policy_proof": [153, 161], "ll": [153, 161, 267, 268, 271, 272, 424, 425, 426, 427, 429, 430, 431, 432, 434, 438, 444], "hidden": [153, 161, 186, 256, 264, 267, 268, 269, 271, 272, 273, 284, 285, 293, 294, 306, 307, 308, 309, 317, 320, 330, 345, 348, 419, 427, 436, 443], "serial_for_singl": [153, 161, 425], "circular": [153, 161, 424], "list_of_kwarg": [153, 161], "com_veloc": [153, 161], "head_height": [153, 161], "joint_angl": [153, 161], "torso_vert": [153, 161], "timeout": 153, "idl": 153, "batched_pipe_timeout": 153, "stringent": [153, 426, 437, 438], "inter": 153, "penv": [153, 235], "env_fix": 153, "influenc": 153, "myenv": [153, 184, 194, 198], "pipe": 153, "update_kwarg": [153, 161], "th": [154, 202, 239, 267, 271, 439], "thdot": [154, 439], "max_spe": [154, 439], "max_torqu": [154, 439], "gen_param": [154, 439], "gravit": [154, 439], "torqu": [154, 439], "pettingzoo": [155, 156, 437, 438], "pet": [155, 156], "zoo": [155, 156], "__": [155, 156], "aecenv": [155, 156], "dead": [155, 156], "done_on_ani": [155, 156, 437], "compulsori": [155, 156], "adversary_0": [155, 156], "adversari": [155, 156, 342, 437], "sisl": 155, "multiwalker_v9": 155, "aec": [155, 156], "n_piston": [155, 156], "pistonball_v6": [155, 156], "piston": [155, 156], "piston_0": [155, 156], "piston_1": [155, 156], "piston_20": [155, 156], "tictactoe_v3": [155, 156], "player": [155, 156, 162], "player_1": [155, 156], "player_2": [155, 156], "butterfli": 156, "parallel_env": [156, 424, 443, 444], "cube": 157, "roboh": 158, "expos": [158, 194, 198, 319, 425], "vikashplu": 158, "wiki": 158, "2310": 158, "06828": 158, "from_depth": 158, "smacv2": [159, 160], "starcraft": [159, 160], "challeng": [159, 160, 429, 439, 440], "10gen_terran": [159, 160], "10gen_zerg": [159, 160], "10gen_protoss": [159, 160], "3m": [159, 160], "8m": [159, 160], "25m": [159, 160], "5m_vs_6m": [159, 160], "8m_vs_9m": [159, 160], "10m_vs_11m": [159, 160], "27m_vs_30m": [159, 160], "mmm": [159, 160], "mmm2": [159, 160], "2s3z": [159, 160], "3s5z": [159, 160], "3s5z_vs_3s6z": [159, 160], "3s_vs_3z": [159, 160], "3s_vs_4z": [159, 160], "3s_vs_5z": [159, 160], "1c3s5z": [159, 160], "2m_vs_1z": [159, 160], "corridor": [159, 160], "6h_vs_8z": [159, 160], "2s_vs_1sc": [159, 160], "so_many_banel": [159, 160], "bane_vs_ban": [159, 160], "2c_vs_64zg": [159, 160], "old": [159, 160, 345, 444], "smac": [159, 160], "map_nam": [159, 160], "176": [159, 160], "battle_won": [159, 160], "dead_al": [159, 160], "dead_enemi": [159, 160], "episode_limit": [159, 160], "322": [159, 160], "procedur": [159, 160], "distribution_config": [159, 160], "n_unit": [159, 160], "n_enemi": [159, 160], "team_gen": [159, 160], "dist_typ": [159, 160], "weighted_team": [159, 160], "unit_typ": [159, 160], "marin": [159, 160], "maraud": [159, 160], "medivac": [159, 160], "exception_unit_typ": [159, 160], "start_posit": [159, 160], "surrounded_and_reflect": [159, 160], "map_x": [159, 160], "map_i": [159, 160], "capability_config": [159, 160], "131": [159, 160], "starcraft2env": 160, "tic": 162, "tac": 162, "toe": 162, "single_play": 162, "player1": 162, "desired_batch_s": 162, "player0": 162, "uniti": [163, 164], "ml": [163, 164], "technolog": [163, 164], "llapi": [163, 164], "mlagents_env": [163, 164], "unityenviron": [163, 164], "file_nam": 163, "registered_nam": 163, "nor": 163, "localhost": 163, "connect": 163, "3dball": 163, "group_0": 163, "vectorsensor_size8": 163, "continuous_act": [163, 165, 166, 381, 437, 438], "agent_10": 163, "agent_11": 163, "agent_4": 163, "agent_5": 163, "agent_6": 163, "agent_7": 163, "agent_8": 163, "agent_9": 163, "group_reward": 163, "proroklab": [165, 166], "vectorizedmultiagentsimul": [165, 166], "2207": [165, 166], "03530": [165, 166], "basescenario": 165, "defaultt": 165, "chosen": [165, 166, 229, 230, 291, 292, 300, 316, 383, 419, 433], "sparsiti": 165, "unbatched_action_spec": [165, 166], "unbatched_observation_spec": [165, 166], "unbatched_reward_spec": [165, 166], "het_spec": [165, 166], "het_specs_map": [165, 166], "flock": [165, 166, 381], "agent_collision_rew": [165, 166], "agent_distance_rew": [165, 166], "ca": 168, "environment4": 168, "get_group_map": 168, "sumbodul": 171, "unsqueeze_null_shap": 172, "dynamic_shap": 172, "model_bas": [173, 174, 250, 276], "model_based_env": [173, 339], "dreamerenv": [173, 339, 417], "model_based_env_ev": 173, "spec_typ": 175, "convert_specnam": 175, "remap_state_to_observ": 175, "spectyp": 175, "probabilistictdmodul": [176, 274, 314, 318, 362, 396], "keep_oth": [178, 439], "exclude_reward": 178, "exclude_don": 178, "next_": 178, "write_full_fals": 179, "_terminated_or_trunc": 179, "num_interv": 180, "out_action_kei": 180, "samplingstrategi": 180, "optino": 180, "intenum": 180, "action_disc": 180, "masker": 181, "maskedenv": 181, "ones_lik": [181, 277], "scatter": 181, "transformthatmeasuresbyt": [181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246], "bytes_in_td": [181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 246], "fill_float": 183, "fill_int": 183, "fill_bool": 183, "someenvclass": 183, "autoresetenv": 183, "fooenv": 183, "sign": [183, 225, 363, 437], "envtyp": 183, "reshape_fn": [184, 428], "reset_func": 184, "env_kwarg": [184, 413, 414, 424], "accompani": [184, 228], "tensordict_batch_s": 184, "tensordict_reset": [184, 439], "transform_env_batch_s": [184, 191, 236, 246], "untouch": [184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 246], "transform_full_done_spec": [184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 246], "biner": 185, "burn_in": 186, "burn": 186, "burnt": 186, "gru_modul": [186, 269, 325], "input_s": [186, 230, 267, 268, 269, 271, 272, 273, 325, 427, 428], "hidden_s": [186, 230, 267, 268, 269, 271, 272, 273, 325, 427, 428], "default_recurrent_mod": [186, 269, 273], "burn_in_transform": 186, "gru": [186, 230, 268, 269, 325, 428], "num_lay": [186, 267, 269, 271, 273, 284, 285, 325, 428], "is_init": [186, 206, 269, 273, 290, 313, 325, 427, 428], "86": 186, "3008": 186, "0344": 186, "padding_valu": [187, 277, 278], "as_invers": 187, "movement": 187, "1312": 187, "5602": 187, "consumpt": [187, 417], "pictur": 187, "pixels_trsf": [187, 441], "grayscal": [187, 425, 427, 428, 441, 444], "data_exclud": [187, 441], "make_rb_transform_and_sampl": 187, "sampler_kwarg": 187, "redund": [187, 427], "del_kei": [188, 227, 240, 436, 439], "unsqueeze_if_oor": 188, "observation_posit": 188, "observation_veloc": 188, "delet": [188, 227, 390], "crop": [189, 216, 383], "center": [189, 289, 383], "width": [189, 193, 219], "height": [189, 193, 219], "squar": [189, 193, 270, 298, 299, 383], "scalar": [190, 221, 248, 257, 259, 266, 282, 283, 290, 324, 328, 329, 330, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 361, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 419, 425, 431, 439], "permit": [190, 202, 227, 239, 328, 330, 345, 348, 350], "rewardsc": [191, 237, 424, 425, 427], "rewardclip": 191, "transformed_env": [191, 237, 429], "transform_env_devic": [191, 196, 236, 246], "cond": 192, "met": [192, 327, 437, 439], "altogeth": 192, "exectu": 192, "palliat": [192, 430], "step_count_kei": [192, 228], "inner_count": 192, "middle_env": 192, "middle_count": 192, "auto_unwrap": [192, 237, 391], "9670": 192, "2546": 192, "9669": 192, "9802": 192, "1981": 192, "1601": 192, "9926": 192, "1214": 192, "5556": 192, "9994": 192, "7622": 192, "9984": 192, "0561": 192, "7933": 192, "9895": 192, "1445": 192, "7779": 192, "dtype_in": 194, "dtype_out": 194, "scan": [194, 198, 319, 320], "resp": [194, 198], "not_transform": [194, 198], "auto_batch_s": 195, "queue": [195, 244, 441, 443], "progress": [195, 394, 395, 396, 401, 421, 425, 427, 444], "maybe_dense_stack": 195, "unrel": 195, "llmenv": [195, 417], "endless_dataload": 195, "set_capture_non_tensor_stack": 195, "dummydataload": 195, "generate_random_str": 195, "ascii_lowercas": 195, "__iter__": 195, "__next__": 195, "zxwvupirska": 195, "stringa": 195, "zxwvupirsk": 195, "roll": 195, "init_st": 195, "nngcmflsana": 195, "vrrbnhzpmga": 195, "nngcmflsan": 195, "vrrb": 195, "dummytensordataload": 195, "generate_random_tensor": 195, "pad_tensor": 195, "padding_length": 195, "orig_devic": 196, "unspecifi": 196, "transform_done_spec": [196, 227, 234, 236, 238, 246], "num_actions_effect": 197, "max_act": 197, "include_forward": 197, "num_act": [197, 254, 337, 428, 430], "action_out": 197, "eol_kei": 199, "lives_kei": 199, "eol_attribut": 199, "breakout": 199, "210": [199, 213], "160": [199, 213], "eol_transform": 199, "eol": 199, "dqnloss": [199, 328, 329, 331, 332, 335, 337, 338, 339, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 361, 408, 417, 420, 425, 427, 428, 434], "register_kei": 199, "loss_or_advantag": 199, "lossmodul": [199, 401, 410, 411, 417, 420], "valueestimatorbas": [199, 346, 417], "finit": [201, 289, 430, 441], "first_dim": 202, "last_dim": 202, "allow_positive_dim": [202, 227, 239], "frameskip": 202, "repeatedli": [203, 426, 438], "hash_fn": 205, "use_raw_nontensor": [205, 234, 238], "repertoir": 205, "reproducible_hash": 205, "unarytransform": 205, "observation_str": 205, "tobyt": [205, 238], "observation_hash": 205, "x08": 205, "x8b": 205, "xbexav": 205, "xbf": 205, "x00": 205, "xee": 205, "xb5": 205, "x17": 205, "x8f": 205, "xbe": [205, 238], "x88": 205, "xccu": 205, "xc0vr": 205, "get_input_from_hash": 205, "hash_tensor": 205, "init_kei": [206, 313], "tracker": 206, "log_prob_kei": [207, 318, 420], "pi_curr": 207, "pi_0": 207, "overfit": 207, "probabilist": [207, 314, 328, 348, 417, 426, 443], "get_dist": [207, 318, 319], "normalparamextractor": [207, 306, 307, 308, 314, 320, 328, 329, 331, 337, 344, 348, 349, 350, 351, 353, 354, 419, 426, 430, 438, 443], "probabilisticactor": [207, 306, 307, 308, 309, 328, 329, 331, 334, 336, 337, 344, 347, 348, 349, 350, 351, 353, 354, 419, 424, 426, 430, 437, 438], "tanhnorm": [207, 306, 307, 308, 314, 320, 328, 329, 331, 344, 348, 349, 350, 351, 353, 354, 417, 426, 438, 443], "return_log_prob": [207, 306, 307, 308, 314, 318, 320, 350, 419, 426, 430, 437, 438, 443], "apply_": 207, "copy_": [207, 424], "formula": [207, 270, 298, 299, 328, 330, 345, 348, 420, 426], "mogymwrapp": [208, 417], "mo_env": 208, "sea": 208, "treasur": 208, "so_env": 208, "stack_reward": 209, "stack_observ": 209, "auto_batch_size_": 209, "macro": [209, 313], "noop": 210, "trial": 210, "standard_norm": [211, 222, 244, 424, 425, 427], "affin": [211, 222, 244], "layer": [211, 244, 249, 253, 254, 256, 257, 262, 264, 267, 268, 269, 271, 272, 273, 274, 279, 280, 282, 283, 284, 285, 295, 296, 303, 312, 321, 419, 425, 426, 427, 428, 430, 437, 440], "epsilon": [211, 248, 266, 290, 352, 399, 425, 426, 427, 430], "recover": 211, "set_default_tensor_typ": 211, "doubletensor": 211, "isclos": 211, "next_ob": [211, 363, 364, 365, 366, 443], "init_stat": [211, 424, 425, 426, 427], "3752e": 211, "5087e": 211, "9294e": 211, "9636": 211, "5608": 211, "6408": 211, "num_it": [211, 425, 426], "reduce_dim": [211, 424, 425, 426, 427], "cat_dim": [211, 424, 425, 426, 427], "keep_dim": [211, 313, 425, 427], "statist": [211, 244, 249, 350, 415, 424, 425, 426, 444], "gaussian": [211, 230, 248, 250, 276, 282, 283, 288, 426, 428, 437], "empir": [211, 250, 276, 314, 318, 424, 426, 438], "3d": [211, 253], "reorder": 213, "in_keys_in": [213, 239], "channel": [213, 233, 279, 284, 285, 425], "r3m": [215, 440], "resnet": [215, 240, 242], "ego4d": [215, 240, 242], "univers": [215, 240, 242, 429], "suraj": [215, 240], "nair": [215, 240], "aravind": [215, 240], "rajeswaran": [215, 240], "vikash": [215, 240, 242], "kumar": [215, 240, 242], "chelsea": [215, 240], "finn": [215, 240], "abhinav": [215, 240], "gupta": [215, 240], "2203": [215, 240, 276, 440], "12601": [215, 240, 440], "_init": [215, 240, 424], "resnet50": [215, 242, 440], "model_nam": [215, 240, 242, 386], "resnet34": 215, "resnet18": 215, "r3m_vec": [215, 440], "stack_imag": [215, 242], "tread": [215, 242], "hub": [215, 242, 429], "resnet50_weight": [215, 242], "imagenet1k_v1": [215, 242], "download_path": [215, 242], "tensor_pixels_kei": [215, 242], "sub_seq_len": 216, "sample_dim": [216, 424], "hesit": 216, "mix": [216, 291, 300, 361, 424, 437, 438], "improp": 216, "dummyenv": 217, "another_oth": 217, "other_reward": 217, "create_copi": 218, "stuff": [218, 432], "newnam": 218, "r2g": 220, "reward_to_go": 220, "bernoulli_": 220, "9010": 220, "9404": [220, 369], "9701": [220, 369], "9900": [220, 369], "0000": [220, 231, 232, 266, 289, 321, 369], "clamp_min": 221, "clamp_max": 221, "clip_min": 221, "clip_max": 221, "episode_": 223, "reward1": 223, "reward2": 223, "episode_reward": [223, 437, 438], "keep_reward": 224, "keep_don": 224, "logical_or": 225, "in_key_inv": 227, "unstack": 227, "update_don": 228, "disjunct": 228, "recognis": 228, "target_return": 229, "default_valu": [230, 325], "expand_spec": 230, "single_default_valu": 230, "call_before_env_reset": 230, "unit": [230, 250, 264, 267, 268, 284, 285, 293, 294, 426], "scala": 230, "mykei": 230, "__unless": 230, "exists__": 230, "get_primers_from_modul": [230, 252, 269, 273, 417], "recurrent_st": [230, 269, 273, 325, 427], "pool": 231, "10th": 231, "0216": 231, "1149": 231, "1990": 231, "2749": 231, "3281": 231, "9290": 231, "3702": 231, "8978": 231, "time_kei": 232, "elaps": [232, 433], "monitor": [232, 429], "expend": 232, "_polici": 232, "time_reset": 232, "time_polici": 232, "time_step": [232, 272, 313], "0882": 232, "0002": 232, "5797e": 232, "6289e": 232, "7990e": 232, "0824e": 232, "0837e": 232, "6056e": 232, "2016e": 232, "1062e": 232, "7009e": 232, "from_int": 233, "shape_toler": 233, "ri": 233, "additional_token": 234, "skip_special_token": 234, "add_special_token": 234, "return_attention_mask": 234, "missing_toler": 234, "call_before_reset": 234, "traj_count": 235, "traj": 235, "countingenv": 235, "mocking_class": 235, "make_env_c0": 235, "make_env_c1": 235, "set_contain": 236, "reset_par": 236, "smoothli": [237, 249], "add_1": 237, "cache_spec": 237, "set_missing_toler": 237, "inv_fn": 238, "unari": 238, "durin": 238, "ommit": 238, "observation_trsf": 238, "xbc": 238, "x7f": 238, "x859": 238, "x81": 238, "x9a": 238, "xbd": 238, "xb8t8": 238, "test_input_spec": 238, "test_output_spec": 238, "danger": 239, "vc1": 240, "vc1_vec": 240, "untrain": 240, "make_noload_model": 240, "vip": [241, 242, 440], "implicit": [242, 336, 344, 441], "jason": 242, "ma": 242, "shagun": 242, "sodhani": 242, "dinesh": 242, "jayaraman": 242, "osbert": 242, "bastani": 242, "ami": 242, "zhang": 242, "vip_vec": 242, "final_nam": 243, "sb3": 243, "terminal_obs_read": 243, "truli": [243, 443], "shared_td": 244, "decai": [244, 248, 266, 352, 399, 424, 425, 427, 444], "9999": 244, "0001": [244, 264], "to_observation_norm": 244, "frozen_copi": 244, "race": 244, "underflow": [244, 399], "build_td_for_shared_vecnorm": 244, "memmori": 244, "td_share": 244, "v": [244, 267, 268, 271, 272, 306, 336, 344, 351, 424, 425], "unfreez": 244, "observationnorm": [244, 415, 424, 425, 426, 427, 443], "train_env": 244, "eval_env": 244, "state_dim": [245, 255, 260, 288, 293, 294, 309], "action_dim": [245, 255, 256, 258, 260, 288, 309, 424, 436], "gsde": [245, 349, 415], "gsdemodul": 245, "rb_transform": 246, "resist": 246, "insensit": 246, "sensit": [246, 425, 427], "_orig": 246, "95": [246, 276, 356, 426, 427], "window": [246, 313, 437, 441, 443], "module_nam": [247, 346], "from_vers": 247, "to_vers": 247, "class_method": 247, "vs": [247, 269, 273], "import_modul": 247, "get_class_that_defined_method": 247, "module_set": 247, "setters_dict": 247, "setter": 247, "setter_dict": 247, "po": 248, "sigma_init": [248, 437], "sigma_end": [248, 437], "annealing_num_step": [248, 266, 290, 424, 425, 427, 428, 430, 434, 437], "sigma": [248, 267, 268, 270, 271, 272, 290, 298, 299, 426, 437], "omiss": [248, 266, 290], "momentum": 249, "max_r": 249, "max_d": 249, "warmup_step": 249, "batchrenorm": 249, "1702": 249, "03275": 249, "corenet": 249, "enhanc": 249, "warmup": 249, "phase": [249, 251, 438, 441], "outlier": 249, "period": 249, "varianc": [249, 250, 251, 270, 298, 299, 420, 424, 426, 438], "warm": 249, "renorm": 249, "entropi": [250, 286, 328, 329, 330, 331, 336, 337, 344, 345, 347, 348, 349, 351, 353, 354, 438], "botev": 250, "2013": 250, "cem": 250, "plan": [250, 275, 276], "k": [250, 252, 267, 268, 271, 272], "maximis": [250, 256, 258, 276, 425, 426, 438], "modelbasedenv": [250, 276], "planning_horizon": [250, 276], "optim_step": [250, 276, 428, 434], "mpc": [250, 275, 276], "num_candid": [250, 276], "candid": [250, 276], "top_k": [250, 276], "modelbasedenvbas": [250, 275, 276, 417], "safemodul": [250, 275, 306, 308, 318, 328, 329, 331, 336, 337, 344, 348, 349, 350, 351, 353, 354, 406, 407, 411, 417, 443], "hausknecht": 251, "wagen": 251, "reus": [251, 256, 390], "consistentdropoutmodul": [251, 419], "capit": 251, "themselv": [251, 425], "conceptu": 251, "devianc": 251, "set_exploration_typ": [251, 346, 396, 417, 419, 426, 427, 428, 430, 437, 443], "_main_async_collector": 251, "asyncdatacollector": [251, 417], "ditto": 251, "consistentdropout": 252, "input_shap": 252, "batcht": 252, "make_tensordict_prim": [252, 269, 273, 427], "input_dtyp": 252, "get_default_dtyp": [252, 399], "mask_6127171760": 252, "env0": [252, 444], "num_cel": [253, 254, 256, 257, 258, 259, 264, 265, 269, 273, 274, 279, 280, 306, 325, 425, 426, 427, 428, 430, 431, 434, 437, 438, 443], "elu": [253, 254, 256, 257, 258, 259, 264, 265, 279, 425, 443], "activation_kwarg": [253, 254, 274], "norm_class": [253, 254, 256, 257, 274], "norm_kwarg": [253, 254, 274], "bias_last_lay": [253, 254, 256, 257, 258, 259, 265, 274], "aggregator_class": [253, 254, 256, 257, 425, 427, 443], "squashdim": [253, 254, 256, 265, 279, 443], "aggregator_kwarg": [253, 254, 256, 257, 425, 427], "squeeze_output": [253, 254, 256, 257, 425, 427], "convolut": [253, 254, 256, 257, 279, 295, 428, 430], "cell": [253, 254, 267, 268, 269, 271, 272, 273, 274, 279, 280, 426, 428, 429, 430, 431, 432, 433, 434], "kernel": [253, 254, 279], "cnet": [253, 254], "conv3d": 253, "rectangular": [253, 254], "lazyconv2d": [254, 256, 257, 265, 279], "default_atari_dqn": [254, 428], "semin": 254, "transformer_config": [255, 288, 309], "decisiontransform": [255, 288], "dtconfig": [255, 260, 288], "2202": [255, 260, 347], "05607": [255, 260, 347], "return_to_go": [255, 260, 288, 309], "conv_net_kwarg": [256, 257], "mlp_net_kwarg": [256, 257, 258], "use_avg_pool": [256, 257], "WITH": [256, 257, 258, 259, 290, 352], "1509": [256, 257, 258, 259, 276, 290, 333, 343, 352], "02971": [256, 257, 258, 259, 290, 352], "convnet": [256, 257, 265, 279, 427, 428, 430, 443], "ndims_in": 256, "avgpool": [256, 257], "lazylinear": [256, 257, 258, 259, 265, 274, 419, 426, 430, 439, 440], "2304": 256, "adaptiveavgpool2d": [257, 425, 427], "output_s": [257, 425, 427], "squeeze2dlay": 257, "400": [258, 259, 438], "mlp_net_kwargs_net1": 259, "mlp_net_kwargs_net2": 259, "mlp1": 259, "mlp2": 259, "desdescrib": 260, "n_embd": 260, "n_layer": [260, 267, 271], "n_head": 260, "n_inner": 260, "n_posit": 260, "resid_pdrop": 260, "attn_pdrop": 260, "gpt2config": 260, "atol": [261, 297], "rtol": [261, 297], "batch_shap": [261, 286, 297], "event_shap": [261, 297], "absolut": [261, 297, 424], "_instanc": 261, "densiti": [261, 277, 278, 286, 299], "mass": [261, 277, 278, 286, 299, 439], "rsampl": [261, 278, 286, 318], "sample_shap": [261, 277, 278, 286], "softmax": [262, 278, 286, 310, 311], "var_num": [263, 292, 310, 311, 316], "action_value_kei": [263, 292, 310, 311, 315, 316, 331, 346, 361], "action_mask_kei": [263, 266, 292, 310, 311, 315, 316], "1707": [263, 311, 338, 348], "06887": [263, 311, 338], "mult": [263, 280, 292, 310, 311, 315, 316], "tensordict_modul": [263, 267, 268, 271, 272, 292, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 331, 332, 336, 337, 344, 348, 349, 350, 351, 353, 354, 419], "nbin": [263, 310, 419], "customdistributionalqv": 263, "log_softmax": [263, 310], "qvalue_actor": [263, 292, 310, 315, 419], "to_modul": [263, 317, 320, 424, 443], "std_bia": 264, "std_min_val": 264, "belief": [264, 284, 293, 294], "1912": [264, 339, 340, 341], "01603": [264, 339, 340, 341], "softplu": [264, 324, 326, 327], "out_features_valu": 265, "cnn_kwarg": [265, 425], "mlp_kwarg": [265, 425], "duel": 265, "cnn": [265, 279, 425, 428, 430, 443], "06581": 265, "512": 265, "greedi": [266, 292, 311, 316, 425, 427, 428, 430], "eps_init": [266, 290, 425, 427, 428, 430, 434], "eps_end": [266, 290, 425], "explorative_polici": [266, 290], "9055": 266, "9277": 266, "6295": 266, "2532": 266, "grad_fn": [266, 305, 318], "addbackward0": 266, "batch_first": [267, 269, 271, 273, 427], "bidirect": [267, 271, 427], "cudnn": [267, 268, 269, 271, 272, 273, 427, 428], "rnn": [267, 268, 269, 271, 272, 273, 304, 337, 351, 427, 428, 430], "device_count": [267, 268, 271, 272, 444], "n_in": [267, 268, 271, 272], "n_out": [267, 268, 271, 272], "h0": [267, 268, 271, 272], "h1": [267, 268, 271, 272], "vectoris": [267, 268, 271, 272], "call_gru": [267, 268], "h_out": [267, 268, 271, 272], "batched_cal": [267, 268, 271, 272], "gate": [267, 268, 271], "r_t": 267, "w_": [267, 268, 271, 272], "ir": [267, 268], "x_t": [267, 271], "b_": [267, 268, 271, 272], "hr": [267, 268, 271], "h_": [267, 268, 271], "z_t": 267, "iz": [267, 268], "hz": [267, 268], "n_t": 267, "odot": [267, 268, 271, 272], "hn": [267, 268, 271], "h_t": [267, 271], "sigmoid": [267, 268, 271, 272], "hadamard": [267, 268, 271, 272], "multilay": [267, 271], "_t": [267, 271, 438, 439], "ge": [267, 271], "bernoulli": [267, 271], "b_ih": [267, 268, 271, 272, 273], "b_hh": [267, 268, 271, 272, 273], "h_0": [267, 271, 272], "pack_padded_sequ": [267, 271], "pack_sequ": [267, 271], "num": [267, 271, 434], "_layer": [267, 271], "_size": [267, 268, 271, 272], "h_n": [267, 271], "packedsequ": [267, 271], "weight_ih_l": [267, 271], "learnabl": [267, 268, 271, 272], "w_ir": 267, "w_iz": 267, "w_in": 267, "num_direct": [267, 271], "weight_hh_l": [267, 271], "w_hr": 267, "w_hz": 267, "w_hn": 267, "bias_ih_l": [267, 271], "b_ir": 267, "b_iz": 267, "b_in": 267, "bias_hh_l": [267, 271], "b_hr": 267, "b_hz": 267, "b_hn": 267, "mathcal": [267, 268, 271, 272], "sqrt": [267, 268, 271, 272, 290], "frac": [267, 268, 271, 272, 426], "seq_len": [267, 271], "subtli": 267, "matrix": [267, 271, 282, 283], "hx": [267, 268, 271, 272], "lstmcell": [268, 273, 428], "gru_cel": 268, "weight_ih": [268, 272], "weight_hh": [268, 272], "bias_ih": [268, 272], "bias_hh": [268, 272], "rocm": [268, 272], "embedd": [269, 273], "grucel": [269, 317], "python_bas": [269, 273], "custom_kei": [269, 273], "hasn": [269, 273], "set_recurrent_mod": [269, 273, 427], "recurrent_mod": [269, 273, 304], "rs": [269, 424], "gru_module_train": 269, "policy_train": [269, 273], "traj_td": [269, 273], "make_cudnn_bas": [269, 273], "make_python_bas": [269, 273, 428], "supplementari": [269, 273, 426, 444], "That": [269, 273, 426, 437], "dealt": [269, 273], "poorli": [269, 273], "meth": [269, 273, 346, 439], "data_collector": [269, 273, 425], "policy_infer": [269, 273], "td_inf": [269, 273], "upscal": [270, 298, 299], "tanh_loc": [270, 298, 299], "event_dim": [270, 297, 298], "poor": [270, 298, 299], "explos": [270, 298, 299], "proj_siz": 271, "c0": [271, 272], "c1": [271, 272], "call_lstm": [271, 272], "c_out": [271, 272], "i_t": 271, "ii": [271, 272], "hi": [271, 272], "f_t": 271, "hf": [271, 272], "g_t": 271, "ig": [271, 272], "hg": [271, 272], "o_t": 271, "ho": [271, 272], "c_t": 271, "c_": 271, "1402": 271, "1128": 271, "c_0": [271, 272], "proj": 271, "c_n": 271, "w_ii": 271, "w_if": 271, "w_ig": 271, "w_io": 271, "w_hi": 271, "w_hf": 271, "w_hg": 271, "w_ho": 271, "b_ii": 271, "b_if": 271, "b_ig": 271, "b_io": 271, "b_hi": 271, "b_hf": 271, "b_hg": 271, "b_ho": 271, "weight_hr_l": 271, "_revers": 271, "analog": [271, 430], "cn": 271, "lstm_cell": 272, "h_1": 272, "c_1": 272, "cx": 272, "recurrent_state_h": 273, "recurrent_state_c": 273, "triplet": [273, 315, 316], "lstm_modul": 273, "rs_h": 273, "rs_c": 273, "hidden0": [273, 428], "hidden1": [273, 428], "single_bias_last_lay": 274, "layer_class": 274, "layer_kwarg": 274, "perceptron": [274, 430], "noisylinear": [274, 282, 417, 425], "noisylazylinear": [274, 417], "mpcplanner": 275, "tensordict_out": [275, 444], "mppi": 276, "covari": 276, "william": [276, 350], "aldrich": 276, "theodor": 276, "01149": 276, "hansen": 276, "wang": 276, "su": 276, "04955": 276, "valueoper": [276, 306, 307, 308, 328, 329, 330, 331, 332, 337, 344, 345, 348, 349, 350, 351, 353, 354, 411, 419, 424, 426, 431], "tdlambdaestim": [276, 417, 424], "value_net": [276, 333, 335, 350, 363, 364, 365, 366, 426, 428, 430, 431, 434], "adv": 276, "lmbda": [276, 356, 363, 366, 368, 374, 375, 376, 379, 380, 420, 424, 426, 438], "value_network": [276, 332, 333, 335, 336, 338, 344, 351, 363, 364, 365, 366, 420, 424, 426, 428, 431, 434, 437], "temperatur": [276, 329, 336, 344], "neg_inf": [277, 278], "inf": [277, 278], "api_doc": [277, 278], "tf_agent": [277, 278], "unnorm": [277, 278, 286], "sparse_mask": [277, 278], "dens": [277, 278], "1203": [277, 278], "0928": [277, 278], "0831": [277, 278], "1972": [277, 278], "grad_method": [278, 286], "reparamgradientstrategi": [278, 286], "passthrough": [278, 286], "relaxedonehot": [278, 286], "sample_non_valid": 278, "zeros_lik": [278, 439], "share_param": [279, 280, 281, 437, 438], "use_td_param": [279, 280, 281], "get_stateful_net": [279, 280, 281, 346, 419, 420], "from_stateful_net": [279, 280, 281, 346, 420], "homogen": [279, 280, 437, 438], "tensordictparam": [279, 280, 318], "_empty_net": [279, 280], "roughli": [279, 280, 443], "agent_network": [279, 280], "modulelist": [279, 280], "2592": 279, "n_agent_input": [280, 281, 437, 438], "n_agent_output": [280, 281, 437, 438], "toech": 280, "centalis": 280, "shown": [280, 419, 428, 436, 437, 438, 441], "agent_dim": 281, "vmap_random": [281, 346, 420], "stateful_net": [281, 346], "Such": [281, 346], "multiagentmlp": [281, 437, 438], "snet": 281, "hasattr": [281, 424], "kaiming_normal_": 281, "std_init": [282, 283], "initialize_paramet": 282, "isol": [282, 346, 428], "1706": [283, 300], "10295v3": 283, "induc": [283, 318], "aid": 283, "1803": [284, 285, 291], "10122": [284, 285], "rnn_hidden": 284, "latent": 285, "ordin": [287, 417], "parametris": [287, 289], "inres": 288, "mu": [288, 290, 426], "impos": [289, 419], "proxim": [289, 348, 426, 438], "atom": 289, "tang": 289, "agraw": 289, "2020": 289, "1901": 289, "10500": 289, "discretis": 289, "num_atom": 289, "num_sampl": 289, "middl": 289, "adam": [289, 298, 424, 425, 426, 427, 428, 431, 434, 437, 438, 439], "lr": [289, 424, 425, 426, 427, 434, 437, 438, 439], "optimis": [289, 437, 438], "minimis": 289, "penalis": 289, "0308": 289, "1586": 289, "4727": 289, "2260": 289, "1120": 289, "histogram": 289, "return_typ": 289, "hist": [289, 441], "158": 289, "478": 289, "228": 289, "112": 289, "bin_edg": 289, "8000": 289, "6000": 289, "4000": 289, "ornstein": [290, 424, 428], "uhlenbeck": [290, 424, 428], "ou": [290, 424], "correl": 290, "noise_t": 290, "noise_": 290, "theta": [290, 426, 439], "sigma_t": 290, "sigma_": 290, "anneal": [290, 425, 430, 437], "ou_prev_nois": 290, "ou_step": 290, "x0": 290, "sigma_min": 290, "n_steps_ann": 290, "is_init_kei": 290, "_ou_prev_nois": 290, "_ou_step": 290, "state_shap": [291, 361], "mixing_embed_dim": [291, 361], "qmix": [291, 437, 438], "mixer": [291, 300, 361], "monoton": 291, "hyper": 291, "11485": 291, "qmixerloss": [291, 300], "qmix_vdn": [291, 300], "vdn": [291, 300], "hidden_dim": [293, 294], "scale_lb": [293, 294], "posterior": [293, 340], "rssm": [293, 294, 340], "1811": [293, 294], "04551": [293, 294], "obs_embed": 293, "rnn_hidden_dim": 294, "dream": 294, "safe_tanh": 298, "tanhtransform": 298, "overflow": [298, 305, 310, 311, 314, 315, 316, 317, 318], "get_mod": [298, 318], "decomposit": 300, "05296": 300, "hide": [301, 426, 437, 438], "satisfi": [301, 419], "vmap_dim": 301, "lam": 301, "sample_in": 301, "sample_in_td": 301, "vm": 301, "translat": [305, 314], "character": [305, 310, 314, 315, 317, 441], "td_modul": [305, 306, 307, 308, 314, 317, 318, 320, 322, 430, 443], "3635": 305, "0340": 305, "1476": 305, "3911": 305, "1664": 305, "5455": 305, "2247": 305, "4583": 305, "2916": 305, "2160": 305, "5337": 305, "5193": 305, "addmmbackward0": 305, "actorvalueoper": [306, 330, 345, 348, 419, 430], "get_policy_oper": [306, 307, 308, 330, 345, 348, 419], "standalon": [306, 307, 308, 428, 430], "tdmodul": [306, 307, 308, 411], "get_critic_oper": 306, "common_oper": [306, 308], "policy_oper": [306, 307, 308], "value_oper": [306, 307, 308], "module_hidden": [306, 308], "td_module_hidden": [306, 308], "module_act": [306, 308], "td_module_act": [306, 307, 308], "module_valu": [306, 307, 308], "td_module_valu": [306, 307, 308], "state_action_valu": [306, 322, 329, 331, 336, 344, 351, 362, 411, 419, 424, 437, 443], "td_clone": [306, 307, 308], "tensordictmodulewrapp": [306, 406, 407, 411], "get_policy_head": [306, 307, 308], "safesequenti": [306, 307, 308, 361], "head": [306, 308, 318, 325, 330, 345, 348, 417], "get_value_head": [306, 307, 308], "get_value_oper": [306, 307, 308, 330, 345, 348], "action_modul": 307, "actorcriticoper": [308, 419, 430], "actorcriticwrapp": [308, 419, 424], "inferec": 309, "set_tensor_kei": 309, "dt_inference_wrapp": 309, "baz": 309, "inference_context": 309, "obs_dim": 309, "tanhdelta": [309, 417, 424, 437], "dtactor": 309, "actor_modul": [309, 443], "dist_class": 309, "dist_kwarg": 309, "distribution_kwarg": [309, 314, 318, 426, 437, 438], "inference_actor": 309, "sequence_length": 309, "mask_context": 309, "out_act": 309, "qvaluemodul": [310, 315, 361, 427, 428, 430, 434], "distributionaldqnnet": 310, "make_log_softmax": 310, "my_action_valu": [311, 316], "chanc": 311, "lmheadmodel": 312, "actor_head": [312, 330, 345, 348], "base_model": 312, "lm_head": 312, "lookahead": 313, "reshape_cat": 313, "actor_bas": 313, "obs_cat": 313, "obs_cat_reshap": 313, "action_orig": 313, "multistepenvwrapp": 313, "alter": [313, 346, 419], "ego": 313, "default_interaction_typ": [314, 318, 430], "interaction_typ": [314, 318], "set_interaction_typ": [314, 318], "compositedistribut": [314, 318, 328, 348, 420, 430], "distribution_map": [314, 318], "name_map": [314, 318], "cache_dist": [314, 318], "n_empirical_estim": [314, 318], "compound": [314, 430], "chose": 316, "functionalmodul": 317, "functionalmodulewithbuff": 317, "td_fmodul": 317, "td_function": 317, "td_state": 317, "params_repeat": 317, "td_vmap": [317, 320], "random_sampl": [317, 318], "suppli": 318, "paliat": 318, "get_median": 318, "get_mean": 318, "sample_key_nam": 318, "_log_prob": 318, "composite_lp_aggreg": 318, "clampbackward0": 318, "clamp": [318, 321, 340, 401, 420, 437, 439], "anihil": 318, "probabilistictensordictsequenti": [319, 328, 330, 345, 348, 350, 406, 407, 420, 443], "partial_toler": [319, 320, 436], "AND": [319, 320, 331], "tensordictsequ": 320, "safeprobabilisticmodul": [320, 419], "spec1": 320, "net1": 320, "module1": 320, "td_module1": 320, "spec2": 320, "module2": 320, "td_module2": 320, "boundari": [321, 426, 428, 437, 438], "resolut": 321, "9944": 321, "9991": 321, "3020": 321, "2299": 321, "5418": 321, "2989": 321, "6849": 321, "3169": 321, "2690": 321, "9649": 321, "5686": 321, "8602": 321, "0315": 321, "8455": 321, "6027": 321, "4746": 321, "7843": 321, "7782": 321, "2111": 321, "5115": 321, "4687": 321, "5760": 321, "custommodul": 322, "imaginari": 323, "imagin": 323, "transition_model": 323, "get_reward_oper": 323, "get_transition_model_oper": 323, "min_val": [324, 327], "_bia": 324, "surject": 327, "expln": 327, "biased_softplu": [327, 417], "biased_softplus_": 327, "syntax": [327, 424], "add_custom_map": 327, "1602": 328, "01783v2": 328, "actor_network": [328, 329, 330, 331, 332, 334, 336, 337, 344, 345, 347, 348, 349, 350, 351, 353, 354, 420, 424, 426, 431, 437, 438], "critic_network": [328, 330, 345, 348, 350, 426, 438], "entropy_bonu": [328, 330, 345, 348, 426], "favour": [328, 330, 345, 348], "samples_mc_entropi": [328, 330, 345, 347, 348], "entropy_coef": [328, 330, 345, 348, 426, 438], "critic_coef": [328, 330, 345, 348, 426], "loss_critic_typ": [328, 330, 345, 348, 350, 426], "l1": [328, 330, 332, 333, 337, 345, 348, 349, 350, 353, 354, 357, 361, 419, 424], "l2": [328, 330, 332, 333, 334, 335, 337, 340, 341, 345, 348, 349, 350, 353, 354, 357, 361, 424, 437], "smooth_l1": [328, 329, 330, 331, 332, 333, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354, 357, 361, 426], "separate_loss": [328, 330, 331, 332, 336, 337, 344, 345, 348, 349, 350, 351, 353, 354], "advantage_kei": [328, 330, 345, 348, 350, 363, 364, 365, 366], "value_target_kei": [328, 330, 345, 348, 350, 363, 364, 365, 366], "value_target": [328, 330, 345, 348, 350, 363, 364, 365, 366, 426, 438], "ddp": [328, 330, 345, 348, 350], "fsdp": [328, 330, 345, 348, 350], "divid": [328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 345, 347, 348, 349, 350, 351, 353, 354, 404, 424, 437, 438, 439], "clip_valu": [328, 330, 345, 348, 350], "loss_crit": [328, 348, 426, 438], "loss_entropi": [328, 348, 426, 438], "loss_object": [328, 348, 426, 438], "next_reward": [328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366], "next_don": [328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366], "next_termin": [328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 363, 364, 365, 366], "loss_obj": 328, "next_observ": [328, 329, 331, 332, 333, 335, 336, 337, 344, 348, 349, 350, 351, 353, 354, 436], "sacloss": [328, 343, 352, 417], "default_kei": [328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 347, 348, 349, 350, 351, 353, 354, 361, 367], "_acceptedkei": [328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 353, 354, 361, 367], "fraction": 328, "make_value_estim": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 355, 361, 420, 424, 425, 437, 438, 443], "value_typ": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 356, 361, 424], "valueestim": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 356, 361, 417, 420, 424, 437, 438], "hyperparam": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 424], "enum": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 356, 361, 424], "default_value_estim": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 424, 443], "default_value_kwarg": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 417, 424], "dqn_loss": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 355, 361], "td1": [328, 329, 331, 332, 333, 335, 337, 338, 339, 344, 346, 348, 349, 350, 351, 353, 354, 361, 424], "conserv": [329, 335], "04779": [329, 335], "qvalue_network": [329, 331, 336, 337, 344, 349, 351, 353, 354], "unti": [329, 331, 344, 349, 351, 353, 354], "loss_funct": [329, 331, 332, 333, 334, 335, 336, 337, 344, 349, 351, 353, 354, 357, 361, 424, 437], "alpha_init": [329, 331, 337, 347, 349, 351], "min_alpha": [329, 331, 337, 347, 349, 351], "max_alpha": [329, 331, 337, 347, 349, 351], "fixed_alpha": [329, 331, 337, 347, 349, 351], "target_entropi": [329, 331, 337, 347, 349, 351], "prod": [329, 331, 347, 351], "delay_actor": [329, 332, 351, 353, 354], "delay_qvalu": [329, 337, 349, 351, 353, 354], "min_q_weight": 329, "max_q_backup": 329, "backup": 329, "deterministic_backup": 329, "num_random": 329, "with_lagrang": 329, "lagrang": 329, "lagrange_thresh": 329, "valueclass": [329, 331, 332, 337, 349, 351, 353, 354], "qvalu": [329, 331, 336, 337, 344, 349, 351, 353, 354], "loss_actor": [329, 331, 332, 336, 337, 344, 349, 350, 351, 353, 354, 397, 424, 437], "loss_actor_bc": 329, "loss_alpha": [329, 331, 337, 349, 351], "loss_cql": [329, 335], "loss_qvalu": [329, 331, 335, 336, 337, 344, 349, 351, 353, 354], "loss_alpha_prim": 329, "clip_epsilon": [330, 426, 438], "normalize_advantag": [330, 345, 348, 438], "normalize_advantage_exclude_dim": [330, 345, 348], "multiobject": [330, 345, 348], "value_kei": [330, 345, 348, 363, 364, 365, 366, 424], "somemodul": [330, 345, 348], "someactor": [330, 345, 348], "value_head": [330, 345, 348], "somevalu": [330, 345, 348], "loss_modul": [330, 343, 345, 346, 348, 352, 401, 410, 411, 420, 421, 424, 425, 426, 437, 438, 441], "IN": 331, "FOR": 331, "simplic": [331, 425, 426, 432, 440, 441, 443], "openreview": [331, 349], "pczqttstix": 331, "qvalue_loss": [331, 353], "actor_loss": [331, 353], "alpha_loss": 331, "num_qvalue_net": [331, 336, 337, 344, 349, 351, 353, 354], "maybe_init_target_entropi": 331, "fault_toler": 331, "target_entropy_buff": 331, "delay_valu": [332, 333, 335, 338, 350, 351, 361, 425, 427, 428, 434, 437], "loss_valu": [332, 336, 344, 350, 351, 424, 426, 437, 438], "pred_valu": [332, 335, 353, 354, 424], "pred_value_max": [332, 424], "target_valu": [332, 335, 349, 353, 354, 362, 420, 424], "target_value_max": [332, 424], "qvalueactor": [333, 335, 361, 425, 427], "double_dqn": 333, "06461": [333, 343], "mult_one_hot": [333, 336, 337, 361], "loss_val": [333, 335, 420, 424, 426, 427, 428, 431, 432, 434, 437, 438, 441], "01345": 334, "distanc": [335, 345, 357, 362, 363, 438], "dcql_loss": 335, "2110": [336, 344], "06169": [336, 344], "expectil": [336, 344], "tau": [336, 344, 352, 424, 425, 437], "antmaz": [336, 344], "sticht": [336, 344], "onehotcategor": [336, 337, 417], "target_entropy_weight": 337, "skip_done_st": [337, 351], "disctount": 338, "distributionalqvalueactor": [338, 419], "input_tensordict": [338, 424], "actor_model": 339, "value_model": [339, 341], "imagination_horizon": 339, "discount_loss": [339, 341], "lambda_kl": 340, "lambda_reco": 340, "lambda_reward": 340, "reco_loss": 340, "reward_loss": 340, "free_nat": 340, "nat": 340, "delayed_clamp": 340, "global_averag": 340, "value_loss": 341, "fake_data": 341, "1606": 342, "03476": 342, "discriminator_network": 342, "use_grad_penalti": 342, "gp_lambda": 342, "discrimin": 342, "ddpgloss": [343, 352, 411, 417, 424, 431, 437, 443], "td3loss": [343, 352, 417], "value_network_update_interv": 343, "qvalueclass": 344, "loss_value_diff": 344, "diff": 344, "old_polici": 345, "new_polici": 345, "apart": [345, 438], "dtarg": 345, "samples_mc_kl": 345, "analyt": 345, "decrement": 345, "loss_": [346, 397, 420, 424, 431], "equip": [346, 427, 428, 430], "gh": 346, "_forward_value_estimator_kei": 346, "value_estim": [346, 363, 364, 365, 366, 367, 420, 424, 438], "myloss": 346, "action2": 346, "augment": [346, 432, 434, 441], "deterministic_sampling_mod": 346, "convert_to_funct": [346, 424], "expand_dim": 346, "create_target_param": [346, 424], "compare_against": [346, 424], "_param": 346, "resampl": 346, "_target_param": 346, "network_nam": 346, "blend": 346, "add_random_modul": [346, 420], "flavor": [348, 424, 437, 438, 443], "clipppoloss": [348, 417, 426, 438], "klpenppoloss": [348, 417], "06347": 348, "gae": [348, 417, 420, 424, 426, 438], "ppo_loss": 348, "tdlambda": [348, 356, 420, 424], "base_lay": 348, "randn_lik": 348, "samplelogprob": 348, "ay8zfzm0tdd": 349, "sub_sample_len": 349, "subsampl": [349, 392, 421], "action_log_prob_actor": 349, "state_action_value_actor": [349, 353, 354], "connectionist": 350, "1992": 350, "doi": 350, "1007": 350, "bf00992696": 350, "actor_net": [350, 424, 426], "1801": 351, "01290": 351, "applic": [351, 361, 429, 430, 439], "1812": 351, "05905": 351, "redqloss": [352, 417], "math": 352, "theta_t": [352, 439], "theta_": [352, 439], "polyak": 352, "minimalist": 353, "06860": 353, "policy_nois": [353, 354], "noise_clip": [353, 354], "td3_bc": 353, "bc_loss": 353, "lmbd": 353, "td0": [355, 424, 437], "strict_shap": 357, "view_a": 357, "qmixer": [361, 417], "local_valu": 361, "visibl": [361, 438], "acceptedkei": 361, "global_valu": 361, "penultim": 361, "local_value_network": 361, "mixer_network": 361, "value_modul": [361, 426, 443], "qnet": [361, 424], "next_val_kei": 362, "pred_next_v": 362, "mse": 362, "q_valu": 362, "n_steps_to_next": 362, "value_next_st": 362, "1506": [363, 368, 376], "02438": [363, 368, 376], "exponenti": [363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 399], "average_ga": [363, 426], "skip_exist": [363, 364, 365, 366], "get_default_devic": [363, 364, 365, 366, 367], "gradient_mod": 363, "value_error": [363, 364, 365, 366, 367], "target_param": [363, 364, 365, 366, 367, 424, 438], "98": [363, 364, 365, 366], "94": [363, 366], "unpack": [363, 364, 365, 366], "tensor_kei": [363, 364, 365, 366, 367], "next_valu": [363, 364, 365, 366, 367], "aka": [364, 425, 437], "average_reward": [364, 365, 366], "tdestim": [364, 365, 367], "infti": 365, "valuefunctionbas": 367, "old_stat": [368, 370, 372, 374, 376, 377, 379], "new_stat": [368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "rolling_gamma": [372, 373, 374, 375, 377, 378, 379, 380], "g1": [372, 373, 374, 375, 377, 378, 379, 380], "g2": [372, 373, 374, 375, 377, 378, 379, 380], "g3": [372, 373, 374, 375, 377, 378, 379, 380], "g4": [372, 373, 374, 375, 377, 378, 379, 380], "v3": [372, 373, 374, 375, 377, 378, 379, 380], "preproc": [381, 428, 437], "as_non_tensor": [381, 437], "render_method": 381, "pass_tensordict": 381, "syntact": 381, "sugar": 381, "out_file_bas": 382, "skip_reset": 382, "center_crop": 383, "make_grid": 383, "fp": [383, 388, 390], "log_video": 383, "csv": [383, 385, 387, 425, 433, 434], "wandb": [383, 387, 390, 433, 443], "tensorboard": [383, 387, 389, 433, 443], "log_dir": [383, 384, 385, 387, 389, 390, 425, 434], "cheetah_video": 383, "run_video": 383, "openxexperiencereplai": 383, "sec": [383, 439], "video_fp": [383, 385, 388], "cmu_stretch": 383, "run_video_0": 383, "pt": [385, 421], "cur_dir": 385, "csv_log": 385, "add_video": 385, "video_": 385, "experiment_nam": [386, 387], "uuid": [386, 425, 444], "logger_typ": 387, "logger_nam": 387, "mlflow": [387, 388], "wandb_kwarg": 387, "mlflow_kwarg": 387, "tracking_uri": 388, "uri": 388, "datastor": 388, "tb_log": 389, "tensoarboard": 389, "td_log": 389, "save_dir": 390, "resum": 390, "uncategor": 390, "my_funct": 391, "sub_traj_len": 392, "min_sub_traj_len": 392, "register_op": [392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 421, 425], "process_optim_batch": [392, 398, 399, 421], "td_out": [392, 400], "_process_optim_batch_hook": [392, 421], "batch_subsampl": 392, "clear_cuda": 393, "pre_optim_step": [393, 421], "log_pbar": [394, 395, 396, 399, 421, 425], "count_fram": 394, "pre_steps_log": [394, 395, 421], "count_frames_log": 394, "lognam": 395, "r_train": 395, "log_reward": [395, 425], "record_interv": [396, 424, 425], "record_fram": [396, 404, 424, 425], "policy_explor": [396, 411, 424, 425, 428, 430, 434], "log_kei": [396, 425], "underestim": 396, "r_evalu": [396, 424], "loss_compon": 397, "appl": 397, "optimizer_hook": 397, "flatten_tensordict": [398, 425], "max_dim": 398, "rb_trainer": 398, "batch_process": [398, 399, 400, 421], "post_loss": [398, 421], "999": [399, 425], "jitter": 399, "finfo": 399, "default_dtyp": 399, "reward_norm": 399, "update_reward_stat": 399, "normalize_reward": 399, "make_train": [400, 417], "_process_batch_hook": [400, 421], "select_kei": [400, 421], "versatil": [401, 429], "optim_steps_per_batch": [401, 421, 425], "clip_grad_norm": 401, "clip_norm": 401, "progress_bar": 401, "save_trainer_interv": 401, "log_interv": [401, 425], "save_trainer_fil": [401, 421], "load_from_fil": [401, 421], "update_weights_interv": [403, 425], "post_step": [403, 421, 425], "cfg": [404, 405, 406, 407, 408, 409, 410, 411, 412, 415], "dictconfig": [404, 405, 406, 407, 409, 410, 411, 412, 415], "unknowingli": 404, "annealing_fram": [404, 424], "init_env_step": [404, 405, 424], "proof_environ": [405, 424], "sta": 405, "ot": 405, "actor_model_explor": [406, 407, 424], "make_env_kwarg": [406, 407], "targetnetupdat": [408, 410, 411], "replayargsconfig": 409, "target_net_updat": [411, 424, 425], "constitu": 411, "egreedywrapp": 411, "env_proof": 411, "obs_spec": 411, "net_valu": 411, "dir": [411, 421, 425], "gettempdir": 411, "argpars": [412, 415], "namespac": [412, 415], "parser": [412, 415], "transformed_env_constructor": [412, 417], "num_env_per_collector": [413, 414], "video_tag": 415, "norm_obs_onli": 415, "use_env_cr": 415, "custom_env_mak": 415, "custom_env": 415, "return_transformed_env": 415, "action_dim_gsd": 415, "state_dim_gsd": 415, "obs_norm_state_dict": 415, "maker": [415, 425], "distributedsyncdatacollector": 417, "submitit_delayed_launch": 417, "remotetensordictreplaybuff": 417, "rational": 417, "footnot": 417, "binarydiscretetensorspec": 417, "boundedtensorspec": 417, "discretetensorspec": 417, "lazystackedcompositespec": 417, "lazystackedtensorspec": 417, "multidiscretetensorspec": 417, "multionehotdiscretetensorspec": 417, "nontensorspec": 417, "onehotdiscretetensorspec": 417, "unboundedcontinuoustensorspec": 417, "unboundeddiscretetensorspec": 417, "prompttensordicttoken": 417, "rolloutfrommodel": 417, "tokenizeddatasetload": 417, "create_infinite_iter": 417, "constantklcontrol": 417, "adaptiveklcontrol": 417, "llmdata": 417, "llminput": 417, "llmoutput": 417, "densifyreward": 417, "h5combin": 417, "h5split": 417, "nested2t": 417, "check_no_exclusive_kei": 417, "consolidate_spec": 417, "contains_lazy_spec": 417, "envmetadata": 417, "chessenv": 417, "tictactoeenv": 417, "llmhashingenv": 417, "check_marl_group": 417, "get_available_librari": 417, "terminated_or_trunc": 417, "dreamerdecod": 417, "braxwrapp": 417, "dmcontrolwrapp": 417, "jumanjiwrapp": 417, "meltingpotenv": 417, "meltingpotwrapp": 417, "mogymenv": 417, "multithreadedenvwrapp": 417, "openmlenv": 417, "openspielwrapp": 417, "openspielenv": 417, "pettingzooenv": [417, 437], "robohiveenv": 417, "smacv2env": 417, "smacv2wrapp": 417, "unitymlagentsenv": 417, "unitymlagentswrapp": 417, "vmaswrapp": 417, "register_gym_spec_convers": 417, "qvaluehook": 417, "distributionalqvaluehook": 417, "reset_nois": 417, "cemplann": 417, "mpcplannerbas": 417, "mppiplann": 417, "independentnorm": 417, "truncatednorm": 417, "maskedonehotcategor": 417, "onehotordin": 417, "inv_softplu": 417, "vmapmodul": 417, "distributionaldqnloss": [417, 425], "discretesacloss": 417, "crossqloss": 417, "iqlloss": 417, "discreteiqlloss": 417, "cqlloss": 417, "discretecqlloss": 417, "gailloss": 417, "dtloss": 417, "onlinedtloss": 417, "td3bcloss": 417, "ppoloss": 417, "a2closs": 417, "reinforceloss": 417, "dreameractorloss": 417, "dreamermodelloss": 417, "dreamervalueloss": 417, "td0estim": [417, 424], "td1estim": [417, 424], "td0_return_estim": 417, "td0_advantage_estim": 417, "td1_return_estim": 417, "vec_td1_return_estim": 417, "td1_advantage_estim": 417, "vec_td1_advantage_estim": 417, "td_lambda_return_estim": 417, "vec_td_lambda_return_estim": 417, "td_lambda_advantage_estim": 417, "vec_td_lambda_advantage_estim": 417, "generalized_advantage_estim": 417, "vec_generalized_advantage_estim": 417, "hardupd": [417, 424, 431], "softupd": [417, 424, 425, 427, 428, 431, 434, 437], "distance_loss": [417, 424], "group_optim": 417, "hold_out_net": 417, "hold_out_param": [417, 424], "batchsubsampl": [417, 421], "clearcudacach": 417, "countframeslog": 417, "logscalar": [417, 421, 425], "optimizerhook": [417, 425], "logvalidationreward": [417, 421, 424, 425], "replaybuffertrain": [417, 421, 425], "rewardnorm": 417, "selectkei": [417, 421], "trainerhookbas": [417, 421, 425], "updateweight": [417, 421, 425], "make_collector_offpolici": 417, "make_collector_onpolici": 417, "make_dqn_loss": 417, "make_replay_buff": [417, 424], "make_target_updat": 417, "parallel_env_constructor": [417, 424], "sync_async_collector": 417, "sync_sync_collector": 417, "correct_for_frame_skip": 417, "get_stats_random_rollout": 417, "mlflowlogg": 417, "get_logg": 417, "generate_exp_nam": 417, "journei": 418, "textbook": 418, "highlight": [418, 437], "ever": [418, 438], "bump": 418, "benefit": [418, 429, 437, 438, 441], "pr": 418, "ground": [419, 424, 439], "recycl": [419, 441], "noisier": 419, "Their": [419, 437, 438], "sd": [419, 444], "prob_modul": 419, "uncertainti": 419, "soften": 419, "backbon": [419, 427, 430, 436, 443], "make_actor": 419, "make_valu": 419, "shared_param": 419, "make_common": 419, "reusabl": [420, 424, 441], "swappabl": [420, 424], "characterist": [420, 424, 439], "trainabl": [420, 424, 431, 440], "smth": [420, 424], "metric": [420, 424], "plenti": [420, 428], "amort": [420, 425, 426], "told": [420, 426], "pseudo": [420, 432, 439], "buri": 420, "str_valu": 420, "nutshel": [420, 424], "barto": [420, 437, 438], "chapter": [420, 433], "value_net_loss": 420, "pow": [420, 424], "room": 420, "signifi": [420, 437, 438], "underperform": 420, "thin": 420, "intric": [420, 430], "set_composite_lp_aggreg": [420, 438], "action_td": 420, "action0": 420, "f0": 420, "action1": 420, "f1": 420, "f2": 420, "legitim": [420, 444], "f3": 420, "action0_log_prob": 420, "action1_log_prob": 420, "inferior": 420, "multivari": 420, "dirichlet": 420, "contrari": 420, "prev_log_prob": 420, "new_log_prob": 420, "log_weight": 420, "appreci": [420, 429], "multihead": 420, "believ": 421, "scheme": [421, 444], "substanti": 421, "_pre_steps_log_hook": 421, "_pre_optim_hook": 421, "sub_batch": 421, "_post_loss_hook": 421, "_post_optim_hook": 421, "post_optim": [421, 425], "_post_optim_log": 421, "post_optim_log": 421, "_post_steps_hook": 421, "_post_steps_log_hook": 421, "post_steps_log": 421, "logginghook": 421, "logging_hook": 421, "save_dict": 421, "some_valu": 421, "torchsnapshot": 421, "ckpt_backend": 421, "filepath": 421, "save_train": 421, "000": [423, 442], "galleri": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "mem": [423, 442], "mb": [423, 442], "coding_ddpg": [423, 424, 442], "coding_dqn": [423, 425, 442], "coding_ppo": [423, 426, 442], "dqn_with_rnn": [423, 427, 442], "multi_task": [423, 436, 442], "multiagent_competitive_ddpg": [423, 437, 442], "multiagent_ppo": [423, 438, 442], "pretrained_model": [423, 440, 442], "rb_tutori": [423, 441, 442], "torchrl_demo": [423, 442, 443], "torchrl_env": [423, 442, 444], "author": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 444], "vincent": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 439, 441, 444], "moen": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 439, 441, 444], "assembl": 424, "maxim": [424, 431, 439], "transpar": [424, 427], "bash": 424, "is_fork": [424, 425, 426, 427, 437, 438, 440], "get_start_method": [424, 425, 426, 427, 437, 438, 440], "collector_devic": 424, "loss_dict": 424, "modal": 424, "oblivi": [424, 426, 441], "elementari": 424, "didact": [424, 428], "dilut": 424, "pessimist": [424, 425, 426], "target_actor_network_param": 424, "actor_in_kei": 424, "actor_crit": 424, "compromis": 424, "hp": 424, "_value_estim": 424, "elif": [424, 425], "unknown": 424, "_loss_actor": 424, "td_copi": 424, "actor_network_param": [424, 437], "value_network_param": [424, 437], "_loss_valu": 424, "pred_val": 424, "target_value_network_param": 424, "glue": 424, "_forward": 424, "remaind": 424, "env_librari": 424, "env_task": 424, "env_arg": [424, 425], "torchr": 424, "rescal": 424, "presum": 424, "make_transformed_env": 424, "reward_sc": 424, "marker": 424, "env_per_collector": 424, "transform_state_dict": 424, "make_t_env": 424, "cheat": 424, "10m": 424, "cautiou": 424, "magnitud": [424, 437], "thousand": [424, 427], "get_env_stat": 424, "proof_env": 424, "5000": [424, 428, 434], "recal": [424, 426, 441], "ddpgmlpactor": 424, "ddpgmlpqnet": 424, "materi": 424, "ornsteinuhlenbeckprocessmodul": [424, 430], "make_ddpg_actor": 424, "q_net": 424, "tight": 424, "decoupl": [424, 431, 443], "10_000": [424, 426], "traj_len": [424, 427], "make_record": 424, "recorder_obj": 424, "pick": [424, 425, 430], "buffer_s": [424, 425], "random_crop_len": 424, "prb": 424, "buffer_scratch_dir": [424, 425, 427, 432, 440], "25": 424, "dataflow": 424, "ceil_div": 424, "utd": [424, 427], "update_to_data": 424, "realiz": 424, "_must_": 424, "001": [424, 439], "outdat": 424, "trick": [424, 425], "despit": 424, "optimizer_actor": 424, "weight_decai": [424, 425], "optimizer_valu": 424, "total_collection_step": 424, "rewards_ev": 424, "collected_fram": 424, "pbar": [424, 426, 427, 437, 438, 439], "numel": [424, 426, 427, 428, 434, 437, 440, 441], "current_fram": [424, 437], "sampled_tensordict": 424, "gn1": 424, "clip_grad_norm_": [424, 426, 437, 438, 439], "gn2": 424, "gn": [424, 439], "td_record": 424, "rn": 424, "set_descript": [424, 426, 427, 437, 438, 439], "2f": 424, "mention": [424, 427, 441, 444], "matplotlib": [424, 426, 427, 428, 437, 438, 439, 441, 444], "pyplot": [424, 426, 427, 428, 437, 438, 439, 441, 444], "plt": [424, 426, 427, 428, 437, 438, 439, 441, 444], "zip": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "legend": [424, 437], "xlabel": [424, 427, 438, 439], "ylabel": [424, 438], "tight_layout": 424, "takeawai": [424, 425, 428], "distpatch": 424, "jupyt": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "ipynb": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444], "sphinx": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444], "road": 425, "aspect": [425, 431], "highest": [425, 430], "prerequisit": [425, 427], "lookup": 425, "cart": 425, "pole": 425, "un": 425, "actuat": 425, "frictionless": 425, "duelingcnndqnet": 425, "egreedymodul": [425, 427, 428, 430, 434], "is_notebook": 425, "shell": 425, "get_ipython": 425, "__class__": 425, "zmqinteractiveshel": 425, "qtconsol": 425, "terminalinteractiveshel": 425, "ipython": [425, 438, 439], "nameerror": [425, 437], "umbrella": 425, "misplac": 425, "misus": 425, "orchestr": [425, 431, 433], "five": 425, "64x64": 425, "motion": [425, 439], "obs_norm_sd": 425, "mp_context": 425, "simpler": [425, 429], "get_norm_stat": 425, "test_env": 425, "mathbb": 425, "rightarrow": 425, "make_model": 425, "dummy_env": 425, "init_bia": 425, "exploration_modul": [425, 427, 428, 430, 434], "eps_greedy_v": 425, "eps_greedy_val_env": 425, "actor_explor": 425, "get_replay_buff": 425, "n_optim": [425, 431, 432], "parametriz": 425, "get_collector": 425, "bunch": 425, "ubiquit": [425, 429], "get_loss_modul": 425, "target_updat": [425, 437], "995": 425, "hopefulli": 425, "variat": 425, "2e": [425, 439], "wd": 425, "upd": 425, "harder": [425, 443], "5_000": 425, "500000": 425, "100000": 425, "005": [425, 437], "mandatori": [425, 426, 438, 439], "fairer": 425, "budget": 425, "dqn_exp_": 425, "uuid1": [425, 444], "cumbersom": 425, "buffer_hook": 425, "weight_updat": 425, "aliv": 425, "total_reward": 425, "print_csv_files_in_fold": 425, "folder_path": 425, "csv_file": 425, "output_str": 425, "dirpath": 425, "endswith": 425, "strip": 425, "qvaluenetwork": 425, "accuraci": 425, "fanci": [425, 432], "demonstr": [426, 428, 432, 437, 438, 439, 441, 444], "talk": 426, "six": 426, "sophist": [426, 438], "invent": 426, "theta_k": 426, "pi_": 426, "exceed": 426, "discourag": [426, 439], "indispens": 426, "analyz": 426, "lingua": 426, "franca": 426, "defaultdict": [426, 439], "3e": [426, 427, 437, 438], "max_grad_norm": [426, 437, 438], "sub_batch_s": 426, "num_epoch": [426, 438], "entropy_ep": [426, 438], "charact": [426, 428], "inverteddoublependulum": 426, "transmit": 426, "stai": 426, "confid": [426, 437, 438], "ran": 426, "f_": 426, "mu_": 426, "difficulti": [426, 444], "d_ob": 426, "d_action": 426, "policy_modul": [426, 437, 438], "briefli": [426, 437, 438], "refil": [426, 438], "easiest": [426, 431, 437, 438], "mathemat": [426, 437, 438], "tradeoff": [426, 438], "advantage_modul": 426, "lr_schedul": [426, 439], "cosineannealinglr": [426, 439], "eval_str": 426, "tensordict_data": [426, 438], "data_view": [426, 438], "subdata": [426, 437, 438], "cum_reward_str": 426, "4f": [426, 427, 439], "stepcount_str": 426, "param_group": [426, 437], "lr_str": 426, "eval_rollout": 426, "nice": [426, 429, 432], "cap": [426, 441], "figsiz": [426, 439], "subplot": [426, 437, 439, 444], "titl": [426, 427, 428, 438, 439], "84x84": [427, 428], "accessori": 427, "stamp": 427, "assist": 427, "n_cell": 427, "customiz": 427, "wouldn": 427, "qval": 427, "stoch_polici": 427, "opportun": [427, 437], "uniniti": 427, "again": [427, 428, 429, 430, 432, 438, 440, 441, 444], "strongli": 427, "million": 427, "sake": [427, 440, 441], "20_000": [427, 439], "longest": 427, "npai": 427, "action_spread": 427, "rom": 428, "licens": 428, "strong": 428, "impress": 428, "arduino": 428, "raspberri": 428, "pi": [428, 437, 438, 439], "alon": 428, "examplifi": 428, "ship": 428, "stick": 428, "nearest": 428, "value_mlp": [428, 434], "100_000": [428, 434], "init_rand_step": [428, 434], "total_count": [428, 434], "total_episod": [428, 434], "t0": [428, 434], "screen": [428, 437], "color": [428, 437], "unblock": 428, "policy_transform": 428, "fake_td": 428, "exported_polici": 428, "div": 428, "graph_modul": 428, "print_read": 428, "group0": 428, "group0_agent0_ob": 428, "collid": [428, 438], "group0_agent0": 428, "agent0_ob": 428, "comma": 428, "digress": 428, "exported_stochastic_polici": 428, "trace": 428, "batchsizetransform": 428, "recurrent_polici": 428, "fake_ob": 428, "fake_hidden0": 428, "fake_hidden1": 428, "fake_is_init": 428, "exported_recurrent_polici": 428, "platform": [428, 443], "aoti": 428, "_inductor": 428, "aoti_compile_and_packag": 428, "aoti_load_packag": 428, "pt2": 428, "pkg_path": 428, "package_path": 428, "compiled_modul": 428, "onnxruntim": 428, "showcas": [428, 439], "web": 428, "explain": [428, 440], "tensorrt": 428, "android": 428, "ale_pi": 428, "aleinterfac": 428, "loadrom": 428, "reset_gam": 428, "screen_ob": 428, "getscreenrgb": 428, "tick_param": 428, "bottom": 428, "labelleft": 428, "labelbottom": 428, "imshow": [428, 444], "dynamo_export": 428, "onnx_policy_export": 428, "onnx_file_path": 428, "ort_sess": 428, "inferencesess": 428, "cpuexecutionprovid": 428, "onnxruntime_input": 428, "get_input": 428, "onnx_polici": 428, "lightweight": [428, 433], "onnxruntime_output": 428, "topic": [429, 430, 431], "straight": 429, "backtrack": 429, "reset_with_act": 429, "stepped_data": 429, "spatial": 429, "useless": 429, "policyless": 429, "examin": [429, 437], "tackl": 430, "delv": 430, "extractor": 430, "additivegaussianmodul": [430, 437], "exploration_polici": [430, 437], "greedili": 430, "2d": [430, 437, 438], "innov": [430, 431], "rollout_explor": 430, "sole": 431, "supervis": [431, 432, 441, 444], "n_collect": 431, "get_next_batch": 431, "concis": 431, "ddpg_loss": 431, "total_loss": 431, "prove": 431, "reliev": 431, "concern": 431, "accustom": 432, "surprisingli": 432, "fundament": 432, "art": [432, 437, 438], "countless": 432, "yourself": [432, 437, 438], "everywher": 433, "log_scalar": 433, "my_scalar": 433, "saw": [433, 439, 441], "excess": 433, "lesson": 434, "voluntarili": 434, "torchrl_logg": 434, "training_loop": 434, "video_record": 434, "arbitrarili": 434, "t1": 434, "conclud": [434, 440], "tutorials_python": 435, "tutorials_jupyt": 435, "env1_obs_kei": 436, "observation_stand": 436, "env2_obs_kei": 436, "observation_walk": 436, "tdreset1": 436, "tdreset2": 436, "lazy_stack": 436, "policy_common": 436, "policy_stand": 436, "policy_walk": 436, "But": 436, "env1_mak": 436, "env2_mak": 436, "_single_task": 436, "td_rollout": 436, "matteo": [437, 438], "bettini": [437, 438], "benchmarl": [437, 438], "simple_tag": 437, "maddpg": [437, 438], "multiagentparticleenviron": 437, "mpe": 437, "centralis": [437, 438], "tie": [437, 438], "iddpg": [437, 438], "richard": 437, "andrew": 437, "mit": 437, "press": 437, "2018": 437, "mathbf": [437, 438], "decentralis": [437, 438], "literatur": [437, 438], "overcom": [437, 438], "stationari": [437, 438], "concurr": [437, 438], "establish": 437, "gui": [437, 438], "is_sphinx": 437, "__sphinx_build__": 437, "n_iter": [437, 438, 439], "evad": 437, "iteration_when_stop_training_evad": 437, "memory_s": 437, "n_optimiser_step": 437, "train_batch_s": 437, "polyak_tau": 437, "chaser": 437, "red": 437, "circl": [437, 438], "green": 437, "touch": [437, 439], "penal": [437, 438], "obstacl": 437, "drag": [437, 438], "elast": [437, 438], "collis": [437, 438], "imped": 437, "n_chaser": 437, "n_evad": 437, "n_obstacl": 437, "use_vma": 437, "simple_tag_v3": 437, "num_good": 437, "num_adversari": 437, "num_obstacl": 437, "max_cycl": 437, "num_vmas_env": [437, 438], "num_good_ag": 437, "num_landmark": 437, "four": [437, 438, 439], "n_agents_in_that_group": 437, "stress": [437, 438], "paramount": [437, 438], "n_rollout_step": [437, 438], "evolut": [437, 438], "group_nam": 437, "n_agents_in_group": 437, "minor": 437, "agents_exploration_polici": 437, "utilis": [437, 438], "n_obs_per_ag": [437, 438], "n_actions_per_ag": [437, 438], "share_parameters_polici": [437, 438], "policy_net": [437, 438], "_agent": 437, "grant": [437, 438], "converg": [437, 438], "share_parameters_crit": [437, 438], "obs_act": 437, "cat_modul": 437, "critic_modul": 437, "fantast": [437, 438], "reset_td": 437, "interfer": 437, "subject": [437, 439], "flatten_kei": 437, "process_batch": 437, "group_shap": 437, "get_item_shap": [437, 438], "nested_done_kei": 437, "nested_terminated_kei": 437, "desc": [437, 438], "episode_reward_mean_": 437, "episode_reward_mean_map": 437, "train_group_map": 437, "group_batch": 437, "_group": 437, "loss_nam": 437, "episode_reward_mean": [437, 438], "fig": [437, 441], "set_ylabel": 437, "axvlin": 437, "orang": 437, "set_xlabel": 437, "video_logg": 437, "vmas_log": 437, "env_with_rend": 437, "vmas_rend": 437, "print_log_dir": 437, "profici": [437, 438], "lidar": 438, "sensor": 438, "mappo": 438, "ippo": 438, "analys": 438, "visualis": 438, "vmas_devic": 438, "6_000": 438, "minibatch_s": 438, "generalis": 438, "simd": 438, "warp": 438, "todai": 438, "surround": 438, "dot": [438, 439], "scenario_nam": 438, "critic_net": 438, "minibatch": 438, "episode_reward_mean_list": 438, "critic_network_param": 438, "target_critic_network_param": 438, "xvfb": 438, "pyvirtualdisplai": 438, "1400": 438, "900": 438, "pil": 438, "rendering_callback": 438, "fromarrai": 438, "gif": 438, "save_al": 438, "append_imag": 438, "freeli": 439, "broader": 439, "wider": 439, "acquaint": 439, "avenu": 439, "_apply_to_composit": 439, "default_x": 439, "default_i": 439, "upward": 439, "angular": 439, "sin": 439, "rad": 439, "angl": 439, "deleg": 439, "new_th": 439, "new_thdot": 439, "g_forc": 439, "angle_norm": 439, "albeit": 439, "high_th": 439, "high_thdot": 439, "low_th": 439, "low_thdot": 439, "trivial": 439, "irrelev": 439, "_make_spec": 439, "td_param": 439, "render_fp": 439, "random_": 439, "_make_step": 439, "staticmethod": 439, "skeleton": 439, "unitari": 439, "sine": 439, "cosin": 439, "sintransform": 439, "costransform": 439, "t_sin": 439, "t_co": 439, "cat_transform": 439, "simple_rollout": 439, "unexplor": 439, "init_td": 439, "traj_return": 439, "last_reward": 439, "is_ipython": 439, "inlin": 439, "get_backend": 439, "ion": 439, "gcf": 439, "clear_output": 439, "r3mtransform": 440, "embodi": 440, "env_transform": [440, 444], "wiser": 440, "batteri": 441, "gc": 441, "buffer_list": 441, "lowest": 441, "medium": 441, "buffer_lazytensor": 441, "tempdir": 441, "buffer_lazymemmap": 441, "fullest": 441, "mydata": 441, "buffer_lazi": 441, "background": 441, "question": [441, 443], "_i": 441, "artifici": 441, "hamper": 441, "she": 441, "pars": 441, "proport": 441, "reappear": 441, "unfold": 441, "problemat": 441, "4th": 441, "prioritizedslicesampl": 441, "tensordictmaxvaluewrit": 441, "demo": 443, "icml": 443, "vmoen": 443, "fb": 443, "invest": 443, "media": 443, "predominantli": 443, "data2": 443, "sub_key1": 443, "scturctur": 443, "data_stack": 443, "data_sampl": 443, "_sampler": 443, "_sum_tre": 443, "modulenotfounderror": 443, "noopresetenv": [443, 444], "backbone_modul": 443, "params_expand": 443, "exec_sequ": 443, "tensordict_exp": 443, "base_modul": 443, "tensordicts_prealloc": 443, "tensordicts_stack": 443, "tensordict_rollout": [443, 444], "automatical": 443, "60": 443, "particularili": 443, "concatmodul": 443, "loss_td": 443, "contributor": 443, "curiou": 443, "nascent": 443, "unsupervis": 444, "unifi": 444, "_build_env": 444, "deserv": 444, "__episode__": 444, "__trajectory__": 444, "void": 444, "reproduct": 444, "tensordict_tprim": 444, "wrapper1": 444, "wrapper2": 444, "obviou": 444, "truth": 444, "env_transformed_bi": 444, "stanc": 444, "transformeddistribut": 444, "base_dist": 444, "concat": 444, "mofidi": 444, "transformedenviron": 444, "moderet": 444, "computation": 444, "incom": 444, "amongst": 444, "has_cuda": 444, "convention": 444, "markovian": 444, "bar_": 444, "get_someth": 444, "aargh": 444, "is_clos": 444, "foo_list": 444, "121": 444, "evolv": 444, "steadi": 444, "approx": 444, "absor": 444, "_extra_st": 444}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [247, 0, 1, "", "implement_for"], [391, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "LocalWeightUpdaterBase"], [15, 0, 1, "", "MultiProcessedRemoteWeightUpdate"], [16, 0, 1, "", "MultiSyncDataCollector"], [17, 0, 1, "", "MultiaSyncDataCollector"], [18, 0, 1, "", "RayRemoteWeightUpdater"], [19, 0, 1, "", "RemoteWeightUpdaterBase"], [20, 0, 1, "", "SyncDataCollector"], [21, 0, 1, "", "VanillaLocalWeightUpdater"], [22, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.LocalWeightUpdaterBase": [[14, 1, 1, "", "register_collector"], [14, 1, 1, "", "update_weights"]], "torchrl.collectors.MultiProcessedRemoteWeightUpdate": [[15, 1, 1, "", "_get_server_weights"], [15, 1, 1, "", "_maybe_map_weights"], [15, 1, 1, "", "_sync_weights_with_worker"], [15, 1, 1, "", "all_worker_ids"], [15, 1, 1, "", "register_collector"]], "torchrl.collectors.MultiSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayRemoteWeightUpdater": [[18, 1, 1, "", "_get_server_weights"], [18, 1, 1, "", "_maybe_map_weights"], [18, 1, 1, "", "_skip_update"], [18, 1, 1, "", "_sync_weights_with_worker"], [18, 1, 1, "", "all_worker_ids"], [18, 1, 1, "", "register_collector"]], "torchrl.collectors.RemoteWeightUpdaterBase": [[19, 1, 1, "id0", "register_collector"], [19, 1, 1, "", "update_weights"]], "torchrl.collectors.SyncDataCollector": [[20, 1, 1, "", "iterator"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "rollout"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaLocalWeightUpdater": [[21, 1, 1, "", "_get_local_weights"], [21, 1, 1, "", "_get_server_weights"], [21, 1, 1, "", "_map_weights"], [21, 1, 1, "", "_maybe_map_weights"], [21, 1, 1, "", "_update_local_weights"], [21, 1, 1, "", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "reset"], [22, 1, 1, "", "set_seed"], [22, 1, 1, "", "shutdown"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[23, 0, 1, "", "DistributedDataCollector"], [24, 0, 1, "", "DistributedSyncDataCollector"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RayCollector"], [27, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[26, 1, 1, "", "add_collectors"], [26, 1, 1, "", "async_shutdown"], [26, 1, 1, "", "load_state_dict"], [26, 1, 1, "", "local_policy"], [26, 2, 1, "", "remote_collectors"], [26, 1, 1, "", "set_seed"], [26, 1, 1, "", "shutdown"], [26, 1, 1, "", "start"], [26, 1, 1, "", "state_dict"], [26, 1, 1, "", "stop_remote_collectors"], [26, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[28, 3, 1, "", "split_trajectories"]], "torchrl.data": [[29, 0, 1, "", "AdaptiveKLController"], [30, 0, 1, "", "Binary"], [31, 0, 1, "", "BinaryDiscreteTensorSpec"], [32, 0, 1, "", "BinaryToDecimal"], [33, 0, 1, "", "Bounded"], [34, 0, 1, "", "BoundedTensorSpec"], [35, 0, 1, "", "Categorical"], [36, 0, 1, "", "Composite"], [37, 0, 1, "", "CompositeSpec"], [38, 0, 1, "", "ConstantKLController"], [39, 0, 1, "", "DensifyReward"], [40, 0, 1, "", "DiscreteTensorSpec"], [41, 0, 1, "", "Flat2TED"], [42, 0, 1, "", "H5Combine"], [43, 0, 1, "", "H5Split"], [44, 0, 1, "", "HashToInt"], [45, 0, 1, "", "LLMData"], [46, 0, 1, "", "LLMInput"], [47, 0, 1, "", "LLMOutput"], [48, 0, 1, "", "LazyStackedCompositeSpec"], [49, 0, 1, "", "LazyStackedTensorSpec"], [50, 0, 1, "", "MCTSForest"], [51, 0, 1, "", "MultiCategorical"], [52, 0, 1, "", "MultiDiscreteTensorSpec"], [53, 0, 1, "", "MultiOneHot"], [54, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [55, 0, 1, "", "MultiStep"], [56, 0, 1, "", "Nested2TED"], [57, 0, 1, "", "NonTensor"], [58, 0, 1, "", "NonTensorSpec"], [59, 0, 1, "", "OneHot"], [60, 0, 1, "", "OneHotDiscreteTensorSpec"], [61, 0, 1, "", "PairwiseDataset"], [62, 0, 1, "", "PrioritizedReplayBuffer"], [63, 0, 1, "", "PromptData"], [64, 0, 1, "", "PromptTensorDictTokenizer"], [65, 0, 1, "", "QueryModule"], [66, 0, 1, "", "RandomProjectionHash"], [67, 0, 1, "", "RayReplayBuffer"], [68, 0, 1, "", "RemoteTensorDictReplayBuffer"], [69, 0, 1, "", "ReplayBuffer"], [70, 0, 1, "", "RewardData"], [71, 0, 1, "", "RolloutFromModel"], [72, 0, 1, "", "SipHash"], [73, 0, 1, "", "Stacked"], [74, 0, 1, "", "StackedComposite"], [75, 0, 1, "", "TED2Flat"], [76, 0, 1, "", "TED2Nested"], [77, 0, 1, "", "TensorDictMap"], [78, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [79, 0, 1, "", "TensorDictReplayBuffer"], [80, 0, 1, "", "TensorDictTokenizer"], [81, 0, 1, "", "TensorMap"], [82, 0, 1, "", "TensorSpec"], [83, 0, 1, "", "TokenizedDatasetLoader"], [84, 0, 1, "", "Tree"], [85, 0, 1, "", "Unbounded"], [86, 0, 1, "", "UnboundedContinuous"], [87, 0, 1, "", "UnboundedContinuousTensorSpec"], [88, 0, 1, "", "UnboundedDiscrete"], [89, 0, 1, "", "UnboundedDiscreteTensorSpec"], [90, 0, 1, "", "check_no_exclusive_keys"], [91, 0, 1, "", "consolidate_spec"], [92, 0, 1, "", "contains_lazy_spec"], [93, 0, 1, "", "create_infinite_iterator"], [94, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[29, 1, 1, "", "update"]], "torchrl.data.Binary": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 2, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "set_provisional_n"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "to_one_hot"], [31, 1, 1, "", "to_one_hot_spec"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "update_mask"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "mtia"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_load_state_dict_pre_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_post_hook"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "set_submodule"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 2, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 2, 1, "", "device"], [36, 1, 1, "", "empty"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "get"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_empty"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "items"], [36, 1, 1, "", "keys"], [36, 1, 1, "", "lock_"], [36, 1, 1, "", "make_neg_dim"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "pop"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "separates"], [36, 1, 1, "", "set"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unlock_"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "values"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "pop"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "separates"], [37, 1, 1, "", "set"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "compile"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "is_tdmodule_compatible"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "mtia"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_full_backward_pre_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_load_state_dict_pre_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "register_state_dict_post_hook"], [39, 1, 1, "", "register_state_dict_pre_hook"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "", "reset_out_keys"], [39, 1, 1, "", "reset_parameters_recursive"], [39, 1, 1, "", "select_out_keys"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "", "set_submodule"], [39, 1, 1, "", "share_memory"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "set_provisional_n"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "compile"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "mtia"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_load_state_dict_pre_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "register_state_dict_post_hook"], [44, 1, 1, "", "register_state_dict_pre_hook"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_submodule"], [44, 1, 1, "", "share_memory"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.data.LLMData": [[45, 2, 1, "", "device"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "fields"], [45, 1, 1, "", "from_tensordict"], [45, 1, 1, "", "get"], [45, 1, 1, "", "load"], [45, 1, 1, "", "load_"], [45, 1, 1, "", "load_memmap"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "memmap"], [45, 1, 1, "", "memmap_"], [45, 1, 1, "", "memmap_like"], [45, 1, 1, "", "memmap_refresh_"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to_tensordict"], [45, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[46, 2, 1, "", "device"], [46, 1, 1, "", "dumps"], [46, 1, 1, "", "fields"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[47, 2, 1, "", "device"], [47, 1, 1, "", "dumps"], [47, 1, 1, "", "fields"], [47, 1, 1, "", "from_tensordict"], [47, 1, 1, "", "get"], [47, 1, 1, "", "load"], [47, 1, 1, "", "load_"], [47, 1, 1, "", "load_memmap"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "memmap"], [47, 1, 1, "", "memmap_"], [47, 1, 1, "", "memmap_like"], [47, 1, 1, "", "memmap_refresh_"], [47, 1, 1, "", "save"], [47, 1, 1, "", "set"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "to_tensordict"], [47, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 2, 1, "", "device"], [48, 1, 1, "", "empty"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "get"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_empty"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "items"], [48, 1, 1, "", "keys"], [48, 1, 1, "", "lock_"], [48, 1, 1, "", "make_neg_dim"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "pop"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "separates"], [48, 1, 1, "", "set"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unlock_"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "values"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[50, 2, 1, "", "action_keys"], [50, 2, 1, "", "done_keys"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "get_keys_from_env"], [50, 2, 1, "", "observation_keys"], [50, 2, 1, "", "reward_keys"], [50, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 4, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "set_provisional_n"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 2, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 4, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_categorical"], [59, 1, 1, "", "to_categorical_spec"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "to_one_hot"], [59, 1, 1, "", "to_one_hot_spec"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "update_mask"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[61, 2, 1, "", "device"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "fields"], [61, 1, 1, "", "from_dataset"], [61, 1, 1, "", "from_tensordict"], [61, 1, 1, "", "get"], [61, 1, 1, "", "load"], [61, 1, 1, "", "load_"], [61, 1, 1, "", "load_memmap"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "memmap"], [61, 1, 1, "", "memmap_"], [61, 1, 1, "", "memmap_like"], [61, 1, 1, "", "memmap_refresh_"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to_tensordict"], [61, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[63, 2, 1, "", "device"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "fields"], [63, 1, 1, "", "from_dataset"], [63, 1, 1, "", "from_tensordict"], [63, 1, 1, "", "get"], [63, 1, 1, "", "load"], [63, 1, 1, "", "load_"], [63, 1, 1, "", "load_memmap"], [63, 1, 1, "", "load_state_dict"], [63, 1, 1, "", "memmap"], [63, 1, 1, "", "memmap_"], [63, 1, 1, "", "memmap_like"], [63, 1, 1, "", "memmap_refresh_"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set"], [63, 1, 1, "", "state_dict"], [63, 1, 1, "", "to_tensordict"], [63, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[65, 1, 1, "", "add_module"], [65, 1, 1, "", "apply"], [65, 1, 1, "", "bfloat16"], [65, 1, 1, "", "buffers"], [65, 1, 1, "", "children"], [65, 1, 1, "", "compile"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 1, 1, "", "double"], [65, 1, 1, "", "eval"], [65, 1, 1, "", "extra_repr"], [65, 1, 1, "", "float"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_buffer"], [65, 1, 1, "", "get_extra_state"], [65, 1, 1, "", "get_parameter"], [65, 1, 1, "", "get_submodule"], [65, 1, 1, "", "half"], [65, 1, 1, "", "ipu"], [65, 1, 1, "", "is_tdmodule_compatible"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "modules"], [65, 1, 1, "", "mtia"], [65, 1, 1, "", "named_buffers"], [65, 1, 1, "", "named_children"], [65, 1, 1, "", "named_modules"], [65, 1, 1, "", "named_parameters"], [65, 1, 1, "", "parameters"], [65, 1, 1, "", "register_backward_hook"], [65, 1, 1, "", "register_buffer"], [65, 1, 1, "", "register_forward_hook"], [65, 1, 1, "", "register_forward_pre_hook"], [65, 1, 1, "", "register_full_backward_hook"], [65, 1, 1, "", "register_full_backward_pre_hook"], [65, 1, 1, "", "register_load_state_dict_post_hook"], [65, 1, 1, "", "register_load_state_dict_pre_hook"], [65, 1, 1, "", "register_module"], [65, 1, 1, "", "register_parameter"], [65, 1, 1, "", "register_state_dict_post_hook"], [65, 1, 1, "", "register_state_dict_pre_hook"], [65, 1, 1, "", "requires_grad_"], [65, 1, 1, "", "reset_out_keys"], [65, 1, 1, "", "reset_parameters_recursive"], [65, 1, 1, "", "select_out_keys"], [65, 1, 1, "", "set_extra_state"], [65, 1, 1, "", "set_submodule"], [65, 1, 1, "", "share_memory"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_empty"], [65, 1, 1, "", "train"], [65, 1, 1, "", "type"], [65, 1, 1, "", "xpu"], [65, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "as_remote"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 2, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 2, 1, "", "storage"], [67, 2, 1, "", "write_count"], [67, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[70, 2, 1, "", "device"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "fields"], [70, 1, 1, "", "from_tensordict"], [70, 1, 1, "", "get"], [70, 1, 1, "", "load"], [70, 1, 1, "", "load_"], [70, 1, 1, "", "load_memmap"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "memmap"], [70, 1, 1, "", "memmap_"], [70, 1, 1, "", "memmap_like"], [70, 1, 1, "", "memmap_refresh_"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "to_tensordict"], [70, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[71, 1, 1, "", "create_rollout_td"], [71, 1, 1, "", "generate"], [71, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "cardinality"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 2, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "enumerate"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 2, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "get"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_empty"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "items"], [74, 1, 1, "", "keys"], [74, 1, 1, "", "lock_"], [74, 1, 1, "", "make_neg_dim"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "pop"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "separates"], [74, 1, 1, "", "set"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unlock_"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "values"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[77, 1, 1, "", "add_module"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "bfloat16"], [77, 1, 1, "", "buffers"], [77, 1, 1, "", "children"], [77, 1, 1, "", "compile"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 1, 1, "", "double"], [77, 1, 1, "", "eval"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "float"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "from_tensordict_pair"], [77, 1, 1, "", "get_buffer"], [77, 1, 1, "", "get_extra_state"], [77, 1, 1, "", "get_parameter"], [77, 1, 1, "", "get_submodule"], [77, 1, 1, "", "half"], [77, 1, 1, "", "ipu"], [77, 1, 1, "", "is_tdmodule_compatible"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "modules"], [77, 1, 1, "", "mtia"], [77, 1, 1, "", "named_buffers"], [77, 1, 1, "", "named_children"], [77, 1, 1, "", "named_modules"], [77, 1, 1, "", "named_parameters"], [77, 1, 1, "", "parameters"], [77, 1, 1, "", "register_backward_hook"], [77, 1, 1, "", "register_buffer"], [77, 1, 1, "", "register_forward_hook"], [77, 1, 1, "", "register_forward_pre_hook"], [77, 1, 1, "", "register_full_backward_hook"], [77, 1, 1, "", "register_full_backward_pre_hook"], [77, 1, 1, "", "register_load_state_dict_post_hook"], [77, 1, 1, "", "register_load_state_dict_pre_hook"], [77, 1, 1, "", "register_module"], [77, 1, 1, "", "register_parameter"], [77, 1, 1, "", "register_state_dict_post_hook"], [77, 1, 1, "", "register_state_dict_pre_hook"], [77, 1, 1, "", "requires_grad_"], [77, 1, 1, "", "reset_out_keys"], [77, 1, 1, "", "reset_parameters_recursive"], [77, 1, 1, "", "select_out_keys"], [77, 1, 1, "", "set_extra_state"], [77, 1, 1, "", "set_submodule"], [77, 1, 1, "", "share_memory"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_empty"], [77, 1, 1, "", "train"], [77, 1, 1, "", "type"], [77, 1, 1, "", "xpu"], [77, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 1, 1, "", "as_remote"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 2, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 2, 1, "", "storage"], [78, 2, 1, "", "write_count"], [78, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[83, 1, 1, "", "dataset_to_tensordict"], [83, 1, 1, "", "load"]], "torchrl.data.Tree": [[84, 2, 1, "", "branching_action"], [84, 2, 1, "", "device"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "edges"], [84, 1, 1, "", "fields"], [84, 1, 1, "", "from_tensordict"], [84, 2, 1, "", "full_action_spec"], [84, 2, 1, "", "full_done_spec"], [84, 2, 1, "", "full_observation_spec"], [84, 2, 1, "", "full_reward_spec"], [84, 2, 1, "", "full_state_spec"], [84, 1, 1, "", "fully_expanded"], [84, 1, 1, "", "get"], [84, 1, 1, "", "get_vertex_by_hash"], [84, 1, 1, "", "get_vertex_by_id"], [84, 2, 1, "", "is_terminal"], [84, 1, 1, "", "load"], [84, 1, 1, "", "load_"], [84, 1, 1, "", "load_memmap"], [84, 1, 1, "", "load_state_dict"], [84, 1, 1, "", "make_node"], [84, 1, 1, "", "max_length"], [84, 1, 1, "", "memmap"], [84, 1, 1, "", "memmap_"], [84, 1, 1, "", "memmap_like"], [84, 1, 1, "", "memmap_refresh_"], [84, 2, 1, "", "node_observation"], [84, 2, 1, "", "node_observations"], [84, 2, 1, "", "num_children"], [84, 1, 1, "", "num_vertices"], [84, 2, 1, "", "parent"], [84, 1, 1, "", "plot"], [84, 2, 1, "", "prev_action"], [84, 1, 1, "", "rollout_from_path"], [84, 1, 1, "", "save"], [84, 2, 1, "", "selected_actions"], [84, 1, 1, "", "set"], [84, 1, 1, "", "state_dict"], [84, 1, 1, "", "to_string"], [84, 1, 1, "", "to_tensordict"], [84, 1, 1, "", "unbind"], [84, 1, 1, "", "valid_paths"], [84, 1, 1, "", "vertices"], [84, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[95, 0, 1, "", "FlatStorageCheckpointer"], [96, 0, 1, "", "H5StorageCheckpointer"], [97, 0, 1, "", "ImmutableDatasetWriter"], [98, 0, 1, "", "LazyMemmapStorage"], [99, 0, 1, "", "LazyStackStorage"], [100, 0, 1, "", "LazyTensorStorage"], [101, 0, 1, "", "ListStorage"], [102, 0, 1, "", "ListStorageCheckpointer"], [103, 0, 1, "", "NestedStorageCheckpointer"], [104, 0, 1, "", "PrioritizedSampler"], [105, 0, 1, "", "PrioritizedSliceSampler"], [106, 0, 1, "", "RandomSampler"], [107, 0, 1, "", "ReplayBufferEnsemble"], [108, 0, 1, "", "RoundRobinWriter"], [109, 0, 1, "", "Sampler"], [110, 0, 1, "", "SamplerEnsemble"], [111, 0, 1, "", "SamplerWithoutReplacement"], [112, 0, 1, "", "SliceSampler"], [113, 0, 1, "", "SliceSamplerWithoutReplacement"], [114, 0, 1, "", "Storage"], [115, 0, 1, "", "StorageCheckpointerBase"], [116, 0, 1, "", "StorageEnsemble"], [117, 0, 1, "", "StorageEnsembleCheckpointer"], [118, 0, 1, "", "TensorDictMaxValueWriter"], [119, 0, 1, "", "TensorDictRoundRobinWriter"], [120, 0, 1, "", "TensorStorage"], [121, 0, 1, "", "TensorStorageCheckpointer"], [122, 0, 1, "", "Writer"], [123, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[99, 1, 1, "", "attach"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "load"], [99, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[100, 1, 1, "", "attach"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "load"], [100, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[104, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[105, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[107, 1, 1, "", "add"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "as_remote"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "dumps"], [107, 1, 1, "", "empty"], [107, 1, 1, "", "extend"], [107, 1, 1, "", "insert_transform"], [107, 1, 1, "", "load"], [107, 1, 1, "", "loads"], [107, 1, 1, "", "register_load_hook"], [107, 1, 1, "", "register_save_hook"], [107, 1, 1, "", "sample"], [107, 2, 1, "", "sampler"], [107, 1, 1, "", "save"], [107, 1, 1, "", "set_sampler"], [107, 1, 1, "", "set_storage"], [107, 1, 1, "", "set_writer"], [107, 2, 1, "", "storage"], [107, 2, 1, "", "write_count"], [107, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[108, 1, 1, "", "add"], [108, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[116, 1, 1, "", "attach"], [116, 1, 1, "", "dump"], [116, 1, 1, "", "load"], [116, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"], [118, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[120, 1, 1, "", "attach"], [120, 1, 1, "", "dump"], [120, 1, 1, "", "load"], [120, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[122, 1, 1, "", "add"], [122, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[123, 1, 1, "", "add"], [123, 1, 1, "", "extend"]], "torchrl.envs": [[124, 3, 1, "", "BraxEnv"], [125, 3, 1, "", "BraxWrapper"], [126, 0, 1, "", "ChessEnv"], [127, 3, 1, "", "DMControlEnv"], [128, 3, 1, "", "DMControlWrapper"], [129, 0, 1, "", "EnvBase"], [130, 0, 1, "", "EnvCreator"], [131, 0, 1, "", "EnvMetaData"], [132, 3, 1, "", "GymEnv"], [133, 0, 1, "", "GymLikeEnv"], [134, 3, 1, "", "GymWrapper"], [135, 3, 1, "", "HabitatEnv"], [136, 3, 1, "", "IsaacGymEnv"], [137, 3, 1, "", "IsaacGymWrapper"], [138, 3, 1, "", "JumanjiEnv"], [139, 3, 1, "", "JumanjiWrapper"], [140, 0, 1, "", "LLMEnv"], [141, 0, 1, "", "LLMHashingEnv"], [142, 3, 1, "", "MOGymEnv"], [143, 3, 1, "", "MOGymWrapper"], [144, 3, 1, "", "MarlGroupMapType"], [145, 3, 1, "", "MeltingpotEnv"], [146, 3, 1, "", "MeltingpotWrapper"], [147, 3, 1, "", "ModelBasedEnvBase"], [148, 3, 1, "", "MultiThreadedEnv"], [149, 3, 1, "", "MultiThreadedEnvWrapper"], [150, 3, 1, "", "OpenMLEnv"], [151, 3, 1, "", "OpenSpielEnv"], [152, 3, 1, "", "OpenSpielWrapper"], [153, 0, 1, "", "ParallelEnv"], [154, 0, 1, "", "PendulumEnv"], [155, 3, 1, "", "PettingZooEnv"], [156, 3, 1, "", "PettingZooWrapper"], [157, 3, 1, "", "RandomPolicy"], [158, 3, 1, "", "RoboHiveEnv"], [159, 3, 1, "", "SMACv2Env"], [160, 3, 1, "", "SMACv2Wrapper"], [161, 0, 1, "", "SerialEnv"], [162, 0, 1, "", "TicTacToeEnv"], [163, 3, 1, "", "UnityMLAgentsEnv"], [164, 3, 1, "", "UnityMLAgentsWrapper"], [165, 3, 1, "", "VmasEnv"], [166, 3, 1, "", "VmasWrapper"], [167, 3, 1, "", "check_env_specs"], [168, 3, 1, "", "check_marl_grouping"], [169, 3, 1, "", "exploration_type"], [170, 3, 1, "", "get_available_libraries"], [171, 3, 1, "", "gym_backend"], [172, 3, 1, "", "make_composite_from_td"], [147, 1, 1, "", "rand_step"], [175, 3, 1, "", "register_gym_spec_conversion"], [147, 1, 1, "", "reset"], [147, 1, 1, "", "rollout"], [176, 3, 1, "", "set_exploration_type"], [177, 3, 1, "", "set_gym_backend"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "step"], [178, 3, 1, "", "step_mdp"], [179, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.ChessEnv": [[126, 2, 1, "", "action_key"], [126, 2, 1, "", "action_keys"], [126, 2, 1, "", "action_spec"], [126, 2, 1, "", "action_spec_unbatched"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "all_actions"], [126, 1, 1, "", "any_done"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_specs_"], [126, 2, 1, "", "batch_dims"], [126, 2, 1, "", "batch_locked"], [126, 2, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "cardinality"], [126, 1, 1, "", "check_env_specs"], [126, 1, 1, "", "children"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 2, 1, "", "done_key"], [126, 2, 1, "", "done_keys"], [126, 2, 1, "", "done_keys_groups"], [126, 2, 1, "", "done_spec"], [126, 2, 1, "", "done_spec_unbatched"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 2, 1, "", "full_action_spec"], [126, 2, 1, "", "full_action_spec_unbatched"], [126, 2, 1, "", "full_done_spec"], [126, 2, 1, "", "full_done_spec_unbatched"], [126, 2, 1, "", "full_observation_spec_unbatched"], [126, 2, 1, "", "full_reward_spec"], [126, 2, 1, "", "full_reward_spec_unbatched"], [126, 2, 1, "", "full_state_spec"], [126, 2, 1, "", "full_state_spec_unbatched"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_legal_moves"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 2, 1, "", "input_spec"], [126, 2, 1, "", "input_spec_unbatched"], [126, 1, 1, "", "ipu"], [126, 2, 1, "", "is_spec_locked"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 2, 1, "", "observation_keys"], [126, 2, 1, "", "observation_spec"], [126, 2, 1, "", "observation_spec_unbatched"], [126, 2, 1, "", "output_spec"], [126, 2, 1, "", "output_spec_unbatched"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "", "rand_step"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "", "reset"], [126, 2, 1, "", "reset_keys"], [126, 2, 1, "", "reward_key"], [126, 2, 1, "", "reward_keys"], [126, 2, 1, "", "reward_spec"], [126, 2, 1, "", "reward_spec_unbatched"], [126, 1, 1, "", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "set_spec_lock_"], [126, 1, 1, "", "set_submodule"], [126, 2, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 2, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 2, 1, "", "state_keys"], [126, 2, 1, "", "state_spec"], [126, 2, 1, "", "state_spec_unbatched"], [126, 1, 1, "", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "step_mdp"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[129, 2, 1, "", "action_key"], [129, 2, 1, "", "action_keys"], [129, 2, 1, "", "action_spec"], [129, 2, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "all_actions"], [129, 1, 1, "", "any_done"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_specs_"], [129, 2, 1, "", "batch_dims"], [129, 2, 1, "", "batch_locked"], [129, 2, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 2, 1, "", "done_key"], [129, 2, 1, "", "done_keys"], [129, 2, 1, "", "done_keys_groups"], [129, 2, 1, "", "done_spec"], [129, 2, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 2, 1, "", "full_action_spec"], [129, 2, 1, "", "full_action_spec_unbatched"], [129, 2, 1, "", "full_done_spec"], [129, 2, 1, "", "full_done_spec_unbatched"], [129, 2, 1, "", "full_observation_spec_unbatched"], [129, 2, 1, "", "full_reward_spec"], [129, 2, 1, "", "full_reward_spec_unbatched"], [129, 2, 1, "", "full_state_spec"], [129, 2, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 2, 1, "", "input_spec"], [129, 2, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 2, 1, "", "is_spec_locked"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 2, 1, "", "observation_keys"], [129, 2, 1, "", "observation_spec"], [129, 2, 1, "", "observation_spec_unbatched"], [129, 2, 1, "", "output_spec"], [129, 2, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "id0", "rand_step"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "id1", "reset"], [129, 2, 1, "", "reset_keys"], [129, 2, 1, "", "reward_key"], [129, 2, 1, "", "reward_keys"], [129, 2, 1, "", "reward_spec"], [129, 2, 1, "", "reward_spec_unbatched"], [129, 1, 1, "id2", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "id3", "set_seed"], [129, 1, 1, "", "set_spec_lock_"], [129, 1, 1, "", "set_submodule"], [129, 2, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 2, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 2, 1, "", "state_keys"], [129, 2, 1, "", "state_spec"], [129, 2, 1, "", "state_spec_unbatched"], [129, 1, 1, "id4", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[130, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[133, 2, 1, "", "action_key"], [133, 2, 1, "", "action_keys"], [133, 2, 1, "", "action_spec"], [133, 2, 1, "", "action_spec_unbatched"], [133, 1, 1, "", "add_module"], [133, 1, 1, "", "add_truncated_keys"], [133, 1, 1, "", "all_actions"], [133, 1, 1, "", "any_done"], [133, 1, 1, "", "append_transform"], [133, 1, 1, "", "apply"], [133, 1, 1, "", "auto_register_info_dict"], [133, 1, 1, "", "auto_specs_"], [133, 2, 1, "", "batch_dims"], [133, 2, 1, "", "batch_locked"], [133, 2, 1, "", "batch_size"], [133, 1, 1, "", "bfloat16"], [133, 1, 1, "", "buffers"], [133, 1, 1, "", "cardinality"], [133, 1, 1, "", "check_env_specs"], [133, 1, 1, "", "children"], [133, 1, 1, "", "close"], [133, 1, 1, "", "compile"], [133, 1, 1, "", "cpu"], [133, 1, 1, "", "cuda"], [133, 2, 1, "", "done_key"], [133, 2, 1, "", "done_keys"], [133, 2, 1, "", "done_keys_groups"], [133, 2, 1, "", "done_spec"], [133, 2, 1, "", "done_spec_unbatched"], [133, 1, 1, "", "double"], [133, 1, 1, "", "empty_cache"], [133, 1, 1, "", "eval"], [133, 1, 1, "", "extra_repr"], [133, 1, 1, "", "fake_tensordict"], [133, 1, 1, "", "float"], [133, 1, 1, "", "forward"], [133, 2, 1, "", "full_action_spec"], [133, 2, 1, "", "full_action_spec_unbatched"], [133, 2, 1, "", "full_done_spec"], [133, 2, 1, "", "full_done_spec_unbatched"], [133, 2, 1, "", "full_observation_spec_unbatched"], [133, 2, 1, "", "full_reward_spec"], [133, 2, 1, "", "full_reward_spec_unbatched"], [133, 2, 1, "", "full_state_spec"], [133, 2, 1, "", "full_state_spec_unbatched"], [133, 1, 1, "", "get_buffer"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "get_parameter"], [133, 1, 1, "", "get_submodule"], [133, 1, 1, "", "half"], [133, 2, 1, "", "input_spec"], [133, 2, 1, "", "input_spec_unbatched"], [133, 1, 1, "", "ipu"], [133, 2, 1, "", "is_spec_locked"], [133, 1, 1, "", "load_state_dict"], [133, 1, 1, "", "maybe_reset"], [133, 1, 1, "", "modules"], [133, 1, 1, "", "mtia"], [133, 1, 1, "", "named_buffers"], [133, 1, 1, "", "named_children"], [133, 1, 1, "", "named_modules"], [133, 1, 1, "", "named_parameters"], [133, 2, 1, "", "observation_keys"], [133, 2, 1, "", "observation_spec"], [133, 2, 1, "", "observation_spec_unbatched"], [133, 2, 1, "", "output_spec"], [133, 2, 1, "", "output_spec_unbatched"], [133, 1, 1, "", "parameters"], [133, 1, 1, "", "rand_action"], [133, 1, 1, "", "rand_step"], [133, 1, 1, "", "read_action"], [133, 1, 1, "", "read_done"], [133, 1, 1, "", "read_obs"], [133, 1, 1, "", "read_reward"], [133, 1, 1, "", "register_backward_hook"], [133, 1, 1, "", "register_buffer"], [133, 1, 1, "", "register_forward_hook"], [133, 1, 1, "", "register_forward_pre_hook"], [133, 1, 1, "", "register_full_backward_hook"], [133, 1, 1, "", "register_full_backward_pre_hook"], [133, 1, 1, "", "register_gym"], [133, 1, 1, "", "register_load_state_dict_post_hook"], [133, 1, 1, "", "register_load_state_dict_pre_hook"], [133, 1, 1, "", "register_module"], [133, 1, 1, "", "register_parameter"], [133, 1, 1, "", "register_state_dict_post_hook"], [133, 1, 1, "", "register_state_dict_pre_hook"], [133, 1, 1, "", "requires_grad_"], [133, 1, 1, "", "reset"], [133, 2, 1, "", "reset_keys"], [133, 2, 1, "", "reward_key"], [133, 2, 1, "", "reward_keys"], [133, 2, 1, "", "reward_spec"], [133, 2, 1, "", "reward_spec_unbatched"], [133, 1, 1, "", "rollout"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "", "set_info_dict_reader"], [133, 1, 1, "", "set_seed"], [133, 1, 1, "", "set_spec_lock_"], [133, 1, 1, "", "set_submodule"], [133, 2, 1, "", "shape"], [133, 1, 1, "", "share_memory"], [133, 2, 1, "", "specs"], [133, 1, 1, "", "state_dict"], [133, 2, 1, "", "state_keys"], [133, 2, 1, "", "state_spec"], [133, 2, 1, "", "state_spec_unbatched"], [133, 1, 1, "", "step"], [133, 1, 1, "", "step_and_maybe_reset"], [133, 1, 1, "", "step_mdp"], [133, 1, 1, "", "to"], [133, 1, 1, "", "to_empty"], [133, 1, 1, "", "train"], [133, 1, 1, "", "type"], [133, 1, 1, "", "xpu"], [133, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[140, 2, 1, "", "action_key"], [140, 2, 1, "", "action_keys"], [140, 2, 1, "", "action_spec"], [140, 2, 1, "", "action_spec_unbatched"], [140, 1, 1, "", "add_module"], [140, 1, 1, "", "add_truncated_keys"], [140, 1, 1, "", "all_actions"], [140, 1, 1, "", "any_done"], [140, 1, 1, "", "append_transform"], [140, 1, 1, "", "apply"], [140, 1, 1, "", "auto_specs_"], [140, 2, 1, "", "batch_dims"], [140, 2, 1, "", "batch_locked"], [140, 2, 1, "", "batch_size"], [140, 1, 1, "", "bfloat16"], [140, 1, 1, "", "buffers"], [140, 1, 1, "", "cardinality"], [140, 1, 1, "", "check_env_specs"], [140, 1, 1, "", "children"], [140, 1, 1, "", "compile"], [140, 1, 1, "", "cpu"], [140, 1, 1, "", "cuda"], [140, 2, 1, "", "done_key"], [140, 2, 1, "", "done_keys"], [140, 2, 1, "", "done_keys_groups"], [140, 2, 1, "", "done_spec"], [140, 2, 1, "", "done_spec_unbatched"], [140, 1, 1, "", "double"], [140, 1, 1, "", "empty_cache"], [140, 1, 1, "", "eval"], [140, 1, 1, "", "extra_repr"], [140, 1, 1, "", "fake_tensordict"], [140, 1, 1, "", "float"], [140, 1, 1, "", "forward"], [140, 1, 1, "id0", "from_dataloader"], [140, 2, 1, "", "full_action_spec"], [140, 2, 1, "", "full_action_spec_unbatched"], [140, 2, 1, "", "full_done_spec"], [140, 2, 1, "", "full_done_spec_unbatched"], [140, 2, 1, "", "full_observation_spec_unbatched"], [140, 2, 1, "", "full_reward_spec"], [140, 2, 1, "", "full_reward_spec_unbatched"], [140, 2, 1, "", "full_state_spec"], [140, 2, 1, "", "full_state_spec_unbatched"], [140, 1, 1, "", "get_buffer"], [140, 1, 1, "", "get_extra_state"], [140, 1, 1, "", "get_parameter"], [140, 1, 1, "", "get_submodule"], [140, 1, 1, "", "half"], [140, 2, 1, "", "input_spec"], [140, 2, 1, "", "input_spec_unbatched"], [140, 1, 1, "", "ipu"], [140, 2, 1, "", "is_spec_locked"], [140, 1, 1, "", "load_state_dict"], [140, 1, 1, "", "maybe_reset"], [140, 1, 1, "", "modules"], [140, 1, 1, "", "mtia"], [140, 1, 1, "", "named_buffers"], [140, 1, 1, "", "named_children"], [140, 1, 1, "", "named_modules"], [140, 1, 1, "", "named_parameters"], [140, 2, 1, "", "observation_keys"], [140, 2, 1, "", "observation_spec"], [140, 2, 1, "", "observation_spec_unbatched"], [140, 2, 1, "", "output_spec"], [140, 2, 1, "", "output_spec_unbatched"], [140, 1, 1, "", "parameters"], [140, 1, 1, "", "rand_action"], [140, 1, 1, "", "rand_step"], [140, 1, 1, "", "register_backward_hook"], [140, 1, 1, "", "register_buffer"], [140, 1, 1, "", "register_forward_hook"], [140, 1, 1, "", "register_forward_pre_hook"], [140, 1, 1, "", "register_full_backward_hook"], [140, 1, 1, "", "register_full_backward_pre_hook"], [140, 1, 1, "", "register_gym"], [140, 1, 1, "", "register_load_state_dict_post_hook"], [140, 1, 1, "", "register_load_state_dict_pre_hook"], [140, 1, 1, "", "register_module"], [140, 1, 1, "", "register_parameter"], [140, 1, 1, "", "register_state_dict_post_hook"], [140, 1, 1, "", "register_state_dict_pre_hook"], [140, 1, 1, "", "requires_grad_"], [140, 1, 1, "", "reset"], [140, 2, 1, "", "reset_keys"], [140, 2, 1, "", "reward_key"], [140, 2, 1, "", "reward_keys"], [140, 2, 1, "", "reward_spec"], [140, 2, 1, "", "reward_spec_unbatched"], [140, 1, 1, "", "rollout"], [140, 1, 1, "", "set_extra_state"], [140, 1, 1, "", "set_seed"], [140, 1, 1, "", "set_spec_lock_"], [140, 1, 1, "", "set_submodule"], [140, 2, 1, "", "shape"], [140, 1, 1, "", "share_memory"], [140, 2, 1, "", "specs"], [140, 1, 1, "", "state_dict"], [140, 2, 1, "", "state_keys"], [140, 2, 1, "", "state_spec"], [140, 2, 1, "", "state_spec_unbatched"], [140, 1, 1, "", "step"], [140, 1, 1, "", "step_and_maybe_reset"], [140, 1, 1, "", "step_mdp"], [140, 1, 1, "", "to"], [140, 1, 1, "", "to_empty"], [140, 1, 1, "", "train"], [140, 1, 1, "", "type"], [140, 1, 1, "", "xpu"], [140, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[141, 2, 1, "", "action_key"], [141, 2, 1, "", "action_keys"], [141, 2, 1, "", "action_spec"], [141, 2, 1, "", "action_spec_unbatched"], [141, 1, 1, "", "add_module"], [141, 1, 1, "", "add_truncated_keys"], [141, 1, 1, "", "all_actions"], [141, 1, 1, "", "any_done"], [141, 1, 1, "", "append_transform"], [141, 1, 1, "", "apply"], [141, 1, 1, "", "auto_specs_"], [141, 2, 1, "", "batch_dims"], [141, 2, 1, "", "batch_locked"], [141, 2, 1, "", "batch_size"], [141, 1, 1, "", "bfloat16"], [141, 1, 1, "", "buffers"], [141, 1, 1, "", "cardinality"], [141, 1, 1, "", "check_env_specs"], [141, 1, 1, "", "children"], [141, 1, 1, "", "compile"], [141, 1, 1, "", "cpu"], [141, 1, 1, "", "cuda"], [141, 2, 1, "", "done_key"], [141, 2, 1, "", "done_keys"], [141, 2, 1, "", "done_keys_groups"], [141, 2, 1, "", "done_spec"], [141, 2, 1, "", "done_spec_unbatched"], [141, 1, 1, "", "double"], [141, 1, 1, "", "empty_cache"], [141, 1, 1, "", "eval"], [141, 1, 1, "", "extra_repr"], [141, 1, 1, "", "fake_tensordict"], [141, 1, 1, "", "float"], [141, 1, 1, "", "forward"], [141, 2, 1, "", "full_action_spec"], [141, 2, 1, "", "full_action_spec_unbatched"], [141, 2, 1, "", "full_done_spec"], [141, 2, 1, "", "full_done_spec_unbatched"], [141, 2, 1, "", "full_observation_spec_unbatched"], [141, 2, 1, "", "full_reward_spec"], [141, 2, 1, "", "full_reward_spec_unbatched"], [141, 2, 1, "", "full_state_spec"], [141, 2, 1, "", "full_state_spec_unbatched"], [141, 1, 1, "", "get_buffer"], [141, 1, 1, "", "get_extra_state"], [141, 1, 1, "", "get_parameter"], [141, 1, 1, "", "get_submodule"], [141, 1, 1, "", "half"], [141, 2, 1, "", "input_spec"], [141, 2, 1, "", "input_spec_unbatched"], [141, 1, 1, "", "ipu"], [141, 2, 1, "", "is_spec_locked"], [141, 1, 1, "", "load_state_dict"], [141, 1, 1, "", "make_tensordict"], [141, 1, 1, "", "maybe_reset"], [141, 1, 1, "", "modules"], [141, 1, 1, "", "mtia"], [141, 1, 1, "", "named_buffers"], [141, 1, 1, "", "named_children"], [141, 1, 1, "", "named_modules"], [141, 1, 1, "", "named_parameters"], [141, 2, 1, "", "observation_keys"], [141, 2, 1, "", "observation_spec"], [141, 2, 1, "", "observation_spec_unbatched"], [141, 2, 1, "", "output_spec"], [141, 2, 1, "", "output_spec_unbatched"], [141, 1, 1, "", "parameters"], [141, 1, 1, "", "rand_action"], [141, 1, 1, "", "rand_step"], [141, 1, 1, "", "register_backward_hook"], [141, 1, 1, "", "register_buffer"], [141, 1, 1, "", "register_forward_hook"], [141, 1, 1, "", "register_forward_pre_hook"], [141, 1, 1, "", "register_full_backward_hook"], [141, 1, 1, "", "register_full_backward_pre_hook"], [141, 1, 1, "", "register_gym"], [141, 1, 1, "", "register_load_state_dict_post_hook"], [141, 1, 1, "", "register_load_state_dict_pre_hook"], [141, 1, 1, "", "register_module"], [141, 1, 1, "", "register_parameter"], [141, 1, 1, "", "register_state_dict_post_hook"], [141, 1, 1, "", "register_state_dict_pre_hook"], [141, 1, 1, "", "requires_grad_"], [141, 1, 1, "", "reset"], [141, 2, 1, "", "reset_keys"], [141, 2, 1, "", "reward_key"], [141, 2, 1, "", "reward_keys"], [141, 2, 1, "", "reward_spec"], [141, 2, 1, "", "reward_spec_unbatched"], [141, 1, 1, "", "rollout"], [141, 1, 1, "", "set_extra_state"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "set_spec_lock_"], [141, 1, 1, "", "set_submodule"], [141, 2, 1, "", "shape"], [141, 1, 1, "", "share_memory"], [141, 2, 1, "", "specs"], [141, 1, 1, "", "state_dict"], [141, 2, 1, "", "state_keys"], [141, 2, 1, "", "state_spec"], [141, 2, 1, "", "state_spec_unbatched"], [141, 1, 1, "", "step"], [141, 1, 1, "", "step_and_maybe_reset"], [141, 1, 1, "", "step_mdp"], [141, 1, 1, "", "to"], [141, 1, 1, "", "to_empty"], [141, 1, 1, "", "train"], [141, 1, 1, "", "type"], [141, 1, 1, "", "xpu"], [141, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[153, 2, 1, "", "action_key"], [153, 2, 1, "", "action_keys"], [153, 2, 1, "", "action_spec"], [153, 2, 1, "", "action_spec_unbatched"], [153, 1, 1, "", "add_module"], [153, 1, 1, "", "add_truncated_keys"], [153, 1, 1, "", "all_actions"], [153, 1, 1, "", "any_done"], [153, 1, 1, "", "append_transform"], [153, 1, 1, "", "apply"], [153, 1, 1, "", "auto_specs_"], [153, 2, 1, "", "batch_dims"], [153, 2, 1, "", "batch_locked"], [153, 2, 1, "", "batch_size"], [153, 1, 1, "", "bfloat16"], [153, 1, 1, "", "buffers"], [153, 1, 1, "", "cardinality"], [153, 1, 1, "", "check_env_specs"], [153, 1, 1, "", "children"], [153, 1, 1, "", "compile"], [153, 1, 1, "", "cpu"], [153, 1, 1, "", "cuda"], [153, 2, 1, "", "done_key"], [153, 2, 1, "", "done_keys"], [153, 2, 1, "", "done_keys_groups"], [153, 2, 1, "", "done_spec"], [153, 2, 1, "", "done_spec_unbatched"], [153, 1, 1, "", "double"], [153, 1, 1, "", "empty_cache"], [153, 1, 1, "", "eval"], [153, 1, 1, "", "extra_repr"], [153, 1, 1, "", "fake_tensordict"], [153, 1, 1, "", "float"], [153, 1, 1, "", "forward"], [153, 2, 1, "", "full_action_spec"], [153, 2, 1, "", "full_action_spec_unbatched"], [153, 2, 1, "", "full_done_spec"], [153, 2, 1, "", "full_done_spec_unbatched"], [153, 2, 1, "", "full_observation_spec_unbatched"], [153, 2, 1, "", "full_reward_spec"], [153, 2, 1, "", "full_reward_spec_unbatched"], [153, 2, 1, "", "full_state_spec"], [153, 2, 1, "", "full_state_spec_unbatched"], [153, 1, 1, "", "get_buffer"], [153, 1, 1, "", "get_extra_state"], [153, 1, 1, "", "get_parameter"], [153, 1, 1, "", "get_submodule"], [153, 1, 1, "", "half"], [153, 2, 1, "", "input_spec"], [153, 2, 1, "", "input_spec_unbatched"], [153, 1, 1, "", "ipu"], [153, 2, 1, "", "is_spec_locked"], [153, 1, 1, "", "load_state_dict"], [153, 1, 1, "", "maybe_reset"], [153, 1, 1, "", "modules"], [153, 1, 1, "", "mtia"], [153, 1, 1, "", "named_buffers"], [153, 1, 1, "", "named_children"], [153, 1, 1, "", "named_modules"], [153, 1, 1, "", "named_parameters"], [153, 2, 1, "", "observation_keys"], [153, 2, 1, "", "observation_spec"], [153, 2, 1, "", "observation_spec_unbatched"], [153, 2, 1, "", "output_spec"], [153, 2, 1, "", "output_spec_unbatched"], [153, 1, 1, "", "parameters"], [153, 1, 1, "", "rand_action"], [153, 1, 1, "", "rand_step"], [153, 1, 1, "", "register_backward_hook"], [153, 1, 1, "", "register_buffer"], [153, 1, 1, "", "register_forward_hook"], [153, 1, 1, "", "register_forward_pre_hook"], [153, 1, 1, "", "register_full_backward_hook"], [153, 1, 1, "", "register_full_backward_pre_hook"], [153, 1, 1, "", "register_gym"], [153, 1, 1, "", "register_load_state_dict_post_hook"], [153, 1, 1, "", "register_load_state_dict_pre_hook"], [153, 1, 1, "", "register_module"], [153, 1, 1, "", "register_parameter"], [153, 1, 1, "", "register_state_dict_post_hook"], [153, 1, 1, "", "register_state_dict_pre_hook"], [153, 1, 1, "", "requires_grad_"], [153, 1, 1, "", "reset"], [153, 2, 1, "", "reset_keys"], [153, 2, 1, "", "reward_key"], [153, 2, 1, "", "reward_keys"], [153, 2, 1, "", "reward_spec"], [153, 2, 1, "", "reward_spec_unbatched"], [153, 1, 1, "", "rollout"], [153, 1, 1, "", "set_extra_state"], [153, 1, 1, "", "set_seed"], [153, 1, 1, "", "set_spec_lock_"], [153, 1, 1, "", "set_submodule"], [153, 2, 1, "", "shape"], [153, 1, 1, "", "share_memory"], [153, 2, 1, "", "specs"], [153, 1, 1, "", "state_dict"], [153, 2, 1, "", "state_keys"], [153, 2, 1, "", "state_spec"], [153, 2, 1, "", "state_spec_unbatched"], [153, 1, 1, "", "step"], [153, 1, 1, "", "step_and_maybe_reset"], [153, 1, 1, "", "step_mdp"], [153, 1, 1, "", "to"], [153, 1, 1, "", "to_empty"], [153, 1, 1, "", "train"], [153, 1, 1, "", "type"], [153, 1, 1, "", "update_kwargs"], [153, 1, 1, "", "xpu"], [153, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[154, 2, 1, "", "action_key"], [154, 2, 1, "", "action_keys"], [154, 2, 1, "", "action_spec"], [154, 2, 1, "", "action_spec_unbatched"], [154, 1, 1, "", "add_module"], [154, 1, 1, "", "add_truncated_keys"], [154, 1, 1, "", "all_actions"], [154, 1, 1, "", "any_done"], [154, 1, 1, "", "append_transform"], [154, 1, 1, "", "apply"], [154, 1, 1, "", "auto_specs_"], [154, 2, 1, "", "batch_dims"], [154, 2, 1, "", "batch_size"], [154, 1, 1, "", "bfloat16"], [154, 1, 1, "", "buffers"], [154, 1, 1, "", "cardinality"], [154, 1, 1, "", "check_env_specs"], [154, 1, 1, "", "children"], [154, 1, 1, "", "compile"], [154, 1, 1, "", "cpu"], [154, 1, 1, "", "cuda"], [154, 2, 1, "", "done_key"], [154, 2, 1, "", "done_keys"], [154, 2, 1, "", "done_keys_groups"], [154, 2, 1, "", "done_spec"], [154, 2, 1, "", "done_spec_unbatched"], [154, 1, 1, "", "double"], [154, 1, 1, "", "empty_cache"], [154, 1, 1, "", "eval"], [154, 1, 1, "", "extra_repr"], [154, 1, 1, "", "fake_tensordict"], [154, 1, 1, "", "float"], [154, 1, 1, "", "forward"], [154, 2, 1, "", "full_action_spec"], [154, 2, 1, "", "full_action_spec_unbatched"], [154, 2, 1, "", "full_done_spec"], [154, 2, 1, "", "full_done_spec_unbatched"], [154, 2, 1, "", "full_observation_spec_unbatched"], [154, 2, 1, "", "full_reward_spec"], [154, 2, 1, "", "full_reward_spec_unbatched"], [154, 2, 1, "", "full_state_spec"], [154, 2, 1, "", "full_state_spec_unbatched"], [154, 1, 1, "", "gen_params"], [154, 1, 1, "", "get_buffer"], [154, 1, 1, "", "get_extra_state"], [154, 1, 1, "", "get_parameter"], [154, 1, 1, "", "get_submodule"], [154, 1, 1, "", "half"], [154, 2, 1, "", "input_spec"], [154, 2, 1, "", "input_spec_unbatched"], [154, 1, 1, "", "ipu"], [154, 2, 1, "", "is_spec_locked"], [154, 1, 1, "", "load_state_dict"], [154, 1, 1, "", "maybe_reset"], [154, 1, 1, "", "modules"], [154, 1, 1, "", "mtia"], [154, 1, 1, "", "named_buffers"], [154, 1, 1, "", "named_children"], [154, 1, 1, "", "named_modules"], [154, 1, 1, "", "named_parameters"], [154, 2, 1, "", "observation_keys"], [154, 2, 1, "", "observation_spec"], [154, 2, 1, "", "observation_spec_unbatched"], [154, 2, 1, "", "output_spec"], [154, 2, 1, "", "output_spec_unbatched"], [154, 1, 1, "", "parameters"], [154, 1, 1, "", "rand_action"], [154, 1, 1, "", "rand_step"], [154, 1, 1, "", "register_backward_hook"], [154, 1, 1, "", "register_buffer"], [154, 1, 1, "", "register_forward_hook"], [154, 1, 1, "", "register_forward_pre_hook"], [154, 1, 1, "", "register_full_backward_hook"], [154, 1, 1, "", "register_full_backward_pre_hook"], [154, 1, 1, "", "register_gym"], [154, 1, 1, "", "register_load_state_dict_post_hook"], [154, 1, 1, "", "register_load_state_dict_pre_hook"], [154, 1, 1, "", "register_module"], [154, 1, 1, "", "register_parameter"], [154, 1, 1, "", "register_state_dict_post_hook"], [154, 1, 1, "", "register_state_dict_pre_hook"], [154, 1, 1, "", "requires_grad_"], [154, 1, 1, "", "reset"], [154, 2, 1, "", "reset_keys"], [154, 2, 1, "", "reward_key"], [154, 2, 1, "", "reward_keys"], [154, 2, 1, "", "reward_spec"], [154, 2, 1, "", "reward_spec_unbatched"], [154, 1, 1, "", "rollout"], [154, 1, 1, "", "set_extra_state"], [154, 1, 1, "", "set_seed"], [154, 1, 1, "", "set_spec_lock_"], [154, 1, 1, "", "set_submodule"], [154, 2, 1, "", "shape"], [154, 1, 1, "", "share_memory"], [154, 2, 1, "", "specs"], [154, 1, 1, "", "state_dict"], [154, 2, 1, "", "state_keys"], [154, 2, 1, "", "state_spec"], [154, 2, 1, "", "state_spec_unbatched"], [154, 1, 1, "", "step"], [154, 1, 1, "", "step_and_maybe_reset"], [154, 1, 1, "", "step_mdp"], [154, 1, 1, "", "to"], [154, 1, 1, "", "to_empty"], [154, 1, 1, "", "train"], [154, 1, 1, "", "type"], [154, 1, 1, "", "xpu"], [154, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[161, 2, 1, "", "action_key"], [161, 2, 1, "", "action_keys"], [161, 2, 1, "", "action_spec"], [161, 2, 1, "", "action_spec_unbatched"], [161, 1, 1, "", "add_module"], [161, 1, 1, "", "add_truncated_keys"], [161, 1, 1, "", "all_actions"], [161, 1, 1, "", "any_done"], [161, 1, 1, "", "append_transform"], [161, 1, 1, "", "apply"], [161, 1, 1, "", "auto_specs_"], [161, 2, 1, "", "batch_dims"], [161, 2, 1, "", "batch_locked"], [161, 2, 1, "", "batch_size"], [161, 1, 1, "", "bfloat16"], [161, 1, 1, "", "buffers"], [161, 1, 1, "", "cardinality"], [161, 1, 1, "", "check_env_specs"], [161, 1, 1, "", "children"], [161, 1, 1, "", "compile"], [161, 1, 1, "", "cpu"], [161, 1, 1, "", "cuda"], [161, 2, 1, "", "done_key"], [161, 2, 1, "", "done_keys"], [161, 2, 1, "", "done_keys_groups"], [161, 2, 1, "", "done_spec"], [161, 2, 1, "", "done_spec_unbatched"], [161, 1, 1, "", "double"], [161, 1, 1, "", "empty_cache"], [161, 1, 1, "", "eval"], [161, 1, 1, "", "extra_repr"], [161, 1, 1, "", "fake_tensordict"], [161, 1, 1, "", "float"], [161, 1, 1, "", "forward"], [161, 2, 1, "", "full_action_spec"], [161, 2, 1, "", "full_action_spec_unbatched"], [161, 2, 1, "", "full_done_spec"], [161, 2, 1, "", "full_done_spec_unbatched"], [161, 2, 1, "", "full_observation_spec_unbatched"], [161, 2, 1, "", "full_reward_spec"], [161, 2, 1, "", "full_reward_spec_unbatched"], [161, 2, 1, "", "full_state_spec"], [161, 2, 1, "", "full_state_spec_unbatched"], [161, 1, 1, "", "get_buffer"], [161, 1, 1, "", "get_extra_state"], [161, 1, 1, "", "get_parameter"], [161, 1, 1, "", "get_submodule"], [161, 1, 1, "", "half"], [161, 2, 1, "", "input_spec"], [161, 2, 1, "", "input_spec_unbatched"], [161, 1, 1, "", "ipu"], [161, 2, 1, "", "is_spec_locked"], [161, 1, 1, "", "load_state_dict"], [161, 1, 1, "", "maybe_reset"], [161, 1, 1, "", "modules"], [161, 1, 1, "", "mtia"], [161, 1, 1, "", "named_buffers"], [161, 1, 1, "", "named_children"], [161, 1, 1, "", "named_modules"], [161, 1, 1, "", "named_parameters"], [161, 2, 1, "", "observation_keys"], [161, 2, 1, "", "observation_spec"], [161, 2, 1, "", "observation_spec_unbatched"], [161, 2, 1, "", "output_spec"], [161, 2, 1, "", "output_spec_unbatched"], [161, 1, 1, "", "parameters"], [161, 1, 1, "", "rand_action"], [161, 1, 1, "", "rand_step"], [161, 1, 1, "", "register_backward_hook"], [161, 1, 1, "", "register_buffer"], [161, 1, 1, "", "register_forward_hook"], [161, 1, 1, "", "register_forward_pre_hook"], [161, 1, 1, "", "register_full_backward_hook"], [161, 1, 1, "", "register_full_backward_pre_hook"], [161, 1, 1, "", "register_gym"], [161, 1, 1, "", "register_load_state_dict_post_hook"], [161, 1, 1, "", "register_load_state_dict_pre_hook"], [161, 1, 1, "", "register_module"], [161, 1, 1, "", "register_parameter"], [161, 1, 1, "", "register_state_dict_post_hook"], [161, 1, 1, "", "register_state_dict_pre_hook"], [161, 1, 1, "", "requires_grad_"], [161, 1, 1, "", "reset"], [161, 2, 1, "", "reset_keys"], [161, 2, 1, "", "reward_key"], [161, 2, 1, "", "reward_keys"], [161, 2, 1, "", "reward_spec"], [161, 2, 1, "", "reward_spec_unbatched"], [161, 1, 1, "", "rollout"], [161, 1, 1, "", "set_extra_state"], [161, 1, 1, "", "set_seed"], [161, 1, 1, "", "set_spec_lock_"], [161, 1, 1, "", "set_submodule"], [161, 2, 1, "", "shape"], [161, 1, 1, "", "share_memory"], [161, 2, 1, "", "specs"], [161, 1, 1, "", "state_dict"], [161, 2, 1, "", "state_keys"], [161, 2, 1, "", "state_spec"], [161, 2, 1, "", "state_spec_unbatched"], [161, 1, 1, "", "step"], [161, 1, 1, "", "step_and_maybe_reset"], [161, 1, 1, "", "step_mdp"], [161, 1, 1, "", "to"], [161, 1, 1, "", "to_empty"], [161, 1, 1, "", "train"], [161, 1, 1, "", "type"], [161, 1, 1, "", "update_kwargs"], [161, 1, 1, "", "xpu"], [161, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[162, 2, 1, "", "action_key"], [162, 2, 1, "", "action_keys"], [162, 2, 1, "", "action_spec"], [162, 2, 1, "", "action_spec_unbatched"], [162, 1, 1, "", "add_module"], [162, 1, 1, "", "add_truncated_keys"], [162, 1, 1, "", "all_actions"], [162, 1, 1, "", "any_done"], [162, 1, 1, "", "append_transform"], [162, 1, 1, "", "apply"], [162, 1, 1, "", "auto_specs_"], [162, 2, 1, "", "batch_dims"], [162, 2, 1, "", "batch_size"], [162, 1, 1, "", "bfloat16"], [162, 1, 1, "", "buffers"], [162, 1, 1, "", "cardinality"], [162, 1, 1, "", "check_env_specs"], [162, 1, 1, "", "children"], [162, 1, 1, "", "compile"], [162, 1, 1, "", "cpu"], [162, 1, 1, "", "cuda"], [162, 2, 1, "", "done_key"], [162, 2, 1, "", "done_keys"], [162, 2, 1, "", "done_keys_groups"], [162, 2, 1, "", "done_spec"], [162, 2, 1, "", "done_spec_unbatched"], [162, 1, 1, "", "double"], [162, 1, 1, "", "empty_cache"], [162, 1, 1, "", "eval"], [162, 1, 1, "", "extra_repr"], [162, 1, 1, "", "fake_tensordict"], [162, 1, 1, "", "float"], [162, 1, 1, "", "forward"], [162, 2, 1, "", "full_action_spec"], [162, 2, 1, "", "full_action_spec_unbatched"], [162, 2, 1, "", "full_done_spec"], [162, 2, 1, "", "full_done_spec_unbatched"], [162, 2, 1, "", "full_observation_spec_unbatched"], [162, 2, 1, "", "full_reward_spec"], [162, 2, 1, "", "full_reward_spec_unbatched"], [162, 2, 1, "", "full_state_spec"], [162, 2, 1, "", "full_state_spec_unbatched"], [162, 1, 1, "", "get_buffer"], [162, 1, 1, "", "get_extra_state"], [162, 1, 1, "", "get_parameter"], [162, 1, 1, "", "get_submodule"], [162, 1, 1, "", "half"], [162, 2, 1, "", "input_spec"], [162, 2, 1, "", "input_spec_unbatched"], [162, 1, 1, "", "ipu"], [162, 2, 1, "", "is_spec_locked"], [162, 1, 1, "", "load_state_dict"], [162, 1, 1, "", "maybe_reset"], [162, 1, 1, "", "modules"], [162, 1, 1, "", "mtia"], [162, 1, 1, "", "named_buffers"], [162, 1, 1, "", "named_children"], [162, 1, 1, "", "named_modules"], [162, 1, 1, "", "named_parameters"], [162, 2, 1, "", "observation_keys"], [162, 2, 1, "", "observation_spec"], [162, 2, 1, "", "observation_spec_unbatched"], [162, 2, 1, "", "output_spec"], [162, 2, 1, "", "output_spec_unbatched"], [162, 1, 1, "", "parameters"], [162, 1, 1, "", "rand_action"], [162, 1, 1, "", "rand_step"], [162, 1, 1, "", "register_backward_hook"], [162, 1, 1, "", "register_buffer"], [162, 1, 1, "", "register_forward_hook"], [162, 1, 1, "", "register_forward_pre_hook"], [162, 1, 1, "", "register_full_backward_hook"], [162, 1, 1, "", "register_full_backward_pre_hook"], [162, 1, 1, "", "register_gym"], [162, 1, 1, "", "register_load_state_dict_post_hook"], [162, 1, 1, "", "register_load_state_dict_pre_hook"], [162, 1, 1, "", "register_module"], [162, 1, 1, "", "register_parameter"], [162, 1, 1, "", "register_state_dict_post_hook"], [162, 1, 1, "", "register_state_dict_pre_hook"], [162, 1, 1, "", "requires_grad_"], [162, 1, 1, "", "reset"], [162, 2, 1, "", "reset_keys"], [162, 2, 1, "", "reward_key"], [162, 2, 1, "", "reward_keys"], [162, 2, 1, "", "reward_spec"], [162, 2, 1, "", "reward_spec_unbatched"], [162, 1, 1, "", "rollout"], [162, 1, 1, "", "set_extra_state"], [162, 1, 1, "", "set_seed"], [162, 1, 1, "", "set_spec_lock_"], [162, 1, 1, "", "set_submodule"], [162, 2, 1, "", "shape"], [162, 1, 1, "", "share_memory"], [162, 2, 1, "", "specs"], [162, 1, 1, "", "state_dict"], [162, 2, 1, "", "state_keys"], [162, 2, 1, "", "state_spec"], [162, 2, 1, "", "state_spec_unbatched"], [162, 1, 1, "", "step"], [162, 1, 1, "", "step_and_maybe_reset"], [162, 1, 1, "", "step_mdp"], [162, 1, 1, "", "to"], [162, 1, 1, "", "to_empty"], [162, 1, 1, "", "train"], [162, 1, 1, "", "type"], [162, 1, 1, "", "xpu"], [162, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[173, 3, 1, "", "DreamerDecoder"], [174, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[180, 0, 1, "", "ActionDiscretizer"], [181, 0, 1, "", "ActionMask"], [182, 0, 1, "", "AutoResetEnv"], [183, 0, 1, "", "AutoResetTransform"], [184, 0, 1, "", "BatchSizeTransform"], [185, 0, 1, "", "BinarizeReward"], [186, 0, 1, "", "BurnInTransform"], [187, 0, 1, "", "CatFrames"], [188, 0, 1, "", "CatTensors"], [189, 0, 1, "", "CenterCrop"], [190, 0, 1, "", "ClipTransform"], [191, 0, 1, "", "Compose"], [192, 0, 1, "", "ConditionalSkip"], [193, 0, 1, "", "Crop"], [194, 0, 1, "", "DTypeCastTransform"], [195, 0, 1, "", "DataLoadingPrimer"], [196, 0, 1, "", "DeviceCastTransform"], [197, 0, 1, "", "DiscreteActionProjection"], [198, 0, 1, "", "DoubleToFloat"], [199, 0, 1, "", "EndOfLifeTransform"], [200, 0, 1, "", "ExcludeTransform"], [201, 0, 1, "", "FiniteTensorDictCheck"], [202, 0, 1, "", "FlattenObservation"], [203, 0, 1, "", "FrameSkipTransform"], [204, 0, 1, "", "GrayScale"], [205, 0, 1, "", "Hash"], [206, 0, 1, "", "InitTracker"], [207, 0, 1, "", "KLRewardTransform"], [208, 0, 1, "", "LineariseRewards"], [209, 0, 1, "", "MultiAction"], [210, 0, 1, "", "NoopResetEnv"], [211, 0, 1, "", "ObservationNorm"], [212, 0, 1, "", "ObservationTransform"], [213, 0, 1, "", "PermuteTransform"], [214, 0, 1, "", "PinMemoryTransform"], [215, 0, 1, "", "R3MTransform"], [216, 0, 1, "", "RandomCropTensorDict"], [217, 0, 1, "", "RemoveEmptySpecs"], [218, 0, 1, "", "RenameTransform"], [219, 0, 1, "", "Resize"], [220, 0, 1, "", "Reward2GoTransform"], [221, 0, 1, "", "RewardClipping"], [222, 0, 1, "", "RewardScaling"], [223, 0, 1, "", "RewardSum"], [224, 0, 1, "", "SelectTransform"], [225, 0, 1, "", "SignTransform"], [226, 0, 1, "", "SqueezeTransform"], [227, 0, 1, "", "Stack"], [228, 0, 1, "", "StepCounter"], [229, 0, 1, "", "TargetReturn"], [230, 0, 1, "", "TensorDictPrimer"], [231, 0, 1, "", "TimeMaxPool"], [232, 0, 1, "", "Timer"], [233, 0, 1, "", "ToTensorImage"], [234, 0, 1, "", "Tokenizer"], [235, 0, 1, "", "TrajCounter"], [236, 0, 1, "", "Transform"], [237, 0, 1, "", "TransformedEnv"], [238, 0, 1, "", "UnaryTransform"], [239, 0, 1, "", "UnsqueezeTransform"], [240, 0, 1, "", "VC1Transform"], [241, 0, 1, "", "VIPRewardTransform"], [242, 0, 1, "", "VIPTransform"], [243, 0, 1, "", "VecGymEnvTransform"], [244, 0, 1, "", "VecNorm"], [245, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[180, 0, 1, "", "SamplingStrategy"], [180, 1, 1, "", "inv"], [180, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[182, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[183, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_env_batch_size"], [184, 1, 1, "", "transform_input_spec"], [184, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[186, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "make_rb_transform_and_sampler"], [187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[191, 1, 1, "", "append"], [191, 1, 1, "", "forward"], [191, 1, 1, "", "init"], [191, 1, 1, "", "insert"], [191, 1, 1, "", "to"], [191, 1, 1, "", "transform_action_spec"], [191, 1, 1, "", "transform_env_batch_size"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[192, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[197, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "register_keys"], [199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[201, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[203, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[204, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[205, 1, 1, "", "get_input_from_hash"], [205, 1, 1, "", "reproducible_hash"], [205, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[208, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[211, 1, 1, "", "init_stats"], [211, 1, 1, "", "transform_action_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[214, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[215, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[216, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[219, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[220, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[221, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[222, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[225, 1, 1, "", "transform_observation_spec"], [225, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_done_spec"], [227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_observation_spec"], [227, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_input_spec"], [228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "transform_input_spec"], [229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "to"], [230, 1, 1, "", "transform_input_spec"], [230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[233, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_done_spec"], [234, 1, 1, "", "transform_input_spec"], [234, 1, 1, "", "transform_observation_spec"], [234, 1, 1, "", "transform_output_spec"], [234, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "load_state_dict"], [235, 1, 1, "", "state_dict"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[236, 1, 1, "", "clone"], [236, 2, 1, "", "container"], [236, 1, 1, "", "forward"], [236, 1, 1, "", "init"], [236, 1, 1, "", "inv"], [236, 2, 1, "", "parent"], [236, 1, 1, "", "reset_parent"], [236, 1, 1, "", "set_container"], [236, 1, 1, "", "to"], [236, 1, 1, "", "transform_action_spec"], [236, 1, 1, "", "transform_done_spec"], [236, 1, 1, "", "transform_env_batch_size"], [236, 1, 1, "", "transform_env_device"], [236, 1, 1, "", "transform_input_spec"], [236, 1, 1, "", "transform_observation_spec"], [236, 1, 1, "", "transform_output_spec"], [236, 1, 1, "", "transform_reward_spec"], [236, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[237, 1, 1, "", "add_truncated_keys"], [237, 1, 1, "", "append_transform"], [237, 2, 1, "", "batch_locked"], [237, 2, 1, "", "batch_size"], [237, 1, 1, "", "empty_cache"], [237, 1, 1, "", "eval"], [237, 2, 1, "", "input_spec"], [237, 1, 1, "", "insert_transform"], [237, 1, 1, "", "load_state_dict"], [237, 2, 1, "", "output_spec"], [237, 1, 1, "", "rand_action"], [237, 1, 1, "", "set_missing_tolerance"], [237, 1, 1, "", "set_seed"], [237, 1, 1, "", "state_dict"], [237, 1, 1, "", "to"], [237, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[238, 1, 1, "", "transform_action_spec"], [238, 1, 1, "", "transform_done_spec"], [238, 1, 1, "", "transform_input_spec"], [238, 1, 1, "", "transform_observation_spec"], [238, 1, 1, "", "transform_output_spec"], [238, 1, 1, "", "transform_reward_spec"], [238, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_reward_spec"], [239, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_noload_model"], [240, 1, 1, "", "to"], [240, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[242, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[244, 1, 1, "", "build_td_for_shared_vecnorm"], [244, 1, 1, "", "forward"], [244, 1, 1, "", "freeze"], [244, 1, 1, "", "frozen_copy"], [244, 1, 1, "", "get_extra_state"], [244, 2, 1, "", "loc"], [244, 2, 1, "", "scale"], [244, 1, 1, "", "set_extra_state"], [244, 2, 1, "", "standard_normal"], [244, 1, 1, "", "to_observation_norm"], [244, 1, 1, "", "transform_observation_spec"], [244, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[246, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[246, 1, 1, "", "add_module"], [246, 1, 1, "", "apply"], [246, 1, 1, "", "bfloat16"], [246, 1, 1, "", "buffers"], [246, 1, 1, "", "children"], [246, 1, 1, "", "compile"], [246, 2, 1, "", "container"], [246, 1, 1, "", "cpu"], [246, 1, 1, "", "cuda"], [246, 1, 1, "", "double"], [246, 1, 1, "", "eval"], [246, 1, 1, "", "extra_repr"], [246, 1, 1, "", "float"], [246, 1, 1, "", "forward"], [246, 1, 1, "", "get_buffer"], [246, 1, 1, "", "get_extra_state"], [246, 1, 1, "", "get_parameter"], [246, 1, 1, "", "get_submodule"], [246, 1, 1, "", "half"], [246, 1, 1, "", "init"], [246, 1, 1, "", "inv"], [246, 1, 1, "", "ipu"], [246, 1, 1, "", "load_state_dict"], [246, 1, 1, "", "modules"], [246, 1, 1, "", "mtia"], [246, 2, 1, "", "n_steps"], [246, 1, 1, "", "named_buffers"], [246, 1, 1, "", "named_children"], [246, 1, 1, "", "named_modules"], [246, 1, 1, "", "named_parameters"], [246, 1, 1, "", "parameters"], [246, 2, 1, "", "parent"], [246, 1, 1, "", "register_backward_hook"], [246, 1, 1, "", "register_buffer"], [246, 1, 1, "", "register_forward_hook"], [246, 1, 1, "", "register_forward_pre_hook"], [246, 1, 1, "", "register_full_backward_hook"], [246, 1, 1, "", "register_full_backward_pre_hook"], [246, 1, 1, "", "register_load_state_dict_post_hook"], [246, 1, 1, "", "register_load_state_dict_pre_hook"], [246, 1, 1, "", "register_module"], [246, 1, 1, "", "register_parameter"], [246, 1, 1, "", "register_state_dict_post_hook"], [246, 1, 1, "", "register_state_dict_pre_hook"], [246, 1, 1, "", "requires_grad_"], [246, 1, 1, "", "set_extra_state"], [246, 1, 1, "", "set_submodule"], [246, 1, 1, "", "share_memory"], [246, 1, 1, "", "state_dict"], [246, 1, 1, "", "to"], [246, 1, 1, "", "to_empty"], [246, 1, 1, "", "train"], [246, 1, 1, "", "transform_action_spec"], [246, 1, 1, "", "transform_done_spec"], [246, 1, 1, "", "transform_env_batch_size"], [246, 1, 1, "", "transform_env_device"], [246, 1, 1, "", "transform_input_spec"], [246, 1, 1, "", "transform_observation_spec"], [246, 1, 1, "", "transform_output_spec"], [246, 1, 1, "", "transform_reward_spec"], [246, 1, 1, "", "transform_state_spec"], [246, 1, 1, "", "type"], [246, 1, 1, "", "xpu"], [246, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[247, 1, 1, "", "get_class_that_defined_method"], [247, 1, 1, "", "import_module"], [247, 1, 1, "", "module_set"], [247, 1, 1, "", "reset"]], "torchrl.modules": [[248, 0, 1, "", "AdditiveGaussianModule"], [249, 0, 1, "", "BatchRenorm1d"], [250, 0, 1, "", "CEMPlanner"], [251, 0, 1, "", "ConsistentDropout"], [252, 0, 1, "", "ConsistentDropoutModule"], [253, 0, 1, "", "Conv3dNet"], [254, 0, 1, "", "ConvNet"], [255, 0, 1, "", "DTActor"], [256, 0, 1, "", "DdpgCnnActor"], [257, 0, 1, "", "DdpgCnnQNet"], [258, 0, 1, "", "DdpgMlpActor"], [259, 0, 1, "", "DdpgMlpQNet"], [260, 0, 1, "", "DecisionTransformer"], [261, 0, 1, "", "Delta"], [262, 0, 1, "", "DistributionalDQNnet"], [263, 0, 1, "", "DistributionalQValueHook"], [264, 0, 1, "", "DreamerActor"], [265, 0, 1, "", "DuelingCnnDQNet"], [266, 0, 1, "", "EGreedyModule"], [267, 0, 1, "", "GRU"], [268, 0, 1, "", "GRUCell"], [269, 0, 1, "", "GRUModule"], [270, 0, 1, "", "IndependentNormal"], [271, 0, 1, "", "LSTM"], [272, 0, 1, "", "LSTMCell"], [273, 0, 1, "", "LSTMModule"], [274, 0, 1, "", "MLP"], [275, 0, 1, "", "MPCPlannerBase"], [276, 0, 1, "", "MPPIPlanner"], [277, 0, 1, "", "MaskedCategorical"], [278, 0, 1, "", "MaskedOneHotCategorical"], [279, 0, 1, "", "MultiAgentConvNet"], [280, 0, 1, "", "MultiAgentMLP"], [281, 0, 1, "", "MultiAgentNetBase"], [282, 0, 1, "", "NoisyLazyLinear"], [283, 0, 1, "", "NoisyLinear"], [284, 0, 1, "", "ObsDecoder"], [285, 0, 1, "", "ObsEncoder"], [286, 0, 1, "", "OneHotCategorical"], [287, 0, 1, "", "OneHotOrdinal"], [288, 0, 1, "", "OnlineDTActor"], [289, 0, 1, "", "Ordinal"], [290, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [291, 0, 1, "", "QMixer"], [292, 0, 1, "", "QValueHook"], [293, 0, 1, "", "RSSMPosterior"], [294, 0, 1, "", "RSSMPrior"], [295, 0, 1, "", "Squeeze2dLayer"], [296, 0, 1, "", "SqueezeLayer"], [297, 0, 1, "", "TanhDelta"], [298, 0, 1, "", "TanhNormal"], [299, 0, 1, "", "TruncatedNormal"], [300, 0, 1, "", "VDNMixer"], [301, 0, 1, "", "VmapModule"], [302, 0, 1, "", "recurrent_mode"], [303, 0, 1, "", "reset_noise"], [304, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[249, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[250, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[251, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[253, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[254, 1, 1, "", "default_atari_dqn"], [254, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[255, 1, 1, "", "default_config"], [255, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[256, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[257, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[258, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[259, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[260, 0, 1, "", "DTConfig"], [260, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[261, 1, 1, "", "expand"], [261, 1, 1, "", "log_prob"], [261, 2, 1, "", "mean"], [261, 2, 1, "", "mode"], [261, 1, 1, "", "rsample"], [261, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[262, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[264, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[265, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "step"]], "torchrl.modules.GRU": [[267, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[268, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_cudnn_based"], [269, 1, 1, "", "make_python_based"], [269, 1, 1, "id0", "make_tensordict_primer"], [269, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[270, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[271, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[272, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_cudnn_based"], [273, 1, 1, "", "make_python_based"], [273, 1, 1, "id0", "make_tensordict_primer"], [273, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[274, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[276, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[277, 1, 1, "", "log_prob"], [277, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[278, 1, 1, "", "log_prob"], [278, 2, 1, "", "mode"], [278, 1, 1, "", "rsample"], [278, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "from_stateful_net"], [281, 1, 1, "", "get_stateful_net"], [281, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[282, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[284, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[285, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[286, 1, 1, "", "entropy"], [286, 1, 1, "", "log_prob"], [286, 2, 1, "", "mode"], [286, 1, 1, "", "rsample"], [286, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[288, 1, 1, "", "default_config"], [288, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[291, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[293, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[294, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[296, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[297, 2, 1, "", "mean"], [297, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[298, 1, 1, "", "get_mode"], [298, 2, 1, "", "mean"], [298, 2, 1, "", "mode"], [298, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[299, 1, 1, "", "log_prob"], [299, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[300, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[301, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[305, 0, 1, "", "Actor"], [306, 0, 1, "", "ActorCriticOperator"], [307, 0, 1, "", "ActorCriticWrapper"], [308, 0, 1, "", "ActorValueOperator"], [309, 0, 1, "", "DecisionTransformerInferenceWrapper"], [310, 0, 1, "", "DistributionalQValueActor"], [311, 0, 1, "", "DistributionalQValueModule"], [312, 0, 1, "", "LMHeadActorValueOperator"], [313, 0, 1, "", "MultiStepActorWrapper"], [314, 0, 1, "", "ProbabilisticActor"], [315, 0, 1, "", "QValueActor"], [316, 0, 1, "", "QValueModule"], [317, 0, 1, "", "SafeModule"], [318, 0, 1, "", "SafeProbabilisticModule"], [319, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [320, 0, 1, "", "SafeSequential"], [321, 0, 1, "", "TanhModule"], [322, 0, 1, "", "ValueOperator"], [323, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[306, 1, 1, "", "get_critic_operator"], [306, 1, 1, "", "get_policy_head"], [306, 1, 1, "", "get_value_head"], [306, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[307, 1, 1, "", "get_policy_head"], [307, 1, 1, "", "get_policy_operator"], [307, 1, 1, "", "get_value_head"], [307, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[308, 1, 1, "", "get_policy_head"], [308, 1, 1, "", "get_policy_operator"], [308, 1, 1, "", "get_value_head"], [308, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "mask_context"], [309, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[311, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[313, 1, 1, "", "forward"], [313, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[316, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[317, 1, 1, "", "random"], [317, 1, 1, "", "random_sample"], [317, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[318, 1, 1, "", "random"], [318, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[321, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[323, 1, 1, "", "get_reward_operator"], [323, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[324, 0, 1, "", "biased_softplus"], [325, 0, 1, "", "get_primers_from_module"], [326, 0, 1, "", "inv_softplus"], [327, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[324, 1, 1, "", "forward"]], "torchrl.objectives": [[328, 0, 1, "", "A2CLoss"], [329, 0, 1, "", "CQLLoss"], [330, 0, 1, "", "ClipPPOLoss"], [331, 0, 1, "", "CrossQLoss"], [332, 0, 1, "", "DDPGLoss"], [333, 0, 1, "", "DQNLoss"], [334, 0, 1, "", "DTLoss"], [335, 0, 1, "", "DiscreteCQLLoss"], [336, 0, 1, "", "DiscreteIQLLoss"], [337, 0, 1, "", "DiscreteSACLoss"], [338, 0, 1, "", "DistributionalDQNLoss"], [339, 0, 1, "", "DreamerActorLoss"], [340, 0, 1, "", "DreamerModelLoss"], [341, 0, 1, "", "DreamerValueLoss"], [342, 0, 1, "", "GAILLoss"], [343, 0, 1, "", "HardUpdate"], [344, 0, 1, "", "IQLLoss"], [345, 0, 1, "", "KLPENPPOLoss"], [346, 0, 1, "", "LossModule"], [347, 0, 1, "", "OnlineDTLoss"], [348, 0, 1, "", "PPOLoss"], [349, 0, 1, "", "REDQLoss"], [350, 0, 1, "", "ReinforceLoss"], [351, 0, 1, "", "SACLoss"], [352, 0, 1, "", "SoftUpdate"], [353, 0, 1, "", "TD3BCLoss"], [354, 0, 1, "", "TD3Loss"], [355, 0, 1, "", "ValueEstimators"], [356, 0, 1, "", "default_value_kwargs"], [357, 0, 1, "", "distance_loss"], [358, 0, 1, "", "group_optimizers"], [359, 0, 1, "", "hold_out_net"], [360, 0, 1, "", "hold_out_params"], [362, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[328, 4, 1, "", "default_keys"], [328, 1, 1, "", "forward"], [328, 2, 1, "", "functional"], [328, 1, 1, "", "loss_critic"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[329, 4, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[330, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[331, 1, 1, "", "actor_loss"], [331, 1, 1, "", "alpha_loss"], [331, 4, 1, "", "default_keys"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "load_state_dict"], [331, 1, 1, "", "make_value_estimator"], [331, 1, 1, "", "maybe_init_target_entropy"], [331, 1, 1, "", "qvalue_loss"], [331, 1, 1, "", "set_keys"], [331, 1, 1, "", "state_dict"], [331, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[332, 4, 1, "", "default_keys"], [332, 1, 1, "", "forward"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[334, 4, 1, "", "default_keys"], [334, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[335, 4, 1, "", "default_keys"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[339, 4, 1, "", "default_keys"], [339, 1, 1, "", "forward"], [339, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[340, 4, 1, "", "default_keys"], [340, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[341, 4, 1, "", "default_keys"], [341, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[342, 4, 1, "", "default_keys"], [342, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[344, 4, 1, "", "default_keys"], [344, 1, 1, "", "forward"], [344, 1, 1, "", "loss_value_diff"], [344, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[345, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[346, 1, 1, "", "convert_to_functional"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "from_stateful_net"], [346, 2, 1, "", "functional"], [346, 1, 1, "", "get_stateful_net"], [346, 1, 1, "", "make_value_estimator"], [346, 1, 1, "", "named_parameters"], [346, 1, 1, "", "parameters"], [346, 1, 1, "", "reset_parameters_recursive"], [346, 1, 1, "", "set_keys"], [346, 2, 1, "", "value_estimator"], [346, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[347, 4, 1, "", "default_keys"], [347, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[348, 4, 1, "", "default_keys"], [348, 1, 1, "", "forward"], [348, 2, 1, "", "functional"], [348, 1, 1, "", "loss_critic"], [348, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[349, 4, 1, "", "default_keys"], [349, 1, 1, "", "forward"], [349, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[350, 4, 1, "", "default_keys"], [350, 1, 1, "", "forward"], [350, 2, 1, "", "functional"], [350, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[351, 4, 1, "", "default_keys"], [351, 1, 1, "", "forward"], [351, 1, 1, "", "load_state_dict"], [351, 1, 1, "", "make_value_estimator"], [351, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[353, 1, 1, "", "actor_loss"], [353, 4, 1, "", "default_keys"], [353, 1, 1, "", "forward"], [353, 1, 1, "", "make_value_estimator"], [353, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[354, 4, 1, "", "default_keys"], [354, 1, 1, "", "forward"], [354, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[361, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[361, 4, 1, "", "default_keys"], [361, 1, 1, "", "forward"], [361, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[363, 0, 1, "", "GAE"], [364, 0, 1, "", "TD0Estimator"], [365, 0, 1, "", "TD1Estimator"], [366, 0, 1, "", "TDLambdaEstimator"], [367, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[363, 1, 1, "", "forward"], [363, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[364, 1, 1, "", "forward"], [364, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[365, 1, 1, "", "forward"], [365, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[366, 1, 1, "", "forward"], [366, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[367, 4, 1, "", "default_keys"], [367, 1, 1, "", "forward"], [367, 1, 1, "", "set_keys"], [367, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[368, 0, 1, "", "generalized_advantage_estimate"], [369, 0, 1, "", "reward2go"], [370, 0, 1, "", "td0_advantage_estimate"], [371, 0, 1, "", "td0_return_estimate"], [372, 0, 1, "", "td1_advantage_estimate"], [373, 0, 1, "", "td1_return_estimate"], [374, 0, 1, "", "td_lambda_advantage_estimate"], [375, 0, 1, "", "td_lambda_return_estimate"], [376, 0, 1, "", "vec_generalized_advantage_estimate"], [377, 0, 1, "", "vec_td1_advantage_estimate"], [378, 0, 1, "", "vec_td1_return_estimate"], [379, 0, 1, "", "vec_td_lambda_advantage_estimate"], [380, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[381, 3, 1, "", "PixelRenderTransform"], [382, 3, 1, "", "TensorDictRecorder"], [383, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[384, 3, 1, "", "Logger"], [386, 3, 1, "", "generate_exp_name"], [387, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[385, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[388, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[389, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[390, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[392, 0, 1, "", "BatchSubSampler"], [393, 0, 1, "", "ClearCudaCache"], [394, 0, 1, "", "CountFramesLog"], [395, 0, 1, "", "LogScalar"], [396, 0, 1, "", "LogValidationReward"], [397, 0, 1, "", "OptimizerHook"], [398, 0, 1, "", "ReplayBufferTrainer"], [399, 0, 1, "", "RewardNormalizer"], [400, 0, 1, "", "SelectKeys"], [401, 0, 1, "", "Trainer"], [402, 0, 1, "", "TrainerHookBase"], [403, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[392, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[393, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[394, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[395, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[396, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[397, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[398, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[399, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[400, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[401, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[402, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[403, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[404, 3, 1, "", "correct_for_frame_skip"], [405, 3, 1, "", "get_stats_random_rollout"], [406, 3, 1, "", "make_collector_offpolicy"], [407, 3, 1, "", "make_collector_onpolicy"], [408, 3, 1, "", "make_dqn_loss"], [409, 3, 1, "", "make_replay_buffer"], [410, 3, 1, "", "make_target_updater"], [411, 3, 1, "", "make_trainer"], [412, 3, 1, "", "parallel_env_constructor"], [413, 3, 1, "", "sync_async_collector"], [414, 3, 1, "", "sync_sync_collector"], [415, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 419, 420, 421, 422, 424, 425, 426, 428, 430, 437, 438, 439, 443, 444], "instal": [0, 6, 7, 443], "get": [0, 429, 430, 431, 432, 433, 434], "start": [0, 429, 430, 431, 432, 433, 434], "tutori": [0, 426, 437, 438], "basic": [0, 441], "intermedi": [0, 8], "advanc": 0, "refer": [0, 417], "knowledg": [0, 418], "base": [0, 2, 7, 418, 428], "indic": 0, "tabl": 0, "collector": [1, 424, 425, 426, 427, 432, 434, 437, 438, 443], "packag": [1, 2, 3, 419, 420, 421, 422], "batch": [1, 3, 424, 439, 441], "size": [1, 3, 424, 441], "polici": [1, 2, 4, 420, 424, 426, 427, 428, 430, 434, 436, 437, 438, 439], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 419], "environ": [1, 3, 4, 6, 7, 424, 425, 426, 427, 429, 434, 436, 437, 438, 439, 443, 444], "local": 1, "remot": 1, "updat": [1, 424], "extend": 1, "class": [1, 439, 443], "default": 1, "implement": [1, 4], "practic": 1, "consider": [1, 431], "replai": [1, 2, 3, 424, 425, 426, 427, 432, 434, 437, 438, 441, 443], "buffer": [1, 2, 3, 424, 425, 426, 427, 432, 434, 437, 438, 441, 443], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 424, 425, 426, 432, 434, 437, 438, 443], "helper": [1, 3], "function": [1, 4, 420, 425, 426, 431, 437, 438, 443], "compos": [2, 191], "support": 2, "type": 2, "choos": 2, "storag": [2, 114, 424, 432, 441], "sampl": [2, 441], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 425, 441], "trajectori": [2, 441], "checkpoint": [2, 421], "episod": [2, 4], "format": 2, "ted": [2, 429], "The": [2, 424], "rational": 2, "behind": 2, "structur": [2, 441], "A": [2, 425, 441], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 419, 441, 443], "special": [2, 430, 443], "case": 2, "footnot": 2, "multi": [2, 3, 419, 420, 436, 437, 438], "agent": [2, 3, 4, 419, 420, 437, 438], "present": 2, "rnn": 2, "transform": [2, 3, 236, 424, 426, 429, 437, 438, 439, 441, 443, 444], "step": [2, 3, 424, 426, 429, 432, 437, 438, 441, 444], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 82], "numer": 2, "subclass": [2, 3], "categor": [2, 35], "tree": [2, 84], "forest": 2, "tensordictmap": [2, 77], "mctsforest": [2, 50], "reinforc": [2, 420, 426, 437, 438], "learn": [2, 4, 419, 426, 437, 438], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 419, 420, 421, 437], "env": [3, 439, 443, 444], "spec": [3, 439, 444], "lock": 3, "method": [3, 424], "partial": 3, "reset": [3, 439, 444], "vector": [3, 443], "custom": [3, 11, 439, 441], "nativ": 3, "auto": 3, "dynam": [3, 4, 441], "forward": [3, 4, 424], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 441], "expos": 3, "outsid": 3, "world": 3, "design": [3, 434], "your": [3, 4, 6, 424, 428, 434, 439], "own": [3, 434], "tip": 3, "us": [3, 4, 6, 9, 420, 427, 440, 441, 443], "clone": [3, 7], "mask": 3, "action": [3, 4, 420, 427, 439], "record": [3, 421, 424, 433], "video": [3, 11, 433], "domain": [3, 419], "specif": [3, 419, 436], "librari": [3, 443], "thing": [4, 424, 439], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 429, 431, 443], "gener": [4, 11, 419], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 419], "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 424, 425, 431, 434], "return": [4, 420], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 443], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 436], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 424, 425, 426], "standard": 4, "explor": [4, 419, 424, 425, 430], "valu": [4, 419, 420, 424, 426, 427, 430], "loss": [4, 424, 425, 426, 427, 434, 437, 438], "earli": 4, "train": [4, 8, 420, 424, 426, 427, 428, 431, 434, 437, 438, 439], "roughli": 4, "uniformli": 4, "random": [4, 420, 437, 438], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 425], "increas": 4, "an": [4, 426, 427, 429, 439], "can": 4, "low": 4, "model": [4, 419, 424, 425, 427, 428, 431, 440, 443], "also": 4, "offlin": 4, "observ": [4, 424], "space": 4, "effect": [4, 439], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 428], "gym": [5, 443, 444], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 424], "render": [7, 11, 434, 437, 438, 444], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 424], "pytorch": [8, 9, 10, 428], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 439], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 425, 441], "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "localweightupdaterbas": 14, "multiprocessedremoteweightupd": 15, "multisyncdatacollector": 16, "multiasyncdatacollector": 17, "rayremoteweightupdat": 18, "remoteweightupdaterbas": 19, "syncdatacollector": 20, "vanillalocalweightupdat": 21, "asyncdatacollector": 22, "distributeddatacollector": 23, "distributedsyncdatacollector": 24, "rpcdatacollector": 25, "raycollector": 26, "submitit_delayed_launch": 27, "split_trajectori": 28, "adaptiveklcontrol": 29, "binari": [30, 428], "binarydiscretetensorspec": 31, "binarytodecim": 32, "bound": 33, "boundedtensorspec": 34, "composit": 36, "compositespec": 37, "constantklcontrol": 38, "densifyreward": 39, "discretetensorspec": 40, "flat2t": 41, "h5combin": 42, "h5split": 43, "hashtoint": 44, "llmdata": 45, "llminput": 46, "llmoutput": 47, "lazystackedcompositespec": 48, "lazystackedtensorspec": 49, "multicategor": 51, "multidiscretetensorspec": 52, "multionehot": 53, "multionehotdiscretetensorspec": 54, "multistep": 55, "nested2t": 56, "nontensor": 57, "nontensorspec": 58, "onehot": 59, "onehotdiscretetensorspec": 60, "pairwisedataset": 61, "prioritizedreplaybuff": 62, "promptdata": 63, "prompttensordicttoken": 64, "querymodul": 65, "randomprojectionhash": 66, "rayreplaybuff": 67, "remotetensordictreplaybuff": 68, "replaybuff": 69, "rewarddata": 70, "rolloutfrommodel": 71, "siphash": 72, "stack": [73, 227], "stackedcomposit": 74, "ted2flat": 75, "ted2nest": 76, "tensordictprioritizedreplaybuff": 78, "tensordictreplaybuff": 79, "tensordicttoken": 80, "tensormap": 81, "tokenizeddatasetload": 83, "unbound": 85, "unboundedcontinu": 86, "unboundedcontinuoustensorspec": 87, "unboundeddiscret": 88, "unboundeddiscretetensorspec": 89, "check_no_exclusive_kei": 90, "consolidate_spec": 91, "contains_lazy_spec": 92, "create_infinite_iter": 93, "get_dataload": 94, "flatstoragecheckpoint": 95, "h5storagecheckpoint": 96, "immutabledatasetwrit": 97, "lazymemmapstorag": 98, "lazystackstorag": 99, "lazytensorstorag": 100, "liststorag": 101, "liststoragecheckpoint": 102, "nestedstoragecheckpoint": 103, "prioritizedsampl": 104, "prioritizedslicesampl": 105, "randomsampl": 106, "replaybufferensembl": 107, "roundrobinwrit": 108, "sampler": 109, "samplerensembl": 110, "samplerwithoutreplac": 111, "slicesampl": 112, "slicesamplerwithoutreplac": 113, "storagecheckpointerbas": 115, "storageensembl": 116, "storageensemblecheckpoint": 117, "tensordictmaxvaluewrit": 118, "tensordictroundrobinwrit": 119, "tensorstorag": 120, "tensorstoragecheckpoint": 121, "writer": 122, "writerensembl": 123, "braxenv": 124, "braxwrapp": 125, "chessenv": 126, "dmcontrolenv": 127, "dmcontrolwrapp": 128, "envbas": [129, 439], "envcreat": 130, "envmetadata": 131, "gymenv": 132, "gymlikeenv": 133, "gymwrapp": 134, "habitatenv": 135, "isaacgymenv": 136, "isaacgymwrapp": 137, "jumanjienv": 138, "jumanjiwrapp": 139, "llmenv": 140, "llmhashingenv": 141, "mogymenv": 142, "mogymwrapp": 143, "marlgroupmaptyp": 144, "meltingpotenv": 145, "meltingpotwrapp": 146, "modelbasedenvbas": 147, "multithreadedenv": 148, "multithreadedenvwrapp": 149, "openmlenv": 150, "openspielenv": 151, "openspielwrapp": 152, "parallelenv": 153, "pendulumenv": 154, "pettingzooenv": 155, "pettingzoowrapp": 156, "randompolici": 157, "robohiveenv": 158, "smacv2env": 159, "smacv2wrapp": 160, "serialenv": 161, "tictactoeenv": 162, "unitymlagentsenv": 163, "unitymlagentswrapp": 164, "vmasenv": 165, "vmaswrapp": 166, "check_env_spec": 167, "check_marl_group": 168, "exploration_typ": 169, "get_available_librari": 170, "gym_backend": 171, "make_composite_from_td": 172, "dreamerdecod": 173, "dreamerenv": 174, "register_gym_spec_convers": 175, "set_exploration_typ": 176, "set_gym_backend": 177, "step_mdp": 178, "terminated_or_trunc": 179, "actiondiscret": 180, "actionmask": 181, "autoresetenv": 182, "autoresettransform": 183, "batchsizetransform": 184, "binarizereward": 185, "burnintransform": 186, "catfram": [187, 441], "cattensor": 188, "centercrop": 189, "cliptransform": 190, "conditionalskip": 192, "crop": 193, "dtypecasttransform": 194, "dataloadingprim": 195, "devicecasttransform": 196, "discreteactionproject": 197, "doubletofloat": 198, "endoflifetransform": 199, "excludetransform": 200, "finitetensordictcheck": 201, "flattenobserv": 202, "frameskiptransform": 203, "grayscal": 204, "hash": 205, "inittrack": 206, "klrewardtransform": 207, "linearisereward": 208, "multiact": 209, "noopresetenv": 210, "observationnorm": 211, "observationtransform": 212, "permutetransform": 213, "pinmemorytransform": 214, "r3mtransform": 215, "randomcroptensordict": 216, "removeemptyspec": 217, "renametransform": 218, "resiz": 219, "reward2gotransform": 220, "rewardclip": 221, "rewardsc": 222, "rewardsum": 223, "selecttransform": 224, "signtransform": 225, "squeezetransform": 226, "stepcount": 228, "targetreturn": 229, "tensordictprim": 230, "timemaxpool": 231, "timer": 232, "totensorimag": 233, "token": 234, "trajcount": 235, "transformedenv": 237, "unarytransform": 238, "unsqueezetransform": 239, "vc1transform": 240, "viprewardtransform": 241, "viptransform": 242, "vecgymenvtransform": 243, "vecnorm": [244, 444], "gsdenois": 245, "multisteptransform": 246, "implement_for": 247, "additivegaussianmodul": 248, "batchrenorm1d": 249, "cemplann": 250, "consistentdropout": 251, "consistentdropoutmodul": 252, "conv3dnet": 253, "convnet": 254, "dtactor": 255, "ddpgcnnactor": 256, "ddpgcnnqnet": 257, "ddpgmlpactor": 258, "ddpgmlpqnet": 259, "decisiontransform": 260, "delta": 261, "distributionaldqnnet": 262, "distributionalqvaluehook": 263, "dreameractor": 264, "duelingcnndqnet": 265, "egreedymodul": 266, "gru": 267, "grucel": 268, "grumodul": 269, "independentnorm": 270, "lstm": [271, 427], "lstmcell": 272, "lstmmodul": 273, "mlp": [274, 427], "mpcplannerbas": 275, "mppiplann": 276, "maskedcategor": 277, "maskedonehotcategor": 278, "multiagentconvnet": 279, "multiagentmlp": 280, "multiagentnetbas": 281, "noisylazylinear": 282, "noisylinear": 283, "obsdecod": 284, "obsencod": 285, "onehotcategor": 286, "onehotordin": 287, "onlinedtactor": 288, "ordin": 289, "ornsteinuhlenbeckprocessmodul": 290, "qmixer": [291, 420], "qvaluehook": 292, "rssmposterior": 293, "rssmprior": 294, "squeeze2dlay": 295, "squeezelay": 296, "tanhdelta": 297, "tanhnorm": 298, "truncatednorm": 299, "vdnmixer": 300, "vmapmodul": 301, "recurrent_mod": 302, "reset_nois": 303, "set_recurrent_mod": 304, "actor": [305, 419, 424, 430], "actorcriticoper": 306, "actorcriticwrapp": 307, "actorvalueoper": 308, "decisiontransformerinferencewrapp": 309, "distributionalqvalueactor": 310, "distributionalqvaluemodul": 311, "lmheadactorvalueoper": 312, "multistepactorwrapp": 313, "probabilisticactor": 314, "qvalueactor": [315, 419], "qvaluemodul": 316, "safemodul": [317, 419], "safeprobabilisticmodul": 318, "safeprobabilistictensordictsequenti": 319, "safesequenti": 320, "tanhmodul": 321, "valueoper": 322, "worldmodelwrapp": 323, "biased_softplu": 324, "get_primers_from_modul": 325, "inv_softplu": 326, "map": [327, 437], "a2closs": 328, "cqlloss": 329, "clipppoloss": 330, "crossqloss": 331, "ddpgloss": 332, "dqnloss": 333, "dtloss": 334, "discretecqlloss": 335, "discreteiqlloss": 336, "discretesacloss": 337, "distributionaldqnloss": 338, "dreameractorloss": 339, "dreamermodelloss": 340, "dreamervalueloss": 341, "gailloss": 342, "hardupd": 343, "iqlloss": 344, "klpenppoloss": 345, "lossmodul": [346, 424, 431], "onlinedtloss": 347, "ppoloss": 348, "redqloss": 349, "reinforceloss": 350, "sacloss": 351, "softupd": 352, "td3bcloss": 353, "td3loss": 354, "valueestim": 355, "default_value_kwarg": 356, "distance_loss": 357, "group_optim": 358, "hold_out_net": 359, "hold_out_param": 360, "qmixerloss": 361, "next_state_valu": 362, "gae": 363, "td0estim": 364, "td1estim": 365, "tdlambdaestim": 366, "valueestimatorbas": 367, "generalized_advantage_estim": 368, "reward2go": 369, "td0_advantage_estim": 370, "td0_return_estim": 371, "td1_advantage_estim": 372, "td1_return_estim": 373, "td_lambda_advantage_estim": 374, "td_lambda_return_estim": 375, "vec_generalized_advantage_estim": 376, "vec_td1_advantage_estim": 377, "vec_td1_return_estim": 378, "vec_td_lambda_advantage_estim": 379, "vec_td_lambda_return_estim": 380, "pixelrendertransform": 381, "tensordictrecord": 382, "videorecord": 383, "logger": [384, 421, 433, 434], "csvlogger": 385, "generate_exp_nam": 386, "get_logg": 387, "mlflowlogg": 388, "tensorboardlogg": 389, "wandblogg": 390, "set_auto_unwrap_transformed_env": 391, "batchsubsampl": 392, "clearcudacach": 393, "countframeslog": 394, "logscalar": 395, "logvalidationreward": 396, "optimizerhook": 397, "replaybuffertrain": 398, "rewardnorm": 399, "selectkei": 400, "trainer": [401, 421, 425], "trainerhookbas": 402, "updateweight": 403, "correct_for_frame_skip": 404, "get_stats_random_rollout": 405, "make_collector_offpolici": 406, "make_collector_onpolici": 407, "make_dqn_loss": 408, "make_replay_buff": 409, "make_target_updat": 410, "make_train": 411, "parallel_env_constructor": 412, "sync_async_collector": 413, "sync_sync_collector": 414, "transformed_env_constructor": 415, "readm": [416, 435], "tuto": [416, 435], "api": 417, "contribut": [418, 443], "content": 418, "modul": [419, 424, 427, 428, 430, 434, 443], "tensordictmodul": [419, 428, 430, 443], "wrapper": [419, 430], "probabilist": [419, 430], "q": [419, 425, 427, 430], "oper": 419, "join": 419, "hook": [419, 421, 425], "regular": 419, "planner": 419, "object": [420, 424, 431, 443], "torch": 420, "vmap": [420, 443], "dqn": [420, 425, 427], "ddpg": [420, 424, 437], "sac": 420, "redq": 420, "crossq": 420, "iql": 420, "cql": 420, "gail": 420, "dt": 420, "td3": 420, "bc": 420, "ppo": [420, 426, 438], "head": 420, "a2c": 420, "dreamer": 420, "builder": 421, "_util": 422, "comput": [423, 425, 439, 442], "time": [423, 424, 442], "code": [424, 439], "overview": [424, 427], "setup": [424, 427], "__init__": 424, "estim": 424, "put": 424, "togeth": [424, 439], "call": 424, "parallel": [424, 436, 444], "execut": [424, 436, 439], "stat": 424, "build": [424, 425, 434, 441], "evalu": 424, "construct": 424, "target": [424, 425, 431], "network": [424, 425, 426, 427, 430, 437, 438], "experi": [424, 439], "result": [424, 426, 437, 438], "conclus": [424, 425, 426, 427, 428, 437, 438, 439, 441], "next": [424, 426, 429, 432, 437, 438, 441], "deep": 425, "collect": [425, 426, 432], "paramet": [425, 426, 431], "hyperparamet": [425, 426, 437, 438], "regist": 425, "possibl": 425, "improv": 425, "defin": [426, 437, 438], "loop": [426, 427, 428, 434, 437, 438, 439], "recurr": [427, 428], "convolut": 427, "select": 427, "further": [427, 431], "read": 427, "export": 428, "introduct": [428, 443], "fast": 428, "recap": 428, "simpl": [428, 439], "stochast": 428, "aotinductor": 428, "free": 428, "c": 428, "onnx": 428, "run": [428, 429, 444], "rollout": [428, 429, 436, 437, 438, 439, 444], "creat": 429, "s": [430, 431], "output": 431, "log": 433, "first": 434, "divers": 436, "competit": 437, "group": 437, "critic": [437, 438], "pendulum": 439, "write": 439, "_step": 439, "simul": 439, "_reset": 439, "metadata": 439, "_spec": 439, "shape": 439, "seed": [439, 444], "wrap": 439, "test": 439, "our": 439, "pretrain": 440, "vanilla": 441, "integr": 441, "tensorclass": 441, "other": 441, "pytre": 441, "iter": 441, "over": 441, "fix": 441, "priorit": 441, "save": 441, "raw": 441, "imag": 441, "more": 441, "complex": 441, "config": 443, "sequenc": 443, "program": 443, "ensembl": 443, "meta": 443, "sync": 443, "multiprocess": 443, "async": 443, "frame_skip": 444, "deepmind": 444, "control": 444, "devic": 444, "close": 444, "access": 444, "attribut": 444, "kwarg": 444}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})