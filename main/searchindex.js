Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.RayLLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.LLMData", "reference/generated/torchrl.data.llm.TopKRewardSelector", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LLMMaskedCategorical", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.CategoricalSequential", "reference/generated/torchrl.modules.llm.LLMOnDevice", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.vLLMWorker", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.llm.SFTLoss", "reference/generated/torchrl.objectives.llm.SFTLossOutput", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.RayLLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.LLMData.rst", "reference/generated/torchrl.data.llm.TopKRewardSelector.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LLMMaskedCategorical.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.CategoricalSequential.rst", "reference/generated/torchrl.modules.llm.LLMOnDevice.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.vLLMWorker.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.llm.SFTLoss.rst", "reference/generated/torchrl.objectives.llm.SFTLossOutput.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "RayLLMCollector", "vLLMUpdater", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "ContentBase", "History", "LLMData", "TopKRewardSelector", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "BrowserTransform", "DataLoadingPrimer", "KLRewardTransform", "MCPToolTransform", "PolicyVersion", "PythonInterpreter", "RetrieveLogProb", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LLMMaskedCategorical", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "CategoricalSequential", "LLMOnDevice", "TransformersWrapper", "make_vllm_worker", "stateless_init_process_group", "vLLMWorker", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "SFTLoss", "SFTLossOutput", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 102, 103, 104, 105, 106, 110, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 153, 154, 156, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 221, 227, 229, 230, 233, 237, 242, 243, 247, 248, 249, 250, 252, 261, 262, 263, 264, 265, 267, 268, 269, 272, 275, 276, 277, 279, 282, 286, 287, 289, 290, 291, 292, 294, 299, 300, 302, 305, 307, 308, 309, 313, 314, 316, 324, 329, 330, 332, 336, 338, 340, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 364, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 427, 429, 432, 436, 442, 443, 447, 448, 451, 458, 459, 460, 461, 464, 465, 466, 467, 471, 472, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 491, 492], "open": [0, 5, 7, 62, 64, 71, 85, 96, 97, 98, 103, 186, 280, 340, 403, 406, 472, 483, 485, 486, 491], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "reinforc": [0, 3, 9, 151, 152, 181, 219, 277, 284, 289, 290, 291, 292, 296, 324, 352, 369, 370, 372, 375, 376, 377, 379, 384, 385, 391, 392, 393, 394, 463, 470, 472, 476, 477, 482, 487, 490, 491], "learn": [0, 3, 7, 8, 9, 22, 56, 109, 110, 135, 151, 152, 156, 159, 168, 181, 219, 277, 284, 289, 290, 291, 292, 296, 310, 317, 323, 324, 352, 369, 370, 371, 372, 375, 376, 377, 379, 383, 384, 385, 389, 390, 391, 392, 393, 394, 402, 463, 467, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 489, 490, 491, 492], "rl": [0, 1, 2, 3, 5, 8, 10, 15, 16, 18, 21, 29, 144, 153, 219, 261, 317, 346, 355, 363, 369, 371, 386, 387, 389, 391, 402, 438, 462, 464, 465, 466, 467, 468, 471, 472, 473, 479, 482, 485, 486, 488, 489, 492], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 25, 65, 81, 132, 133, 134, 143, 154, 178, 187, 342, 463, 464, 466, 467, 469, 471, 472, 473, 475, 476, 477, 479, 485, 486, 487, 492], "pytorch": [0, 1, 2, 3, 29, 32, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 185, 188, 189, 190, 219, 264, 265, 284, 300, 305, 316, 317, 447, 462, 464, 466, 468, 471, 473, 474, 478, 482, 485, 486, 487, 491, 492], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 23, 25, 29, 36, 43, 48, 56, 66, 67, 73, 78, 81, 99, 129, 132, 135, 139, 143, 147, 150, 151, 152, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 219, 240, 268, 276, 277, 279, 284, 304, 305, 323, 336, 338, 342, 359, 402, 404, 405, 436, 437, 464, 465, 466, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 104, 109, 110, 112, 116, 117, 118, 123, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 211, 212, 213, 215, 216, 218, 219, 222, 223, 225, 227, 229, 230, 231, 234, 237, 241, 242, 243, 247, 248, 252, 255, 259, 260, 261, 262, 266, 267, 268, 269, 270, 272, 274, 276, 277, 279, 280, 283, 285, 286, 287, 289, 299, 300, 302, 303, 304, 305, 307, 309, 310, 311, 313, 314, 315, 317, 324, 333, 335, 336, 338, 342, 346, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 427, 429, 436, 437, 442, 459, 460, 461, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 99, 112, 129, 130, 131, 132, 135, 138, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 237, 238, 239, 243, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 275, 276, 277, 279, 359, 387, 394, 402, 404, 405, 461, 472, 473, 475, 476, 485, 486, 487, 489], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 112, 115, 116, 117, 118, 119, 121, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 243, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 324, 325, 326, 332, 333, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 385, 386, 387, 389, 390, 391, 392, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 427, 428, 429, 438, 444, 447, 450, 451, 455, 457, 458, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "pypi": [0, 2, 491], "see": [0, 1, 2, 3, 6, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 99, 104, 110, 112, 117, 118, 129, 132, 135, 139, 142, 144, 146, 147, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 223, 225, 241, 247, 262, 265, 267, 268, 269, 272, 274, 276, 277, 278, 279, 284, 285, 286, 287, 300, 302, 303, 305, 307, 308, 314, 315, 316, 323, 325, 333, 334, 336, 338, 342, 345, 347, 349, 355, 358, 359, 371, 372, 383, 387, 389, 394, 402, 404, 405, 429, 436, 444, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485, 486, 487, 489, 491, 492], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 99, 109, 110, 112, 123, 129, 132, 135, 138, 139, 140, 142, 143, 146, 147, 151, 152, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 265, 268, 272, 277, 278, 279, 280, 281, 282, 285, 296, 304, 305, 308, 316, 336, 338, 342, 346, 351, 352, 358, 359, 363, 369, 379, 387, 389, 402, 404, 405, 409, 414, 422, 436, 443, 464, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 491, 492], "about": [0, 3, 5, 7, 9, 22, 23, 25, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 81, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 466, 467, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492], "instruct": [0, 6, 7, 10, 28, 144, 182, 187, 229, 231, 465, 467, 471, 472, 473, 474, 483, 485, 486, 489], "dedic": [0, 1, 2, 3, 22, 23, 25, 27, 51, 70, 79, 80, 112, 159, 168, 347, 348, 349, 465, 466, 471, 476, 478, 479, 481, 484, 486], "section": [0, 2, 3, 4, 33, 135, 300, 305, 465, 472, 475, 476, 481, 485, 486], "below": [0, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 86, 95, 99, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 225, 241, 247, 262, 267, 268, 269, 272, 274, 279, 286, 287, 300, 303, 305, 308, 314, 333, 336, 338, 342, 355, 358, 371, 389, 402, 404, 405, 444, 471, 472, 473, 474, 475, 476, 485, 487], "pip": [0, 10, 475, 476, 477, 478, 479, 480, 481, 483, 486, 491, 492], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 48, 49, 51, 52, 54, 56, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 84, 85, 92, 95, 96, 97, 98, 99, 103, 104, 106, 109, 110, 111, 112, 115, 117, 118, 126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 216, 218, 219, 220, 221, 222, 226, 227, 230, 234, 237, 242, 243, 245, 247, 248, 251, 252, 255, 256, 261, 262, 263, 266, 267, 269, 271, 272, 274, 275, 276, 277, 279, 280, 286, 287, 293, 294, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 335, 336, 338, 342, 346, 350, 352, 354, 355, 356, 357, 359, 362, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 433, 438, 444, 451, 457, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 491, 492], "python": [0, 1, 3, 5, 6, 7, 10, 15, 16, 27, 29, 30, 63, 68, 69, 70, 73, 78, 79, 80, 85, 112, 155, 171, 172, 198, 209, 300, 301, 302, 305, 306, 307, 311, 312, 465, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "first": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 103, 105, 110, 117, 118, 123, 125, 129, 132, 135, 138, 139, 140, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 215, 216, 219, 220, 224, 225, 234, 241, 243, 247, 248, 264, 265, 269, 272, 277, 280, 287, 294, 300, 302, 304, 305, 307, 308, 311, 312, 314, 316, 319, 346, 350, 351, 352, 355, 356, 358, 359, 371, 381, 386, 387, 389, 402, 405, 428, 429, 446, 466, 470, 471, 472, 473, 474, 475, 476, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "low": [0, 3, 37, 40, 67, 78, 83, 86, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 212, 222, 229, 237, 240, 262, 270, 331, 332, 333, 350, 352, 355, 359, 362, 471, 472, 473, 475, 485, 486, 487, 491], "high": [0, 3, 9, 37, 40, 62, 64, 71, 79, 85, 86, 96, 97, 98, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 187, 188, 189, 190, 204, 212, 222, 229, 237, 240, 242, 262, 270, 331, 332, 333, 350, 352, 355, 359, 362, 403, 406, 409, 414, 422, 471, 472, 473, 485, 486, 487, 489, 491], "level": [0, 2, 3, 4, 28, 40, 41, 49, 63, 68, 70, 75, 112, 138, 140, 187, 219, 260, 268, 302, 304, 307, 386, 471, 472, 475, 479, 491], "abstract": [0, 1, 3, 8, 20, 82, 83, 127, 135, 244, 309, 413, 439, 448, 468, 473, 475, 487, 491], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 116, 117, 118, 119, 121, 123, 125, 129, 132, 135, 136, 138, 139, 140, 146, 147, 150, 151, 152, 153, 156, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 211, 212, 214, 215, 216, 218, 219, 222, 223, 225, 227, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 242, 245, 247, 252, 255, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 281, 283, 284, 292, 294, 299, 300, 301, 302, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 317, 320, 325, 328, 336, 338, 341, 342, 345, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 427, 436, 437, 444, 447, 457, 461, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "intend": [0, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 218, 229, 335, 387, 466, 491], "effici": [0, 1, 2, 4, 8, 17, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 300, 304, 317, 372, 466, 471, 472, 473, 474, 475, 478, 479, 481, 484, 485, 486, 488, 489, 491], "modular": [0, 361, 465, 475, 489, 491], "document": [0, 2, 5, 7, 11, 22, 23, 27, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 144, 147, 157, 158, 159, 160, 163, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 304, 336, 338, 342, 402, 404, 405, 462, 472, 474, 475, 476, 479, 482, 491], "properli": [0, 1, 3, 29, 86, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 225, 302, 307, 409, 473, 480, 485, 486, 487, 491], "test": [0, 3, 5, 29, 129, 130, 131, 132, 135, 139, 145, 146, 147, 151, 152, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 194, 267, 272, 304, 442, 457, 465, 473, 474, 475, 488, 491], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 101, 109, 110, 112, 115, 117, 118, 119, 123, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 145, 146, 147, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 210, 211, 212, 215, 216, 218, 219, 223, 224, 225, 227, 230, 231, 232, 237, 240, 241, 243, 245, 247, 252, 254, 255, 256, 259, 260, 261, 262, 264, 267, 268, 269, 272, 274, 275, 276, 277, 279, 281, 282, 283, 284, 289, 290, 291, 292, 293, 296, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 317, 321, 323, 324, 326, 327, 328, 336, 338, 339, 340, 342, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 427, 429, 431, 434, 435, 436, 437, 438, 443, 457, 459, 460, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492], "code": [0, 3, 5, 7, 8, 15, 16, 67, 73, 129, 132, 135, 139, 144, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 198, 247, 269, 272, 282, 300, 301, 305, 306, 355, 359, 361, 465, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492], "aim": [0, 2, 3, 7, 51, 74, 75, 247, 272, 274, 308, 450, 464, 466, 467, 471, 472, 491], "support": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 43, 62, 64, 66, 71, 78, 85, 95, 96, 97, 98, 103, 105, 119, 121, 125, 126, 128, 129, 130, 131, 132, 138, 140, 145, 154, 156, 159, 161, 165, 178, 186, 188, 193, 201, 216, 219, 231, 237, 243, 262, 263, 266, 270, 277, 296, 321, 323, 332, 335, 336, 338, 339, 342, 351, 352, 355, 358, 361, 379, 387, 402, 403, 405, 406, 409, 410, 411, 412, 434, 463, 465, 466, 468, 473, 474, 476, 477, 483, 486, 487, 489, 491], "research": [0, 7, 9, 151, 152, 282, 491], "most": [0, 1, 2, 3, 7, 8, 15, 16, 56, 58, 109, 110, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 229, 275, 471, 473, 475, 476, 477, 478, 479, 480, 481, 487, 491, 492], "written": [0, 1, 2, 3, 29, 30, 45, 62, 63, 64, 66, 68, 69, 70, 71, 76, 79, 80, 84, 85, 96, 97, 98, 101, 103, 110, 112, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 186, 187, 188, 189, 190, 195, 210, 211, 212, 219, 231, 234, 239, 240, 255, 260, 263, 264, 269, 275, 279, 280, 285, 324, 346, 355, 358, 359, 363, 369, 371, 386, 389, 391, 402, 403, 406, 408, 427, 428, 429, 465, 466, 467, 468, 471, 474, 475, 477, 484, 487, 491], "highli": [0, 2, 371, 389, 476, 491, 492], "wai": [0, 1, 2, 3, 4, 112, 123, 143, 181, 182, 185, 219, 247, 250, 267, 268, 274, 275, 302, 305, 307, 389, 409, 410, 411, 412, 466, 471, 472, 473, 475, 476, 478, 479, 484, 485, 486, 487, 488, 489, 491, 492], "easili": [0, 1, 2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 465, 467, 471, 472, 473, 476, 477, 478, 481, 485, 486, 491, 492], "swap": [0, 1, 3, 138, 275, 473, 475, 488, 491], "compon": [0, 1, 2, 3, 63, 67, 68, 69, 70, 79, 80, 103, 104, 105, 106, 112, 119, 121, 125, 187, 296, 326, 351, 352, 357, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 443, 447, 465, 471, 472, 473, 474, 475, 477, 478, 481, 483, 484, 485, 486, 487, 488, 491], "transform": [0, 1, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 43, 51, 56, 63, 65, 68, 69, 70, 72, 79, 80, 81, 97, 99, 100, 101, 108, 112, 121, 126, 129, 132, 135, 136, 139, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 285, 288, 289, 293, 296, 297, 302, 307, 322, 325, 326, 332, 334, 338, 342, 350, 353, 354, 362, 365, 366, 368, 375, 388, 404, 405, 427, 429, 444, 461, 463, 470, 472, 474, 475, 477, 479, 480, 481, 482, 483, 488, 490], "them": [0, 2, 3, 7, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 112, 123, 128, 129, 132, 135, 136, 139, 143, 147, 150, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 201, 227, 230, 237, 240, 262, 266, 269, 270, 276, 277, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 334, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 370, 372, 378, 385, 386, 390, 392, 394, 395, 410, 411, 412, 429, 471, 472, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 491, 492], "write": [0, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 56, 62, 63, 64, 65, 68, 69, 70, 71, 79, 80, 84, 85, 96, 97, 98, 99, 110, 112, 117, 121, 128, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 245, 246, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 346, 358, 359, 361, 363, 372, 373, 374, 376, 377, 378, 385, 390, 392, 394, 395, 403, 404, 406, 408, 413, 429, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492], "new": [0, 1, 2, 3, 4, 8, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 109, 110, 112, 116, 129, 132, 135, 139, 147, 154, 159, 160, 163, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 216, 255, 259, 268, 269, 276, 277, 279, 294, 300, 302, 307, 324, 336, 338, 342, 358, 359, 364, 369, 370, 371, 374, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 403, 404, 405, 406, 407, 436, 467, 471, 473, 476, 478, 485, 486, 487, 491, 492], "ones": [0, 2, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 99, 117, 118, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 164, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 220, 223, 224, 227, 228, 230, 243, 247, 252, 259, 262, 268, 269, 272, 274, 277, 279, 284, 304, 311, 312, 323, 335, 336, 338, 342, 358, 369, 370, 371, 372, 373, 385, 386, 389, 390, 392, 394, 395, 402, 404, 405, 415, 471, 473, 475, 485, 486, 487, 489, 491, 492], "littl": [0, 1, 3, 81, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269, 284, 369, 371, 386, 389, 391, 473, 474, 475, 479, 489, 491, 492], "effort": [0, 3, 487, 489, 491], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 116, 117, 118, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 156, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 243, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 330, 332, 333, 335, 336, 338, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 427, 428, 436, 437, 438, 440, 442, 444, 447, 449, 450, 451, 457, 461, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "repo": [0, 6, 219, 263, 272, 464, 486, 491], "attempt": [0, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 99, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 279, 284, 336, 338, 342, 359, 374, 377, 385, 402, 404, 405, 407, 467, 478, 491], "align": [0, 300, 305, 491], "exist": [0, 1, 2, 3, 4, 22, 27, 29, 30, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 99, 103, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 220, 228, 267, 269, 279, 280, 294, 336, 338, 342, 359, 372, 392, 402, 403, 404, 405, 406, 451, 461, 465, 485, 486, 491, 492], "ecosystem": [0, 475, 479, 491], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 105, 109, 110, 112, 115, 117, 123, 125, 129, 132, 135, 136, 139, 143, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 219, 241, 260, 261, 262, 263, 264, 266, 267, 268, 269, 279, 281, 300, 302, 305, 307, 313, 315, 332, 336, 338, 342, 352, 354, 359, 369, 372, 386, 387, 389, 391, 402, 403, 404, 405, 406, 409, 429, 465, 467, 471, 472, 473, 474, 475, 476, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492], "dataset": [0, 47, 51, 62, 63, 64, 65, 70, 71, 72, 77, 79, 80, 84, 85, 95, 96, 97, 98, 102, 110, 112, 115, 117, 118, 156, 181, 182, 185, 186, 187, 188, 191, 276, 403, 406, 429, 463, 465, 471, 472, 476, 488, 489, 491, 492], "pillar": [0, 491], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 73, 74, 75, 83, 85, 86, 87, 88, 89, 90, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 185, 188, 189, 190, 191, 192, 194, 197, 201, 206, 212, 213, 215, 216, 218, 219, 220, 224, 225, 227, 228, 229, 230, 235, 241, 242, 243, 247, 248, 249, 252, 255, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 280, 283, 285, 302, 307, 309, 310, 354, 376, 380, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 437, 438, 440, 442, 450, 451, 452, 453, 457, 458, 459, 460, 461, 463, 464, 466, 467, 470, 475, 477, 478, 479, 480, 482, 488, 489, 490], "model": [0, 3, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 227, 247, 262, 272, 274, 278, 279, 286, 287, 288, 293, 295, 308, 309, 310, 314, 315, 322, 325, 334, 336, 338, 339, 342, 347, 348, 349, 353, 358, 364, 366, 369, 370, 371, 372, 374, 375, 376, 377, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 402, 403, 404, 405, 406, 407, 447, 452, 453, 454, 463, 464, 467, 468, 470, 473, 476, 479, 482, 485, 486, 487, 489, 490, 492], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 175, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 194, 197, 199, 201, 204, 211, 213, 216, 218, 219, 224, 227, 228, 230, 232, 234, 237, 239, 243, 249, 252, 259, 260, 266, 268, 269, 270, 275, 277, 279, 283, 284, 296, 299, 302, 307, 310, 313, 314, 324, 326, 335, 338, 340, 342, 345, 346, 351, 354, 355, 356, 358, 359, 361, 362, 363, 369, 370, 371, 372, 373, 374, 376, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 427, 429, 436, 438, 444, 447, 449, 452, 457, 459, 460, 461, 463, 466, 467, 468, 470, 474, 475, 476, 477, 478, 482, 483, 487, 488, 489, 490, 492], "util": [0, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 32, 36, 43, 48, 56, 66, 67, 70, 72, 73, 78, 99, 117, 118, 129, 130, 131, 132, 135, 139, 145, 146, 147, 152, 159, 160, 161, 162, 163, 168, 169, 170, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 247, 252, 262, 274, 279, 282, 285, 286, 287, 293, 300, 302, 305, 307, 336, 338, 342, 365, 366, 367, 368, 387, 402, 404, 405, 457, 463, 469, 471, 473, 475, 477, 478, 479, 486, 487, 489, 491, 492], "e": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 105, 109, 110, 123, 125, 129, 132, 135, 136, 139, 140, 147, 159, 160, 163, 168, 169, 170, 173, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 220, 223, 224, 225, 226, 234, 237, 240, 241, 243, 247, 255, 262, 264, 267, 268, 269, 272, 274, 279, 280, 300, 302, 303, 305, 307, 310, 314, 326, 332, 333, 336, 338, 340, 342, 345, 350, 352, 354, 355, 357, 358, 359, 369, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 427, 438, 450, 460, 465, 466, 467, 472, 473, 475, 477, 478, 480, 485, 486, 488, 489, 491, 492], "g": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 123, 129, 132, 135, 136, 139, 140, 147, 159, 160, 163, 168, 169, 170, 173, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 220, 223, 224, 234, 237, 240, 243, 247, 255, 262, 264, 267, 268, 269, 272, 274, 279, 280, 300, 302, 303, 305, 306, 307, 310, 314, 332, 333, 336, 338, 340, 342, 350, 355, 358, 359, 372, 392, 402, 403, 404, 405, 406, 408, 418, 419, 420, 421, 423, 424, 425, 426, 427, 460, 466, 467, 472, 473, 475, 477, 480, 485, 486, 487, 488, 489, 491, 492], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 56, 63, 68, 69, 70, 72, 76, 79, 80, 112, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 197, 216, 219, 252, 260, 279, 284, 302, 307, 324, 371, 386, 389, 402, 444, 447, 449, 452, 453, 457, 459, 460, 463, 467, 468, 475, 489, 492], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 110, 112, 113, 115, 117, 118, 119, 124, 127, 128, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 219, 223, 227, 230, 237, 247, 259, 262, 267, 268, 269, 272, 274, 275, 276, 277, 279, 283, 286, 287, 300, 301, 304, 305, 306, 308, 310, 313, 314, 336, 338, 342, 346, 351, 352, 355, 357, 358, 359, 363, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 433, 438, 450, 457, 458, 459, 460, 461, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492], "etc": [0, 2, 3, 7, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 259, 269, 279, 280, 308, 314, 332, 336, 338, 342, 402, 404, 405, 465, 467, 472, 473, 479, 489, 491, 492], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 99, 112, 116, 119, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 211, 212, 215, 219, 224, 227, 230, 231, 239, 242, 243, 259, 260, 262, 266, 267, 268, 269, 276, 277, 279, 281, 284, 286, 287, 308, 311, 313, 314, 315, 324, 335, 336, 338, 342, 354, 360, 361, 369, 371, 386, 389, 391, 394, 398, 399, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 438, 447, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "few": [0, 2, 8, 118, 139, 190, 429, 438, 465, 473, 474, 477, 485, 486, 489, 491, 492], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 37, 62, 64, 86, 129, 132, 135, 138, 139, 140, 141, 147, 159, 160, 163, 165, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 227, 230, 359, 363, 389, 431, 466, 471, 473, 474, 483, 485, 486, 487, 491, 492], "possibl": [0, 2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 104, 110, 117, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 223, 247, 262, 267, 268, 269, 272, 274, 279, 286, 287, 300, 301, 305, 306, 336, 338, 342, 358, 389, 402, 404, 405, 427, 442, 447, 466, 471, 473, 474, 475, 477, 479, 480, 485, 486, 487, 489, 491, 492], "standard": [0, 2, 3, 58, 132, 243, 254, 276, 277, 281, 282, 283, 297, 310, 316, 317, 322, 350, 371, 386, 389, 394, 395, 409, 410, 411, 412, 471, 472, 476, 477, 486, 489, 491], "numpi": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 237, 265, 270, 280, 447, 475, 487, 489, 491, 492], "common": [0, 2, 3, 4, 83, 129, 139, 145, 213, 231, 347, 348, 349, 353, 369, 370, 371, 372, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 457, 464, 466, 467, 468, 471, 473, 477, 480, 484, 485, 486, 487, 488, 491, 492], "openai": [0, 7, 33, 138, 140, 147, 165, 189, 473, 487, 491, 492], "gym": [0, 1, 3, 4, 8, 15, 16, 18, 21, 27, 28, 29, 30, 68, 99, 129, 132, 135, 136, 138, 139, 140, 141, 143, 144, 147, 151, 152, 154, 155, 159, 160, 163, 165, 168, 169, 170, 173, 174, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 215, 219, 222, 231, 238, 239, 243, 245, 250, 252, 255, 262, 268, 275, 276, 279, 280, 404, 457, 464, 471, 472, 473, 474, 476, 480, 481, 487, 488, 489], "onli": [0, 1, 2, 3, 4, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 97, 99, 103, 105, 109, 110, 112, 117, 118, 125, 129, 132, 133, 134, 135, 138, 139, 140, 141, 143, 146, 147, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 215, 219, 220, 222, 223, 224, 225, 227, 229, 230, 234, 237, 241, 243, 247, 248, 252, 259, 260, 261, 262, 263, 267, 268, 269, 272, 274, 276, 277, 279, 280, 284, 304, 305, 307, 311, 313, 314, 336, 338, 342, 346, 350, 351, 355, 356, 358, 359, 360, 361, 369, 371, 372, 373, 377, 378, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 402, 404, 405, 409, 410, 411, 412, 413, 429, 436, 451, 465, 467, 468, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 328, 331, 332, 333, 335, 336, 338, 339, 342, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 431, 434, 436, 438, 440, 441, 442, 443, 444, 445, 447, 451, 457, 459, 460, 461, 466, 474, 476, 479, 485, 486, 487, 489, 491], "On": [0, 3, 7, 22, 23, 25, 27, 40, 301, 306, 466, 472, 485, 486], "end": [0, 2, 3, 15, 16, 21, 29, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 99, 101, 110, 112, 116, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 231, 237, 245, 260, 261, 267, 269, 279, 286, 287, 300, 301, 305, 306, 309, 336, 338, 342, 354, 372, 392, 402, 404, 405, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "come": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 56, 123, 129, 132, 135, 139, 146, 147, 150, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 227, 230, 345, 346, 347, 348, 349, 355, 363, 369, 371, 386, 389, 391, 429, 471, 472, 473, 474, 478, 479, 480, 481, 485, 486, 489, 491, 492], "set": [0, 1, 2, 3, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 85, 96, 97, 98, 99, 103, 104, 105, 106, 112, 116, 119, 125, 129, 132, 135, 137, 139, 140, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 211, 213, 215, 216, 219, 220, 223, 227, 230, 237, 238, 239, 240, 247, 252, 260, 261, 262, 263, 267, 268, 269, 272, 274, 276, 277, 279, 280, 300, 302, 304, 305, 307, 309, 311, 313, 314, 321, 323, 324, 332, 336, 338, 342, 345, 350, 358, 359, 371, 372, 378, 383, 386, 387, 389, 392, 402, 403, 404, 405, 406, 409, 413, 429, 437, 438, 442, 444, 453, 461, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 491, 492], "re": [0, 2, 3, 8, 13, 22, 23, 25, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 99, 112, 116, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 234, 279, 307, 311, 312, 315, 336, 338, 342, 355, 359, 402, 404, 405, 436, 468, 471, 473, 474, 476, 478, 483, 484, 485, 487, 491, 492], "usabl": [0, 468, 474, 491], "function": [0, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 103, 104, 105, 106, 112, 119, 121, 125, 129, 132, 135, 136, 139, 140, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 210, 211, 215, 216, 227, 230, 237, 239, 266, 267, 269, 270, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 311, 312, 313, 314, 315, 318, 319, 320, 322, 324, 327, 328, 330, 333, 335, 336, 338, 342, 347, 348, 349, 350, 352, 354, 355, 357, 358, 359, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 447, 457, 463, 465, 466, 471, 474, 475, 476, 477, 480, 483, 484, 487, 489, 492], "cost": [0, 2, 39, 104, 106, 369, 371, 386, 389, 391, 467, 471, 472, 475, 485, 486, 487, 489], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 104, 110, 112, 113, 115, 117, 118, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 168, 169, 170, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 283, 284, 287, 288, 289, 290, 291, 292, 294, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 320, 322, 325, 327, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 346, 347, 348, 349, 350, 354, 355, 357, 358, 359, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 433, 437, 447, 450, 452, 457, 458, 459, 460, 461, 463, 465, 466, 468, 471, 472, 473, 475, 477, 478, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 43, 48, 56, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 81, 84, 85, 96, 97, 98, 99, 105, 109, 110, 113, 117, 125, 129, 132, 135, 136, 139, 143, 147, 150, 154, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 219, 227, 230, 237, 262, 265, 267, 276, 277, 279, 302, 307, 313, 314, 324, 336, 338, 340, 341, 342, 352, 357, 371, 389, 402, 403, 404, 405, 406, 463, 468, 471, 472, 474, 475, 476, 483, 485, 486, 487, 488, 489, 491, 492], "good": [0, 1, 4, 9, 109, 110, 159, 197, 471, 473, 474, 475, 477, 486, 491, 492], "runtim": [0, 2, 3, 32, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 487], "perform": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 97, 99, 129, 132, 133, 134, 135, 138, 139, 140, 141, 146, 147, 159, 160, 163, 165, 168, 169, 170, 173, 174, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 227, 230, 237, 242, 264, 267, 269, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 315, 318, 319, 322, 323, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 371, 372, 381, 389, 392, 402, 404, 405, 442, 447, 467, 471, 472, 473, 474, 475, 476, 479, 481, 484, 485, 486, 487, 492], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 20, 22, 23, 25, 36, 43, 48, 56, 63, 66, 67, 68, 70, 72, 73, 78, 79, 80, 99, 101, 110, 112, 117, 118, 121, 128, 129, 130, 131, 132, 135, 138, 139, 140, 145, 146, 147, 150, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 225, 260, 262, 276, 279, 285, 302, 307, 324, 336, 338, 342, 347, 348, 349, 359, 372, 378, 383, 387, 394, 402, 404, 405, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492], "read": [0, 2, 3, 7, 32, 40, 41, 45, 49, 63, 65, 68, 69, 70, 72, 75, 76, 79, 80, 99, 103, 104, 105, 106, 109, 112, 119, 121, 125, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 245, 246, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 275, 276, 279, 285, 320, 346, 347, 348, 349, 351, 354, 355, 358, 359, 361, 363, 364, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 404, 405, 407, 409, 410, 411, 412, 413, 429, 442, 447, 466, 471, 472, 473, 475, 476, 477, 484, 485, 486, 487, 488, 491, 492], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 17, 27, 32, 193, 468, 471, 476, 479, 483, 484, 488, 492], "beyond": [0, 51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 475], "api": [0, 1, 2, 3, 5, 32, 40, 41, 43, 49, 51, 66, 75, 78, 83, 132, 135, 161, 162, 165, 190, 192, 247, 274, 276, 277, 284, 336, 338, 342, 402, 405, 466, 467, 468, 475, 476, 477, 478, 479, 480, 485, 486, 487, 489, 491, 492], "check": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 91, 93, 99, 100, 101, 108, 117, 129, 132, 135, 136, 138, 139, 140, 147, 153, 159, 160, 163, 168, 169, 170, 175, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 220, 225, 233, 239, 248, 262, 265, 269, 279, 280, 294, 336, 338, 341, 342, 346, 351, 352, 355, 356, 357, 358, 359, 372, 383, 394, 402, 404, 405, 429, 462, 466, 467, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "paper": [0, 130, 131, 133, 134, 141, 145, 146, 151, 152, 154, 155, 165, 173, 174, 247, 272, 274, 287, 300, 325, 334, 376, 384, 394, 471, 473, 485, 486], "releas": [0, 4, 7, 10, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "sync": [0, 1, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 129, 197, 449, 457, 468, 471], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 99, 112, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 262, 267, 276, 279, 284, 336, 338, 342, 360, 361, 402, 403, 404, 405, 406, 409, 429, 471, 473, 474, 478, 481, 485, 486, 487, 492], "make": [0, 1, 2, 3, 4, 7, 11, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 83, 85, 96, 97, 98, 99, 112, 115, 119, 121, 128, 129, 132, 135, 139, 140, 143, 144, 146, 147, 149, 155, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 225, 232, 240, 243, 247, 248, 252, 256, 260, 264, 268, 272, 279, 282, 285, 300, 301, 302, 305, 306, 307, 313, 314, 316, 336, 338, 342, 351, 359, 369, 371, 386, 389, 391, 402, 403, 404, 405, 406, 409, 410, 411, 412, 427, 444, 453, 461, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "sure": [0, 1, 3, 4, 7, 43, 119, 132, 139, 143, 185, 190, 192, 225, 252, 351, 461, 466, 471, 473, 474, 475, 478, 485, 486, 487, 489, 491, 492], "alwai": [0, 2, 3, 15, 16, 25, 29, 36, 37, 43, 48, 56, 66, 67, 73, 78, 83, 86, 95, 99, 100, 101, 108, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 242, 264, 276, 277, 279, 304, 336, 338, 341, 342, 379, 387, 402, 404, 405, 466, 467, 472, 473, 474, 475, 485, 486, 487, 489], "enjoi": [0, 2, 3, 479], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 154, 157, 158, 161, 162, 444, 473, 485, 486, 487, 491], "featur": [0, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 36, 43, 60, 66, 78, 83, 84, 110, 117, 118, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 195, 216, 219, 234, 237, 239, 245, 262, 263, 271, 276, 282, 286, 287, 297, 298, 300, 301, 302, 305, 306, 307, 308, 313, 316, 317, 336, 338, 342, 359, 366, 369, 371, 386, 389, 391, 402, 405, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 461, 466, 467, 471, 472, 473, 474, 475, 477, 478, 479, 481, 487, 489, 491, 492], "recent": [0, 7, 275, 277, 280, 492], "version": [0, 1, 2, 3, 6, 14, 17, 19, 20, 24, 26, 29, 30, 31, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 62, 64, 66, 67, 72, 73, 78, 87, 88, 89, 90, 97, 99, 117, 129, 132, 135, 138, 139, 140, 141, 147, 154, 155, 159, 160, 161, 163, 165, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 219, 266, 275, 276, 277, 279, 280, 282, 302, 307, 315, 321, 336, 338, 342, 349, 369, 371, 386, 387, 389, 391, 392, 402, 404, 405, 409, 412, 464, 465, 466, 467, 471, 473, 474, 475, 476, 478, 481, 485, 486, 487, 488, 492], "although": [0, 1, 3, 8, 27, 36, 43, 48, 66, 67, 73, 78, 86, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 467, 468, 471, 472, 479, 489], "core": [0, 2, 3, 8, 29, 30, 63, 68, 69, 70, 79, 80, 109, 110, 112, 468, 474, 477, 491], "guarante": [0, 2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 104, 105, 106, 119, 121, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 276, 277, 279, 336, 338, 342, 359, 402, 403, 404, 405, 406, 479], "backward": [0, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 300, 301, 305, 306, 323, 336, 338, 342, 359, 369, 370, 372, 373, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 404, 405, 471, 473, 474, 475, 478, 479, 481, 485, 486, 487], "compat": [0, 2, 3, 7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 73, 78, 99, 104, 106, 112, 115, 117, 118, 119, 123, 129, 132, 135, 139, 141, 147, 156, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 260, 272, 276, 277, 279, 280, 300, 301, 302, 305, 306, 307, 336, 338, 342, 356, 369, 370, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 391, 392, 394, 395, 398, 402, 404, 405, 409, 471, 474, 483, 489], "2": [0, 1, 2, 3, 8, 9, 10, 15, 16, 18, 27, 28, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 78, 79, 80, 81, 84, 85, 95, 97, 99, 103, 105, 109, 110, 112, 117, 118, 123, 125, 129, 130, 131, 132, 135, 136, 139, 145, 146, 147, 150, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 211, 215, 216, 218, 220, 223, 224, 225, 227, 228, 229, 230, 239, 240, 243, 245, 247, 249, 252, 255, 259, 260, 261, 262, 267, 268, 269, 272, 274, 276, 277, 279, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 322, 323, 324, 332, 335, 336, 338, 339, 342, 350, 351, 352, 354, 358, 362, 363, 369, 370, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 404, 405, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 438, 465, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 484, 485, 486, 487, 489, 490, 491, 492], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 103, 104, 105, 109, 110, 112, 117, 118, 125, 129, 130, 131, 132, 135, 138, 139, 141, 142, 145, 146, 147, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 320, 323, 324, 327, 328, 331, 332, 333, 335, 336, 338, 341, 342, 346, 350, 352, 357, 358, 359, 361, 362, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 438, 445, 457, 461, 465, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 20, 25, 26, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 97, 104, 139, 159, 168, 188, 190, 199, 240, 247, 250, 274, 336, 338, 342, 372, 375, 387, 402, 405, 467, 468, 471, 472, 473, 474, 477, 479, 489, 491, 492], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 117, 118, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 295, 296, 299, 302, 307, 309, 310, 313, 314, 324, 325, 326, 334, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 427, 428, 438, 442, 443, 444, 446, 447, 463, 465, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 492], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 103, 182, 193, 198, 239, 249, 267, 268, 277, 336, 338, 342, 347, 348, 349, 358, 377, 385, 394, 463, 471, 485, 487, 491], "willing": 0, "contribut": [0, 2, 187, 311], "cd": [0, 7], "path": [0, 3, 6, 7, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 99, 101, 103, 112, 120, 126, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 247, 274, 279, 310, 336, 338, 342, 402, 403, 404, 405, 406, 431, 436, 447, 468, 472, 475, 481, 485], "root": [0, 2, 3, 40, 41, 49, 51, 63, 68, 70, 75, 85, 100, 101, 108, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 219, 241, 263, 264, 302, 303, 307, 332, 333, 409, 467, 474, 476, 485, 486, 487, 489, 492], "http": [0, 2, 5, 6, 7, 10, 15, 16, 22, 23, 25, 33, 63, 81, 109, 110, 130, 131, 133, 134, 141, 143, 145, 146, 151, 152, 154, 155, 156, 157, 158, 161, 162, 165, 171, 172, 173, 174, 187, 219, 247, 272, 282, 288, 289, 290, 291, 292, 293, 296, 297, 298, 305, 310, 311, 312, 317, 318, 319, 323, 324, 325, 327, 328, 334, 352, 369, 370, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 409, 414, 422, 462, 482, 483, 488, 491], "github": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 130, 131, 133, 134, 138, 141, 145, 146, 151, 152, 154, 155, 157, 158, 161, 162, 165, 171, 172, 173, 174, 216, 219, 272, 282, 477, 481, 483, 485, 486, 491], "com": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 130, 131, 133, 134, 141, 143, 145, 146, 151, 152, 154, 155, 157, 158, 161, 162, 165, 171, 172, 173, 174, 219, 282, 483, 491], "setup": [0, 1, 7, 130, 131, 143, 145, 146, 171, 199, 405, 465], "py": [0, 3, 33, 138, 140, 209, 219, 294, 304, 325, 334, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "develop": [0, 3, 4, 7, 51, 143, 471, 491], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 123, 124, 125, 126, 127, 129, 132, 135, 137, 139, 141, 142, 144, 147, 159, 160, 163, 164, 165, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 210, 212, 214, 215, 216, 218, 219, 222, 224, 225, 229, 235, 239, 241, 247, 248, 250, 257, 262, 264, 267, 268, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 296, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311, 312, 314, 315, 317, 323, 335, 336, 337, 338, 340, 342, 350, 351, 352, 354, 355, 356, 359, 361, 362, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 427, 430, 431, 434, 436, 437, 440, 447, 449, 457, 463, 465, 467, 470, 471, 473, 475, 477, 478, 479, 482, 483, 487, 490, 492], "seri": [0, 2, 3, 7, 8, 60, 102, 113, 123, 124, 127, 128, 168, 242, 268, 429, 466, 467, 471, 472, 473, 480, 481, 485, 486, 489, 492], "quick": [0, 475], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 237, 240, 263, 268, 279, 282, 389, 404, 464, 466, 467, 471, 472, 473, 474, 477, 481, 483, 485, 486, 487, 489, 491, 492], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 123, 125, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 211, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 237, 239, 240, 241, 242, 243, 247, 248, 251, 252, 255, 256, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 274, 276, 277, 279, 280, 285, 286, 287, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 324, 335, 336, 338, 342, 346, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 423, 424, 425, 426, 427, 433, 436, 437, 443, 444, 447, 449, 451, 457, 461, 464, 467, 471, 472, 473, 474, 475, 476, 478, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492], "hurri": [0, 476], "last": [0, 1, 2, 3, 4, 15, 16, 18, 21, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 116, 117, 118, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 154, 155, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 212, 215, 218, 223, 224, 234, 241, 243, 248, 261, 263, 265, 275, 280, 281, 286, 287, 299, 300, 302, 305, 307, 308, 311, 312, 318, 329, 332, 335, 350, 354, 359, 372, 409, 411, 412, 465, 472, 473, 474, 475, 476, 477, 483, 485, 486, 487, 488, 489, 491, 492], "item": [0, 2, 3, 8, 15, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 99, 104, 110, 112, 116, 123, 180, 199, 212, 233, 268, 277, 311, 312, 373, 374, 376, 405, 438, 467, 468, 471, 473, 474, 478, 479, 483, 485, 486, 487, 489], "navig": [0, 193, 483, 486], "previou": [0, 3, 4, 10, 56, 63, 68, 69, 70, 72, 79, 80, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 234, 262, 279, 300, 305, 328, 350, 473, 474, 475, 476, 477, 481, 487, 492], "whenev": [0, 1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 109, 110, 117, 118, 133, 134, 138, 140, 141, 151, 152, 165, 173, 174, 181, 182, 185, 209, 234, 238, 269, 275, 336, 338, 342, 387, 402, 405, 409, 410, 411, 412, 427, 449, 466, 480, 483, 489], "want": [0, 1, 2, 3, 6, 7, 8, 18, 29, 43, 66, 78, 118, 180, 181, 182, 185, 194, 219, 243, 323, 336, 338, 342, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 466, 471, 472, 473, 474, 475, 476, 478, 479, 480, 485, 486, 487, 488, 489, 491, 492], "ted": [0, 45, 57, 76, 77, 100, 101, 108, 463, 470, 482, 490], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 30, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 96, 97, 98, 99, 112, 117, 118, 123, 129, 130, 131, 132, 135, 139, 143, 145, 146, 147, 151, 152, 154, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 223, 224, 237, 241, 247, 260, 262, 265, 266, 267, 268, 269, 272, 274, 276, 277, 279, 281, 284, 286, 287, 294, 299, 302, 307, 312, 313, 314, 317, 323, 325, 332, 334, 336, 338, 342, 347, 349, 352, 354, 355, 358, 359, 362, 370, 371, 372, 377, 383, 385, 386, 387, 389, 392, 394, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 427, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "modul": [0, 1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 99, 123, 129, 130, 131, 132, 135, 139, 147, 150, 153, 156, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 218, 223, 229, 231, 237, 239, 247, 248, 261, 262, 267, 268, 269, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 404, 405, 407, 409, 410, 411, 412, 413, 427, 447, 454, 457, 463, 467, 468, 470, 472, 473, 476, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490], "optim": [0, 1, 2, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 99, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 283, 304, 310, 316, 317, 323, 332, 336, 338, 342, 370, 372, 387, 388, 389, 392, 399, 402, 404, 405, 442, 443, 447, 457, 467, 468, 470, 473, 474, 475, 476, 477, 479, 482, 485, 486, 487, 490], "collect": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 51, 56, 63, 68, 69, 70, 79, 80, 112, 116, 129, 132, 135, 139, 147, 159, 160, 163, 165, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 194, 197, 216, 219, 234, 243, 247, 274, 324, 354, 370, 373, 376, 378, 390, 392, 394, 395, 429, 438, 444, 447, 449, 450, 451, 457, 465, 468, 470, 471, 474, 475, 476, 477, 478, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492], "storag": [0, 1, 8, 15, 16, 18, 21, 29, 36, 43, 45, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 82, 85, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 120, 121, 122, 123, 125, 126, 129, 132, 135, 137, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 219, 227, 230, 252, 279, 336, 338, 342, 371, 386, 389, 402, 403, 404, 405, 406, 463, 468, 470, 472, 473, 474, 475, 476, 478, 481, 482, 485, 486, 488, 490], "log": [0, 3, 4, 8, 11, 72, 199, 294, 295, 296, 304, 311, 312, 320, 332, 333, 338, 342, 351, 352, 355, 359, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 436, 440, 441, 442, 447, 457, 466, 467, 468, 470, 471, 472, 473, 476, 477, 481, 482, 485, 486, 487, 490, 491], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 143, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 336, 338, 342, 359, 371, 389, 402, 404, 405, 437, 461, 463, 464, 465, 466, 467, 470, 472, 473, 474, 476, 477, 478, 479, 480, 482, 485, 486, 489, 490, 491], "own": [0, 1, 15, 16, 21, 27, 28, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 429, 463, 467, 470, 472, 473, 476, 482, 485, 486, 487, 490], "train": [0, 1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 31, 33, 36, 39, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 95, 96, 97, 98, 99, 109, 110, 129, 132, 135, 139, 144, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 227, 235, 247, 261, 266, 269, 272, 274, 279, 281, 282, 284, 289, 291, 299, 304, 324, 336, 338, 340, 342, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 447, 449, 457, 463, 465, 466, 468, 470, 472, 476, 479, 480, 482, 488, 489, 490, 491, 492], "loop": [0, 1, 8, 18, 29, 62, 64, 71, 85, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 281, 299, 323, 324, 370, 372, 378, 385, 389, 390, 392, 394, 395, 403, 406, 409, 410, 411, 412, 447, 467, 468, 470, 471, 472, 476, 478, 479, 480, 482, 484, 489, 490, 491], "ppo": [0, 1, 4, 8, 355, 359, 371, 386, 389, 402, 463, 466, 470, 471, 472, 475, 477, 478, 482, 485, 490], "pendulum": [0, 3, 15, 16, 18, 21, 27, 28, 29, 30, 68, 99, 123, 129, 132, 133, 134, 135, 136, 138, 139, 140, 147, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 222, 223, 225, 232, 238, 239, 243, 250, 252, 256, 257, 260, 262, 263, 264, 267, 268, 269, 270, 276, 277, 279, 285, 302, 307, 404, 457, 466, 470, 472, 473, 476, 477, 478, 482, 490, 491, 492], "introduct": [0, 467, 470, 476, 482, 485, 486, 490, 492], "multi": [0, 1, 7, 9, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 99, 100, 101, 108, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 240, 269, 279, 300, 302, 305, 307, 308, 313, 314, 315, 336, 338, 342, 354, 359, 402, 404, 405, 407, 409, 410, 411, 412, 463, 470, 471, 472, 473, 474, 476, 477, 482, 487, 490, 491], "agent": [0, 9, 69, 74, 75, 144, 150, 151, 152, 157, 158, 161, 162, 166, 167, 171, 172, 173, 174, 176, 193, 240, 259, 260, 261, 311, 312, 313, 314, 315, 317, 325, 334, 371, 386, 389, 407, 463, 470, 476, 482, 487, 490], "env": [0, 1, 2, 5, 6, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 36, 40, 43, 45, 48, 51, 56, 66, 67, 68, 72, 73, 76, 78, 85, 97, 99, 112, 123, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 285, 302, 307, 309, 310, 336, 338, 342, 354, 358, 387, 402, 404, 405, 427, 428, 429, 437, 451, 452, 453, 457, 459, 460, 461, 463, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 108, 109, 110, 111, 112, 117, 118, 123, 125, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 320, 322, 323, 324, 325, 326, 332, 333, 334, 335, 336, 338, 339, 340, 342, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 422, 427, 429, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 457, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 492], "pretrain": [0, 470, 482, 490], "recurr": [0, 2, 218, 300, 301, 302, 305, 307, 328, 345, 409, 470, 472, 477, 482, 489, 490], "dqn": [0, 2, 212, 231, 287, 296, 351, 352, 369, 370, 372, 373, 374, 376, 378, 379, 380, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 402, 405, 407, 454, 463, 466, 470, 475, 477, 478, 481, 482, 490], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 56, 68, 76, 129, 130, 131, 132, 135, 139, 147, 153, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 195, 197, 199, 208, 224, 229, 239, 241, 261, 264, 281, 284, 285, 296, 299, 302, 307, 313, 314, 317, 324, 326, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 362, 369, 370, 371, 372, 373, 377, 378, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 405, 442, 449, 452, 453, 457, 459, 460, 463, 465, 466, 468, 470, 472, 476, 478, 479, 482, 488, 489, 490, 491, 492], "replai": [0, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 63, 68, 69, 70, 79, 80, 99, 109, 110, 111, 112, 113, 114, 116, 118, 119, 121, 123, 124, 128, 218, 219, 229, 248, 252, 262, 268, 279, 372, 373, 374, 376, 377, 378, 385, 390, 392, 394, 395, 404, 444, 447, 455, 457, 463, 465, 467, 468, 470, 475, 482, 487, 488, 490], "buffer": [0, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 128, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 219, 223, 229, 237, 247, 248, 252, 262, 267, 268, 269, 272, 274, 279, 281, 324, 336, 338, 342, 350, 358, 361, 371, 372, 373, 374, 376, 377, 378, 385, 386, 389, 390, 392, 394, 395, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 444, 447, 455, 457, 463, 465, 467, 468, 470, 475, 480, 482, 487, 488, 490, 492], "export": [0, 6, 7, 470, 482, 490], "llm": [0, 2, 29, 30, 31, 72, 84, 95, 96, 97, 98, 99, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 304, 336, 337, 338, 339, 340, 341, 342, 402, 403, 404, 405, 406, 463, 470, 482, 490], "build": [0, 1, 2, 3, 7, 32, 36, 40, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 99, 112, 129, 130, 131, 132, 135, 139, 140, 141, 145, 146, 147, 151, 152, 154, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 252, 276, 277, 279, 283, 310, 336, 338, 342, 353, 355, 359, 402, 404, 405, 447, 454, 455, 456, 466, 467, 468, 470, 473, 474, 475, 477, 478, 479, 480, 482, 485, 486, 487, 488, 490, 491, 492], "tool": [0, 1, 2, 3, 5, 180, 193, 196, 198, 465, 466, 467, 470, 474, 476, 482, 485, 487, 489, 490, 492], "enabl": [0, 2, 7, 8, 103, 105, 116, 125, 193, 216, 302, 307, 324, 338, 342, 354, 427, 429, 442, 465, 470, 473, 476, 482, 485, 486, 487, 489, 490], "competit": [0, 3, 151, 152, 470, 482, 486, 490], "ddpg": [0, 289, 290, 291, 292, 373, 384, 393, 463, 466, 470, 472, 478, 482, 486, 490], "task": [0, 2, 3, 9, 72, 74, 75, 84, 129, 132, 133, 134, 135, 139, 142, 147, 151, 152, 159, 160, 161, 162, 163, 165, 168, 169, 170, 173, 174, 180, 181, 182, 185, 187, 188, 189, 190, 192, 247, 260, 269, 272, 274, 377, 385, 465, 470, 471, 472, 473, 474, 476, 477, 482, 483, 485, 486, 487, 490, 492], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 157, 158, 159, 160, 163, 168, 169, 170, 173, 180, 181, 182, 185, 188, 189, 190, 194, 207, 241, 262, 277, 293, 302, 307, 350, 369, 371, 387, 389, 391, 402, 405, 429, 447, 463, 465, 467, 468, 470, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 489, 490, 491], "object": [0, 2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 40, 43, 48, 56, 58, 62, 64, 66, 67, 71, 73, 78, 83, 84, 85, 96, 97, 98, 99, 103, 104, 105, 106, 112, 115, 119, 121, 125, 128, 129, 132, 135, 139, 145, 147, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 227, 230, 231, 237, 240, 243, 247, 267, 268, 269, 272, 276, 277, 279, 302, 307, 310, 313, 314, 325, 332, 334, 336, 338, 342, 346, 347, 355, 358, 359, 360, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 451, 452, 453, 456, 457, 461, 463, 466, 468, 470, 472, 473, 474, 475, 479, 481, 482, 485, 486, 487, 489, 490, 492], "loss": [0, 3, 8, 64, 199, 231, 304, 311, 323, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 402, 405, 407, 408, 409, 443, 447, 454, 457, 465, 467, 468, 470, 475, 476, 478, 479, 480, 482, 487, 489, 490], "trainer": [0, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 470, 471, 482, 490], "exampl": [0, 1, 2, 4, 9, 10, 15, 16, 18, 21, 22, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 95, 96, 97, 98, 99, 103, 104, 105, 109, 110, 112, 117, 118, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 320, 322, 323, 324, 325, 326, 334, 335, 336, 338, 339, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 427, 429, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 457, 463, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492], "packag": [0, 6, 7, 10, 209, 463, 464, 483, 492], "batch": [0, 2, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 40, 56, 58, 60, 63, 65, 68, 69, 70, 72, 79, 80, 81, 83, 95, 99, 103, 104, 105, 106, 110, 111, 112, 116, 117, 118, 123, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 163, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 216, 219, 223, 225, 234, 241, 243, 245, 248, 252, 259, 262, 264, 268, 269, 271, 275, 276, 277, 279, 282, 294, 300, 301, 302, 304, 305, 306, 307, 311, 312, 313, 314, 315, 316, 320, 324, 325, 331, 335, 338, 342, 345, 354, 358, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 438, 441, 444, 445, 446, 447, 449, 459, 460, 461, 463, 466, 467, 468, 472, 473, 474, 475, 476, 479, 481, 483, 484, 485, 486, 488, 491, 492], "size": [0, 2, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 116, 117, 118, 119, 125, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 216, 218, 219, 220, 223, 226, 227, 230, 231, 232, 234, 237, 240, 241, 245, 247, 249, 250, 252, 256, 258, 259, 260, 262, 264, 265, 268, 269, 270, 271, 274, 276, 279, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 335, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 363, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 429, 438, 444, 463, 466, 467, 472, 473, 474, 475, 476, 477, 479, 483, 485, 486, 487, 492], "copi": [0, 2, 3, 14, 17, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 215, 219, 237, 250, 261, 267, 268, 269, 276, 277, 279, 280, 302, 307, 315, 336, 338, 342, 350, 372, 387, 392, 402, 403, 404, 405, 406, 409, 427, 463, 467, 471, 472, 474, 476, 485, 489, 491], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 63, 66, 67, 72, 73, 78, 99, 109, 110, 112, 115, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 237, 240, 247, 262, 267, 268, 269, 272, 274, 279, 300, 301, 302, 305, 306, 307, 313, 315, 317, 336, 338, 341, 342, 358, 369, 370, 371, 372, 378, 381, 389, 392, 394, 402, 404, 405, 449, 456, 463, 465, 466, 468, 471, 472, 473, 484, 487, 489, 491], "synchron": [0, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 62, 64, 71, 85, 96, 97, 98, 154, 186, 403, 406, 459, 460, 463, 472, 473, 485], "distribut": [0, 2, 3, 4, 9, 10, 14, 17, 20, 22, 23, 24, 25, 26, 27, 28, 31, 63, 68, 69, 70, 79, 80, 112, 132, 161, 162, 195, 197, 239, 243, 277, 281, 283, 294, 295, 296, 297, 303, 304, 310, 311, 312, 320, 321, 322, 323, 327, 328, 331, 332, 333, 340, 350, 351, 352, 355, 359, 360, 369, 370, 371, 372, 377, 378, 379, 385, 386, 389, 390, 391, 392, 394, 395, 402, 463, 467, 468, 472, 473, 475, 477, 479, 485, 486, 487, 491, 492], "interoper": [0, 15, 16, 463], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 99, 110, 117, 118, 129, 130, 131, 132, 133, 134, 135, 138, 139, 145, 146, 147, 153, 154, 155, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 237, 242, 243, 259, 267, 268, 269, 276, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 359, 360, 361, 362, 365, 372, 378, 392, 402, 404, 405, 429, 436, 442, 459, 460, 461, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 485, 486, 487, 491], "asynchron": [0, 3, 9, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 369, 402, 403, 404, 405, 406, 459, 463, 471, 472, 473], "singl": [0, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 40, 41, 43, 46, 48, 49, 51, 54, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 85, 96, 97, 98, 99, 104, 112, 118, 123, 129, 132, 135, 138, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 212, 219, 220, 240, 247, 252, 262, 267, 269, 274, 279, 286, 287, 300, 301, 302, 305, 306, 307, 308, 314, 336, 338, 342, 357, 361, 370, 371, 372, 374, 376, 378, 379, 385, 386, 389, 390, 392, 394, 395, 399, 402, 403, 404, 405, 406, 409, 410, 411, 412, 418, 419, 420, 421, 423, 424, 425, 426, 427, 461, 463, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 491], "node": [0, 2, 20, 22, 23, 25, 27, 28, 40, 41, 49, 51, 62, 64, 71, 75, 85, 96, 97, 98, 147, 186, 189, 267, 340, 403, 406, 463, 479, 491], "helper": [0, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 471, 472, 474, 485, 487], "compos": [0, 3, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 99, 111, 112, 113, 114, 123, 124, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 224, 225, 237, 251, 267, 268, 269, 276, 279, 336, 338, 342, 353, 354, 372, 381, 392, 402, 404, 405, 429, 463, 471, 472, 473, 474, 475, 479, 483, 484, 486, 488, 489, 491, 492], "episod": [0, 3, 51, 110, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 215, 252, 255, 261, 283, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 463, 472, 476, 481, 485, 486, 489], "format": [0, 1, 3, 36, 43, 45, 48, 54, 55, 56, 57, 60, 61, 66, 67, 73, 76, 77, 78, 85, 97, 99, 100, 101, 108, 115, 123, 129, 132, 135, 139, 147, 159, 160, 161, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405, 429, 463, 465, 471, 472, 475, 476, 478, 480, 483, 491, 492], "tensorspec": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 164, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 212, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 234, 236, 238, 239, 240, 241, 243, 245, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 299, 324, 328, 346, 350, 351, 352, 355, 356, 357, 358, 359, 360, 362, 370, 372, 374, 377, 378, 390, 392, 394, 395, 404, 407, 463, 487], "tree": [0, 1, 51, 62, 64, 71, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 219, 403, 406, 463, 485, 489], "forest": [0, 51, 85, 463], "larg": [0, 3, 4, 39, 62, 64, 71, 85, 96, 97, 98, 109, 110, 117, 118, 186, 227, 230, 272, 304, 369, 371, 386, 389, 391, 402, 403, 406, 463, 472, 473, 485, 486, 489], "languag": [0, 33, 72, 188, 463], "human": [0, 33, 181, 463, 487], "feedback": [0, 181, 463, 481, 491], "rlhf": [0, 181, 195, 239, 463, 466], "spec": [0, 1, 2, 15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 99, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 155, 157, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 243, 245, 247, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 296, 299, 302, 307, 324, 326, 328, 346, 350, 351, 352, 355, 356, 357, 358, 359, 361, 362, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 404, 407, 463, 466, 467, 471, 472, 473, 474, 475, 476, 477, 481, 483, 484, 485, 486, 491], "lock": [0, 40, 41, 49, 62, 64, 71, 75, 85, 96, 97, 98, 129, 132, 135, 139, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 216, 225, 262, 276, 277, 403, 406, 463, 467, 487], "method": [0, 1, 2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 112, 117, 118, 119, 120, 121, 123, 125, 129, 132, 135, 138, 139, 140, 141, 146, 147, 159, 160, 163, 164, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 234, 235, 238, 239, 241, 243, 246, 247, 248, 249, 250, 251, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 294, 299, 302, 307, 313, 314, 315, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 366, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 383, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 413, 427, 428, 458, 463, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485, 487, 489, 492], "partial": [0, 2, 15, 16, 18, 21, 29, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 218, 219, 261, 262, 263, 355, 447, 463, 474], "step": [0, 1, 4, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 56, 72, 85, 99, 100, 101, 108, 110, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 234, 235, 238, 239, 241, 243, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 279, 281, 282, 283, 297, 299, 300, 302, 305, 307, 309, 310, 323, 324, 354, 355, 359, 369, 380, 389, 404, 408, 409, 410, 411, 412, 415, 416, 417, 428, 431, 438, 442, 447, 463, 465, 468, 472, 474, 475, 477, 478, 480, 481, 484, 487, 488, 491], "reset": [0, 1, 2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 99, 112, 118, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 214, 215, 216, 219, 231, 234, 238, 242, 247, 255, 260, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 279, 280, 285, 300, 302, 307, 315, 324, 336, 338, 342, 344, 354, 387, 402, 404, 405, 428, 463, 465, 467, 471, 472, 473, 474, 476, 479, 483, 484, 485, 486, 491], "vector": [0, 1, 8, 34, 60, 130, 131, 140, 145, 146, 150, 161, 162, 165, 173, 174, 229, 275, 277, 289, 291, 300, 301, 305, 306, 308, 409, 412, 422, 423, 424, 425, 426, 463, 466, 467, 471, 472, 474, 484, 485, 486, 487, 488, 492], "async": [0, 15, 16, 18, 21, 22, 23, 25, 27, 29, 68, 129, 163, 169, 275, 463, 465], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 272, 279, 313, 314, 336, 338, 342, 362, 368, 379, 389, 396, 402, 404, 405, 461, 463, 465, 466, 471, 472, 473, 474, 477, 478, 480, 483, 485, 486], "nativ": [0, 1, 7, 9, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 429, 463, 474, 489], "auto": [0, 31, 105, 125, 135, 140, 214, 215, 269, 275, 324, 370, 372, 378, 388, 390, 392, 394, 395, 463, 467, 485, 486], "dynam": [0, 2, 7, 15, 16, 18, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 204, 279, 377, 385, 463, 473, 476, 487], "mask": [0, 1, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 97, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 199, 213, 248, 279, 284, 285, 296, 299, 304, 311, 312, 326, 338, 342, 350, 351, 352, 356, 357, 378, 392, 405, 444, 463, 472, 474, 475, 492], "action": [0, 2, 8, 9, 15, 16, 18, 21, 27, 29, 30, 45, 51, 60, 68, 72, 76, 78, 85, 99, 109, 110, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 213, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 241, 242, 243, 245, 249, 250, 252, 256, 260, 262, 266, 268, 269, 270, 271, 275, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 302, 307, 308, 309, 310, 311, 312, 313, 322, 324, 325, 326, 328, 331, 332, 334, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 362, 363, 369, 370, 371, 372, 373, 374, 376, 377, 378, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 457, 461, 463, 465, 466, 468, 471, 472, 473, 475, 476, 477, 478, 483, 484, 485, 486, 488, 491, 492], "record": [0, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 212, 239, 279, 336, 338, 342, 389, 402, 404, 405, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 442, 457, 463, 472, 473, 477, 481, 485], "domain": [0, 2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 97, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 193, 204, 229, 237, 262, 270, 346, 351, 352, 355, 356, 357, 358, 359, 360, 361, 366, 463, 473, 478, 483, 485, 486, 487, 491, 492], "interfac": [0, 1, 3, 129, 142, 156, 308, 316, 338, 342, 463, 466, 467, 471, 473, 475, 480, 483, 487, 489], "structur": [0, 1, 3, 7, 51, 58, 62, 63, 64, 70, 71, 72, 79, 80, 83, 84, 85, 96, 97, 98, 104, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 187, 188, 189, 190, 194, 211, 227, 230, 262, 313, 324, 338, 342, 369, 378, 389, 392, 403, 406, 409, 410, 411, 412, 413, 463, 467, 471, 473, 474, 476, 479, 485, 486, 487, 488], "actor": [0, 3, 4, 27, 29, 30, 31, 68, 164, 195, 199, 239, 283, 288, 289, 291, 296, 297, 299, 310, 322, 324, 326, 339, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 402, 405, 407, 463, 467, 472, 474, 476, 478, 481, 485, 488, 491], "explor": [0, 1, 278, 281, 284, 299, 317, 324, 346, 351, 352, 355, 356, 357, 358, 359, 369, 387, 442, 452, 453, 457, 463, 473, 474, 475, 476, 478, 479, 481, 485, 486, 487], "valu": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 109, 110, 112, 117, 118, 123, 129, 132, 135, 139, 140, 147, 150, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 215, 217, 219, 220, 222, 225, 227, 228, 229, 230, 231, 237, 242, 243, 247, 248, 251, 252, 253, 255, 257, 259, 262, 263, 267, 268, 269, 274, 275, 276, 277, 279, 280, 281, 282, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 304, 307, 308, 310, 311, 312, 313, 314, 316, 317, 320, 324, 325, 326, 331, 332, 333, 334, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 437, 438, 440, 441, 442, 443, 444, 447, 457, 463, 468, 472, 475, 478, 479, 480, 484, 485, 486, 487, 489, 491, 492], "gener": [0, 1, 2, 3, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 72, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 99, 112, 114, 116, 129, 132, 135, 136, 139, 147, 151, 152, 153, 156, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 213, 216, 223, 225, 227, 228, 232, 237, 239, 241, 243, 249, 250, 255, 256, 260, 262, 266, 268, 270, 275, 277, 279, 284, 285, 294, 302, 307, 311, 312, 320, 338, 342, 346, 355, 359, 363, 364, 383, 390, 397, 404, 405, 409, 414, 422, 432, 447, 463, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "hook": [0, 2, 14, 17, 19, 20, 24, 26, 31, 36, 43, 45, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 99, 112, 126, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 326, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 402, 404, 405, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 463], "planner": [0, 283, 310, 463], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 112, 113, 116, 117, 118, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 211, 212, 213, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 237, 239, 240, 243, 245, 247, 249, 250, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 268, 269, 270, 272, 274, 276, 277, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 438, 445, 446, 457, 463, 466, 468, 471, 472, 473, 474, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "vmap": [0, 300, 301, 305, 306, 315, 335, 358, 361, 370, 372, 378, 385, 387, 390, 392, 394, 395, 402, 405, 409, 410, 411, 412, 463, 466], "random": [0, 1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 72, 74, 75, 83, 86, 87, 88, 89, 90, 111, 123, 129, 132, 135, 139, 147, 153, 159, 160, 163, 164, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 194, 212, 229, 242, 243, 262, 269, 285, 299, 300, 302, 305, 355, 358, 359, 366, 370, 387, 390, 402, 405, 442, 451, 463, 466, 471, 472, 473, 475, 476, 477, 479, 487, 488, 489, 491, 492], "sac": [0, 378, 390, 392, 463], "redq": [0, 390, 463], "crossq": [0, 372, 463], "iql": [0, 377, 385, 463, 471, 485, 486], "cql": [0, 370, 376, 463], "gail": [0, 383, 463], "dt": [0, 160, 324, 463, 487], "td3": [0, 394, 395, 463], "bc": [0, 5, 394, 463], "a2c": [0, 369, 463], "dreamer": [0, 205, 206, 297, 380, 381, 382, 463, 466], "checkpoint": [0, 70, 101, 103, 107, 119, 120, 122, 126, 463, 489], "builder": [0, 187, 191, 463, 472, 492], "logger": [0, 3, 11, 427, 429, 431, 432, 433, 434, 435, 436, 441, 447, 457, 461, 463, 472, 485], "_util": [0, 3, 159, 280, 463, 475, 481], "implement_for": [0, 3, 463], "set_auto_unwrap_transformed_env": [0, 12, 269, 463], "auto_unwrap_transformed_env": [0, 437, 463], "thing": [0, 1, 3, 7, 8, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 268, 313, 314, 378, 392, 464, 473, 474, 475, 476, 477, 478, 479, 480, 485, 486, 489, 492], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 36, 40, 41, 43, 48, 49, 56, 63, 66, 67, 70, 73, 75, 78, 79, 80, 99, 103, 105, 117, 118, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 229, 276, 279, 294, 311, 313, 314, 331, 336, 338, 342, 370, 372, 385, 390, 392, 394, 395, 402, 404, 405, 409, 411, 412, 464, 467, 471, 476, 477, 478, 487, 489], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 116, 117, 118, 119, 121, 125, 129, 132, 135, 136, 138, 139, 140, 146, 147, 150, 151, 152, 154, 156, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 210, 213, 215, 218, 219, 223, 224, 227, 229, 230, 239, 240, 242, 243, 247, 248, 255, 262, 264, 267, 268, 269, 272, 274, 275, 276, 277, 279, 280, 282, 283, 294, 296, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 323, 326, 332, 336, 338, 342, 354, 355, 358, 359, 361, 365, 370, 371, 372, 374, 378, 379, 385, 386, 387, 389, 390, 392, 394, 395, 396, 402, 404, 405, 407, 408, 409, 410, 411, 412, 427, 428, 429, 431, 434, 436, 444, 461, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 477, 479, 480, 485, 486, 487, 488, 489, 491, 492], "debug": [0, 6, 8, 51, 72, 85, 197, 264, 464, 492], "work": [0, 1, 2, 3, 4, 8, 24, 26, 36, 43, 48, 56, 66, 67, 70, 73, 78, 99, 103, 109, 110, 115, 117, 118, 121, 128, 129, 132, 135, 138, 139, 140, 143, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 277, 279, 280, 286, 287, 308, 336, 338, 342, 352, 357, 362, 371, 386, 389, 402, 404, 405, 447, 464, 465, 466, 471, 472, 473, 474, 476, 479, 484, 485, 486, 487, 488, 489, 491, 492], "habitat": [0, 3, 141, 464, 488], "lab": [0, 3, 133, 134, 141, 144, 464], "mujoco": [0, 6, 8, 165, 464, 471, 473, 474], "error": [0, 1, 3, 7, 10, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 71, 73, 74, 78, 85, 96, 97, 98, 99, 103, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 171, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 248, 267, 279, 280, 336, 338, 342, 387, 402, 403, 404, 405, 406, 464, 467, 471, 473, 485, 486, 492], "solut": [0, 2, 3, 6, 7, 9, 27, 117, 464, 466, 468, 475, 491], "resourc": [0, 1, 13, 22, 23, 25, 27, 141, 193, 464, 465, 471, 473, 475, 485, 486], "issu": [0, 2, 3, 4, 5, 8, 68, 101, 103, 105, 109, 110, 117, 125, 129, 132, 135, 138, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 219, 248, 263, 346, 351, 352, 355, 356, 357, 358, 359, 371, 389, 464, 491], "customis": [0, 464, 472, 480], "video": [0, 4, 9, 96, 429, 431, 434, 436, 442, 461, 463, 464, 481, 485, 486], "render": [0, 3, 8, 146, 173, 427, 429, 442, 464, 471, 472, 473, 475, 476, 480], "index": [0, 3, 7, 8, 10, 18, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 109, 110, 112, 113, 115, 117, 121, 123, 124, 125, 127, 128, 129, 132, 135, 139, 147, 151, 152, 157, 158, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 186, 188, 189, 190, 210, 214, 219, 223, 229, 269, 304, 311, 312, 354, 403, 406, 463, 476, 483, 484, 485, 486, 489, 491], "search": [0, 2, 40, 41, 49, 75, 85, 156, 211, 472], "page": [0, 7, 33, 193, 436, 478, 483], "import": [1, 2, 3, 4, 6, 10, 11, 15, 16, 18, 21, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 109, 110, 112, 117, 118, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 215, 216, 218, 219, 222, 224, 225, 231, 232, 237, 238, 239, 240, 243, 245, 247, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 270, 274, 276, 277, 279, 280, 283, 285, 289, 290, 291, 292, 295, 296, 298, 299, 300, 301, 302, 305, 306, 307, 308, 310, 313, 314, 315, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 427, 429, 440, 442, 457, 465, 466, 467, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "syncdatacollector": [1, 2, 3, 15, 16, 19, 21, 22, 23, 25, 27, 29, 30, 45, 56, 76, 216, 219, 252, 284, 302, 307, 457, 460, 463, 471, 472, 473, 474, 475, 479, 481, 485, 486, 489], "currentmodul": 1, "somewhat": [1, 2, 194, 467, 477, 492], "equival": [1, 3, 27, 30, 31, 34, 35, 36, 39, 40, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 99, 129, 130, 131, 132, 135, 138, 139, 140, 141, 144, 145, 146, 147, 154, 155, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 228, 231, 262, 264, 269, 279, 296, 305, 308, 326, 336, 338, 342, 351, 352, 356, 357, 389, 402, 403, 404, 405, 406, 444, 479, 491, 492], "dataload": [1, 29, 95, 116, 118, 181, 182, 185, 188, 194, 472, 479, 489], "except": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 233, 252, 261, 262, 263, 267, 269, 279, 281, 299, 300, 302, 305, 307, 320, 324, 336, 338, 342, 369, 372, 387, 389, 392, 402, 403, 404, 405, 406, 429, 466, 471, 472, 476, 485, 489, 491, 492], "1": [1, 2, 3, 4, 8, 10, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 109, 110, 112, 117, 118, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 237, 239, 240, 241, 243, 245, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 274, 276, 277, 279, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 320, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 381, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 423, 424, 426, 427, 429, 438, 442, 444, 445, 457, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492], "thei": [1, 2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 110, 112, 129, 132, 135, 138, 139, 140, 147, 150, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 233, 239, 247, 256, 264, 268, 269, 274, 279, 307, 336, 338, 342, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 444, 447, 466, 467, 468, 471, 472, 473, 474, 475, 478, 484, 485, 486, 487, 488, 489, 491, 492], "over": [1, 2, 3, 4, 8, 15, 16, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 94, 97, 99, 109, 110, 112, 116, 117, 118, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 229, 243, 255, 263, 277, 279, 311, 320, 323, 332, 335, 336, 338, 342, 361, 379, 381, 387, 402, 404, 405, 409, 415, 427, 450, 466, 468, 471, 472, 473, 475, 476, 477, 478, 479, 485, 486, 487, 492], "non": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 36, 37, 38, 40, 41, 43, 48, 49, 50, 56, 58, 59, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 104, 106, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 216, 217, 219, 223, 234, 247, 259, 262, 268, 269, 270, 271, 272, 274, 277, 279, 285, 300, 302, 305, 307, 313, 336, 338, 342, 358, 359, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 466, 471, 474, 475, 485, 486, 487, 489, 492], "static": [1, 43, 66, 72, 78, 84, 110, 117, 118, 141, 160, 184, 190, 276, 280, 336, 338, 342, 385, 402, 405, 476, 487, 489], "like": [1, 2, 3, 4, 7, 11, 24, 27, 36, 40, 41, 43, 48, 49, 51, 56, 58, 63, 66, 67, 70, 73, 75, 78, 79, 80, 84, 99, 106, 112, 118, 129, 132, 135, 136, 139, 141, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 231, 262, 265, 279, 300, 305, 314, 336, 338, 342, 353, 359, 369, 371, 386, 389, 390, 391, 402, 404, 405, 466, 467, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492], "being": [1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 36, 43, 48, 56, 66, 67, 73, 74, 78, 95, 99, 104, 106, 109, 110, 123, 126, 129, 132, 135, 138, 139, 140, 141, 146, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 218, 227, 229, 230, 237, 242, 250, 262, 267, 268, 269, 279, 299, 302, 307, 324, 336, 338, 342, 371, 372, 386, 387, 389, 392, 402, 404, 405, 429, 444, 449, 459, 460, 461, 466, 467, 471, 472, 473, 474, 479, 485, 486, 487, 489], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 70, 71, 73, 78, 85, 86, 95, 96, 97, 98, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 214, 219, 223, 234, 237, 247, 255, 259, 262, 267, 268, 269, 270, 271, 272, 274, 279, 308, 335, 336, 338, 342, 358, 359, 360, 372, 392, 402, 403, 404, 405, 406, 429, 468, 473, 476, 480, 489, 491, 492], "two": [1, 2, 3, 4, 8, 10, 36, 43, 48, 51, 52, 53, 54, 55, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 85, 99, 112, 116, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 224, 243, 247, 267, 274, 279, 292, 300, 302, 305, 307, 313, 314, 329, 332, 336, 338, 342, 359, 386, 394, 398, 402, 404, 405, 442, 447, 467, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 489, 491, 492], "main": [1, 2, 3, 5, 15, 16, 20, 25, 28, 32, 68, 136, 187, 219, 224, 359, 447, 465, 466, 467, 471, 472, 483, 484, 491, 492], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 110, 112, 115, 116, 117, 118, 121, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 228, 231, 232, 233, 235, 237, 238, 239, 241, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 299, 300, 302, 305, 307, 308, 311, 312, 313, 314, 316, 324, 335, 336, 338, 339, 342, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 397, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 417, 427, 428, 429, 434, 436, 440, 447, 450, 457, 458, 461, 471, 472, 473, 474, 475, 476, 477, 479, 485, 486, 487, 489, 491, 492], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 99, 104, 106, 112, 115, 116, 117, 118, 119, 121, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 217, 218, 222, 227, 228, 230, 239, 240, 243, 245, 247, 255, 257, 265, 266, 267, 268, 269, 271, 272, 274, 276, 279, 285, 286, 287, 289, 295, 298, 302, 307, 308, 311, 312, 318, 326, 336, 337, 338, 339, 342, 352, 354, 356, 357, 359, 361, 362, 363, 370, 372, 385, 387, 390, 392, 394, 395, 401, 402, 404, 405, 409, 412, 427, 428, 442, 444, 459, 460, 467, 471, 473, 476, 477, 478, 479, 483, 484, 485, 487, 488, 489, 491, 492], "constructor": [1, 2, 3, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 68, 70, 79, 80, 84, 109, 123, 129, 132, 135, 139, 147, 154, 159, 160, 163, 168, 169, 170, 173, 180, 181, 182, 185, 187, 188, 189, 190, 199, 215, 219, 267, 286, 287, 308, 345, 355, 359, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 409, 410, 411, 412, 413, 458, 461, 465, 466, 471, 472, 473, 476, 479, 485, 486, 489, 491], "iter": [1, 2, 3, 16, 18, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 94, 95, 99, 106, 112, 116, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 232, 243, 256, 279, 280, 282, 284, 285, 286, 287, 308, 313, 314, 330, 336, 338, 342, 346, 351, 355, 356, 358, 360, 361, 363, 387, 401, 402, 404, 405, 442, 446, 447, 467, 468, 471, 473, 474, 479, 481, 485, 486, 487], "execut": [1, 2, 3, 6, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 103, 104, 106, 112, 117, 118, 129, 130, 131, 132, 135, 136, 139, 140, 141, 143, 145, 146, 147, 153, 154, 159, 160, 163, 165, 168, 169, 170, 171, 180, 181, 182, 185, 188, 189, 190, 196, 198, 213, 224, 225, 241, 264, 269, 299, 300, 302, 305, 307, 315, 339, 345, 354, 360, 361, 387, 394, 402, 404, 405, 451, 461, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 485, 486, 489, 490, 491, 492], "queri": [1, 2, 3, 15, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 104, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247, 272, 276, 279, 336, 338, 342, 361, 402, 403, 404, 405, 406, 467, 471, 478, 483, 487, 491], "defin": [1, 2, 3, 15, 16, 18, 20, 21, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 248, 261, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 313, 315, 318, 319, 322, 323, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 366, 374, 376, 387, 402, 404, 405, 409, 410, 411, 412, 413, 428, 458, 466, 471, 472, 474, 478, 481, 487, 489, 492], "number": [1, 2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 112, 115, 117, 118, 125, 129, 130, 131, 132, 135, 138, 139, 140, 145, 146, 147, 153, 154, 155, 156, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 231, 232, 233, 235, 238, 239, 242, 243, 246, 248, 249, 250, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 279, 281, 282, 283, 286, 287, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 313, 314, 318, 319, 324, 325, 327, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 346, 350, 354, 355, 358, 359, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 434, 436, 438, 440, 442, 447, 449, 450, 451, 459, 460, 461, 465, 466, 467, 471, 472, 473, 474, 476, 477, 479, 481, 485, 486, 487, 488, 489, 492], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 56, 66, 67, 73, 78, 84, 85, 99, 116, 118, 123, 129, 132, 135, 139, 140, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 279, 284, 300, 302, 307, 308, 316, 317, 336, 338, 342, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 410, 411, 412, 444, 465, 471, 473, 474, 475, 479, 480, 485, 486, 487, 489, 492], "deliv": [1, 2, 3, 18, 194, 471, 472, 476, 479, 491], "stack": [1, 2, 3, 7, 8, 15, 16, 18, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 75, 78, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 104, 109, 112, 129, 132, 135, 138, 139, 140, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 194, 202, 203, 219, 224, 241, 276, 300, 302, 305, 306, 307, 354, 360, 361, 370, 372, 385, 390, 392, 394, 395, 403, 406, 409, 428, 438, 463, 465, 472, 475, 476, 483, 484, 485, 487, 491], "user": [1, 2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 97, 99, 110, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 171, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 220, 237, 261, 267, 269, 279, 293, 336, 338, 342, 372, 389, 392, 394, 402, 404, 405, 429, 458, 465, 467, 468, 471, 472, 476, 478, 479, 487, 491, 492], "reach": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 72, 116, 129, 132, 135, 139, 146, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 241, 260, 281, 299, 324, 471, 473, 481, 483, 485, 486, 491, 492], "done": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 74, 75, 76, 78, 83, 85, 86, 87, 88, 89, 90, 99, 100, 101, 108, 110, 112, 117, 118, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 213, 215, 216, 219, 227, 228, 230, 231, 232, 237, 241, 242, 243, 245, 249, 250, 252, 254, 256, 259, 260, 262, 263, 266, 267, 268, 269, 270, 276, 279, 283, 300, 302, 307, 310, 332, 354, 369, 370, 371, 372, 373, 374, 376, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 465, 466, 467, 471, 473, 474, 475, 476, 478, 479, 481, 484, 485, 486, 487, 489, 491, 492], "state": [1, 2, 3, 4, 15, 16, 18, 19, 20, 21, 29, 30, 36, 43, 45, 48, 51, 56, 63, 66, 67, 68, 69, 70, 72, 73, 76, 78, 79, 80, 85, 99, 100, 101, 108, 112, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 153, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 215, 218, 219, 220, 222, 223, 225, 228, 231, 234, 237, 241, 243, 250, 260, 261, 266, 267, 268, 269, 270, 271, 276, 277, 279, 283, 288, 293, 297, 300, 301, 302, 305, 306, 307, 308, 310, 315, 318, 322, 325, 327, 328, 334, 336, 338, 342, 347, 354, 358, 364, 369, 371, 372, 376, 378, 386, 387, 389, 390, 391, 392, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 447, 461, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 483, 485, 486, 487, 492], "after": [1, 2, 3, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 45, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 96, 97, 98, 99, 105, 112, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 144, 145, 146, 147, 154, 155, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 299, 300, 302, 307, 316, 336, 338, 342, 351, 356, 372, 381, 392, 394, 402, 403, 404, 405, 406, 409, 465, 472, 473, 474, 475, 476, 477, 479, 481, 483, 485, 486, 487, 488, 489, 492], "predefin": [1, 429, 472, 474, 479, 489, 491], "becaus": [1, 2, 3, 4, 7, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 96, 97, 98, 99, 104, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 231, 239, 260, 275, 279, 292, 314, 336, 338, 342, 346, 351, 352, 354, 355, 356, 357, 358, 359, 369, 389, 402, 403, 404, 405, 406, 409, 466, 471, 472, 474, 475, 477, 478, 479, 483, 484, 485, 486, 487, 489, 492], "potenti": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 487, 489], "comput": [1, 3, 4, 8, 15, 17, 18, 27, 29, 36, 39, 43, 48, 56, 66, 67, 72, 73, 78, 99, 109, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 243, 257, 269, 273, 277, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 319, 320, 322, 324, 327, 328, 330, 332, 333, 335, 336, 338, 342, 347, 350, 352, 354, 355, 357, 359, 362, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 451, 465, 467, 471, 473, 474, 475, 476, 477, 483, 484, 485, 486, 488, 489], "heavi": [1, 8, 489], "crucial": [1, 2, 3, 281, 299, 324, 377, 385, 387, 465, 471, 472, 473, 474, 476, 478, 480, 485, 486, 487, 491, 492], "configur": [1, 8, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 29, 72, 132, 181, 195, 239, 288, 293, 322, 338, 342, 371, 387, 389, 402, 405, 466, 471, 472, 473, 478, 485, 486, 487], "hyperparamet": [1, 115, 279, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 471, 480, 487, 489], "appropri": [1, 3, 4, 7, 102, 113, 123, 124, 127, 128, 147, 159, 168, 189, 190, 231, 458, 461, 465, 471, 480, 489], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 119, 121, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 466, 467, 471, 474, 475, 477, 481, 485, 486, 487, 488, 491], "take": [1, 2, 3, 8, 20, 32, 36, 43, 48, 51, 66, 67, 72, 73, 78, 120, 126, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 222, 224, 260, 263, 264, 268, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 313, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 341, 342, 350, 352, 353, 354, 355, 357, 359, 362, 365, 368, 389, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 438, 449, 465, 466, 468, 471, 472, 473, 475, 476, 477, 478, 485, 486, 487, 489, 492], "consider": [1, 2, 3, 8, 138, 140, 268, 304, 472, 485, 486, 489], "whether": [1, 2, 3, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 97, 99, 103, 105, 112, 113, 125, 129, 132, 135, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 215, 224, 225, 227, 230, 261, 267, 269, 276, 277, 279, 286, 287, 302, 304, 307, 308, 336, 338, 339, 342, 354, 359, 363, 369, 370, 371, 372, 373, 374, 376, 378, 379, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 437, 461, 471, 472, 473, 475, 476, 485, 486, 487, 491, 492], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 103, 106, 110, 112, 117, 118, 119, 123, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 146, 147, 150, 153, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 215, 216, 219, 222, 223, 224, 227, 228, 231, 232, 234, 239, 240, 241, 243, 248, 249, 250, 252, 255, 256, 260, 261, 263, 266, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 355, 357, 358, 359, 362, 365, 369, 371, 372, 378, 384, 386, 387, 389, 390, 391, 392, 393, 394, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 429, 431, 437, 442, 443, 444, 447, 457, 459, 460, 461, 466, 467, 468, 471, 472, 473, 474, 475, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492], "occur": [1, 8, 16, 43, 66, 74, 75, 78, 85, 129, 132, 135, 139, 141, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 220, 232, 243, 248, 275, 282, 336, 338, 342, 346, 351, 352, 355, 356, 357, 358, 359, 381, 402, 405, 475, 489, 492], "serial": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 276, 277, 279, 336, 338, 342, 402, 404, 405], "parallel": [1, 3, 8, 31, 129, 132, 135, 138, 139, 140, 147, 159, 160, 161, 162, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 269, 275, 302, 307, 339, 369, 458, 459, 460, 461, 472, 473, 485, 486, 491], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 64, 71, 83, 84, 85, 95, 96, 97, 98, 136, 154, 159, 168, 186, 267, 276, 277, 339, 340, 341, 403, 406, 459, 460, 461, 471, 472, 473, 491, 492], "multisyncdatacollector": [1, 16, 22, 23, 25, 27, 30, 284, 460, 463, 473, 479, 491], "split": [1, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 47, 49, 62, 64, 75, 84, 95, 110, 117, 118, 150, 161, 162, 181, 300, 305, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 466, 468, 473, 477, 489, 491], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 67, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 110, 117, 118, 130, 131, 133, 134, 138, 140, 141, 143, 145, 146, 154, 155, 159, 165, 170, 267, 276, 277, 279, 302, 307, 313, 323, 324, 387, 402, 404, 405, 449, 463, 465, 466, 467, 471, 476, 480, 485, 486, 487], "aggreg": [1, 3, 36, 66, 110, 123, 161, 162, 187, 211, 240, 277, 286, 287, 289, 290, 361, 467, 486], "result": [1, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 36, 37, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 85, 86, 96, 97, 98, 99, 110, 112, 116, 117, 118, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 284, 299, 300, 302, 305, 307, 308, 313, 326, 332, 336, 338, 342, 350, 352, 357, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 449, 467, 472, 474, 476, 477, 480, 481, 487, 488, 491, 492], "final": [1, 2, 3, 4, 27, 51, 62, 64, 71, 72, 85, 96, 97, 98, 182, 185, 186, 262, 275, 281, 299, 300, 302, 305, 307, 313, 324, 353, 360, 403, 406, 409, 442, 466, 471, 472, 473, 475, 480, 481, 483, 485, 486, 487, 492], "multiasyncdatacollector": [1, 15, 21, 22, 23, 25, 27, 30, 284, 459, 463, 471, 472, 473, 479, 491], "sever": [1, 2, 3, 8, 36, 43, 48, 52, 56, 66, 67, 73, 78, 84, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 220, 222, 240, 269, 279, 336, 338, 342, 389, 402, 404, 405, 471, 473, 475, 480, 481, 489, 492], "gather": [1, 3, 22, 25, 27, 51, 84, 95, 103, 105, 110, 117, 125, 241, 248, 312, 315, 320, 387, 402, 405, 408, 451, 464, 465, 472, 473, 474, 479, 485, 486, 487, 489, 491, 492], "continu": [1, 2, 3, 9, 37, 40, 51, 86, 87, 88, 97, 118, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 204, 212, 237, 262, 270, 289, 290, 291, 292, 323, 324, 361, 366, 370, 393, 409, 414, 422, 466, 471, 473, 477, 485, 486, 489], "concomitantli": [1, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190], "network": [1, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 286, 287, 289, 290, 291, 292, 295, 297, 298, 305, 308, 313, 314, 315, 317, 318, 319, 321, 323, 325, 327, 328, 329, 334, 336, 338, 342, 347, 348, 349, 350, 358, 362, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 400, 402, 404, 405, 407, 409, 410, 411, 412, 413, 456, 457, 466, 467, 468, 475, 478, 481, 484, 487, 492], "impli": [1, 85, 492], "mai": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 96, 97, 98, 99, 101, 104, 109, 110, 117, 129, 132, 135, 138, 139, 140, 141, 147, 159, 160, 163, 165, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 243, 256, 267, 269, 271, 276, 277, 279, 282, 302, 307, 308, 313, 336, 338, 342, 359, 371, 378, 386, 389, 392, 402, 403, 404, 405, 406, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 485, 486, 487, 488, 489, 492], "slightli": [1, 32, 467, 474, 475, 485, 487, 488, 489, 492], "lag": [1, 471, 472, 473], "therefor": [1, 2, 3, 7, 63, 70, 79, 80, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 252, 389, 404, 407, 465, 475, 478, 485, 492], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 219], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 34, 36, 43, 45, 47, 48, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 101, 103, 105, 110, 112, 117, 118, 123, 125, 126, 129, 132, 135, 139, 147, 150, 153, 156, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 211, 212, 213, 216, 219, 224, 231, 239, 247, 252, 255, 260, 261, 262, 263, 264, 268, 269, 271, 274, 275, 279, 281, 299, 300, 301, 302, 304, 305, 306, 307, 311, 312, 313, 321, 323, 324, 336, 338, 342, 350, 355, 358, 359, 368, 369, 370, 371, 372, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 468, 471, 472, 473, 475, 476, 483, 484, 485, 486, 487, 489, 492], "off": [1, 2, 4, 303, 333, 351, 392, 427, 442, 452, 466, 468, 471, 472, 473, 477, 478, 485, 486, 488, 491, 492], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 35, 36, 37, 38, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 99, 103, 105, 110, 112, 117, 125, 129, 132, 135, 138, 139, 140, 144, 146, 147, 159, 160, 161, 162, 163, 168, 169, 170, 171, 173, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 227, 230, 234, 243, 261, 268, 269, 275, 279, 296, 300, 302, 304, 305, 307, 311, 314, 316, 336, 338, 342, 347, 349, 350, 352, 356, 369, 377, 379, 385, 389, 402, 404, 405, 442, 466, 467, 468, 471, 472, 473, 474, 476, 477, 479, 480, 483, 485, 486, 487, 488, 489, 492], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 112, 159, 168, 277, 492], "rollout": [1, 2, 3, 11, 15, 16, 18, 21, 27, 29, 30, 32, 51, 72, 78, 85, 123, 129, 130, 131, 132, 135, 139, 141, 142, 145, 146, 147, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 180, 181, 182, 185, 188, 189, 190, 194, 212, 213, 215, 216, 219, 222, 224, 225, 227, 230, 231, 232, 237, 239, 240, 245, 249, 250, 255, 256, 257, 260, 261, 263, 264, 267, 270, 276, 277, 279, 283, 284, 285, 302, 307, 310, 324, 354, 369, 427, 429, 451, 466, 471, 473, 474, 477, 478, 479, 480, 481, 488, 489, 491], "necessari": [1, 4, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 256, 390, 409, 410, 411, 412, 413, 465, 467, 471, 473, 477, 478, 479, 483], "synchronis": [1, 136, 485, 486], "either": [1, 2, 5, 28, 34, 36, 43, 48, 56, 63, 66, 67, 68, 70, 72, 73, 78, 85, 95, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 241, 260, 261, 277, 279, 336, 338, 339, 342, 364, 387, 394, 395, 402, 404, 405, 433, 465, 468, 471, 472, 474, 485, 488, 489, 491, 492], "update_policy_weights_": [1, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 30, 197, 465, 471, 486, 491], "update_at_each_batch": [1, 15, 16, 21], "true": [1, 2, 3, 4, 8, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 112, 113, 115, 116, 117, 118, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 229, 232, 234, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 251, 254, 255, 256, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 281, 282, 283, 286, 287, 289, 290, 291, 292, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 323, 324, 331, 332, 333, 336, 338, 339, 342, 345, 346, 347, 348, 349, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 409, 410, 411, 412, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 436, 437, 440, 441, 442, 444, 447, 461, 465, 466, 467, 468, 471, 472, 473, 474, 475, 477, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "second": [1, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 52, 53, 54, 55, 123, 159, 193, 196, 216, 264, 300, 302, 305, 307, 352, 371, 386, 389, 392, 429, 431, 434, 436, 446, 471, 473, 479, 485, 486, 487, 489, 491, 492], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 117, 118, 125, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 210, 212, 216, 223, 227, 228, 230, 231, 232, 237, 239, 240, 245, 246, 247, 249, 250, 252, 256, 259, 260, 262, 265, 268, 269, 270, 272, 274, 276, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 305, 306, 307, 308, 310, 313, 314, 316, 317, 322, 324, 325, 326, 334, 336, 337, 338, 339, 340, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 427, 444, 449, 455, 466, 471, 472, 473, 474, 475, 485, 486, 487, 488, 491], "oper": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 104, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 234, 239, 264, 266, 270, 277, 279, 295, 296, 301, 304, 306, 336, 338, 342, 347, 348, 349, 351, 352, 353, 358, 364, 369, 371, 373, 374, 379, 386, 389, 391, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 447, 463, 465, 467, 468, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 492], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 110, 112, 117, 118, 125, 129, 132, 134, 135, 136, 138, 139, 140, 144, 147, 153, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 211, 243, 262, 269, 276, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 313, 314, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 339, 340, 342, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 370, 372, 374, 377, 378, 385, 387, 390, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 427, 429, 433, 437, 442, 451, 452, 453, 457, 459, 460, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 483, 487, 489, 492], "cpu": [1, 2, 3, 8, 10, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 109, 112, 117, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 216, 223, 227, 228, 230, 231, 232, 237, 240, 245, 247, 249, 250, 252, 256, 259, 260, 262, 268, 269, 270, 272, 274, 279, 283, 285, 295, 300, 301, 302, 305, 306, 307, 310, 316, 317, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 363, 366, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 427, 466, 471, 472, 473, 474, 485, 486, 487, 488, 491], "slower": [1, 485], "than": [1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 66, 85, 99, 110, 117, 118, 121, 123, 129, 132, 135, 139, 143, 147, 157, 158, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 224, 240, 241, 250, 277, 281, 292, 302, 304, 305, 307, 308, 335, 346, 351, 358, 359, 363, 387, 402, 404, 405, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 464, 466, 467, 471, 472, 473, 475, 476, 478, 485, 486, 487, 489, 491, 492], "one": [1, 2, 3, 4, 5, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 112, 113, 117, 118, 119, 121, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 219, 222, 224, 225, 227, 228, 229, 230, 237, 240, 242, 243, 247, 252, 255, 258, 259, 261, 262, 263, 268, 269, 271, 274, 276, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 314, 315, 318, 319, 320, 321, 322, 324, 326, 327, 328, 330, 335, 336, 338, 342, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 362, 363, 365, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 399, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 416, 417, 429, 431, 440, 442, 443, 447, 451, 461, 464, 465, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 492], "cuda": [1, 2, 3, 7, 15, 16, 18, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 130, 131, 132, 135, 139, 141, 142, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 239, 246, 247, 262, 268, 269, 272, 274, 279, 300, 301, 305, 306, 336, 338, 342, 358, 402, 404, 405, 439, 471, 472, 473, 474, 485, 486, 488, 492], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 54, 66, 70, 79, 80, 81, 85, 105, 112, 113, 125, 129, 130, 131, 145, 146, 159, 168, 170, 188, 194, 220, 222, 229, 238, 241, 242, 252, 255, 259, 260, 267, 276, 300, 305, 307, 313, 316, 317, 346, 351, 355, 356, 358, 359, 362, 371, 378, 386, 389, 399, 415, 461, 466, 467, 468, 471, 472, 473, 476, 478, 479, 485, 486, 487, 489, 491], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 199, 219, 276, 311, 316, 339, 350, 355, 359, 376, 402, 405, 427, 465, 471, 473, 475, 479, 481, 489, 491], "dispatch": [1, 3, 22, 23, 25, 27, 43, 66, 78, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 335, 336, 338, 342, 354, 402, 404, 405, 429, 471, 492], "avail": [1, 2, 3, 4, 6, 27, 63, 68, 69, 70, 79, 80, 97, 110, 112, 116, 117, 118, 130, 131, 133, 134, 143, 145, 146, 151, 152, 157, 158, 159, 161, 162, 165, 171, 172, 173, 174, 192, 195, 212, 215, 218, 237, 239, 296, 326, 355, 359, 387, 402, 405, 429, 459, 460, 463, 471, 472, 473, 474, 475, 476, 477, 485, 486, 487, 489, 492], "speed": [1, 2, 3, 4, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 467, 471, 472, 473, 474, 485, 486, 487, 489, 491], "avoid": [1, 2, 3, 36, 43, 48, 56, 66, 67, 73, 78, 99, 103, 105, 117, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 219, 237, 267, 269, 276, 277, 279, 282, 332, 336, 338, 342, 346, 358, 363, 371, 372, 386, 389, 392, 402, 404, 405, 450, 473, 475, 486], "oom": [1, 3, 62, 64, 71, 85, 96, 97, 98, 103, 105, 125, 186, 403, 406], "choic": [1, 2, 58, 159, 194, 466, 467, 471, 472, 478, 485, 486], "pass": [1, 2, 3, 4, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 36, 40, 41, 43, 48, 49, 56, 58, 63, 66, 67, 68, 70, 72, 73, 75, 78, 79, 80, 83, 84, 97, 99, 101, 103, 105, 110, 112, 117, 118, 123, 125, 129, 132, 135, 136, 137, 139, 140, 147, 150, 154, 159, 160, 161, 162, 163, 168, 169, 170, 173, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 219, 225, 227, 230, 240, 241, 249, 250, 267, 271, 276, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 322, 324, 325, 327, 328, 330, 334, 335, 336, 338, 339, 342, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 370, 371, 372, 385, 386, 387, 389, 390, 392, 394, 395, 402, 404, 405, 409, 410, 411, 412, 413, 427, 444, 447, 459, 460, 461, 465, 466, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 492], "ie": [1, 2, 3, 22, 25, 28, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 74, 75, 78, 79, 83, 84, 86, 87, 88, 89, 90, 109, 118, 129, 132, 135, 139, 143, 147, 156, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 212, 219, 234, 259, 262, 271, 276, 302, 307, 336, 338, 342, 350, 358, 402, 405, 466, 467, 472, 486], "store": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 46, 47, 48, 51, 56, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 110, 112, 117, 123, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 237, 264, 275, 276, 277, 279, 281, 283, 284, 310, 324, 336, 338, 342, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 436, 463, 465, 468, 471, 473, 474, 477, 479, 481, 485, 486, 488, 492], "while": [1, 2, 3, 7, 8, 15, 16, 18, 21, 29, 32, 36, 43, 48, 56, 66, 67, 68, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 252, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 371, 377, 385, 386, 389, 402, 404, 405, 466, 467, 471, 473, 474, 477, 479, 480, 485, 486, 487, 488, 489, 491], "wait": [1, 13, 15, 16, 21, 22, 23, 24, 25, 27, 28, 68, 171, 474, 487], "also": [1, 2, 3, 8, 9, 11, 15, 16, 20, 32, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 70, 71, 73, 78, 79, 80, 83, 85, 95, 96, 97, 98, 99, 103, 104, 105, 110, 112, 117, 118, 123, 125, 129, 132, 135, 139, 146, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 210, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 231, 232, 233, 235, 237, 238, 239, 243, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 286, 287, 300, 305, 308, 328, 336, 338, 342, 354, 355, 360, 361, 362, 369, 370, 372, 373, 374, 376, 377, 378, 383, 385, 389, 392, 394, 402, 403, 404, 405, 406, 409, 416, 417, 427, 429, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 489, 491, 492], "impact": [1, 2, 3, 13, 22, 23, 25, 146, 227, 230, 282, 369, 371, 386, 389, 391, 402, 472, 474, 485, 486], "memori": [1, 3, 8, 27, 36, 39, 43, 48, 56, 62, 64, 66, 67, 68, 71, 73, 78, 84, 85, 96, 97, 98, 99, 101, 103, 104, 108, 129, 132, 135, 136, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 223, 247, 262, 268, 269, 272, 274, 276, 277, 279, 294, 304, 305, 306, 336, 338, 342, 358, 402, 403, 404, 405, 406, 461, 463, 468, 471, 472, 474, 485, 489, 491], "manag": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 284, 302, 307, 345, 400, 401, 409, 410, 411, 412, 437, 442, 465, 466, 474, 475, 478, 483, 491], "kei": [1, 2, 7, 15, 16, 18, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 109, 110, 112, 115, 117, 118, 123, 129, 132, 135, 139, 145, 146, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 281, 283, 285, 295, 296, 299, 302, 307, 309, 310, 324, 326, 336, 338, 342, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 427, 429, 441, 442, 443, 445, 446, 447, 451, 467, 468, 471, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 489, 491, 492], "control": [1, 3, 5, 8, 18, 32, 33, 40, 41, 42, 49, 70, 75, 79, 80, 109, 110, 112, 117, 129, 132, 133, 134, 135, 139, 146, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 196, 199, 210, 229, 289, 290, 291, 292, 302, 307, 309, 310, 324, 328, 335, 337, 338, 342, 358, 359, 360, 369, 371, 372, 386, 387, 389, 393, 402, 405, 409, 414, 422, 427, 437, 466, 468, 471, 472, 473, 474, 475, 476, 477, 478, 485, 486, 487, 489, 491], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 104, 112, 115, 116, 123, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 145, 146, 147, 151, 152, 154, 155, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 219, 220, 224, 227, 230, 235, 237, 239, 240, 242, 243, 247, 248, 250, 260, 262, 263, 266, 267, 268, 269, 270, 272, 276, 279, 280, 295, 300, 301, 302, 303, 305, 306, 307, 311, 312, 313, 314, 315, 321, 323, 333, 336, 338, 342, 347, 348, 349, 350, 354, 355, 358, 359, 360, 361, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 427, 429, 438, 443, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 492], "storing_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 472, 486], "dure": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 63, 64, 67, 68, 69, 70, 72, 73, 79, 80, 84, 95, 101, 106, 109, 110, 112, 115, 117, 129, 132, 135, 136, 139, 146, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 192, 194, 197, 200, 201, 215, 216, 219, 222, 227, 230, 232, 234, 235, 237, 241, 245, 257, 259, 262, 264, 266, 267, 269, 270, 271, 276, 277, 279, 282, 284, 285, 302, 307, 314, 354, 371, 389, 402, 405, 409, 411, 412, 442, 447, 467, 471, 472, 473, 474, 477, 478, 479, 481, 485, 486, 487, 489, 492], "heurist": [1, 4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 281, 354, 359, 471, 475, 479, 492], "usual": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 115, 123, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 267, 317, 389, 394, 402, 405, 408, 409, 410, 411, 412, 413, 428, 464, 465, 466, 467, 468, 471, 472, 473, 474, 477, 479, 480, 486, 489, 492], "same": [1, 2, 3, 4, 18, 20, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 116, 117, 118, 121, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 150, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 219, 227, 229, 230, 235, 237, 240, 241, 242, 243, 259, 267, 268, 269, 276, 279, 280, 286, 287, 301, 306, 308, 311, 312, 313, 314, 324, 332, 336, 338, 342, 350, 362, 370, 372, 385, 387, 390, 392, 394, 395, 399, 402, 403, 404, 405, 406, 467, 471, 472, 473, 476, 477, 479, 483, 484, 485, 486, 488, 489, 492], "default": [1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 110, 112, 113, 115, 116, 117, 118, 123, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 326, 327, 328, 330, 331, 332, 333, 336, 338, 339, 340, 342, 345, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 362, 363, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 457, 461, 467, 468, 471, 472, 473, 474, 477, 485, 488, 489, 491, 492], "behavior": [1, 2, 3, 4, 15, 16, 27, 36, 43, 48, 56, 66, 67, 73, 78, 83, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 220, 227, 230, 243, 248, 261, 269, 277, 279, 282, 302, 303, 307, 333, 336, 338, 342, 371, 377, 385, 389, 394, 402, 404, 405, 427, 437, 442, 466, 472, 474, 485, 486, 487, 489], "besid": 1, "those": [1, 2, 3, 5, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 201, 219, 224, 227, 230, 237, 243, 262, 263, 266, 270, 307, 323, 355, 359, 360, 361, 449, 459, 460, 466, 471, 472, 476, 477, 486, 487, 492], "choos": [1, 3, 11, 58, 129, 132, 150, 302, 307, 389, 463, 467, 471, 472, 473, 475, 485, 486, 489, 491], "follow": [1, 2, 3, 6, 7, 8, 11, 20, 36, 43, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 78, 83, 85, 96, 97, 98, 99, 110, 117, 118, 129, 130, 131, 132, 135, 138, 139, 140, 145, 146, 147, 153, 156, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 215, 219, 239, 247, 272, 276, 277, 279, 286, 287, 300, 302, 305, 307, 308, 336, 338, 342, 352, 355, 356, 357, 368, 369, 370, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 429, 447, 466, 467, 468, 471, 472, 473, 474, 475, 478, 479, 484, 485, 486, 487, 489, 491, 492], "max_frames_per_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 450, 471, 473, 491], "frame": [1, 2, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 180, 219, 235, 279, 281, 299, 324, 354, 428, 429, 431, 434, 436, 440, 442, 447, 450, 451, 465, 471, 472, 473, 474, 477, 485, 486, 489, 491, 492], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 103, 104, 105, 106, 110, 111, 112, 116, 117, 119, 121, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 310, 314, 315, 316, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 358, 359, 361, 362, 365, 370, 371, 372, 378, 385, 386, 387, 389, 390, 392, 394, 395, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 427, 428, 431, 442, 467, 468, 472, 473, 474, 475, 476, 477, 479, 480, 485, 486, 487, 489, 491, 492], "frames_per_batch": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 216, 219, 252, 302, 307, 450, 471, 472, 473, 474, 475, 479, 481, 485, 486, 489, 491], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 36, 40, 41, 43, 47, 48, 49, 51, 52, 54, 56, 57, 66, 67, 70, 72, 73, 75, 77, 78, 79, 85, 97, 99, 109, 110, 112, 115, 117, 118, 120, 123, 129, 132, 135, 136, 139, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 238, 240, 241, 247, 252, 255, 260, 261, 262, 263, 267, 268, 274, 276, 277, 279, 280, 281, 296, 299, 300, 301, 302, 305, 307, 313, 314, 318, 325, 326, 334, 336, 338, 342, 345, 351, 352, 357, 359, 361, 371, 386, 389, 402, 404, 405, 409, 415, 418, 419, 420, 421, 423, 424, 425, 426, 429, 442, 444, 459, 460, 465, 467, 471, 472, 473, 474, 477, 478, 479, 481, 485, 486, 487, 488, 489, 491, 492], "init_random_fram": [1, 15, 16, 18, 21, 22, 23, 25, 27, 450, 471, 472, 475, 481], "rand_step": [1, 2, 3, 45, 76, 129, 132, 133, 134, 135, 136, 138, 139, 140, 147, 148, 149, 153, 154, 155, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 238, 262, 276, 487, 491, 492], "reset_at_each_it": [1, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 471], "split_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 471, 472, 473], "trajectori": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 43, 46, 47, 56, 57, 77, 79, 85, 109, 110, 117, 118, 123, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 248, 260, 267, 279, 283, 307, 310, 324, 389, 404, 409, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 438, 463, 467, 471, 472, 473, 474, 476, 479, 481, 487, 491, 492], "pad": [1, 2, 3, 32, 65, 81, 97, 194, 199, 201, 203, 219, 266, 286, 287, 289, 290, 307, 311, 312, 313, 338, 342, 444], "along": [1, 2, 3, 15, 16, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 105, 110, 112, 117, 118, 123, 125, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 218, 219, 220, 241, 243, 245, 248, 255, 259, 265, 279, 307, 308, 311, 312, 317, 336, 338, 342, 351, 355, 358, 359, 372, 387, 394, 402, 403, 404, 405, 406, 471, 472, 474, 476, 478, 485, 486, 487, 489, 491], "point": [1, 2, 3, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 102, 109, 110, 113, 123, 124, 127, 128, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 279, 309, 336, 338, 342, 358, 368, 379, 402, 404, 405, 447, 464, 472, 473, 484, 485, 486, 487, 489, 491, 492], "boolean": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 110, 117, 118, 139, 190, 211, 215, 224, 248, 260, 304, 311, 312, 324, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 465, 468, 474], "repres": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 40, 41, 45, 49, 51, 58, 75, 76, 78, 79, 85, 104, 129, 132, 133, 134, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 235, 248, 264, 276, 279, 296, 311, 312, 326, 332, 338, 342, 351, 352, 356, 357, 398, 409, 444, 466, 471, 473, 474, 475, 476, 477, 478, 485, 486], "valid": [1, 2, 3, 32, 62, 64, 65, 84, 85, 95, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 176, 180, 181, 182, 185, 188, 189, 190, 215, 248, 267, 269, 279, 281, 286, 287, 304, 308, 311, 312, 324, 371, 378, 386, 389, 392, 409, 410, 411, 412, 444, 468, 475, 492], "exploration_typ": [1, 15, 16, 18, 21, 22, 23, 25, 27, 442, 463, 466, 471, 472], "strategi": [1, 2, 3, 18, 97, 115, 150, 212, 299, 312, 320, 466, 468, 471, 472, 475, 477, 485, 486, 489, 491], "reset_when_don": [1, 15, 16, 18, 21], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 105, 109, 110, 112, 117, 118, 129, 132, 135, 139, 146, 147, 153, 159, 160, 161, 162, 163, 168, 169, 170, 173, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 218, 219, 225, 231, 239, 260, 261, 262, 267, 269, 275, 276, 277, 279, 280, 281, 286, 287, 302, 307, 311, 312, 313, 314, 323, 336, 337, 338, 342, 351, 355, 356, 359, 362, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 395, 402, 403, 404, 405, 406, 407, 429, 447, 457, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492], "organ": [1, 2, 483, 487, 489], "within": [1, 2, 3, 15, 16, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 104, 109, 110, 118, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 277, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 345, 350, 352, 354, 357, 359, 362, 365, 366, 374, 379, 394, 402, 403, 404, 405, 406, 407, 409, 427, 429, 465, 466, 467, 472, 475, 476, 477, 478, 479, 480, 481, 485, 487, 491], "differ": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 109, 112, 115, 129, 130, 131, 132, 135, 136, 139, 145, 146, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 219, 224, 228, 229, 240, 243, 250, 259, 267, 269, 271, 279, 280, 296, 300, 301, 305, 306, 308, 310, 313, 314, 315, 326, 336, 338, 342, 359, 385, 387, 389, 398, 402, 404, 405, 409, 410, 411, 415, 416, 417, 442, 447, 449, 459, 460, 465, 466, 467, 468, 471, 472, 473, 475, 476, 478, 480, 484, 485, 486, 487, 488, 489, 491, 492], "how": [1, 2, 3, 11, 20, 22, 23, 25, 33, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 99, 109, 110, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 240, 279, 315, 336, 338, 342, 355, 369, 371, 384, 386, 387, 389, 402, 404, 405, 429, 431, 447, 464, 466, 471, 472, 473, 474, 475, 476, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492], "tabl": [1, 36, 466, 472, 477], "summar": [1, 3, 487], "what": [1, 3, 8, 11, 42, 43, 63, 83, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 199, 210, 231, 262, 267, 356, 372, 383, 387, 394, 402, 405, 464, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 491, 492], "expect": [1, 2, 3, 4, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 99, 110, 116, 117, 129, 132, 135, 139, 147, 153, 156, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 234, 236, 238, 239, 240, 241, 243, 245, 247, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 300, 301, 302, 305, 306, 307, 313, 314, 324, 336, 338, 342, 352, 358, 361, 369, 370, 371, 372, 373, 374, 376, 377, 378, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 399, 402, 404, 405, 407, 409, 451, 464, 466, 467, 468, 471, 473, 474, 476, 477, 478, 479, 483, 485, 486, 487, 489, 492], "n": [1, 2, 3, 6, 7, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 229, 234, 271, 279, 300, 301, 305, 310, 321, 323, 324, 336, 338, 342, 354, 359, 369, 370, 378, 387, 402, 404, 405, 408, 444, 465, 468, 472, 474, 475, 489, 491, 492], "b": [1, 2, 3, 7, 8, 29, 32, 40, 41, 43, 49, 62, 64, 66, 70, 71, 72, 73, 75, 78, 79, 80, 85, 96, 97, 98, 103, 104, 123, 132, 186, 196, 237, 270, 300, 301, 304, 305, 306, 313, 314, 316, 317, 325, 334, 336, 338, 342, 362, 402, 403, 405, 406, 409, 410, 411, 412, 413, 415, 429, 472, 483, 489], "cat_result": [1, 15, 16], "na": [1, 182, 185, 198], "t": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 109, 110, 112, 116, 117, 118, 123, 129, 132, 135, 136, 138, 139, 147, 154, 155, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 300, 302, 304, 305, 307, 311, 324, 336, 338, 342, 351, 358, 369, 389, 393, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 415, 429, 436, 447, 449, 461, 464, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 491, 492], "p": [1, 2, 4, 109, 110, 112, 115, 136, 166, 167, 284, 285], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 36, 43, 48, 56, 66, 67, 73, 78, 99, 118, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 227, 228, 230, 238, 247, 252, 256, 261, 262, 265, 267, 268, 269, 272, 274, 275, 277, 279, 280, 300, 303, 305, 308, 313, 328, 332, 333, 336, 338, 342, 358, 359, 361, 368, 369, 370, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 449, 459, 460, 461, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 492], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 74, 75, 79, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 100, 101, 108, 112, 123, 129, 132, 135, 138, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 186, 188, 189, 190, 199, 227, 228, 230, 238, 243, 262, 265, 269, 270, 280, 304, 307, 308, 314, 315, 355, 358, 359, 361, 362, 368, 369, 370, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 409, 410, 411, 412, 429, 438, 449, 459, 460, 461, 463, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 479, 480, 485, 486, 487, 489, 491, 492], "dimens": [1, 3, 15, 16, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 70, 71, 72, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 103, 104, 105, 110, 117, 118, 123, 125, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 186, 187, 188, 189, 190, 194, 203, 204, 212, 218, 219, 220, 234, 241, 243, 245, 248, 255, 258, 259, 262, 265, 271, 276, 277, 286, 287, 288, 293, 294, 302, 305, 307, 308, 311, 312, 313, 316, 317, 322, 325, 329, 330, 331, 332, 335, 351, 354, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 461, 463, 467, 471, 472, 473, 474, 476, 483, 485, 486, 487, 489], "time": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 97, 99, 100, 103, 112, 123, 129, 130, 131, 132, 135, 136, 139, 145, 146, 147, 150, 156, 159, 160, 161, 162, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 210, 218, 219, 220, 241, 248, 255, 262, 263, 264, 267, 269, 276, 279, 285, 297, 300, 305, 307, 324, 336, 338, 342, 345, 354, 359, 370, 371, 372, 378, 381, 385, 386, 387, 389, 390, 392, 394, 395, 402, 404, 405, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 447, 467, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492], "adapt": [1, 33, 213, 241, 260, 276, 282, 386, 471, 475, 487], "equal": [1, 15, 16, 21, 36, 85, 99, 110, 117, 118, 132, 154, 157, 158, 159, 168, 188, 242, 243, 286, 287, 300, 302, 305, 307, 308, 311, 312, 314, 371, 389, 393, 398, 402, 438, 459, 460, 471, 473, 488], "introduc": [1, 2, 109, 110, 159, 168, 300, 302, 305, 307, 324, 471, 485], "some": [1, 2, 3, 4, 7, 8, 9, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 70, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 99, 103, 105, 112, 123, 125, 129, 130, 131, 132, 135, 138, 139, 140, 145, 146, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 247, 262, 269, 272, 279, 289, 302, 330, 336, 338, 342, 359, 360, 361, 402, 404, 405, 429, 438, 450, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 485, 486, 487, 489, 491, 492], "confus": [1, 34, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 336, 338, 342, 402, 404, 405], "other": [1, 2, 3, 4, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 104, 105, 106, 112, 115, 116, 117, 118, 119, 121, 125, 129, 132, 135, 138, 139, 140, 144, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 224, 228, 229, 249, 256, 262, 265, 272, 276, 277, 279, 284, 299, 300, 302, 307, 317, 336, 338, 342, 345, 350, 352, 357, 359, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 403, 404, 405, 406, 407, 409, 427, 444, 459, 460, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 491, 492], "better": [1, 3, 8, 9, 15, 16, 32, 146, 302, 307, 467, 473, 476, 487, 491], "consist": [1, 2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 275, 279, 284, 287, 308, 336, 338, 342, 402, 404, 405, 465, 471, 472, 473, 487, 488, 492], "interact": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 191, 193, 269, 355, 359, 465, 471, 473, 475, 476, 477, 479, 485, 486, 487, 492], "keep": [1, 2, 3, 4, 7, 8, 16, 63, 70, 79, 80, 99, 112, 116, 123, 132, 159, 168, 197, 210, 243, 247, 274, 276, 277, 279, 324, 354, 371, 389, 402, 404, 429, 440, 447, 471, 472, 473, 474, 479, 480, 481, 486, 487, 489, 492], "separ": [1, 2, 4, 8, 15, 16, 18, 21, 22, 25, 27, 29, 32, 40, 41, 49, 70, 75, 79, 80, 219, 247, 274, 370, 373, 376, 378, 390, 392, 394, 395, 409, 467, 471, 472, 477, 478, 485, 486, 489, 492], "interchang": [1, 313, 314, 473, 476, 480, 488, 489], "between": [1, 2, 3, 4, 5, 15, 16, 17, 18, 21, 24, 27, 29, 30, 31, 33, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 99, 105, 109, 110, 112, 113, 116, 117, 118, 125, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 229, 242, 253, 264, 267, 269, 276, 277, 279, 286, 287, 295, 300, 302, 307, 308, 313, 314, 336, 338, 340, 342, 352, 355, 359, 369, 371, 372, 373, 376, 377, 378, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 409, 442, 447, 467, 471, 472, 474, 475, 479, 483, 485, 486, 487, 489, 492], "wherea": [1, 2, 28, 29, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 154, 155, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 229, 267, 269, 279, 336, 338, 342, 372, 387, 392, 402, 404, 405, 468, 480], "correspond": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 237, 247, 262, 267, 269, 274, 276, 277, 279, 284, 299, 302, 305, 307, 311, 312, 324, 336, 338, 342, 355, 359, 372, 374, 377, 378, 392, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 466, 471, 472, 473, 475, 476, 478, 479, 480, 485, 486, 487, 488], "sub": [1, 2, 3, 15, 16, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 99, 117, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 248, 267, 277, 279, 336, 338, 342, 360, 361, 402, 404, 405, 438, 447, 466, 467, 471, 472, 473, 479, 484, 491, 492], "doesn": [1, 4, 36, 43, 48, 56, 66, 67, 73, 78, 99, 123, 129, 132, 135, 139, 147, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 227, 230, 279, 280, 304, 336, 338, 342, 402, 404, 405, 475, 476], "understood": [1, 471], "serv": [1, 3, 22, 25, 27, 141, 489, 491, 492], "basi": [1, 123, 313, 489, 491], "we": [1, 2, 3, 5, 7, 9, 11, 30, 31, 32, 33, 36, 40, 43, 48, 51, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 99, 103, 116, 118, 123, 129, 130, 131, 132, 135, 136, 139, 143, 145, 146, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 224, 239, 247, 250, 256, 267, 272, 275, 276, 277, 279, 280, 283, 307, 311, 313, 314, 315, 336, 338, 342, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 429, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "anoth": [1, 2, 3, 8, 14, 17, 19, 20, 24, 26, 31, 51, 78, 83, 97, 104, 110, 117, 129, 132, 135, 138, 139, 140, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 216, 225, 227, 228, 230, 262, 268, 308, 338, 342, 355, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 467, 471, 473, 474, 475, 477, 478, 484, 485, 486, 487, 492], "wise": [1, 241], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99, 104, 109, 110, 117, 118, 129, 132, 135, 139, 143, 147, 154, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 219, 223, 224, 237, 247, 259, 262, 267, 268, 269, 272, 274, 277, 279, 284, 302, 304, 307, 308, 315, 335, 336, 338, 342, 358, 359, 360, 361, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 427, 429, 431, 465, 466, 468, 471, 472, 473, 474, 476, 477, 478, 480, 483, 485, 486, 487, 489, 491, 492], "op": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 44, 52, 53, 54, 55, 58, 59, 60, 61, 83, 86, 87, 88, 89, 90, 242, 275, 281, 284, 299, 429, 449], "sinc": [1, 2, 3, 4, 5, 7, 11, 29, 30, 31, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 99, 109, 110, 118, 123, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 165, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 225, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 313, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 351, 352, 354, 356, 357, 362, 365, 402, 404, 405, 427, 429, 467, 471, 472, 473, 474, 476, 477, 478, 483, 485, 487, 488, 489, 491, 492], "goal": [1, 3, 4, 147, 189, 261, 465, 471, 472, 473, 474, 483, 486, 487], "policy_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 472], "explicitli": [1, 2, 3, 4, 39, 84, 100, 101, 108, 112, 215, 323, 355, 437, 467, 472, 474, 479, 485, 486, 489], "do": [1, 2, 3, 4, 7, 58, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 196, 198, 199, 210, 212, 224, 248, 262, 267, 275, 276, 302, 307, 314, 316, 348, 359, 387, 402, 405, 409, 429, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 489, 491, 492], "deepcopi": [1, 315, 387, 402, 405, 485], "place": [1, 2, 3, 19, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 103, 105, 112, 115, 117, 125, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 215, 223, 231, 247, 262, 268, 269, 272, 274, 275, 276, 279, 315, 336, 338, 342, 350, 354, 358, 402, 403, 404, 405, 406, 409, 444, 449, 450, 465, 467, 472, 473, 477, 480, 485, 486, 487, 489], "instanti": [1, 2, 3, 15, 16, 27, 29, 30, 62, 63, 64, 68, 69, 70, 71, 79, 80, 83, 85, 96, 97, 98, 109, 110, 112, 143, 146, 186, 190, 215, 237, 262, 314, 403, 406, 409, 410, 411, 412, 413, 427, 471, 472, 477, 478, 480, 485, 486, 487, 489, 492], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 112, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 208, 210, 212, 218, 219, 222, 223, 227, 228, 230, 233, 239, 242, 243, 247, 255, 257, 259, 262, 263, 268, 269, 272, 274, 276, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 345, 350, 352, 354, 357, 358, 359, 361, 362, 365, 366, 369, 370, 371, 372, 381, 385, 387, 389, 390, 391, 392, 394, 395, 399, 402, 403, 404, 405, 406, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 443, 447, 450, 459, 460, 461, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 491, 492], "graph": [1, 3, 4, 8, 43, 66, 78, 130, 131, 145, 146, 336, 338, 342, 400, 401, 402, 405, 471, 475, 487], "reli": [1, 2, 3, 11, 32, 67, 73, 180, 262, 300, 301, 302, 305, 306, 307, 340, 369, 389, 409, 467, 471, 473, 475, 477, 479, 487, 492], "third": [1, 243, 264, 352, 485, 486], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 62, 64, 71, 75, 85, 96, 97, 98, 186, 403, 406, 471, 472, 473, 474, 475, 478, 479, 485, 486, 487, 491, 492], "limit": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 195, 219, 239, 369, 371, 386, 387, 389, 391, 402, 405, 467, 471, 472, 474, 485, 486, 487], "chart": 1, "show": [1, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 279, 314, 336, 338, 342, 402, 404, 405, 429, 471, 473, 474, 475, 483, 485, 486, 487, 489, 491], "decis": [1, 2, 3, 288, 293, 322, 350, 375, 388, 466, 474, 476, 477, 485, 486, 489, 492], "multiprocess": [1, 2, 3, 14, 15, 16, 22, 23, 25, 70, 79, 80, 104, 106, 112, 129, 136, 137, 159, 163, 168, 276, 277, 471, 472, 473, 474, 479, 485, 486, 487, 488, 492], "ensur": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 85, 99, 109, 110, 116, 129, 132, 135, 139, 144, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 219, 247, 260, 269, 272, 276, 277, 279, 302, 307, 336, 338, 342, 351, 371, 386, 389, 402, 404, 405, 466, 472, 473, 487, 489], "flexibl": [1, 3, 9, 154, 396, 465, 467, 468, 471, 475, 489, 492], "extens": [1, 2, 63, 70, 79, 80, 118, 284, 468, 489], "mechan": [1, 4, 14, 17, 19, 24, 26, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 336, 338, 342, 402, 404, 405, 472, 478, 487], "accommod": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 199, 476, 477], "variou": [1, 2, 3, 14, 132, 180, 268, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 396, 402, 405, 407, 429, 459, 460, 465, 471, 472, 473, 475, 476, 477, 478, 480, 485, 486, 489, 492], "deploy": [1, 475], "scenario": [1, 2, 19, 24, 26, 151, 152, 159, 173, 174, 224, 267, 427, 471, 477, 485, 486, 487], "facilit": [1, 2, 3, 7, 246, 247, 262, 272, 274, 347, 348, 349, 466, 471, 474, 477, 487], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 465], "These": [1, 2, 7, 51, 72, 126, 173, 247, 274, 277, 338, 342, 405, 465, 466, 467, 471, 473, 485, 486, 487, 489, 492], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 51, 63, 70, 73, 79, 80, 84, 109, 110, 114, 120, 123, 124, 126, 127, 129, 130, 131, 132, 135, 139, 143, 145, 146, 147, 153, 154, 155, 159, 160, 163, 168, 169, 170, 173, 180, 181, 182, 185, 188, 189, 190, 191, 197, 201, 202, 203, 210, 224, 228, 252, 266, 268, 272, 273, 302, 307, 313, 315, 338, 342, 347, 353, 369, 370, 372, 373, 374, 376, 377, 378, 380, 385, 389, 390, 391, 392, 394, 395, 436, 447, 465, 466, 467, 468, 471, 472, 474, 476, 477, 478, 480, 483, 485, 486, 487, 489, 492], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 82, 83, 86, 87, 88, 89, 90, 99, 107, 109, 119, 120, 129, 132, 135, 139, 147, 153, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 232, 235, 239, 241, 249, 250, 256, 260, 266, 268, 269, 270, 276, 277, 279, 280, 284, 286, 300, 301, 302, 303, 305, 306, 307, 331, 332, 333, 336, 338, 342, 369, 370, 372, 375, 376, 377, 383, 385, 387, 388, 389, 391, 392, 394, 402, 404, 405, 427, 438, 452, 465, 466, 468, 471, 472, 473, 474, 475, 485, 486, 487, 491], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 465, 485], "allow": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 40, 41, 43, 48, 49, 56, 58, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 85, 96, 97, 98, 99, 104, 110, 112, 115, 117, 118, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 215, 216, 250, 277, 279, 280, 304, 308, 336, 338, 342, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 402, 403, 404, 405, 406, 407, 465, 466, 468, 471, 473, 474, 475, 476, 477, 478, 485, 486, 487, 489, 491, 492], "tailor": [1, 188, 465, 491], "need": [1, 2, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 73, 78, 83, 99, 119, 123, 129, 132, 135, 139, 143, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 222, 224, 225, 234, 240, 247, 250, 263, 267, 268, 269, 274, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 315, 316, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 355, 356, 357, 358, 362, 365, 368, 378, 391, 392, 402, 404, 405, 408, 413, 429, 447, 461, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492], "handl": [1, 2, 3, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 31, 36, 43, 48, 56, 58, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 275, 276, 277, 279, 307, 308, 336, 338, 339, 342, 369, 387, 389, 402, 404, 405, 447, 459, 460, 465, 471, 472, 473, 474, 476, 478, 483, 486, 489], "well": [1, 2, 3, 8, 27, 32, 36, 43, 48, 56, 63, 65, 66, 67, 70, 73, 78, 79, 80, 83, 99, 110, 115, 119, 126, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 268, 269, 279, 280, 284, 289, 305, 327, 328, 336, 338, 342, 359, 387, 389, 394, 402, 404, 405, 409, 413, 465, 466, 471, 472, 474, 475, 476, 477, 478, 480, 488, 489, 491, 492], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "everi": [1, 3, 8, 15, 16, 17, 18, 21, 29, 30, 36, 40, 41, 43, 48, 49, 56, 60, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 85, 99, 112, 119, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 260, 261, 276, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 313, 314, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 371, 386, 387, 389, 402, 404, 405, 447, 468, 471, 472, 473, 474, 476, 477, 485, 486, 487], "even": [1, 2, 3, 4, 8, 11, 16, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 103, 104, 105, 106, 110, 117, 119, 121, 125, 129, 132, 135, 136, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 215, 471, 473, 476, 483, 485, 486, 487, 492], "simplest": [1, 43, 66, 78, 123, 336, 338, 342, 362, 402, 405, 471, 473, 474, 477, 485, 486, 489, 492], "vanillaweightupdat": 1, "dict": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 101, 110, 112, 117, 118, 129, 132, 135, 136, 137, 138, 139, 140, 147, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 262, 267, 269, 275, 276, 277, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 298, 308, 322, 336, 338, 342, 355, 359, 372, 392, 394, 402, 403, 404, 405, 406, 429, 433, 434, 442, 447, 452, 453, 459, 460, 461, 466, 471, 472, 473, 489, 491, 492], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 18, 24, 26, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 100, 101, 108, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 204, 218, 221, 226, 234, 247, 248, 255, 262, 269, 272, 274, 285, 302, 307, 335, 345, 362, 374, 378, 379, 392, 404, 407, 418, 419, 420, 421, 423, 424, 425, 426, 429, 471, 473, 484, 487], "divers": [1, 4, 159, 168], "abl": [1, 3, 51, 129, 150, 161, 162, 163, 169, 302, 307, 465, 471, 473, 474, 477, 484, 485, 486, 487, 489], "leav": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 70, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 186, 188, 189, 190, 211, 256, 403, 406, 467, 471, 479, 489], "untouch": [1, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 232, 239, 241, 249, 250, 256, 260, 266, 268, 270, 277, 279, 404], "particularli": [1, 2, 3, 197, 304, 475, 491, 492], "benefici": [1, 2, 304], "involv": [1, 138, 140, 141, 151, 152, 165, 216, 219, 267, 302, 307, 476, 478], "complex": [1, 2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405, 471, 472, 476, 477], "architectur": [1, 4, 293, 478, 485, 486, 491], "special": [1, 3, 87, 89, 190, 463, 465, 471, 474, 475, 492], "hardwar": [1, 3, 475], "By": [1, 2, 3, 14, 17, 18, 19, 20, 24, 26, 40, 41, 49, 60, 75, 97, 99, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 152, 159, 160, 161, 162, 163, 165, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 241, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 335, 359, 387, 402, 404, 405, 437, 442, 461, 465, 467, 471, 474, 485, 488, 489, 492], "retriev": [1, 3, 14, 17, 20, 24, 26, 51, 62, 63, 64, 66, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 112, 115, 117, 118, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 194, 199, 210, 220, 228, 231, 243, 283, 286, 310, 338, 342, 354, 355, 359, 362, 366, 369, 370, 371, 372, 374, 386, 389, 390, 392, 394, 395, 402, 403, 406, 407, 409, 410, 411, 412, 461, 468, 472, 473, 477, 487, 492], "appli": [1, 2, 3, 4, 14, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 97, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 242, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 284, 300, 305, 315, 332, 336, 338, 342, 351, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 402, 404, 405, 409, 427, 443, 468, 471, 472, 473, 479, 483, 485, 487, 491, 492], "seamless": [1, 2, 308], "integr": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 292, 302, 307, 310, 336, 338, 342, 358, 402, 404, 405, 466, 476, 477, 479, 483, 485, 486, 487, 488], "infrastructur": [1, 3, 485, 486], "transit": [1, 36, 43, 48, 56, 66, 67, 73, 78, 99, 110, 118, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 282, 284, 336, 338, 342, 364, 402, 404, 405, 471, 474, 476, 477, 479, 485, 487, 489], "sampl": [1, 4, 8, 9, 30, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 99, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 121, 123, 125, 129, 132, 135, 139, 147, 153, 156, 159, 160, 163, 168, 169, 170, 177, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 277, 279, 281, 283, 294, 299, 303, 304, 310, 311, 312, 320, 322, 323, 324, 327, 332, 333, 336, 338, 342, 343, 346, 351, 352, 353, 355, 356, 357, 358, 359, 369, 370, 371, 372, 373, 374, 376, 386, 388, 389, 394, 395, 402, 404, 438, 444, 447, 450, 463, 466, 467, 471, 472, 473, 474, 475, 476, 477, 479, 481, 485, 486, 488, 491, 492], "attent": [1, 2, 8, 188, 219, 338, 342, 471, 474, 492], "given": [1, 2, 3, 15, 16, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 99, 110, 112, 117, 118, 129, 132, 135, 139, 147, 153, 157, 158, 159, 160, 163, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 223, 229, 237, 243, 247, 262, 266, 268, 269, 270, 272, 274, 276, 277, 279, 281, 283, 285, 296, 297, 299, 300, 302, 304, 305, 307, 310, 315, 326, 330, 336, 338, 342, 346, 351, 352, 354, 357, 358, 359, 360, 361, 363, 368, 373, 374, 376, 387, 402, 404, 405, 408, 409, 410, 411, 412, 413, 415, 439, 442, 457, 466, 467, 468, 471, 472, 473, 476, 477, 478, 479, 480, 486, 487, 492], "built": [1, 2, 3, 5, 7, 112, 130, 131, 138, 145, 146, 156, 157, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 396, 402, 405, 407, 455, 457, 458, 461, 471, 472, 473, 474, 475, 478, 480, 483, 487, 489, 492], "flatten": [1, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 123, 186, 216, 234, 403, 404, 406, 409, 444, 463, 474, 486], "suffici": [1, 3, 4, 471], "preprocess": [1, 2, 84, 268, 472, 475], "popul": [1, 2, 3, 15, 16, 18, 27, 29, 30, 63, 68, 69, 70, 77, 79, 80, 112, 188, 238, 262, 294, 315, 387, 402, 405, 465, 471, 473, 474, 477, 479, 487, 489], "replaybuff": [1, 2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 63, 68, 69, 76, 79, 80, 99, 103, 104, 109, 110, 111, 112, 117, 118, 127, 219, 248, 252, 279, 374, 379, 407, 455, 457, 463, 473, 475, 479, 481, 485, 486, 488, 489, 491], "lazytensorstorag": [1, 2, 15, 16, 18, 21, 29, 63, 70, 78, 79, 80, 109, 117, 118, 123, 252, 279, 473, 475, 481, 485, 486, 489], "lambda": [1, 2, 15, 16, 18, 21, 27, 28, 29, 30, 43, 51, 66, 70, 78, 85, 123, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 209, 216, 224, 225, 237, 239, 262, 270, 277, 279, 280, 285, 335, 336, 338, 342, 351, 354, 355, 356, 380, 382, 383, 394, 402, 405, 409, 412, 420, 421, 425, 426, 427, 457, 467, 471, 472, 475, 485, 486, 488, 489, 491, 492], "reshap": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 117, 123, 216, 302, 307, 308, 323, 427, 473, 485, 486], "slice": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 70, 74, 75, 83, 86, 87, 88, 89, 90, 110, 112, 117, 118, 212, 218, 219, 489], "recommend": [1, 2, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 62, 63, 64, 70, 71, 79, 80, 85, 96, 97, 98, 117, 123, 143, 180, 181, 182, 185, 186, 219, 315, 340, 371, 389, 403, 406, 467, 479, 485, 486], "achiev": [1, 2, 3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 261, 279, 285, 336, 338, 342, 355, 402, 404, 405, 444, 468, 471, 472, 473, 474, 475, 483, 485, 486, 487, 489, 491, 492], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 104, 106, 112, 123, 129, 132, 135, 136, 139, 143, 147, 159, 160, 161, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 216, 219, 224, 237, 247, 267, 268, 269, 272, 275, 276, 277, 279, 286, 287, 289, 290, 291, 292, 293, 294, 298, 302, 307, 308, 309, 313, 314, 336, 338, 339, 340, 342, 350, 358, 359, 366, 372, 374, 379, 390, 392, 402, 403, 404, 405, 406, 407, 429, 444, 451, 452, 453, 457, 459, 460, 465, 466, 471, 472, 473, 474, 475, 477, 480, 483, 485, 486, 487, 488, 489, 491, 492], "multidimension": [1, 2, 79, 109, 110, 489], "slicesampl": [1, 2, 110, 118, 219, 489], "sampler": [1, 2, 63, 68, 69, 70, 79, 80, 99, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 123, 125, 219, 248, 323, 374, 379, 407, 471, 473, 485, 486, 489], "One": [1, 2, 3, 4, 8, 34, 35, 39, 40, 41, 44, 49, 54, 55, 60, 61, 75, 84, 123, 129, 130, 131, 159, 163, 168, 169, 219, 252, 272, 281, 320, 358, 362, 393, 398, 433, 471, 472, 489, 492], "must": [1, 2, 3, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 103, 104, 105, 106, 110, 112, 117, 118, 119, 120, 121, 123, 125, 129, 130, 132, 135, 136, 139, 145, 147, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 173, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 212, 215, 216, 219, 222, 224, 225, 231, 235, 237, 239, 241, 243, 245, 256, 259, 261, 262, 263, 266, 267, 269, 270, 271, 276, 279, 286, 287, 296, 302, 304, 307, 308, 311, 312, 313, 314, 326, 336, 338, 342, 346, 351, 352, 354, 355, 356, 357, 358, 359, 362, 363, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 393, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 471, 472, 473, 474, 477, 483, 484, 487, 489], "shape": [1, 2, 3, 15, 16, 18, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 103, 104, 105, 109, 112, 117, 123, 125, 129, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 180, 181, 182, 185, 186, 187, 188, 189, 190, 194, 199, 204, 210, 212, 216, 218, 220, 227, 230, 231, 232, 237, 239, 240, 243, 245, 249, 250, 252, 256, 259, 260, 262, 265, 270, 276, 278, 279, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 320, 321, 322, 323, 324, 325, 326, 331, 332, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 398, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 438, 444, 447, 457, 466, 467, 471, 472, 473, 474, 475, 477, 478, 481, 483, 484, 485, 486, 488, 489, 491, 492], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 29, 58, 268, 303, 332, 333, 368, 464, 471, 472, 473, 474, 475, 478, 483, 485, 486, 488, 492], "dimension": [1, 63, 67, 70, 78, 79, 80, 188, 229, 302, 307, 409, 414, 422, 467, 486], "num_slic": [1, 2, 110, 117, 118, 489], "4": [1, 2, 3, 7, 34, 36, 40, 41, 45, 49, 51, 54, 55, 56, 60, 63, 66, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 99, 103, 104, 105, 109, 110, 112, 117, 118, 125, 129, 130, 131, 132, 133, 134, 135, 139, 145, 146, 147, 148, 149, 150, 153, 155, 159, 160, 163, 166, 167, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 212, 213, 215, 216, 219, 224, 225, 231, 252, 259, 260, 261, 267, 276, 277, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 305, 306, 308, 310, 311, 312, 313, 314, 318, 319, 320, 322, 323, 324, 325, 326, 334, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 363, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 427, 428, 465, 466, 470, 471, 472, 473, 474, 480, 485, 486, 487, 489, 490, 491, 492], "trajectory_kei": [1, 32, 117, 118], "traj_id": [1, 2, 3, 15, 16, 18, 29, 32, 45, 76, 216, 252, 479, 489], "total_fram": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 216, 219, 252, 447, 450, 457, 468, 471, 472, 473, 474, 475, 479, 481, 485, 486, 489, 491], "dim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 117, 186, 203, 219, 220, 241, 245, 258, 259, 262, 271, 276, 306, 330, 335, 354, 403, 406, 461, 467, 472, 473, 475, 485, 487, 489], "ndim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 103, 105, 109, 110, 123, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 241, 279, 354], "parallelenv": [1, 2, 3, 15, 16, 18, 21, 25, 29, 30, 123, 129, 132, 135, 139, 147, 154, 160, 161, 162, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 267, 277, 302, 307, 427, 458, 463, 471, 472, 473, 476, 484, 491, 492], "make_env": [1, 3, 159, 168, 174, 267, 276, 277, 427, 452, 453, 465, 471, 472, 491, 492], "regular": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 62, 64, 71, 85, 96, 97, 98, 99, 109, 115, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 279, 282, 284, 295, 302, 307, 326, 352, 356, 357, 358, 359, 379, 389, 403, 404, 405, 406, 449, 463, 468, 471, 472, 475, 476, 477, 481, 483, 489, 492], "behav": [1, 3, 141, 153, 300, 305, 320, 377, 385, 387, 402, 405, 475, 488], "accordingli": [1, 2, 3, 110, 225, 241, 260, 261, 305, 356, 474], "3": [1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 21, 27, 29, 30, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 85, 96, 97, 98, 99, 103, 105, 109, 110, 112, 117, 118, 123, 125, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 147, 150, 151, 152, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 213, 215, 216, 219, 223, 224, 225, 229, 231, 232, 237, 239, 243, 245, 247, 249, 250, 252, 255, 256, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 274, 277, 279, 280, 282, 283, 285, 286, 287, 289, 290, 291, 293, 296, 298, 300, 301, 302, 305, 306, 307, 308, 310, 311, 313, 314, 315, 320, 323, 325, 335, 336, 338, 342, 346, 347, 348, 349, 351, 352, 355, 357, 358, 361, 362, 363, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 446, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 485, 486, 487, 489, 490, 491, 492], "isn": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 62, 64, 71, 85, 96, 97, 98, 109, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 186, 188, 189, 190, 215, 231, 237, 351, 358, 403, 406, 409, 477, 478, 480, 485, 486], "current": [1, 2, 3, 12, 14, 15, 16, 17, 24, 26, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 107, 110, 112, 118, 129, 132, 135, 139, 141, 147, 154, 157, 158, 159, 160, 163, 168, 169, 170, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 215, 216, 219, 237, 248, 261, 262, 263, 267, 268, 269, 277, 279, 297, 324, 328, 332, 336, 338, 340, 342, 343, 354, 369, 371, 372, 379, 386, 389, 391, 392, 402, 403, 404, 405, 406, 409, 432, 468, 471, 472, 473, 474, 478, 485, 486, 487, 489, 492], "fulli": [1, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 301, 304, 306, 336, 338, 342, 402, 404, 405, 472, 475, 478, 487, 489], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 112, 113, 116, 118, 119, 121, 123, 124, 125, 127, 128, 129, 132, 135, 136, 139, 140, 147, 154, 159, 160, 161, 162, 163, 168, 169, 170, 171, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 234, 235, 237, 238, 239, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 279, 285, 286, 287, 293, 294, 308, 317, 323, 336, 338, 342, 350, 354, 358, 359, 360, 361, 369, 370, 371, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 409, 411, 412, 427, 429, 434, 447, 464, 467, 471, 472, 473, 474, 475, 477, 478, 483, 485, 486, 487, 489, 491, 492], "consecut": [1, 3, 116, 143, 307, 324, 429, 474, 476, 479, 486, 489, 492], "won": [1, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 136, 138, 139, 147, 154, 155, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247, 274, 279, 336, 338, 342, 369, 402, 403, 404, 405, 406, 447, 461, 472, 473, 476, 477], "therebi": [1, 33, 427, 467, 471, 472], "interrupt": [1, 2, 139, 190, 354, 415], "start": [1, 2, 3, 4, 5, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 51, 68, 83, 84, 85, 109, 110, 117, 118, 129, 132, 135, 136, 139, 144, 147, 150, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 226, 443, 470, 471, 472, 475, 482, 486, 487, 489, 490, 492], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 43, 49, 51, 62, 63, 64, 66, 67, 70, 71, 73, 75, 78, 85, 96, 97, 98, 99, 103, 105, 110, 117, 118, 119, 121, 123, 125, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 199, 213, 218, 220, 224, 227, 229, 230, 239, 243, 248, 261, 262, 265, 269, 276, 277, 299, 304, 336, 338, 342, 346, 355, 356, 359, 366, 402, 403, 405, 406, 409, 410, 411, 412, 413, 429, 433, 466, 467, 470, 471, 472, 473, 474, 475, 482, 485, 486, 487, 489, 490, 491, 492], "rid": [1, 43, 66, 78, 336, 338, 342, 402, 405], "natur": [1, 2, 3, 13, 22, 23, 25, 471, 477, 478, 479, 489], "background": [1, 13, 15, 16, 21, 22, 23, 25, 30, 489], "simpli": [1, 3, 6, 62, 64, 71, 84, 85, 96, 97, 98, 121, 123, 128, 186, 192, 232, 256, 275, 387, 402, 403, 405, 406, 409, 466, 467, 471, 473, 478, 483, 485, 486, 492], "replay_buff": [1, 2, 8, 15, 16, 18, 21, 27, 29, 30, 63, 68, 69, 70, 79, 80, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 219, 444, 457, 471, 472, 473, 479, 485, 486, 489], "rb": [1, 2, 15, 16, 18, 21, 29, 45, 63, 68, 69, 70, 76, 79, 80, 99, 104, 109, 110, 112, 117, 118, 123, 219, 252, 279, 472, 474, 475, 479, 481, 486, 488, 489, 491], "paus": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "sleep": [1, 15, 16, 18, 21, 29, 68, 136, 492], "10": [1, 2, 3, 7, 28, 32, 34, 35, 36, 39, 43, 44, 51, 52, 56, 63, 68, 69, 70, 72, 78, 79, 80, 81, 84, 85, 99, 103, 104, 105, 109, 112, 117, 118, 123, 125, 129, 130, 131, 132, 135, 136, 139, 145, 146, 147, 153, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 194, 196, 198, 199, 212, 213, 216, 218, 219, 224, 225, 261, 263, 264, 265, 276, 277, 279, 283, 285, 288, 289, 291, 293, 295, 299, 300, 301, 302, 304, 305, 306, 307, 310, 311, 312, 322, 324, 335, 355, 359, 362, 366, 370, 374, 376, 383, 389, 390, 391, 395, 407, 409, 410, 411, 412, 415, 429, 438, 468, 471, 472, 473, 474, 475, 476, 477, 481, 485, 487, 489, 491, 492], "i": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 45, 48, 49, 56, 63, 66, 67, 70, 73, 75, 76, 78, 80, 81, 85, 99, 103, 105, 109, 110, 117, 118, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 225, 226, 241, 247, 252, 255, 267, 269, 274, 279, 301, 302, 306, 307, 326, 336, 338, 342, 345, 352, 354, 355, 357, 358, 359, 369, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 404, 405, 409, 410, 411, 412, 438, 450, 465, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492], "rang": [1, 2, 3, 4, 8, 63, 68, 69, 70, 72, 79, 80, 99, 103, 105, 112, 123, 129, 132, 135, 136, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 252, 265, 276, 279, 280, 301, 306, 323, 341, 386, 394, 395, 467, 468, 471, 473, 474, 475, 478, 479, 481, 485, 486, 487, 489, 491], "optim_step": [1, 283, 310, 475, 481], "rest": [1, 15, 16, 21, 43, 284, 466, 473, 474, 485, 487, 491], "multithread": [1, 2, 3, 63, 70, 79, 80, 95, 154, 155, 479, 489], "mind": [1, 3, 110, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 485, 486], "gil": 1, "relat": [1, 2, 3, 4, 10, 63, 159, 185, 234, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 472, 481, 487], "restrict": [1, 2, 3, 467, 472, 483, 488, 489, 492], "hand": [1, 2, 3, 7, 27, 40, 485, 486, 487], "let": [1, 2, 3, 6, 7, 11, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 81, 99, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 279, 313, 314, 336, 338, 342, 351, 402, 404, 405, 442, 465, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492], "child": [1, 20, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 472], "fill": [1, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 139, 190, 215, 262, 275, 307, 409, 474, 487, 488], "truli": [1, 275, 491], "decoupl": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 471, 478, 491], "been": [1, 2, 3, 5, 7, 8, 12, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 112, 116, 129, 132, 135, 139, 143, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 195, 239, 260, 261, 268, 269, 300, 302, 305, 307, 315, 354, 369, 387, 389, 391, 402, 405, 471, 472, 473, 474, 484, 485, 486, 487, 489, 491, 492], "shut": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 163, 169], "down": [1, 4, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 163, 169, 467, 474, 476], "async_shutdown": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 68], "mean": [1, 2, 3, 4, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 62, 64, 71, 79, 83, 85, 96, 97, 98, 104, 109, 110, 117, 118, 123, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 199, 215, 243, 267, 276, 277, 281, 282, 283, 294, 297, 300, 302, 304, 305, 307, 310, 322, 323, 331, 332, 355, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 405, 406, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 466, 467, 471, 472, 473, 475, 477, 485, 486, 487, 489, 492], "drastic": [1, 146, 159, 489], "load": [1, 2, 6, 7, 15, 16, 18, 21, 29, 30, 31, 36, 43, 45, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 96, 97, 98, 99, 101, 103, 104, 105, 106, 112, 119, 120, 121, 125, 126, 129, 132, 134, 135, 139, 147, 159, 160, 163, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 276, 277, 279, 336, 338, 342, 402, 403, 404, 405, 406, 447, 461, 465, 468, 471, 473, 475, 483, 489], "factor": [1, 8, 11, 33, 43, 56, 252, 279, 281, 282, 299, 303, 317, 324, 332, 333, 370, 376, 379, 380, 382, 393, 415, 471, 472, 475, 477, 481, 485, 486, 489, 492], "signific": [1, 3, 5, 8, 473, 491, 492], "understand": [1, 2, 8, 13, 22, 23, 25, 43, 471, 472, 475, 476, 477, 483, 485, 486], "affect": [1, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 225, 269, 277, 279, 336, 338, 342, 402, 404, 405, 409, 410, 411, 412, 485], "algorithm": [1, 2, 3, 8, 9, 13, 22, 23, 25, 153, 212, 259, 369, 389, 390, 392, 463, 467, 468, 471, 472, 473, 474, 475, 477, 478, 479, 480, 485, 486, 488, 489, 491], "legitim": [1, 467, 492], "unless": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 100, 116, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 277, 279, 284, 336, 338, 342, 369, 370, 372, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 473], "benchmark": [1, 2, 3, 9, 130, 131, 139, 145, 146, 190], "backend": [1, 3, 7, 15, 16, 18, 21, 22, 23, 27, 28, 29, 85, 129, 132, 135, 138, 139, 147, 159, 160, 163, 168, 169, 170, 179, 180, 181, 182, 185, 188, 189, 190, 209, 280, 342, 465, 468, 471, 473, 474, 475, 476, 479, 480, 487], "gloo": [1, 22, 23, 28], "nccl": [1, 22, 23, 340], "mpi": [1, 22, 23], "distributeddatacollector": [1, 24, 28, 463], "rpc": [1, 25, 26, 28, 29, 30, 69], "rpcdatacollector": [1, 26, 28, 463], "launcher": [1, 22, 23, 25, 28], "rai": [1, 17, 18, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 112, 339, 341], "submitit": [1, 22, 23, 25, 28], "mode": [1, 3, 6, 13, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 144, 147, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 227, 230, 261, 269, 276, 277, 279, 284, 294, 302, 303, 304, 307, 312, 320, 331, 332, 333, 336, 338, 342, 345, 355, 359, 371, 387, 389, 402, 404, 405, 427, 437, 442, 466, 467, 471, 472, 485, 486, 491, 492], "find": [1, 4, 6, 7, 22, 23, 25, 63, 65, 81, 117, 118, 281, 305, 324, 441, 445, 471, 472, 475, 477, 478, 483, 485, 486], "folder": [1, 2, 62, 64, 71, 85, 96, 97, 98, 173, 186, 219, 403, 406, 472], "machin": [1, 2, 7, 22, 23, 25, 56, 143, 485, 486, 491], "wonder": 1, "why": [1, 2, 3, 210, 467, 485, 487, 492], "instead": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 36, 39, 43, 48, 56, 66, 67, 68, 73, 78, 82, 85, 99, 109, 110, 129, 132, 135, 139, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 234, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 358, 362, 365, 369, 371, 372, 374, 377, 378, 379, 385, 386, 389, 390, 391, 392, 402, 404, 405, 407, 409, 413, 417, 461, 467, 475, 476, 477, 481, 487, 489, 492], "lower": [1, 2, 3, 27, 36, 37, 109, 110, 222, 276, 277, 327, 328, 362, 389, 473, 485, 487], "io": [1, 11, 145, 146, 154, 157, 158, 171, 172, 305, 306, 475], "footprint": [1, 2, 489], "commun": [1, 2, 3, 24, 26, 147, 159, 163, 168, 189, 340, 464, 473, 492], "yet": [1, 130, 131, 145, 404, 488], "plai": [1, 3, 161, 162, 170, 180, 219, 472, 473, 478, 489, 492], "role": [1, 3, 97, 152, 180, 182, 185, 199, 405, 472, 478, 492], "opposit": [1, 485], "direct": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 300, 305, 336, 338, 342, 387, 402, 404, 405, 472, 478], "faster": [1, 2, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 109, 154, 311, 409, 410, 411, 412, 474, 475, 485, 486], "share": [1, 3, 6, 8, 15, 16, 18, 21, 29, 32, 62, 64, 70, 71, 79, 80, 83, 85, 96, 97, 98, 101, 103, 104, 105, 106, 110, 112, 113, 117, 119, 121, 125, 136, 159, 168, 186, 259, 267, 276, 277, 302, 307, 313, 314, 347, 348, 349, 369, 370, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 403, 406, 461, 463, 466, 467, 473, 475, 481, 483, 484, 485, 486, 491, 492], "among": [1, 3, 58, 161, 162, 267, 378, 392, 467, 485, 486], "prohibit": [1, 3, 18, 123], "slow": [1, 3, 4, 11, 62, 64, 71, 85, 96, 97, 98, 104, 117, 118, 186, 403, 406], "compar": [1, 3, 123, 370, 372, 385, 390, 392, 394, 395, 442, 467, 471, 473, 475, 477, 478, 485, 486, 489, 492], "gpu": [1, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 103, 105, 125, 129, 132, 135, 139, 140, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 339, 342, 402, 404, 405, 471, 473, 474, 485, 486, 492], "driver": [1, 7], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 110, 112, 115, 117, 118, 121, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 151, 152, 154, 155, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 228, 231, 232, 233, 235, 237, 238, 239, 241, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 299, 302, 307, 311, 312, 313, 314, 324, 336, 338, 342, 346, 350, 351, 354, 355, 356, 358, 359, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 397, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 417, 427, 429, 434, 436, 447, 458, 471, 472, 473, 475, 477, 480, 485, 486, 489, 491, 492], "mani": [1, 2, 3, 4, 70, 130, 131, 133, 134, 135, 138, 140, 141, 145, 146, 154, 155, 165, 188, 194, 262, 369, 371, 378, 386, 389, 402, 466, 471, 472, 473, 475, 476, 477, 479, 481, 485, 486, 487, 489, 491, 492], "eg": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 103, 104, 105, 106, 119, 121, 125, 129, 132, 133, 134, 135, 138, 139, 140, 141, 143, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 229, 260, 269, 280, 313, 350, 403, 406, 429], "gymnasium": [1, 2, 3, 5, 15, 16, 18, 21, 29, 78, 129, 132, 135, 138, 139, 140, 144, 147, 148, 149, 159, 160, 163, 168, 169, 170, 179, 180, 181, 182, 185, 188, 189, 190, 209, 232, 256, 260, 275, 280, 472, 473, 475, 487, 491], "warn": [1, 3, 67, 73, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 276, 281, 299, 324, 437, 472, 483], "quickli": [1, 3, 472, 485, 486, 492], "becom": [1, 2, 3, 4, 27, 300, 305, 485, 486, 492], "quit": [1, 3, 11, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 471, 472, 473, 475, 477, 485, 486, 492], "annoi": [1, 3], "filter": [1, 2, 3, 4, 84, 110, 117, 118, 369, 370, 372, 373, 377, 378, 385, 389, 390, 392, 476], "out": [1, 2, 3, 4, 5, 9, 14, 17, 19, 20, 24, 26, 27, 31, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 99, 101, 110, 117, 118, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 259, 262, 279, 281, 300, 301, 305, 311, 312, 315, 316, 317, 336, 338, 342, 346, 350, 351, 352, 355, 356, 357, 358, 359, 387, 400, 401, 402, 403, 404, 405, 406, 467, 468, 471, 472, 473, 474, 475, 476, 477, 479, 485, 486, 487, 489, 491, 492], "still": [1, 2, 3, 9, 43, 66, 78, 85, 86, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 267, 324, 336, 338, 342, 386, 387, 402, 405, 467, 471, 472, 474, 484, 487, 489, 492], "wish": [1, 3, 11, 15, 16, 21, 209, 478, 489], "displai": [1, 3, 7, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 447, 468, 471, 472, 483, 486, 487], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 211, 212, 213, 215, 216, 219, 220, 223, 225, 227, 230, 231, 232, 234, 237, 238, 239, 241, 242, 243, 245, 247, 248, 249, 250, 252, 254, 255, 256, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 289, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 324, 325, 326, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 436, 437, 440, 441, 442, 444, 445, 447, 461, 466, 467, 468, 471, 472, 473, 475, 480, 481, 483, 484, 485, 486, 487, 488, 491, 492], "central": [2, 14, 20, 24, 26, 313, 314, 315, 471, 472, 476, 485, 486, 489], "part": [2, 3, 4, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 85, 99, 110, 129, 130, 132, 135, 139, 145, 147, 157, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 218, 243, 252, 255, 279, 336, 338, 342, 363, 402, 404, 405, 438, 461, 465, 467, 471, 473, 474, 475, 481, 485, 487, 492], "wide": [2, 3, 5, 491], "give": [2, 3, 7, 79, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 371, 386, 389, 464, 465, 467, 471, 472, 475, 485, 486, 487, 488, 491], "abil": [2, 387, 487, 489], "panel": [2, 473], "usag": [2, 3, 5, 7, 15, 16, 18, 21, 22, 23, 25, 27, 43, 66, 78, 101, 123, 181, 197, 216, 219, 231, 284, 302, 307, 336, 338, 342, 372, 377, 385, 392, 396, 402, 405, 466, 471, 473, 474, 477, 478, 480, 485, 486, 489], "includ": [2, 3, 4, 7, 9, 27, 36, 43, 48, 56, 66, 67, 73, 78, 83, 85, 99, 100, 101, 103, 104, 105, 106, 108, 119, 121, 125, 129, 132, 135, 139, 147, 153, 157, 158, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 234, 237, 261, 267, 269, 276, 277, 279, 302, 307, 336, 338, 342, 369, 372, 387, 392, 402, 404, 405, 450, 465, 466, 468, 471, 472, 473, 474, 475, 483, 485, 486, 487, 489, 492], "almost": [2, 277, 311, 312, 474], "physic": [2, 6, 7, 101, 159, 160, 165, 468, 471, 485, 486, 487], "theori": 2, "crude": 2, "made": [2, 3, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 97, 99, 103, 104, 105, 106, 119, 121, 125, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 262, 279, 315, 324, 336, 338, 342, 374, 387, 402, 404, 405, 407, 471, 472, 474, 485, 486, 488, 489, 491], "liststorag": [2, 51, 63, 68, 70, 78, 79, 80, 104, 112, 489], "veri": [2, 3, 145, 146, 185, 472, 476, 479, 483, 485, 487, 489, 491, 492], "ineffici": [2, 4], "tensor": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 229, 230, 231, 232, 234, 237, 238, 240, 243, 245, 247, 248, 249, 250, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 338, 339, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 367, 369, 370, 372, 373, 374, 376, 377, 378, 381, 382, 385, 387, 389, 390, 391, 392, 394, 395, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 485, 486, 487, 491, 492], "contigu": [2, 3, 8, 37, 40, 48, 86, 104, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 237, 240, 262, 270, 487, 489, 491], "tensorstorag": [2, 70, 78, 103, 109, 110, 123, 126, 479, 489], "lazymemmapstorag": [2, 45, 63, 68, 69, 70, 76, 79, 80, 110, 112, 117, 118, 218, 219, 471, 472, 474, 479, 485, 488, 489], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 153, 156, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 461, 463, 466, 467, 468, 471, 472, 473, 474, 476, 477, 478, 479, 480, 483, 485, 486, 489, 492], "citizen": 2, "pytre": [2, 63, 68, 70, 79, 80, 106, 112, 126], "tupl": [2, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 101, 106, 110, 112, 117, 121, 123, 129, 132, 133, 134, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 237, 239, 243, 279, 285, 289, 295, 296, 302, 306, 307, 308, 315, 322, 325, 326, 336, 338, 342, 351, 352, 356, 357, 362, 369, 370, 371, 372, 373, 377, 378, 380, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 409, 410, 411, 412, 441, 442, 445, 454, 483, 489, 491], "dictionari": [2, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 99, 110, 115, 117, 118, 129, 132, 135, 138, 139, 140, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 262, 267, 269, 277, 279, 336, 338, 342, 355, 359, 372, 392, 394, 402, 403, 404, 405, 406, 442, 459, 460, 461, 468, 472, 473, 476, 478, 485, 487, 492], "nest": [2, 3, 32, 36, 40, 41, 43, 45, 47, 48, 49, 56, 57, 62, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 85, 91, 96, 97, 98, 99, 103, 104, 105, 108, 112, 125, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 219, 260, 263, 267, 279, 336, 338, 342, 354, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 427, 437, 468, 472, 473, 475, 486, 487, 489, 491], "construct": [2, 3, 5, 32, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 99, 112, 129, 132, 135, 136, 138, 139, 147, 159, 160, 161, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 227, 230, 277, 279, 302, 307, 328, 336, 338, 342, 359, 402, 404, 405, 447, 465, 466, 472, 473, 474, 477, 485, 487, 489, 492], "ram": [2, 138, 140, 480, 489], "prealloc": [2, 3, 159, 168, 487], "ve": [2, 72, 471, 474, 481, 483], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 45, 51, 63, 66, 68, 69, 70, 76, 79, 80, 85, 99, 102, 103, 106, 109, 110, 112, 113, 117, 118, 121, 123, 124, 127, 128, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 218, 252, 268, 279, 282, 387, 402, 404, 405, 444, 463, 465, 467, 468, 471, 472, 473, 474, 475, 479, 481, 485, 486, 488, 489, 491], "here": [2, 3, 4, 7, 8, 9, 10, 15, 16, 27, 123, 129, 132, 133, 134, 135, 139, 143, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 198, 219, 267, 315, 338, 436, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 479, 481, 485, 486, 487, 489, 491, 492], "add": [2, 3, 4, 6, 27, 36, 40, 41, 43, 48, 49, 51, 56, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 97, 99, 102, 104, 109, 112, 113, 123, 124, 127, 128, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 237, 239, 266, 269, 279, 302, 307, 316, 336, 338, 342, 353, 369, 402, 404, 405, 443, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491], "string": [2, 22, 23, 25, 36, 43, 48, 51, 56, 58, 65, 66, 67, 73, 78, 84, 85, 95, 99, 104, 129, 132, 135, 139, 147, 151, 157, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 237, 247, 260, 266, 274, 279, 302, 307, 336, 338, 342, 351, 354, 355, 356, 368, 402, 404, 405, 428, 446, 467, 471, 473, 474, 483, 489], "element": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 51, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 83, 85, 96, 97, 98, 103, 104, 105, 106, 109, 110, 112, 117, 118, 123, 125, 129, 132, 135, 139, 147, 156, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 187, 188, 189, 190, 194, 212, 219, 224, 225, 248, 257, 261, 262, 277, 281, 286, 287, 300, 301, 305, 345, 346, 351, 354, 358, 359, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 405, 406, 409, 438, 465, 467, 471, 473, 477, 479, 483, 489, 492], "30": [2, 3, 70, 78, 99, 117, 118, 193, 215, 242, 327, 328, 427, 431, 434, 436, 479, 486, 487, 489], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 117, 118, 119, 121, 123, 125, 129, 132, 135, 136, 138, 139, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 234, 236, 237, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 332, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 456, 457, 459, 460, 461, 466, 468, 471, 472, 474, 475, 487, 489, 491], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 117, 118, 119, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 212, 214, 215, 216, 218, 219, 220, 221, 223, 226, 229, 234, 235, 237, 241, 242, 243, 245, 247, 248, 251, 258, 259, 260, 263, 266, 267, 269, 271, 274, 279, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 339, 340, 342, 350, 351, 352, 354, 355, 357, 359, 369, 370, 371, 378, 380, 381, 386, 387, 388, 389, 390, 394, 395, 402, 403, 404, 405, 406, 409, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 434, 436, 438, 439, 440, 442, 444, 447, 449, 459, 460, 461, 475, 487, 489], "entri": [2, 3, 15, 16, 21, 32, 36, 40, 41, 43, 45, 48, 49, 51, 56, 62, 64, 65, 66, 67, 71, 73, 75, 76, 78, 84, 85, 92, 96, 97, 98, 99, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 152, 159, 160, 163, 165, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 215, 219, 221, 222, 225, 226, 227, 228, 230, 231, 234, 238, 240, 241, 243, 245, 247, 250, 252, 255, 257, 259, 260, 261, 262, 264, 267, 269, 271, 274, 276, 279, 302, 304, 311, 312, 336, 338, 342, 350, 351, 354, 356, 357, 370, 372, 392, 402, 403, 404, 405, 406, 409, 410, 411, 412, 466, 471, 473, 474, 476, 477, 478, 480, 485, 486, 487, 488, 489, 491, 492], "onto": [2, 8, 60, 62, 64, 71, 85, 96, 97, 98, 186, 204, 228, 281, 324, 346, 351, 352, 355, 356, 357, 358, 359, 403, 406, 409, 474, 487], "__setitem__": 2, "indic": [2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 109, 110, 112, 113, 115, 116, 117, 118, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 154, 155, 159, 160, 163, 165, 168, 169, 170, 173, 174, 180, 181, 182, 185, 186, 188, 189, 190, 211, 212, 219, 220, 224, 260, 261, 262, 263, 269, 277, 279, 280, 286, 287, 304, 308, 311, 312, 314, 324, 338, 342, 354, 356, 357, 365, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 405, 406, 407, 451, 461, 464, 468, 473, 474, 475, 479, 480, 481, 487, 489, 492], "without": [2, 3, 7, 9, 14, 15, 16, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 112, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 227, 230, 265, 268, 279, 300, 301, 305, 306, 336, 338, 340, 342, 348, 349, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 457, 464, 466, 471, 472, 473, 475, 476, 477, 478, 479, 483, 485, 486, 487, 489, 492], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 99, 109, 110, 112, 129, 132, 135, 139, 147, 153, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 213, 215, 216, 227, 229, 230, 237, 249, 260, 261, 267, 269, 273, 276, 277, 279, 281, 283, 284, 299, 300, 310, 315, 324, 336, 338, 341, 342, 355, 356, 357, 358, 359, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 442, 447, 449, 452, 453, 456, 457, 463, 465, 468, 472, 473, 474, 475, 478, 481, 485, 486, 487, 489, 492], "length": [2, 25, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 110, 117, 118, 121, 129, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 199, 212, 219, 240, 248, 276, 283, 286, 287, 289, 291, 293, 300, 304, 305, 308, 310, 313, 314, 338, 342, 346, 358, 363, 404, 405, 438, 444, 471, 473, 474, 479, 481, 483, 487, 489, 492], "cursor": [2, 63, 68, 69, 70, 79, 80, 112], "afterward": [2, 36, 43, 48, 66, 67, 73, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 485, 492], "tell": [2, 3, 4, 7, 129, 161, 162, 180, 267, 471, 474, 479, 485, 486], "our": [2, 3, 7, 8, 11, 22, 51, 70, 180, 219, 224, 429, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 491], "far": [2, 63, 68, 69, 70, 72, 79, 80, 112, 180, 185, 303, 332, 333, 481, 487, 492], "empti": [2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 106, 112, 129, 132, 135, 139, 146, 147, 156, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 227, 230, 247, 249, 263, 269, 272, 274, 277, 279, 336, 338, 342, 358, 402, 403, 404, 405, 406, 433, 471, 487], "64": [2, 3, 62, 64, 71, 85, 96, 97, 98, 112, 186, 219, 251, 289, 290, 298, 302, 307, 314, 315, 325, 403, 406, 407, 471, 472, 473, 474, 475, 477, 481, 484, 487, 489, 491, 492], "dtype": [2, 3, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 104, 105, 109, 110, 117, 118, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 210, 211, 212, 213, 216, 217, 223, 224, 227, 228, 229, 230, 231, 232, 237, 239, 240, 243, 245, 247, 249, 250, 252, 256, 259, 260, 262, 264, 265, 268, 269, 270, 272, 274, 279, 283, 285, 295, 296, 300, 301, 302, 304, 305, 306, 307, 310, 316, 317, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 366, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 466, 475, 483, 484, 487, 489, 491, 492], "unit8": 2, "img": 2, "randint": [2, 84, 112, 194, 265, 304, 489], "255": [2, 112, 265, 489], "uint8": [2, 3, 40, 62, 64, 71, 85, 96, 97, 98, 133, 134, 151, 152, 186, 231, 237, 245, 265, 403, 406, 472, 489], "next": [2, 3, 4, 8, 15, 16, 18, 30, 32, 40, 41, 43, 45, 47, 49, 51, 56, 63, 68, 69, 70, 72, 75, 76, 78, 79, 80, 85, 95, 99, 100, 101, 108, 110, 112, 117, 118, 123, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 145, 146, 147, 151, 152, 153, 157, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 185, 188, 189, 190, 194, 196, 198, 199, 204, 210, 212, 215, 216, 218, 219, 224, 225, 227, 230, 231, 232, 237, 238, 239, 240, 241, 245, 249, 250, 252, 255, 256, 260, 262, 264, 267, 270, 275, 276, 277, 279, 283, 301, 302, 306, 307, 310, 328, 354, 364, 366, 369, 370, 372, 373, 374, 376, 377, 378, 379, 385, 389, 390, 391, 392, 394, 395, 404, 405, 407, 408, 409, 410, 411, 412, 413, 429, 441, 442, 445, 472, 474, 475, 477, 481, 483, 487, 488, 491, 492], "ask": [2, 3, 8, 110, 117, 118, 429, 473, 474, 476, 477, 485, 486, 488, 492], "automat": [2, 3, 5, 12, 20, 37, 51, 83, 86, 103, 105, 112, 118, 125, 129, 132, 135, 138, 139, 140, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 197, 215, 227, 230, 243, 262, 275, 277, 286, 302, 307, 340, 346, 354, 355, 359, 427, 437, 466, 471, 473, 476, 477, 485, 486, 487, 489, 491], "look": [2, 3, 5, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 110, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 237, 247, 248, 272, 279, 284, 336, 338, 342, 355, 359, 360, 361, 402, 404, 405, 467, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492], "lead": [2, 3, 4, 8, 10, 29, 32, 40, 41, 49, 56, 63, 70, 75, 85, 109, 116, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 262, 280, 303, 325, 332, 333, 345, 471, 474, 475, 485, 486, 487, 489, 491], "match": [2, 3, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 100, 112, 121, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 234, 236, 238, 239, 240, 241, 243, 245, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 286, 287, 294, 302, 307, 308, 313, 314, 331, 336, 338, 342, 346, 350, 351, 355, 356, 358, 359, 362, 363, 370, 371, 372, 378, 386, 388, 389, 390, 392, 402, 404, 405, 444, 449, 466, 467, 471, 473, 475, 484, 486, 487, 489, 492], "don": [2, 3, 4, 6, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 180, 219, 268, 311, 472, 473, 475, 479, 489, 491, 492], "throw": [2, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 403, 404, 405, 406, 492], "rb_td": 2, "batch_siz": [2, 3, 8, 15, 16, 18, 29, 32, 40, 43, 45, 51, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 103, 104, 105, 109, 110, 111, 112, 117, 118, 123, 125, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 211, 212, 216, 218, 219, 223, 227, 230, 231, 232, 237, 245, 249, 250, 252, 256, 259, 260, 262, 268, 269, 270, 279, 283, 285, 293, 294, 295, 296, 299, 302, 307, 310, 324, 325, 326, 334, 335, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 429, 438, 444, 465, 466, 467, 471, 472, 473, 474, 479, 483, 485, 486, 487, 489, 491, 492], "max": [2, 32, 60, 64, 79, 84, 95, 109, 110, 123, 146, 187, 229, 263, 324, 370, 371, 372, 378, 388, 390, 392, 402, 471, 473, 474, 475, 481], "label": [2, 64, 65, 72, 84, 85, 471, 485, 489], "100": [2, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 99, 103, 105, 112, 117, 118, 123, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 224, 231, 243, 252, 257, 260, 279, 304, 311, 312, 313, 336, 338, 342, 352, 354, 402, 404, 405, 429, 439, 457, 472, 473, 475, 476, 478, 481, 484, 485, 486, 487, 489, 491, 492], "rb_pytre": 2, "randn": [2, 3, 63, 66, 68, 69, 70, 79, 80, 103, 104, 105, 110, 112, 117, 118, 125, 129, 199, 204, 218, 243, 285, 288, 289, 293, 295, 296, 300, 301, 304, 305, 306, 311, 312, 313, 320, 322, 326, 346, 347, 348, 349, 350, 351, 355, 356, 358, 361, 362, 363, 369, 370, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 409, 410, 411, 412, 446, 466, 475, 489, 491, 492], "c": [2, 3, 6, 7, 15, 16, 18, 21, 29, 40, 43, 62, 64, 66, 70, 71, 78, 79, 80, 85, 96, 97, 98, 104, 186, 243, 265, 270, 304, 305, 306, 336, 338, 342, 402, 403, 405, 406, 472, 489], "zero": [2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 105, 109, 110, 112, 117, 118, 123, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 216, 218, 220, 224, 227, 229, 230, 243, 249, 252, 259, 277, 279, 282, 283, 290, 291, 292, 298, 299, 300, 301, 302, 305, 306, 307, 311, 312, 314, 315, 324, 325, 334, 336, 338, 342, 357, 359, 365, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 474, 475, 489, 491, 492], "assert": [2, 3, 6, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 112, 123, 129, 132, 135, 139, 142, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 186, 188, 189, 190, 204, 209, 212, 216, 219, 222, 227, 230, 239, 250, 257, 269, 276, 285, 314, 335, 403, 405, 406, 409, 410, 411, 412, 437, 438, 446, 479, 484, 489, 492], "len": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 99, 103, 105, 112, 125, 194, 199, 245, 286, 287, 308, 314, 405, 471, 475, 479, 481, 485, 487, 488, 489, 491], "ambigu": [2, 63, 68, 70, 112], "signatur": [2, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 51, 56, 63, 66, 67, 68, 70, 73, 78, 85, 99, 112, 121, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 216, 223, 237, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405, 467, 471, 475, 476, 487], "deal": [2, 3, 63, 68, 70, 112, 387, 402, 405, 467, 471, 473, 486, 489], "interpret": [2, 3, 63, 68, 70, 112, 465, 472], "put": [2, 63, 68, 70, 112, 139, 151, 152, 170, 173, 174, 276, 436, 461, 466, 472, 473, 474, 476, 483, 485, 487], "solv": [2, 4, 7, 9, 10, 63, 68, 70, 112, 464, 471, 472, 473, 479, 481, 485, 486, 487, 489], "clear": [2, 3, 11, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 112, 129, 132, 135, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 304, 336, 338, 342, 402, 404, 405, 439, 476, 479], "cut": [2, 63, 68, 70, 112], "distinct": [2, 3, 63, 68, 70, 112, 216, 219, 478, 484], "view": [2, 3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 279, 296, 300, 305, 308, 336, 338, 342, 402, 404, 405, 476, 487, 489, 491, 492], "through": [2, 3, 4, 5, 8, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 40, 41, 49, 63, 67, 68, 69, 70, 73, 75, 79, 80, 85, 112, 129, 130, 131, 132, 135, 138, 139, 140, 143, 145, 146, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 193, 215, 225, 227, 230, 248, 280, 285, 308, 325, 354, 355, 359, 360, 361, 365, 368, 387, 409, 410, 411, 412, 437, 465, 466, 467, 471, 472, 473, 476, 478, 484, 485, 486, 487, 488, 489, 492], "collate_fn": [2, 63, 68, 69, 70, 78, 79, 80, 112, 181, 182, 185, 489, 491], "__init__": [2, 3, 7, 99, 135, 153, 171, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 283, 294, 296, 300, 305, 310, 339, 363, 370, 372, 373, 378, 385, 390, 392, 394, 395, 404, 468, 487, 492], "major": 2, "worri": [2, 81, 492], "though": [2, 4, 11, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 308, 473, 485, 486], "too": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 66, 72, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 242, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 303, 332, 333, 336, 338, 342, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 472, 477, 480, 487, 489, 492], "latter": [2, 22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 389, 402, 404, 405, 459, 460], "inv": [2, 3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 222, 229, 232, 237, 245, 252, 257, 259, 264, 268, 271, 279, 404, 487], "obvious": [2, 475], "ignor": [2, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 73, 74, 75, 78, 81, 83, 86, 87, 88, 89, 90, 99, 101, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 229, 232, 256, 265, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 312, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 402, 404, 405, 409, 483, 489], "thread": [2, 3, 15, 16, 18, 21, 29, 30, 62, 64, 71, 85, 96, 97, 98, 129, 130, 131, 145, 146, 159, 168, 169, 186, 277, 403, 406], "prefetch": [2, 63, 70, 79, 80, 95, 471, 472, 474, 489], "advis": [2, 11, 480, 492], "techniqu": [2, 8, 159, 168, 472, 475, 479, 489], "real": [2, 5, 359, 467, 474, 475, 487, 488], "life": [2, 231, 488], "adopt": [2, 3, 5, 471, 492], "throughput": [2, 9, 146, 471], "constant": [2, 11, 42, 109, 110, 219, 243, 261, 468, 471, 473, 474, 492], "throughout": [2, 3, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 473, 485, 492], "further": [2, 3, 5, 33, 405, 471, 473, 475, 476], "refin": [2, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407], "coupl": [2, 371, 389, 474, 477, 478, 487, 489], "first_elt": 2, "128": [2, 118, 130, 131, 145, 146, 290, 293, 472, 474, 475, 481, 485, 488, 489], "wa": [2, 3, 5, 7, 40, 41, 43, 49, 51, 63, 66, 68, 69, 70, 75, 78, 79, 80, 85, 110, 112, 116, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 211, 219, 237, 269, 305, 336, 338, 342, 369, 371, 384, 386, 389, 391, 393, 402, 415, 467, 472, 473, 476, 477, 484, 485, 489, 491], "print": [2, 3, 6, 7, 15, 16, 18, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 109, 110, 112, 117, 118, 123, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 215, 216, 219, 220, 224, 225, 227, 228, 229, 230, 238, 243, 249, 250, 252, 255, 260, 262, 263, 264, 265, 276, 277, 279, 286, 287, 289, 290, 291, 292, 293, 296, 298, 299, 302, 307, 308, 311, 312, 313, 314, 320, 323, 324, 326, 336, 338, 342, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 359, 361, 363, 366, 387, 402, 403, 404, 405, 406, 427, 457, 465, 466, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 220], "larger": [2, 4, 78, 302, 307, 377, 385, 491], "volum": 2, "due": [2, 3, 5, 13, 22, 23, 25, 32, 371, 389, 478, 488, 489, 492], "memorymappedtensor": [2, 45, 62, 64, 76, 84, 103, 431, 479], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 112, 129, 132, 135, 139, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 226, 227, 228, 230, 255, 258, 261, 266, 270, 271, 279, 280, 283, 305, 336, 338, 340, 342, 358, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 404, 405, 436, 466, 471, 473, 474, 475, 479, 483, 485], "file": [2, 6, 7, 8, 62, 64, 71, 85, 96, 97, 98, 101, 173, 186, 403, 406, 428, 429, 431, 447, 468, 470, 472, 485, 489, 490], "locat": [2, 7, 62, 64, 71, 84, 85, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 207, 226, 231, 243, 254, 277, 303, 332, 333, 403, 406, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 471, 472, 473, 480, 485, 486, 489], "improv": [2, 4, 11, 235, 369, 467, 475, 485, 486, 489], "failur": [2, 4, 371, 389, 402], "recoveri": 2, "were": [2, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 69, 79, 80, 159, 168, 237, 371, 389, 465, 473, 485, 489], "found": [2, 3, 6, 7, 10, 15, 16, 18, 21, 27, 32, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 96, 97, 98, 99, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 213, 219, 240, 252, 255, 263, 276, 277, 279, 299, 313, 314, 336, 338, 342, 355, 359, 386, 387, 389, 402, 403, 404, 405, 406, 467, 471, 472, 474, 475, 476, 478, 480, 483, 487, 489, 491], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 74, 75, 83, 86, 87, 88, 89, 90, 103, 110, 157, 158, 229, 267, 282, 305, 306, 377, 474, 475, 479, 489], "sharabl": [2, 159, 168], "collabor": 2, "rather": [2, 4, 121, 157, 158, 188, 194, 250, 277, 466, 467, 471, 472, 473, 476, 478, 485, 486, 489], "incur": [2, 130, 131, 145, 146], "transmiss": 2, "overhead": [2, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 304, 359], "content": [2, 3, 8, 18, 40, 41, 49, 62, 63, 64, 70, 71, 75, 79, 80, 85, 96, 97, 98, 116, 117, 118, 129, 132, 135, 138, 139, 140, 147, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 184, 185, 186, 188, 189, 190, 193, 199, 249, 286, 287, 308, 313, 314, 355, 387, 402, 403, 405, 406, 473, 483, 487, 491], "map": [2, 3, 8, 14, 17, 19, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 101, 103, 108, 109, 110, 129, 132, 135, 139, 147, 150, 151, 152, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 212, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 245, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 279, 296, 336, 338, 342, 346, 347, 348, 349, 351, 355, 356, 358, 359, 361, 362, 363, 364, 371, 372, 386, 389, 392, 402, 403, 404, 405, 406, 407, 409, 442, 463, 466, 467, 471, 472, 473, 474, 477, 478, 488], "writer": [2, 63, 68, 69, 70, 79, 80, 102, 105, 110, 112, 113, 117, 123, 124, 125, 128, 473, 489], "tensordictroundrobinwrit": [2, 80, 112], "goe": [2, 4, 85, 161, 162, 471, 473, 485, 486, 492], "prioritizedsampl": [2, 63, 68, 69, 70, 79, 80, 110, 112, 374, 379, 407, 471, 489], "access": [2, 3, 7, 8, 11, 29, 30, 36, 43, 48, 56, 63, 66, 67, 73, 78, 99, 104, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 219, 247, 268, 272, 279, 336, 338, 342, 402, 404, 405, 461, 464, 471, 476, 485, 486, 487, 489, 491], "tensordictreplaybuff": [2, 63, 68, 69, 70, 79, 109, 110, 112, 117, 118, 123, 218, 219, 444, 457, 463, 471, 472, 474, 489], "mp": [2, 22, 23, 25, 136, 276, 277], "def": [2, 3, 28, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 99, 112, 129, 132, 135, 136, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 277, 279, 280, 283, 296, 300, 301, 305, 306, 310, 315, 336, 338, 342, 354, 355, 363, 370, 372, 373, 378, 385, 387, 390, 392, 394, 395, 402, 404, 405, 427, 437, 465, 467, 468, 471, 472, 475, 483, 484, 485, 486, 487, 489, 491, 492], "td": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 43, 45, 51, 62, 63, 64, 66, 68, 69, 70, 71, 76, 78, 79, 80, 85, 96, 97, 98, 99, 103, 109, 110, 112, 123, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 148, 149, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 172, 180, 181, 182, 185, 186, 188, 189, 190, 194, 199, 210, 213, 216, 218, 220, 224, 225, 227, 228, 229, 230, 238, 239, 240, 241, 243, 252, 255, 259, 262, 265, 269, 276, 283, 285, 295, 296, 299, 309, 310, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 355, 356, 358, 361, 363, 402, 403, 405, 406, 407, 410, 411, 412, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 438, 446, 466, 467, 471, 472, 474, 486, 487, 488, 491], "__name__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 136, 277, 427, 472, 491], "__main__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 136, 277, 427, 491], "21": [2, 51, 85, 117, 118, 159, 161, 162, 168, 224], "proc": 2, "target": [2, 4, 8, 27, 33, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 261, 279, 323, 336, 338, 342, 358, 359, 369, 370, 371, 372, 373, 374, 376, 378, 379, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 450, 456, 457, 467, 468, 474, 475, 481, 485, 487], "arg": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 51, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 104, 105, 106, 110, 112, 117, 118, 119, 121, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 237, 238, 239, 241, 246, 247, 248, 249, 250, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 281, 283, 285, 286, 287, 294, 295, 299, 302, 307, 308, 309, 310, 324, 335, 336, 337, 338, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 436, 440, 444, 447, 461, 472, 475, 483], "join": [2, 136, 194, 463, 472, 473, 475, 485], "now": [2, 3, 7, 63, 70, 79, 80, 112, 157, 158, 159, 219, 256, 314, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 492], "20": [2, 51, 78, 84, 85, 117, 118, 123, 129, 132, 135, 139, 143, 147, 157, 158, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 261, 279, 298, 300, 301, 305, 306, 323, 350, 438, 470, 474, 489, 490, 492], "_data": [2, 487], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 72, 73, 74, 75, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 99, 104, 112, 115, 123, 128, 129, 132, 135, 139, 141, 147, 153, 154, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 213, 216, 218, 219, 231, 237, 239, 243, 248, 261, 267, 269, 275, 277, 279, 281, 289, 291, 297, 299, 313, 314, 323, 324, 325, 327, 328, 334, 335, 336, 338, 342, 352, 354, 357, 359, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 393, 395, 402, 404, 405, 407, 408, 409, 427, 436, 442, 464, 466, 467, 471, 472, 474, 475, 476, 485, 486, 487, 488, 489, 491, 492], "difficult": [2, 4, 159, 480], "pai": [2, 8, 219, 471], "word": [2, 3, 11, 72, 387, 402, 405, 471, 479, 487, 492], "1m": [2, 450, 471, 473, 474], "doe": [2, 3, 19, 22, 36, 43, 48, 56, 62, 63, 64, 66, 67, 71, 73, 78, 79, 84, 85, 96, 97, 98, 99, 100, 101, 108, 110, 117, 119, 121, 128, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 277, 279, 284, 293, 294, 300, 301, 302, 305, 306, 307, 316, 323, 335, 336, 338, 342, 350, 360, 361, 369, 371, 379, 386, 387, 389, 402, 403, 404, 405, 406, 408, 447, 467, 468, 471, 472, 473, 474, 476, 479, 485, 487, 489, 492], "howev": [2, 3, 5, 7, 36, 43, 48, 56, 66, 67, 73, 78, 99, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 237, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 279, 336, 338, 342, 369, 371, 372, 386, 389, 391, 392, 402, 404, 405, 466, 471, 472, 474, 475, 478, 487, 489, 492], "capac": [2, 63, 70, 79, 80, 103, 105, 109, 110, 117, 125, 473, 479], "There": [2, 3, 10, 112, 182, 268, 284, 302, 307, 369, 389, 466, 467, 468, 473, 474, 475, 477, 479, 485, 486, 487, 489, 491, 492], "circumv": 2, "account": [2, 103, 105, 125, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 215, 225, 311, 312, 466, 472, 474, 489, 492], "save": [2, 3, 8, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 85, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 112, 119, 120, 121, 125, 126, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 275, 279, 336, 338, 342, 402, 403, 404, 405, 406, 428, 429, 431, 436, 447, 468, 475, 479, 480, 481, 485, 486], "convent": [2, 3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 467, 471, 474, 485, 486, 487], "overridden": [2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 66, 67, 73, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 409, 411, 412, 474, 485], "dim_extend": [2, 63, 70, 79, 80], "obtain": [2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 199, 218, 247, 261, 274, 283, 285, 323, 325, 444, 471, 473, 476, 477, 478, 485, 486], "counterpart": [2, 3, 219], "desir": [2, 3, 11, 15, 16, 18, 21, 29, 36, 39, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 214, 216, 223, 225, 243, 245, 247, 248, 262, 268, 269, 272, 274, 279, 286, 287, 294, 308, 314, 336, 338, 342, 346, 351, 352, 355, 356, 357, 358, 359, 402, 404, 405, 466, 471, 475, 483, 485, 486, 487, 489], "diversifi": 2, "offer": [2, 3, 7, 129, 130, 131, 132, 135, 139, 145, 146, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 267, 427, 465, 466, 471, 472, 475, 476, 478, 479, 485, 487, 489, 492], "accomplish": [2, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 476, 483], "__especially__": 2, "offlin": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 370, 376, 377, 385, 394, 404, 436, 468, 476, 488, 489], "docstr": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 476, 477], "detail": [2, 3, 5, 6, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 112, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 265, 269, 279, 284, 296, 300, 305, 315, 323, 336, 338, 342, 352, 369, 379, 387, 389, 402, 404, 405, 464, 468, 472, 475, 479, 484, 489], "happi": [2, 475], "concaten": [2, 8, 15, 16, 27, 51, 52, 54, 85, 180, 188, 219, 220, 243, 259, 305, 308, 361, 471, 472, 477, 485, 486, 487, 489, 492], "schedul": [2, 4, 7, 72, 442, 473, 487], "transformedenv": [2, 3, 11, 12, 56, 99, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 216, 219, 222, 223, 225, 227, 230, 231, 232, 238, 239, 240, 242, 243, 245, 249, 250, 251, 252, 255, 256, 257, 260, 261, 262, 263, 267, 268, 276, 279, 302, 307, 354, 404, 429, 437, 471, 472, 473, 474, 475, 476, 480, 481, 484, 485, 486, 487, 488, 489, 491, 492], "stepcount": [2, 51, 56, 99, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 225, 267, 268, 269, 279, 285, 404, 471, 472, 473, 474, 475, 476, 481, 485, 486, 491], "gymenv": [2, 3, 5, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 51, 56, 68, 76, 78, 99, 123, 129, 132, 135, 136, 139, 141, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 215, 216, 219, 222, 223, 224, 225, 231, 237, 238, 239, 243, 245, 250, 251, 252, 255, 257, 261, 262, 263, 264, 267, 268, 269, 270, 276, 277, 279, 285, 302, 307, 354, 404, 427, 429, 457, 463, 466, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 491, 492], "randompolici": [2, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 56, 219, 252, 463, 479, 489], "cartpol": [2, 3, 11, 45, 56, 76, 78, 129, 132, 133, 134, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 215, 216, 219, 224, 255, 261, 276, 279, 354, 427, 472, 474, 477, 479, 480, 481, 489, 492], "v1": [2, 3, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 56, 68, 76, 78, 99, 123, 129, 132, 135, 136, 138, 139, 140, 145, 146, 147, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 216, 219, 222, 224, 225, 232, 238, 239, 243, 250, 252, 255, 256, 257, 260, 261, 262, 263, 264, 267, 268, 270, 276, 277, 279, 285, 302, 307, 354, 398, 404, 418, 419, 420, 421, 423, 424, 425, 426, 427, 466, 472, 474, 476, 477, 478, 479, 480, 481, 487, 489, 491, 492], "action_spec": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 99, 129, 130, 131, 132, 135, 139, 145, 146, 147, 153, 159, 160, 161, 162, 163, 164, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 216, 219, 223, 227, 228, 230, 239, 243, 249, 252, 268, 269, 270, 271, 279, 283, 296, 310, 326, 328, 346, 351, 355, 356, 370, 372, 374, 376, 390, 392, 394, 395, 404, 457, 466, 471, 472, 473, 474, 475, 477, 478, 479, 481, 484, 485, 486, 487, 488, 489, 491, 492], "8": [2, 3, 6, 7, 40, 41, 49, 56, 70, 75, 78, 109, 110, 117, 118, 129, 130, 131, 132, 133, 134, 135, 139, 147, 157, 158, 159, 160, 163, 168, 169, 170, 171, 180, 181, 182, 185, 188, 189, 190, 212, 215, 224, 225, 261, 264, 270, 277, 286, 287, 289, 290, 298, 308, 347, 348, 349, 355, 358, 361, 385, 471, 472, 487, 489, 491], "traj_kei": [2, 110, 117, 118, 489], "truncated_kei": [2, 110, 117, 118, 252, 260], "strict_length": [2, 110, 117, 118, 429], "enumer": [2, 15, 16, 18, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 76, 78, 80, 83, 86, 87, 88, 89, 90, 99, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 396, 402, 404, 405, 467, 471, 472, 473, 474, 481, 485, 489, 491], "break": [2, 5, 15, 16, 18, 21, 27, 29, 36, 43, 48, 56, 66, 67, 68, 70, 73, 78, 80, 95, 99, 110, 117, 118, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 219, 252, 276, 277, 279, 302, 307, 332, 336, 338, 342, 402, 404, 405, 429, 472, 475, 479, 481, 489, 491], "step_count": [2, 15, 16, 18, 56, 129, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 225, 260, 279, 473, 474, 475, 476, 481], "32": [2, 28, 40, 63, 68, 69, 70, 79, 80, 112, 118, 139, 146, 166, 167, 173, 174, 190, 219, 237, 286, 287, 288, 289, 290, 292, 293, 298, 308, 313, 314, 318, 319, 322, 325, 334, 407, 427, 472, 474, 475, 477, 478, 487, 488, 489, 491, 492], "33": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 286, 287, 308, 336, 338, 342, 402, 404, 405], "34": [2, 286, 287, 308], "35": [2, 199, 286, 287, 308], "36": [2, 182], "37": [2, 218], "38": [2, 7, 51], "39": [2, 145, 146], "40": [2, 78, 145, 146], "41": [2, 117], "11": [2, 10, 32, 51, 60, 78, 84, 85, 103, 104, 105, 109, 118, 125, 136, 212, 224, 265, 279, 283, 310], "12": [2, 7, 10, 51, 78, 103, 105, 118, 125, 145, 146, 159, 166, 167, 168, 182, 224, 277, 279, 429, 489], "13": [2, 5, 78, 117, 118, 165, 224, 275, 277, 279, 280], "14": [2, 6, 78, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 224, 243, 279, 280], "15": [2, 32, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 224, 279, 324, 350, 380, 489], "16": [2, 3, 15, 16, 21, 29, 36, 43, 48, 56, 66, 67, 73, 78, 99, 110, 118, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 279, 336, 338, 342, 402, 404, 405, 474, 489], "17": [2, 11, 117, 118, 139, 159, 190, 212, 224, 279], "could": [2, 3, 4, 6, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 359, 402, 404, 405, 472, 473, 480, 485, 486, 488, 492], "sai": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 313, 336, 338, 342, 402, 404, 405, 485, 488, 492], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 54, 60, 70, 79, 80, 105, 106, 110, 113, 117, 118, 125, 129, 132, 135, 138, 139, 140, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 227, 230, 248, 255, 267, 313, 314, 356, 369, 372, 389, 472, 473, 474, 475, 485, 486, 487], "suggest": [2, 407, 471, 486], "serialenv": [2, 3, 129, 132, 135, 139, 147, 159, 160, 163, 169, 170, 180, 181, 182, 185, 188, 189, 190, 262, 277, 279, 285, 354, 463, 491, 492], "squeez": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 99, 215, 216, 219, 224, 258, 261, 286, 287, 329, 330, 471, 475, 487, 489], "6": [2, 3, 7, 15, 16, 18, 21, 29, 30, 32, 51, 56, 70, 73, 78, 85, 109, 110, 118, 133, 134, 139, 159, 166, 167, 182, 190, 212, 215, 224, 225, 243, 245, 261, 267, 277, 285, 286, 287, 289, 290, 291, 294, 298, 301, 308, 313, 314, 315, 318, 331, 354, 355, 363, 472, 475, 491], "5": [2, 3, 15, 16, 18, 21, 29, 32, 39, 40, 41, 49, 51, 52, 53, 54, 55, 56, 60, 63, 68, 70, 73, 75, 78, 79, 80, 99, 112, 117, 118, 123, 129, 132, 135, 136, 139, 145, 146, 147, 151, 152, 154, 159, 160, 163, 166, 167, 168, 169, 170, 173, 174, 180, 182, 185, 187, 188, 189, 190, 196, 198, 212, 215, 216, 218, 224, 225, 240, 252, 259, 260, 261, 267, 277, 279, 282, 283, 284, 285, 286, 287, 289, 290, 295, 296, 297, 298, 300, 303, 304, 305, 308, 310, 313, 314, 318, 323, 326, 332, 333, 339, 350, 351, 354, 356, 362, 386, 389, 391, 394, 395, 427, 465, 466, 470, 471, 472, 475, 477, 481, 485, 486, 487, 489, 490, 491, 492], "7": [2, 3, 6, 10, 43, 51, 56, 60, 63, 70, 78, 79, 109, 110, 118, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 212, 215, 224, 225, 261, 264, 277, 283, 285, 286, 287, 290, 308, 310, 313, 415, 471, 489, 491], "9": [2, 3, 7, 32, 36, 51, 56, 63, 70, 78, 79, 85, 110, 118, 123, 133, 134, 150, 161, 162, 170, 212, 215, 224, 225, 261, 264, 269, 276, 277, 279, 311, 312, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 396, 402, 405, 407, 437, 467, 471, 472, 485, 486], "18": [2, 51, 117, 118, 166, 167, 173, 174, 267, 279, 314], "19": [2, 117, 118, 123, 224, 279], "independ": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 159, 168, 234, 241, 262, 271, 284, 314, 345, 369, 389, 467, 468, 471, 472, 486, 489, 491], "congruent": 2, "name": [2, 3, 6, 7, 18, 31, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 96, 97, 98, 99, 129, 130, 132, 133, 135, 139, 145, 147, 150, 151, 152, 154, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 173, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 211, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 231, 232, 233, 235, 237, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 279, 280, 302, 307, 336, 338, 339, 342, 351, 356, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 427, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 468, 471, 472, 473, 474, 475, 478, 479, 480, 483, 485, 486, 487, 488, 492], "randomcroptensordict": [2, 471], "unlik": [2, 34, 70, 79, 80, 116, 139, 151, 152, 173, 174, 190, 282, 284, 338, 354, 379, 389, 429, 466, 472, 475, 477, 479, 491], "stop": [2, 3, 15, 16, 18, 21, 27, 29, 72, 110, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 473, 479, 485, 486, 491, 492], "signal": [2, 3, 15, 16, 18, 21, 32, 51, 110, 117, 118, 123, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 211, 219, 225, 231, 240, 260, 263, 467, 471, 473, 485, 486, 489, 492], "disk": [2, 3, 51, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 103, 112, 186, 403, 406, 447, 468, 471, 472, 474, 475, 479, 480, 485, 489], "dump": [2, 3, 11, 45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 85, 96, 97, 98, 101, 103, 104, 105, 106, 112, 119, 121, 125, 186, 403, 406, 427, 428, 429, 480, 481, 485], "json": [2, 196, 483], "metadata": [2, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 372, 394, 473, 476, 478, 479, 485, 486, 492], "anticip": [2, 227, 230], "compli": [2, 284, 466], "back": [2, 14, 17, 20, 24, 26, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 201, 266, 275, 315, 346, 351, 352, 355, 356, 357, 358, 359, 473, 475, 485, 486, 487, 489], "exact": [2, 3, 32, 159, 305], "statu": [2, 3, 24, 135], "prioriti": [2, 4, 63, 68, 69, 70, 79, 80, 103, 104, 105, 106, 109, 110, 112, 119, 121, 125, 372, 373, 374, 376, 377, 378, 379, 385, 390, 392, 394, 395, 407, 468, 471, 472, 489], "heap": 2, "under": [2, 3, 4, 27, 36, 43, 48, 51, 56, 66, 67, 72, 73, 78, 99, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 240, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 284, 336, 338, 342, 346, 351, 352, 355, 356, 357, 358, 359, 387, 402, 404, 405, 409, 410, 411, 412, 413, 429, 467, 471, 472, 477, 485, 487, 492], "hood": [2, 3, 27, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 284, 487], "naiv": [2, 272, 476], "just": [2, 3, 4, 85, 121, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 185, 188, 189, 190, 211, 215, 222, 262, 280, 314, 438, 465, 468, 471, 472, 473, 474, 475, 476, 477, 479, 483, 485, 486, 487, 489, 491, 492], "public": [2, 69, 120, 247, 274], "serializ": [2, 30], "consum": [2, 116, 118, 354, 472, 473, 479, 486, 489], "much": [2, 3, 8, 15, 16, 21, 63, 79, 109, 110, 159, 168, 386, 389, 473, 475, 476, 480, 485, 486, 487, 489, 492], "duplic": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 116, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 370, 372, 374, 379, 385, 387, 390, 392, 394, 395, 402, 404, 405, 407], "observ": [2, 3, 8, 15, 16, 18, 21, 27, 29, 30, 33, 45, 51, 56, 68, 76, 78, 85, 99, 100, 101, 108, 110, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 205, 210, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 236, 237, 238, 239, 241, 243, 244, 245, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 279, 285, 288, 289, 290, 291, 292, 293, 296, 299, 302, 307, 313, 318, 319, 322, 323, 324, 326, 327, 346, 347, 348, 349, 350, 351, 354, 355, 356, 363, 364, 369, 370, 371, 372, 373, 374, 376, 377, 378, 381, 385, 386, 389, 390, 391, 392, 394, 395, 404, 407, 409, 410, 411, 412, 413, 427, 429, 457, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 480, 481, 484, 485, 486, 487, 489, 491, 492], "plu": [2, 15, 16, 21, 72, 159, 168, 180, 487], "three": [2, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 66, 95, 187, 372, 466, 468, 473, 475, 476, 477, 485, 486, 487, 489, 492], "flatstoragecheckpoint": 2, "discard": [2, 3, 84, 139, 210, 272, 428, 489, 492], "compress": 2, "At": [2, 264, 299, 309, 472, 473, 474, 479, 484, 487, 488], "correct": [2, 4, 62, 64, 71, 85, 96, 97, 98, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 192, 195, 219, 239, 304, 402, 403, 406, 450, 473, 474, 483], "addit": [2, 3, 4, 14, 17, 24, 26, 36, 43, 48, 56, 58, 66, 67, 73, 78, 85, 97, 99, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 173, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 223, 247, 262, 266, 268, 269, 272, 274, 279, 281, 300, 336, 338, 339, 342, 350, 354, 358, 368, 371, 387, 389, 402, 404, 405, 409, 427, 429, 467, 471, 472, 475, 476, 485, 486, 489], "nestedstoragecheckpoint": 2, "represent": [2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 104, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247, 272, 274, 279, 336, 338, 342, 369, 389, 402, 404, 405, 471, 487, 488, 492], "appar": [2, 3, 440], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 97, 100, 101, 108, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 207, 212, 222, 229, 237, 240, 262, 270, 281, 287, 293, 296, 313, 319, 324, 326, 346, 351, 352, 355, 356, 357, 358, 359, 361, 362, 363, 366, 369, 374, 376, 377, 378, 389, 394, 395, 407, 466, 467, 472, 473, 474, 475, 476, 477, 478, 485, 486, 487, 492], "assumpt": [2, 3, 83, 487, 489], "accur": [2, 7, 472, 487, 489], "truncat": [2, 3, 15, 16, 18, 21, 45, 47, 51, 56, 57, 65, 76, 78, 81, 84, 97, 100, 101, 108, 110, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 171, 173, 174, 180, 181, 182, 185, 188, 189, 190, 194, 211, 212, 231, 232, 237, 242, 249, 252, 256, 260, 262, 269, 270, 279, 302, 307, 333, 338, 342, 354, 409, 415, 471, 473, 476, 485, 492], "marl": [2, 150, 176, 219, 259, 263, 313, 314, 315, 378, 392, 467, 476, 485, 486], "extra": [2, 10, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 219, 276, 277, 279, 336, 338, 342, 402, 404, 405, 436, 466, 473, 474, 489], "fail": [2, 7, 28, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 213], "concret": [2, 471, 473, 483], "set_se": [2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 51, 56, 76, 78, 129, 130, 131, 132, 135, 139, 145, 146, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 215, 224, 225, 243, 250, 255, 261, 263, 269, 279, 465, 475, 479, 481, 487, 491, 492], "manual_se": [2, 3, 34, 45, 52, 53, 63, 70, 76, 78, 79, 80, 104, 117, 118, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 213, 215, 224, 225, 229, 243, 252, 255, 261, 263, 277, 279, 299, 311, 312, 320, 323, 324, 346, 352, 359, 362, 369, 370, 372, 373, 377, 385, 392, 475, 479, 481, 485, 486, 487, 491, 492], "200": [2, 15, 16, 18, 27, 36, 43, 45, 48, 56, 66, 67, 68, 73, 76, 78, 99, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 252, 279, 289, 290, 297, 327, 328, 336, 338, 342, 402, 404, 405, 427, 429, 471, 474, 475, 479, 481, 489], "22": [2, 29, 117, 118, 275], "rb_test": 2, "_storag": [2, 488, 489], "max_siz": [2, 51, 63, 70, 78, 79, 80, 103, 104, 105, 106, 117, 118, 119, 123, 125, 473, 479], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 39, 62, 64, 71, 85, 96, 97, 98, 154, 186, 224, 267, 293, 311, 312, 313, 368, 372, 403, 406, 427, 471, 473, 475, 485, 486], "state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 276, 277, 279, 313, 314, 336, 338, 342, 372, 392, 402, 403, 404, 405, 406, 461, 465, 468, 471, 472, 492], "load_state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 276, 277, 279, 336, 338, 342, 372, 392, 402, 403, 404, 405, 406, 468, 471], "drawback": 2, "struggl": 2, "big": [2, 473, 479, 489, 492], "sequenti": [2, 9, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 239, 279, 336, 338, 342, 345, 347, 348, 349, 355, 360, 361, 366, 369, 370, 372, 378, 385, 389, 390, 391, 392, 394, 402, 404, 405, 466, 473, 474, 477, 486, 487, 488, 491, 492], "known": [2, 3, 5, 7, 8, 78, 139, 190, 262, 416, 417, 471, 472, 476], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 282, 471, 472, 478], "essenti": [2, 3, 13, 22, 23, 25, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 472, 476, 485, 487, 489], "purpos": [2, 3, 7, 11, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 300, 369, 371, 383, 386, 389, 391, 402, 457, 471, 473, 474, 475, 478, 480, 485, 486, 488, 492], "guid": [2, 11, 161, 162, 166, 167, 261, 464, 471, 486, 491], "explan": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 284, 336, 338, 342, 402, 404, 405], "effect": [2, 3, 18, 29, 30, 36, 40, 43, 48, 56, 63, 66, 67, 68, 70, 73, 78, 79, 80, 99, 109, 110, 112, 115, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 219, 225, 269, 279, 284, 336, 338, 342, 371, 389, 402, 404, 405, 447, 466, 471, 477, 485, 489, 492], "realm": [2, 477], "As": [2, 3, 4, 56, 70, 79, 80, 83, 112, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 252, 294, 359, 409, 466, 471, 472, 473, 474, 475, 476, 478, 479, 485, 486, 487, 488, 489, 491, 492], "practition": 2, "often": [2, 3, 8, 315, 371, 384, 387, 389, 402, 405, 447, 471, 472, 476, 478, 487, 489, 492], "encount": [2, 4, 241, 354, 464, 472, 477, 487], "situat": [2, 151, 152, 188, 194], "sometim": [2, 3, 83, 474, 492], "variabl": [2, 3, 4, 7, 8, 20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 73, 74, 75, 83, 86, 87, 88, 89, 90, 97, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 185, 188, 189, 190, 194, 199, 264, 268, 277, 300, 301, 302, 305, 306, 307, 310, 347, 348, 349, 387, 390, 437, 468, 472], "immedi": [2, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 408, 485, 486], "199": 2, "info": [2, 3, 15, 16, 63, 68, 69, 70, 79, 80, 85, 109, 110, 112, 115, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 152, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 185, 188, 189, 190, 237, 270, 272, 275, 278, 436, 476, 481, 483, 485, 486, 489, 491], "glanc": [2, 476], "seem": [2, 471, 474, 476], "togeth": [2, 3, 11, 15, 16, 18, 21, 22, 23, 25, 27, 51, 66, 72, 74, 75, 104, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 248, 259, 268, 300, 302, 305, 307, 334, 347, 348, 349, 364, 466, 472, 474, 476, 485], "less": [2, 24, 109, 110, 154, 335, 459, 460, 467, 473, 474, 489, 491], "omit": [2, 147, 189, 281, 299, 324, 443, 473, 478, 487, 489], "proper": [2, 3, 4, 6, 7, 338, 342, 409, 410, 411, 412, 472, 473, 483, 485, 486, 487, 489], "imposs": [2, 3, 70, 79, 80, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 369, 371, 386, 389, 391], "determin": [2, 3, 17, 51, 63, 79, 85, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 185, 188, 189, 190, 247, 274, 313, 324, 338, 342, 372, 472, 477, 485, 486], "complic": [2, 43, 66, 78, 336, 338, 342, 402, 405, 487, 489, 492], "matter": [2, 42, 479], "inconsist": [2, 492], "miss": [2, 3, 4, 6, 7, 36, 40, 43, 48, 51, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 237, 267, 269, 275, 279, 280, 336, 338, 342, 360, 361, 369, 372, 392, 402, 404, 405, 464, 471, 474], "primari": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 147, 189, 479], "elimin": [2, 3, 476], "upon": [2, 3, 8, 20, 485, 487], "canon": 2, "definit": [2, 60, 119, 313, 483], "markov": [2, 3, 476, 492], "mdp": [2, 210, 476, 487], "context": [2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 99, 112, 118, 129, 132, 135, 136, 139, 147, 156, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 262, 271, 279, 284, 302, 307, 314, 316, 336, 338, 342, 345, 350, 400, 401, 402, 404, 405, 409, 410, 411, 412, 414, 422, 429, 437, 442, 465, 466, 467, 471, 472, 473, 474, 475, 485, 486, 487, 488, 489, 491], "condit": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 188, 224, 225, 261, 276, 351, 352, 354, 356, 357, 368, 467, 471, 485, 487, 489], "complet": [2, 7, 9, 24, 29, 30, 110, 116, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 193, 219, 260, 404, 464, 467, 471, 473, 476, 483, 484], "termin": [2, 3, 7, 15, 16, 18, 21, 29, 45, 47, 51, 56, 57, 68, 72, 76, 78, 100, 101, 108, 117, 129, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 151, 152, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 185, 188, 189, 190, 194, 211, 212, 215, 216, 231, 237, 249, 262, 270, 279, 283, 302, 307, 310, 354, 360, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 471, 472, 473, 483, 485, 486, 487, 491, 492], "reward": [2, 3, 15, 16, 18, 42, 43, 45, 47, 51, 56, 57, 62, 71, 72, 76, 78, 84, 85, 95, 99, 109, 110, 123, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 213, 216, 217, 222, 223, 227, 228, 230, 231, 232, 237, 239, 240, 241, 245, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 266, 268, 269, 270, 271, 273, 274, 276, 277, 279, 283, 302, 310, 350, 354, 364, 369, 370, 372, 373, 374, 376, 377, 378, 381, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440, 441, 442, 445, 461, 465, 467, 468, 471, 472, 473, 474, 475, 476, 480, 483, 485, 486, 487, 491, 492], "imit": [2, 3, 383], "inform": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 109, 110, 129, 132, 135, 136, 139, 142, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 285, 286, 287, 308, 314, 336, 338, 342, 402, 403, 404, 405, 406, 466, 467, 468, 471, 472, 473, 474, 475, 476, 483, 485, 486, 487, 489, 491], "stateless": [2, 3, 30, 51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 216, 225, 277, 340, 341, 387, 402, 405, 427, 471, 476, 487, 492], "simul": [2, 3, 5, 7, 8, 83, 130, 131, 132, 141, 145, 146, 165, 173, 174, 206, 283, 310, 465, 466, 471, 473, 475, 476, 480, 485, 486], "furthermor": [2, 485, 486], "certain": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 224, 225, 235, 260, 269, 279, 299, 301, 306, 336, 338, 342, 386, 402, 404, 405, 471, 472, 473, 475, 481, 485, 486, 492], "composit": [2, 3, 34, 35, 37, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 92, 97, 99, 115, 121, 128, 129, 132, 135, 137, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 211, 213, 216, 227, 228, 229, 230, 232, 237, 239, 241, 249, 250, 256, 260, 262, 266, 267, 268, 270, 277, 279, 281, 283, 310, 346, 355, 359, 361, 362, 366, 369, 389, 404, 463, 471, 473, 477, 483, 487], "uniform": [2, 63, 79, 109, 110, 338, 342, 485], "unambigu": 2, "distinguish": [2, 3, 70, 79, 80, 151, 152, 173, 174], "happen": [2, 3, 24, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 280, 324, 472, 475, 478, 479, 480, 488, 492], "everyth": [2, 472, 473, 474, 480, 481], "belong": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 275, 276, 359, 471, 479, 486], "rule": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 227, 230, 279, 336, 338, 342, 359, 402, 404, 405, 466, 473], "field": [2, 3, 15, 16, 18, 21, 29, 30, 32, 36, 40, 43, 45, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 85, 96, 97, 98, 99, 103, 104, 105, 109, 117, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 216, 227, 230, 231, 232, 237, 245, 249, 250, 252, 256, 259, 260, 262, 267, 269, 270, 279, 283, 285, 295, 296, 302, 307, 310, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 363, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 451, 464, 466, 472, 487], "taken": [2, 3, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 212, 251, 311, 312, 467, 471, 473, 474, 477, 485, 486, 487], "is_shar": [2, 3, 15, 16, 18, 29, 32, 40, 43, 45, 51, 62, 64, 65, 66, 71, 72, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 103, 104, 105, 109, 117, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 185, 186, 188, 189, 190, 194, 210, 212, 216, 227, 230, 231, 232, 237, 245, 249, 250, 252, 256, 259, 260, 262, 270, 276, 283, 285, 295, 296, 302, 307, 310, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 363, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 405, 406, 407, 466, 487], "envbas": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 51, 85, 129, 132, 136, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 210, 213, 216, 227, 230, 242, 249, 250, 269, 276, 283, 302, 307, 309, 310, 354, 442, 451, 452, 453, 457, 459, 460, 461, 463, 465, 476], "brought": [2, 473, 474, 477], "step_mdp": [2, 3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 302, 307, 463, 474, 476, 487, 491, 492], "count": [2, 3, 15, 16, 18, 21, 29, 51, 56, 85, 135, 136, 224, 260, 267, 277, 324, 442, 447, 450, 471, 472, 473, 474, 489, 492], "trigger": [2, 7, 43, 66, 78, 188, 277, 336, 338, 342, 402, 405], "turn": [2, 22, 23, 25, 27, 30, 40, 41, 49, 62, 64, 67, 71, 73, 75, 85, 96, 97, 98, 99, 132, 146, 159, 170, 186, 224, 236, 268, 271, 275, 351, 403, 406, 409, 427, 442, 467, 471, 472, 474, 477, 487, 488], "retain": [2, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "regard": [2, 296, 352, 369, 379, 389, 471, 473, 487], "expand": [2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 103, 117, 118, 186, 216, 262, 294, 358, 361, 370, 372, 385, 387, 390, 392, 394, 395, 402, 403, 405, 406, 485, 486, 487, 489, 491], "recur": [2, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 409, 410, 411, 412, 413, 477], "anyth": [2, 4, 15, 16, 18, 21, 22, 23, 25, 27, 467], "els": [2, 130, 131, 194, 216, 300, 301, 305, 306, 318, 466, 468, 471, 472, 473, 474, 483, 485, 486, 487, 488], "repetit": [2, 473, 476, 479], "embed": [2, 247, 272, 273, 274, 289, 325, 346, 347, 348, 349, 358, 359, 363, 488], "strictli": [2, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 240, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405, 471, 473], "enforc": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 99, 116, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 339, 342, 360, 371, 372, 389, 392, 402, 404, 405, 487], "n_action": [2, 354, 370, 372, 374, 376, 388, 392], "rightmost": [2, 467], "n_ob": [2, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 239, 354, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 478], "estim": [2, 4, 110, 117, 118, 181, 182, 185, 188, 194, 195, 231, 239, 289, 332, 347, 348, 349, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 402, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 467, 472, 473, 477, 478, 485, 486], "subsequ": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 279, 336, 338, 342, 402, 404, 405, 474, 485], "proce": [2, 485], "state_valu": [2, 348, 349, 363, 371, 377, 385, 386, 389, 390, 392, 409, 410, 411, 412, 414, 416, 418, 420, 422, 423, 425, 466, 471, 486], "f": [2, 15, 16, 18, 21, 29, 99, 130, 131, 139, 145, 146, 180, 190, 198, 199, 264, 280, 306, 368, 405, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 471, 472, 473, 474, 481, 485, 486, 487, 489, 492], "next_state_valu": [2, 394, 395, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 463], "broadcast": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 294, 378, 392], "left": [2, 58, 99, 110, 117, 183, 184, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 224, 226, 227, 228, 232, 239, 241, 247, 249, 250, 256, 260, 263, 266, 268, 270, 272, 274, 277, 279, 299, 311, 313, 404, 472, 473, 475, 479, 480], "would": [2, 3, 36, 43, 48, 56, 66, 67, 72, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 300, 302, 305, 307, 308, 313, 336, 338, 342, 359, 402, 404, 405, 467, 468, 472, 473, 474, 476, 478, 479, 487, 489, 491, 492], "best": [2, 5, 9, 143, 302, 307, 389, 485, 486, 489, 491], "bug": [2, 4], "worst": [2, 472], "twice": [2, 8, 118], "feasibl": 2, "mostli": [2, 3, 21, 323, 429, 467, 480, 489, 492], "eas": [2, 3, 485, 486], "flat": [2, 123, 409], "manner": [2, 139, 190, 196, 247, 272, 466, 471, 472, 473, 479, 484, 487, 489], "ted2flat": [2, 45, 463], "flat2t": [2, 463], "unflatten": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 216, 354], "deseri": [2, 3, 45], "posit": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 99, 110, 112, 129, 132, 133, 134, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 234, 235, 237, 258, 259, 260, 263, 267, 269, 271, 279, 304, 336, 338, 342, 372, 392, 402, 404, 405, 467, 473, 485, 486, 487, 489], "both": [2, 3, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 99, 129, 132, 135, 136, 138, 139, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 171, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 212, 219, 237, 250, 266, 267, 269, 279, 286, 287, 302, 306, 307, 308, 313, 314, 336, 338, 342, 347, 348, 349, 352, 357, 369, 371, 372, 373, 377, 378, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 409, 442, 466, 471, 473, 475, 476, 478, 483, 485, 486, 487, 488, 489, 492], "mark": [2, 3, 18, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 264, 302, 307, 409, 411, 412, 479, 489], "identifi": [2, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 65, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 483], "abov": [2, 3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 86, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 268, 279, 303, 332, 333, 336, 338, 342, 368, 402, 404, 405, 467, 468, 471, 473, 475, 476, 477, 485, 486, 487, 492], "output": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 85, 97, 99, 110, 117, 118, 129, 132, 133, 134, 135, 138, 139, 140, 141, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 216, 217, 219, 222, 223, 225, 226, 227, 228, 230, 232, 234, 237, 239, 241, 243, 247, 249, 250, 255, 256, 259, 260, 263, 264, 266, 268, 269, 270, 272, 274, 275, 277, 279, 281, 286, 287, 288, 289, 290, 293, 295, 296, 297, 300, 301, 302, 305, 306, 307, 308, 313, 314, 321, 323, 324, 326, 335, 336, 338, 342, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 413, 427, 429, 438, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 480, 483, 484, 485, 486, 487, 488, 491, 492], "typic": [2, 3, 4, 8, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 85, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 231, 261, 279, 321, 323, 336, 338, 342, 355, 370, 372, 387, 389, 392, 402, 404, 405, 465, 466, 467, 468, 473, 475, 476, 478, 479, 485, 486, 487], "adjust": [2, 11, 262, 471, 485, 486, 487], "grumodul": [2, 218, 262, 345, 366, 474], "lstmmodul": [2, 302, 345, 474, 475], "skip": [2, 3, 17, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 225, 235, 237, 241, 267, 269, 279, 336, 338, 342, 355, 359, 372, 387, 392, 402, 404, 405, 409, 410, 411, 412, 428, 429, 440, 442, 471, 472, 487], "accumul": [2, 8, 279], "upcom": [2, 387, 402, 405, 418, 419, 420, 421, 423, 424, 425, 426, 471], "popular": [2, 3, 465, 466, 474, 478, 486], "rainbow": 2, "multistep": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 279, 463, 472], "shift": [2, 45, 47, 56, 57, 76, 100, 101, 108, 365, 409, 410, 411, 412, 473], "approxim": [2, 486, 492], "intens": [2, 3, 8, 304], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 15, 21, 219, 293, 322, 369, 375, 388, 389, 438, 461, 465, 473, 474, 486, 489], "2x": 2, "small": [2, 109, 110, 118, 272, 277, 282, 471, 473, 475, 485, 486, 492], "clearer": [2, 475, 477], "lazi": [2, 3, 74, 75, 92, 93, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 247, 272, 286, 313, 316, 360, 361, 471, 472, 477, 479, 484, 489, 492], "certainli": 2, "welcom": [2, 476], "wrapper": [2, 3, 21, 62, 64, 71, 72, 79, 80, 85, 96, 97, 98, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 185, 186, 188, 189, 190, 194, 275, 280, 284, 285, 335, 337, 338, 342, 350, 354, 359, 364, 403, 406, 409, 434, 435, 436, 461, 463, 473, 474, 476, 483, 485, 486, 488, 491, 492], "around": [2, 5, 7, 21, 79, 80, 129, 132, 135, 139, 147, 153, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 284, 323, 337, 354, 359, 409, 465, 471, 472, 483, 486, 492], "selecttransform": [2, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "excludetransform": [2, 256, 489], "promptli": 2, "virtual": [2, 3, 138], "instal": [2, 3, 5, 10, 22, 23, 25, 67, 78, 129, 132, 135, 139, 144, 147, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 431, 447, 464, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 492], "respons": [2, 3, 8, 15, 16, 18, 20, 22, 25, 27, 29, 30, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 196, 198, 338, 342, 405, 447, 465, 478, 479, 483, 492], "d4rl": 2, "repositori": [2, 7, 173, 174, 485, 486], "wheel": [2, 473], "publish": 2, "openml": [2, 156], "scikit": [2, 156], "panda": 2, "raw": [2, 3, 4, 72, 201, 237, 266, 270, 303, 332, 333, 472, 475, 479, 487], "go": [2, 3, 7, 104, 150, 159, 180, 225, 248, 252, 350, 415, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "modifi": [2, 3, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 84, 97, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 219, 223, 225, 234, 237, 239, 247, 262, 268, 269, 272, 274, 277, 279, 315, 324, 336, 338, 342, 350, 358, 359, 402, 404, 405, 450, 465, 467, 471, 472, 473, 475, 476, 485, 486, 487], "fly": [2, 219, 276, 386, 467, 473, 487, 489, 492], "least": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 222, 480, 492], "pre": [2, 7, 28, 36, 43, 48, 56, 66, 67, 73, 78, 84, 99, 105, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247, 266, 272, 274, 279, 336, 338, 342, 402, 404, 405, 492], "conisder": 2, "per": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 30, 99, 109, 110, 117, 123, 143, 145, 146, 159, 161, 162, 199, 222, 241, 255, 286, 287, 297, 299, 313, 314, 354, 429, 431, 434, 436, 447, 459, 460, 471, 472, 473, 474, 475, 477, 478, 481, 485, 486, 489, 491], "pipelin": [2, 3, 7, 139, 190, 465, 466, 467, 473], "replac": [2, 3, 6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 99, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 215, 229, 231, 238, 276, 277, 279, 299, 336, 338, 342, 370, 372, 378, 385, 390, 392, 394, 395, 402, 404, 405, 409, 410, 411, 412, 466, 485, 489, 491], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 241, 252, 262, 269, 279, 281, 324, 336, 338, 342, 354, 402, 403, 404, 405, 406, 445, 466, 468, 472, 473, 474, 477, 480, 487, 489, 492], "produc": [2, 3, 40, 41, 49, 51, 75, 117, 180, 212, 215, 216, 286, 287, 308, 314, 320, 347, 349, 350, 359, 409, 429, 473, 474, 475, 476, 477, 479, 489, 492], "download": [2, 7, 10, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 143, 247, 274, 429, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "forc": [2, 3, 6, 7, 15, 16, 21, 22, 23, 25, 27, 160, 472, 485, 486, 487], "robosetexperiencereplai": [2, 117, 118], "fk1": 2, "v4": [2, 139, 159, 190, 212, 251, 418, 419, 420, 421, 423, 424, 425, 426, 471, 473, 488, 491], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 278], "obs_norm": 2, "norm": [2, 4, 8, 130, 131, 282, 447, 471, 472, 473, 485, 486, 487], "num_work": [2, 24, 26, 62, 64, 84, 95, 154, 159, 168, 471, 472], "os": [2, 64, 84, 95, 472], "cpu_count": [2, 64, 84, 95], "num_chunk": 2, "1000": [2, 4, 18, 29, 51, 70, 78, 103, 104, 109, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 276, 281, 299, 304, 323, 324, 355, 359, 384, 471, 472, 473, 474, 475, 477, 479, 481, 487, 488, 489], "mp_start_method": [2, 159, 168, 267, 472, 491], "fork": [2, 5, 471, 472, 473, 474, 485, 486, 488, 491], "recreat": [2, 487], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 33, 70, 79, 80, 110, 112, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 195, 216, 239, 405, 465, 475, 479, 488], "grain": [2, 3, 70, 79, 80, 110, 112, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 216], "nomenclatur": 2, "compact": [2, 51, 76, 100, 101, 108], "propos": [2, 219, 231, 284, 309, 384, 393, 466, 474, 489], "replaybufferensembl": [2, 115, 121, 128], "primit": [2, 3, 4, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 465], "individu": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 99, 110, 112, 123, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 277, 279, 336, 338, 342, 371, 386, 389, 402, 404, 405, 465, 471, 486], "dummi": [2, 3, 170, 194, 427, 471, 475, 479, 492], "semant": [2, 74, 75, 138, 140, 488], "ident": [2, 3, 15, 16, 18, 56, 62, 64, 70, 71, 78, 79, 80, 85, 96, 97, 98, 103, 112, 117, 129, 132, 135, 138, 139, 140, 147, 154, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 187, 188, 189, 190, 231, 259, 268, 277, 282, 313, 314, 370, 372, 385, 390, 392, 394, 395, 403, 406, 409, 410, 411, 412, 459, 460, 472, 476, 485, 486], "another_kei": [2, 112], "renam": [2, 3, 62, 64, 71, 85, 96, 97, 98, 112, 186, 210, 250, 252, 403, 406, 471], "resiz": [2, 3, 112, 219, 472, 474, 475, 476, 489, 492], "imag": [2, 3, 4, 7, 11, 96, 219, 221, 224, 226, 247, 265, 274, 308, 427, 429, 471, 472, 475, 476, 480, 486, 488, 492], "comops": 2, "totensorimag": [2, 3, 112, 219, 251, 472, 474, 475, 489, 491, 492], "renametransform": [2, 3, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219], "rb0": [2, 112], "in_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 99, 112, 129, 130, 131, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 285, 295, 302, 307, 310, 325, 334, 335, 336, 338, 342, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 359, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 383, 385, 386, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 428, 429, 457, 466, 471, 472, 473, 474, 475, 477, 478, 481, 484, 485, 486, 487, 488, 489, 491, 492], "pixel": [2, 3, 7, 40, 112, 132, 133, 134, 138, 140, 141, 165, 219, 221, 226, 231, 234, 236, 243, 245, 247, 251, 265, 272, 274, 289, 318, 319, 427, 429, 471, 472, 474, 475, 480, 485, 488, 489, 491, 492], "rb1": [2, 112], "out_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 99, 112, 129, 130, 131, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 285, 295, 296, 302, 307, 310, 325, 326, 334, 335, 336, 338, 342, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 366, 369, 370, 371, 372, 377, 378, 383, 385, 386, 389, 390, 391, 392, 394, 402, 404, 405, 407, 409, 410, 411, 412, 427, 429, 442, 457, 466, 471, 472, 473, 474, 475, 477, 481, 484, 485, 486, 487, 488, 489, 491, 492], "pixels33": [2, 112], "data0": [2, 104, 112], "244": [2, 112, 247, 274], "data1": [2, 104, 112, 491], "_": [2, 8, 63, 68, 69, 70, 79, 80, 104, 112, 132, 136, 143, 173, 174, 194, 220, 227, 229, 230, 239, 243, 250, 265, 276, 279, 323, 346, 358, 359, 363, 368, 369, 370, 372, 373, 377, 378, 385, 389, 390, 392, 394, 395, 409, 410, 411, 412, 431, 471, 472, 473, 474, 475, 481, 485, 486, 487, 489, 491], "parent": [2, 3, 27, 36, 43, 47, 48, 56, 58, 66, 67, 73, 78, 83, 85, 99, 112, 121, 128, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 219, 220, 223, 224, 225, 228, 231, 234, 235, 241, 243, 247, 255, 260, 261, 262, 263, 267, 268, 271, 272, 279, 302, 307, 336, 338, 342, 347, 366, 387, 389, 402, 404, 405, 413, 427, 429, 471, 479, 487, 491, 492], "basic": [2, 3, 19, 153, 466, 473, 478, 479, 481, 485, 491, 492], "properti": [2, 3, 14, 17, 19, 20, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 112, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 267, 268, 269, 276, 277, 279, 294, 303, 304, 311, 312, 316, 320, 331, 332, 333, 336, 338, 342, 354, 369, 372, 387, 389, 391, 392, 402, 403, 404, 405, 406, 477, 479, 487, 489], "input": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 104, 106, 120, 126, 129, 132, 135, 139, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 284, 285, 286, 287, 289, 290, 291, 292, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 316, 317, 324, 326, 327, 328, 329, 330, 332, 335, 336, 338, 342, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 441, 445, 450, 457, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 483, 485, 486, 487, 491, 492], "send": [2, 3, 8, 20, 31, 163, 169, 436, 463, 491], "receiv": [2, 3, 14, 17, 19, 20, 24, 26, 31, 36, 43, 48, 56, 66, 67, 72, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 268, 269, 277, 279, 308, 336, 338, 342, 402, 404, 405, 415, 463, 467, 471, 473, 478, 484, 487], "spawn": [2, 3, 4, 22, 28, 143, 154, 159, 168, 267, 472, 485, 486], "check_env_spec": [2, 3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 212, 237, 249, 270, 427, 463, 473, 485, 486, 487], "saniti": [2, 3, 7, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 473], "make_composite_from_td": [2, 83, 463, 487], "fall": [2, 4, 14, 17, 20, 24, 26, 31], "categori": [2, 40, 466, 468], "bound": [2, 3, 4, 27, 36, 38, 40, 43, 48, 56, 66, 67, 73, 78, 86, 99, 129, 132, 135, 139, 147, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 242, 276, 279, 281, 299, 324, 327, 328, 336, 338, 342, 346, 351, 352, 355, 356, 357, 358, 359, 362, 369, 370, 372, 373, 385, 389, 390, 392, 394, 395, 402, 404, 405, 463, 466, 471, 472, 473, 475, 485, 487, 491, 492], "unbound": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 74, 75, 83, 85, 87, 88, 89, 90, 96, 97, 98, 112, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 194, 204, 213, 216, 227, 230, 249, 262, 283, 310, 346, 358, 361, 363, 391, 403, 406, 463, 483, 487, 489], "boundeddiscret": [2, 37, 40], "boundedcontinu": [2, 28, 37, 40, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 237, 240, 270], "unboundeddiscret": [2, 86, 160, 237, 463], "unboundedcontinu": [2, 86, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 249, 262, 361, 366, 463], "implicitli": 2, "onehot": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 61, 74, 75, 83, 86, 87, 88, 89, 90, 130, 131, 138, 140, 141, 144, 145, 146, 154, 155, 157, 158, 165, 171, 172, 296, 326, 351, 356, 374, 376, 377, 378, 407, 463, 466], "multionehot": [2, 52, 53, 55, 374, 377, 378, 407, 463], "multicategor": [2, 53, 54, 55, 463], "binari": [2, 3, 7, 35, 36, 60, 171, 213, 217, 296, 326, 351, 352, 356, 357, 374, 377, 378, 407, 463, 483], "concept": [2, 3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 323, 472, 483, 489], "arbitrari": [2, 3, 34, 60, 70, 129, 132, 135, 139, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 215, 467, 471, 472, 487, 489], "combin": [2, 4, 46, 67, 110, 394, 472, 475, 480, 489, 491], "nevertheless": [2, 3, 473, 476, 489], "otherwis": [2, 3, 12, 15, 16, 18, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 110, 112, 117, 118, 129, 130, 131, 132, 135, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 220, 224, 225, 229, 237, 243, 261, 262, 263, 267, 268, 269, 276, 279, 280, 282, 284, 300, 303, 305, 313, 314, 332, 333, 336, 338, 342, 345, 351, 356, 359, 362, 370, 372, 381, 387, 388, 392, 402, 403, 404, 405, 406, 409, 411, 412, 442, 444, 467, 468, 471, 472, 473, 474, 483, 487, 492], "similarli": [2, 3, 27, 36, 43, 48, 56, 66, 67, 73, 78, 99, 116, 121, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 241, 279, 313, 336, 338, 342, 360, 361, 377, 385, 402, 404, 405, 409, 465, 492], "possess": [2, 83], "unsqueez": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 110, 204, 213, 216, 219, 220, 265, 271, 471, 474, 475, 485, 486, 487], "move": [2, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 99, 104, 106, 129, 132, 135, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 223, 228, 247, 262, 268, 269, 272, 274, 276, 277, 279, 308, 336, 338, 342, 358, 402, 404, 405, 445, 471, 472, 474, 476, 492], "unbind": [2, 62, 63, 64, 70, 71, 79, 80, 85, 96, 97, 98, 186, 199, 241, 354, 403, 405, 406], "said": [2, 473], "neg": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 63, 66, 79, 83, 109, 110, 192, 219, 234, 248, 259, 271, 371, 380, 386, 389, 409, 411, 412, 467, 473, 485, 486, 487], "seen": [2, 3, 22, 23, 25, 27, 40, 41, 49, 75, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 228, 467, 471, 472, 474, 478, 485, 486, 489], "predict": [2, 3, 56, 72, 295, 297, 309, 310, 350, 364, 369, 371, 376, 379, 381, 382, 386, 389, 391, 402, 408, 471, 472, 478], "deprec": [2, 32, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 66, 67, 73, 78, 88, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 276, 279, 336, 338, 342, 369, 371, 372, 374, 377, 378, 379, 385, 386, 389, 390, 391, 392, 402, 404, 405, 407, 409, 410, 411, 412, 417, 492], "mont": [2, 181, 182, 185, 188, 194, 369, 371, 386, 389, 402, 404, 471], "carlo": [2, 181, 182, 185, 188, 194, 369, 371, 386, 389, 402, 404, 471], "mct": [2, 51], "act": [2, 3, 4, 117, 118, 161, 162, 269, 295, 314, 370, 372, 373, 385, 390, 392, 394, 395, 474, 475, 485, 486, 489, 491], "tradit": [2, 304, 478, 485], "integ": [2, 15, 16, 18, 21, 29, 30, 32, 48, 52, 54, 56, 60, 66, 67, 72, 73, 85, 110, 117, 118, 119, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190, 196, 197, 212, 215, 231, 235, 243, 260, 277, 286, 287, 308, 313, 314, 372, 377, 385, 392, 467, 475, 489], "advanc": [2, 3, 27, 63, 70, 79, 80, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 476, 479, 489], "rebuild": [2, 51], "initi": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 99, 112, 123, 129, 132, 135, 139, 147, 157, 158, 159, 160, 163, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 237, 243, 247, 262, 269, 272, 277, 278, 279, 280, 281, 282, 283, 299, 300, 301, 305, 306, 310, 313, 314, 315, 316, 317, 324, 336, 338, 340, 341, 342, 354, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 461, 466, 467, 471, 472, 474, 476, 477, 479, 483, 485, 487, 492], "pair": [2, 3, 56, 62, 64, 66, 71, 78, 85, 96, 97, 98, 129, 132, 133, 134, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 252, 262, 267, 302, 347, 355, 359, 387, 402, 403, 405, 406, 409, 410, 411, 412, 413, 466, 467, 471, 472, 473, 477, 478, 484, 487, 492], "term": [2, 72, 104, 195, 239, 305, 306, 316, 317, 368, 369, 378, 449, 472, 473, 476, 477, 486], "pseudocod": [2, 3], "next_stat": [2, 467], "associ": [2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 68, 71, 73, 75, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 279, 327, 336, 338, 341, 342, 402, 403, 404, 405, 406, 461, 471, 489], "sens": [2, 4, 62, 64, 71, 85, 96, 97, 98, 186, 194, 219, 403, 406, 479, 487], "hard": [2, 3, 7, 123, 133, 134, 159, 384, 472, 492], "know": [2, 3, 4, 9, 63, 70, 79, 80, 138, 140, 281, 387, 390, 402, 405, 442, 471, 472, 473, 474, 475, 476, 477, 478, 479, 485, 486, 489], "next_td": 2, "Of": [2, 3, 7, 464, 487, 492], "cours": [2, 3, 4, 464, 487, 492], "handi": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 480], "undertaken": [2, 85, 467, 487], "link": [2, 6, 7, 135, 472, 481], "hash": [2, 48, 51, 66, 67, 73, 78, 85, 132, 147, 189], "past": [2, 4, 219, 354, 472, 489], "node_map": [2, 51], "_index": [2, 66, 78], "Then": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 185, 275, 473, 484], "track": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 80, 109, 110, 116, 132, 188, 197, 255, 264, 276, 277, 279, 324, 354, 404, 434, 440, 465, 472, 474, 476, 479, 486, 487, 489], "next_data": [2, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "data_map": [2, 51], "form": [2, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 99, 100, 101, 108, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 300, 302, 305, 307, 336, 338, 342, 359, 368, 369, 371, 386, 389, 402, 404, 405, 447, 466, 477], "figur": [2, 3, 85, 147, 189, 471, 473, 474, 486, 487, 492], "flowchart": 2, "o": [2, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 306, 336, 338, 342, 402, 404, 405], "get_tre": [2, 51, 85], "vertex": [2, 85], "longer": [2, 85, 280, 472, 481, 485, 486, 489], "vertic": [2, 85], "branch": [2, 51, 85], "repeat": [2, 85, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 154, 155, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 191, 194, 267, 283, 294, 473, 485, 486, 487], "depth": [2, 70, 83, 129, 132, 135, 139, 147, 153, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 283, 286, 287, 289, 290, 291, 292, 297, 298, 308, 310, 313, 314, 315, 318, 319, 351, 466, 472, 476, 478, 479, 484, 485, 486, 489], "until": [2, 3, 7, 27, 29, 99, 146, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 263, 268, 279, 404, 437, 473, 474, 481, 485, 486], "anymor": [2, 62, 64, 71, 85, 96, 97, 98, 186, 269, 358, 403, 406], "utmost": 2, "post": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 465], "grpo": [2, 188, 194, 402, 463], "commonli": [2, 110, 117, 118, 492], "emploi": [2, 317], "scarc": 2, "address": [2, 31, 340, 489], "subdomain": 2, "extern": [2, 3, 227, 230, 277, 340, 483, 485, 492], "token": [2, 29, 64, 65, 72, 81, 84, 95, 97, 98, 99, 147, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 304, 338, 342, 405, 465, 483], "dm": [3, 471, 492], "experi": [3, 63, 70, 79, 80, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 431, 432, 433, 434, 435, 436, 464, 472, 473, 475, 479, 480, 485, 486, 489], "box": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 138, 140, 315, 387, 402, 405, 483], "lib": [3, 5, 6, 7, 9, 10, 15, 16, 18, 21, 27, 28, 29, 30, 68, 99, 129, 132, 135, 136, 139, 144, 147, 151, 152, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 222, 231, 238, 239, 243, 245, 250, 252, 255, 262, 268, 275, 276, 279, 404, 427, 457, 471, 472, 473, 474, 484, 486, 488, 489, 491, 492], "hope": [3, 11], "nn": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 42, 43, 48, 56, 66, 67, 68, 72, 73, 78, 99, 129, 130, 131, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 224, 229, 231, 239, 247, 262, 268, 269, 272, 274, 279, 283, 285, 286, 287, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 310, 312, 313, 314, 315, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 359, 360, 361, 363, 366, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 457, 466, 467, 471, 472, 473, 474, 475, 477, 478, 481, 484, 485, 486, 487, 488, 491], "organis": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269, 472], "attribut": [3, 4, 7, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 129, 132, 135, 138, 139, 140, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 231, 241, 247, 269, 272, 276, 277, 279, 336, 338, 342, 359, 369, 370, 372, 373, 374, 376, 378, 379, 380, 383, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 471, 474, 487], "live": [3, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 99, 112, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 231, 279, 336, 338, 342, 402, 404, 405], "actual": [3, 4, 7, 14, 17, 19, 20, 24, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 275, 403, 406, 450, 467, 471, 473, 475, 485, 486, 487], "care": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 429, 471, 473, 475, 485, 486, 487, 489], "parametr": [3, 317, 359, 370, 372, 377, 385, 392, 471, 473], "observation_spec": [3, 51, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 213, 216, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 234, 236, 237, 238, 239, 243, 245, 247, 249, 251, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 275, 276, 277, 279, 283, 302, 307, 310, 404, 451, 457, 471, 473, 478, 484, 485, 486, 487, 492], "state_spec": [3, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 223, 228, 243, 268, 270, 271, 279, 283, 310, 404, 487, 492], "reward_spec": [3, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 216, 217, 222, 223, 227, 228, 230, 240, 249, 253, 254, 255, 257, 259, 266, 268, 270, 271, 277, 279, 283, 310, 404, 473, 483, 485, 486, 487, 492], "done_spec": [3, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 227, 228, 230, 231, 249, 259, 266, 268, 270, 279, 404, 485, 486, 487, 492], "flag": [3, 8, 43, 63, 68, 69, 70, 79, 80, 112, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 184, 185, 188, 189, 190, 238, 324, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 466, 485, 486, 487, 488], "input_spec": [3, 85, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 223, 227, 228, 229, 241, 245, 249, 250, 255, 256, 259, 260, 261, 262, 266, 268, 269, 270, 273, 279, 404, 473, 487], "full_action_spec": [3, 85, 129, 132, 135, 139, 147, 157, 158, 159, 160, 163, 168, 169, 170, 171, 172, 180, 181, 182, 185, 188, 189, 190, 212, 228, 283, 310, 485, 486], "full_state_spec": [3, 51, 85, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 212, 228, 283, 310], "output_spec": [3, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 232, 239, 241, 249, 250, 256, 260, 266, 268, 269, 270, 277, 279, 404, 487], "full_observation_spec": [3, 85, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190, 283, 310], "full_reward_spec": [3, 85, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 216, 228, 249, 485, 486], "full_done_spec": [3, 85, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 216, 228, 249, 485, 486], "carri": [3, 27, 54, 84, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 262, 277, 387, 402, 405, 465, 472, 474, 485, 486, 487, 489], "nontensor": [3, 59, 97, 185, 190, 237, 270, 463], "spec_lock": [3, 135], "modif": [3, 5, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 234, 237, 279, 336, 338, 342, 387, 402, 404, 405, 467, 473, 487], "children": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "unlock": [3, 40, 41, 49, 62, 64, 71, 75, 85, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 403, 406], "set_spec_lock_": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "reason": [3, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247, 272, 279, 307, 336, 338, 342, 402, 404, 405, 467, 471, 472, 473, 478, 479, 485, 487, 489], "easi": [3, 5, 11, 129, 132, 133, 134, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 299, 324, 342, 466, 467, 471, 472, 473, 486, 488, 489, 491, 492], "cach": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 74, 75, 83, 84, 86, 87, 88, 89, 90, 95, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 215, 227, 230, 247, 268, 269, 274, 284, 304, 439], "principl": 3, "new_spec": 3, "eras": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269], "relock": 3, "previous": [3, 4, 51, 473, 492], "importantli": [3, 355, 359], "action_s": 3, "help": [3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 231, 279, 336, 338, 342, 369, 371, 386, 389, 391, 402, 404, 405, 464, 467, 471, 472, 473, 474, 483, 485, 486], "With": [3, 145, 146, 150, 261, 468, 472, 483, 484, 485, 486, 489, 492], "necessarili": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 492], "present": [3, 29, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 70, 71, 73, 78, 83, 85, 96, 97, 98, 99, 109, 110, 112, 116, 129, 132, 135, 138, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 211, 232, 252, 256, 262, 267, 269, 279, 287, 288, 289, 290, 291, 292, 298, 302, 305, 307, 317, 322, 324, 336, 338, 342, 354, 358, 359, 360, 361, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 461, 465, 468, 471, 481, 484, 485, 486, 489, 491], "0s": [3, 262, 474], "step_and_maybe_reset": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 465, 476, 483], "done_kei": [3, 32, 43, 45, 47, 51, 57, 76, 99, 100, 101, 108, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 215, 219, 231, 252, 260, 279, 404, 485, 486], "assign": [3, 4, 15, 16, 21, 31, 36, 37, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 86, 96, 97, 98, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 340, 342, 372, 373, 374, 376, 392, 402, 403, 404, 405, 406, 473, 477, 483, 485, 486, 489], "_reset": [3, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 213, 215, 216, 219, 227, 230, 238, 249, 264, 283, 310, 485], "data_": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "append": [3, 8, 11, 51, 63, 68, 69, 70, 79, 80, 97, 112, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 192, 194, 215, 222, 223, 241, 252, 262, 269, 275, 301, 302, 306, 307, 351, 356, 465, 471, 472, 473, 474, 475, 483, 485, 486, 487, 488, 489, 491], "seed": [3, 15, 16, 18, 21, 27, 29, 30, 70, 79, 80, 112, 129, 132, 135, 139, 147, 153, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 175, 180, 181, 182, 185, 188, 189, 190, 191, 213, 216, 227, 230, 237, 249, 269, 427, 447, 485], "determinist": [3, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 223, 247, 262, 268, 269, 272, 274, 279, 288, 297, 318, 328, 336, 338, 342, 346, 355, 358, 359, 362, 370, 371, 387, 389, 402, 404, 405, 442, 466, 471, 472, 473, 474, 475, 477, 478, 481, 485, 487, 491, 492], "preced": [3, 56, 132, 219, 474], "risk": [3, 248], "overlap": [3, 79, 123], "reproduc": [3, 67, 73, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 219, 237, 471, 473, 475, 486], "maximum": [3, 4, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 56, 62, 64, 65, 72, 78, 81, 84, 85, 86, 95, 103, 104, 105, 106, 109, 110, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 187, 188, 189, 190, 194, 229, 253, 260, 261, 263, 282, 331, 332, 333, 362, 370, 372, 377, 378, 385, 387, 388, 392, 402, 405, 429, 444, 466, 471, 472, 473, 474, 477, 485, 486, 489], "max_step": [3, 11, 123, 129, 132, 135, 139, 147, 151, 152, 153, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 260, 267, 279, 427, 476, 477, 478, 480, 481, 485, 486, 491, 492], "tensordictmodul": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 66, 68, 72, 78, 129, 130, 131, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 218, 224, 239, 285, 296, 302, 307, 310, 325, 326, 334, 335, 336, 338, 342, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 364, 366, 370, 372, 373, 377, 378, 380, 381, 382, 383, 385, 387, 390, 392, 394, 395, 402, 405, 407, 408, 409, 410, 411, 412, 442, 457, 463, 471, 473, 474, 478, 481, 484, 485, 486, 487, 488, 492], "trail": [3, 187, 276, 483], "treat": [3, 56, 467, 477, 478], "brief": [3, 473, 476, 478, 489], "deliveri": 3, "metaclass": [3, 135, 140], "flank": [3, 467, 474], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 138, 139, 140, 144, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 237, 267, 269, 276, 279, 283, 296, 297, 310, 311, 312, 313, 314, 315, 318, 319, 327, 328, 336, 338, 342, 349, 352, 369, 372, 379, 380, 381, 382, 389, 392, 402, 404, 405, 409, 414, 422, 470, 471, 473, 475, 477, 478, 479, 480, 485, 486, 489], "union": [3, 25, 36, 40, 41, 43, 48, 49, 50, 54, 55, 56, 58, 60, 61, 66, 67, 73, 74, 75, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 313, 334, 336, 338, 342, 376, 378, 390, 402, 404, 405, 458, 461], "assess": [3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 49, 75, 151, 152, 176, 185, 471], "split_trajectori": [3, 15, 16, 18, 21, 22, 23, 25, 27, 110, 117, 118, 463], "adjac": [3, 32, 234, 354], "junction": 3, "inittrack": [3, 302, 307, 354, 471, 474], "tutori": [3, 160, 193, 462, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 492], "scratch": [3, 8, 472, 487], "mere": [3, 21, 475], "batch_lock": [3, 129, 132, 135, 137, 139, 147, 159, 163, 168, 169, 180, 181, 182, 185, 188, 189, 190, 216, 262, 269, 487], "contrast": [3, 300, 323, 384, 489], "notabl": 3, "braxenv": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 250, 463, 476], "jumanjienv": [3, 463], "straightforward": [3, 19, 471, 472, 476, 477, 478, 479, 489], "merg": [3, 63, 70, 79, 80, 487], "correctli": [3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "silent": [3, 36, 43, 48, 66, 67, 73, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365], "_step": [3, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 404], "temporari": [3, 471], "hold": [3, 268, 400, 401, 404, 487, 489], "arm": 3, "unbatch": [3, 300, 305], "captur": [3, 281, 299, 324, 475], "base_env": [3, 129, 131, 132, 135, 139, 140, 146, 147, 158, 159, 160, 163, 168, 169, 170, 172, 180, 181, 182, 185, 188, 189, 190, 212, 213, 216, 222, 224, 225, 227, 229, 230, 239, 245, 249, 251, 257, 260, 262, 263, 267, 269, 279, 429, 437, 465, 471, 472, 473, 475, 485, 488, 491, 492], "break_when_all_don": [3, 129, 132, 135, 139, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "conditionalskip": 3, "programmat": 3, "pretti": [3, 471, 476, 480, 489], "likewis": 3, "break_when_any_don": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 215, 267, 279, 285, 354, 486], "te": 3, "paragraph": 3, "deep": [3, 9, 219, 240, 289, 290, 291, 292, 295, 324, 369, 372, 384, 392, 393, 471, 485], "dive": 3, "gym3": 3, "envpool": [3, 154, 155], "simultan": [3, 25, 146, 154, 155, 159, 168, 487], "advantag": [3, 8, 188, 194, 298, 369, 371, 386, 389, 391, 402, 404, 409, 410, 411, 412, 413, 414, 416, 418, 420, 422, 423, 425, 467, 468, 471, 472, 473, 474, 486, 487, 492], "scale": [3, 4, 33, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190, 219, 239, 243, 254, 261, 265, 276, 277, 282, 297, 303, 327, 328, 332, 333, 347, 348, 349, 355, 359, 361, 369, 370, 372, 385, 389, 390, 391, 392, 445, 451, 461, 466, 471, 472, 473, 474, 477, 486, 491], "varieti": [3, 11], "inherit": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 309, 313, 314, 387, 468, 473, 485, 486], "from_pixel": [3, 11, 130, 131, 133, 134, 138, 140, 141, 145, 146, 165, 219, 251, 427, 429, 471, 472, 474, 476, 480, 481, 488, 489, 491, 492], "81": [3, 117], "d": [3, 43, 63, 66, 70, 78, 79, 80, 95, 109, 110, 282, 300, 305, 336, 338, 342, 355, 359, 402, 405, 491], "privat": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 275, 487, 492], "absenc": 3, "total": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 99, 112, 118, 123, 182, 186, 199, 224, 340, 371, 386, 389, 402, 403, 406, 438, 440, 442, 447, 450, 451, 470, 471, 472, 473, 474, 478, 485, 486, 488, 489, 490, 491], "accord": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 62, 64, 71, 72, 85, 96, 97, 98, 112, 115, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 171, 172, 180, 181, 182, 185, 186, 188, 189, 190, 243, 254, 303, 316, 327, 332, 333, 403, 406, 407, 466, 467, 477, 478, 485, 487, 489], "inner": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 229, 269, 468, 472, 473, 486, 492], "kept": [3, 24, 26, 32, 116, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 210, 229, 256, 303, 332, 333, 478, 485], "wherev": 3, "lost": [3, 8, 275], "intern": [3, 51, 82, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 277, 469], "face": [3, 5, 8, 9, 338, 342, 476, 492], "NOT": [3, 100, 101, 108, 118, 248], "right": [3, 6, 7, 32, 72, 110, 117, 190, 224, 472, 473, 475, 486, 487, 492], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 43, 66, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 187, 188, 189, 190, 336, 338, 342, 402, 405, 478], "annihil": 3, "supersed": [3, 32], "pettingzoowrapp": [3, 463], "group": [3, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 185, 188, 189, 190, 194, 240, 259, 340, 341, 399, 466, 472, 477, 479, 486, 489], "__not__": [3, 355, 370, 372, 385, 390, 392, 394, 395], "constrain": [3, 195, 239, 302, 307, 389, 492], "li": 3, "fact": [3, 7, 8, 471, 473, 476, 485, 486, 487, 488, 489, 492], "meaning": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "perfectli": [3, 468, 471, 475, 487], "meaningless": 3, "val": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 181, 277, 437, 478, 491], "agent0": [3, 475], "agent1": 3, "overrid": [3, 14, 17, 19, 20, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 97, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 279, 294, 336, 338, 342, 402, 404, 405, 429, 461, 466, 483], "bool": [3, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 116, 117, 118, 119, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 211, 212, 213, 215, 216, 219, 220, 224, 225, 227, 229, 230, 231, 232, 234, 237, 239, 241, 242, 243, 245, 247, 249, 250, 252, 254, 255, 256, 259, 260, 262, 265, 266, 267, 269, 270, 271, 272, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 331, 332, 333, 336, 338, 339, 342, 345, 346, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 436, 437, 440, 441, 442, 444, 445, 447, 461, 472, 473, 475, 483, 487, 491, 492], "500": [3, 471, 472], "note": [3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 211, 227, 230, 267, 276, 277, 279, 284, 300, 302, 304, 305, 307, 324, 336, 338, 342, 355, 359, 371, 379, 389, 402, 404, 405, 463, 467, 472, 475, 477, 483, 484, 485, 486, 492], "launch": [3, 15, 16, 21, 22, 23, 25, 28, 159, 168], "bottleneck": [3, 8, 110, 117, 118], "great": [3, 7, 8, 475, 485, 491], "speedup": [3, 8, 485, 492], "precis": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 210, 227, 230, 301, 306, 471, 473], "misspecifi": 3, "caus": [3, 7, 8, 15, 16, 18, 103, 105, 109, 110, 125, 129, 132, 135, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 248, 402, 492], "breakag": 3, "rais": [3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 171, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 233, 242, 252, 261, 262, 263, 267, 269, 276, 279, 281, 299, 324, 336, 338, 342, 372, 387, 392, 402, 403, 404, 405, 406, 437, 471, 473, 485, 486, 489], "mismatch": [3, 66, 371, 389, 402, 472], "subprocess": [3, 15, 16, 21, 136, 159, 168], "multithreadedenv": [3, 463], "underneath": 3, "higher": [3, 4, 109, 110, 222, 362, 405, 471, 472, 473, 485, 489, 492], "cover": [3, 138, 140, 304, 464, 473, 476, 479, 480, 487, 491], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 112, 129, 132, 135, 139, 147, 150, 153, 156, 159, 160, 161, 162, 163, 168, 169, 170, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 216, 219, 223, 227, 228, 231, 232, 237, 239, 241, 247, 249, 250, 256, 260, 262, 266, 267, 268, 269, 270, 272, 274, 276, 277, 279, 281, 286, 287, 308, 313, 314, 317, 325, 334, 336, 338, 339, 340, 342, 343, 351, 355, 358, 359, 366, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 397, 399, 402, 403, 404, 405, 406, 407, 415, 427, 459, 463, 466, 471, 472, 473, 475, 479, 483, 485, 486, 487, 489, 492], "atari": [3, 4, 219, 287, 429, 475, 480, 492], "classic": [3, 144, 153, 162, 472], "benchmark_batched_env": 3, "significantli": [3, 13, 22, 23, 25, 117, 118, 219, 371, 389, 402, 467, 471, 472, 478, 486], "asyncenvpool": [3, 29, 163, 169], "pool": [3, 129, 163, 169, 263], "concurr": [3, 129, 485, 486], "contrari": [3, 467], "permit": [3, 222, 234, 259, 271, 369, 371, 386, 389, 391], "job": [3, 7, 22, 23, 25, 28, 70, 79, 80, 112, 489, 491], "famili": 3, "interest": [3, 355, 359, 466, 472, 473, 476, 486, 487, 492], "prefer": [3, 15, 16, 21, 25, 32, 33, 63, 70, 79, 80, 117, 118, 129, 163, 169, 191, 248, 256, 389, 394, 444, 466, 473, 485, 486, 489, 491], "pleas": [3, 36, 43, 48, 56, 66, 67, 73, 78, 82, 99, 129, 132, 135, 138, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 219, 237, 263, 267, 269, 279, 313, 314, 315, 336, 338, 342, 372, 392, 402, 404, 405, 464], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 159, 163], "threadingasyncenvpool": 3, "executor": [3, 22, 23, 25, 169], "functool": [3, 15, 16, 18, 21, 29, 129], "s0": [3, 129], "clamp": [3, 129, 359, 362, 381, 447, 467, 485, 487], "env_index": [3, 129], "async_step_send": [3, 129, 163, 169], "s0_result": [3, 129], "async_step_recv": [3, 129, 163, 169], "close": [3, 13, 15, 16, 18, 21, 22, 23, 25, 29, 68, 99, 129, 139, 154, 183, 184, 187, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 239, 268, 277, 279, 369, 371, 386, 389, 402, 404, 427, 471, 472, 476, 483, 484, 485, 487, 491], "seamlessli": [3, 197, 487], "paradigm": [3, 21, 486], "decpodp": 3, "game": [3, 4, 5, 132, 151, 152, 157, 158, 224, 287, 429, 475, 480], "thank": [3, 199, 405, 471, 475, 476, 491], "carrier": [3, 473, 474, 476, 489], "particular": [3, 36, 43, 48, 56, 66, 67, 73, 78, 84, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 269, 279, 336, 338, 342, 402, 404, 405, 467, 468, 472, 474, 476, 484, 486, 489], "thu": [3, 386, 486], "vma": [3, 173, 174, 427, 485, 486], "robot": [3, 5, 7, 247, 272, 274, 475, 486], "vmasenv": [3, 427, 463, 485, 486], "balanc": [3, 109, 110, 133, 134, 187, 471, 472], "num_env": [3, 15, 16, 21, 27, 129, 138, 142, 155, 173, 174, 181, 182, 185, 191, 427, 485, 486], "n_agent": [3, 173, 174, 313, 314, 315, 325, 334, 407, 427, 467, 485, 486], "ground_rew": 3, "pos_rew": 3, "style": [3, 63, 70, 79, 80, 196], "vari": [3, 138, 140, 141, 161, 162, 165, 173, 248, 467, 475, 486], "creation": [3, 159, 168, 199, 492], "info_spec": [3, 159], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 34, 35, 37, 38, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 130, 131, 132, 135, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 185, 188, 189, 190, 211, 212, 213, 231, 249, 296, 304, 320, 323, 326, 351, 352, 355, 356, 357, 374, 377, 378, 407, 463, 474], "simpl": [3, 9, 19, 20, 36, 43, 48, 56, 60, 66, 67, 73, 78, 83, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 289, 336, 338, 342, 354, 359, 374, 376, 387, 391, 402, 404, 405, 409, 467, 471, 472, 473, 476, 477, 478, 485, 486, 489, 492], "prefix": [3, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 264, 267, 269, 279, 336, 338, 342, 355, 372, 387, 392, 402, 403, 404, 405, 406, 428, 474, 478, 483, 492], "exactli": [3, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 141, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 300, 305, 320, 336, 338, 342, 372, 392, 402, 404, 405, 471, 474, 479, 485, 486], "action_kei": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 129, 132, 135, 139, 147, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 195, 210, 212, 213, 229, 239, 241, 281, 283, 299, 309, 310, 324, 354, 467, 485, 486], "reward_kei": [3, 43, 45, 47, 51, 57, 76, 100, 101, 108, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 279, 283, 310, 441, 445, 485, 486], "set_kei": [3, 231, 369, 371, 372, 374, 377, 378, 379, 385, 386, 387, 389, 390, 391, 392, 402, 405, 407, 413, 471, 485, 486], "awai": [3, 473, 476, 485, 486, 491], "leaf": [3, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 75, 83, 85, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 238, 260, 262, 268, 359], "full": [3, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 284, 302, 307, 338, 352, 359, 438, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "autoresettransform": 3, "invalid": [3, 36, 43, 48, 56, 66, 67, 73, 78, 99, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 311, 312, 336, 338, 342, 402, 404, 405], "nan": [3, 215, 275], "auto_reset": [3, 51, 129, 132, 135, 139, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 215, 279, 487], "auto_reset_replac": [3, 215], "placehold": [3, 140, 141, 185, 231, 269, 275], "set_gym_backend": [3, 15, 16, 18, 21, 29, 129, 132, 135, 138, 139, 147, 159, 160, 163, 168, 169, 170, 179, 180, 181, 182, 185, 188, 189, 190, 215, 463, 476, 491], "autoresettinggymenv": [3, 215], "self": [3, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 238, 239, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 279, 280, 281, 283, 296, 299, 302, 307, 310, 313, 314, 325, 334, 336, 338, 342, 355, 358, 363, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 468, 471, 483, 487, 491], "super": [3, 99, 153, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 283, 296, 310, 363, 370, 372, 373, 378, 385, 390, 392, 394, 395, 404, 471, 487, 491], "td_reset": [3, 180, 215], "exclud": [3, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 199, 210, 215, 219, 232, 325, 371, 386, 389, 485, 486, 489], "r": [3, 4, 51, 56, 132, 182, 185, 196, 198, 212, 213, 215, 222, 224, 225, 243, 257, 264, 267, 276, 277, 282, 285, 301, 359, 368, 389, 408, 427, 472, 487, 492], "3633e": [3, 215], "02": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 215, 277, 472, 481], "4877e": [3, 215], "01": [3, 215, 243, 277, 282, 324, 365, 369, 371, 386, 389, 402], "2849e": [3, 215], "7584e": [3, 215], "6609e": [3, 215], "6166e": [3, 215], "8366e": [3, 215], "2761e": [3, 215], "5685e": [3, 215], "4102e": [3, 215], "8111e": [3, 215], "9959e": [3, 215], "0865e": [3, 215], "5644e": [3, 215], "2119e": [3, 215], "2542e": [3, 215], "03": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 215, 243, 264], "9952e": [3, 215], "4059e": [3, 215], "2094e": [3, 215], "9009e": [3, 215], "5140e": [3, 215], "3554e": [3, 215], "2920e": [3, 215], "7893e": [3, 215], "6429e": [3, 215], "3057e": [3, 215], "2867e": [3, 215], "6963e": [3, 215], "3818e": [3, 215], "2576e": [3, 215], "2679e": [3, 215], "1640e": [3, 215], "00": [3, 130, 131, 215, 470, 490], "6972e": [3, 215], "0212e": [3, 215], "5959e": [3, 215], "4637e": [3, 215], "3121e": [3, 215], "2168e": [3, 215], "5232e": [3, 215], "7704e": [3, 215], "7457e": [3, 215], "4127e": [3, 215], "1064e": [3, 215], "0854e": [3, 215], "5712e": [3, 215], "2189e": [3, 215], "5235e": [3, 215], "8289e": [3, 215], "0009e": [3, 215], "0257e": [3, 215], "8893e": [3, 215], "5872e": [3, 215], "9405e": [3, 215], "7766e": [3, 215], "0403e": [3, 215], "0626e": [3, 215], "2959e": [3, 215], "7263e": [3, 215], "2775e": [3, 215], "9564e": [3, 215], "0411e": [3, 215], "6769e": [3, 215], "6354e": [3, 215], "8698e": [3, 215], "1765e": [3, 215], "6292e": [3, 215], "5375e": [3, 215], "1820e": [3, 215], "7023e": [3, 215], "5836e": [3, 215], "9016e": [3, 215], "4826e": [3, 215], "6191e": [3, 215], "6387e": [3, 215], "8667e": [3, 215], "2056e": [3, 215], "1147e": [3, 215], "5991e": [3, 215], "0278e": [3, 215], "5219e": [3, 215], "3067e": [3, 215], "6617e": [3, 215], "3322e": [3, 215], "2629e": [3, 215], "4599e": [3, 215], "7298e": [3, 215], "5848e": [3, 215], "0148e": [3, 215], "5745e": [3, 215], "6982e": [3, 215], "7877e": [3, 215], "3527e": [3, 215], "7285e": [3, 215], "6668e": [3, 215], "0583e": [3, 215], "6956e": [3, 215], "3962e": [3, 215], "9845e": [3, 215], "5015e": [3, 215], "5903e": [3, 215], "9993e": [3, 215], "9418e": [3, 215], "0196e": [3, 215], "6557e": [3, 215], "2109e": [3, 215], "8997e": [3, 215], "1507e": [3, 215], "7363e": [3, 215], "0310e": [3, 215], "9574e": [3, 215], "8980e": [3, 215], "0090e": [3, 215], "forecast": 3, "awar": [3, 7, 103, 104, 105, 106, 119, 121, 125, 302, 307, 472, 474], "detect": [3, 188, 387, 402, 405, 467], "return_contigu": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 484], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 69, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 123, 129, 132, 135, 137, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 234, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 279, 281, 283, 299, 302, 307, 309, 310, 324, 336, 338, 342, 350, 352, 354, 357, 358, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 447, 471, 485, 487], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 37, 40, 42, 43, 48, 56, 60, 63, 66, 67, 72, 73, 78, 79, 86, 99, 109, 110, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 215, 219, 223, 227, 230, 239, 240, 243, 247, 252, 253, 254, 261, 262, 265, 268, 269, 272, 274, 277, 279, 281, 282, 284, 285, 294, 297, 300, 303, 305, 308, 311, 312, 316, 317, 323, 327, 328, 331, 333, 336, 338, 342, 358, 362, 365, 367, 368, 369, 370, 371, 372, 376, 377, 378, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 402, 404, 405, 408, 414, 415, 416, 417, 418, 419, 420, 421, 422, 445, 471, 472, 489, 492], "_set_se": [3, 213, 216, 227, 230, 249, 487], "lazystackedtensordict": [3, 29, 51, 75, 104, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 484], "float32": [3, 15, 16, 18, 37, 40, 43, 45, 51, 62, 63, 64, 66, 71, 72, 76, 78, 79, 80, 83, 84, 85, 86, 96, 97, 98, 103, 104, 105, 109, 110, 117, 125, 129, 130, 131, 132, 135, 138, 139, 140, 145, 146, 147, 153, 156, 157, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 185, 186, 188, 189, 190, 204, 210, 212, 216, 227, 230, 231, 232, 237, 240, 243, 245, 249, 250, 252, 256, 259, 260, 262, 265, 270, 283, 285, 295, 296, 302, 307, 310, 324, 325, 326, 334, 336, 338, 342, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 361, 363, 366, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 403, 405, 406, 407, 466, 483, 487], "exclusive_field": [3, 29, 51, 104, 129, 182, 185, 194], "stack_dim": [3, 29, 51, 104, 129, 182, 185, 194, 203], "dramat": 3, "carefulli": [3, 485, 486, 492], "against": [3, 5, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 346, 351, 352, 355, 356, 357, 358, 359, 370, 372, 385, 390, 392, 394, 395, 402, 404, 405, 473, 485, 486], "plain": [3, 8, 370, 372, 378, 385, 390, 392, 394, 395, 410, 411, 412, 476], "expens": [3, 30, 110, 117, 118, 427, 489], "absent": [3, 40, 41, 49, 75, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 256, 269], "torchvis": [3, 11, 247, 274, 431, 485, 491, 492], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99, 112, 129, 132, 135, 136, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 214, 216, 223, 224, 225, 231, 237, 262, 269, 270, 279, 280, 286, 287, 308, 315, 336, 338, 342, 359, 368, 387, 402, 404, 405, 427, 452, 453, 459, 460, 461, 472, 489], "bring": [3, 473, 476, 492], "kind": [3, 70, 83, 478, 485, 489], "consult": 3, "resize_par": 3, "revers": [3, 305], "order": [3, 11, 18, 20, 29, 30, 36, 43, 48, 56, 60, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 99, 112, 116, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 220, 227, 230, 237, 245, 259, 267, 269, 279, 323, 336, 338, 342, 346, 351, 358, 360, 361, 363, 369, 370, 372, 373, 377, 378, 385, 389, 390, 391, 392, 394, 395, 402, 404, 405, 472, 485, 486], "chain": [3, 62, 63, 64, 70, 71, 79, 80, 85, 96, 97, 98, 147, 186, 188, 189, 223, 229, 286, 287, 361, 403, 406, 492], "in_keys_inv": [3, 201, 205, 222, 227, 228, 230, 237, 243, 244, 245, 249, 250, 252, 257, 266, 268, 270, 271, 471, 484, 487, 492], "append_transform": [3, 51, 63, 68, 69, 70, 79, 80, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 237, 238, 239, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 279, 285, 302, 307, 404, 427, 465, 471, 474, 483, 485, 487, 489, 491, 492], "doubletofloat": [3, 471, 473, 484], "float64": [3, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 133, 134, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 223, 227, 230, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "think": [3, 182, 184, 185, 187, 464, 473, 485, 486, 492], "in_": 3, "out_": 3, "perspect": [3, 296, 352, 379, 473, 475], "outer": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269, 468, 471, 472, 492], "ob": [3, 4, 8, 32, 40, 41, 49, 51, 63, 68, 69, 70, 75, 78, 79, 80, 85, 109, 112, 117, 118, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 210, 213, 215, 224, 227, 228, 230, 243, 257, 259, 265, 289, 290, 291, 292, 313, 314, 315, 356, 363, 370, 372, 373, 378, 385, 390, 392, 394, 395, 409, 410, 411, 412, 472, 475, 484, 485, 487, 489, 491, 492], "obs_standard": 3, "out_keys_inv": [3, 201, 205, 222, 227, 228, 230, 237, 243, 244, 245, 249, 250, 257, 259, 266, 268, 270, 271, 487], "illustr": [3, 471, 472, 477, 489], "chang": [3, 5, 7, 11, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 99, 103, 104, 105, 106, 110, 116, 117, 119, 121, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 230, 232, 239, 241, 249, 250, 256, 260, 266, 268, 269, 270, 276, 277, 279, 305, 336, 338, 342, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 467, 471, 474, 485, 486, 487, 488, 489, 492], "schemat": [3, 467], "outermost": 3, "innermost": 3, "similar": [3, 36, 43, 48, 56, 58, 62, 64, 66, 67, 70, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 273, 274, 276, 277, 279, 336, 338, 342, 347, 349, 355, 358, 359, 402, 403, 404, 405, 406, 467, 471, 472, 473, 474, 475, 477, 478, 479, 480, 487, 489, 491, 492], "transform_action_spec": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 228, 243, 268, 270, 271, 279, 404], "spec_from_random_valu": 3, "_apply_transform": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 404, 487, 492], "rand": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 104, 112, 130, 131, 145, 146, 153, 157, 158, 164, 171, 172, 213, 216, 227, 230, 249, 259, 283, 310, 355, 369, 370, 372, 373, 374, 376, 377, 378, 385, 387, 389, 390, 392, 394, 395, 402, 405, 487, 491, 492], "approach": [3, 63, 70, 79, 80, 219, 243, 282, 304, 313, 314, 340, 394, 465, 471, 473, 478, 479, 485, 492], "insid": [3, 62, 64, 71, 85, 96, 97, 98, 159, 186, 403, 406, 492], "did": [3, 70, 275, 415, 472, 473, 479, 489, 492], "_inv_apply_transform": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 268, 279, 404, 487, 492], "actiondiscret": 3, "rand_act": [3, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 216, 269, 476], "action_discret": 3, "addonetoob": 3, "Is": [3, 268], "rewrit": [3, 268], "_call": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 404, 483, 487], "_inv_cal": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 268, 279, 404], "overwrit": [3, 268], "till": [3, 268, 275], "encapsul": [3, 268, 476, 477, 478], "forget": [3, 268, 305], "edit": [3, 97, 268, 279, 479], "top": [3, 4, 99, 123, 130, 131, 145, 146, 226, 268, 283, 310, 338, 342, 477], "transform_output_spec": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 232, 239, 241, 249, 250, 256, 260, 266, 268, 270, 277, 279, 404], "transform_input_spec": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 216, 223, 227, 228, 229, 241, 245, 249, 250, 255, 259, 260, 261, 262, 266, 268, 270, 273, 279, 404], "transform_observation_spec": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 219, 220, 221, 222, 223, 226, 227, 228, 231, 232, 234, 236, 238, 239, 241, 243, 245, 249, 250, 251, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 275, 276, 277, 279, 404, 487], "transform_state_spec": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 228, 243, 268, 270, 271, 279, 404], "transform_reward_spec": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 222, 223, 227, 228, 232, 239, 240, 241, 249, 250, 253, 254, 255, 256, 257, 259, 260, 266, 268, 270, 271, 277, 279, 404, 483], "rewardsum": [3, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 268, 279, 404, 485, 486], "undo": 3, "addonetoact": 3, "subtract": [3, 261], "regist": [3, 14, 17, 19, 20, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 99, 112, 129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 210, 227, 230, 231, 255, 267, 269, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 427, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 468, 471, 473, 476, 489], "manipul": [3, 4, 8, 133, 134, 247, 268, 272], "third_transform": 3, "unexpect": [3, 15, 16, 18, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 492], "behviour": 3, "fortun": [3, 474, 475, 476, 477, 480], "alreadi": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 103, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 262, 279, 280, 336, 338, 342, 359, 402, 403, 404, 405, 406, 409, 410, 411, 412, 471, 473, 480, 485, 486], "catfram": [3, 354, 472], "notic": [3, 123, 219, 467, 473, 481, 487], "parenthood": 3, "henc": [3, 30, 63, 211, 248, 313, 471, 473, 485, 486, 487], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 159, 168, 269, 427, 437, 487], "discret": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 138, 139, 140, 147, 151, 152, 159, 160, 161, 162, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190, 212, 229, 237, 320, 323, 326, 376, 377, 378, 379, 466, 472, 477, 486], "might": [3, 62, 64, 65, 71, 85, 96, 97, 98, 186, 403, 406, 433, 464, 471, 476, 492], "action_mask": [3, 132, 145, 146, 161, 162, 166, 167, 213], "unavail": [3, 161, 162], "probabl": [3, 4, 8, 72, 109, 110, 112, 115, 199, 284, 285, 294, 296, 299, 300, 302, 304, 305, 307, 308, 311, 312, 320, 332, 333, 338, 342, 355, 359, 372, 389, 405, 466, 467, 472, 475, 477, 491], "probabilistictensordictmodul": [3, 195, 239, 359, 360, 467, 491], "tensordictsequenti": [3, 43, 66, 78, 285, 299, 302, 307, 324, 336, 338, 342, 351, 354, 360, 361, 366, 402, 405, 466, 471, 472, 474, 475, 477, 481, 484, 485, 488, 491], "maskedcategor": [3, 312, 463], "linear": [3, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 99, 129, 130, 131, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 239, 247, 262, 268, 269, 272, 274, 279, 283, 285, 286, 287, 289, 290, 291, 292, 296, 298, 299, 308, 310, 313, 314, 316, 317, 324, 326, 327, 328, 336, 338, 342, 346, 347, 348, 349, 353, 354, 355, 356, 358, 361, 363, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 457, 466, 472, 484, 488, 491], "in_feat": 3, "out_feat": 3, "logit": [3, 64, 72, 98, 295, 304, 311, 312, 320, 323, 352, 355, 377, 378, 466], "dist": [3, 10, 304, 311, 312, 320, 359, 467, 477], "distribution_class": [3, 239, 347, 348, 349, 350, 355, 359, 361, 369, 370, 372, 377, 378, 385, 389, 390, 391, 392, 466, 471, 473, 477, 485, 486, 491], "wrap": [3, 5, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 99, 129, 130, 131, 132, 135, 139, 140, 144, 145, 146, 147, 152, 155, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 172, 174, 175, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 225, 267, 269, 279, 280, 302, 307, 335, 336, 338, 342, 347, 348, 349, 354, 356, 359, 364, 387, 402, 404, 405, 407, 465, 466, 471, 472, 473, 474, 478, 481, 483, 485, 486, 492], "actionmask": [3, 132], "your_base_env": 3, "mask_kei": [3, 32, 213, 248, 279], "itself": [3, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 279, 336, 338, 342, 387, 394, 402, 404, 405, 465, 473, 476], "ey": 3, "report": [3, 130, 131, 145, 146, 480], "foremost": 3, "callback": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 486], "ad": [3, 4, 18, 29, 32, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 92, 99, 109, 110, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 237, 255, 267, 269, 279, 282, 316, 317, 324, 336, 338, 342, 368, 369, 371, 372, 374, 379, 386, 389, 392, 402, 404, 405, 407, 465, 472, 474, 475, 477, 483, 485, 489, 491, 492], "tensordictrecord": [3, 463], "videorecord": [3, 11, 427, 463, 473, 480, 481, 485], "csvlogger": [3, 11, 427, 429, 463, 472, 480, 481, 485], "wandblogg": [3, 463, 480], "tensorboardlogg": [3, 457, 463, 480], "tag": [3, 7, 11, 184, 185, 427, 429, 431, 434, 461, 465, 480, 481, 483, 485], "mp4": [3, 427, 429, 431, 481, 485], "video_format": [3, 427, 429, 431, 481, 485], "whc": 3, "cwh": 3, "exp": [3, 368, 467], "al": [3, 15, 16, 18, 21, 29, 33, 138, 140, 231, 245, 283, 475, 492], "pong": [3, 15, 16, 18, 21, 29, 155, 245, 475, 492], "v5": [3, 15, 16, 18, 21, 29, 138, 140, 155, 231, 245, 475, 492], "grow": [3, 104], "tediou": [3, 476], "workspac": [3, 85, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 237], "pixelrendertransform": [3, 463, 485], "stream": 3, "alik": [3, 427], "envcreat": [3, 18, 28, 159, 168, 267, 277, 427, 457, 458, 461, 463, 471, 472, 491, 492], "render_mod": [3, 427, 487], "rgb_arrai": [3, 427, 485, 486, 487], "uncom": [3, 480], "line": [3, 7, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 472, 480, 485, 486], "comment": [3, 468, 472, 491], "pixels_record": [3, 427], "mission": [3, 196], "irrespect": [3, 358, 359], "dmcontrol": [3, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "jumanji": [3, 129, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "framework": [3, 4, 9, 28, 129, 130, 131, 132, 135, 139, 145, 146, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 300, 483, 491, 492], "Its": [3, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 276, 279, 336, 338, 342, 358, 402, 404, 405, 413], "success": [3, 182, 184, 188, 194, 219, 264, 299, 372, 394, 472, 479, 481, 487, 489, 491], "foundat": [3, 5, 161, 162, 473, 486], "inspir": [3, 475, 487], "gone": [3, 4, 5, 354], "maintain": [3, 5, 9, 42, 58, 219, 277, 487], "concomittantli": 3, "problem": [3, 7, 8, 9, 18, 185, 402, 472, 473, 474, 479, 485, 486, 487, 489, 492], "decor": [3, 8, 207, 209, 280, 302, 307, 345, 387, 409, 410, 411, 412, 437, 465, 474, 491], "relev": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 72, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 409, 410, 411, 412, 413, 436, 475, 487], "gym_backend": [3, 209, 463], "env1": [3, 285, 484], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 132, 209], "env2": [3, 484], "_env": [3, 6, 138, 492], "classic_control": 3, "pendulumenv": [3, 51, 463, 487], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 149, 179, 240], "side": [3, 4, 311, 492], "v0": [3, 15, 16, 40, 41, 49, 75, 129, 132, 135, 139, 141, 144, 145, 146, 147, 148, 149, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 223, 240, 269, 276, 277, 437, 457], "26": [3, 118, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 224], "fun": [3, 209, 280, 473, 485, 486], "reveal": 4, "curv": 4, "exploit": [4, 477], "cv": 4, "flip": [4, 146], "correspondingli": 4, "invers": [4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 99, 112, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 219, 227, 230, 232, 237, 243, 250, 252, 264, 266, 268, 270, 279, 367, 371, 377, 385, 389, 402, 404, 463, 487], "prescript": 4, "tune": [4, 33, 195, 239, 405, 465, 485, 486, 488], "coeffici": [4, 33, 42, 72, 195, 239, 371, 386, 389, 402, 405, 486], "bonu": [4, 187, 369, 371, 386, 389, 402], "beta": [4, 63, 79, 109, 110, 377, 385, 386, 405, 471, 472, 489, 491], "reduc": [4, 6, 39, 109, 110, 123, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 199, 210, 219, 225, 261, 277, 282, 284, 332, 405, 463, 472, 485], "downstream": [4, 467, 471], "formul": [4, 485, 486], "rate": [4, 11, 276, 277, 408, 472, 473, 485, 486], "gradient": [4, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 284, 303, 312, 317, 320, 332, 333, 336, 338, 342, 359, 369, 371, 372, 373, 377, 378, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 402, 404, 405, 408, 409, 410, 411, 412, 447, 471, 473, 485, 486, 487], "easier": [4, 67, 466, 471, 491], "local": [4, 7, 10, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 69, 73, 78, 96, 99, 110, 117, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 277, 279, 313, 314, 325, 334, 336, 338, 339, 342, 402, 404, 405, 407, 434, 436, 475, 480, 481, 485, 486], "optima": 4, "product": [4, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 300, 301, 305, 306, 459, 460], "sum": [4, 15, 16, 27, 36, 43, 54, 60, 78, 123, 130, 131, 133, 134, 138, 140, 141, 145, 146, 154, 155, 165, 187, 199, 218, 240, 255, 311, 312, 332, 334, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 402, 405, 408, 415, 467, 471, 472, 473, 474, 475, 478, 481, 485, 486, 487, 492], "stat": [4, 243, 276, 277, 451, 461, 472, 473], "w": [4, 112, 132, 157, 158, 219, 221, 226, 251, 265, 300, 324, 389, 429, 472, 489], "yield": [4, 15, 16, 18, 27, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 85, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405, 465, 471, 478], "insight": [4, 181, 475], "auxiliari": [4, 478], "credit": 4, "futur": [4, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 100, 101, 108, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 247, 267, 269, 274, 279, 308, 336, 338, 342, 369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 403, 404, 405, 406, 407, 464], "spars": [4, 43, 474], "intermedi": [4, 15, 16, 43, 51, 66, 78, 218, 285, 302, 307, 336, 338, 342, 352, 402, 405, 471, 475, 488], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": [4, 182], "likelihood": [4, 471], "discov": 4, "score": [4, 72, 187, 321, 323, 389], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 43, 63, 66, 68, 69, 70, 78, 79, 80, 85, 99, 112, 132, 151, 152, 161, 162, 164, 173, 174, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 241, 242, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 283, 336, 338, 342, 351, 356, 402, 404, 405, 446, 466, 467, 471, 475, 476, 485, 489], "explicit": [4, 15, 16, 18, 280, 489], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 33, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 305, 377, 385, 473, 486], "addition": [4, 294], "timestep": [4, 72, 252, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 485, 486], "realli": 4, "huge": [4, 314, 474], "std": [4, 243, 276, 281, 322, 471, 492], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 470, 474, 476, 478, 479, 480, 481, 482, 484, 488, 489, 490], "unseen": 4, "extrins": 4, "wrong": [4, 110, 117], "bonus": 4, "denser": 4, "prior": [4, 73, 328, 381, 486], "freshli": 4, "drop": [4, 116, 118, 210, 277, 371, 389, 402], "meant": [4, 56, 153, 188, 336], "encourag": [4, 159, 323, 471, 472, 489], "measur": [4, 99, 103, 105, 109, 125, 130, 131, 145, 146, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 371, 389, 402, 404, 473, 479], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 33, 477], "ideal": [4, 224, 243, 402, 487], "distil": 4, "nois": [4, 278, 317, 324, 344, 390, 394, 395, 442, 461, 471, 485], "exploratori": [4, 369, 371, 386, 389, 402], "misalign": 4, "trade": [4, 477], "unavoid": 4, "bootstrap": [4, 379, 409, 410, 416, 417, 471, 474], "noisi": [4, 316, 317, 344, 466], "unstabl": [4, 109, 110, 303, 332, 333], "inher": [4, 369, 389], "stochast": [4, 195, 239, 297, 317, 318, 328, 370, 372, 375, 377, 378, 383, 385, 388, 390, 392, 466, 473, 477, 486], "enemi": 4, "pomdp": [4, 489], "loos": [4, 187, 359, 466, 472, 473], "nonexist": 4, "sequenc": [4, 15, 16, 18, 21, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 112, 113, 115, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 154, 155, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 201, 205, 217, 218, 219, 220, 221, 226, 227, 229, 230, 234, 236, 237, 240, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 259, 261, 263, 264, 265, 266, 268, 270, 276, 277, 286, 287, 294, 296, 300, 304, 305, 308, 311, 312, 313, 314, 320, 326, 330, 336, 338, 342, 350, 360, 361, 375, 402, 405, 428, 429, 442, 443, 444, 446, 447, 466, 471, 473, 474, 475, 484, 485, 486, 492], "lstm": [4, 262, 306, 307, 475], "rel": [4, 112, 262, 294, 331, 471, 472, 485, 486, 489], "tend": 4, "stabl": [4, 9, 10, 109, 110, 156], "compens": 4, "descent": [4, 317], "minimum": [4, 86, 129, 159, 168, 253, 297, 331, 332, 333, 362, 365, 368, 370, 372, 378, 387, 388, 392, 402, 405, 438, 467, 471, 473, 481, 485, 486], "manual": [4, 11, 22, 25, 27, 51, 63, 68, 69, 70, 79, 80, 112, 139, 140, 190, 197, 471, 474, 489], "deviat": [4, 243, 276, 277, 281, 283, 297, 310, 316, 317, 322, 323, 389, 394, 395, 405, 471, 477, 486], "radic": 4, "begin": [4, 15, 16, 18, 21, 22, 23, 25, 27, 110, 117, 215, 300, 301, 305, 306, 368, 437, 467, 475, 476, 477, 478, 479, 480, 481, 483], "stabil": [4, 109, 110, 235, 284, 369, 371, 386, 389, 391, 402], "stage": [4, 471, 487], "never": [4, 15, 16, 21, 29, 37, 86, 109, 110, 264, 304, 479, 491], "prevent": [4, 34, 35, 39, 40, 41, 44, 49, 52, 53, 54, 55, 60, 61, 68, 75, 101, 109, 110, 276, 277, 303, 332, 333, 369, 371, 386, 389, 391, 402, 445, 480, 489], "entir": [4, 15, 16, 18, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 277, 313, 473, 476, 487, 489], "submit": [4, 138, 216, 464, 491], "system": [4, 5, 97, 101, 180, 182, 185, 187, 196, 197, 198, 199, 405, 465, 473, 485, 486, 487], "adequ": [4, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 473, 485, 486], "infeas": 4, "allevi": [4, 466], "prune": [4, 147, 189], "fire": [4, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "illeg": 4, "chess": [4, 132, 157, 158], "grasp": 4, "wherein": 4, "cumul": [4, 43, 255, 261, 283, 415, 473], "q": [4, 9, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 289, 290, 291, 292, 295, 296, 298, 325, 326, 334, 349, 352, 356, 357, 370, 372, 373, 374, 376, 377, 378, 379, 384, 385, 390, 392, 394, 395, 407, 463, 471, 478, 483], "flow": [4, 409, 471, 473, 485, 486, 487, 489], "reparameter": [4, 294, 304, 312, 320], "soft": [4, 384, 392, 393, 485], "critic": [4, 8, 347, 353, 369, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 402, 471, 478], "clip": [4, 72, 222, 253, 369, 371, 386, 389, 391, 394, 395, 402, 447, 473, 486, 487], "oppos": [4, 84], "incorrect": [4, 117], "thought": [4, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "region": [4, 110], "squash": [4, 474, 491], "tanh": [4, 286, 287, 300, 301, 303, 305, 306, 308, 314, 331, 332, 333, 362, 473, 477, 485, 486, 487, 488], "prob": [4, 199, 304, 311, 312, 320, 323, 473, 486], "rememb": [4, 485], "remap": 4, "origin": [4, 8, 43, 62, 64, 65, 66, 71, 72, 78, 81, 85, 96, 97, 98, 143, 186, 195, 228, 229, 239, 247, 269, 274, 279, 300, 304, 336, 338, 342, 355, 358, 359, 370, 372, 384, 385, 387, 389, 390, 392, 394, 395, 402, 403, 405, 406, 471, 475, 483, 484, 487, 492], "world": [5, 153, 338, 342, 364, 381, 465, 475, 480, 485, 486, 487, 492], "histor": 5, "ceas": 5, "farama": [5, 148, 149, 161, 162, 473, 487], "gymwrapp": [5, 129, 132, 135, 139, 144, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 232, 256, 260, 275, 463, 473, 491], "feel": [5, 464, 481, 491], "free": [5, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 210, 227, 230, 304, 369, 381, 389, 468, 473, 481, 486, 491], "gladli": 5, "prepar": [6, 47, 183, 199, 405, 473], "conda": [6, 7, 464], "cmake": 6, "activ": [6, 7, 9, 51, 286, 287, 293, 297, 308, 313, 314, 371, 386, 389, 466, 487, 491], "sim": 6, "bullet": 6, "headless": [6, 7, 144, 193, 483], "cluster": [6, 7, 8, 22, 27, 464], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 141], "y": [6, 7, 43, 66, 70, 78, 156, 298, 313, 335, 336, 338, 342, 402, 405, 471, 486, 489], "facebookresearch": [6, 141], "subdirectori": 6, "verbos": [6, 29, 30, 99, 187, 404, 481, 483], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 249, 258, 279, 336, 338, 342, 387, 402, 403, 404, 405, 406, 485, 486, 491, 492], "command": [6, 7, 10, 163, 169, 170, 473, 483, 485, 486, 487, 492], "readm": [6, 7, 173, 491], "md": [6, 7], "habitatenv": [6, 463], "_has_habitat": 6, "available_env": [6, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 151, 152, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 185, 188, 189, 190, 492], "startswith": [6, 285, 467, 471, 478], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 136, 387, 471], "env_nam": [6, 129, 130, 132, 133, 135, 136, 138, 139, 141, 145, 147, 148, 154, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 471, 473, 492], "llvmlite": 6, "config": [6, 7, 247, 274, 288, 293, 322, 451, 452, 453, 455, 458], "var": [6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 277, 279, 336, 338, 342, 372, 387, 392, 402, 404, 405], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 351, 370, 372, 378, 385, 387, 390, 392, 394, 395, 410, 411, 412], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 36, 39, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 372, 387, 392, 402, 404, 405, 475, 489], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 475], "stand": [7, 46, 133, 134, 159, 168, 484, 487], "joint": [7, 472], "contact": [7, 65, 485], "engin": [7, 165, 339, 404, 465, 483, 487], "biomechan": 7, "graphic": 7, "anim": [7, 486], "area": 7, "demand": [7, 480, 492], "fast": [7, 9, 104, 130, 131, 210, 250, 390, 471, 472, 473, 491], "articul": 7, "acquir": [7, 473], "deepmind": [7, 8, 9, 129, 132, 133, 134, 135, 139, 147, 151, 152, 157, 158, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 231, 473, 476], "whomev": 7, "licenc": 7, "incorpor": [7, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 299, 324, 394, 474, 477, 487], "relianc": 7, "obsolet": 7, "legaci": [7, 32], "pro": [7, 464], "tip": [7, 464], "glfw": [7, 471], "osmesa": 7, "egl": 7, "advic": [7, 492], "sudo": [7, 464], "apt": [7, 486], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 147, 189, 347, 348, 349], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 467, 471, 473, 474, 485, 486, 489], "roboti": 7, "html": [7, 15, 16, 154, 156, 157, 158, 483], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 15, 16, 21, 159, 168], "mjkei": 7, "txt": [7, 199, 405], "mjlib_path": 7, "home": [7, 62, 64, 84, 95], "bin": [7, 296, 323, 352, 466], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 109, 110, 292, 355, 359, 471, 473, 475, 489], "nvidia": [7, 143, 475], "older": [7, 280], "hack": [7, 471], "adatp": 7, "script": [7, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 437, 457, 461, 465, 466, 467, 468, 471, 472, 475, 480, 485, 486, 487, 489], "unnot": [7, 248], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 101, 472, 489], "troubleshoot": 7, "gl": 7, "h": [7, 112, 219, 221, 226, 251, 265, 300, 301, 302, 305, 306, 307, 310, 429, 472, 489], "eglshim": 7, "fatal": 7, "No": [7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 34, 35, 39, 44, 54, 55, 60, 61], "directori": [7, 62, 64, 71, 84, 85, 96, 97, 98, 103, 186, 403, 406, 434, 436, 465, 467, 468, 471, 477, 480, 485], "devel": 7, "ubuntu": [7, 143], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 472, 474, 484], "libstdc": 7, "glibcxx_3": 7, "29": [7, 117, 118], "compil": [7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 99, 102, 103, 104, 105, 106, 110, 113, 117, 118, 119, 124, 125, 127, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 280, 300, 301, 305, 306, 332, 336, 338, 342, 402, 404, 405, 409], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 15, 16, 18, 21, 24, 29, 36, 39, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 242, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405, 467, 492], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 117, 130, 131], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 485, 486], "global": [7, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 99, 112, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 267, 279, 325, 334, 336, 338, 340, 342, 355, 359, 402, 404, 405, 407, 468, 471, 485, 486], "cuda_visible_devic": 7, "id": [7, 14, 17, 19, 20, 24, 26, 32, 72, 85, 110, 112, 117, 118, 129, 132, 135, 138, 139, 147, 159, 160, 163, 168, 169, 170, 171, 172, 180, 181, 182, 185, 187, 188, 189, 190, 324, 372, 390, 432, 436, 479, 489], "slurm_step_gpu": 7, "black": [7, 132, 485], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 486], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "nonetyp": [7, 14, 17, 19, 20, 24, 26, 31], "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 468], "n_training_step": 8, "datapoint": [8, 84, 489], "n_data_per_train": 8, "no_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 279, 284, 300, 301, 305, 306, 336, 338, 342, 402, 404, 405, 409, 410, 411, 412, 473, 474, 475, 486], "loss_fn": [8, 474, 478, 479, 491], "zero_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 323, 336, 338, 342, 402, 404, 405, 468, 471, 473, 474, 475, 478, 481, 485, 486, 487], "backpropag": [8, 130, 131, 145, 146, 159, 369, 370, 371, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 405, 407, 478, 486, 487], "differenti": [8, 84, 130, 131, 195, 239, 372, 394, 409, 410, 411, 412, 474, 477, 478, 485, 486, 487], "denomin": 8, "artifact": 8, "numer": [8, 70, 109, 110, 139, 190, 276, 303, 332, 333, 346, 351, 352, 355, 356, 357, 358, 359, 445, 473, 489, 492], "misconcept": 8, "freed": 8, "appear": [8, 11, 37, 60, 85, 86, 110, 117, 118, 135, 188, 194, 467, 487, 489], "compuat": 8, "fix": [8, 42, 159, 262, 370, 372, 388, 392, 472, 481, 487, 492], "retain_graph": [8, 130, 131], "discuss": [8, 9, 479, 485, 486], "inplac": [8, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 358, 402, 403, 404, 405, 406, 471], "forward": [8, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 99, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 243, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 313, 314, 315, 316, 318, 319, 322, 324, 325, 327, 328, 330, 334, 335, 336, 338, 342, 350, 352, 354, 355, 357, 358, 359, 362, 363, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 409, 410, 411, 412, 413, 463, 467, 474, 487, 491], "submodul": [8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 262, 279, 302, 307, 336, 338, 342, 366, 387, 402, 404, 405], "param": [8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 232, 239, 241, 249, 250, 256, 260, 266, 268, 270, 277, 279, 294, 296, 313, 314, 315, 331, 336, 338, 342, 350, 355, 358, 361, 387, 397, 401, 402, 404, 405, 409, 410, 411, 412, 413, 471, 475, 481, 485, 486, 487, 488, 491], "grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 359, 402, 404, 405, 471, 473], "whose": [8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 325, 336, 338, 342, 358, 402, 404, 405], "fit": [8, 67, 243, 262, 280, 467, 468, 471], "brax": [8, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 250, 476, 492], "jax": [8, 130, 131, 145, 146, 280], "improperli": 8, "underli": [8, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 387, 474, 476, 478, 480, 487], "tedeiou": 8, "priorit": [8, 63, 79, 109, 110, 372, 373, 374, 376, 377, 378, 385, 390, 392, 394, 395, 471, 472, 479, 491], "amount": [8, 159, 324, 409, 472, 489], "costli": [8, 487], "constitut": [8, 472, 486, 487], "profil": 8, "frequent": [8, 51, 489], "program": [8, 377, 385, 475, 492], "functorch": [8, 10], "incl": 8, "suit": [8, 134, 473, 476, 491, 492], "mujoco_instal": 8, "valueerror": [8, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 116, 245, 265, 475, 491, 492], "idea": [9, 109, 110, 390, 468, 474, 477, 485, 486], "introductori": 9, "intro": [9, 473, 474], "dai": [9, 491], "2022": [9, 10, 284, 491], "spin": [9, 133, 134], "hug": [9, 338, 342], "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 477], "summari": [9, 243, 276, 277, 471, 472, 473, 474], "reddit": 9, "reagent": 9, "orient": [9, 492], "baselines3": 9, "tf": 9, "bandit": [9, 156], "tensorflow": [9, 311, 312], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 475, 481], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 491], "grade": 9, "factori": [9, 15, 16, 18, 21, 22, 23, 25, 27, 68, 70, 79, 80, 81, 83, 471], "cherri": 9, "jaxrl": 9, "mbrl": [9, 153, 466], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 473, 474, 485, 486], "notebook": [10, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "24": [10, 118, 138, 154, 155, 182, 323, 354, 429, 485], "pip3": [10, 471, 473, 474, 485, 486], "url": [10, 96, 141, 483], "org": [10, 15, 16, 33, 63, 109, 110, 130, 131, 133, 134, 141, 145, 146, 151, 152, 154, 155, 156, 165, 173, 174, 219, 247, 272, 282, 288, 289, 290, 291, 292, 293, 296, 297, 298, 305, 310, 311, 312, 317, 318, 319, 323, 324, 325, 327, 328, 334, 352, 369, 370, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 392, 393, 394, 409, 414, 422, 462, 482, 488], "whl": 10, "u": [10, 300, 301, 305, 306, 487], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 219, 473, 485, 486, 487, 489], "power": [11, 472], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 256, 463], "ultim": [11, 303, 332, 333], "ffmpeg": 11, "whatev": [11, 467, 471], "fed": [11, 180, 486, 489], "feed": [11, 247, 274, 387, 402, 405, 466, 471, 485, 486, 489], "suppos": [11, 159, 442, 468, 492], "snippet": [11, 247, 272, 471], "gave": 11, "extrem": [11, 159, 168, 369, 371, 386, 389, 391, 402], "blurri": [11, 475], "stitch": 11, "exp_nam": [11, 429, 430, 431, 434, 435, 436, 457, 472, 480, 481], "my_exp": [11, 480], "pixels_onli": [11, 133, 134, 138, 140, 141, 165, 471, 472, 480, 481, 491, 492], "my_video": [11, 480], "record_env": [11, 480, 481], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 349, 389, 466], "allow_non": 12, "unwrap": [12, 231, 269, 437], "seealso": 12, "timeout": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 159, 193, 196, 198], "close_env": [13, 15, 16, 18, 21, 22, 23, 25, 29], "shutdown": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 163, 169, 216, 471, 472, 489, 491], "init_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "kwarg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 53, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 117, 118, 119, 121, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 213, 214, 216, 223, 247, 249, 258, 262, 267, 268, 269, 271, 273, 274, 276, 278, 279, 281, 283, 285, 286, 287, 289, 290, 291, 292, 295, 298, 299, 302, 303, 307, 308, 309, 310, 313, 314, 315, 320, 324, 333, 335, 336, 337, 338, 339, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 427, 429, 433, 434, 436, 440, 447, 452, 453, 458, 459, 460, 467, 473, 475, 486], "init": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 68, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 268, 276, 279, 313, 314, 315, 336, 338, 342, 402, 404, 405, 409, 436, 465, 472, 473], "implic": [13, 22, 23, 25], "notimplementederror": [13, 22, 23, 25, 85, 471], "subclass": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 40, 43, 48, 66, 67, 73, 78, 86, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 214, 215, 268, 275, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 358, 359, 360, 362, 365, 387, 389, 465, 472, 474, 479, 487, 489], "policy_or_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 43, 66, 78, 218, 335, 336, 338, 342, 351, 354, 356, 402, 405, 474], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "upload": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "transfer": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 359], "extract": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 75, 110, 193, 201, 215, 237, 266, 270, 353, 471, 473, 491], "Will": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 110, 117, 154, 429], "_get_server_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "typeerror": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "weight_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 465, 472], "overwritten": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 234, 338, 342], "localweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "remoteweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "get_server_weight": 14, "policy_weight": [14, 17, 19, 24, 26], "design": [14, 24, 26, 36, 43, 48, 56, 58, 60, 66, 67, 73, 78, 99, 115, 121, 128, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 219, 237, 248, 267, 269, 277, 279, 336, 338, 342, 350, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 395, 402, 404, 405, 407, 463, 465, 471, 472, 473, 474, 476, 477, 478, 483, 484, 485, 486, 487, 489, 491, 492], "date": [14, 17, 132, 218, 432], "datacollectorbas": [14, 15, 17, 19, 20, 23, 24, 26, 31, 355, 359, 449, 452, 453, 457, 463], "all_worker_id": [14, 17, 19, 20, 24, 26, 31], "scope": [14, 17, 19, 20, 24, 26, 31, 85, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 475, 492], "classmethod": [14, 17, 19, 20, 24, 26, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 112, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 237, 272, 280, 287, 288, 322, 403, 406], "from_polici": [14, 17, 19, 20, 24, 26, 31], "increment_vers": [14, 17, 19, 20, 24, 26, 29, 30, 31, 197], "increment": [14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190, 197, 243, 386, 465], "post_hook": [14, 17, 19, 20, 24, 26, 31], "push_weight": [14, 17, 19, 20, 24, 26, 31], "noth": [14, 17, 19, 20, 24, 26, 31, 51, 147, 189, 471, 473], "register_collector": [14, 17, 19, 20, 24, 26, 31], "register_post_hook": [14, 17, 19, 20, 24, 26, 31], "create_env_fn": [15, 16, 18, 21, 22, 23, 25, 27, 136, 159, 168, 471, 491], "policy_factori": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "device_typ": [15, 18, 21, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 247, 272, 274, 286, 287, 288, 289, 290, 291, 292, 298, 308, 313, 314, 316, 317, 322, 325, 358, 444, 455], "env_devic": [15, 16, 18, 21, 22, 23, 25, 27, 472], "create_env_kwarg": [15, 16, 18, 21, 27, 136, 154, 159, 168, 267, 471, 492], "collector_class": [15, 16, 22, 23, 25, 26, 27], "postproc": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 252, 472, 489], "explorationtyp": [15, 16, 18, 21, 22, 23, 25, 27, 355, 387, 442, 466, 471, 472, 473, 474, 477, 485, 491], "interactiontyp": [15, 18, 21, 22, 23, 25, 27, 177, 208, 355, 359, 442], "preemptive_threshold": [15, 16, 21], "num_thread": [15, 16, 21, 62, 64, 71, 85, 96, 97, 98, 139, 159, 168, 186, 190, 403, 406], "num_sub_thread": [15, 16, 21, 159, 168], "str": [15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 101, 103, 104, 106, 109, 110, 112, 123, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 145, 147, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 211, 215, 219, 231, 237, 238, 239, 247, 251, 260, 261, 264, 266, 267, 269, 270, 272, 274, 275, 276, 279, 280, 283, 295, 296, 302, 307, 309, 310, 311, 313, 314, 315, 325, 326, 334, 336, 338, 339, 340, 342, 346, 351, 352, 355, 356, 357, 358, 359, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 461, 472, 473, 475, 483], "set_trunc": [15, 16, 18, 21, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "use_buff": [15, 16, 18, 159, 168], "extend_buff": [15, 16, 18], "replay_buffer_chunk": 15, "trust_polici": [15, 16, 18, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "compile_polici": [15, 16, 18], "cudagraph_polici": [15, 16, 18], "no_cuda_sync": [15, 16, 18], "datacollector": [15, 16, 18, 21, 27, 29, 30, 56, 389, 473, 479, 489], "recept": 15, "safe": [15, 16, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 110, 117, 186, 281, 324, 331, 332, 346, 351, 352, 355, 356, 357, 358, 359, 361, 403, 406, 466, 491], "sota": [15, 16, 153, 235, 391, 438, 452, 465, 471, 472, 491], "guard": [15, 16], "doc": [15, 16, 81, 141, 144, 145, 146, 156, 165, 436, 467, 472, 485, 486, 489], "env_mak": [15, 16, 18, 27, 68, 129, 457, 492], "2000": [15, 16, 18, 56, 84, 142, 323, 429, 489], "50": [15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 72, 74, 75, 83, 86, 87, 88, 89, 90, 99, 117, 118, 151, 152, 279, 474, 489], "del": [15, 16, 18, 29, 471, 472, 473, 484, 485, 489, 491, 492], "int64": [15, 16, 18, 29, 32, 34, 35, 39, 44, 45, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 71, 72, 76, 79, 81, 84, 85, 95, 96, 97, 98, 109, 117, 129, 132, 135, 139, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 194, 212, 216, 224, 231, 245, 252, 260, 296, 324, 326, 351, 352, 355, 356, 357, 403, 406, 466, 487], "undergon": [15, 16, 18, 21, 22, 23, 25, 27, 84], "env_obs_kei": [15, 16, 18, 21, 22, 23, 25, 27], "mustn": [15, 16, 18, 21, 22, 23, 25, 27], "pickl": [15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 336, 338, 342, 402, 404, 405], "exclus": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 70, 79, 80, 91, 92, 110, 117, 118, 192, 216, 232, 234, 300, 302, 305, 307, 311, 312, 339, 351, 352, 356, 357, 393, 394, 395, 409, 410, 411, 412, 413, 436, 461, 466], "lifespan": [15, 16, 18, 21, 22, 23, 25, 29, 30, 472], "divis": [15, 16, 18, 21, 22, 23, 25, 36, 110, 117, 118, 277, 282, 486], "endless": [15, 16, 18, 21, 22, 23, 25, 194], "sit": [15, 16, 18, 21, 22, 23, 25, 27, 449, 472], "cast": [15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 154, 155, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 238, 239, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 336, 338, 342, 358, 371, 386, 389, 402, 403, 404, 405, 406, 485, 492], "deriv": [15, 16, 22, 23, 25, 27, 82, 294, 447], "span": [15, 16, 18, 21, 22, 23, 25, 27, 110, 117, 118], "n_step": [15, 16, 18, 21, 22, 23, 25, 27, 56, 279, 354, 472, 473, 485, 486], "mainli": [15, 16, 18, 21, 22, 23, 25, 27, 72, 181, 182, 185, 436, 466, 485, 486, 487], "round": [15, 16, 18, 21, 22, 23, 25, 27, 132, 180], "closest": [15, 16, 18, 21, 22, 23, 25, 27], "boolm": [15, 16, 21], "ratio": [15, 16, 21, 72, 371, 389, 471, 473], "finish": [15, 16, 18, 21, 27, 29, 139, 190, 252, 492], "earli": [15, 16, 21, 56, 109, 110, 139, 190, 260, 491], "safeti": [15, 16, 21, 153, 159, 168, 277, 483], "harm": [15, 16, 21, 159, 168], "add_truncated_kei": [15, 16, 18, 21, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269], "trust": [15, 16, 18, 129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 225, 307], "cudagraphmodul": [15, 16, 18, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "behaviour": [15, 16, 18, 43, 66, 78, 336, 338, 342, 402, 405, 474, 475, 491], "bypass": [15, 16, 18, 477], "isaaclab": [15, 16, 18, 140, 144], "maniskil": [15, 16, 18], "crash": [15, 16, 18, 252], "multiprocessedweightupdat": [15, 16], "ordereddict": [15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 276, 277, 279, 336, 338, 342, 372, 392, 402, 404, 405], "worker0": [15, 16, 21], "state_dict0": [15, 16, 21], "worker1": [15, 16, 21], "state_dict1": [15, 16, 21], "reset_idx": [15, 16, 21], "static_se": [15, 16, 18, 21, 27, 29, 30, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269], "env_fn": [15, 16, 18, 21, 29, 30, 136, 459, 460], "env_fn_parallel": [15, 16, 18, 21, 29, 30], "300": [15, 16, 18, 21, 29, 30, 117, 118, 291, 292], "out_se": [15, 16, 18, 21, 29, 30, 492], "irrevers": [15, 16, 21], "pipe": [15, 16, 18, 21, 29, 159], "tqdm": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 112, 447, 471, 473, 474, 485, 486, 487], "ale_pi": [15, 16, 18, 21, 29, 475], "10000": [15, 16, 21, 27, 159, 282, 447, 474], "progress": [15, 16, 18, 21, 29, 30, 440, 441, 442, 447, 468, 472, 474, 492], "bar": [15, 16, 18, 21, 29, 103, 105, 125, 350, 440, 441, 442, 447, 468, 472], "pbar": [15, 16, 18, 21, 29, 471, 473, 474, 485, 486, 487], "100_000": [15, 16, 18, 21, 29, 475, 481], "prec_wc": [15, 16, 18, 21, 29], "wc": [15, 16, 18, 21, 29], "write_count": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 99, 112], "set_descript": [15, 16, 18, 21, 29, 471, 473, 474, 485, 486, 487], "remote_collector": [17, 27], "max_interv": 17, "leverag": [17, 27, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 471, 486, 492], "_maybe_map_weight": [17, 20, 24, 26, 31], "_sync_weights_with_work": [17, 20, 24, 26, 31], "_skip_upd": 17, "interv": [17, 212, 264, 428, 429, 439, 449, 472, 487], "raycollector": [17, 68, 463], "return_same_td": 18, "interruptor": 18, "cautious": [18, 389], "whole": [18, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 84, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 355, 372, 392, 402, 404, 405, 438, 471, 473], "_interruptor": 18, "outsid": [18, 228, 267, 467, 480, 485, 486, 487], "start_collect": 18, "stop_collect": 18, "preeptiv": 18, "chunk": [18, 29, 30, 99, 477], "policy_state_dict": [18, 29, 30], "env_state_dict": [18, 29, 30], "256": [18, 29, 95, 151, 152, 237, 293, 472, 473, 475, 485, 486], "weight_gett": 19, "vanillaweightsend": 19, "fetch": [19, 62, 64, 71, 85, 96, 97, 98, 130, 131, 133, 134, 186, 195, 239, 403, 406, 477, 488, 489], "sender": 19, "update_weight": [19, 24, 26, 449], "piec": [20, 102, 113, 124, 127, 128, 471, 472, 473, 480, 485, 486, 487, 489], "scheme": [20, 468, 492], "_push_weight": 20, "unchang": [20, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 229, 247, 262, 268, 269, 272, 274, 279, 299, 336, 338, 342, 358, 402, 404, 405, 429, 444, 471, 489], "__call__": [20, 36, 43, 48, 56, 65, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 359, 402, 404, 405, 468], "proxi": [20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 186, 312, 320, 355, 403, 406, 467], "weakref": [20, 51, 85], "registr": [20, 472], "exporationtyp": [22, 23, 25], "collector_kwarg": [22, 23, 25, 27], "num_workers_per_collector": [22, 23, 25, 27], "slurm_kwarg": [22, 23, 25], "update_after_each_batch": [22, 23, 25, 27], "max_weight_update_interv": [22, 23, 25, 27], "tcp_port": [22, 23, 25, 28], "respect": [22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 217, 223, 227, 230, 241, 247, 248, 257, 262, 268, 269, 272, 274, 279, 300, 304, 305, 313, 328, 336, 338, 342, 358, 363, 369, 371, 386, 389, 391, 402, 404, 405, 409, 411, 412, 443, 467, 473, 474, 485, 486], "subnod": [22, 23, 25, 27], "readi": [22, 25, 27, 29, 30, 464, 472, 473, 475, 477, 480, 489, 491], "fashion": [22, 25, 27, 62, 64, 71, 85, 96, 97, 98, 118, 186, 403, 406], "distributed_back": [22, 23], "ucc": [22, 23], "submitit_delai": [22, 28], "former": [22, 23, 25, 32, 36, 43, 48, 63, 66, 67, 70, 73, 78, 79, 80, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365, 471], "whilst": [22, 23, 25], "homonym": [22, 23, 25, 487], "visit": [22, 23, 25, 85, 185], "facebookincub": [22, 23, 25], "tcp": [22, 23, 25, 28], "port": [22, 23, 25, 28, 31, 171, 340], "10003": [22, 23, 25, 28], "distributedweightupdat": 22, "liter": [23, 85, 96, 97, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 192, 194, 197, 338, 342, 345, 405], "update_interv": 23, "frequenc": [23, 323, 471], "restart": 24, "rank": [24, 123, 283, 340, 341], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 32, 60, 355, 359], "tensorpiperpcbackendopt": 25, "rpcweightupdat": 25, "collector_info": 26, "collector_rref": 26, "ray_init_config": [27, 30, 68], "remote_config": [27, 29, 30, 63, 68, 69, 70, 79, 80, 112], "num_collector": [27, 459, 460, 471, 472], "coordin": [27, 226], "autodetect": 27, "num_cpu": [27, 68], "num_gpu": [27, 68], "1024": [27, 68, 293, 489], "equat": [27, 66, 85, 139, 190, 276, 277, 324, 368, 371, 393, 402, 473, 476, 487], "exce": [27, 489], "indefinit": [27, 94], "rayreplaybuff": [27, 63, 69, 70, 79, 80, 112, 463], "enfoc": 27, "rayweightupdat": 27, "distributed_collector": [27, 68], "add_collector": 27, "local_polici": 27, "stop_remote_collector": 27, "num_job": 28, "tcpport": 28, "submitit_main_conf": 28, "slurm_cpus_per_task": 28, "slurm_gpus_per_nod": 28, "slurm_partit": 28, "timeout_min": 28, "submitit_collection_conf": 28, "delai": [28, 394, 478], "jump": [28, 476], "host": [28, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "satellit": 28, "rendezv": 28, "hang": 28, "forev": 28, "default_config": [28, 288, 293, 322, 350], "default_slurm_conf_main": 28, "default_slurm_conf": 28, "dialog_turns_per_batch": [29, 30], "yield_only_last_step": [29, 30], "yield_completed_trajectori": [29, 30], "total_dialog_turn": [29, 30, 99], "async_env": [29, 30], "flatten_data": [29, 30], "queue": [29, 163, 276, 404, 489, 491], "track_policy_vers": [29, 30, 197, 465], "policyvers": [29, 30, 465], "simplifi": [29, 63, 207, 477, 487, 489], "mediat": 29, "vllm": [29, 31, 188, 337, 338, 339, 340, 341, 342, 483], "vllmwrapper": [29, 180, 188, 338], "mocking_class": [29, 267], "dummystrdataload": 29, "llmenv": [29, 183, 191, 194, 342], "llm_model": 29, "gpt2": [29, 65, 72, 81, 84, 147, 189, 288, 293, 322, 338, 342], "get_token": 29, "pad_token": [29, 65, 81, 199, 405], "eos_token": [29, 65, 184, 199, 405], "from_dataload": [29, 188, 194], "from_text": [29, 180, 188, 194, 199, 338, 342, 405], "group_repeat": [29, 181, 182, 185, 188, 191, 194], "attention_mask": [29, 62, 64, 65, 71, 72, 81, 84, 95, 98, 188, 338, 342], "text": [29, 65, 72, 81, 96, 98, 99, 147, 180, 181, 182, 184, 185, 187, 188, 189, 196, 198, 199, 300, 301, 305, 306, 324, 338, 342, 404, 405, 465, 473, 483], "nontensorstack": [29, 51, 58, 104, 129, 132, 147, 180, 182, 185, 189, 194, 201, 237, 266, 270, 342], "plsgqejeyd": 29, "text_respons": [29, 98, 180, 182, 184, 185, 187, 188, 190, 196, 198, 199, 338, 342, 405, 465, 483], "ec": 29, "tjbjz3perwhz": 29, "tokens_respons": [29, 98, 188, 338, 342], "as_remot": [29, 30, 63, 68, 69, 70, 79, 80, 112], "cl": [29, 30, 63, 68, 69, 70, 79, 80, 112, 472], "quantiti": [29, 30, 63, 68, 69, 70, 79, 80, 112], "reserv": [29, 30, 63, 68, 69, 70, 79, 80, 112, 468], "alia": [29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 99, 103, 104, 105, 106, 112, 119, 121, 125, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 394, 395, 402, 404, 405, 407, 413], "get_policy_model": [29, 30], "rayllmcollector": [29, 463, 465], "get_policy_vers": [29, 30], "uuid": [29, 30, 197, 432, 472, 492], "disabl": [29, 30, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 303, 333, 336, 338, 342, 402, 404, 405, 427, 471, 485, 486], "is_initi": [29, 30], "policy_vers": [29, 30, 197, 465], "sync_it": 30, "lightweight": [30, 475, 480], "dialog": [30, 99], "yeild": 30, "block": [30, 95, 102, 128, 144, 185, 187, 198, 465, 466, 471, 474, 475, 478, 479, 485, 489], "idl": [30, 159], "somehwat": 30, "master_address": [31, 340], "master_port": [31, 340], "model_metadata": 31, "vllm_tp_size": 31, "master": [31, 33, 340, 485, 486], "localhost": [31, 171, 340], "Not": [31, 52, 53, 70, 130, 131, 145, 267, 302, 307], "get_model_metadata": 31, "transformerswrapp": [31, 180, 199, 342, 405], "rollout_tensordict": 32, "nestedkei": [32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 66, 71, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 110, 117, 118, 129, 132, 135, 139, 147, 159, 160, 163, 164, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 199, 201, 205, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 276, 277, 279, 281, 285, 296, 299, 324, 326, 350, 354, 359, 374, 403, 404, 406, 407, 427, 429], "as_nest": 32, "x": [32, 43, 56, 66, 67, 70, 72, 73, 78, 118, 147, 189, 199, 237, 239, 265, 270, 280, 282, 284, 285, 287, 296, 298, 300, 301, 302, 305, 306, 307, 308, 310, 313, 314, 335, 336, 338, 342, 351, 355, 356, 365, 368, 402, 405, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 447, 465, 471, 475, 485, 487, 489, 491], "durat": [32, 486], "meta": [32, 62, 64, 71, 83, 85, 96, 97, 98, 137, 141, 186, 369, 371, 386, 389, 391, 403, 406, 468, 473, 485, 486, 489], "aren": [32, 261, 474], "eventu": [32, 325, 474, 487], "recov": [32, 117, 118, 360, 377, 385, 484], "layout": 32, "to_padded_tensor": 32, "nested_tensor": [32, 138, 140], "stride": [32, 36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 286, 287, 289, 290, 298, 313, 336, 338, 342, 402, 404, 405, 472, 485, 491], "jag": 32, "focu": [32, 471, 472, 473, 475, 477, 478, 479, 485], "team": [32, 485, 486, 491], "cat": [32, 51, 194, 363, 370, 372, 373, 385, 390, 392, 394, 395, 485, 489, 491], "arang": [32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 110, 117, 118, 212, 296, 311, 312, 351, 438, 466, 489], "obs_": 32, "trajectory_id": 32, "int32": [32, 36, 37, 51, 80, 86, 117, 145, 146, 157, 158, 170, 204, 354], "data_split": 32, "got": [32, 479], "init_kl_coef": 33, "horizon": [33, 151, 152, 173, 174, 283, 310, 473], "kl": [33, 42, 72, 195, 199, 239, 381, 386, 402, 405], "describ": [33, 62, 64, 71, 83, 85, 96, 97, 98, 164, 186, 220, 331, 332, 374, 403, 406, 432, 467, 471, 473, 485, 486, 487, 492], "ziegler": 33, "et": [33, 283], "relax": [33, 427], "penalti": [33, 72, 192, 383, 386], "strai": [33, 72], "greater": [33, 110, 117, 118, 224, 240, 241, 302, 307, 372, 471, 472], "increas": [33, 101, 219, 263, 284, 324, 371, 389, 402, 405, 485, 486], "pull": [33, 51, 85, 181, 489], "toward": [33, 109, 110, 274], "aggress": [33, 109, 110, 405], "kl_coef": [33, 42, 72], "arxiv": [33, 63, 109, 110, 130, 131, 133, 134, 145, 146, 151, 152, 154, 155, 165, 173, 174, 219, 247, 272, 282, 288, 289, 290, 291, 292, 293, 296, 297, 298, 305, 310, 317, 318, 319, 323, 324, 325, 327, 328, 334, 352, 369, 370, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 392, 393, 394, 409, 414, 422, 488], "pdf": [33, 219, 288, 289, 290, 291, 292, 296, 323, 324, 352, 372, 379, 383, 390, 393, 394, 409, 414, 422], "1909": 33, "08593": 33, "lm": 33, "blob": 33, "lm_human_prefer": 33, "train_polici": 33, "kl_valu": 33, "coef": [33, 195, 239, 371, 386, 389], "newest": 33, "int8": [34, 135, 150, 161, 162, 217], "encod": [34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 130, 131, 135, 138, 139, 140, 141, 144, 145, 146, 154, 155, 157, 158, 165, 171, 172, 180, 190, 212, 229, 319, 320, 323, 327, 338, 342, 368, 472, 473, 474, 477, 487, 489], "null": [34, 37, 38, 40, 41, 43, 49, 50, 58, 59, 63, 74, 75, 79, 83, 86, 87, 88, 89, 90, 180, 188, 217, 237], "denot": [34, 486], "clariti": [34, 51], "assert_is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "cardin": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 296, 326, 351, 352, 357, 473], "outcom": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 294, 311, 312, 331, 387, 402, 405, 485], "cartesian": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "clear_device_": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 492], "np": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 139, 190, 275, 362, 427, 475, 485, 487], "ndarrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 139, 190, 324, 362, 427, 475, 485], "ignore_devic": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "arrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 72, 74, 75, 83, 86, 87, 88, 89, 90, 109, 129, 132, 135, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 194, 231, 300, 301, 305, 306, 471, 485], "use_mask": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 161, 162], "erase_memoize_cach": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "memoiz": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 139, 190], "memoize_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "compliant": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "singleton": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 187, 286, 287, 308, 329, 330, 463, 467, 483], "start_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "end_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "implements_for_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "torch_funct": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "index_typ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 58, 59, 74, 75, 83, 86, 87, 88, 89, 90], "tensor_to_index": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "exanpl": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 296, 312, 326], "categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 355], "to_categorical_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_categor": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "make_neg_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "convert": [34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 129, 130, 131, 132, 135, 138, 139, 140, 141, 144, 145, 146, 147, 154, 155, 157, 158, 159, 160, 163, 165, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 227, 230, 247, 262, 268, 269, 272, 274, 276, 277, 279, 336, 338, 342, 358, 368, 387, 402, 403, 404, 405, 406, 471, 472, 473, 487, 489], "shortcut": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 487, 492], "ndimens": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 471], "violat": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 466], "project": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 74, 75, 83, 86, 87, 88, 89, 90, 229, 281, 305, 324, 346, 351, 352, 355, 356, 357, 358, 359, 436, 466, 491, 492], "uniformli": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 109, 110, 111, 387, 402, 405, 492], "normal": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 69, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 243, 276, 277, 281, 282, 286, 287, 303, 308, 311, 312, 332, 333, 355, 359, 371, 372, 386, 389, 404, 405, 442, 445, 461, 466, 468, 474, 477, 486, 492], "drawn": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 262, 299, 355, 359, 473, 485, 486], "set_provisional_n": [34, 35, 39, 44, 52, 53], "temporarili": [34, 35, 39, 44, 52, 53, 101, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 479, 489], "dest": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 247, 272, 274, 358], "to_numpi": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "transformed_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 269, 331, 461], "check_spec_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_one_hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 130, 131, 138, 140, 141, 144, 145, 146, 151, 152, 154, 155, 157, 158, 161, 162, 165, 171, 172, 173, 174, 212, 229, 296, 320, 321, 326, 351, 352, 356, 357, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 474], "categ_sampl": [34, 35, 39, 44, 54, 55, 60, 61], "onehot_sampl": [34, 35, 39, 44, 54, 55], "to_one_hot_spec": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "categoricalbox": [34, 35, 39, 44, 54, 55, 60, 61, 160], "type_check": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "update_mask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "unmask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 311], "ts": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "num_bit": 36, "convert_to_binari": 36, "decim": 36, "1001": 36, "bit": [36, 237, 473, 474, 476, 485, 486, 489], "heavysid": 36, "binary_to_decim": 36, "add_modul": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "fn": [36, 43, 48, 56, 65, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 270, 279, 336, 338, 342, 402, 404, 405, 459, 460], "recurs": [36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 91, 92, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405, 475], "init_weight": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "m": [36, 43, 48, 52, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 229, 279, 285, 336, 338, 342, 359, 402, 404, 405, 472, 487], "fill_": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 472, 474], "net": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 290, 292, 295, 298, 314, 336, 338, 342, 369, 370, 372, 378, 385, 389, 390, 391, 392, 402, 404, 405, 457, 472, 487, 488, 491], "in_featur": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 286, 287, 289, 290, 291, 292, 298, 308, 313, 314, 316, 317, 336, 338, 342, 347, 358, 366, 374, 376, 402, 404, 405, 475, 477, 478], "out_featur": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 153, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 283, 286, 287, 289, 290, 291, 292, 297, 298, 302, 307, 308, 310, 313, 314, 316, 317, 336, 338, 342, 347, 351, 358, 366, 374, 376, 402, 404, 405, 466, 471, 474, 475, 477, 478, 481, 491], "bia": [36, 43, 48, 56, 66, 67, 73, 78, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 237, 247, 262, 267, 268, 269, 272, 274, 279, 282, 286, 287, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 314, 316, 317, 324, 336, 338, 342, 358, 365, 367, 368, 372, 387, 392, 402, 404, 405, 467, 471, 472, 473, 474, 486], "requires_grad": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 130, 131, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 267, 269, 279, 323, 336, 338, 342, 359, 372, 392, 402, 404, 405], "bfloat16": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "datatyp": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 489], "member": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405, 429], "xdoctest": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 237, 247, 262, 267, 268, 269, 272, 274, 279, 336, 338, 342, 358, 372, 387, 392, 402, 404, 405], "buf": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "20l": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405], "1l": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405], "5l": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405], "doubl": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 227, 228, 230, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 374, 379, 384, 390, 393, 402, 404, 405, 407, 471, 472, 473, 474, 492], "eval": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 276, 279, 284, 336, 338, 342, 371, 389, 402, 404, 405, 466, 471, 472, 473], "evalu": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 140, 147, 151, 152, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 224, 269, 279, 284, 294, 311, 312, 320, 333, 336, 338, 342, 390, 402, 404, 405, 452, 453, 472, 473, 481], "dropout": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 284, 285, 300, 302, 305, 307, 308, 336, 338, 342, 402, 404, 405, 466, 474], "batchnorm": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 282, 336, 338, 342, 402, 404, 405], "comparison": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 269, 279, 336, 338, 342, 387, 402, 404, 405, 471, 472], "extra_repr": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "recip": [36, 43, 48, 65, 66, 67, 73, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 315, 318, 319, 322, 324, 327, 328, 330, 335, 336, 338, 342, 350, 352, 354, 357, 362, 365], "get_buff": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "get_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "qualifi": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "referenc": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "resolv": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "someth": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 150, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 464, 472, 473, 487, 492], "get_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 336, 338, 342, 402, 404, 405], "set_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 336, 338, 342, 402, 404, 405], "picklabl": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 336, 338, 342, 402, 404, 405], "get_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "net_b": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "net_c": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "conv": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 286, 287, 336, 338, 342, 402, 404, 405, 472], "conv2d": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 287, 289, 290, 298, 313, 336, 338, 342, 402, 404, 405], "kernel_s": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 286, 287, 289, 290, 298, 313, 318, 336, 338, 342, 402, 404, 405, 472, 491], "diagram": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "degre": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 225, 279, 336, 338, 342, 402, 404, 405], "named_modul": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "half": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405, 471], "ipu": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "strict": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 372, 392, 402, 403, 404, 405, 406, 475], "descend": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "get_swap_module_params_on_convers": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "persist": [36, 43, 46, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 237, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "preserv": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 358, 372, 392, 402, 404, 405], "missing_kei": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "unexpected_kei": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "namedtupl": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "l": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 300, 305, 336, 338, 342, 402, 404, 405, 408, 473, 487], "idx": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "mtia": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "named_buff": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "remove_dupl": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405], "prepend": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 387, 402, 404, 405, 475], "running_var": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "named_children": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "conv4": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "conv5": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "memo": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "named_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 239, 279, 336, 338, 342, 387, 402, 404, 405], "register_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "removablehandl": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "favor": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 279, 336, 338, 342, 402, 404, 405, 473], "register_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_buff": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "running_mean": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "alongsid": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 465, 480], "num_featur": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 282, 336, 338, 342, 402, 404, 405], "register_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 296, 326, 336, 338, 342, 402, 404, 405], "with_kwarg": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "always_cal": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_module_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "regardless": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 371, 386, 389, 402, 404, 405], "register_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "invok": [36, 43, 48, 56, 66, 67, 69, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "And": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 341, 342, 402, 404, 405, 478], "forward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_module_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "ordinarili": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "grad_input": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "grad_output": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "technic": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 472, 474, 475, 477], "caller": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_module_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "backward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_module_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_load_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "incompatible_kei": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "thrown": [36, 43, 48, 56, 66, 67, 73, 74, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 489], "register_load_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "local_metadata": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "error_msg": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "noqa": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 144, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "b950": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_modul": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 468], "register_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "register_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "keep_var": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 372, 392, 402, 403, 404, 405, 406], "requires_grad_": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 475], "autograd": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405], "freez": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 276, 277, 279, 336, 338, 342, 402, 404, 405], "finetun": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "gan": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "set_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "share_memori": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 136, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 471], "share_memory_": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405, 491], "destin": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 218, 227, 228, 230, 237, 267, 269, 272, 276, 279, 336, 338, 342, 372, 392, 402, 403, 404, 405, 406, 429], "averag": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 276, 277, 279, 324, 336, 338, 342, 372, 380, 381, 392, 402, 404, 405, 445, 471, 473], "shallow": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 372, 392, 402, 404, 405, 474], "detach": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 267, 269, 279, 336, 338, 342, 372, 383, 387, 392, 394, 402, 404, 405, 409, 410, 411, 412, 471], "non_block": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 403, 404, 405, 406, 474], "memory_format": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "channels_last": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "tri": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405, 480], "pin": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "4d": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "ignore_w": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "1913": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "3420": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "5113": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "2325": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "torch_doctest_cuda1": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "gpu1": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "1914": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "5112": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "2324": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "float16": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 301, 306, 336, 338, 342, 358, 402, 404, 405], "cdoubl": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "3741": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "j": [36, 43, 48, 56, 63, 66, 67, 73, 78, 99, 109, 110, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405, 468, 478], "2382": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "5593": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "4443": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "complex128": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "6122": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "1150": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 247, 262, 268, 269, 272, 274, 279, 336, 338, 342, 358, 402, 404, 405], "to_empti": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "dst_type": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "xpu": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "set_to_non": [36, 43, 48, 56, 66, 67, 73, 78, 99, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 279, 336, 338, 342, 402, 404, 405], "upper": [37, 115, 242], "continuousbox": [37, 40, 86, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 204, 237, 240, 262, 270], "provision": 39, "descript": [40, 144, 173, 180, 196, 215, 472, 473], "akin": 40, "unnam": 40, "compositespec": [40, 463, 483, 487, 492], "constraint": [40, 153, 332, 473, 485, 486], "data_cl": 40, "tensorclass": [40, 62, 64, 71, 85, 95, 96, 97, 98, 103, 105, 125, 186, 403, 406], "pixels_spec": 40, "observation_vector_spec": 40, "composite_spec": 40, "observation_vector": [40, 220, 471], "_nodefault": [40, 41, 49, 75], "is_empti": [40, 41, 49, 75, 487], "include_nest": [40, 41, 49, 75], "leaves_onli": [40, 41, 49, 75], "is_leaf": [40, 41, 49, 75], "_compositespecitemsview": [40, 41, 49, 75], "_compositespeckeysview": [40, 41, 49, 75], "reflect": [40, 41, 49, 75, 140, 161, 162, 210, 237, 275, 387, 402, 405, 450, 472, 473, 474, 486], "lock_": [40, 41, 49, 75], "propag": [40, 41, 49, 75, 369, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 409, 410, 411, 412, 473, 485, 486], "succeed": [40, 41, 49, 75, 237, 270], "pop": [40, 41, 49, 75, 223], "keyerror": [40, 41, 49, 75, 181, 182, 185, 269], "selected_kei": [40, 41, 49, 75, 256, 471], "unlock_": [40, 41, 49, 75], "_compositespecvaluesview": [40, 41, 49, 75], "multipli": [42, 188, 194, 284, 300, 305, 369, 370, 371, 372, 378, 386, 388, 389, 390, 392, 402, 445, 471, 485], "calcul": [42, 72, 182, 252, 300, 369, 371, 376, 386, 389, 391, 394, 402, 409], "reassign": 43, "reward2go": [43, 463], "reward_key_out": 43, "time_dim": [43, 409, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426], "unrol": [43, 380, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426], "discount": [43, 56, 136, 252, 279, 370, 376, 379, 380, 382, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 467, 472, 473, 485, 486], "lastrewardtotraj": 43, "last_reward_to_traj": 43, "new_tensordict": 43, "is_tdmodule_compat": [43, 66, 78, 336, 338, 342, 402, 405], "reset_out_kei": [43, 66, 78, 336, 338, 342, 402, 405], "orign": [43, 66, 78, 336, 338, 342, 402, 405], "mod": [43, 66, 78, 224, 239, 285, 302, 307, 336, 338, 342, 354, 359, 362, 402, 405, 474, 475, 481], "select_out_kei": [43, 66, 78, 336, 338, 342, 369, 370, 372, 373, 377, 378, 385, 389, 390, 392, 394, 395, 402, 405, 475], "reset_parameters_recurs": [43, 66, 78, 336, 338, 342, 387, 402, 405], "relu": [43, 66, 78, 153, 283, 293, 310, 336, 338, 342, 368], "old_param": [43, 66, 78, 336, 338, 342], "bork": [43, 66, 78, 336, 338, 342], "dork": [43, 66, 78, 336, 338, 342], "reset_paramet": [43, 66, 78, 315, 336, 338, 342], "from_modul": [43, 66, 78, 296, 336, 338, 342, 358, 361, 491], "out_keys_sourc": [43, 66, 78, 336, 338, 342, 402, 405], "rubric": [43, 66, 78, 243, 336, 338, 342, 361, 402, 405], "revert": [43, 66, 78, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 336, 338, 342, 402, 405, 477, 489], "seq": [43, 66, 78, 285, 300, 302, 305, 307, 336, 338, 342, 354, 402, 405, 474, 475, 481, 484], "z": [43, 66, 78, 301, 336, 338, 342, 402, 405], "shift_kei": [45, 47, 57, 76], "is_full_kei": [45, 47, 57, 76], "is_ful": [45, 47, 57, 76], "tempfil": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 96, 97, 98, 103, 112, 186, 403, 406, 457, 471, 472, 474, 475, 479, 485, 488, 489], "register_save_hook": [45, 63, 68, 69, 70, 76, 79, 80, 112], "temporarydirectori": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 96, 97, 98, 112, 186, 403, 406, 471, 472, 474, 475, 479, 485, 488, 489], "tmpdir": [45, 63, 68, 69, 70, 76, 79, 80, 84, 112, 471, 472, 475, 485], "rb_load": [45, 63, 68, 69, 70, 79, 80, 112], "register_load_hook": [45, 63, 68, 69, 70, 79, 80, 112], "filesystem": [46, 489], "ted2nest": [47, 463], "stackedcomposit": [49, 463], "tensordictmap": [51, 463], "observation_kei": [51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "excluded_kei": [51, 232], "consolid": [51, 78, 92, 105], "lazili": [51, 104, 314, 487], "from_tensordict_pair": [51, 78], "querymodul": [51, 78], "get_keys_from_env": 51, "cattensor": [51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 471, 484, 487, 492], "unsqueezetransform": [51, 219, 487, 489], "oracl": 51, "obs_kei": 51, "state_kei": [51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "reset_st": 51, "rollout0": 51, "rollout1": 51, "rollout1b": 51, "collaps": 51, "max_length": [51, 62, 64, 65, 81, 84, 85, 95, 194, 201, 266, 475, 481], "valid_path": [51, 85], "assert_clos": 51, "subtre": [51, 85], "intersect": [51, 280], "Or": [51, 166, 167, 313], "rollout_from_path": [51, 85], "plot": [51, 85, 471, 473, 474, 485, 486, 487], "_nestedkei": [51, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "return_nod": 51, "diverg": [51, 195, 239, 355, 359, 381, 386, 402, 405], "endpoint": 51, "r0": [51, 471], "123": [51, 85], "392": [51, 85], "989": [51, 85], "809": [51, 85], "847": [51, 85], "r1": 51, "235": 51, "td_root": [51, 85], "node_data": [51, 85], "node_id": [51, 85], "nontensordata": [51, 58, 97, 132, 157, 158, 194, 201, 237, 266, 270, 427], "_parent": [51, 85], "0x716eeb78fbf0": 51, "0x": 51, "4341220243998689835": 51, "6745467818783115365": 51, "win": [51, 85], "to_str": [51, 85], "node_format_fn": [51, 85], "indent": [51, 85], "rollouts_data": [51, 85], "456": [51, 85], "359": [51, 85], "3094": [51, 85], "75": [51, 85, 117], "948": [51, 85], "68": [51, 85, 117], "9045": [51, 85], "rollout_data": [51, 85], "nvec": [52, 54], "remove_singleton": 52, "ax": [52, 316, 317, 485], "neither": [52, 53, 54, 55, 171, 487], "use_regist": [54, 60], "mone_hot": [54, 55], "boxlist": [54, 55], "gamma": [56, 252, 279, 310, 369, 370, 372, 373, 374, 376, 378, 379, 380, 382, 385, 387, 389, 390, 391, 392, 394, 395, 396, 397, 402, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 457, 467, 471, 472, 473, 485, 486, 491], "sutton": [56, 467, 485, 486], "1988": 56, "tempor": [56, 109, 302, 307, 310, 410, 411, 416, 417], "44": [56, 117], "ahead": [56, 279, 492], "bias": [56, 109, 110, 300, 301, 305, 306, 365, 467, 471], "mitig": [56, 219], "multisteptransform": [56, 463], "99": [56, 252, 276, 310, 382, 397, 408, 415, 457, 471, 472, 473, 475, 478, 481, 485, 486, 491], "nontermin": 56, "original_reward": 56, "newli": [56, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "OR": 56, "row": [57, 77, 145, 146, 240], "example_data": [58, 97, 185, 188, 194], "conform": 58, "templat": [58, 97, 180, 181, 182, 185, 199, 200, 338, 342, 430], "randomli": [58, 116, 170, 213, 242, 243, 262, 299, 355, 359, 477, 485, 486, 487, 489], "unidimension": 60, "action_valu": [60, 295, 296, 326, 351, 352, 356, 357, 372, 378, 387, 402, 405, 407, 466, 474, 475, 477, 481], "keepdim": 60, "chosen_action_valu": [60, 325, 326, 334, 356, 357, 407, 466, 474, 477], "priori": 60, "uniqu": [60, 85, 117, 118, 147, 151, 152, 187, 189, 219, 231, 261, 262, 263, 267, 354, 436, 479, 489], "tensor_spec": [60, 164, 211, 213, 377, 378, 389, 391], "one_hot_sampl": [60, 61], "chosen_data": [62, 95], "rewarddata": [62, 95, 463], "rejected_data": [62, 95], "copy_exist": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "return_earli": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "share_non_tensor": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "memmap": [62, 64, 71, 85, 96, 97, 98, 103, 159, 168, 186, 276, 403, 406, 429, 431, 444], "dataclass": [62, 64, 71, 83, 85, 96, 97, 98, 186, 387, 403, 406], "from_dataset": [62, 64, 95], "dataset_nam": [62, 64, 72, 84, 95, 156], "550": [62, 64, 72, 84, 95, 117, 118], "root_dir": [62, 64, 84, 95], "from_disk": [62, 64, 84, 95], "carperai": [62, 64, 72, 84], "openai_summarize_comparison": [62, 64, 84], "load_from_disk": [62, 64, 84, 95], "load_dataset": [62, 64, 84, 95], "92534": 62, "input_id": [62, 64, 65, 71, 72, 81, 84, 95, 147, 188, 189], "end_scor": [62, 71, 72, 95], "sub_data": [62, 64], "from_tensordict": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "non_tensordict": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "getattr": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "load_memmap": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "load_": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "load_memmap_": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "fromkei": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "saved_td": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "td_load": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "fake": [62, 64, 71, 85, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 403, 406, 471, 472, 475], "_subclass": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "faketensormod": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "faketensor": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "from_flatten": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "attemptedli": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "existsok": [62, 64, 71, 85, 96, 97, 98, 103, 186, 403, 406], "mimic": [62, 64, 71, 85, 96, 97, 98, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 186, 188, 189, 190, 403, 406], "cross": [62, 64, 71, 85, 96, 97, 98, 186, 283, 304, 403, 406], "tensordictfutur": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "serialis": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "deepli": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "memmap_": [62, 64, 71, 85, 96, 97, 98, 186, 276, 403, 406], "memmap_lik": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "contentless": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "1_000_000": [62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 112, 117, 186, 403, 406, 471, 474, 485], "alloc": [62, 64, 71, 85, 96, 97, 98, 105, 186, 294, 311, 312, 403, 406, 465, 471], "memmap_refresh_": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "refresh": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406, 481, 485, 486], "saved_path": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "setattr": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "tent": [62, 64, 71, 84, 85, 96, 97, 98, 186, 403, 406], "to_tensordict": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406, 474], "retain_non": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "discrard": [62, 64, 71, 85, 96, 97, 98, 186, 403, 406], "alpha": [63, 79, 109, 110, 286, 287, 289, 290, 291, 292, 298, 313, 370, 372, 378, 388, 390, 392, 394, 471, 489, 491], "ep": [63, 79, 109, 110, 243, 276, 277, 282, 324, 371, 393, 402, 445, 467, 471, 472, 474, 475, 478, 481], "1e": [63, 79, 109, 110, 243, 276, 277, 282, 294, 297, 331, 471, 472, 473, 486], "08": [63, 79, 109, 110], "pin_memori": [63, 70, 79, 80, 246, 471, 491], "schaul": [63, 109, 110], "quan": [63, 109, 110], "antonogl": [63, 109, 110], "silver": [63, 109, 110], "2015": [63, 109, 110, 224], "ab": [63, 109, 110, 130, 131, 133, 134, 145, 146, 151, 152, 154, 155, 165, 173, 174, 218, 247, 272, 276, 282, 288, 293, 297, 298, 305, 310, 317, 318, 319, 325, 327, 328, 334, 369, 370, 374, 375, 376, 377, 380, 381, 382, 384, 385, 388, 389, 392, 488], "1511": [63, 109, 110, 298], "05952": [63, 109, 110], "expon": [63, 79, 109, 110], "\u03b1": [63, 79], "delta": [63, 79, 300, 305, 331, 355, 359, 463, 467, 485], "1_000": [63, 70, 79, 80, 485, 489], "mini": [63, 70, 79, 80, 486], "decid": [63, 70, 79, 80, 485, 491], "incompat": [63, 70, 79, 80, 391, 489], "drop_last": [63, 70, 79, 80, 116, 118], "notion": [63, 70, 79, 80, 323], "caution": [63, 70, 79, 80, 116, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 492], "codebas": [63, 70, 79, 80, 487], "return_info": [63, 68, 69, 70, 79, 80, 109, 110, 112, 489], "tensordictprioritizedreplaybuff": [63, 463, 491], "_weight": [63, 79, 109, 110], "update_prior": [63, 68, 69, 70, 79, 80, 109, 110, 112, 444, 468, 472, 489, 491], "36278465": 63, "invert": [63, 68, 69, 70, 79, 80, 112, 367, 473], "default_remote_class_config": [63, 68, 69, 70, 79, 80, 112], "randomsampl": [63, 68, 69, 70, 79, 80, 112, 471, 485], "td_error": [63, 68, 69, 70, 79, 80, 112, 372, 373, 374, 376, 377, 378, 379, 385, 387, 390, 392, 394, 395, 402, 405, 407, 471, 489, 491], "update_tensordict_prior": [63, 68, 69, 70, 79, 80, 112, 471, 489, 491], "insert_transform": [63, 68, 69, 70, 79, 80, 112, 181, 182, 185, 214, 269], "insert": [63, 68, 69, 70, 79, 80, 102, 112, 113, 123, 124, 127, 128, 181, 182, 185, 214, 219, 223, 259, 269, 271], "__iter__": [63, 68, 69, 70, 79, 80, 112, 194], "set_sampl": [63, 68, 69, 70, 79, 80, 112], "set_storag": [63, 68, 69, 70, 79, 80, 112], "set_writ": [63, 68, 69, 70, 79, 80, 112], "prompt_rindex": [64, 65, 72], "promptdatatldr": 64, "116722": 64, "prompt": [65, 72, 97, 99, 180, 183, 187, 188, 194, 196, 198, 404, 465], "return_tensordict": [65, 81], "tensodict": [65, 81], "valid_sampl": 65, "eough": 65, "toknen": 65, "meet": 65, "criterion": 65, "autotoken": [65, 81, 84, 97, 180, 181, 182, 184, 185, 192, 196, 198, 199, 338, 342, 405, 465, 483], "from_pretrain": [65, 72, 81, 147, 180, 182, 185, 189, 196, 198, 199, 338, 405, 465, 483], "enough": [65, 489], "inde": [65, 229, 473, 475, 487], "index_kei": [66, 78], "hash_kei": 66, "_hash": 66, "hash_modul": [66, 73, 78], "siphash": [66, 67, 78, 147, 189], "hash_to_int": 66, "hashtoint": 66, "query_modul": [66, 78], "key1": [66, 78, 220, 259, 438, 446, 491], "key2": [66, 78, 220, 259, 438, 446, 491], "write_hash": 66, "n_compon": 67, "dtype_cast": 67, "as_tensor": [67, 73, 475], "init_method": 67, "emb": [67, 474], "sklearn": [67, 156], "byte": [67, 73, 99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 404], "builtin": [67, 73], "pythonhashse": [67, 73], "todo": [67, 195], "replay_buffer_cl": 68, "optiona": 68, "transform_factori": [68, 70, 79, 80], "asyncio": [68, 129], "ray_buff": 68, "object_store_memori": 68, "600": [68, 72], "await": 68, "invoc": 69, "friendli": [69, 471], "include_info": [69, 79, 80], "storagecheckpointerbas": [70, 119], "roundrobinwrit": 70, "_pytre": [70, 489], "tree_map": [70, 489], "assert0": [70, 489], "ref_model": 72, "reward_model": [72, 364], "max_new_token": 72, "score_clip": 72, "kl_schedul": 72, "klcontrollerbas": 72, "num_step": [72, 475], "causal": 72, "sentenc": [72, 184], "frozen": [72, 195, 239, 276, 277], "gpt2rewardmodel": 72, "get_dataload": [72, 463], "promptdata": [72, 463], "gpt2lmheadmodel": 72, "dl": [72, 194], "block_siz": [72, 95], "tensorclass_typ": [72, 95], "openai_summarize_tldr": 72, "config_class": 72, "model_path": 72, "rollout_from_model": 72, "rollout_from_data": 72, "reward_kl": [72, 239], "reward_raw": 72, "sample_log_prob": [72, 239, 347, 348, 349, 355, 359, 361, 389], "create_rollout_td": 72, "log_prob": [72, 98, 195, 294, 304, 311, 312, 320, 323, 333, 338, 342, 359, 372, 405, 467], "log_ratio": 72, "replic": [72, 467], "rindex": 72, "eo": [72, 187], "generation_config": 72, "generationconfig": 72, "ti": [72, 418, 419, 420, 421, 423, 424, 425, 426, 472], "log_probs_gen": 72, "logprobs_of_label": 72, "hash_a": 73, "4669941682990263259": 73, "3778166555168484291": 73, "9122128731510687521": 73, "hash_b": 73, "heterogen": [74, 75, 104, 129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 313, 314, 471, 472], "220": 76, "resembl": 78, "tensormap": 78, "collat": [78, 112, 181, 182, 185], "subtyp": 78, "embedding_storag": 78, "tensor_dict_storag": 78, "new_index": 78, "key3": 78, "retrieve_valu": 78, "storage_constructor": 78, "write_fn": 78, "tensordictstorag": 78, "thumb": [78, 159, 473], "lazydynamicstorag": 78, "fixedstorag": 78, "randomprojectionhash": 78, "priority_kei": [79, 80, 109, 372, 374, 377, 378, 379, 385, 387, 390, 392, 394, 395, 402, 405, 407, 489, 491], "reduct": [79, 109, 110, 123, 199, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 402, 405], "prioritizedreplaybuff": [79, 463, 491], "min": [79, 109, 110, 123, 324, 370, 371, 372, 378, 388, 390, 392, 402, 472, 473], "median": [79, 109, 110, 123, 139, 145, 146, 190, 212, 355, 359], "huggingfac": [81, 187, 353], "co": [81, 187, 231, 487], "pad_trunc": 81, "am": 81, "me": [81, 196, 483], "reassur": 81, "ok": 81, "_encode_memo_dict": 83, "primarili": [83, 248, 477], "educ": 83, "guess": 83, "knowledg": [83, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 478, 480], "tokenizer_fn": 84, "tensordicttoken": [84, 463], "pre_tokenization_hook": 84, "valid_s": 84, "tokenizer_class": 84, "tokenizer_model_nam": 84, "tokein": 84, "elementwis": 84, "vocabulari": [84, 147, 188, 189, 201, 266, 304], "loader": [84, 473], "185068": 84, "dataset_to_tensordict": 84, "data_dir": 84, "batch_dim": [84, 129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 461], "valid_mask_kei": 84, "batch_dimens": 84, "filder": 84, "from_dict": [84, 194], "data_memmap": 84, "ref": 85, "branching_act": 85, "prev_act": 85, "edg": [85, 475], "travers": 85, "breadth": 85, "bf": 85, "fully_expand": 85, "get_vertex_by_hash": 85, "get_vertex_by_id": 85, "is_termin": 85, "make_nod": 85, "node_observ": 85, "bag": 85, "num_children": 85, "num_vertic": 85, "count_repeat": 85, "recustruct": 85, "plotli": 85, "make_label": 85, "visual": [85, 247, 272, 274, 429, 473, 485, 487], "unsupport": 85, "selected_act": 85, "mctsforest": [85, 147, 189, 463], "key_typ": 85, "recurse_through_entri": 92, "recurse_through_stack": 92, "infinit": [95, 151, 152, 173, 174, 181, 182, 185, 194, 277, 479, 489], "pairwisedataset": [95, 463], "audio": 96, "function_cal": 96, "_wrap_td_method": 96, "wrapped_func": 96, "0x7f03d8d8e1f0": 96, "mime_typ": 96, "function_nam": 96, "function_arg": 96, "contentbas": [97, 463], "is_complet": 97, "tool_cal": 97, "tool_respons": [97, 196, 198, 465], "apply_chat_templ": [97, 180, 196, 198, 199, 405, 465, 483], "autoprocessor": 97, "add_generation_prompt": [97, 199, 405], "chat_templ": [97, 199, 200, 338, 342, 405], "chat_template_nam": [97, 199, 338, 342, 405], "chatml_format": [97, 199, 338, 405], "qwen": [97, 180, 182, 185, 196, 198, 199, 338, 339, 405, 465, 483], "continue_final_messag": 97, "return_tensor": [97, 199], "return_dict": 97, "return_assistant_tokens_mask": [97, 199], "chat": [97, 180, 181, 182, 185, 193, 196, 198, 199, 200, 338, 342, 405, 465], "pretrainedtoken": [97, 180, 191, 338, 342], "im_start": [97, 180, 182, 185, 196, 198, 465], "assist": [97, 180, 182, 185, 196, 198, 199, 405, 465, 474, 483], "preval": 97, "messag": [97, 465], "pt": [97, 199, 431, 468], "assistant_mask": 97, "default_spec": 97, "set_list_to_stack": [97, 180, 185, 196, 198, 199, 465, 483], "foo": [97, 103, 105, 125, 350, 489, 492], "from_chat": [97, 199, 405], "token_list": 98, "tokens_response_list": 98, "topk_siz": 99, "prompt_kei": [99, 187, 404], "rewards_kei": [99, 404], "k": [99, 283, 285, 300, 301, 305, 306, 338, 342], "lazystackstorag": 99, "samplerwithoutreplac": [99, 123, 473, 486, 489], "lazy_stack": [99, 199, 405, 484], "topk": 99, "selector": [99, 483], "_td": [99, 136, 380], "25": [99, 224, 471], "wrote": 99, "top3": 99, "r3": 99, "as_padded_tensor": [99, 188, 194, 199], "transformthatmeasuresbyt": [99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 404], "bytes_in_td": [99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 231, 232, 233, 235, 238, 239, 246, 248, 249, 250, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 279, 404], "transform_done_spec": [99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 228, 259, 266, 268, 270, 279, 404], "transform_env_batch_s": [99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 268, 279, 404], "transform_env_devic": [99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 228, 268, 279, 404], "transform_full_done_spec": [99, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 223, 227, 228, 232, 239, 241, 249, 250, 256, 260, 266, 268, 270, 277, 279, 404], "checkpoint_fil": 101, "h5": 101, "h5_kwarg": 101, "iff": 101, "suffix": [101, 442], "h5py": 101, "create_dataset": 101, "consequ": [101, 305, 479], "immut": [102, 129, 132, 135, 139, 147, 159, 163, 168, 169, 180, 181, 182, 185, 188, 189, 190, 250, 269], "scratch_dir": [103, 471, 472, 474, 479, 485, 488, 489], "sent": [103, 105, 125, 276], "mistak": [103, 105, 125], "overewritten": 103, "tensorstoragecheckpoint": 103, "pathlib": [103, 447, 475], "main_ckpt_dir": 103, "rb_memmap": 103, "10_000_000": 103, "myclass": [103, 105, 125], "attach": [103, 104, 105, 106, 119, 121, 125, 472], "entiti": [103, 104, 105, 106, 119, 121, 125, 180], "lazystacktensordict": 104, "heterougen": 104, "linearli": 104, "densifi": 104, "unlimit": [104, 106], "st": 104, "expans": [105, 387, 402, 405], "zero_": [105, 125, 204], "liststoag": 107, "max_capac": [109, 110, 471, 489], "max_priority_within_buff": [109, 110], "proport": [109, 489], "magnitud": [109, 110, 471, 485], "focus": [109, 110, 471, 478], "p_i": [109, 110], "delta_i": [109, 110], "epsilon": [109, 110, 243, 281, 299, 324, 393, 445, 472, 473, 474, 477], "frac": [109, 110, 300, 301, 305, 306, 473], "sum_j": [109, 110], "p_j": [109, 110], "w_i": [109, 110], "cdot": [109, 110, 405], "unbias": [109, 110], "anneal": [109, 110, 324, 472, 477, 485], "guidelin": [109, 110], "math": [109, 110, 393], "benefit": [109, 110, 464, 476, 485, 486, 489], "data_0": 109, "data_1": 109, "smoothen": 109, "tdrb": 109, "pack": [109, 300, 305, 473, 476, 492], "nd": [109, 110], "1d": [109, 110, 117, 118, 123], "sum_tre": [109, 110], "min_tre": [109, 110], "slice_len": [110, 117, 118, 429], "end_kei": [110, 117, 118], "cache_valu": [110, 117, 118], "closer": [110, 491], "readili": [110, 117, 118, 359], "conjunct": [110, 117, 118, 472], "buffer0": [110, 117], "immutablewrit": [110, 117], "buffer1": [110, 117], "other_sampl": [110, 117], "shorter": [110, 117, 118], "short": [110, 117, 118, 129, 130, 131, 132, 135, 139, 145, 146, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 305, 306, 472, 473, 476, 477, 486, 489], "Be": [110, 117, 118], "fewer": [110, 117], "tolist": 110, "120110917137936e": 110, "06": [110, 294, 331], "storageensembl": [112, 115], "samplerensembl": 112, "writerensembl": [112, 121], "sample_from_al": [112, 115], "num_buffer_sampl": [112, 115], "ensembl": [112, 115, 121, 122, 128, 358, 390], "forbidden": 112, "0x13a2ef430": 112, "0x13a2f9310": 112, "interpol": [112, 251, 472, 475], "interpolationmod": 112, "bilinear": [112, 251], "0x13a2f9220": 112, "0x13a2f9f70": 112, "0x13a2d9b50": 112, "0x13a2f95b0": 112, "0x128648260": 112, "roundrobin": [113, 124], "buffer_id": [115, 121], "shuffl": [116, 118, 181, 182, 185, 486], "incomplet": [116, 118, 180], "fresh": 116, "haven": [116, 488], "remain": [116, 195, 197, 218, 228, 229, 239, 261, 317, 478], "draw": [116, 299], "use_gpu": [117, 118], "slicesamplerwithoutreplac": [117, 489], "acceler": [117, 118, 139, 190, 485, 486], "reconstruct": [117, 118, 381, 471, 492], "ep_1": [117, 118], "ep_2": [117, 118], "73": 117, "74": 117, "76": 117, "77": 117, "42": [117, 308, 323, 369, 370, 372, 373, 377, 385, 392], "43": 117, "45": 117, "67": [117, 484], "69": 117, "70": 117, "71": 117, "27": [117, 118, 130, 131, 159, 168, 224], "28": [117, 118, 313], "31": [117, 145, 146], "80": [117, 130, 131], "82": 117, "83": 117, "84": [117, 251, 474, 475], "78": 117, "79": 117, "320": [117, 118, 133, 134], "700": [117, 118], "dataid": [117, 118], "available_dataset": [117, 118], "counter": [118, 197, 224, 267, 354, 440, 468, 475], "23": [118, 224, 280], "request": [118, 216, 248], "51": 118, "__len__": 119, "rank_kei": 123, "get_insert_index": 123, "themselv": [129, 284, 472], "dens": [129, 311, 312], "maybe_dens": 129, "min_get": [129, 163, 169], "maker": [129, 461, 472], "sort": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 220, 324], "another_act": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "discretebox": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "mutabl": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "action_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 473, 486], "had": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 477, 479], "all_act": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "any_don": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "loc": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190, 239, 243, 254, 276, 277, 303, 332, 333, 347, 348, 349, 355, 359, 361, 369, 370, 372, 385, 389, 390, 391, 392, 451, 461, 466, 471, 472, 473, 474, 477, 486, 491], "_callabletransform": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 188, 189, 190], "auto_specs_": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "action_spac": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 231, 296, 326, 351, 352, 356, 357, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 474, 475, 477, 481], "check_dtyp": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190], "discrep": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 369, 371, 373, 374, 386, 389, 391, 407], "broken": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190], "rng": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 175, 180, 181, 182, 185, 188, 189, 190, 487], "done_keys_group": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "another_don": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "done_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "empty_cach": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 269], "env_batch_s": [129, 163, 169], "fake_tensordict": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 472, 475], "envnam": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "full_action_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 485, 486], "full_done_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "full_observation_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "full_reward_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "pipeline_st": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "full_state_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "input_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "is_spec_lock": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "maybe_reset": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "speak": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 225, 359, 471], "observation_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "output_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "register_gym": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 476], "entry_point": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "info_kei": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "reward_threshold": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "nondeterminist": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "max_episode_step": [129, 132, 135, 138, 139, 140, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "order_enforc": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "autoreset": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "disable_env_check": [129, 132, 135, 138, 139, 147, 154, 155, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "apply_api_compat": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "nasium": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 207], "dmcontrolenv": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 429, 463, 471, 476, 484, 492], "dmc": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "cheetah": [129, 132, 133, 134, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 429, 471], "removeemptyspec": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "threshold": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 299, 370, 371, 402, 473], "learnt": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 457], "checker": [129, 132, 135, 138, 139, 147, 154, 155, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "stepapicompat": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "deem": [129, 132, 135, 139, 147, 151, 152, 159, 160, 163, 168, 169, 170, 173, 174, 180, 181, 182, 185, 188, 189, 190], "task_nam": [129, 132, 133, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "envgym": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0855": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0215": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0881": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0412": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "1101": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0080": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0254": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0424": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "veloc": [129, 132, 133, 134, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 485, 486, 487, 492], "9609e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "9776e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "04": [129, 132, 135, 139, 143, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 264, 277], "6347e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "3842e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "5338e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "3064e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0381e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "6656e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "05": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 264, 282, 487], "0204e": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0833": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0275": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0612": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0770": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "1256": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0082": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0186": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0476": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "2221": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "2256": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "5930": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "6937": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "5865": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "5479": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0187": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "6825": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "5224": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0018": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "1005": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0335": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 225], "0268": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0133": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0627": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0074": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0488": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0353": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0075": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0069": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0098": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0058": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0033": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0157": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0004": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 264], "0381": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0452": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "11355747": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "04257728": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "00408397": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "04155852": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0389733": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "01409826": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0978704": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "08808327": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "03970837": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "00535434": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "02353762": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "05116226": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "02788907": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "06848346": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "05154399": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "0371798": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "05128025": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "dydact": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "ant": [129, 130, 131, 132, 135, 139, 142, 144, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 488], "gym_env": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 491], "reset_kei": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 219, 255, 261, 262, 263, 485], "multitask": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "multiag": [129, 132, 135, 139, 147, 150, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 314, 325, 334, 371, 386, 389, 407], "another_reward": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "reward_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "auto_cast_to_devic": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 486], "soon": [129, 132, 135, 139, 147, 159, 160, 161, 162, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "__sort": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "as__": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "categorical_action_encod": [129, 130, 131, 132, 135, 138, 139, 140, 141, 144, 145, 146, 147, 154, 155, 159, 160, 163, 165, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 207, 224, 475], "argmaxmodul": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "argmax": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 296, 326, 352, 357, 475, 477], "n_act": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 239, 369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 478], "ourselv": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 473, 492], "emul": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "epoch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 447, 473, 485, 486], "input_td": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "rollout_td": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "state_spec_unbatch": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "prevail": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 211, 220, 255], "next_tensordict": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210, 216, 220, 232, 233, 234, 246, 249, 250, 256, 259, 272, 276], "precomput": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190], "_stepmdp": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210], "exclude_act": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 210], "minim": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 431, 489], "reset_data": [129, 132, 135, 139, 147, 159, 160, 163, 168, 169, 170, 180, 181, 182, 185, 188, 189, 190, 465, 492], "googl": [130, 131, 151, 152, 157, 158, 185, 187, 282, 473, 474, 483, 485, 486], "convers": [130, 131, 145, 146, 182, 185, 207, 465, 467, 483], "2106": [130, 131, 375, 394], "13281": [130, 131], "frame_skip": [130, 131, 133, 134, 138, 139, 140, 141, 145, 146, 148, 149, 154, 155, 165, 190, 235, 440, 442, 450, 468, 471, 472, 473, 491], "allow_done_after_reset": [130, 131, 133, 134, 135, 138, 140, 141, 144, 145, 146, 154, 155, 157, 158, 165, 171, 172], "toler": [130, 131, 133, 134, 138, 140, 141, 144, 145, 146, 154, 155, 157, 158, 165, 171, 172, 294, 331], "is_avail": [130, 131, 471, 472, 473, 474, 485, 486, 488], "87": [130, 131], "acrobot": [130, 131, 133, 134, 492], "advant": [130, 131, 145, 146], "timer": [130, 131, 139, 145, 146, 190], "timeit": [130, 131, 145, 146, 475], "310": [130, 131], "ms": [130, 131, 145, 146], "268": [130, 131], "433": [130, 131], "213": [130, 131], "8605": [130, 131], "pipelineenv": 131, "get_environ": 131, "san": 132, "fen": [132, 157, 158], "pgn": 132, "legal": [132, 213], "board": [132, 170], "include_san": 132, "algebra": [132, 487], "notat": 132, "include_fen": 132, "forsyth": 132, "edward": 132, "include_pgn": 132, "portabl": [132, 480], "include_legal_mov": 132, "include_hash": 132, "mask_act": 132, "subset": [132, 487, 488], "29275": 132, "rnbqkbnr": [132, 157, 158], "pppppppp": [132, 157, 158], "kqkq": [132, 157, 158], "legal_mov": 132, "219": 132, "5p2": 132, "ppppp1pp": 132, "event": [132, 304, 311, 312, 320, 418, 419, 420, 421, 423, 424, 425, 426, 489], "white": 132, "f4": 132, "96": 132, "kq": 132, "5n2": 132, "rnbqkb1r": 132, "nf3": 132, "na6": 132, "c4": 132, "f6": 132, "h4": 132, "rb8": 132, "na3": 132, "ra": 132, "get_legal_mov": 132, "uci": 132, "dm_control": [133, 134, 471, 484, 492], "2006": [133, 134, 224, 370, 376], "12983": [133, 134], "240": [133, 134, 491], "swingup": [133, 134, 492], "swingup_spars": [133, 134], "ball_in_cup": [133, 134], "catch": [133, 134, 475], "balance_spars": [133, 134], "three_pol": [133, 134], "two_pol": [133, 134], "finger": [133, 134], "turn_easi": [133, 134], "turn_hard": [133, 134], "fish": [133, 134], "upright": [133, 134, 472], "swim": [133, 134], "hopper": [133, 134], "hop": [133, 134], "humanoid": [133, 134, 159, 168, 484], "walk": [133, 134, 159, 168, 472, 484], "run_pure_st": [133, 134], "bring_bal": [133, 134], "bring_peg": [133, 134], "insert_bal": [133, 134], "insert_peg": [133, 134], "point_mass": [133, 134], "reacher": [133, 134], "swimmer": [133, 134], "swimmer6": [133, 134], "swimmer15": [133, 134], "walker": [133, 134], "dog": [133, 134], "trot": [133, 134], "humanoid_cmu": [133, 134], "lqr": [133, 134], "lqr_2_1": [133, 134], "lqr_6_2": [133, 134], "quadrup": [133, 134], "escap": [133, 134], "stacker": [133, 134], "stack_2": [133, 134], "stack_4": [133, 134], "deviceless": 135, "run_type_check": [135, 153], "hint": 135, "counterenv": 135, "creator": [136, 452, 453, 459, 460, 461], "substitut": [136, 261, 276, 477], "vecnorm": [136, 277, 461], "env_creat": [136, 471], "test_env1": 136, "observation_count": [136, 492], "test_env2": 136, "ps": 136, "p1": 136, "p2": 136, "9934": 136, "make_vari": [136, 267], "variant": [136, 267, 284, 466], "trajcount": 136, "env_creator_pendulum": 136, "env_creator_cartpol": 136, "env_str": 137, "device_map": 137, "registri": [138, 171], "asyncvectorenv": 138, "pixel_observ": [138, 140, 141, 165], "pixelobservationwrapp": [138, 140, 141, 165], "adventur": [138, 140], "airraid": [138, 140, 492], "alien": [138, 140], "time_limit": 138, "timelimit": [138, 151, 152, 173, 174], "default_info_dict_read": [138, 139, 140, 159, 190], "reader": [138, 139, 140, 159, 190, 472], "set_info_dict_read": [138, 139, 140, 159, 190, 476], "info_dict": [138, 139, 140, 159, 190], "gymlikeenv": [138, 140, 190, 463], "auto_register_info_dict": [138, 139, 140, 159, 190], "multibinari": [138, 140], "multidiscret": [138, 140], "rag": [138, 140], "gym_conversion_exampl": [138, 140], "info_dict_read": [139, 159, 190], "ignore_priv": [139, 190], "baseinfodictread": [139, 190], "tensordictprim": [139, 159, 190, 285, 302, 307, 366, 466, 474], "succe": [139, 159, 190], "underscor": [139, 190], "primer": [139, 188, 190, 194, 262, 285, 302, 307, 366, 474], "halfcheetah": [139, 159, 190, 212, 251, 471, 491], "reward_ctrl": [139, 159, 190], "reward_run": [139, 159, 190], "x_posit": [139, 159, 190], "x_veloc": [139, 159, 190], "raise_if_clos": [139, 190], "fast_encod": [139, 190], "memoize_cach": [139, 190], "adaptive_autorang": [139, 190], "4f": [139, 190, 199, 405, 473, 474, 487], "fp": [139, 190, 429, 434, 436], "10141": [139, 190], "5742fp": [139, 190], "10576": [139, 190], "8388fp": [139, 190], "read_act": [139, 190], "read_don": [139, 190], "nonsens": [139, 190], "fallback": [139, 190], "read_ob": [139, 190], "dictat": [139, 190, 240, 355, 359, 389, 471, 487], "read_reward": [139, 190], "hoc": [139, 159, 190, 477], "dict_read": [139, 190], "my_info_kei": [139, 190], "some_env": [139, 190], "vecenv": 140, "vectorenv": 140, "convert_actions_to_numpi": 140, "missing_obs_valu": [140, 275], "vecgymenvtransform": 140, "secur": [141, 483], "habitat3": 141, "ai": [141, 488], "habitatrenderpick": 141, "isaacgym": [142, 143], "isaacgymwrapp": [142, 463], "isaacgymenv": [143, 463], "webpag": 143, "isaac": [143, 144], "essenc": [143, 476], "scripts_isaaclab": 144, "managerbasedrlenv": 144, "app": 144, "applaunch": 144, "argpars": [144, 458, 461], "parser": [144, 184, 458, 461], "argumentpars": 144, "add_app_launcher_arg": 144, "args_cli": 144, "hydra_arg": 144, "parse_known_arg": 144, "app_launch": 144, "isaaclab_task": 144, "f401": 144, "manager_bas": 144, "ant_env_cfg": 144, "antenvcfg": 144, "isaac_lab": 144, "cfg": [144, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461], "instadeepai": [145, 146], "2306": [145, 146, 277], "09884": [145, 146], "snake": [145, 146, 182], "grid": [145, 146, 429], "bodi": [145, 146], "body_st": [145, 146], "fruit_posit": [145, 146], "col": [145, 146], "head_posit": [145, 146], "tail": [145, 146], "game2048": [145, 146], "maze": [145, 146], "cleaner": [145, 146], "cvrp": [145, 146], "multicvrp": [145, 146], "minesweep": [145, 146], "rubikscub": [145, 146], "knapsack": [145, 146], "sudoku": [145, 146], "tsp": [145, 146], "connector": [145, 146], "v2": [145, 146, 166, 167, 398, 418, 419, 420, 421, 423, 424, 425, 426, 474], "mmst": [145, 146], "graphcolor": [145, 146], "partli": [145, 146], "scrambl": [145, 146], "robotwarehous": [145, 146], "tetri": [145, 146], "binpack": [145, 146], "jobshop": [145, 146], "0x1fca91910": 145, "122": [145, 146, 492], "0x1ff9baee0": 145, "134": [145, 146], "0x1ff9ba7c0": 145, "172": [145, 146], "jit": 146, "eager": [146, 339], "tdreset": [146, 279, 484], "whichev": 146, "overview": [147, 189, 473, 475, 478, 485, 486, 491], "vocab_s": [147, 188, 189], "hashing_modul": [147, 189], "text_output": [147, 189], "decod": [147, 189, 205, 318, 338, 342], "batch_decod": [147, 189], "text_kei": [147, 189], "gpt2token": [147, 189], "make_tensordict": [147, 189], "mo": [148, 149], "minecart": [148, 149], "mo_gym": [149, 240], "qualnam": 150, "neural": [150, 161, 162, 286, 287, 321, 323, 329, 358, 409, 466, 472, 473, 474, 477, 485, 486, 487, 492], "group_map": [150, 151, 152, 157, 158, 161, 162, 171, 172, 173, 174, 176, 485], "constructiuon": [150, 161, 162], "premad": [150, 151, 152, 161, 162, 173, 174, 407], "all_in_one_group": [150, 157, 158, 176], "agent_0": [150, 161, 162, 171, 176, 259], "agent_1": [150, 161, 162, 171, 176, 259], "agent_2": [150, 161, 162, 171, 176], "agent_3": [150, 171], "one_group_per_ag": [150, 161, 162], "meltingpot": [151, 152], "2211": [151, 152], "13746": [151, 152], "melt": [151, 152], "pot": [151, 152], "novel": [151, 152, 478], "social": [151, 152], "familiar": [151, 152, 472, 483, 486, 492], "unfamiliar": [151, 152], "broad": [151, 152], "cooper": [151, 152, 485, 486], "decept": [151, 152], "reciproc": [151, 152], "stubborn": [151, 152], "substrat": [151, 152], "ml_collect": 151, "config_dict": 151, "configdict": 151, "categorical_act": [151, 152, 157, 158, 161, 162, 166, 167, 171, 172, 173, 174], "marlgroupmaptyp": [151, 152, 157, 158, 161, 162, 171, 172, 173, 174, 176, 463, 485], "agent_nam": [151, 152, 173, 174, 176], "agent_names_to_indices_map": [151, 152, 173, 174], "env_torchrl": [151, 152], "commons_harvest__open": [151, 152], "rgb": [151, 152], "144": [151, 152], "192": [151, 152], "collective_reward": [151, 152], "ready_to_shoot": [151, 152], "88": [151, 152, 166, 167], "substrate_config": 152, "get_config": 152, "mp_env": 152, "build_from_config": 152, "default_player_rol": 152, "mymbenv": [153, 283, 310], "world_model": [153, 283, 310, 381], "hidden_observ": [153, 283, 310], "mlp": [153, 283, 286, 287, 289, 290, 291, 292, 298, 302, 307, 310, 314, 315, 347, 351, 366, 374, 376, 466, 472, 475, 477, 478, 481, 484, 488, 491], "worldmodelwrapp": [153, 283, 310], "activation_class": [153, 283, 286, 287, 289, 290, 291, 292, 297, 298, 308, 310, 313, 314, 472, 477, 485, 486, 491], "activate_last_lay": [153, 283, 292, 308, 310], "sail": [154, 155], "sg": [154, 155], "2206": [154, 155], "10558": [154, 155], "readthedoc": [154, 157, 158], "en": [154, 157, 158], "python_interfac": 154, "envpoolmixin": 155, "env_bas": 155, "task_id": 155, "env_typ": 155, "gym_reset_return_info": 155, "envpool_env": 155, "www": [156, 311, 312], "fetch_openml": 156, "adult_num": 156, "adult_onehot": 156, "mushroom_num": 156, "mushroom_onehot": 156, "covertyp": 156, "shuttl": 156, "magic": [156, 475, 476], "106": 156, "openspiel": [157, 158], "open_spiel": [157, 158], "game_str": 157, "return_st": [157, 158, 161, 162], "4672": [157, 158], "current_play": [157, 158], "674": 157, "2048": [157, 158], "add_nois": [157, 158], "amazon": [157, 158], "backgammon": [157, 158], "restor": [157, 158], "td_restor": [157, 158], "pyspiel": 158, "load_gam": 158, "new_initial_st": 158, "3009": 158, "my_env_fun": [159, 168], "custom_attribute_list": [159, 168], "custom_attribut": [159, 168], "custom_method_list": [159, 168], "custom_method": [159, 168], "deploi": [159, 168, 216, 475], "slight": [159, 168, 472], "share_individual_td": [159, 168], "shared_memori": [159, 168], "policy_proof": [159, 168], "ll": [159, 168, 224, 300, 301, 305, 306, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 486, 492], "hidden": [159, 168, 218, 289, 297, 300, 301, 302, 305, 306, 307, 318, 319, 327, 328, 347, 348, 349, 350, 358, 361, 371, 386, 389, 466, 474, 484, 491], "serial_for_singl": [159, 168, 472], "circular": [159, 168, 471], "list_of_kwarg": [159, 168], "com_veloc": [159, 168], "head_height": [159, 168], "joint_angl": [159, 168], "torso_vert": [159, 168], "batched_pipe_timeout": 159, "stringent": [159, 473, 485, 486], "penv": [159, 267], "env_fix": 159, "influenc": 159, "myenv": [159, 216, 227, 230], "update_kwarg": [159, 168], "th": [160, 234, 271, 300, 305, 487], "thdot": [160, 487], "max_spe": [160, 487], "max_torqu": [160, 487], "gen_param": [160, 487], "gravit": [160, 487], "torqu": [160, 487], "pettingzoo": [161, 162, 485, 486], "pet": [161, 162], "zoo": [161, 162], "__": [161, 162], "aecenv": [161, 162], "dead": [161, 162], "done_on_ani": [161, 162, 485], "compulsori": [161, 162], "adversary_0": [161, 162], "adversari": [161, 162, 383, 485], "sisl": 161, "multiwalker_v9": 161, "aec": [161, 162], "n_piston": [161, 162], "pistonball_v6": [161, 162], "piston": [161, 162], "piston_0": [161, 162], "piston_1": [161, 162], "piston_20": [161, 162], "tictactoe_v3": [161, 162], "player": [161, 162, 170], "player_1": [161, 162], "player_2": [161, 162], "butterfli": 162, "parallel_env": [162, 471, 491, 492], "_setup": [163, 169], "async_reset_send": [163, 169], "async_reset_recv": [163, 169], "cube": 164, "roboh": 165, "expos": [165, 227, 230, 360, 371, 389, 472], "vikashplu": 165, "wiki": 165, "2310": 165, "06828": 165, "from_depth": 165, "smacv2": [166, 167], "starcraft": [166, 167], "challeng": [166, 167, 476, 487, 488], "10gen_terran": [166, 167], "10gen_zerg": [166, 167], "10gen_protoss": [166, 167], "3m": [166, 167], "8m": [166, 167], "25m": [166, 167], "5m_vs_6m": [166, 167], "8m_vs_9m": [166, 167], "10m_vs_11m": [166, 167], "27m_vs_30m": [166, 167], "mmm": [166, 167], "mmm2": [166, 167], "2s3z": [166, 167], "3s5z": [166, 167], "3s5z_vs_3s6z": [166, 167], "3s_vs_3z": [166, 167], "3s_vs_4z": [166, 167], "3s_vs_5z": [166, 167], "1c3s5z": [166, 167], "2m_vs_1z": [166, 167], "corridor": [166, 167], "6h_vs_8z": [166, 167], "2s_vs_1sc": [166, 167], "so_many_banel": [166, 167], "bane_vs_ban": [166, 167], "2c_vs_64zg": [166, 167], "old": [166, 167, 277, 386, 492], "smac": [166, 167], "map_nam": [166, 167], "176": [166, 167], "battle_won": [166, 167], "dead_al": [166, 167], "dead_enemi": [166, 167], "episode_limit": [166, 167], "322": [166, 167], "procedur": [166, 167], "distribution_config": [166, 167], "n_unit": [166, 167], "n_enemi": [166, 167], "team_gen": [166, 167], "dist_typ": [166, 167], "weighted_team": [166, 167], "unit_typ": [166, 167], "marin": [166, 167], "maraud": [166, 167], "medivac": [166, 167], "exception_unit_typ": [166, 167], "start_posit": [166, 167], "surrounded_and_reflect": [166, 167], "map_x": [166, 167], "map_i": [166, 167], "capability_config": [166, 167], "131": [166, 167], "starcraft2env": 167, "tic": 170, "tac": 170, "toe": 170, "single_play": 170, "player1": 170, "desired_batch_s": 170, "player0": 170, "uniti": [171, 172], "ml": [171, 172], "technolog": [171, 172], "llapi": [171, 172], "mlagents_env": [171, 172], "unityenviron": [171, 172], "file_nam": 171, "registered_nam": 171, "nor": 171, "connect": 171, "3dball": 171, "group_0": 171, "vectorsensor_size8": 171, "continuous_act": [171, 173, 174, 427, 485, 486], "agent_10": 171, "agent_11": 171, "agent_4": 171, "agent_5": 171, "agent_6": 171, "agent_7": 171, "agent_8": 171, "agent_9": 171, "group_reward": 171, "proroklab": [173, 174], "vectorizedmultiagentsimul": [173, 174], "2207": [173, 174], "03530": [173, 174], "basescenario": 173, "defaultt": 173, "chosen": [173, 174, 261, 262, 325, 326, 334, 357, 429, 466, 480], "sparsiti": 173, "unbatched_action_spec": [173, 174], "unbatched_observation_spec": [173, 174], "unbatched_reward_spec": [173, 174], "het_spec": [173, 174], "het_specs_map": [173, 174], "flock": [173, 174, 427], "agent_collision_rew": [173, 174], "agent_distance_rew": [173, 174], "ca": 176, "environment4": 176, "get_group_map": 176, "sumbodul": 179, "histori": [180, 181, 182, 185, 188, 193, 196, 198, 199, 338, 342, 405, 463, 465, 483], "answer": [180, 182, 184, 185, 187, 483], "hopefulli": [180, 472], "system_prompt": [180, 196, 198, 465, 483], "apply_templ": [180, 181, 182, 185, 196, 198, 483], "pars": [180, 184, 200, 338, 342, 465, 483, 489], "template_kwarg": [180, 181, 182, 185], "system_rol": [180, 465], "user_rol": [180, 465], "make_lazi": 180, "datasetchatenv": [180, 465], "gsm8kenv": [180, 181, 184, 191, 465], "ifevalenv": [180, 181], "pprint": [180, 185, 465], "qwen2": [180, 182, 185, 196, 198, 339, 465, 483], "3b": [180, 182, 185, 196, 198, 339], "ni": 180, "im_end": [180, 182, 196, 198, 465, 483], "td_action": 180, "td_next": 180, "nthi": 180, "rlvr": 181, "verifi": 181, "batch_size_dl": [181, 182, 185, 191], "thin": [181, 190, 337, 465, 467], "chatenv": [181, 190, 196, 198, 465, 483], "bucket": 181, "dataloadingprim": [181, 188, 262, 465], "reset_dataload": [181, 182, 185, 194], "set_missing_toler": [181, 182, 185, 269], "gsm8k": [182, 183, 191], "compute_reward": [182, 185], "question": [182, 185, 483, 489, 491], "adam": [182, 323, 332, 471, 472, 473, 474, 475, 478, 481, 485, 486, 487], "bought": 182, "sandwich": 182, "he": 182, "paid": 182, "breed": 182, "mari": 182, "saw": [182, 480, 487, 489], "reward_answ": [182, 184], "reward_contain": [182, 184], "reward_right": [182, 184], "reward_think": [182, 184], "snak": 182, "set_done_if_answ": 184, "make_gsm8k_env": [184, 465], "asssoci": 184, "extract_tag": 184, "xml": 184, "ifev": [185, 187], "nyou": 185, "instruction_id_list": [185, 187], "detectable_cont": 185, "number_placehold": 185, "num_highlight": 185, "num_": 185, "respond": 185, "plan": [185, 283, 309, 310], "week": 185, "europ": 185, "trip": 185, "london": 185, "pari": [185, 483], "rome": 185, "cap": [185, 473, 489], "restaur": 185, "prompt_level_strict_acc": [186, 187], "inst_level_strict_acc": [186, 187], "prompt_level_loose_acc": [186, 187], "inst_level_loose_acc": [186, 187], "instruction_ids_kei": 187, "keyword_args_kei": 187, "id_kei": 187, "response_column": 187, "score_kei": 187, "ifeval_scor": 187, "aggregate_reward": 187, "ifevalscoredata": 187, "format_weight": 187, "scorer": 187, "IF": 187, "column": 187, "think_block": 187, "answer_block": 187, "langdetect": 187, "nltk": 187, "immutabledict": 187, "default_reward_aggreg": 187, "nuanc": 187, "highest": [187, 472, 477], "adher": 187, "medium": [187, 489], "lowest": [187, 489], "metric": [187, 371, 389, 402, 467, 471], "overal": 187, "formula": [187, 195, 239, 303, 332, 333, 369, 371, 386, 389, 402, 467, 473], "_score": 187, "_bonu": 187, "cot": 188, "token_kei": 188, "str_kei": 188, "attention_kei": 188, "assign_reward": 188, "has_attent": 188, "assign_don": 188, "batchless": 188, "eos_token_id": 188, "pretrainedtokenizerbas": [188, 201, 266], "stack_method": [188, 194], "as_nested_tensor": [188, 194], "data_kei": 188, "bert": [188, 201, 266], "uncas": [188, 201, 266], "tokens_in": 188, "tokens_out": 188, "mlgym": [190, 192], "get_library_nam": 190, "prisonersdilemma": 192, "reward_wrong_format": 192, "mlgymenv": 192, "wrongli": 192, "allowed_domain": [193, 483], "tool_nam": [193, 196, 198], "web": [193, 475, 483], "brows": [193, 483], "browser": [193, 483], "click": [193, 483], "llm_tool": 193, "clean": 193, "mappabl": 194, "maybe_dense_stack": 194, "unrel": 194, "endless_dataload": 194, "set_capture_non_tensor_stack": 194, "dummydataload": 194, "generate_random_str": 194, "ascii_lowercas": 194, "__next__": 194, "zxwvupirska": 194, "stringa": 194, "zxwvupirsk": 194, "roll": 194, "init_st": 194, "nngcmflsana": 194, "vrrbnhzpmga": 194, "nngcmflsan": 194, "vrrb": 194, "dummytensordataload": 194, "generate_random_tensor": 194, "pad_tensor": 194, "padding_length": 194, "data_spec": 194, "log_prob_kei": [195, 199, 239, 359, 467], "add_to_reward": 195, "pi_curr": [195, 239], "pi_0": [195, 239], "overfit": [195, 239], "probabilist": [195, 239, 355, 369, 389, 463, 473, 491], "get_dist": [195, 239, 359, 360], "kl_penalti": 195, "ref_log_prob": [195, 199, 405], "tool_schema": 196, "mcp": 196, "protocol": 196, "pattern": 196, "schema": 196, "add_numb": 196, "add_schema": 196, "successfulli": [196, 198, 465, 483], "version_typ": 197, "period": [197, 282], "llmcollector": [197, 463, 465], "tracker": [197, 238], "new_weight": 197, "current_vers": 197, "uuid4": 197, "nprint": 198, "categoricalsequenti": 199, "history_kei": 199, "assistant_onli": [199, 405], "tokenizer_kwarg": [199, 338, 342, 405], "my_templ": 199, "assit": [199, 405], "_chat_templ": [199, 405], "sft": [199, 405, 463], "sftloss": 199, "optconfig": [199, 405], "optforcausallm": [199, 405], "hello": [199, 338, 342, 405], "weather": [199, 405], "facebook": [199, 405], "opt": [199, 405], "125m": [199, 405], "policy_train": [199, 302, 405], "policy_ref": [199, 405], "return_log_prob": [199, 239, 338, 342, 347, 348, 349, 355, 359, 361, 391, 405, 466, 473, 477, 485, 486, 491], "txt_start": [199, 405], "zip": [199, 405, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "max_seq_len": 199, "actor_network": [199, 369, 370, 371, 372, 373, 375, 377, 378, 385, 386, 388, 389, 390, 391, 392, 394, 395, 402, 405, 467, 471, 473, 478, 485, 486], "normalize_by_seq_length": [199, 405], "kl_to_ref_coeff": [199, 402, 405], "loss_val": [199, 374, 376, 405, 467, 471, 473, 474, 475, 478, 479, 481, 485, 486, 489], "loss_sft": [199, 405, 406], "7856": 199, "loss_kl_to_ref": [199, 403, 405, 406], "0000": [199, 252, 263, 264, 299, 323, 362, 415], "batchabl": 199, "use_raw_nontensor": [201, 237, 266, 270], "additional_token": [201, 266], "skip_special_token": [201, 266], "add_special_token": [201, 266], "return_attention_mask": [201, 266], "missing_toler": [201, 266], "call_before_reset": [201, 266], "test_input_spec": [201, 270], "list_of_tensordict": [202, 203], "unsqueeze_null_shap": 204, "dynamic_shap": 204, "model_bas": [205, 206, 283, 310], "model_based_env": [205, 380], "dreamerenv": [205, 380, 463], "model_based_env_ev": 205, "spec_typ": 207, "convert_specnam": 207, "remap_state_to_observ": 207, "spectyp": 207, "unus": 207, "probabilistictdmodul": [208, 308, 355, 359, 408, 442], "keep_oth": [210, 487], "exclude_reward": 210, "exclude_don": 210, "next_": 210, "write_full_fals": 211, "_terminated_or_trunc": 211, "num_interv": 212, "out_action_kei": 212, "samplingstrategi": 212, "optino": 212, "intenum": 212, "action_disc": 212, "masker": 213, "finit": [213, 233, 323, 477, 489], "maskedenv": 213, "ones_lik": [213, 311], "scatter": 213, "fill_float": 215, "fill_int": 215, "fill_bool": 215, "someenvclass": 215, "autoresetenv": 215, "fooenv": 215, "sign": [215, 257, 409, 485], "envtyp": 215, "reshape_fn": [216, 475], "reset_func": 216, "env_kwarg": [216, 459, 460, 471], "accompani": [216, 260], "tensordict_batch_s": 216, "tensordict_reset": [216, 487], "biner": 217, "burn_in": 218, "burn": 218, "burnt": 218, "gru_modul": [218, 302, 366], "input_s": [218, 262, 300, 301, 302, 305, 306, 307, 366, 474, 475], "hidden_s": [218, 262, 300, 301, 302, 305, 306, 307, 366, 474, 475], "default_recurrent_mod": [218, 302, 307], "burn_in_transform": 218, "gru": [218, 262, 301, 302, 366, 475], "num_lay": [218, 300, 302, 305, 307, 318, 319, 366, 475], "is_init": [218, 238, 302, 307, 324, 354, 366, 409, 474, 475], "86": 218, "3008": 218, "0344": 218, "padding_valu": [219, 311, 312], "as_invers": 219, "movement": 219, "1312": 219, "5602": 219, "consumpt": [219, 463], "pictur": 219, "pixels_trsf": [219, 489], "grayscal": [219, 472, 474, 475, 489, 492], "data_exclud": [219, 489], "make_rb_transform_and_sampl": 219, "sampler_kwarg": 219, "redund": [219, 474], "del_kei": [220, 259, 272, 484, 487], "unsqueeze_if_oor": 220, "observation_posit": 220, "observation_veloc": 220, "delet": [220, 259, 436], "crop": [221, 248, 429], "center": [221, 323, 429], "width": [221, 226, 251], "height": [221, 226, 251], "squar": [221, 226, 303, 332, 333, 371, 389, 402, 429, 465], "scalar": [222, 253, 281, 290, 292, 299, 316, 317, 324, 365, 369, 370, 371, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 402, 405, 407, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 466, 472, 478, 487], "rewardsc": [223, 269, 471, 472, 474], "rewardclip": 223, "transformed_env": [223, 269, 476], "condition": 224, "switch": [224, 269, 277, 303, 333, 427], "met": [224, 225, 368, 485, 487], "unalt": 224, "criteria": 224, "policy_switch": 224, "cond": [224, 225], "step_count_kei": [224, 225, 260], "step_count_tot": 224, "step_count_main": 224, "0322": 224, "1540": 224, "0111": 224, "3190": 224, "0299": 224, "1544": 224, "0181": 224, "3280": 224, "0276": 224, "1550": 224, "0255": 224, "3414": 224, "0253": 224, "1558": 224, "0334": 224, "3596": 224, "0230": 224, "1569": 224, "0422": 224, "3828": 224, "0206": 224, "1582": 224, "0519": 224, "4117": 224, "1598": 224, "0629": 224, "4469": 224, "0156": 224, "1617": 224, "0753": 224, "4891": 224, "0130": 224, "1639": 224, "0895": 224, "5394": 224, "0104": 224, "1665": 224, "1058": 224, "5987": 224, "0076": 224, "1696": 224, "1246": 224, "6685": 224, "0047": 224, "1732": 224, "1463": 224, "7504": 224, "0016": 224, "1774": 224, "1715": 224, "8459": 224, "0020": 224, "0150": 224, "1884": 224, "6117": 224, "0017": 224, "2071": 224, "3838": 224, "0105": 224, "2115": 224, "5110": 224, "altogeth": 225, "exectu": 225, "palliat": [225, 477], "inner_count": 225, "middle_env": 225, "middle_count": 225, "auto_unwrap": [225, 269, 437], "9670": 225, "2546": 225, "9669": 225, "9802": 225, "1981": 225, "1601": 225, "9926": 225, "1214": 225, "5556": 225, "9994": 225, "7622": 225, "9984": 225, "0561": 225, "7933": 225, "9895": 225, "1445": 225, "7779": 225, "dtype_in": 227, "dtype_out": 227, "scan": [227, 230, 360, 361], "resp": [227, 230], "not_transform": [227, 230], "orig_devic": 228, "unspecifi": 228, "num_actions_effect": 229, "max_act": 229, "include_forward": 229, "num_act": [229, 287, 378, 475, 477], "action_out": 229, "eol_kei": 231, "lives_kei": 231, "eol_attribut": 231, "breakout": 231, "210": [231, 245], "160": [231, 245], "eol_transform": 231, "eol": 231, "dqnloss": [231, 369, 370, 372, 373, 376, 378, 379, 380, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 402, 405, 407, 454, 463, 467, 472, 474, 475, 481], "register_kei": 231, "loss_or_advantag": 231, "lossmodul": [231, 447, 456, 457, 463, 467], "valueestimatorbas": [231, 387, 402, 405, 463], "first_dim": 234, "last_dim": 234, "allow_positive_dim": [234, 259, 271], "frameskip": 234, "repeatedli": [235, 473, 486], "hash_fn": 237, "repertoir": 237, "reproducible_hash": 237, "unarytransform": 237, "observation_str": 237, "tobyt": [237, 270], "observation_hash": 237, "x08": 237, "x8b": 237, "xbexav": 237, "xbf": 237, "x00": 237, "xee": 237, "xb5": 237, "x17": 237, "x8f": 237, "xbe": [237, 270], "x88": 237, "xccu": 237, "xc0vr": 237, "get_input_from_hash": 237, "hash_tensor": 237, "init_kei": [238, 354], "normalparamextractor": [239, 347, 348, 349, 355, 361, 369, 370, 372, 378, 385, 389, 390, 391, 392, 394, 395, 466, 473, 477, 486, 491], "probabilisticactor": [239, 347, 348, 349, 350, 369, 370, 372, 375, 377, 378, 385, 388, 389, 390, 391, 392, 394, 395, 466, 471, 473, 477, 485, 486], "tanhnorm": [239, 347, 348, 349, 355, 361, 369, 370, 372, 385, 389, 390, 391, 392, 394, 395, 463, 473, 486, 491], "apply_": 239, "copy_": [239, 471], "mogymwrapp": [240, 463], "mo_env": 240, "sea": 240, "treasur": 240, "so_env": 240, "stack_reward": 241, "stack_observ": 241, "auto_batch_size_": 241, "macro": [241, 354], "noop": 242, "trial": 242, "standard_norm": [243, 254, 276, 277, 471, 472, 474], "affin": [243, 254, 276, 277], "layer": [243, 276, 282, 286, 287, 289, 290, 295, 297, 300, 301, 302, 305, 306, 307, 308, 313, 314, 316, 317, 318, 319, 329, 330, 344, 353, 362, 466, 472, 473, 474, 475, 477, 485, 488], "recover": 243, "set_default_tensor_typ": 243, "doubletensor": 243, "isclos": 243, "next_ob": [243, 409, 410, 411, 412, 491], "init_stat": [243, 471, 472, 473, 474], "3752e": 243, "5087e": 243, "9294e": 243, "9636": 243, "5608": 243, "6408": 243, "num_it": [243, 472, 473], "reduce_dim": [243, 471, 472, 473, 474], "cat_dim": [243, 471, 472, 473, 474], "keep_dim": [243, 354, 472, 474], "statist": [243, 276, 277, 282, 391, 461, 471, 472, 473, 492], "gaussian": [243, 262, 281, 283, 310, 316, 317, 322, 473, 475, 485], "empir": [243, 283, 310, 355, 359, 471, 473, 486], "3d": [243, 286], "reorder": 245, "in_keys_in": [245, 271], "channel": [245, 265, 313, 318, 319, 472], "r3m": [247, 488], "resnet": [247, 272, 274], "ego4d": [247, 272, 274], "univers": [247, 272, 274, 476], "suraj": [247, 272], "nair": [247, 272], "aravind": [247, 272], "rajeswaran": [247, 272], "vikash": [247, 272, 274], "kumar": [247, 272, 274], "chelsea": [247, 272], "finn": [247, 272], "abhinav": [247, 272], "gupta": [247, 272], "2203": [247, 272, 310, 488], "12601": [247, 272, 488], "_init": [247, 272, 471], "resnet50": [247, 274, 488], "model_nam": [247, 272, 274, 339, 432], "resnet34": 247, "resnet18": 247, "r3m_vec": [247, 488], "stack_imag": [247, 274], "tread": [247, 274], "hub": [247, 274, 476], "resnet50_weight": [247, 274], "imagenet1k_v1": [247, 274], "download_path": [247, 274], "tensor_pixels_kei": [247, 274], "sub_seq_len": 248, "sample_dim": [248, 471], "hesit": 248, "robust": [248, 282], "mix": [248, 325, 334, 407, 471, 485, 486], "improp": 248, "dummyenv": 249, "another_oth": 249, "other_reward": 249, "create_copi": 250, "stuff": [250, 479], "newnam": 250, "r2g": 252, "reward_to_go": 252, "bernoulli_": 252, "9010": 252, "9404": [252, 415], "9701": [252, 415], "9900": [252, 415], "clamp_min": 253, "clamp_max": 253, "clip_min": 253, "clip_max": 253, "episode_": 255, "reward1": 255, "reward2": 255, "episode_reward": [255, 485, 486], "keep_reward": 256, "keep_don": 256, "logical_or": 257, "in_key_inv": 259, "unstack": 259, "update_don": 260, "disjunct": 260, "recognis": 260, "target_return": 261, "default_valu": [262, 366], "expand_spec": 262, "single_default_valu": 262, "call_before_env_reset": 262, "unit": [262, 283, 297, 300, 301, 318, 319, 327, 328, 473], "scala": 262, "mykei": 262, "__unless": 262, "exists__": 262, "get_primers_from_modul": [262, 285, 302, 307, 463], "recurrent_st": [262, 302, 307, 366, 474], "10th": 263, "0216": 263, "1149": 263, "1990": 263, "2749": 263, "3281": 263, "9290": 263, "3702": 263, "8978": 263, "time_kei": 264, "elaps": [264, 480], "monitor": [264, 371, 389, 476], "expend": 264, "_polici": 264, "time_reset": 264, "time_polici": 264, "time_step": [264, 306, 354], "0882": 264, "0002": 264, "5797e": 264, "6289e": 264, "7990e": 264, "0824e": 264, "0837e": 264, "6056e": 264, "2016e": 264, "1062e": 264, "7009e": 264, "from_int": 265, "shape_toler": 265, "ri": 265, "traj_count": 267, "traj": 267, "countingenv": 267, "make_env_c0": 267, "make_env_c1": 267, "set_contain": 268, "reset_par": 268, "smoothli": [269, 282], "add_1": 269, "cache_spec": 269, "inv_fn": 270, "unari": 270, "durin": 270, "ommit": 270, "observation_trsf": 270, "xbc": 270, "x7f": 270, "x859": 270, "x81": 270, "x9a": 270, "xbd": 270, "xb8t8": 270, "test_output_spec": 270, "danger": 271, "vc1": 272, "vc1_vec": 272, "untrain": 272, "make_noload_model": 272, "vip": [273, 274, 488], "implicit": [274, 377, 385, 489], "jason": 274, "ma": 274, "shagun": 274, "sodhani": 274, "dinesh": 274, "jayaraman": 274, "osbert": 274, "bastani": 274, "ami": 274, "zhang": 274, "vip_vec": 274, "final_nam": 275, "sb3": 275, "terminal_obs_read": 275, "vecnormv2": 276, "new_api": [276, 277], "to_observation_norm": [276, 277], "frozen_copi": [276, 277], "shared_td": 276, "race": 276, "decai": [276, 277, 281, 299, 393, 445, 471, 472, 474, 492], "underflow": [276, 445], "build_td_for_shared_vecnorm": 276, "memmori": 276, "td_share": 276, "v": [276, 300, 301, 305, 306, 347, 377, 385, 392, 471, 472], "unfreez": [276, 277], "observationnorm": [276, 277, 461, 471, 472, 473, 474, 491], "train_env": 276, "eval_env": 276, "9999": 277, "0001": [277, 297], "shared_data": 277, "reduce_batch_dim": 277, "varianc": [277, 282, 283, 284, 303, 332, 333, 389, 467, 471, 473, 486], "vs": [277, 280], "weigh": 277, "_cast_int_to_float": 277, "env_trsf": 277, "observation_norm": 277, "reward_norm": [277, 445], "unnorm": [277, 304, 311, 312, 320], "7967": 277, "1238": 277, "5911": 277, "5275": 277, "8585": 277, "5028": 277, "2505": 277, "3169": [277, 362], "1332": 277, "1235": 277, "6596e": 277, "3072e": 277, "9170e": 277, "9255e": 277, "9131e": 277, "4671e": 277, "3760e": 277, "2058e": 277, "3484e": 277, "6185e": 277, "1456": 277, "1862": 277, "2053": 277, "2605": 277, "4046": 277, "5185": 277, "8023": 277, "1364": 277, "6183": 277, "5406": 277, "0920": 277, "1492": 277, "2702": 277, "3917": 277, "5001": 277, "7947": 277, "0160": 277, "3347": 277, "9082": 277, "9679": 277, "2199": 277, "2918": 277, "1668": 277, "2083": 277, "4981": 277, "5046": 277, "7950": 277, "9791": 277, "1484": 277, "4182": 277, "2201": 277, "0403": 277, "5206": 277, "7791": 277, "8282": 277, "2279": 277, "2907": 277, "4929": 277, "7793": 277, "8626": 277, "1832": 277, "local_env": 277, "testifi": 277, "4307": 277, "9613": 277, "state_dim": [278, 288, 293, 322, 327, 328, 350], "action_dim": [278, 288, 289, 291, 293, 322, 350, 471, 484], "gsde": [278, 390, 461], "gsdemodul": 278, "rb_transform": 279, "resist": 279, "insensit": 279, "sensit": [279, 472, 474], "_orig": 279, "95": [279, 310, 397, 473, 474], "window": [279, 354, 485, 489, 491], "module_nam": [280, 387, 402, 405], "from_vers": 280, "to_vers": 280, "class_method": 280, "import_modul": 280, "get_class_that_defined_method": 280, "module_set": 280, "setters_dict": 280, "setter": 280, "setter_dict": 280, "po": 281, "sigma_init": [281, 485], "sigma_end": [281, 485], "annealing_num_step": [281, 299, 324, 471, 472, 474, 475, 477, 481, 485], "sigma": [281, 300, 301, 303, 305, 306, 324, 332, 333, 405, 473, 485], "omiss": [281, 299, 324], "momentum": 282, "max_r": 282, "max_d": 282, "warmup_step": 282, "batchrenorm": 282, "1702": 282, "03275": 282, "corenet": 282, "enhanc": 282, "warmup": 282, "phase": [282, 284, 486, 489], "outlier": 282, "warm": 282, "renorm": 282, "entropi": [283, 304, 311, 320, 369, 370, 371, 372, 377, 378, 385, 386, 388, 389, 390, 392, 394, 395, 402, 403, 486], "botev": 283, "2013": 283, "cem": 283, "maximis": [283, 289, 291, 310, 472, 473, 486], "modelbasedenv": [283, 310], "planning_horizon": [283, 310], "mpc": [283, 309, 310], "num_candid": [283, 310], "candid": [283, 310], "top_k": [283, 310], "modelbasedenvbas": [283, 309, 310, 463], "safemodul": [283, 309, 347, 349, 359, 369, 370, 372, 377, 378, 385, 389, 390, 391, 392, 394, 395, 452, 453, 457, 463, 491], "hausknecht": 284, "wagen": 284, "reus": [284, 289, 436], "consistentdropoutmodul": [284, 466], "capit": [284, 483], "conceptu": 284, "devianc": 284, "set_exploration_typ": [284, 387, 442, 463, 466, 473, 474, 475, 477, 485, 491], "_main_async_collector": 284, "asyncdatacollector": [284, 463], "ditto": 284, "consistentdropout": 285, "input_shap": 285, "batcht": 285, "make_tensordict_prim": [285, 302, 307, 474], "input_dtyp": 285, "get_default_dtyp": [285, 445], "mask_6127171760": 285, "env0": [285, 492], "num_cel": [286, 287, 289, 290, 291, 292, 297, 298, 302, 307, 308, 313, 314, 347, 366, 472, 473, 474, 475, 477, 478, 481, 485, 486, 491], "elu": [286, 287, 289, 290, 291, 292, 297, 298, 313, 472, 491], "activation_kwarg": [286, 287, 308], "norm_class": [286, 287, 289, 290, 308], "norm_kwarg": [286, 287, 308], "bias_last_lay": [286, 287, 289, 290, 291, 292, 298, 308], "aggregator_class": [286, 287, 289, 290, 472, 474, 491], "squashdim": [286, 287, 289, 298, 313, 491], "aggregator_kwarg": [286, 287, 289, 290, 472, 474], "squeeze_output": [286, 287, 289, 290, 472, 474], "convolut": [286, 287, 289, 290, 313, 329, 475, 477], "cell": [286, 287, 300, 301, 302, 305, 306, 307, 308, 313, 314, 473, 475, 476, 477, 478, 479, 480, 481], "kernel": [286, 287, 313], "cnet": [286, 287], "conv3d": 286, "rectangular": [286, 287], "lazyconv2d": [287, 289, 290, 298, 313], "default_atari_dqn": [287, 475], "semin": 287, "transformer_config": [288, 322, 350], "decisiontransform": [288, 322], "dtconfig": [288, 293, 322], "2202": [288, 293, 388], "05607": [288, 293, 388], "return_to_go": [288, 293, 322, 350], "conv_net_kwarg": [289, 290], "mlp_net_kwarg": [289, 290, 291], "use_avg_pool": [289, 290], "WITH": [289, 290, 291, 292, 324, 393], "1509": [289, 290, 291, 292, 310, 324, 374, 384, 393], "02971": [289, 290, 291, 292, 324, 393], "convnet": [289, 290, 298, 313, 474, 475, 477, 491], "ndims_in": 289, "avgpool": [289, 290], "lazylinear": [289, 290, 291, 292, 298, 308, 466, 473, 477, 487, 488], "2304": 289, "adaptiveavgpool2d": [290, 472, 474], "output_s": [290, 472, 474], "squeeze2dlay": 290, "400": [291, 292, 486], "mlp_net_kwargs_net1": 292, "mlp_net_kwargs_net2": 292, "mlp1": 292, "mlp2": 292, "desdescrib": 293, "n_embd": 293, "n_layer": [293, 300, 305], "n_head": 293, "n_inner": 293, "n_posit": 293, "resid_pdrop": 293, "attn_pdrop": 293, "gpt2config": 293, "atol": [294, 331], "rtol": [294, 331], "batch_shap": [294, 320, 331], "event_shap": [294, 331], "absolut": [294, 331, 471], "_instanc": 294, "densiti": [294, 311, 312, 320, 333], "mass": [294, 311, 312, 320, 333, 487], "rsampl": [294, 304, 312, 320, 359], "sample_shap": [294, 304, 311, 312, 320], "softmax": [295, 312, 320, 351, 352], "var_num": [296, 326, 351, 352, 357], "action_value_kei": [296, 326, 351, 352, 356, 357, 372, 387, 402, 405, 407], "action_mask_kei": [296, 299, 326, 351, 352, 356, 357], "1707": [296, 352, 379, 389], "06887": [296, 352, 379], "mult": [296, 314, 326, 351, 352, 356, 357], "tensordict_modul": [296, 300, 301, 305, 306, 326, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 370, 372, 373, 377, 378, 385, 389, 390, 391, 392, 394, 395, 466], "nbin": [296, 351, 466], "customdistributionalqv": 296, "log_softmax": [296, 351], "qvalue_actor": [296, 326, 351, 356, 466], "to_modul": [296, 358, 361, 471, 491], "std_bia": 297, "std_min_val": 297, "belief": [297, 318, 327, 328], "1912": [297, 380, 381, 382], "01603": [297, 380, 381, 382], "softplu": [297, 365, 367, 368], "out_features_valu": 298, "cnn_kwarg": [298, 472], "mlp_kwarg": [298, 472], "duel": 298, "cnn": [298, 313, 472, 475, 477, 491], "06581": 298, "512": 298, "greedi": [299, 326, 352, 357, 472, 474, 475, 477], "eps_init": [299, 324, 472, 474, 475, 477, 481], "eps_end": [299, 324, 472], "explorative_polici": [299, 324], "9055": 299, "9277": 299, "6295": 299, "2532": 299, "grad_fn": [299, 346, 359], "addbackward0": 299, "batch_first": [300, 305, 474], "bidirect": [300, 305, 474], "cudnn": [300, 301, 302, 305, 306, 307, 474, 475], "rnn": [300, 301, 302, 305, 306, 307, 345, 378, 392, 409, 474, 475, 477], "device_count": [300, 301, 305, 306, 492], "n_in": [300, 301, 305, 306], "n_out": [300, 301, 305, 306], "h0": [300, 301, 305, 306], "h1": [300, 301, 305, 306], "vectoris": [300, 301, 305, 306], "call_gru": [300, 301], "h_out": [300, 301, 305, 306], "batched_cal": [300, 301, 305, 306], "gate": [300, 301, 305], "r_t": 300, "w_": [300, 301, 305, 306], "ir": [300, 301], "x_t": [300, 305], "b_": [300, 301, 305, 306], "hr": [300, 301, 305], "h_": [300, 301, 305], "z_t": 300, "iz": [300, 301], "hz": [300, 301], "n_t": 300, "odot": [300, 301, 305, 306], "hn": [300, 301, 305], "h_t": [300, 305], "sigmoid": [300, 301, 305, 306], "hadamard": [300, 301, 305, 306], "multilay": [300, 305], "_t": [300, 305, 486, 487], "ge": [300, 305], "bernoulli": [300, 305], "b_ih": [300, 301, 305, 306, 307], "b_hh": [300, 301, 305, 306, 307], "h_0": [300, 305, 306], "pack_padded_sequ": [300, 305], "pack_sequ": [300, 305], "num": [300, 305, 481], "_layer": [300, 305], "_size": [300, 301, 305, 306], "h_n": [300, 305], "packedsequ": [300, 305], "weight_ih_l": [300, 305], "learnabl": [300, 301, 305, 306], "w_ir": 300, "w_iz": 300, "w_in": 300, "num_direct": [300, 305], "weight_hh_l": [300, 305], "w_hr": 300, "w_hz": 300, "w_hn": 300, "bias_ih_l": [300, 305], "b_ir": 300, "b_iz": 300, "b_in": 300, "bias_hh_l": [300, 305], "b_hr": 300, "b_hz": 300, "b_hn": 300, "mathcal": [300, 301, 305, 306], "sqrt": [300, 301, 305, 306, 324], "seq_len": [300, 305], "subtli": 300, "matrix": [300, 305, 316, 317], "hx": [300, 301, 305, 306], "lstmcell": [301, 307, 475], "gru_cel": 301, "weight_ih": [301, 306], "weight_hh": [301, 306], "bias_ih": [301, 306], "bias_hh": [301, 306], "rocm": [301, 306], "embedd": [302, 307], "grucel": [302, 358], "python_bas": [302, 307], "custom_kei": [302, 307], "hasn": [302, 307], "set_recurrent_mod": [302, 307, 474], "recurrent_mod": [302, 307, 345], "rs": [302, 471], "gru_module_train": 302, "traj_td": 302, "make_cudnn_bas": [302, 307], "make_python_bas": [302, 307, 475], "supplementari": [302, 307, 473, 492], "That": [302, 307, 473, 485], "dealt": [302, 307], "poorli": [302, 307], "meth": [302, 307, 387, 487], "data_collector": [302, 307, 472], "upscal": [303, 332, 333], "tanh_loc": [303, 332, 333], "event_dim": [303, 331, 332], "poor": [303, 332, 333], "explos": [303, 332, 333], "ignore_index": 304, "50000": 304, "inf": [304, 311, 312], "test_distribut": 304, "clear_cach": 304, "masked_dist": 304, "masked_logit": 304, "position_level_mask": 304, "proj_siz": 305, "c0": [305, 306], "c1": [305, 306], "call_lstm": [305, 306], "c_out": [305, 306], "i_t": 305, "ii": [305, 306], "hi": [305, 306], "f_t": 305, "hf": [305, 306], "g_t": 305, "ig": [305, 306], "hg": [305, 306], "o_t": 305, "ho": [305, 306], "c_t": 305, "c_": 305, "1402": 305, "1128": 305, "c_0": [305, 306], "proj": 305, "c_n": 305, "w_ii": 305, "w_if": 305, "w_ig": 305, "w_io": 305, "w_hi": 305, "w_hf": 305, "w_hg": 305, "w_ho": 305, "b_ii": 305, "b_if": 305, "b_ig": 305, "b_io": 305, "b_hi": 305, "b_hf": 305, "b_hg": 305, "b_ho": 305, "weight_hr_l": 305, "_revers": 305, "analog": [305, 477], "cn": 305, "lstm_cell": 306, "h_1": 306, "c_1": 306, "cx": 306, "recurrent_state_h": 307, "recurrent_state_c": 307, "triplet": [307, 356, 357], "lstm_modul": 307, "rs_h": 307, "rs_c": 307, "single_bias_last_lay": 308, "layer_class": 308, "layer_kwarg": 308, "perceptron": [308, 477], "noisylinear": [308, 316, 463, 472], "noisylazylinear": [308, 463], "mpcplanner": 309, "tensordict_out": [309, 336, 338, 342, 492], "mppi": 310, "covari": 310, "william": [310, 391], "aldrich": 310, "theodor": 310, "01149": 310, "hansen": 310, "wang": 310, "su": 310, "04955": 310, "valueoper": [310, 347, 348, 349, 369, 370, 371, 372, 373, 378, 385, 386, 389, 390, 391, 392, 394, 395, 457, 466, 471, 473, 478], "tdlambdaestim": [310, 463, 471], "value_net": [310, 374, 376, 391, 409, 410, 411, 412, 473, 475, 477, 478, 481], "adv": 310, "lmbda": [310, 397, 409, 412, 414, 420, 421, 422, 425, 426, 467, 471, 473, 486], "value_network": [310, 373, 374, 376, 377, 379, 385, 392, 409, 410, 411, 412, 467, 471, 473, 475, 478, 481, 485], "temperatur": [310, 338, 342, 370, 377, 385], "neg_inf": [311, 312], "use_cross_entropi": 311, "padding_sid": 311, "api_doc": [311, 312], "tf_agent": [311, 312], "sparse_mask": [311, 312], "cross_entropi": 311, "1203": [311, 312], "0928": [311, 312], "0831": [311, 312], "1972": [311, 312], "grad_method": [312, 320], "reparamgradientstrategi": [312, 320], "passthrough": [312, 320], "relaxedonehot": [312, 320], "sample_non_valid": 312, "zeros_lik": [312, 487], "share_param": [313, 314, 315, 485, 486], "use_td_param": [313, 314, 315], "get_stateful_net": [313, 314, 315, 387, 402, 405, 466, 467], "from_stateful_net": [313, 314, 315, 387, 402, 405, 467], "homogen": [313, 314, 485, 486], "tensordictparam": [313, 314, 359], "_empty_net": [313, 314], "roughli": [313, 314, 491], "agent_network": [313, 314], "modulelist": [313, 314], "2592": 313, "decentr": 313, "n_agent_input": [314, 315, 485, 486], "n_agent_output": [314, 315, 485, 486], "toech": 314, "centalis": 314, "shown": [314, 466, 475, 483, 484, 485, 486, 489], "agent_dim": 315, "vmap_random": [315, 387, 402, 405, 467], "stateful_net": [315, 387, 402, 405], "Such": [315, 387, 402, 405], "multiagentmlp": [315, 485, 486], "snet": 315, "hasattr": [315, 471], "kaiming_normal_": 315, "std_init": [316, 317], "initialize_paramet": 316, "isol": [316, 387, 402, 405, 465, 475], "1706": [317, 334], "10295v3": 317, "induc": [317, 359], "aid": 317, "1803": [318, 319, 325], "10122": [318, 319], "rnn_hidden": 318, "latent": 319, "ordin": [321, 463], "parametris": [321, 323], "inres": 322, "mu": [322, 324, 473], "impos": [323, 466], "proxim": [323, 389, 473, 486], "atom": 323, "tang": 323, "agraw": 323, "2020": 323, "1901": 323, "10500": 323, "discretis": 323, "num_atom": 323, "num_sampl": 323, "middl": 323, "lr": [323, 471, 472, 473, 474, 481, 485, 486, 487], "optimis": [323, 485, 486], "minimis": 323, "penalis": 323, "0308": 323, "1586": 323, "4727": 323, "2260": 323, "1120": 323, "histogram": 323, "return_typ": 323, "hist": [323, 489], "158": 323, "478": 323, "228": 323, "112": 323, "bin_edg": 323, "8000": 323, "6000": 323, "4000": 323, "ornstein": [324, 471, 475], "uhlenbeck": [324, 471, 475], "ou": [324, 471], "correl": 324, "noise_t": 324, "noise_": 324, "theta": [324, 473, 487], "sigma_t": 324, "sigma_": 324, "ou_prev_nois": 324, "ou_step": 324, "x0": 324, "sigma_min": 324, "n_steps_ann": 324, "is_init_kei": 324, "_ou_prev_nois": 324, "_ou_step": 324, "state_shap": [325, 407], "mixing_embed_dim": [325, 407], "qmix": [325, 485, 486], "mixer": [325, 334, 407], "monoton": 325, "hyper": 325, "11485": 325, "qmixerloss": [325, 334], "qmix_vdn": [325, 334], "vdn": [325, 334], "hidden_dim": [327, 328], "scale_lb": [327, 328], "posterior": [327, 381], "rssm": [327, 328, 381], "1811": [327, 328], "04551": [327, 328], "obs_embed": 327, "rnn_hidden_dim": 328, "dream": 328, "safe_tanh": 332, "tanhtransform": 332, "overflow": [332, 346, 351, 352, 355, 356, 357, 358, 359], "get_mod": [332, 359], "decomposit": 334, "05296": 334, "hide": [335, 473, 485, 486], "satisfi": [335, 466], "vmap_dim": 335, "lam": 335, "sample_in": 335, "sample_in_td": 335, "vm": 335, "probabilistictensordictsequenti": [336, 360, 369, 371, 386, 389, 391, 402, 452, 453, 467, 491], "bundle_indic": 337, "placement": 337, "tokenization_util": [338, 342], "generate_kwarg": [338, 342], "aspect": [338, 342, 472, 478], "pad_output": [338, 342], "conserv": [338, 342, 370, 376], "automodelforcausallm": 338, "input_data": [338, 342], "output_data": [338, 342], "num_devic": 339, "make_ray_work": 339, "enforce_eag": 339, "actorclass": 339, "world_siz": 340, "statelessprocessgroup": 340, "plane": 340, "pyncclcommun": 340, "vllmparameterserv": 341, "tp": 341, "tp_size": 341, "check_weights_chang": 341, "llmdata": [342, 463], "translat": [346, 355], "character": [346, 351, 355, 356, 358, 489], "td_modul": [346, 347, 348, 349, 355, 358, 359, 361, 363, 477, 491], "3635": 346, "0340": 346, "1476": 346, "3911": 346, "1664": 346, "5455": 346, "2247": 346, "4583": 346, "2916": 346, "2160": 346, "5337": 346, "5193": 346, "addmmbackward0": 346, "actorvalueoper": [347, 371, 386, 389, 466, 477], "get_policy_oper": [347, 348, 349, 371, 386, 389, 466], "standalon": [347, 348, 349, 475, 477], "tdmodul": [347, 348, 349, 457], "get_critic_oper": 347, "common_oper": [347, 349], "policy_oper": [347, 348, 349], "value_oper": [347, 348, 349], "module_hidden": [347, 349], "td_module_hidden": [347, 349], "module_act": [347, 349], "td_module_act": [347, 348, 349], "module_valu": [347, 348, 349], "td_module_valu": [347, 348, 349], "state_action_valu": [347, 363, 370, 372, 377, 385, 392, 408, 457, 466, 471, 485, 491], "td_clone": [347, 348, 349], "tensordictmodulewrapp": [347, 452, 453, 457], "get_policy_head": [347, 348, 349], "safesequenti": [347, 348, 349, 407], "head": [347, 349, 359, 366, 371, 386, 389, 463], "get_value_head": [347, 348, 349], "get_value_oper": [347, 348, 349, 371, 386, 389], "action_modul": 348, "actorcriticoper": [349, 466, 477], "actorcriticwrapp": [349, 466, 471], "inferec": 350, "set_tensor_kei": 350, "dt_inference_wrapp": 350, "baz": 350, "inference_context": 350, "obs_dim": 350, "tanhdelta": [350, 463, 471, 485], "dtactor": 350, "actor_modul": [350, 491], "dist_class": 350, "dist_kwarg": 350, "distribution_kwarg": [350, 355, 359, 473, 485, 486], "inference_actor": 350, "sequence_length": 350, "mask_context": 350, "out_act": 350, "qvaluemodul": [351, 356, 407, 474, 475, 477, 481], "distributionaldqnnet": 351, "make_log_softmax": 351, "my_action_valu": [352, 357], "chanc": 352, "lmheadmodel": 353, "actor_head": [353, 371, 386, 389], "base_model": 353, "lm_head": 353, "lookahead": 354, "reshape_cat": 354, "actor_bas": 354, "obs_cat": 354, "obs_cat_reshap": 354, "action_orig": 354, "multistepenvwrapp": 354, "alter": [354, 387, 465, 466], "ego": 354, "default_interaction_typ": [355, 359, 477], "interaction_typ": [355, 359], "set_interaction_typ": [355, 359], "compositedistribut": [355, 359, 369, 389, 467, 477], "distribution_map": [355, 359], "name_map": [355, 359], "cache_dist": [355, 359], "n_empirical_estim": [355, 359], "compound": [355, 477], "chose": 357, "functionalmodul": 358, "functionalmodulewithbuff": 358, "td_fmodul": 358, "td_function": 358, "td_state": 358, "params_repeat": 358, "td_vmap": [358, 361], "random_sampl": [358, 359], "suppli": 359, "paliat": 359, "get_median": 359, "get_mean": 359, "sample_key_nam": 359, "_log_prob": 359, "composite_lp_aggreg": 359, "clampbackward0": 359, "anihil": 359, "partial_toler": [360, 361, 484], "AND": [360, 361, 372], "tensordictsequ": 361, "safeprobabilisticmodul": [361, 466], "spec1": 361, "net1": 361, "module1": 361, "td_module1": 361, "spec2": 361, "module2": 361, "td_module2": 361, "boundari": [362, 473, 475, 485, 486], "resolut": 362, "9944": 362, "9991": 362, "3020": 362, "2299": 362, "5418": 362, "2989": 362, "6849": 362, "2690": 362, "9649": 362, "5686": 362, "8602": 362, "0315": 362, "8455": 362, "6027": 362, "4746": 362, "7843": 362, "7782": 362, "2111": 362, "5115": 362, "4687": 362, "5760": 362, "custommodul": 363, "imaginari": 364, "imagin": 364, "transition_model": 364, "get_reward_oper": 364, "get_transition_model_oper": 364, "min_val": [365, 368], "_bia": 365, "surject": 368, "expln": 368, "biased_softplu": [368, 463], "biased_softplus_": 368, "syntax": [368, 471], "add_custom_map": 368, "1602": 369, "01783v2": 369, "critic_network": [369, 371, 386, 389, 391, 473, 486], "entropy_bonu": [369, 371, 386, 389, 402, 473], "favour": [369, 371, 386, 389, 402], "samples_mc_entropi": [369, 371, 386, 388, 389, 402], "entropy_coeff": [369, 371, 386, 389, 402], "critic_coef": [369, 371, 386, 389, 402, 473], "loss_critic_typ": [369, 371, 386, 389, 391, 473], "l1": [369, 371, 373, 374, 378, 386, 389, 390, 391, 394, 395, 398, 407, 466, 471], "l2": [369, 371, 373, 374, 375, 376, 378, 381, 382, 386, 389, 390, 391, 394, 395, 398, 407, 471, 485], "smooth_l1": [369, 370, 371, 372, 373, 374, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395, 398, 407, 473], "separate_loss": [369, 371, 372, 373, 377, 378, 385, 386, 389, 390, 391, 392, 394, 395], "advantage_kei": [369, 371, 386, 389, 391, 402, 404, 409, 410, 411, 412], "value_target_kei": [369, 371, 386, 389, 391, 409, 410, 411, 412], "value_target": [369, 371, 386, 389, 391, 409, 410, 411, 412, 473, 486], "ddp": [369, 371, 386, 389, 391], "fsdp": [369, 371, 386, 389, 391], "divid": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 402, 450, 471, 485, 486, 487], "clip_valu": [369, 371, 386, 389, 391, 402], "loss_crit": [369, 389, 402, 473, 486], "loss_entropi": [369, 389, 403, 473, 486], "loss_object": [369, 389, 403, 473, 486], "next_reward": [369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 409, 410, 411, 412], "next_don": [369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 409, 410, 411, 412], "next_termin": [369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 409, 410, 411, 412], "loss_obj": 369, "next_observ": [369, 370, 372, 373, 374, 376, 377, 378, 385, 389, 390, 391, 392, 394, 395, 484], "sacloss": [369, 384, 393, 463], "default_kei": [369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 394, 395, 402, 405, 407, 413], "_acceptedkei": [369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 394, 395, 402, 405, 407, 413], "fraction": [369, 371, 389], "make_value_estim": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 396, 402, 405, 407, 467, 471, 472, 485, 486, 491], "value_typ": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 397, 402, 405, 407, 471], "valueestim": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 397, 402, 405, 407, 463, 467, 471, 485, 486], "hyperparam": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 471], "enum": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 397, 402, 405, 407, 471], "default_value_estim": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 471, 491], "default_value_kwarg": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 463, 471], "dqn_loss": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 396, 402, 405, 407], "td1": [369, 370, 372, 373, 374, 376, 378, 379, 380, 385, 387, 389, 390, 391, 392, 394, 395, 402, 405, 407, 471], "04779": [370, 376], "qvalue_network": [370, 372, 377, 378, 385, 390, 392, 394, 395], "unti": [370, 372, 385, 390, 392, 394, 395], "loss_funct": [370, 372, 373, 374, 375, 376, 377, 378, 385, 390, 392, 394, 395, 398, 405, 407, 471, 485], "alpha_init": [370, 372, 378, 388, 390, 392], "min_alpha": [370, 372, 378, 388, 390, 392], "max_alpha": [370, 372, 378, 388, 390, 392], "fixed_alpha": [370, 372, 378, 388, 390, 392], "target_entropi": [370, 372, 378, 388, 390, 392], "prod": [370, 372, 388, 392], "delay_actor": [370, 373, 392, 394, 395], "delay_qvalu": [370, 378, 390, 392, 394, 395], "min_q_weight": 370, "max_q_backup": 370, "backup": 370, "deterministic_backup": 370, "num_random": 370, "with_lagrang": 370, "lagrang": 370, "lagrange_thresh": 370, "deactivate_vmap": [370, 372, 378, 385, 390, 392, 394, 395, 409, 410, 411, 412], "valueclass": [370, 372, 373, 378, 390, 392, 394, 395], "qvalu": [370, 372, 377, 378, 385, 390, 392, 394, 395], "loss_actor": [370, 372, 373, 377, 378, 385, 390, 391, 392, 394, 395, 443, 471, 485], "loss_actor_bc": 370, "loss_alpha": [370, 372, 378, 390, 392], "loss_cql": [370, 376], "loss_qvalu": [370, 372, 376, 377, 378, 385, 390, 392, 394, 395], "loss_alpha_prim": 370, "ess": [371, 389, 402, 403], "clip_epsilon": [371, 402, 473, 486], "head_nam": [371, 386, 389], "normalize_advantag": [371, 386, 389, 486], "normalize_advantage_exclude_dim": [371, 386, 389], "multiobject": [371, 386, 389], "value_kei": [371, 386, 389, 409, 410, 411, 412, 471], "somemodul": [371, 386, 389], "someactor": [371, 386, 389], "value_head": [371, 386, 389], "somevalu": [371, 386, 389], "loss_modul": [371, 384, 386, 387, 389, 393, 402, 405, 447, 456, 457, 467, 468, 471, 472, 473, 485, 486, 489], "IN": 372, "FOR": 372, "simplic": [372, 472, 473, 479, 488, 489, 491], "openreview": [372, 390], "pczqttstix": 372, "qvalue_loss": [372, 394], "actor_loss": [372, 394], "alpha_loss": 372, "num_qvalue_net": [372, 377, 378, 385, 390, 392, 394, 395], "maybe_init_target_entropi": 372, "fault_toler": 372, "target_entropy_buff": 372, "delay_valu": [373, 374, 376, 379, 391, 392, 407, 472, 474, 475, 481, 485], "loss_valu": [373, 377, 385, 391, 392, 471, 473, 485, 486], "pred_valu": [373, 376, 394, 395, 471], "pred_value_max": [373, 471], "target_valu": [373, 376, 390, 394, 395, 408, 467, 471], "target_value_max": [373, 471], "qvalueactor": [374, 376, 407, 472, 474], "double_dqn": 374, "06461": [374, 384], "mult_one_hot": [374, 377, 378, 407], "01345": 375, "distanc": [376, 386, 398, 408, 409, 486], "dcql_loss": 376, "2110": [377, 385], "06169": [377, 385], "expectil": [377, 385], "tau": [377, 385, 393, 471, 472, 485], "antmaz": [377, 385], "sticht": [377, 385], "onehotcategor": [377, 378, 463], "target_entropy_weight": 378, "skip_done_st": [378, 392], "disctount": 379, "distributionalqvalueactor": [379, 466], "input_tensordict": [379, 471], "actor_model": 380, "value_model": [380, 382], "imagination_horizon": 380, "discount_loss": [380, 382], "lambda_kl": 381, "lambda_reco": 381, "lambda_reward": 381, "reco_loss": 381, "reward_loss": 381, "free_nat": 381, "nat": 381, "delayed_clamp": 381, "global_averag": 381, "value_loss": 382, "fake_data": 382, "1606": 383, "03476": 383, "discriminator_network": 383, "use_grad_penalti": 383, "gp_lambda": 383, "discrimin": 383, "ddpgloss": [384, 393, 457, 463, 471, 478, 485, 491], "td3loss": [384, 393, 463], "value_network_update_interv": 384, "qvalueclass": 385, "loss_value_diff": 385, "diff": 385, "old_polici": 386, "new_polici": 386, "apart": [386, 486], "dtarg": 386, "samples_mc_kl": 386, "analyt": 386, "decrement": 386, "loss_": [387, 443, 467, 471, 478], "equip": [387, 474, 475, 477], "gh": 387, "_forward_value_estimator_kei": 387, "value_estim": [387, 402, 405, 409, 410, 411, 412, 413, 467, 471, 486], "myloss": 387, "action2": 387, "augment": [387, 465, 479, 481, 489], "deterministic_sampling_mod": 387, "convert_to_funct": [387, 402, 405, 471], "expand_dim": [387, 402, 405], "create_target_param": [387, 402, 405, 471], "compare_against": [387, 402, 405, 471], "_param": [387, 402, 405], "resampl": [387, 402, 405], "_target_param": [387, 402, 405], "network_nam": [387, 402, 405], "blend": [387, 402, 405], "add_random_modul": [387, 402, 405, 467], "flavor": [389, 471, 485, 486, 491], "clipppoloss": [389, 463, 473, 486], "klpenppoloss": [389, 463], "06347": 389, "log_explained_vari": 389, "explain": [389, 475, 488], "explained_vari": 389, "wors": 389, "gae": [389, 463, 467, 471, 473, 486], "ppo_loss": 389, "tdlambda": [389, 397, 467, 471], "base_lay": 389, "randn_lik": 389, "samplelogprob": 389, "ay8zfzm0tdd": 390, "sub_sample_len": 390, "subsampl": [390, 438, 468], "action_log_prob_actor": 390, "state_action_value_actor": [390, 394, 395], "connectionist": 391, "1992": 391, "doi": 391, "1007": 391, "bf00992696": 391, "actor_net": [391, 471, 473], "1801": 392, "01290": 392, "applic": [392, 407, 476, 477, 487], "1812": 392, "05905": 392, "redqloss": [393, 463], "theta_t": [393, 487], "theta_": [393, 487], "polyak": 393, "minimalist": 394, "06860": 394, "policy_nois": [394, 395], "noise_clip": [394, 395], "td3_bc": 394, "bc_loss": 394, "lmbd": 394, "td0": [396, 471, 485], "tensorlik": 398, "strict_shap": 398, "view_a": 398, "instabl": 402, "diagnost": 402, "kl_to_inference_coeff": 402, "grpolossoutput": [402, 404], "clip_fract": 403, "kl_approx": 403, "kl_to_ref": [403, 406], "loss_kl_to_infer": 403, "kl_to_infer": 403, "grpo_siz": 404, "hit": 404, "supervis": [405, 478, 479, 489, 492], "minor_sft": 405, "minorsft": 405, "push": 405, "retrievelogprob": 405, "shime": 405, "xie": 405, "hong": 405, "chen": 405, "fred": 405, "yu": 405, "zey": 405, "sun": 405, "xiuyu": 405, "wu": 405, "2024": 405, "minor": [405, 485], "qmixer": [407, 463], "local_valu": 407, "visibl": [407, 486], "acceptedkei": 407, "global_valu": 407, "penultim": 407, "local_value_network": 407, "mixer_network": 407, "value_modul": [407, 473, 491], "qnet": [407, 471], "next_val_kei": 408, "pred_next_v": 408, "mse": 408, "q_valu": 408, "n_steps_to_next": 408, "value_next_st": 408, "1506": [409, 414, 422], "02438": [409, 414, 422], "exponenti": [409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 445], "average_ga": [409, 473], "skip_exist": [409, 410, 411, 412], "get_default_devic": [409, 410, 411, 412, 413], "auto_reset_env": 409, "next_valu": [409, 410, 411, 412, 413], "gradient_mod": 409, "value_error": [409, 410, 411, 412, 413], "marker": [409, 471], "trajecotri": 409, "fair": 409, "target_param": [409, 410, 411, 412, 413, 471, 486], "98": [409, 410, 411, 412], "94": [409, 412], "unpack": [409, 410, 411, 412], "tensor_kei": [409, 410, 411, 412, 413], "aka": [410, 472, 485], "average_reward": [410, 411, 412], "tdestim": [410, 411, 413], "infti": 411, "valuefunctionbas": 413, "old_stat": [414, 416, 418, 420, 422, 423, 425], "new_stat": [414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "rolling_gamma": [418, 419, 420, 421, 423, 424, 425, 426], "g1": [418, 419, 420, 421, 423, 424, 425, 426], "g2": [418, 419, 420, 421, 423, 424, 425, 426], "g3": [418, 419, 420, 421, 423, 424, 425, 426], "g4": [418, 419, 420, 421, 423, 424, 425, 426], "v3": [418, 419, 420, 421, 423, 424, 425, 426], "preproc": [427, 475, 485], "as_non_tensor": [427, 485], "render_method": 427, "pass_tensordict": 427, "syntact": 427, "sugar": 427, "out_file_bas": 428, "skip_reset": 428, "center_crop": 429, "make_grid": 429, "log_video": 429, "csv": [429, 431, 433, 472, 480, 481], "wandb": [429, 433, 436, 480, 491], "tensorboard": [429, 433, 435, 480, 491], "log_dir": [429, 430, 431, 433, 435, 436, 472, 481], "cheetah_video": 429, "run_video": 429, "openxexperiencereplai": 429, "sec": [429, 487], "video_fp": [429, 431, 434], "cmu_stretch": 429, "run_video_0": 429, "cur_dir": 431, "csv_log": 431, "add_video": 431, "video_": 431, "experiment_nam": [432, 433], "logger_typ": 433, "logger_nam": 433, "mlflow": [433, 434], "wandb_kwarg": 433, "mlflow_kwarg": 433, "tracking_uri": 434, "uri": 434, "datastor": 434, "tb_log": 435, "tensoarboard": 435, "td_log": 435, "save_dir": 436, "resum": 436, "uncategor": 436, "my_funct": 437, "sub_traj_len": 438, "min_sub_traj_len": 438, "register_op": [438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 468, 472], "process_optim_batch": [438, 444, 445, 468], "td_out": [438, 446], "_process_optim_batch_hook": [438, 468], "batch_subsampl": 438, "clear_cuda": 439, "pre_optim_step": [439, 468], "log_pbar": [440, 441, 442, 445, 468, 472], "count_fram": 440, "pre_steps_log": [440, 441, 468], "count_frames_log": 440, "lognam": 441, "r_train": 441, "log_reward": [441, 472], "record_interv": [442, 471, 472], "record_fram": [442, 450, 471, 472], "policy_explor": [442, 457, 471, 472, 475, 477, 481], "log_kei": [442, 472], "underestim": 442, "r_evalu": [442, 471], "loss_compon": 443, "appl": 443, "optimizer_hook": 443, "flatten_tensordict": [444, 472], "max_dim": 444, "rb_trainer": 444, "batch_process": [444, 445, 446, 468], "post_loss": [444, 468], "999": [445, 472], "jitter": 445, "finfo": 445, "default_dtyp": 445, "update_reward_stat": 445, "normalize_reward": 445, "make_train": [446, 463], "_process_batch_hook": [446, 468], "select_kei": [446, 468], "versatil": [447, 476], "optim_steps_per_batch": [447, 468, 472], "clip_grad_norm": 447, "clip_norm": 447, "progress_bar": 447, "save_trainer_interv": 447, "log_interv": [447, 472], "save_trainer_fil": [447, 468], "load_from_fil": [447, 468], "update_weights_interv": [449, 472], "post_step": [449, 468, 472], "dictconfig": [450, 451, 452, 453, 455, 456, 457, 458, 461], "unknowingli": 450, "annealing_fram": [450, 471], "init_env_step": [450, 451, 471], "proof_environ": [451, 471], "sta": 451, "ot": 451, "actor_model_explor": [452, 453, 471], "make_env_kwarg": [452, 453], "targetnetupdat": [454, 456, 457], "replayargsconfig": 455, "target_net_updat": [457, 471, 472], "constitu": 457, "egreedywrapp": 457, "env_proof": 457, "obs_spec": 457, "net_valu": 457, "dir": [457, 468, 472], "gettempdir": 457, "namespac": [458, 461], "transformed_env_constructor": [458, 463], "num_env_per_collector": [459, 460], "video_tag": 461, "norm_obs_onli": 461, "use_env_cr": 461, "custom_env_mak": 461, "custom_env": 461, "return_transformed_env": 461, "action_dim_gsd": 461, "state_dim_gsd": 461, "obs_norm_state_dict": 461, "weightupdat": 463, "distributedsyncdatacollector": 463, "submitit_delayed_launch": 463, "remotetensordictreplaybuff": 463, "rational": 463, "footnot": 463, "binarydiscretetensorspec": 463, "boundedtensorspec": 463, "discretetensorspec": 463, "lazystackedcompositespec": 463, "lazystackedtensorspec": 463, "multidiscretetensorspec": 463, "multionehotdiscretetensorspec": 463, "nontensorspec": 463, "onehotdiscretetensorspec": 463, "unboundedcontinuoustensorspec": 463, "unboundeddiscretetensorspec": 463, "prompttensordicttoken": 463, "rolloutfrommodel": 463, "tokenizeddatasetload": 463, "create_infinite_iter": 463, "constantklcontrol": 463, "adaptiveklcontrol": 463, "densifyreward": 463, "h5combin": 463, "h5split": 463, "nested2t": 463, "check_no_exclusive_kei": 463, "consolidate_spec": 463, "contains_lazy_spec": 463, "envmetadata": 463, "chessenv": 463, "tictactoeenv": 463, "llmhashingenv": 463, "check_marl_group": 463, "get_available_librari": 463, "terminated_or_trunc": 463, "dreamerdecod": 463, "braxwrapp": 463, "dmcontrolwrapp": 463, "isaaclabwrapp": 463, "jumanjiwrapp": 463, "meltingpotenv": 463, "meltingpotwrapp": 463, "mogymenv": 463, "multithreadedenvwrapp": 463, "openmlenv": 463, "openspielwrapp": 463, "openspielenv": 463, "pettingzooenv": [463, 485], "robohiveenv": 463, "smacv2env": 463, "smacv2wrapp": 463, "unitymlagentsenv": 463, "unitymlagentswrapp": 463, "vmaswrapp": 463, "register_gym_spec_convers": 463, "vllmupdat": [463, 465], "qvaluehook": 463, "distributionalqvaluehook": 463, "reset_nois": 463, "cemplann": 463, "mpcplannerbas": 463, "mppiplann": 463, "independentnorm": 463, "truncatednorm": 463, "llmmaskedcategor": 463, "maskedonehotcategor": 463, "onehotordin": 463, "inv_softplu": 463, "vmapmodul": 463, "distributionaldqnloss": [463, 472], "discretesacloss": 463, "crossqloss": 463, "iqlloss": 463, "discreteiqlloss": 463, "cqlloss": 463, "discretecqlloss": 463, "gailloss": 463, "dtloss": 463, "onlinedtloss": 463, "td3bcloss": 463, "ppoloss": [463, 465], "a2closs": 463, "reinforceloss": 463, "dreameractorloss": 463, "dreamermodelloss": 463, "dreamervalueloss": 463, "td0estim": [463, 471], "td1estim": [463, 471], "td0_return_estim": 463, "td0_advantage_estim": 463, "td1_return_estim": 463, "vec_td1_return_estim": 463, "td1_advantage_estim": 463, "vec_td1_advantage_estim": 463, "td_lambda_return_estim": 463, "vec_td_lambda_return_estim": 463, "td_lambda_advantage_estim": 463, "vec_td_lambda_advantage_estim": 463, "generalized_advantage_estim": 463, "vec_generalized_advantage_estim": 463, "hardupd": [463, 471, 478], "softupd": [463, 471, 472, 474, 475, 478, 481, 485], "distance_loss": [463, 471], "group_optim": 463, "hold_out_net": 463, "hold_out_param": [463, 471], "batchsubsampl": [463, 468], "clearcudacach": 463, "countframeslog": 463, "logscalar": [463, 468, 472], "optimizerhook": [463, 472], "logvalidationreward": [463, 468, 471, 472], "replaybuffertrain": [463, 468, 472], "rewardnorm": 463, "selectkei": [463, 468], "trainerhookbas": [463, 468, 472], "updateweight": [463, 468, 472], "make_collector_offpolici": 463, "make_collector_onpolici": 463, "make_dqn_loss": 463, "make_replay_buff": [463, 471], "make_target_updat": 463, "parallel_env_constructor": [463, 471], "sync_async_collector": 463, "sync_sync_collector": 463, "correct_for_frame_skip": 463, "get_stats_random_rollout": 463, "mlflowlogg": 463, "get_logg": 463, "generate_exp_nam": 463, "journei": 464, "textbook": 464, "highlight": [464, 485], "ever": [464, 486], "bump": 464, "pr": 464, "weight_upd": 465, "make_polici": 465, "policy_version_track": 465, "fundament": [465, 479], "templatetransform": 465, "pythoninterpret": 465, "mcptooltransform": 465, "klrewardtransform": 465, "grpoloss": 465, "simpler": [465, 472, 476], "make_mlgym": 465, "7b": [465, 483], "step_data": 465, "s_": [465, 483], "unifi": [465, 492], "functionn": 465, "ground": [466, 471, 487], "recycl": [466, 489], "noisier": 466, "Their": [466, 485, 486], "sd": [466, 492], "prob_modul": 466, "uncertainti": 466, "soften": 466, "backbon": [466, 474, 477, 484, 491], "make_actor": 466, "make_valu": 466, "shared_param": 466, "make_common": 466, "reusabl": [467, 471, 489], "swappabl": [467, 471], "characterist": [467, 471, 487], "trainabl": [467, 471, 478, 488], "smth": [467, 471], "plenti": [467, 475], "amort": [467, 472, 473], "told": [467, 473], "pseudo": [467, 479, 487], "buri": 467, "str_valu": 467, "nutshel": [467, 471], "barto": [467, 485, 486], "chapter": [467, 480], "value_net_loss": 467, "pow": [467, 471], "room": 467, "signifi": [467, 485, 486], "underperform": 467, "intric": [467, 477], "set_composite_lp_aggreg": [467, 486], "action_td": 467, "action0": 467, "f0": 467, "action1": 467, "f1": 467, "f2": 467, "f3": 467, "action0_log_prob": 467, "action1_log_prob": 467, "inferior": 467, "multivari": 467, "dirichlet": 467, "prev_log_prob": 467, "new_log_prob": 467, "log_weight": 467, "appreci": [467, 476], "multihead": 467, "believ": 468, "substanti": 468, "_pre_steps_log_hook": 468, "_pre_optim_hook": 468, "sub_batch": 468, "_post_loss_hook": 468, "_post_optim_hook": 468, "post_optim": [468, 472], "_post_optim_log": 468, "post_optim_log": 468, "_post_steps_hook": 468, "_post_steps_log_hook": 468, "post_steps_log": 468, "logginghook": 468, "logging_hook": 468, "save_dict": 468, "some_valu": 468, "torchsnapshot": 468, "ckpt_backend": 468, "filepath": 468, "save_train": 468, "000": [470, 490], "galleri": [470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "mem": [470, 490], "mb": [470, 490], "coding_ddpg": [470, 471, 490], "coding_dqn": [470, 472, 490], "coding_ppo": [470, 473, 490], "dqn_with_rnn": [470, 474, 490], "llm_browser": [470, 483, 490], "multi_task": [470, 484, 490], "multiagent_competitive_ddpg": [470, 485, 490], "multiagent_ppo": [470, 486, 490], "pretrained_model": [470, 488, 490], "rb_tutori": [470, 489, 490], "torchrl_demo": [470, 490, 491], "torchrl_env": [470, 490, 492], "author": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 492], "vincent": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 487, 489, 492], "moen": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 487, 489, 492], "assembl": 471, "maxim": [471, 478, 487], "transpar": [471, 474], "bash": 471, "is_fork": [471, 472, 473, 474, 485, 486, 488], "get_start_method": [471, 472, 473, 474, 485, 486, 488], "collector_devic": 471, "loss_dict": 471, "modal": 471, "oblivi": [471, 473, 489], "elementari": 471, "didact": [471, 475], "dilut": 471, "pessimist": [471, 472, 473], "target_actor_network_param": 471, "actor_in_kei": 471, "actor_crit": 471, "compromis": 471, "hp": 471, "_value_estim": 471, "elif": [471, 472, 483], "unknown": 471, "_loss_actor": 471, "td_copi": 471, "actor_network_param": [471, 485], "value_network_param": [471, 485], "_loss_valu": 471, "pred_val": 471, "target_value_network_param": 471, "glue": 471, "_forward": 471, "remaind": 471, "env_librari": 471, "env_task": 471, "env_arg": [471, 472], "torchr": 471, "rescal": 471, "presum": 471, "make_transformed_env": 471, "reward_sc": 471, "env_per_collector": 471, "transform_state_dict": 471, "make_t_env": 471, "cheat": 471, "10m": 471, "cautiou": 471, "thousand": [471, 474], "get_env_stat": 471, "proof_env": 471, "5000": [471, 475, 481], "recal": [471, 473, 483, 489], "ddpgmlpactor": 471, "ddpgmlpqnet": 471, "materi": 471, "ornsteinuhlenbeckprocessmodul": [471, 477], "make_ddpg_actor": 471, "q_net": 471, "tight": 471, "10_000": [471, 473], "traj_len": [471, 474], "make_record": 471, "recorder_obj": 471, "pick": [471, 472, 477, 483], "buffer_s": [471, 472], "random_crop_len": 471, "prb": 471, "buffer_scratch_dir": [471, 472, 474, 479, 488], "dataflow": 471, "ceil_div": 471, "utd": [471, 474], "update_to_data": 471, "realiz": 471, "_must_": 471, "001": [471, 487], "outdat": 471, "trick": [471, 472], "despit": 471, "optimizer_actor": 471, "weight_decai": [471, 472], "optimizer_valu": 471, "total_collection_step": 471, "rewards_ev": 471, "collected_fram": 471, "numel": [471, 473, 474, 475, 481, 485, 488, 489], "current_fram": [471, 485], "sampled_tensordict": 471, "gn1": 471, "clip_grad_norm_": [471, 473, 485, 486, 487], "gn2": 471, "gn": [471, 487], "td_record": 471, "rn": 471, "2f": 471, "mention": [471, 474, 489, 492], "matplotlib": [471, 473, 474, 475, 485, 486, 487, 489, 492], "pyplot": [471, 473, 474, 475, 485, 486, 487, 489, 492], "plt": [471, 473, 474, 475, 485, 486, 487, 489, 492], "legend": [471, 485], "xlabel": [471, 474, 486, 487], "ylabel": [471, 486], "tight_layout": 471, "takeawai": [471, 472, 475, 483], "distpatch": 471, "jupyt": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "ipynb": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492], "sphinx": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "road": 472, "prerequisit": [472, 474, 483], "lookup": 472, "cart": 472, "pole": 472, "un": 472, "actuat": 472, "frictionless": 472, "duelingcnndqnet": 472, "egreedymodul": [472, 474, 475, 477, 481], "is_notebook": 472, "shell": 472, "get_ipython": 472, "__class__": 472, "zmqinteractiveshel": 472, "qtconsol": 472, "terminalinteractiveshel": 472, "ipython": [472, 486, 487], "nameerror": [472, 485], "umbrella": 472, "misplac": 472, "misus": 472, "orchestr": [472, 478, 480], "five": 472, "64x64": 472, "motion": [472, 487], "obs_norm_sd": 472, "mp_context": 472, "get_norm_stat": 472, "test_env": 472, "mathbb": 472, "rightarrow": 472, "make_model": 472, "dummy_env": 472, "init_bia": 472, "exploration_modul": [472, 474, 475, 477, 481], "eps_greedy_v": 472, "eps_greedy_val_env": 472, "actor_explor": 472, "get_replay_buff": 472, "n_optim": [472, 478, 479], "parametriz": 472, "get_collector": 472, "bunch": 472, "ubiquit": [472, 476], "get_loss_modul": 472, "target_updat": [472, 485], "995": 472, "variat": 472, "2e": [472, 487], "wd": 472, "upd": 472, "harder": [472, 491], "5_000": 472, "500000": 472, "100000": 472, "005": [472, 485], "mandatori": [472, 473, 486, 487], "fairer": 472, "budget": 472, "dqn_exp_": 472, "uuid1": [472, 492], "cumbersom": 472, "buffer_hook": 472, "aliv": 472, "total_reward": 472, "print_csv_files_in_fold": 472, "folder_path": 472, "csv_file": 472, "output_str": 472, "dirpath": 472, "endswith": 472, "strip": 472, "qvaluenetwork": 472, "accuraci": 472, "fanci": [472, 479], "demonstr": [473, 475, 479, 483, 485, 486, 487, 489, 492], "talk": 473, "six": 473, "sophist": [473, 486], "invent": 473, "theta_k": 473, "pi_": 473, "exceed": 473, "discourag": [473, 487], "indispens": 473, "analyz": 473, "lingua": 473, "franca": 473, "defaultdict": [473, 487], "3e": [473, 474, 485, 486], "max_grad_norm": [473, 485, 486], "sub_batch_s": 473, "num_epoch": [473, 486], "entropy_ep": [473, 486], "charact": [473, 475], "inverteddoublependulum": 473, "transmit": 473, "stai": 473, "confid": [473, 485, 486], "ran": 473, "f_": 473, "mu_": 473, "difficulti": [473, 492], "d_ob": 473, "d_action": 473, "policy_modul": [473, 485, 486], "briefli": [473, 485, 486], "refil": [473, 486], "easiest": [473, 478, 485, 486], "mathemat": [473, 485, 486], "tradeoff": [473, 486], "advantage_modul": 473, "entropy_coef": [473, 486], "lr_schedul": [473, 487], "cosineannealinglr": [473, 487], "eval_str": 473, "tensordict_data": [473, 486], "data_view": [473, 486], "subdata": [473, 485, 486], "cum_reward_str": 473, "stepcount_str": 473, "param_group": [473, 485], "lr_str": 473, "eval_rollout": 473, "nice": [473, 476, 479], "figsiz": [473, 487], "subplot": [473, 485, 487, 492], "titl": [473, 474, 475, 486, 487], "84x84": [474, 475], "accessori": 474, "stamp": 474, "n_cell": 474, "customiz": 474, "wouldn": 474, "qval": 474, "stoch_polici": 474, "opportun": [474, 485], "uniniti": 474, "again": [474, 475, 476, 477, 479, 486, 488, 489, 492], "strongli": 474, "million": 474, "sake": [474, 488, 489], "20_000": [474, 487], "longest": 474, "npai": 474, "action_spread": 474, "strong": 475, "impress": 475, "arduino": 475, "raspberri": 475, "pi": [475, 485, 486, 487], "alon": 475, "examplifi": 475, "ship": 475, "stick": 475, "nearest": 475, "value_mlp": [475, 481], "init_rand_step": [475, 481], "total_count": [475, 481], "total_episod": [475, 481], "t0": [475, 481], "screen": [475, 485], "color": [475, 485], "unblock": 475, "policy_transform": 475, "fake_td": 475, "exported_polici": 475, "div": 475, "graph_modul": 475, "print_read": 475, "group0": 475, "group0_agent0_ob": 475, "collid": [475, 486], "group0_agent0": 475, "agent0_ob": 475, "comma": 475, "digress": 475, "exported_stochastic_polici": 475, "trace": 475, "batchsizetransform": 475, "hidden0": 475, "hidden1": 475, "recurrent_polici": 475, "fake_ob": 475, "fake_hidden0": 475, "fake_hidden1": 475, "fake_is_init": 475, "exported_recurrent_polici": 475, "platform": [475, 491], "aoti": 475, "_inductor": 475, "aoti_compile_and_packag": 475, "aoti_load_packag": 475, "pt2": 475, "pkg_path": 475, "package_path": 475, "compiled_modul": 475, "onnxruntim": 475, "showcas": [475, 487], "tensorrt": 475, "android": 475, "aleinterfac": 475, "rom": 475, "loadrom": 475, "reset_gam": 475, "screen_ob": 475, "getscreenrgb": 475, "tick_param": 475, "bottom": 475, "labelleft": 475, "labelbottom": 475, "imshow": [475, 492], "dynamo_export": 475, "onnx_policy_export": 475, "onnx_file_path": 475, "ort_sess": 475, "inferencesess": 475, "cpuexecutionprovid": 475, "onnxruntime_input": 475, "get_input": 475, "onnx_polici": 475, "onnxruntime_output": 475, "topic": [476, 477, 478], "straight": 476, "backtrack": 476, "reset_with_act": 476, "stepped_data": 476, "spatial": 476, "useless": 476, "policyless": 476, "examin": [476, 485], "tackl": 477, "delv": 477, "extractor": 477, "additivegaussianmodul": [477, 485], "exploration_polici": [477, 485], "greedili": 477, "2d": [477, 485, 486], "innov": [477, 478], "rollout_explor": 477, "sole": 478, "n_collect": 478, "get_next_batch": 478, "concis": 478, "ddpg_loss": 478, "total_loss": 478, "prove": 478, "reliev": 478, "concern": 478, "accustom": 479, "surprisingli": 479, "art": [479, 485, 486], "countless": 479, "yourself": [479, 485, 486], "everywher": 480, "log_scalar": 480, "my_scalar": 480, "excess": 480, "lesson": 481, "voluntarili": 481, "torchrl_logg": [481, 483], "training_loop": 481, "video_record": 481, "arbitrarili": 481, "t1": 481, "conclud": [481, 488], "tutorials_python": 482, "tutorials_jupyt": 482, "playwright": 483, "autom": 483, "__future__": 483, "annot": 483, "browsertransform": 483, "filterwarn": 483, "browser_transform": 483, "websit": 483, "rewardtransform": 483, "last_item": 483, "agnost": 483, "execute_tool_act": 483, "current_st": 483, "nllm": 483, "nenviron": 483, "franc": 483, "button": 483, "css": 483, "btnk": 483, "extract_typ": 483, "ref_llm": 483, "env1_obs_kei": 484, "observation_stand": 484, "env2_obs_kei": 484, "observation_walk": 484, "tdreset1": 484, "tdreset2": 484, "policy_common": 484, "policy_stand": 484, "policy_walk": 484, "But": 484, "env1_mak": 484, "env2_mak": 484, "_single_task": 484, "td_rollout": 484, "matteo": [485, 486], "bettini": [485, 486], "benchmarl": [485, 486], "simple_tag": 485, "maddpg": [485, 486], "multiagentparticleenviron": 485, "mpe": 485, "centralis": [485, 486], "tie": [485, 486], "iddpg": [485, 486], "richard": 485, "andrew": 485, "mit": 485, "press": 485, "2018": 485, "mathbf": [485, 486], "decentralis": [485, 486], "literatur": [485, 486], "overcom": [485, 486], "stationari": [485, 486], "establish": 485, "gui": [485, 486], "is_sphinx": 485, "__sphinx_build__": 485, "n_iter": [485, 486, 487], "evad": 485, "iteration_when_stop_training_evad": 485, "memory_s": 485, "n_optimiser_step": 485, "train_batch_s": 485, "polyak_tau": 485, "chaser": 485, "red": 485, "circl": [485, 486], "green": 485, "touch": [485, 487], "penal": [485, 486], "obstacl": 485, "drag": [485, 486], "elast": [485, 486], "collis": [485, 486], "imped": 485, "n_chaser": 485, "n_evad": 485, "n_obstacl": 485, "use_vma": 485, "simple_tag_v3": 485, "num_good": 485, "num_adversari": 485, "num_obstacl": 485, "max_cycl": 485, "num_vmas_env": [485, 486], "num_good_ag": 485, "num_landmark": 485, "four": [485, 486, 487], "n_agents_in_that_group": 485, "stress": [485, 486], "paramount": [485, 486], "n_rollout_step": [485, 486], "evolut": [485, 486], "group_nam": 485, "n_agents_in_group": 485, "agents_exploration_polici": 485, "utilis": [485, 486], "n_obs_per_ag": [485, 486], "n_actions_per_ag": [485, 486], "share_parameters_polici": [485, 486], "policy_net": [485, 486], "_agent": 485, "grant": [485, 486], "converg": [485, 486], "share_parameters_crit": [485, 486], "obs_act": 485, "cat_modul": 485, "critic_modul": 485, "fantast": [485, 486], "reset_td": 485, "interfer": 485, "subject": [485, 487], "flatten_kei": 485, "process_batch": 485, "group_shap": 485, "get_item_shap": [485, 486], "nested_done_kei": 485, "nested_terminated_kei": 485, "desc": [485, 486], "episode_reward_mean_": 485, "episode_reward_mean_map": 485, "train_group_map": 485, "group_batch": 485, "_group": 485, "loss_nam": 485, "episode_reward_mean": [485, 486], "fig": [485, 489], "set_ylabel": 485, "axvlin": 485, "orang": 485, "set_xlabel": 485, "video_logg": 485, "vmas_log": 485, "env_with_rend": 485, "vmas_rend": 485, "print_log_dir": 485, "profici": [485, 486], "lidar": 486, "sensor": 486, "mappo": 486, "ippo": 486, "analys": 486, "visualis": 486, "vmas_devic": 486, "6_000": 486, "minibatch_s": 486, "generalis": 486, "simd": 486, "warp": 486, "todai": 486, "surround": 486, "dot": [486, 487], "scenario_nam": 486, "critic_net": 486, "minibatch": 486, "episode_reward_mean_list": 486, "critic_network_param": 486, "target_critic_network_param": 486, "xvfb": 486, "pyvirtualdisplai": 486, "1400": 486, "900": 486, "pil": 486, "rendering_callback": 486, "fromarrai": 486, "gif": 486, "save_al": 486, "append_imag": 486, "freeli": 487, "broader": 487, "wider": 487, "acquaint": 487, "avenu": 487, "_apply_to_composit": 487, "default_x": 487, "default_i": 487, "upward": 487, "angular": 487, "sin": 487, "rad": 487, "angl": 487, "deleg": 487, "new_th": 487, "new_thdot": 487, "g_forc": 487, "angle_norm": 487, "albeit": 487, "high_th": 487, "high_thdot": 487, "low_th": 487, "low_thdot": 487, "trivial": 487, "irrelev": 487, "_make_spec": 487, "td_param": 487, "render_fp": 487, "random_": 487, "_make_step": 487, "staticmethod": 487, "skeleton": 487, "unitari": 487, "sine": 487, "cosin": 487, "sintransform": 487, "costransform": 487, "t_sin": 487, "t_co": 487, "cat_transform": 487, "simple_rollout": 487, "unexplor": 487, "init_td": 487, "traj_return": 487, "last_reward": 487, "is_ipython": 487, "inlin": 487, "get_backend": 487, "ion": 487, "gcf": 487, "clear_output": 487, "r3mtransform": 488, "embodi": 488, "env_transform": [488, 492], "wiser": 488, "batteri": 489, "gc": 489, "buffer_list": 489, "buffer_lazytensor": 489, "tempdir": 489, "buffer_lazymemmap": 489, "fullest": 489, "mydata": 489, "buffer_lazi": 489, "_i": 489, "artifici": 489, "hamper": 489, "she": 489, "reappear": 489, "unfold": 489, "problemat": 489, "4th": 489, "prioritizedslicesampl": 489, "tensordictmaxvaluewrit": 489, "demo": 491, "icml": 491, "vmoen": 491, "fb": 491, "invest": 491, "media": 491, "predominantli": 491, "data2": 491, "sub_key1": 491, "scturctur": 491, "data_stack": 491, "data_sampl": 491, "_sampler": 491, "_sum_tre": 491, "modulenotfounderror": 491, "noopresetenv": [491, 492], "backbone_modul": 491, "params_expand": 491, "exec_sequ": 491, "tensordict_exp": 491, "base_modul": 491, "tensordicts_prealloc": 491, "tensordicts_stack": 491, "tensordict_rollout": [491, 492], "automatical": 491, "60": 491, "particularili": 491, "concatmodul": 491, "loss_td": 491, "contributor": 491, "curiou": 491, "nascent": 491, "unsupervis": 492, "_build_env": 492, "deserv": 492, "__episode__": 492, "__trajectory__": 492, "void": 492, "reproduct": 492, "tensordict_tprim": 492, "wrapper1": 492, "wrapper2": 492, "obviou": 492, "truth": 492, "env_transformed_bi": 492, "stanc": 492, "transformeddistribut": 492, "base_dist": 492, "concat": 492, "mofidi": 492, "transformedenviron": 492, "moderet": 492, "computation": 492, "incom": 492, "amongst": 492, "has_cuda": 492, "convention": 492, "markovian": 492, "bar_": 492, "get_someth": 492, "aargh": 492, "is_clos": 492, "foo_list": 492, "121": 492, "evolv": 492, "steadi": 492, "approx": 492, "absor": 492, "_extra_st": 492}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [280, 0, 1, "", "implement_for"], [437, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiProcessedWeightUpdater"], [15, 0, 1, "", "MultiSyncDataCollector"], [16, 0, 1, "", "MultiaSyncDataCollector"], [17, 0, 1, "", "RayWeightUpdater"], [18, 0, 1, "", "SyncDataCollector"], [19, 0, 1, "", "VanillaWeightUpdater"], [20, 0, 1, "", "WeightUpdaterBase"], [21, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "init_updater"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[14, 1, 1, "", "all_worker_ids"], [14, 2, 1, "", "collector"], [14, 1, 1, "", "from_policy"], [14, 1, 1, "", "increment_version"], [14, 1, 1, "", "init"], [14, 2, 1, "", "post_hooks"], [14, 1, 1, "", "push_weights"], [14, 1, 1, "", "register_collector"], [14, 1, 1, "", "register_post_hook"]], "torchrl.collectors.MultiSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "init_updater"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "init_updater"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[17, 1, 1, "", "_get_server_weights"], [17, 1, 1, "", "_maybe_map_weights"], [17, 1, 1, "", "_skip_update"], [17, 1, 1, "", "_sync_weights_with_worker"], [17, 1, 1, "id0", "all_worker_ids"], [17, 2, 1, "", "collector"], [17, 1, 1, "", "from_policy"], [17, 1, 1, "", "increment_version"], [17, 1, 1, "", "init"], [17, 2, 1, "", "post_hooks"], [17, 1, 1, "", "push_weights"], [17, 1, 1, "", "register_collector"], [17, 1, 1, "", "register_post_hook"]], "torchrl.collectors.SyncDataCollector": [[18, 1, 1, "", "async_shutdown"], [18, 1, 1, "", "init_updater"], [18, 1, 1, "", "iterator"], [18, 1, 1, "", "load_state_dict"], [18, 1, 1, "", "pause"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "rollout"], [18, 1, 1, "", "set_seed"], [18, 1, 1, "", "shutdown"], [18, 1, 1, "", "start"], [18, 1, 1, "", "state_dict"], [18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "", "from_policy"], [19, 1, 1, "", "increment_version"], [19, 1, 1, "", "init"], [19, 2, 1, "", "post_hooks"], [19, 1, 1, "", "push_weights"], [19, 1, 1, "", "register_collector"], [19, 1, 1, "", "register_post_hook"]], "torchrl.collectors.WeightUpdaterBase": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 1, 1, "id0", "from_policy"], [20, 1, 1, "", "increment_version"], [20, 1, 1, "", "init"], [20, 2, 1, "", "post_hooks"], [20, 1, 1, "id1", "push_weights"], [20, 1, 1, "id2", "register_collector"], [20, 1, 1, "", "register_post_hook"]], "torchrl.collectors.aSyncDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "init_updater"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[22, 0, 1, "", "DistributedDataCollector"], [23, 0, 1, "", "DistributedSyncDataCollector"], [24, 0, 1, "", "DistributedWeightUpdater"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RPCWeightUpdater"], [27, 0, 1, "", "RayCollector"], [28, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "init_updater"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "init_updater"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[24, 1, 1, "", "_get_server_weights"], [24, 1, 1, "", "_maybe_map_weights"], [24, 1, 1, "", "_sync_weights_with_worker"], [24, 1, 1, "id0", "all_worker_ids"], [24, 2, 1, "", "collector"], [24, 1, 1, "", "from_policy"], [24, 1, 1, "", "increment_version"], [24, 1, 1, "", "init"], [24, 2, 1, "", "post_hooks"], [24, 1, 1, "", "push_weights"], [24, 1, 1, "", "register_collector"], [24, 1, 1, "", "register_post_hook"], [24, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "async_shutdown"], [25, 1, 1, "", "init_updater"], [25, 1, 1, "", "pause"], [25, 1, 1, "", "start"], [25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[26, 1, 1, "", "_get_server_weights"], [26, 1, 1, "", "_maybe_map_weights"], [26, 1, 1, "", "_sync_weights_with_worker"], [26, 1, 1, "id0", "all_worker_ids"], [26, 2, 1, "", "collector"], [26, 1, 1, "", "from_policy"], [26, 1, 1, "", "increment_version"], [26, 1, 1, "", "init"], [26, 2, 1, "", "post_hooks"], [26, 1, 1, "", "push_weights"], [26, 1, 1, "", "register_collector"], [26, 1, 1, "", "register_post_hook"], [26, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[27, 1, 1, "", "add_collectors"], [27, 1, 1, "", "async_shutdown"], [27, 1, 1, "", "init_updater"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "local_policy"], [27, 1, 1, "", "pause"], [27, 2, 1, "", "remote_collectors"], [27, 1, 1, "", "set_seed"], [27, 1, 1, "", "shutdown"], [27, 1, 1, "", "start"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "stop_remote_collectors"], [27, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[29, 0, 1, "", "LLMCollector"], [30, 0, 1, "", "RayLLMCollector"], [31, 0, 1, "", "vLLMUpdater"]], "torchrl.collectors.llm.LLMCollector": [[29, 1, 1, "", "as_remote"], [29, 1, 1, "", "async_shutdown"], [29, 2, 1, "", "dialog_turns_per_batch"], [29, 1, 1, "", "get_policy_model"], [29, 1, 1, "", "get_policy_version"], [29, 1, 1, "", "increment_version"], [29, 1, 1, "", "init_updater"], [29, 1, 1, "", "is_initialized"], [29, 1, 1, "", "iterator"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "pause"], [29, 2, 1, "", "policy_version"], [29, 1, 1, "", "reset"], [29, 2, 1, "", "rollout"], [29, 1, 1, "", "set_seed"], [29, 1, 1, "", "shutdown"], [29, 1, 1, "", "start"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.RayLLMCollector": [[30, 1, 1, "", "as_remote"], [30, 1, 1, "", "async_shutdown"], [30, 2, 1, "", "dialog_turns_per_batch"], [30, 1, 1, "", "get_policy_model"], [30, 1, 1, "", "get_policy_version"], [30, 1, 1, "", "increment_version"], [30, 1, 1, "", "init_updater"], [30, 1, 1, "", "is_initialized"], [30, 1, 1, "", "iterator"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "next"], [30, 1, 1, "", "pause"], [30, 2, 1, "", "policy_version"], [30, 1, 1, "", "reset"], [30, 2, 1, "", "rollout"], [30, 1, 1, "", "set_seed"], [30, 1, 1, "", "shutdown"], [30, 1, 1, "", "start"], [30, 1, 1, "", "state_dict"], [30, 2, 1, "", "total_dialog_turns"], [30, 1, 1, "", "update_policy_weights_"], [30, 2, 1, "", "weight_updater"]], "torchrl.collectors.llm.vLLMUpdater": [[31, 1, 1, "", "_get_server_weights"], [31, 1, 1, "", "_maybe_map_weights"], [31, 1, 1, "", "_sync_weights_with_worker"], [31, 1, 1, "id0", "all_worker_ids"], [31, 2, 1, "", "collector"], [31, 1, 1, "", "from_policy"], [31, 1, 1, "", "get_model_metadata"], [31, 1, 1, "", "increment_version"], [31, 1, 1, "id1", "init"], [31, 2, 1, "", "post_hooks"], [31, 1, 1, "", "push_weights"], [31, 1, 1, "", "register_collector"], [31, 1, 1, "", "register_post_hook"]], "torchrl.collectors.utils": [[32, 3, 1, "", "split_trajectories"]], "torchrl.data": [[33, 0, 1, "", "AdaptiveKLController"], [34, 0, 1, "", "Binary"], [35, 0, 1, "", "BinaryDiscreteTensorSpec"], [36, 0, 1, "", "BinaryToDecimal"], [37, 0, 1, "", "Bounded"], [38, 0, 1, "", "BoundedTensorSpec"], [39, 0, 1, "", "Categorical"], [40, 0, 1, "", "Composite"], [41, 0, 1, "", "CompositeSpec"], [42, 0, 1, "", "ConstantKLController"], [43, 0, 1, "", "DensifyReward"], [44, 0, 1, "", "DiscreteTensorSpec"], [45, 0, 1, "", "Flat2TED"], [46, 0, 1, "", "H5Combine"], [47, 0, 1, "", "H5Split"], [48, 0, 1, "", "HashToInt"], [49, 0, 1, "", "LazyStackedCompositeSpec"], [50, 0, 1, "", "LazyStackedTensorSpec"], [51, 0, 1, "", "MCTSForest"], [52, 0, 1, "", "MultiCategorical"], [53, 0, 1, "", "MultiDiscreteTensorSpec"], [54, 0, 1, "", "MultiOneHot"], [55, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [56, 0, 1, "", "MultiStep"], [57, 0, 1, "", "Nested2TED"], [58, 0, 1, "", "NonTensor"], [59, 0, 1, "", "NonTensorSpec"], [60, 0, 1, "", "OneHot"], [61, 0, 1, "", "OneHotDiscreteTensorSpec"], [62, 0, 1, "", "PairwiseDataset"], [63, 0, 1, "", "PrioritizedReplayBuffer"], [64, 0, 1, "", "PromptData"], [65, 0, 1, "", "PromptTensorDictTokenizer"], [66, 0, 1, "", "QueryModule"], [67, 0, 1, "", "RandomProjectionHash"], [68, 0, 1, "", "RayReplayBuffer"], [69, 0, 1, "", "RemoteTensorDictReplayBuffer"], [70, 0, 1, "", "ReplayBuffer"], [71, 0, 1, "", "RewardData"], [72, 0, 1, "", "RolloutFromModel"], [73, 0, 1, "", "SipHash"], [74, 0, 1, "", "Stacked"], [75, 0, 1, "", "StackedComposite"], [76, 0, 1, "", "TED2Flat"], [77, 0, 1, "", "TED2Nested"], [78, 0, 1, "", "TensorDictMap"], [79, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [80, 0, 1, "", "TensorDictReplayBuffer"], [81, 0, 1, "", "TensorDictTokenizer"], [82, 0, 1, "", "TensorMap"], [83, 0, 1, "", "TensorSpec"], [84, 0, 1, "", "TokenizedDatasetLoader"], [85, 0, 1, "", "Tree"], [86, 0, 1, "", "Unbounded"], [87, 0, 1, "", "UnboundedContinuous"], [88, 0, 1, "", "UnboundedContinuousTensorSpec"], [89, 0, 1, "", "UnboundedDiscrete"], [90, 0, 1, "", "UnboundedDiscreteTensorSpec"], [91, 0, 1, "", "check_no_exclusive_keys"], [92, 0, 1, "", "consolidate_spec"], [93, 0, 1, "", "contains_lazy_spec"], [94, 0, 1, "", "create_infinite_iterator"], [95, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[33, 1, 1, "", "update"]], "torchrl.data.Binary": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 4, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "erase_memoize_cache"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 1, 1, "", "memoize_encode"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "mtia"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_load_state_dict_pre_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_post_hook"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "set_submodule"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 2, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "set_provisional_n"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "get"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_empty"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "items"], [40, 1, 1, "", "keys"], [40, 1, 1, "", "lock_"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "pop"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "separates"], [40, 1, 1, "", "set"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unlock_"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "values"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "cardinality"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 2, 1, "", "device"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "erase_memoize_cache"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "get"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_empty"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "items"], [41, 1, 1, "", "keys"], [41, 1, 1, "", "lock_"], [41, 1, 1, "", "make_neg_dim"], [41, 1, 1, "", "memoize_encode"], [41, 2, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "pop"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "separates"], [41, 1, 1, "", "set"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unlock_"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "values"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "is_tdmodule_compatible"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "reset_out_keys"], [43, 1, 1, "", "reset_parameters_recursive"], [43, 1, 1, "", "select_out_keys"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 4, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "erase_memoize_cache"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 1, 1, "", "memoize_encode"], [44, 2, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "set_provisional_n"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "compile"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "mtia"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_load_state_dict_pre_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_post_hook"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_submodule"], [48, 1, 1, "", "share_memory"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "get"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_empty"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "items"], [49, 1, 1, "", "keys"], [49, 1, 1, "", "lock_"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "pop"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "separates"], [49, 1, 1, "", "set"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unlock_"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "values"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 2, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "erase_memoize_cache"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 1, 1, "", "memoize_encode"], [50, 2, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[51, 2, 1, "", "action_keys"], [51, 2, 1, "", "done_keys"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "get_keys_from_env"], [51, 2, 1, "", "observation_keys"], [51, 2, 1, "", "reward_keys"], [51, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_provisional_n"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "erase_memoize_cache"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 1, 1, "", "memoize_encode"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 2, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "erase_memoize_cache"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 1, 1, "", "memoize_encode"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "erase_memoize_cache"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 1, 1, "", "memoize_encode"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_categorical"], [61, 1, 1, "", "to_categorical_spec"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "to_one_hot"], [61, 1, 1, "", "to_one_hot_spec"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "update_mask"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[62, 2, 1, "", "device"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "fields"], [62, 1, 1, "", "from_dataset"], [62, 1, 1, "", "from_tensordict"], [62, 1, 1, "", "get"], [62, 1, 1, "", "load"], [62, 1, 1, "", "load_"], [62, 1, 1, "", "load_memmap"], [62, 1, 1, "", "load_state_dict"], [62, 1, 1, "", "memmap"], [62, 1, 1, "", "memmap_"], [62, 1, 1, "", "memmap_like"], [62, 1, 1, "", "memmap_refresh_"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set"], [62, 1, 1, "", "state_dict"], [62, 1, 1, "", "to_tensordict"], [62, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "next"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "close"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "next"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "next"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "next"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[71, 2, 1, "", "device"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "fields"], [71, 1, 1, "", "from_tensordict"], [71, 1, 1, "", "get"], [71, 1, 1, "", "load"], [71, 1, 1, "", "load_"], [71, 1, 1, "", "load_memmap"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "memmap"], [71, 1, 1, "", "memmap_"], [71, 1, 1, "", "memmap_like"], [71, 1, 1, "", "memmap_refresh_"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to_tensordict"], [71, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[72, 1, 1, "", "create_rollout_td"], [72, 1, 1, "", "generate"], [72, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "mtia"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_load_state_dict_pre_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_post_hook"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_submodule"], [73, 1, 1, "", "share_memory"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "erase_memoize_cache"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 1, 1, "", "memoize_encode"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 2, 1, "", "device"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "erase_memoize_cache"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "get"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_empty"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "items"], [75, 1, 1, "", "keys"], [75, 1, 1, "", "lock_"], [75, 1, 1, "", "make_neg_dim"], [75, 1, 1, "", "memoize_encode"], [75, 2, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "pop"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "separates"], [75, 1, 1, "", "set"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unlock_"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "values"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[78, 1, 1, "", "add_module"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "bfloat16"], [78, 1, 1, "", "buffers"], [78, 1, 1, "", "children"], [78, 1, 1, "", "compile"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 1, 1, "", "double"], [78, 1, 1, "", "eval"], [78, 1, 1, "", "extra_repr"], [78, 1, 1, "", "float"], [78, 1, 1, "", "forward"], [78, 1, 1, "", "from_tensordict_pair"], [78, 1, 1, "", "get_buffer"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "get_parameter"], [78, 1, 1, "", "get_submodule"], [78, 1, 1, "", "half"], [78, 1, 1, "", "ipu"], [78, 1, 1, "", "is_tdmodule_compatible"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "modules"], [78, 1, 1, "", "mtia"], [78, 1, 1, "", "named_buffers"], [78, 1, 1, "", "named_children"], [78, 1, 1, "", "named_modules"], [78, 1, 1, "", "named_parameters"], [78, 1, 1, "", "parameters"], [78, 1, 1, "", "register_backward_hook"], [78, 1, 1, "", "register_buffer"], [78, 1, 1, "", "register_forward_hook"], [78, 1, 1, "", "register_forward_pre_hook"], [78, 1, 1, "", "register_full_backward_hook"], [78, 1, 1, "", "register_full_backward_pre_hook"], [78, 1, 1, "", "register_load_state_dict_post_hook"], [78, 1, 1, "", "register_load_state_dict_pre_hook"], [78, 1, 1, "", "register_module"], [78, 1, 1, "", "register_parameter"], [78, 1, 1, "", "register_state_dict_post_hook"], [78, 1, 1, "", "register_state_dict_pre_hook"], [78, 1, 1, "", "requires_grad_"], [78, 1, 1, "", "reset_out_keys"], [78, 1, 1, "", "reset_parameters_recursive"], [78, 1, 1, "", "select_out_keys"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "set_submodule"], [78, 1, 1, "", "share_memory"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_empty"], [78, 1, 1, "", "train"], [78, 1, 1, "", "type"], [78, 1, 1, "", "xpu"], [78, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "next"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 1, 1, "", "as_remote"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "next"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 2, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 2, 1, "", "storage"], [80, 2, 1, "", "write_count"], [80, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[84, 1, 1, "", "dataset_to_tensordict"], [84, 1, 1, "", "load"]], "torchrl.data.Tree": [[85, 2, 1, "", "branching_action"], [85, 2, 1, "", "device"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "edges"], [85, 1, 1, "", "fields"], [85, 1, 1, "", "from_tensordict"], [85, 2, 1, "", "full_action_spec"], [85, 2, 1, "", "full_done_spec"], [85, 2, 1, "", "full_observation_spec"], [85, 2, 1, "", "full_reward_spec"], [85, 2, 1, "", "full_state_spec"], [85, 1, 1, "", "fully_expanded"], [85, 1, 1, "", "get"], [85, 1, 1, "", "get_vertex_by_hash"], [85, 1, 1, "", "get_vertex_by_id"], [85, 2, 1, "", "is_terminal"], [85, 1, 1, "", "load"], [85, 1, 1, "", "load_"], [85, 1, 1, "", "load_memmap"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "make_node"], [85, 1, 1, "", "max_length"], [85, 1, 1, "", "memmap"], [85, 1, 1, "", "memmap_"], [85, 1, 1, "", "memmap_like"], [85, 1, 1, "", "memmap_refresh_"], [85, 2, 1, "", "node_observation"], [85, 2, 1, "", "node_observations"], [85, 2, 1, "", "num_children"], [85, 1, 1, "", "num_vertices"], [85, 2, 1, "", "parent"], [85, 1, 1, "", "plot"], [85, 2, 1, "", "prev_action"], [85, 1, 1, "", "rollout_from_path"], [85, 1, 1, "", "save"], [85, 2, 1, "", "selected_actions"], [85, 1, 1, "", "set"], [85, 1, 1, "", "state_dict"], [85, 1, 1, "", "to_string"], [85, 1, 1, "", "to_tensordict"], [85, 1, 1, "", "unbind"], [85, 1, 1, "", "valid_paths"], [85, 1, 1, "", "vertices"], [85, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "erase_memoize_cache"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 1, 1, "", "memoize_encode"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "erase_memoize_cache"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 1, 1, "", "memoize_encode"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "erase_memoize_cache"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 1, 1, "", "memoize_encode"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.llm": [[96, 0, 1, "", "ContentBase"], [97, 0, 1, "", "History"], [98, 0, 1, "", "LLMData"], [99, 0, 1, "", "TopKRewardSelector"]], "torchrl.data.llm.ContentBase": [[96, 2, 1, "", "device"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "fields"], [96, 1, 1, "", "from_tensordict"], [96, 1, 1, "", "get"], [96, 1, 1, "", "load"], [96, 1, 1, "", "load_"], [96, 1, 1, "", "load_memmap"], [96, 1, 1, "", "load_state_dict"], [96, 1, 1, "", "memmap"], [96, 1, 1, "", "memmap_"], [96, 1, 1, "", "memmap_like"], [96, 1, 1, "", "memmap_refresh_"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set"], [96, 1, 1, "", "state_dict"], [96, 1, 1, "", "to_tensordict"], [96, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[97, 1, 1, "", "append"], [97, 1, 1, "", "apply_chat_template"], [97, 1, 1, "", "default_spec"], [97, 2, 1, "", "device"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "fields"], [97, 1, 1, "", "from_chats"], [97, 1, 1, "", "from_tensordict"], [97, 1, 1, "", "get"], [97, 1, 1, "", "load"], [97, 1, 1, "", "load_"], [97, 1, 1, "", "load_memmap"], [97, 1, 1, "", "load_state_dict"], [97, 1, 1, "", "memmap"], [97, 1, 1, "", "memmap_"], [97, 1, 1, "", "memmap_like"], [97, 1, 1, "", "memmap_refresh_"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set"], [97, 1, 1, "", "state_dict"], [97, 1, 1, "", "to_tensordict"], [97, 1, 1, "", "unbind"]], "torchrl.data.llm.LLMData": [[98, 2, 1, "", "device"], [98, 1, 1, "", "dumps"], [98, 1, 1, "", "fields"], [98, 1, 1, "", "from_tensordict"], [98, 1, 1, "", "get"], [98, 1, 1, "", "load"], [98, 1, 1, "", "load_"], [98, 1, 1, "", "load_memmap"], [98, 1, 1, "", "load_state_dict"], [98, 1, 1, "", "memmap"], [98, 1, 1, "", "memmap_"], [98, 1, 1, "", "memmap_like"], [98, 1, 1, "", "memmap_refresh_"], [98, 1, 1, "", "save"], [98, 1, 1, "", "set"], [98, 1, 1, "", "state_dict"], [98, 1, 1, "", "to_tensordict"], [98, 1, 1, "", "unbind"]], "torchrl.data.llm.TopKRewardSelector": [[99, 1, 1, "", "add_module"], [99, 1, 1, "", "apply"], [99, 1, 1, "", "bfloat16"], [99, 1, 1, "", "buffers"], [99, 1, 1, "", "children"], [99, 1, 1, "", "close"], [99, 1, 1, "", "compile"], [99, 2, 1, "", "container"], [99, 1, 1, "", "cpu"], [99, 1, 1, "", "cuda"], [99, 1, 1, "", "double"], [99, 1, 1, "", "eval"], [99, 1, 1, "", "extra_repr"], [99, 1, 1, "", "float"], [99, 1, 1, "", "forward"], [99, 1, 1, "", "get_buffer"], [99, 1, 1, "", "get_extra_state"], [99, 1, 1, "", "get_parameter"], [99, 1, 1, "", "get_submodule"], [99, 1, 1, "", "half"], [99, 1, 1, "", "init"], [99, 1, 1, "", "inv"], [99, 1, 1, "", "ipu"], [99, 1, 1, "", "load_state_dict"], [99, 1, 1, "", "modules"], [99, 1, 1, "", "mtia"], [99, 1, 1, "", "named_buffers"], [99, 1, 1, "", "named_children"], [99, 1, 1, "", "named_modules"], [99, 1, 1, "", "named_parameters"], [99, 1, 1, "", "parameters"], [99, 2, 1, "", "parent"], [99, 1, 1, "", "register_backward_hook"], [99, 1, 1, "", "register_buffer"], [99, 1, 1, "", "register_forward_hook"], [99, 1, 1, "", "register_forward_pre_hook"], [99, 1, 1, "", "register_full_backward_hook"], [99, 1, 1, "", "register_full_backward_pre_hook"], [99, 1, 1, "", "register_load_state_dict_post_hook"], [99, 1, 1, "", "register_load_state_dict_pre_hook"], [99, 1, 1, "", "register_module"], [99, 1, 1, "", "register_parameter"], [99, 1, 1, "", "register_state_dict_post_hook"], [99, 1, 1, "", "register_state_dict_pre_hook"], [99, 1, 1, "", "requires_grad_"], [99, 1, 1, "", "set_extra_state"], [99, 1, 1, "", "set_submodule"], [99, 1, 1, "", "share_memory"], [99, 1, 1, "", "state_dict"], [99, 1, 1, "", "to"], [99, 1, 1, "", "to_empty"], [99, 1, 1, "", "train"], [99, 1, 1, "", "transform_action_spec"], [99, 1, 1, "", "transform_done_spec"], [99, 1, 1, "", "transform_env_batch_size"], [99, 1, 1, "", "transform_env_device"], [99, 1, 1, "", "transform_input_spec"], [99, 1, 1, "", "transform_observation_spec"], [99, 1, 1, "", "transform_output_spec"], [99, 1, 1, "", "transform_reward_spec"], [99, 1, 1, "", "transform_state_spec"], [99, 1, 1, "", "type"], [99, 1, 1, "", "xpu"], [99, 1, 1, "", "zero_grad"]], "torchrl.data.replay_buffers": [[100, 0, 1, "", "FlatStorageCheckpointer"], [101, 0, 1, "", "H5StorageCheckpointer"], [102, 0, 1, "", "ImmutableDatasetWriter"], [103, 0, 1, "", "LazyMemmapStorage"], [104, 0, 1, "", "LazyStackStorage"], [105, 0, 1, "", "LazyTensorStorage"], [106, 0, 1, "", "ListStorage"], [107, 0, 1, "", "ListStorageCheckpointer"], [108, 0, 1, "", "NestedStorageCheckpointer"], [109, 0, 1, "", "PrioritizedSampler"], [110, 0, 1, "", "PrioritizedSliceSampler"], [111, 0, 1, "", "RandomSampler"], [112, 0, 1, "", "ReplayBufferEnsemble"], [113, 0, 1, "", "RoundRobinWriter"], [114, 0, 1, "", "Sampler"], [115, 0, 1, "", "SamplerEnsemble"], [116, 0, 1, "", "SamplerWithoutReplacement"], [117, 0, 1, "", "SliceSampler"], [118, 0, 1, "", "SliceSamplerWithoutReplacement"], [119, 0, 1, "", "Storage"], [120, 0, 1, "", "StorageCheckpointerBase"], [121, 0, 1, "", "StorageEnsemble"], [122, 0, 1, "", "StorageEnsembleCheckpointer"], [123, 0, 1, "", "TensorDictMaxValueWriter"], [124, 0, 1, "", "TensorDictRoundRobinWriter"], [125, 0, 1, "", "TensorStorage"], [126, 0, 1, "", "TensorStorageCheckpointer"], [127, 0, 1, "", "Writer"], [128, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[102, 1, 1, "", "add"], [102, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[104, 1, 1, "", "attach"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "load"], [104, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[105, 1, 1, "", "attach"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "load"], [105, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[106, 1, 1, "", "attach"], [106, 1, 1, "", "dump"], [106, 1, 1, "", "load"], [106, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[109, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[110, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[112, 1, 1, "", "add"], [112, 1, 1, "", "append_transform"], [112, 1, 1, "", "as_remote"], [112, 1, 1, "", "dump"], [112, 1, 1, "", "dumps"], [112, 1, 1, "", "empty"], [112, 1, 1, "", "extend"], [112, 1, 1, "", "insert_transform"], [112, 1, 1, "", "load"], [112, 1, 1, "", "loads"], [112, 1, 1, "", "next"], [112, 1, 1, "", "register_load_hook"], [112, 1, 1, "", "register_save_hook"], [112, 1, 1, "", "sample"], [112, 2, 1, "", "sampler"], [112, 1, 1, "", "save"], [112, 1, 1, "", "set_sampler"], [112, 1, 1, "", "set_storage"], [112, 1, 1, "", "set_writer"], [112, 2, 1, "", "storage"], [112, 2, 1, "", "write_count"], [112, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[119, 1, 1, "", "attach"], [119, 1, 1, "", "dump"], [119, 1, 1, "", "load"], [119, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[121, 1, 1, "", "attach"], [121, 1, 1, "", "dump"], [121, 1, 1, "", "load"], [121, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[123, 1, 1, "", "add"], [123, 1, 1, "", "extend"], [123, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[124, 1, 1, "", "add"], [124, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[125, 1, 1, "", "attach"], [125, 1, 1, "", "dump"], [125, 1, 1, "", "load"], [125, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[127, 1, 1, "", "add"], [127, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[128, 1, 1, "", "add"], [128, 1, 1, "", "extend"]], "torchrl.envs": [[129, 0, 1, "", "AsyncEnvPool"], [130, 3, 1, "", "BraxEnv"], [131, 3, 1, "", "BraxWrapper"], [132, 0, 1, "", "ChessEnv"], [133, 3, 1, "", "DMControlEnv"], [134, 3, 1, "", "DMControlWrapper"], [135, 0, 1, "", "EnvBase"], [136, 0, 1, "", "EnvCreator"], [137, 0, 1, "", "EnvMetaData"], [138, 3, 1, "", "GymEnv"], [139, 0, 1, "", "GymLikeEnv"], [140, 3, 1, "", "GymWrapper"], [141, 3, 1, "", "HabitatEnv"], [142, 3, 1, "", "IsaacGymEnv"], [143, 3, 1, "", "IsaacGymWrapper"], [144, 3, 1, "", "IsaacLabWrapper"], [145, 3, 1, "", "JumanjiEnv"], [146, 3, 1, "", "JumanjiWrapper"], [147, 0, 1, "", "LLMHashingEnv"], [148, 3, 1, "", "MOGymEnv"], [149, 3, 1, "", "MOGymWrapper"], [150, 3, 1, "", "MarlGroupMapType"], [151, 3, 1, "", "MeltingpotEnv"], [152, 3, 1, "", "MeltingpotWrapper"], [153, 3, 1, "", "ModelBasedEnvBase"], [154, 3, 1, "", "MultiThreadedEnv"], [155, 3, 1, "", "MultiThreadedEnvWrapper"], [156, 3, 1, "", "OpenMLEnv"], [157, 3, 1, "", "OpenSpielEnv"], [158, 3, 1, "", "OpenSpielWrapper"], [159, 0, 1, "", "ParallelEnv"], [160, 0, 1, "", "PendulumEnv"], [161, 3, 1, "", "PettingZooEnv"], [162, 3, 1, "", "PettingZooWrapper"], [163, 0, 1, "", "ProcessorAsyncEnvPool"], [164, 3, 1, "", "RandomPolicy"], [165, 3, 1, "", "RoboHiveEnv"], [166, 3, 1, "", "SMACv2Env"], [167, 3, 1, "", "SMACv2Wrapper"], [168, 0, 1, "", "SerialEnv"], [169, 0, 1, "", "ThreadingAsyncEnvPool"], [170, 0, 1, "", "TicTacToeEnv"], [171, 3, 1, "", "UnityMLAgentsEnv"], [172, 3, 1, "", "UnityMLAgentsWrapper"], [173, 3, 1, "", "VmasEnv"], [174, 3, 1, "", "VmasWrapper"], [175, 3, 1, "", "check_env_specs"], [176, 3, 1, "", "check_marl_grouping"], [177, 3, 1, "", "exploration_type"], [178, 3, 1, "", "get_available_libraries"], [179, 3, 1, "", "gym_backend"], [204, 3, 1, "", "make_composite_from_td"], [153, 1, 1, "", "rand_step"], [207, 3, 1, "", "register_gym_spec_conversion"], [153, 1, 1, "", "reset"], [153, 1, 1, "", "rollout"], [208, 3, 1, "", "set_exploration_type"], [209, 3, 1, "", "set_gym_backend"], [153, 1, 1, "", "set_seed"], [153, 1, 1, "", "step"], [210, 3, 1, "", "step_mdp"], [211, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[129, 2, 1, "", "action_key"], [129, 2, 1, "", "action_keys"], [129, 2, 1, "", "action_spec"], [129, 2, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "all_actions"], [129, 1, 1, "", "any_done"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_specs_"], [129, 2, 1, "", "batch_dims"], [129, 2, 1, "", "batch_locked"], [129, 2, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 2, 1, "", "done_key"], [129, 2, 1, "", "done_keys"], [129, 2, 1, "", "done_keys_groups"], [129, 2, 1, "", "done_spec"], [129, 2, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 2, 1, "", "env_batch_sizes"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 2, 1, "", "full_action_spec"], [129, 2, 1, "", "full_action_spec_unbatched"], [129, 2, 1, "", "full_done_spec"], [129, 2, 1, "", "full_done_spec_unbatched"], [129, 2, 1, "", "full_observation_spec_unbatched"], [129, 2, 1, "", "full_reward_spec"], [129, 2, 1, "", "full_reward_spec_unbatched"], [129, 2, 1, "", "full_state_spec"], [129, 2, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 2, 1, "", "input_spec"], [129, 2, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 2, 1, "", "is_spec_locked"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 2, 1, "", "observation_keys"], [129, 2, 1, "", "observation_spec"], [129, 2, 1, "", "observation_spec_unbatched"], [129, 2, 1, "", "output_spec"], [129, 2, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 2, 1, "", "reset_keys"], [129, 2, 1, "", "reward_key"], [129, 2, 1, "", "reward_keys"], [129, 2, 1, "", "reward_spec"], [129, 2, 1, "", "reward_spec_unbatched"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_spec_lock_"], [129, 1, 1, "", "set_submodule"], [129, 2, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 2, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 2, 1, "", "state_keys"], [129, 2, 1, "", "state_spec"], [129, 2, 1, "", "state_spec_unbatched"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[132, 2, 1, "", "action_key"], [132, 2, 1, "", "action_keys"], [132, 2, 1, "", "action_spec"], [132, 2, 1, "", "action_spec_unbatched"], [132, 1, 1, "", "add_module"], [132, 1, 1, "", "add_truncated_keys"], [132, 1, 1, "", "all_actions"], [132, 1, 1, "", "any_done"], [132, 1, 1, "", "append_transform"], [132, 1, 1, "", "apply"], [132, 1, 1, "", "auto_specs_"], [132, 2, 1, "", "batch_dims"], [132, 2, 1, "", "batch_locked"], [132, 2, 1, "", "batch_size"], [132, 1, 1, "", "bfloat16"], [132, 1, 1, "", "buffers"], [132, 1, 1, "", "cardinality"], [132, 1, 1, "", "check_env_specs"], [132, 1, 1, "", "children"], [132, 1, 1, "", "compile"], [132, 1, 1, "", "cpu"], [132, 1, 1, "", "cuda"], [132, 2, 1, "", "done_key"], [132, 2, 1, "", "done_keys"], [132, 2, 1, "", "done_keys_groups"], [132, 2, 1, "", "done_spec"], [132, 2, 1, "", "done_spec_unbatched"], [132, 1, 1, "", "double"], [132, 1, 1, "", "empty_cache"], [132, 1, 1, "", "eval"], [132, 1, 1, "", "extra_repr"], [132, 1, 1, "", "fake_tensordict"], [132, 1, 1, "", "float"], [132, 1, 1, "", "forward"], [132, 2, 1, "", "full_action_spec"], [132, 2, 1, "", "full_action_spec_unbatched"], [132, 2, 1, "", "full_done_spec"], [132, 2, 1, "", "full_done_spec_unbatched"], [132, 2, 1, "", "full_observation_spec_unbatched"], [132, 2, 1, "", "full_reward_spec"], [132, 2, 1, "", "full_reward_spec_unbatched"], [132, 2, 1, "", "full_state_spec"], [132, 2, 1, "", "full_state_spec_unbatched"], [132, 1, 1, "", "get_buffer"], [132, 1, 1, "", "get_extra_state"], [132, 1, 1, "", "get_legal_moves"], [132, 1, 1, "", "get_parameter"], [132, 1, 1, "", "get_submodule"], [132, 1, 1, "", "half"], [132, 2, 1, "", "input_spec"], [132, 2, 1, "", "input_spec_unbatched"], [132, 1, 1, "", "ipu"], [132, 2, 1, "", "is_spec_locked"], [132, 1, 1, "", "load_state_dict"], [132, 1, 1, "", "maybe_reset"], [132, 1, 1, "", "modules"], [132, 1, 1, "", "mtia"], [132, 1, 1, "", "named_buffers"], [132, 1, 1, "", "named_children"], [132, 1, 1, "", "named_modules"], [132, 1, 1, "", "named_parameters"], [132, 2, 1, "", "observation_keys"], [132, 2, 1, "", "observation_spec"], [132, 2, 1, "", "observation_spec_unbatched"], [132, 2, 1, "", "output_spec"], [132, 2, 1, "", "output_spec_unbatched"], [132, 1, 1, "", "parameters"], [132, 1, 1, "", "rand_action"], [132, 1, 1, "", "rand_step"], [132, 1, 1, "", "register_backward_hook"], [132, 1, 1, "", "register_buffer"], [132, 1, 1, "", "register_forward_hook"], [132, 1, 1, "", "register_forward_pre_hook"], [132, 1, 1, "", "register_full_backward_hook"], [132, 1, 1, "", "register_full_backward_pre_hook"], [132, 1, 1, "", "register_gym"], [132, 1, 1, "", "register_load_state_dict_post_hook"], [132, 1, 1, "", "register_load_state_dict_pre_hook"], [132, 1, 1, "", "register_module"], [132, 1, 1, "", "register_parameter"], [132, 1, 1, "", "register_state_dict_post_hook"], [132, 1, 1, "", "register_state_dict_pre_hook"], [132, 1, 1, "", "requires_grad_"], [132, 1, 1, "", "reset"], [132, 2, 1, "", "reset_keys"], [132, 2, 1, "", "reward_key"], [132, 2, 1, "", "reward_keys"], [132, 2, 1, "", "reward_spec"], [132, 2, 1, "", "reward_spec_unbatched"], [132, 1, 1, "", "rollout"], [132, 1, 1, "", "set_extra_state"], [132, 1, 1, "", "set_seed"], [132, 1, 1, "", "set_spec_lock_"], [132, 1, 1, "", "set_submodule"], [132, 2, 1, "", "shape"], [132, 1, 1, "", "share_memory"], [132, 2, 1, "", "specs"], [132, 1, 1, "", "state_dict"], [132, 2, 1, "", "state_keys"], [132, 2, 1, "", "state_spec"], [132, 2, 1, "", "state_spec_unbatched"], [132, 1, 1, "", "step"], [132, 1, 1, "", "step_and_maybe_reset"], [132, 1, 1, "", "step_mdp"], [132, 1, 1, "", "to"], [132, 1, 1, "", "to_empty"], [132, 1, 1, "", "train"], [132, 1, 1, "", "type"], [132, 1, 1, "", "xpu"], [132, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[135, 2, 1, "", "action_key"], [135, 2, 1, "", "action_keys"], [135, 2, 1, "", "action_spec"], [135, 2, 1, "", "action_spec_unbatched"], [135, 1, 1, "", "add_module"], [135, 1, 1, "", "add_truncated_keys"], [135, 1, 1, "", "all_actions"], [135, 1, 1, "", "any_done"], [135, 1, 1, "", "append_transform"], [135, 1, 1, "", "apply"], [135, 1, 1, "", "auto_specs_"], [135, 2, 1, "", "batch_dims"], [135, 2, 1, "", "batch_locked"], [135, 2, 1, "", "batch_size"], [135, 1, 1, "", "bfloat16"], [135, 1, 1, "", "buffers"], [135, 1, 1, "", "cardinality"], [135, 1, 1, "", "check_env_specs"], [135, 1, 1, "", "children"], [135, 1, 1, "", "compile"], [135, 1, 1, "", "cpu"], [135, 1, 1, "", "cuda"], [135, 2, 1, "", "done_key"], [135, 2, 1, "", "done_keys"], [135, 2, 1, "", "done_keys_groups"], [135, 2, 1, "", "done_spec"], [135, 2, 1, "", "done_spec_unbatched"], [135, 1, 1, "", "double"], [135, 1, 1, "", "empty_cache"], [135, 1, 1, "", "eval"], [135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "fake_tensordict"], [135, 1, 1, "", "float"], [135, 1, 1, "", "forward"], [135, 2, 1, "", "full_action_spec"], [135, 2, 1, "", "full_action_spec_unbatched"], [135, 2, 1, "", "full_done_spec"], [135, 2, 1, "", "full_done_spec_unbatched"], [135, 2, 1, "", "full_observation_spec_unbatched"], [135, 2, 1, "", "full_reward_spec"], [135, 2, 1, "", "full_reward_spec_unbatched"], [135, 2, 1, "", "full_state_spec"], [135, 2, 1, "", "full_state_spec_unbatched"], [135, 1, 1, "", "get_buffer"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "get_parameter"], [135, 1, 1, "", "get_submodule"], [135, 1, 1, "", "half"], [135, 2, 1, "", "input_spec"], [135, 2, 1, "", "input_spec_unbatched"], [135, 1, 1, "", "ipu"], [135, 2, 1, "", "is_spec_locked"], [135, 1, 1, "", "load_state_dict"], [135, 1, 1, "", "maybe_reset"], [135, 1, 1, "", "modules"], [135, 1, 1, "", "mtia"], [135, 1, 1, "", "named_buffers"], [135, 1, 1, "", "named_children"], [135, 1, 1, "", "named_modules"], [135, 1, 1, "", "named_parameters"], [135, 2, 1, "", "observation_keys"], [135, 2, 1, "", "observation_spec"], [135, 2, 1, "", "observation_spec_unbatched"], [135, 2, 1, "", "output_spec"], [135, 2, 1, "", "output_spec_unbatched"], [135, 1, 1, "", "parameters"], [135, 1, 1, "", "rand_action"], [135, 1, 1, "id0", "rand_step"], [135, 1, 1, "", "register_backward_hook"], [135, 1, 1, "", "register_buffer"], [135, 1, 1, "", "register_forward_hook"], [135, 1, 1, "", "register_forward_pre_hook"], [135, 1, 1, "", "register_full_backward_hook"], [135, 1, 1, "", "register_full_backward_pre_hook"], [135, 1, 1, "", "register_gym"], [135, 1, 1, "", "register_load_state_dict_post_hook"], [135, 1, 1, "", "register_load_state_dict_pre_hook"], [135, 1, 1, "", "register_module"], [135, 1, 1, "", "register_parameter"], [135, 1, 1, "", "register_state_dict_post_hook"], [135, 1, 1, "", "register_state_dict_pre_hook"], [135, 1, 1, "", "requires_grad_"], [135, 1, 1, "id1", "reset"], [135, 2, 1, "", "reset_keys"], [135, 2, 1, "", "reward_key"], [135, 2, 1, "", "reward_keys"], [135, 2, 1, "", "reward_spec"], [135, 2, 1, "", "reward_spec_unbatched"], [135, 1, 1, "id2", "rollout"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "id3", "set_seed"], [135, 1, 1, "", "set_spec_lock_"], [135, 1, 1, "", "set_submodule"], [135, 2, 1, "", "shape"], [135, 1, 1, "", "share_memory"], [135, 2, 1, "", "specs"], [135, 1, 1, "", "state_dict"], [135, 2, 1, "", "state_keys"], [135, 2, 1, "", "state_spec"], [135, 2, 1, "", "state_spec_unbatched"], [135, 1, 1, "id4", "step"], [135, 1, 1, "", "step_and_maybe_reset"], [135, 1, 1, "", "step_mdp"], [135, 1, 1, "", "to"], [135, 1, 1, "", "to_empty"], [135, 1, 1, "", "train"], [135, 1, 1, "", "type"], [135, 1, 1, "", "xpu"], [135, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[136, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[139, 2, 1, "", "action_key"], [139, 2, 1, "", "action_keys"], [139, 2, 1, "", "action_spec"], [139, 2, 1, "", "action_spec_unbatched"], [139, 1, 1, "", "add_module"], [139, 1, 1, "", "add_truncated_keys"], [139, 1, 1, "", "all_actions"], [139, 1, 1, "", "any_done"], [139, 1, 1, "", "append_transform"], [139, 1, 1, "", "apply"], [139, 1, 1, "", "auto_register_info_dict"], [139, 1, 1, "", "auto_specs_"], [139, 2, 1, "", "batch_dims"], [139, 2, 1, "", "batch_locked"], [139, 2, 1, "", "batch_size"], [139, 1, 1, "", "bfloat16"], [139, 1, 1, "", "buffers"], [139, 1, 1, "", "cardinality"], [139, 1, 1, "", "check_env_specs"], [139, 1, 1, "", "children"], [139, 1, 1, "", "close"], [139, 1, 1, "", "compile"], [139, 1, 1, "", "cpu"], [139, 1, 1, "", "cuda"], [139, 2, 1, "", "done_key"], [139, 2, 1, "", "done_keys"], [139, 2, 1, "", "done_keys_groups"], [139, 2, 1, "", "done_spec"], [139, 2, 1, "", "done_spec_unbatched"], [139, 1, 1, "", "double"], [139, 1, 1, "", "empty_cache"], [139, 1, 1, "", "eval"], [139, 1, 1, "", "extra_repr"], [139, 1, 1, "", "fake_tensordict"], [139, 1, 1, "", "fast_encoding"], [139, 1, 1, "", "float"], [139, 1, 1, "", "forward"], [139, 2, 1, "", "full_action_spec"], [139, 2, 1, "", "full_action_spec_unbatched"], [139, 2, 1, "", "full_done_spec"], [139, 2, 1, "", "full_done_spec_unbatched"], [139, 2, 1, "", "full_observation_spec_unbatched"], [139, 2, 1, "", "full_reward_spec"], [139, 2, 1, "", "full_reward_spec_unbatched"], [139, 2, 1, "", "full_state_spec"], [139, 2, 1, "", "full_state_spec_unbatched"], [139, 1, 1, "", "get_buffer"], [139, 1, 1, "", "get_extra_state"], [139, 1, 1, "", "get_parameter"], [139, 1, 1, "", "get_submodule"], [139, 1, 1, "", "half"], [139, 2, 1, "", "input_spec"], [139, 2, 1, "", "input_spec_unbatched"], [139, 1, 1, "", "ipu"], [139, 2, 1, "", "is_spec_locked"], [139, 1, 1, "", "load_state_dict"], [139, 1, 1, "", "maybe_reset"], [139, 1, 1, "", "modules"], [139, 1, 1, "", "mtia"], [139, 1, 1, "", "named_buffers"], [139, 1, 1, "", "named_children"], [139, 1, 1, "", "named_modules"], [139, 1, 1, "", "named_parameters"], [139, 2, 1, "", "observation_keys"], [139, 2, 1, "", "observation_spec"], [139, 2, 1, "", "observation_spec_unbatched"], [139, 2, 1, "", "output_spec"], [139, 2, 1, "", "output_spec_unbatched"], [139, 1, 1, "", "parameters"], [139, 1, 1, "", "rand_action"], [139, 1, 1, "", "rand_step"], [139, 1, 1, "", "read_action"], [139, 1, 1, "", "read_done"], [139, 1, 1, "", "read_obs"], [139, 1, 1, "", "read_reward"], [139, 1, 1, "", "register_backward_hook"], [139, 1, 1, "", "register_buffer"], [139, 1, 1, "", "register_forward_hook"], [139, 1, 1, "", "register_forward_pre_hook"], [139, 1, 1, "", "register_full_backward_hook"], [139, 1, 1, "", "register_full_backward_pre_hook"], [139, 1, 1, "", "register_gym"], [139, 1, 1, "", "register_load_state_dict_post_hook"], [139, 1, 1, "", "register_load_state_dict_pre_hook"], [139, 1, 1, "", "register_module"], [139, 1, 1, "", "register_parameter"], [139, 1, 1, "", "register_state_dict_post_hook"], [139, 1, 1, "", "register_state_dict_pre_hook"], [139, 1, 1, "", "requires_grad_"], [139, 1, 1, "", "reset"], [139, 2, 1, "", "reset_keys"], [139, 2, 1, "", "reward_key"], [139, 2, 1, "", "reward_keys"], [139, 2, 1, "", "reward_spec"], [139, 2, 1, "", "reward_spec_unbatched"], [139, 1, 1, "", "rollout"], [139, 1, 1, "", "set_extra_state"], [139, 1, 1, "", "set_info_dict_reader"], [139, 1, 1, "", "set_seed"], [139, 1, 1, "", "set_spec_lock_"], [139, 1, 1, "", "set_submodule"], [139, 2, 1, "", "shape"], [139, 1, 1, "", "share_memory"], [139, 2, 1, "", "specs"], [139, 1, 1, "", "state_dict"], [139, 2, 1, "", "state_keys"], [139, 2, 1, "", "state_spec"], [139, 2, 1, "", "state_spec_unbatched"], [139, 1, 1, "", "step"], [139, 1, 1, "", "step_and_maybe_reset"], [139, 1, 1, "", "step_mdp"], [139, 1, 1, "", "to"], [139, 1, 1, "", "to_empty"], [139, 1, 1, "", "train"], [139, 1, 1, "", "type"], [139, 1, 1, "", "xpu"], [139, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[147, 2, 1, "", "action_key"], [147, 2, 1, "", "action_keys"], [147, 2, 1, "", "action_spec"], [147, 2, 1, "", "action_spec_unbatched"], [147, 1, 1, "", "add_module"], [147, 1, 1, "", "add_truncated_keys"], [147, 1, 1, "", "all_actions"], [147, 1, 1, "", "any_done"], [147, 1, 1, "", "append_transform"], [147, 1, 1, "", "apply"], [147, 1, 1, "", "auto_specs_"], [147, 2, 1, "", "batch_dims"], [147, 2, 1, "", "batch_locked"], [147, 2, 1, "", "batch_size"], [147, 1, 1, "", "bfloat16"], [147, 1, 1, "", "buffers"], [147, 1, 1, "", "cardinality"], [147, 1, 1, "", "check_env_specs"], [147, 1, 1, "", "children"], [147, 1, 1, "", "compile"], [147, 1, 1, "", "cpu"], [147, 1, 1, "", "cuda"], [147, 2, 1, "", "done_key"], [147, 2, 1, "", "done_keys"], [147, 2, 1, "", "done_keys_groups"], [147, 2, 1, "", "done_spec"], [147, 2, 1, "", "done_spec_unbatched"], [147, 1, 1, "", "double"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 1, 1, "", "extra_repr"], [147, 1, 1, "", "fake_tensordict"], [147, 1, 1, "", "float"], [147, 1, 1, "", "forward"], [147, 2, 1, "", "full_action_spec"], [147, 2, 1, "", "full_action_spec_unbatched"], [147, 2, 1, "", "full_done_spec"], [147, 2, 1, "", "full_done_spec_unbatched"], [147, 2, 1, "", "full_observation_spec_unbatched"], [147, 2, 1, "", "full_reward_spec"], [147, 2, 1, "", "full_reward_spec_unbatched"], [147, 2, 1, "", "full_state_spec"], [147, 2, 1, "", "full_state_spec_unbatched"], [147, 1, 1, "", "get_buffer"], [147, 1, 1, "", "get_extra_state"], [147, 1, 1, "", "get_parameter"], [147, 1, 1, "", "get_submodule"], [147, 1, 1, "", "half"], [147, 2, 1, "", "input_spec"], [147, 2, 1, "", "input_spec_unbatched"], [147, 1, 1, "", "ipu"], [147, 2, 1, "", "is_spec_locked"], [147, 1, 1, "", "load_state_dict"], [147, 1, 1, "", "make_tensordict"], [147, 1, 1, "", "maybe_reset"], [147, 1, 1, "", "modules"], [147, 1, 1, "", "mtia"], [147, 1, 1, "", "named_buffers"], [147, 1, 1, "", "named_children"], [147, 1, 1, "", "named_modules"], [147, 1, 1, "", "named_parameters"], [147, 2, 1, "", "observation_keys"], [147, 2, 1, "", "observation_spec"], [147, 2, 1, "", "observation_spec_unbatched"], [147, 2, 1, "", "output_spec"], [147, 2, 1, "", "output_spec_unbatched"], [147, 1, 1, "", "parameters"], [147, 1, 1, "", "rand_action"], [147, 1, 1, "", "rand_step"], [147, 1, 1, "", "register_backward_hook"], [147, 1, 1, "", "register_buffer"], [147, 1, 1, "", "register_forward_hook"], [147, 1, 1, "", "register_forward_pre_hook"], [147, 1, 1, "", "register_full_backward_hook"], [147, 1, 1, "", "register_full_backward_pre_hook"], [147, 1, 1, "", "register_gym"], [147, 1, 1, "", "register_load_state_dict_post_hook"], [147, 1, 1, "", "register_load_state_dict_pre_hook"], [147, 1, 1, "", "register_module"], [147, 1, 1, "", "register_parameter"], [147, 1, 1, "", "register_state_dict_post_hook"], [147, 1, 1, "", "register_state_dict_pre_hook"], [147, 1, 1, "", "requires_grad_"], [147, 1, 1, "", "reset"], [147, 2, 1, "", "reset_keys"], [147, 2, 1, "", "reward_key"], [147, 2, 1, "", "reward_keys"], [147, 2, 1, "", "reward_spec"], [147, 2, 1, "", "reward_spec_unbatched"], [147, 1, 1, "", "rollout"], [147, 1, 1, "", "set_extra_state"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "set_spec_lock_"], [147, 1, 1, "", "set_submodule"], [147, 2, 1, "", "shape"], [147, 1, 1, "", "share_memory"], [147, 2, 1, "", "specs"], [147, 1, 1, "", "state_dict"], [147, 2, 1, "", "state_keys"], [147, 2, 1, "", "state_spec"], [147, 2, 1, "", "state_spec_unbatched"], [147, 1, 1, "", "step"], [147, 1, 1, "", "step_and_maybe_reset"], [147, 1, 1, "", "step_mdp"], [147, 1, 1, "", "to"], [147, 1, 1, "", "to_empty"], [147, 1, 1, "", "train"], [147, 1, 1, "", "type"], [147, 1, 1, "", "xpu"], [147, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_locked"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "update_kwargs"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[160, 2, 1, "", "action_key"], [160, 2, 1, "", "action_keys"], [160, 2, 1, "", "action_spec"], [160, 2, 1, "", "action_spec_unbatched"], [160, 1, 1, "", "add_module"], [160, 1, 1, "", "add_truncated_keys"], [160, 1, 1, "", "all_actions"], [160, 1, 1, "", "any_done"], [160, 1, 1, "", "append_transform"], [160, 1, 1, "", "apply"], [160, 1, 1, "", "auto_specs_"], [160, 2, 1, "", "batch_dims"], [160, 2, 1, "", "batch_size"], [160, 1, 1, "", "bfloat16"], [160, 1, 1, "", "buffers"], [160, 1, 1, "", "cardinality"], [160, 1, 1, "", "check_env_specs"], [160, 1, 1, "", "children"], [160, 1, 1, "", "compile"], [160, 1, 1, "", "cpu"], [160, 1, 1, "", "cuda"], [160, 2, 1, "", "done_key"], [160, 2, 1, "", "done_keys"], [160, 2, 1, "", "done_keys_groups"], [160, 2, 1, "", "done_spec"], [160, 2, 1, "", "done_spec_unbatched"], [160, 1, 1, "", "double"], [160, 1, 1, "", "empty_cache"], [160, 1, 1, "", "eval"], [160, 1, 1, "", "extra_repr"], [160, 1, 1, "", "fake_tensordict"], [160, 1, 1, "", "float"], [160, 1, 1, "", "forward"], [160, 2, 1, "", "full_action_spec"], [160, 2, 1, "", "full_action_spec_unbatched"], [160, 2, 1, "", "full_done_spec"], [160, 2, 1, "", "full_done_spec_unbatched"], [160, 2, 1, "", "full_observation_spec_unbatched"], [160, 2, 1, "", "full_reward_spec"], [160, 2, 1, "", "full_reward_spec_unbatched"], [160, 2, 1, "", "full_state_spec"], [160, 2, 1, "", "full_state_spec_unbatched"], [160, 1, 1, "", "gen_params"], [160, 1, 1, "", "get_buffer"], [160, 1, 1, "", "get_extra_state"], [160, 1, 1, "", "get_parameter"], [160, 1, 1, "", "get_submodule"], [160, 1, 1, "", "half"], [160, 2, 1, "", "input_spec"], [160, 2, 1, "", "input_spec_unbatched"], [160, 1, 1, "", "ipu"], [160, 2, 1, "", "is_spec_locked"], [160, 1, 1, "", "load_state_dict"], [160, 1, 1, "", "maybe_reset"], [160, 1, 1, "", "modules"], [160, 1, 1, "", "mtia"], [160, 1, 1, "", "named_buffers"], [160, 1, 1, "", "named_children"], [160, 1, 1, "", "named_modules"], [160, 1, 1, "", "named_parameters"], [160, 2, 1, "", "observation_keys"], [160, 2, 1, "", "observation_spec"], [160, 2, 1, "", "observation_spec_unbatched"], [160, 2, 1, "", "output_spec"], [160, 2, 1, "", "output_spec_unbatched"], [160, 1, 1, "", "parameters"], [160, 1, 1, "", "rand_action"], [160, 1, 1, "", "rand_step"], [160, 1, 1, "", "register_backward_hook"], [160, 1, 1, "", "register_buffer"], [160, 1, 1, "", "register_forward_hook"], [160, 1, 1, "", "register_forward_pre_hook"], [160, 1, 1, "", "register_full_backward_hook"], [160, 1, 1, "", "register_full_backward_pre_hook"], [160, 1, 1, "", "register_gym"], [160, 1, 1, "", "register_load_state_dict_post_hook"], [160, 1, 1, "", "register_load_state_dict_pre_hook"], [160, 1, 1, "", "register_module"], [160, 1, 1, "", "register_parameter"], [160, 1, 1, "", "register_state_dict_post_hook"], [160, 1, 1, "", "register_state_dict_pre_hook"], [160, 1, 1, "", "requires_grad_"], [160, 1, 1, "", "reset"], [160, 2, 1, "", "reset_keys"], [160, 2, 1, "", "reward_key"], [160, 2, 1, "", "reward_keys"], [160, 2, 1, "", "reward_spec"], [160, 2, 1, "", "reward_spec_unbatched"], [160, 1, 1, "", "rollout"], [160, 1, 1, "", "set_extra_state"], [160, 1, 1, "", "set_seed"], [160, 1, 1, "", "set_spec_lock_"], [160, 1, 1, "", "set_submodule"], [160, 2, 1, "", "shape"], [160, 1, 1, "", "share_memory"], [160, 2, 1, "", "specs"], [160, 1, 1, "", "state_dict"], [160, 2, 1, "", "state_keys"], [160, 2, 1, "", "state_spec"], [160, 2, 1, "", "state_spec_unbatched"], [160, 1, 1, "", "step"], [160, 1, 1, "", "step_and_maybe_reset"], [160, 1, 1, "", "step_mdp"], [160, 1, 1, "", "to"], [160, 1, 1, "", "to_empty"], [160, 1, 1, "", "train"], [160, 1, 1, "", "type"], [160, 1, 1, "", "xpu"], [160, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[163, 1, 1, "", "_setup"], [163, 2, 1, "", "action_key"], [163, 2, 1, "", "action_keys"], [163, 2, 1, "", "action_spec"], [163, 2, 1, "", "action_spec_unbatched"], [163, 1, 1, "", "add_module"], [163, 1, 1, "", "add_truncated_keys"], [163, 1, 1, "", "all_actions"], [163, 1, 1, "", "any_done"], [163, 1, 1, "", "append_transform"], [163, 1, 1, "", "apply"], [163, 1, 1, "", "async_reset_recv"], [163, 1, 1, "", "async_reset_send"], [163, 1, 1, "", "async_step_recv"], [163, 1, 1, "", "async_step_send"], [163, 1, 1, "", "auto_specs_"], [163, 2, 1, "", "batch_dims"], [163, 2, 1, "", "batch_locked"], [163, 2, 1, "", "batch_size"], [163, 1, 1, "", "bfloat16"], [163, 1, 1, "", "buffers"], [163, 1, 1, "", "cardinality"], [163, 1, 1, "", "check_env_specs"], [163, 1, 1, "", "children"], [163, 1, 1, "", "compile"], [163, 1, 1, "", "cpu"], [163, 1, 1, "", "cuda"], [163, 2, 1, "", "done_key"], [163, 2, 1, "", "done_keys"], [163, 2, 1, "", "done_keys_groups"], [163, 2, 1, "", "done_spec"], [163, 2, 1, "", "done_spec_unbatched"], [163, 1, 1, "", "double"], [163, 1, 1, "", "empty_cache"], [163, 2, 1, "", "env_batch_sizes"], [163, 1, 1, "", "eval"], [163, 1, 1, "", "extra_repr"], [163, 1, 1, "", "fake_tensordict"], [163, 1, 1, "", "float"], [163, 1, 1, "", "forward"], [163, 2, 1, "", "full_action_spec"], [163, 2, 1, "", "full_action_spec_unbatched"], [163, 2, 1, "", "full_done_spec"], [163, 2, 1, "", "full_done_spec_unbatched"], [163, 2, 1, "", "full_observation_spec_unbatched"], [163, 2, 1, "", "full_reward_spec"], [163, 2, 1, "", "full_reward_spec_unbatched"], [163, 2, 1, "", "full_state_spec"], [163, 2, 1, "", "full_state_spec_unbatched"], [163, 1, 1, "", "get_buffer"], [163, 1, 1, "", "get_extra_state"], [163, 1, 1, "", "get_parameter"], [163, 1, 1, "", "get_submodule"], [163, 1, 1, "", "half"], [163, 2, 1, "", "input_spec"], [163, 2, 1, "", "input_spec_unbatched"], [163, 1, 1, "", "ipu"], [163, 2, 1, "", "is_spec_locked"], [163, 1, 1, "", "load_state_dict"], [163, 1, 1, "", "maybe_reset"], [163, 1, 1, "", "modules"], [163, 1, 1, "", "mtia"], [163, 1, 1, "", "named_buffers"], [163, 1, 1, "", "named_children"], [163, 1, 1, "", "named_modules"], [163, 1, 1, "", "named_parameters"], [163, 2, 1, "", "observation_keys"], [163, 2, 1, "", "observation_spec"], [163, 2, 1, "", "observation_spec_unbatched"], [163, 2, 1, "", "output_spec"], [163, 2, 1, "", "output_spec_unbatched"], [163, 1, 1, "", "parameters"], [163, 1, 1, "", "rand_action"], [163, 1, 1, "", "rand_step"], [163, 1, 1, "", "register_backward_hook"], [163, 1, 1, "", "register_buffer"], [163, 1, 1, "", "register_forward_hook"], [163, 1, 1, "", "register_forward_pre_hook"], [163, 1, 1, "", "register_full_backward_hook"], [163, 1, 1, "", "register_full_backward_pre_hook"], [163, 1, 1, "", "register_gym"], [163, 1, 1, "", "register_load_state_dict_post_hook"], [163, 1, 1, "", "register_load_state_dict_pre_hook"], [163, 1, 1, "", "register_module"], [163, 1, 1, "", "register_parameter"], [163, 1, 1, "", "register_state_dict_post_hook"], [163, 1, 1, "", "register_state_dict_pre_hook"], [163, 1, 1, "", "requires_grad_"], [163, 1, 1, "", "reset"], [163, 2, 1, "", "reset_keys"], [163, 2, 1, "", "reward_key"], [163, 2, 1, "", "reward_keys"], [163, 2, 1, "", "reward_spec"], [163, 2, 1, "", "reward_spec_unbatched"], [163, 1, 1, "", "rollout"], [163, 1, 1, "", "set_extra_state"], [163, 1, 1, "", "set_seed"], [163, 1, 1, "", "set_spec_lock_"], [163, 1, 1, "", "set_submodule"], [163, 2, 1, "", "shape"], [163, 1, 1, "", "share_memory"], [163, 1, 1, "", "shutdown"], [163, 2, 1, "", "specs"], [163, 1, 1, "", "state_dict"], [163, 2, 1, "", "state_keys"], [163, 2, 1, "", "state_spec"], [163, 2, 1, "", "state_spec_unbatched"], [163, 1, 1, "", "step"], [163, 1, 1, "", "step_and_maybe_reset"], [163, 1, 1, "", "step_mdp"], [163, 1, 1, "", "to"], [163, 1, 1, "", "to_empty"], [163, 1, 1, "", "train"], [163, 1, 1, "", "type"], [163, 1, 1, "", "xpu"], [163, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[168, 2, 1, "", "action_key"], [168, 2, 1, "", "action_keys"], [168, 2, 1, "", "action_spec"], [168, 2, 1, "", "action_spec_unbatched"], [168, 1, 1, "", "add_module"], [168, 1, 1, "", "add_truncated_keys"], [168, 1, 1, "", "all_actions"], [168, 1, 1, "", "any_done"], [168, 1, 1, "", "append_transform"], [168, 1, 1, "", "apply"], [168, 1, 1, "", "auto_specs_"], [168, 2, 1, "", "batch_dims"], [168, 2, 1, "", "batch_locked"], [168, 2, 1, "", "batch_size"], [168, 1, 1, "", "bfloat16"], [168, 1, 1, "", "buffers"], [168, 1, 1, "", "cardinality"], [168, 1, 1, "", "check_env_specs"], [168, 1, 1, "", "children"], [168, 1, 1, "", "compile"], [168, 1, 1, "", "cpu"], [168, 1, 1, "", "cuda"], [168, 2, 1, "", "done_key"], [168, 2, 1, "", "done_keys"], [168, 2, 1, "", "done_keys_groups"], [168, 2, 1, "", "done_spec"], [168, 2, 1, "", "done_spec_unbatched"], [168, 1, 1, "", "double"], [168, 1, 1, "", "empty_cache"], [168, 1, 1, "", "eval"], [168, 1, 1, "", "extra_repr"], [168, 1, 1, "", "fake_tensordict"], [168, 1, 1, "", "float"], [168, 1, 1, "", "forward"], [168, 2, 1, "", "full_action_spec"], [168, 2, 1, "", "full_action_spec_unbatched"], [168, 2, 1, "", "full_done_spec"], [168, 2, 1, "", "full_done_spec_unbatched"], [168, 2, 1, "", "full_observation_spec_unbatched"], [168, 2, 1, "", "full_reward_spec"], [168, 2, 1, "", "full_reward_spec_unbatched"], [168, 2, 1, "", "full_state_spec"], [168, 2, 1, "", "full_state_spec_unbatched"], [168, 1, 1, "", "get_buffer"], [168, 1, 1, "", "get_extra_state"], [168, 1, 1, "", "get_parameter"], [168, 1, 1, "", "get_submodule"], [168, 1, 1, "", "half"], [168, 2, 1, "", "input_spec"], [168, 2, 1, "", "input_spec_unbatched"], [168, 1, 1, "", "ipu"], [168, 2, 1, "", "is_spec_locked"], [168, 1, 1, "", "load_state_dict"], [168, 1, 1, "", "maybe_reset"], [168, 1, 1, "", "modules"], [168, 1, 1, "", "mtia"], [168, 1, 1, "", "named_buffers"], [168, 1, 1, "", "named_children"], [168, 1, 1, "", "named_modules"], [168, 1, 1, "", "named_parameters"], [168, 2, 1, "", "observation_keys"], [168, 2, 1, "", "observation_spec"], [168, 2, 1, "", "observation_spec_unbatched"], [168, 2, 1, "", "output_spec"], [168, 2, 1, "", "output_spec_unbatched"], [168, 1, 1, "", "parameters"], [168, 1, 1, "", "rand_action"], [168, 1, 1, "", "rand_step"], [168, 1, 1, "", "register_backward_hook"], [168, 1, 1, "", "register_buffer"], [168, 1, 1, "", "register_forward_hook"], [168, 1, 1, "", "register_forward_pre_hook"], [168, 1, 1, "", "register_full_backward_hook"], [168, 1, 1, "", "register_full_backward_pre_hook"], [168, 1, 1, "", "register_gym"], [168, 1, 1, "", "register_load_state_dict_post_hook"], [168, 1, 1, "", "register_load_state_dict_pre_hook"], [168, 1, 1, "", "register_module"], [168, 1, 1, "", "register_parameter"], [168, 1, 1, "", "register_state_dict_post_hook"], [168, 1, 1, "", "register_state_dict_pre_hook"], [168, 1, 1, "", "requires_grad_"], [168, 1, 1, "", "reset"], [168, 2, 1, "", "reset_keys"], [168, 2, 1, "", "reward_key"], [168, 2, 1, "", "reward_keys"], [168, 2, 1, "", "reward_spec"], [168, 2, 1, "", "reward_spec_unbatched"], [168, 1, 1, "", "rollout"], [168, 1, 1, "", "set_extra_state"], [168, 1, 1, "", "set_seed"], [168, 1, 1, "", "set_spec_lock_"], [168, 1, 1, "", "set_submodule"], [168, 2, 1, "", "shape"], [168, 1, 1, "", "share_memory"], [168, 2, 1, "", "specs"], [168, 1, 1, "", "state_dict"], [168, 2, 1, "", "state_keys"], [168, 2, 1, "", "state_spec"], [168, 2, 1, "", "state_spec_unbatched"], [168, 1, 1, "", "step"], [168, 1, 1, "", "step_and_maybe_reset"], [168, 1, 1, "", "step_mdp"], [168, 1, 1, "", "to"], [168, 1, 1, "", "to_empty"], [168, 1, 1, "", "train"], [168, 1, 1, "", "type"], [168, 1, 1, "", "update_kwargs"], [168, 1, 1, "", "xpu"], [168, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[169, 1, 1, "", "_setup"], [169, 2, 1, "", "action_key"], [169, 2, 1, "", "action_keys"], [169, 2, 1, "", "action_spec"], [169, 2, 1, "", "action_spec_unbatched"], [169, 1, 1, "", "add_module"], [169, 1, 1, "", "add_truncated_keys"], [169, 1, 1, "", "all_actions"], [169, 1, 1, "", "any_done"], [169, 1, 1, "", "append_transform"], [169, 1, 1, "", "apply"], [169, 1, 1, "", "async_reset_recv"], [169, 1, 1, "", "async_reset_send"], [169, 1, 1, "", "async_step_recv"], [169, 1, 1, "", "async_step_send"], [169, 1, 1, "", "auto_specs_"], [169, 2, 1, "", "batch_dims"], [169, 2, 1, "", "batch_locked"], [169, 2, 1, "", "batch_size"], [169, 1, 1, "", "bfloat16"], [169, 1, 1, "", "buffers"], [169, 1, 1, "", "cardinality"], [169, 1, 1, "", "check_env_specs"], [169, 1, 1, "", "children"], [169, 1, 1, "", "compile"], [169, 1, 1, "", "cpu"], [169, 1, 1, "", "cuda"], [169, 2, 1, "", "done_key"], [169, 2, 1, "", "done_keys"], [169, 2, 1, "", "done_keys_groups"], [169, 2, 1, "", "done_spec"], [169, 2, 1, "", "done_spec_unbatched"], [169, 1, 1, "", "double"], [169, 1, 1, "", "empty_cache"], [169, 2, 1, "", "env_batch_sizes"], [169, 1, 1, "", "eval"], [169, 1, 1, "", "extra_repr"], [169, 1, 1, "", "fake_tensordict"], [169, 1, 1, "", "float"], [169, 1, 1, "", "forward"], [169, 2, 1, "", "full_action_spec"], [169, 2, 1, "", "full_action_spec_unbatched"], [169, 2, 1, "", "full_done_spec"], [169, 2, 1, "", "full_done_spec_unbatched"], [169, 2, 1, "", "full_observation_spec_unbatched"], [169, 2, 1, "", "full_reward_spec"], [169, 2, 1, "", "full_reward_spec_unbatched"], [169, 2, 1, "", "full_state_spec"], [169, 2, 1, "", "full_state_spec_unbatched"], [169, 1, 1, "", "get_buffer"], [169, 1, 1, "", "get_extra_state"], [169, 1, 1, "", "get_parameter"], [169, 1, 1, "", "get_submodule"], [169, 1, 1, "", "half"], [169, 2, 1, "", "input_spec"], [169, 2, 1, "", "input_spec_unbatched"], [169, 1, 1, "", "ipu"], [169, 2, 1, "", "is_spec_locked"], [169, 1, 1, "", "load_state_dict"], [169, 1, 1, "", "maybe_reset"], [169, 1, 1, "", "modules"], [169, 1, 1, "", "mtia"], [169, 1, 1, "", "named_buffers"], [169, 1, 1, "", "named_children"], [169, 1, 1, "", "named_modules"], [169, 1, 1, "", "named_parameters"], [169, 2, 1, "", "observation_keys"], [169, 2, 1, "", "observation_spec"], [169, 2, 1, "", "observation_spec_unbatched"], [169, 2, 1, "", "output_spec"], [169, 2, 1, "", "output_spec_unbatched"], [169, 1, 1, "", "parameters"], [169, 1, 1, "", "rand_action"], [169, 1, 1, "", "rand_step"], [169, 1, 1, "", "register_backward_hook"], [169, 1, 1, "", "register_buffer"], [169, 1, 1, "", "register_forward_hook"], [169, 1, 1, "", "register_forward_pre_hook"], [169, 1, 1, "", "register_full_backward_hook"], [169, 1, 1, "", "register_full_backward_pre_hook"], [169, 1, 1, "", "register_gym"], [169, 1, 1, "", "register_load_state_dict_post_hook"], [169, 1, 1, "", "register_load_state_dict_pre_hook"], [169, 1, 1, "", "register_module"], [169, 1, 1, "", "register_parameter"], [169, 1, 1, "", "register_state_dict_post_hook"], [169, 1, 1, "", "register_state_dict_pre_hook"], [169, 1, 1, "", "requires_grad_"], [169, 1, 1, "", "reset"], [169, 2, 1, "", "reset_keys"], [169, 2, 1, "", "reward_key"], [169, 2, 1, "", "reward_keys"], [169, 2, 1, "", "reward_spec"], [169, 2, 1, "", "reward_spec_unbatched"], [169, 1, 1, "", "rollout"], [169, 1, 1, "", "set_extra_state"], [169, 1, 1, "", "set_seed"], [169, 1, 1, "", "set_spec_lock_"], [169, 1, 1, "", "set_submodule"], [169, 2, 1, "", "shape"], [169, 1, 1, "", "share_memory"], [169, 1, 1, "", "shutdown"], [169, 2, 1, "", "specs"], [169, 1, 1, "", "state_dict"], [169, 2, 1, "", "state_keys"], [169, 2, 1, "", "state_spec"], [169, 2, 1, "", "state_spec_unbatched"], [169, 1, 1, "", "step"], [169, 1, 1, "", "step_and_maybe_reset"], [169, 1, 1, "", "step_mdp"], [169, 1, 1, "", "to"], [169, 1, 1, "", "to_empty"], [169, 1, 1, "", "train"], [169, 1, 1, "", "type"], [169, 1, 1, "", "xpu"], [169, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[170, 2, 1, "", "action_key"], [170, 2, 1, "", "action_keys"], [170, 2, 1, "", "action_spec"], [170, 2, 1, "", "action_spec_unbatched"], [170, 1, 1, "", "add_module"], [170, 1, 1, "", "add_truncated_keys"], [170, 1, 1, "", "all_actions"], [170, 1, 1, "", "any_done"], [170, 1, 1, "", "append_transform"], [170, 1, 1, "", "apply"], [170, 1, 1, "", "auto_specs_"], [170, 2, 1, "", "batch_dims"], [170, 2, 1, "", "batch_size"], [170, 1, 1, "", "bfloat16"], [170, 1, 1, "", "buffers"], [170, 1, 1, "", "cardinality"], [170, 1, 1, "", "check_env_specs"], [170, 1, 1, "", "children"], [170, 1, 1, "", "compile"], [170, 1, 1, "", "cpu"], [170, 1, 1, "", "cuda"], [170, 2, 1, "", "done_key"], [170, 2, 1, "", "done_keys"], [170, 2, 1, "", "done_keys_groups"], [170, 2, 1, "", "done_spec"], [170, 2, 1, "", "done_spec_unbatched"], [170, 1, 1, "", "double"], [170, 1, 1, "", "empty_cache"], [170, 1, 1, "", "eval"], [170, 1, 1, "", "extra_repr"], [170, 1, 1, "", "fake_tensordict"], [170, 1, 1, "", "float"], [170, 1, 1, "", "forward"], [170, 2, 1, "", "full_action_spec"], [170, 2, 1, "", "full_action_spec_unbatched"], [170, 2, 1, "", "full_done_spec"], [170, 2, 1, "", "full_done_spec_unbatched"], [170, 2, 1, "", "full_observation_spec_unbatched"], [170, 2, 1, "", "full_reward_spec"], [170, 2, 1, "", "full_reward_spec_unbatched"], [170, 2, 1, "", "full_state_spec"], [170, 2, 1, "", "full_state_spec_unbatched"], [170, 1, 1, "", "get_buffer"], [170, 1, 1, "", "get_extra_state"], [170, 1, 1, "", "get_parameter"], [170, 1, 1, "", "get_submodule"], [170, 1, 1, "", "half"], [170, 2, 1, "", "input_spec"], [170, 2, 1, "", "input_spec_unbatched"], [170, 1, 1, "", "ipu"], [170, 2, 1, "", "is_spec_locked"], [170, 1, 1, "", "load_state_dict"], [170, 1, 1, "", "maybe_reset"], [170, 1, 1, "", "modules"], [170, 1, 1, "", "mtia"], [170, 1, 1, "", "named_buffers"], [170, 1, 1, "", "named_children"], [170, 1, 1, "", "named_modules"], [170, 1, 1, "", "named_parameters"], [170, 2, 1, "", "observation_keys"], [170, 2, 1, "", "observation_spec"], [170, 2, 1, "", "observation_spec_unbatched"], [170, 2, 1, "", "output_spec"], [170, 2, 1, "", "output_spec_unbatched"], [170, 1, 1, "", "parameters"], [170, 1, 1, "", "rand_action"], [170, 1, 1, "", "rand_step"], [170, 1, 1, "", "register_backward_hook"], [170, 1, 1, "", "register_buffer"], [170, 1, 1, "", "register_forward_hook"], [170, 1, 1, "", "register_forward_pre_hook"], [170, 1, 1, "", "register_full_backward_hook"], [170, 1, 1, "", "register_full_backward_pre_hook"], [170, 1, 1, "", "register_gym"], [170, 1, 1, "", "register_load_state_dict_post_hook"], [170, 1, 1, "", "register_load_state_dict_pre_hook"], [170, 1, 1, "", "register_module"], [170, 1, 1, "", "register_parameter"], [170, 1, 1, "", "register_state_dict_post_hook"], [170, 1, 1, "", "register_state_dict_pre_hook"], [170, 1, 1, "", "requires_grad_"], [170, 1, 1, "", "reset"], [170, 2, 1, "", "reset_keys"], [170, 2, 1, "", "reward_key"], [170, 2, 1, "", "reward_keys"], [170, 2, 1, "", "reward_spec"], [170, 2, 1, "", "reward_spec_unbatched"], [170, 1, 1, "", "rollout"], [170, 1, 1, "", "set_extra_state"], [170, 1, 1, "", "set_seed"], [170, 1, 1, "", "set_spec_lock_"], [170, 1, 1, "", "set_submodule"], [170, 2, 1, "", "shape"], [170, 1, 1, "", "share_memory"], [170, 2, 1, "", "specs"], [170, 1, 1, "", "state_dict"], [170, 2, 1, "", "state_keys"], [170, 2, 1, "", "state_spec"], [170, 2, 1, "", "state_spec_unbatched"], [170, 1, 1, "", "step"], [170, 1, 1, "", "step_and_maybe_reset"], [170, 1, 1, "", "step_mdp"], [170, 1, 1, "", "to"], [170, 1, 1, "", "to_empty"], [170, 1, 1, "", "train"], [170, 1, 1, "", "type"], [170, 1, 1, "", "xpu"], [170, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[180, 0, 1, "", "ChatEnv"], [181, 0, 1, "", "DatasetChatEnv"], [182, 0, 1, "", "GSM8KEnv"], [183, 0, 1, "", "GSM8KPrepareQuestion"], [184, 0, 1, "", "GSM8KRewardParser"], [185, 0, 1, "", "IFEvalEnv"], [186, 0, 1, "", "IFEvalScoreData"], [187, 0, 1, "", "IfEvalScorer"], [188, 0, 1, "", "LLMEnv"], [189, 0, 1, "", "LLMHashingEnv"], [190, 0, 1, "", "MLGymWrapper"], [191, 0, 1, "", "make_gsm8k_env"], [192, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[180, 2, 1, "", "action_key"], [180, 2, 1, "", "action_keys"], [180, 2, 1, "", "action_spec"], [180, 2, 1, "", "action_spec_unbatched"], [180, 1, 1, "", "add_module"], [180, 1, 1, "", "add_truncated_keys"], [180, 1, 1, "", "all_actions"], [180, 1, 1, "", "any_done"], [180, 1, 1, "", "append_transform"], [180, 1, 1, "", "apply"], [180, 1, 1, "", "auto_specs_"], [180, 2, 1, "", "batch_dims"], [180, 2, 1, "", "batch_locked"], [180, 2, 1, "", "batch_size"], [180, 1, 1, "", "bfloat16"], [180, 1, 1, "", "buffers"], [180, 1, 1, "", "cardinality"], [180, 1, 1, "", "check_env_specs"], [180, 1, 1, "", "children"], [180, 1, 1, "", "compile"], [180, 1, 1, "", "cpu"], [180, 1, 1, "", "cuda"], [180, 2, 1, "", "done_key"], [180, 2, 1, "", "done_keys"], [180, 2, 1, "", "done_keys_groups"], [180, 2, 1, "", "done_spec"], [180, 2, 1, "", "done_spec_unbatched"], [180, 1, 1, "", "double"], [180, 1, 1, "", "empty_cache"], [180, 1, 1, "", "eval"], [180, 1, 1, "", "extra_repr"], [180, 1, 1, "", "fake_tensordict"], [180, 1, 1, "", "float"], [180, 1, 1, "", "forward"], [180, 2, 1, "", "full_action_spec"], [180, 2, 1, "", "full_action_spec_unbatched"], [180, 2, 1, "", "full_done_spec"], [180, 2, 1, "", "full_done_spec_unbatched"], [180, 2, 1, "", "full_observation_spec_unbatched"], [180, 2, 1, "", "full_reward_spec"], [180, 2, 1, "", "full_reward_spec_unbatched"], [180, 2, 1, "", "full_state_spec"], [180, 2, 1, "", "full_state_spec_unbatched"], [180, 1, 1, "", "get_buffer"], [180, 1, 1, "", "get_extra_state"], [180, 1, 1, "", "get_parameter"], [180, 1, 1, "", "get_submodule"], [180, 1, 1, "", "half"], [180, 2, 1, "", "input_spec"], [180, 2, 1, "", "input_spec_unbatched"], [180, 1, 1, "", "ipu"], [180, 2, 1, "", "is_spec_locked"], [180, 1, 1, "", "load_state_dict"], [180, 1, 1, "", "maybe_reset"], [180, 1, 1, "", "modules"], [180, 1, 1, "", "mtia"], [180, 1, 1, "", "named_buffers"], [180, 1, 1, "", "named_children"], [180, 1, 1, "", "named_modules"], [180, 1, 1, "", "named_parameters"], [180, 2, 1, "", "observation_keys"], [180, 2, 1, "", "observation_spec"], [180, 2, 1, "", "observation_spec_unbatched"], [180, 2, 1, "", "output_spec"], [180, 2, 1, "", "output_spec_unbatched"], [180, 1, 1, "", "parameters"], [180, 1, 1, "", "rand_action"], [180, 1, 1, "", "rand_step"], [180, 1, 1, "", "register_backward_hook"], [180, 1, 1, "", "register_buffer"], [180, 1, 1, "", "register_forward_hook"], [180, 1, 1, "", "register_forward_pre_hook"], [180, 1, 1, "", "register_full_backward_hook"], [180, 1, 1, "", "register_full_backward_pre_hook"], [180, 1, 1, "", "register_gym"], [180, 1, 1, "", "register_load_state_dict_post_hook"], [180, 1, 1, "", "register_load_state_dict_pre_hook"], [180, 1, 1, "", "register_module"], [180, 1, 1, "", "register_parameter"], [180, 1, 1, "", "register_state_dict_post_hook"], [180, 1, 1, "", "register_state_dict_pre_hook"], [180, 1, 1, "", "requires_grad_"], [180, 1, 1, "id0", "reset"], [180, 2, 1, "", "reset_keys"], [180, 2, 1, "", "reward_key"], [180, 2, 1, "", "reward_keys"], [180, 2, 1, "", "reward_spec"], [180, 2, 1, "", "reward_spec_unbatched"], [180, 1, 1, "", "rollout"], [180, 1, 1, "", "set_extra_state"], [180, 1, 1, "", "set_seed"], [180, 1, 1, "", "set_spec_lock_"], [180, 1, 1, "", "set_submodule"], [180, 2, 1, "", "shape"], [180, 1, 1, "", "share_memory"], [180, 2, 1, "", "specs"], [180, 1, 1, "", "state_dict"], [180, 2, 1, "", "state_keys"], [180, 2, 1, "", "state_spec"], [180, 2, 1, "", "state_spec_unbatched"], [180, 1, 1, "id1", "step"], [180, 1, 1, "", "step_and_maybe_reset"], [180, 1, 1, "", "step_mdp"], [180, 1, 1, "", "to"], [180, 1, 1, "", "to_empty"], [180, 1, 1, "", "train"], [180, 1, 1, "", "type"], [180, 1, 1, "", "xpu"], [180, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[181, 2, 1, "", "action_key"], [181, 2, 1, "", "action_keys"], [181, 2, 1, "", "action_spec"], [181, 2, 1, "", "action_spec_unbatched"], [181, 1, 1, "", "add_module"], [181, 1, 1, "", "add_truncated_keys"], [181, 1, 1, "", "all_actions"], [181, 1, 1, "", "any_done"], [181, 1, 1, "", "append_transform"], [181, 1, 1, "", "apply"], [181, 1, 1, "", "auto_specs_"], [181, 2, 1, "", "batch_dims"], [181, 2, 1, "", "batch_locked"], [181, 2, 1, "", "batch_size"], [181, 1, 1, "", "bfloat16"], [181, 1, 1, "", "buffers"], [181, 1, 1, "", "cardinality"], [181, 1, 1, "", "check_env_specs"], [181, 1, 1, "", "children"], [181, 1, 1, "", "compile"], [181, 1, 1, "", "cpu"], [181, 1, 1, "", "cuda"], [181, 2, 1, "", "done_key"], [181, 2, 1, "", "done_keys"], [181, 2, 1, "", "done_keys_groups"], [181, 2, 1, "", "done_spec"], [181, 2, 1, "", "done_spec_unbatched"], [181, 1, 1, "", "double"], [181, 1, 1, "", "empty_cache"], [181, 1, 1, "", "eval"], [181, 1, 1, "", "extra_repr"], [181, 1, 1, "", "fake_tensordict"], [181, 1, 1, "", "float"], [181, 1, 1, "", "forward"], [181, 2, 1, "", "full_action_spec"], [181, 2, 1, "", "full_action_spec_unbatched"], [181, 2, 1, "", "full_done_spec"], [181, 2, 1, "", "full_done_spec_unbatched"], [181, 2, 1, "", "full_observation_spec_unbatched"], [181, 2, 1, "", "full_reward_spec"], [181, 2, 1, "", "full_reward_spec_unbatched"], [181, 2, 1, "", "full_state_spec"], [181, 2, 1, "", "full_state_spec_unbatched"], [181, 1, 1, "", "get_buffer"], [181, 1, 1, "", "get_extra_state"], [181, 1, 1, "", "get_parameter"], [181, 1, 1, "", "get_submodule"], [181, 1, 1, "", "half"], [181, 2, 1, "", "input_spec"], [181, 2, 1, "", "input_spec_unbatched"], [181, 1, 1, "", "insert_transform"], [181, 1, 1, "", "ipu"], [181, 2, 1, "", "is_spec_locked"], [181, 1, 1, "", "load_state_dict"], [181, 1, 1, "", "maybe_reset"], [181, 1, 1, "", "modules"], [181, 1, 1, "", "mtia"], [181, 1, 1, "", "named_buffers"], [181, 1, 1, "", "named_children"], [181, 1, 1, "", "named_modules"], [181, 1, 1, "", "named_parameters"], [181, 2, 1, "", "observation_keys"], [181, 2, 1, "", "observation_spec"], [181, 2, 1, "", "observation_spec_unbatched"], [181, 2, 1, "", "output_spec"], [181, 2, 1, "", "output_spec_unbatched"], [181, 1, 1, "", "parameters"], [181, 1, 1, "", "rand_action"], [181, 1, 1, "", "rand_step"], [181, 1, 1, "", "register_backward_hook"], [181, 1, 1, "", "register_buffer"], [181, 1, 1, "", "register_forward_hook"], [181, 1, 1, "", "register_forward_pre_hook"], [181, 1, 1, "", "register_full_backward_hook"], [181, 1, 1, "", "register_full_backward_pre_hook"], [181, 1, 1, "", "register_gym"], [181, 1, 1, "", "register_load_state_dict_post_hook"], [181, 1, 1, "", "register_load_state_dict_pre_hook"], [181, 1, 1, "", "register_module"], [181, 1, 1, "", "register_parameter"], [181, 1, 1, "", "register_state_dict_post_hook"], [181, 1, 1, "", "register_state_dict_pre_hook"], [181, 1, 1, "", "requires_grad_"], [181, 1, 1, "", "reset"], [181, 1, 1, "", "reset_dataloader"], [181, 2, 1, "", "reset_keys"], [181, 2, 1, "", "reward_key"], [181, 2, 1, "", "reward_keys"], [181, 2, 1, "", "reward_spec"], [181, 2, 1, "", "reward_spec_unbatched"], [181, 1, 1, "", "rollout"], [181, 1, 1, "", "set_extra_state"], [181, 1, 1, "", "set_missing_tolerance"], [181, 1, 1, "", "set_seed"], [181, 1, 1, "", "set_spec_lock_"], [181, 1, 1, "", "set_submodule"], [181, 2, 1, "", "shape"], [181, 1, 1, "", "share_memory"], [181, 2, 1, "", "specs"], [181, 1, 1, "", "state_dict"], [181, 2, 1, "", "state_keys"], [181, 2, 1, "", "state_spec"], [181, 2, 1, "", "state_spec_unbatched"], [181, 1, 1, "", "step"], [181, 1, 1, "", "step_and_maybe_reset"], [181, 1, 1, "", "step_mdp"], [181, 1, 1, "", "to"], [181, 1, 1, "", "to_empty"], [181, 1, 1, "", "train"], [181, 1, 1, "", "type"], [181, 1, 1, "", "xpu"], [181, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[182, 2, 1, "", "action_key"], [182, 2, 1, "", "action_keys"], [182, 2, 1, "", "action_spec"], [182, 2, 1, "", "action_spec_unbatched"], [182, 1, 1, "", "add_module"], [182, 1, 1, "", "add_truncated_keys"], [182, 1, 1, "", "all_actions"], [182, 1, 1, "", "any_done"], [182, 1, 1, "", "append_transform"], [182, 1, 1, "", "apply"], [182, 1, 1, "", "auto_specs_"], [182, 2, 1, "", "batch_dims"], [182, 2, 1, "", "batch_locked"], [182, 2, 1, "", "batch_size"], [182, 1, 1, "", "bfloat16"], [182, 1, 1, "", "buffers"], [182, 1, 1, "", "cardinality"], [182, 1, 1, "", "check_env_specs"], [182, 1, 1, "", "children"], [182, 1, 1, "", "compile"], [182, 1, 1, "", "cpu"], [182, 1, 1, "", "cuda"], [182, 2, 1, "", "done_key"], [182, 2, 1, "", "done_keys"], [182, 2, 1, "", "done_keys_groups"], [182, 2, 1, "", "done_spec"], [182, 2, 1, "", "done_spec_unbatched"], [182, 1, 1, "", "double"], [182, 1, 1, "", "empty_cache"], [182, 1, 1, "", "eval"], [182, 1, 1, "", "extra_repr"], [182, 1, 1, "", "fake_tensordict"], [182, 1, 1, "", "float"], [182, 1, 1, "", "forward"], [182, 2, 1, "", "full_action_spec"], [182, 2, 1, "", "full_action_spec_unbatched"], [182, 2, 1, "", "full_done_spec"], [182, 2, 1, "", "full_done_spec_unbatched"], [182, 2, 1, "", "full_observation_spec_unbatched"], [182, 2, 1, "", "full_reward_spec"], [182, 2, 1, "", "full_reward_spec_unbatched"], [182, 2, 1, "", "full_state_spec"], [182, 2, 1, "", "full_state_spec_unbatched"], [182, 1, 1, "", "get_buffer"], [182, 1, 1, "", "get_extra_state"], [182, 1, 1, "", "get_parameter"], [182, 1, 1, "", "get_submodule"], [182, 1, 1, "", "half"], [182, 2, 1, "", "input_spec"], [182, 2, 1, "", "input_spec_unbatched"], [182, 1, 1, "", "insert_transform"], [182, 1, 1, "", "ipu"], [182, 2, 1, "", "is_spec_locked"], [182, 1, 1, "", "load_state_dict"], [182, 1, 1, "", "maybe_reset"], [182, 1, 1, "", "modules"], [182, 1, 1, "", "mtia"], [182, 1, 1, "", "named_buffers"], [182, 1, 1, "", "named_children"], [182, 1, 1, "", "named_modules"], [182, 1, 1, "", "named_parameters"], [182, 2, 1, "", "observation_keys"], [182, 2, 1, "", "observation_spec"], [182, 2, 1, "", "observation_spec_unbatched"], [182, 2, 1, "", "output_spec"], [182, 2, 1, "", "output_spec_unbatched"], [182, 1, 1, "", "parameters"], [182, 1, 1, "", "rand_action"], [182, 1, 1, "", "rand_step"], [182, 1, 1, "", "register_backward_hook"], [182, 1, 1, "", "register_buffer"], [182, 1, 1, "", "register_forward_hook"], [182, 1, 1, "", "register_forward_pre_hook"], [182, 1, 1, "", "register_full_backward_hook"], [182, 1, 1, "", "register_full_backward_pre_hook"], [182, 1, 1, "", "register_gym"], [182, 1, 1, "", "register_load_state_dict_post_hook"], [182, 1, 1, "", "register_load_state_dict_pre_hook"], [182, 1, 1, "", "register_module"], [182, 1, 1, "", "register_parameter"], [182, 1, 1, "", "register_state_dict_post_hook"], [182, 1, 1, "", "register_state_dict_pre_hook"], [182, 1, 1, "", "requires_grad_"], [182, 1, 1, "", "reset"], [182, 1, 1, "", "reset_dataloader"], [182, 2, 1, "", "reset_keys"], [182, 2, 1, "", "reward_key"], [182, 2, 1, "", "reward_keys"], [182, 2, 1, "", "reward_spec"], [182, 2, 1, "", "reward_spec_unbatched"], [182, 1, 1, "", "rollout"], [182, 1, 1, "", "set_extra_state"], [182, 1, 1, "", "set_missing_tolerance"], [182, 1, 1, "", "set_seed"], [182, 1, 1, "", "set_spec_lock_"], [182, 1, 1, "", "set_submodule"], [182, 2, 1, "", "shape"], [182, 1, 1, "", "share_memory"], [182, 2, 1, "", "specs"], [182, 1, 1, "", "state_dict"], [182, 2, 1, "", "state_keys"], [182, 2, 1, "", "state_spec"], [182, 2, 1, "", "state_spec_unbatched"], [182, 1, 1, "", "step"], [182, 1, 1, "", "step_and_maybe_reset"], [182, 1, 1, "", "step_mdp"], [182, 1, 1, "", "to"], [182, 1, 1, "", "to_empty"], [182, 1, 1, "", "train"], [182, 1, 1, "", "type"], [182, 1, 1, "", "xpu"], [182, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[183, 1, 1, "", "add_module"], [183, 1, 1, "", "apply"], [183, 1, 1, "", "bfloat16"], [183, 1, 1, "", "buffers"], [183, 1, 1, "", "children"], [183, 1, 1, "", "close"], [183, 1, 1, "", "compile"], [183, 2, 1, "", "container"], [183, 1, 1, "", "cpu"], [183, 1, 1, "", "cuda"], [183, 1, 1, "", "double"], [183, 1, 1, "", "eval"], [183, 1, 1, "", "extra_repr"], [183, 1, 1, "", "float"], [183, 1, 1, "", "forward"], [183, 1, 1, "", "get_buffer"], [183, 1, 1, "", "get_extra_state"], [183, 1, 1, "", "get_parameter"], [183, 1, 1, "", "get_submodule"], [183, 1, 1, "", "half"], [183, 1, 1, "", "init"], [183, 1, 1, "", "inv"], [183, 1, 1, "", "ipu"], [183, 1, 1, "", "load_state_dict"], [183, 1, 1, "", "modules"], [183, 1, 1, "", "mtia"], [183, 1, 1, "", "named_buffers"], [183, 1, 1, "", "named_children"], [183, 1, 1, "", "named_modules"], [183, 1, 1, "", "named_parameters"], [183, 1, 1, "", "parameters"], [183, 2, 1, "", "parent"], [183, 1, 1, "", "register_backward_hook"], [183, 1, 1, "", "register_buffer"], [183, 1, 1, "", "register_forward_hook"], [183, 1, 1, "", "register_forward_pre_hook"], [183, 1, 1, "", "register_full_backward_hook"], [183, 1, 1, "", "register_full_backward_pre_hook"], [183, 1, 1, "", "register_load_state_dict_post_hook"], [183, 1, 1, "", "register_load_state_dict_pre_hook"], [183, 1, 1, "", "register_module"], [183, 1, 1, "", "register_parameter"], [183, 1, 1, "", "register_state_dict_post_hook"], [183, 1, 1, "", "register_state_dict_pre_hook"], [183, 1, 1, "", "requires_grad_"], [183, 1, 1, "", "set_extra_state"], [183, 1, 1, "", "set_submodule"], [183, 1, 1, "", "share_memory"], [183, 1, 1, "", "state_dict"], [183, 1, 1, "", "to"], [183, 1, 1, "", "to_empty"], [183, 1, 1, "", "train"], [183, 1, 1, "", "transform_action_spec"], [183, 1, 1, "", "transform_done_spec"], [183, 1, 1, "", "transform_env_batch_size"], [183, 1, 1, "", "transform_env_device"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"], [183, 1, 1, "", "transform_reward_spec"], [183, 1, 1, "", "transform_state_spec"], [183, 1, 1, "", "type"], [183, 1, 1, "", "xpu"], [183, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[184, 1, 1, "", "add_module"], [184, 1, 1, "", "apply"], [184, 1, 1, "", "bfloat16"], [184, 1, 1, "", "buffers"], [184, 1, 1, "", "children"], [184, 1, 1, "", "close"], [184, 1, 1, "", "compile"], [184, 2, 1, "", "container"], [184, 1, 1, "", "cpu"], [184, 1, 1, "", "cuda"], [184, 1, 1, "", "double"], [184, 1, 1, "", "eval"], [184, 1, 1, "", "extra_repr"], [184, 1, 1, "", "extract_tags"], [184, 1, 1, "", "float"], [184, 1, 1, "", "forward"], [184, 1, 1, "", "get_buffer"], [184, 1, 1, "", "get_extra_state"], [184, 1, 1, "", "get_parameter"], [184, 1, 1, "", "get_submodule"], [184, 1, 1, "", "half"], [184, 1, 1, "", "init"], [184, 1, 1, "", "inv"], [184, 1, 1, "", "ipu"], [184, 1, 1, "", "load_state_dict"], [184, 1, 1, "", "modules"], [184, 1, 1, "", "mtia"], [184, 1, 1, "", "named_buffers"], [184, 1, 1, "", "named_children"], [184, 1, 1, "", "named_modules"], [184, 1, 1, "", "named_parameters"], [184, 1, 1, "", "parameters"], [184, 2, 1, "", "parent"], [184, 1, 1, "", "register_backward_hook"], [184, 1, 1, "", "register_buffer"], [184, 1, 1, "", "register_forward_hook"], [184, 1, 1, "", "register_forward_pre_hook"], [184, 1, 1, "", "register_full_backward_hook"], [184, 1, 1, "", "register_full_backward_pre_hook"], [184, 1, 1, "", "register_load_state_dict_post_hook"], [184, 1, 1, "", "register_load_state_dict_pre_hook"], [184, 1, 1, "", "register_module"], [184, 1, 1, "", "register_parameter"], [184, 1, 1, "", "register_state_dict_post_hook"], [184, 1, 1, "", "register_state_dict_pre_hook"], [184, 1, 1, "", "requires_grad_"], [184, 1, 1, "", "set_extra_state"], [184, 1, 1, "", "set_submodule"], [184, 1, 1, "", "share_memory"], [184, 1, 1, "", "state_dict"], [184, 1, 1, "", "to"], [184, 1, 1, "", "to_empty"], [184, 1, 1, "", "train"], [184, 1, 1, "", "transform_action_spec"], [184, 1, 1, "", "transform_done_spec"], [184, 1, 1, "", "transform_env_batch_size"], [184, 1, 1, "", "transform_env_device"], [184, 1, 1, "", "transform_input_spec"], [184, 1, 1, "", "transform_observation_spec"], [184, 1, 1, "", "transform_output_spec"], [184, 1, 1, "", "transform_reward_spec"], [184, 1, 1, "", "transform_state_spec"], [184, 1, 1, "", "type"], [184, 1, 1, "", "xpu"], [184, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[185, 2, 1, "", "action_key"], [185, 2, 1, "", "action_keys"], [185, 2, 1, "", "action_spec"], [185, 2, 1, "", "action_spec_unbatched"], [185, 1, 1, "", "add_module"], [185, 1, 1, "", "add_truncated_keys"], [185, 1, 1, "", "all_actions"], [185, 1, 1, "", "any_done"], [185, 1, 1, "", "append_transform"], [185, 1, 1, "", "apply"], [185, 1, 1, "", "auto_specs_"], [185, 2, 1, "", "batch_dims"], [185, 2, 1, "", "batch_locked"], [185, 2, 1, "", "batch_size"], [185, 1, 1, "", "bfloat16"], [185, 1, 1, "", "buffers"], [185, 1, 1, "", "cardinality"], [185, 1, 1, "", "check_env_specs"], [185, 1, 1, "", "children"], [185, 1, 1, "", "compile"], [185, 1, 1, "", "cpu"], [185, 1, 1, "", "cuda"], [185, 2, 1, "", "done_key"], [185, 2, 1, "", "done_keys"], [185, 2, 1, "", "done_keys_groups"], [185, 2, 1, "", "done_spec"], [185, 2, 1, "", "done_spec_unbatched"], [185, 1, 1, "", "double"], [185, 1, 1, "", "empty_cache"], [185, 1, 1, "", "eval"], [185, 1, 1, "", "extra_repr"], [185, 1, 1, "", "fake_tensordict"], [185, 1, 1, "", "float"], [185, 1, 1, "", "forward"], [185, 2, 1, "", "full_action_spec"], [185, 2, 1, "", "full_action_spec_unbatched"], [185, 2, 1, "", "full_done_spec"], [185, 2, 1, "", "full_done_spec_unbatched"], [185, 2, 1, "", "full_observation_spec_unbatched"], [185, 2, 1, "", "full_reward_spec"], [185, 2, 1, "", "full_reward_spec_unbatched"], [185, 2, 1, "", "full_state_spec"], [185, 2, 1, "", "full_state_spec_unbatched"], [185, 1, 1, "", "get_buffer"], [185, 1, 1, "", "get_extra_state"], [185, 1, 1, "", "get_parameter"], [185, 1, 1, "", "get_submodule"], [185, 1, 1, "", "half"], [185, 2, 1, "", "input_spec"], [185, 2, 1, "", "input_spec_unbatched"], [185, 1, 1, "", "insert_transform"], [185, 1, 1, "", "ipu"], [185, 2, 1, "", "is_spec_locked"], [185, 1, 1, "", "load_state_dict"], [185, 1, 1, "", "maybe_reset"], [185, 1, 1, "", "modules"], [185, 1, 1, "", "mtia"], [185, 1, 1, "", "named_buffers"], [185, 1, 1, "", "named_children"], [185, 1, 1, "", "named_modules"], [185, 1, 1, "", "named_parameters"], [185, 2, 1, "", "observation_keys"], [185, 2, 1, "", "observation_spec"], [185, 2, 1, "", "observation_spec_unbatched"], [185, 2, 1, "", "output_spec"], [185, 2, 1, "", "output_spec_unbatched"], [185, 1, 1, "", "parameters"], [185, 1, 1, "", "rand_action"], [185, 1, 1, "", "rand_step"], [185, 1, 1, "", "register_backward_hook"], [185, 1, 1, "", "register_buffer"], [185, 1, 1, "", "register_forward_hook"], [185, 1, 1, "", "register_forward_pre_hook"], [185, 1, 1, "", "register_full_backward_hook"], [185, 1, 1, "", "register_full_backward_pre_hook"], [185, 1, 1, "", "register_gym"], [185, 1, 1, "", "register_load_state_dict_post_hook"], [185, 1, 1, "", "register_load_state_dict_pre_hook"], [185, 1, 1, "", "register_module"], [185, 1, 1, "", "register_parameter"], [185, 1, 1, "", "register_state_dict_post_hook"], [185, 1, 1, "", "register_state_dict_pre_hook"], [185, 1, 1, "", "requires_grad_"], [185, 1, 1, "", "reset"], [185, 1, 1, "", "reset_dataloader"], [185, 2, 1, "", "reset_keys"], [185, 2, 1, "", "reward_key"], [185, 2, 1, "", "reward_keys"], [185, 2, 1, "", "reward_spec"], [185, 2, 1, "", "reward_spec_unbatched"], [185, 1, 1, "", "rollout"], [185, 1, 1, "", "set_extra_state"], [185, 1, 1, "", "set_missing_tolerance"], [185, 1, 1, "", "set_seed"], [185, 1, 1, "", "set_spec_lock_"], [185, 1, 1, "", "set_submodule"], [185, 2, 1, "", "shape"], [185, 1, 1, "", "share_memory"], [185, 2, 1, "", "specs"], [185, 1, 1, "", "state_dict"], [185, 2, 1, "", "state_keys"], [185, 2, 1, "", "state_spec"], [185, 2, 1, "", "state_spec_unbatched"], [185, 1, 1, "", "step"], [185, 1, 1, "", "step_and_maybe_reset"], [185, 1, 1, "", "step_mdp"], [185, 1, 1, "", "to"], [185, 1, 1, "", "to_empty"], [185, 1, 1, "", "train"], [185, 1, 1, "", "type"], [185, 1, 1, "", "xpu"], [185, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[186, 2, 1, "", "device"], [186, 1, 1, "", "dumps"], [186, 1, 1, "", "fields"], [186, 1, 1, "", "from_tensordict"], [186, 1, 1, "", "get"], [186, 1, 1, "", "load"], [186, 1, 1, "", "load_"], [186, 1, 1, "", "load_memmap"], [186, 1, 1, "", "load_state_dict"], [186, 1, 1, "", "memmap"], [186, 1, 1, "", "memmap_"], [186, 1, 1, "", "memmap_like"], [186, 1, 1, "", "memmap_refresh_"], [186, 1, 1, "", "save"], [186, 1, 1, "", "set"], [186, 1, 1, "", "state_dict"], [186, 1, 1, "", "to_tensordict"], [186, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[187, 1, 1, "", "add_module"], [187, 1, 1, "", "apply"], [187, 1, 1, "", "bfloat16"], [187, 1, 1, "", "buffers"], [187, 1, 1, "", "children"], [187, 1, 1, "", "close"], [187, 1, 1, "", "compile"], [187, 2, 1, "", "container"], [187, 1, 1, "", "cpu"], [187, 1, 1, "", "cuda"], [187, 1, 1, "", "default_reward_aggregator"], [187, 1, 1, "", "double"], [187, 1, 1, "", "eval"], [187, 1, 1, "", "extra_repr"], [187, 1, 1, "", "float"], [187, 1, 1, "", "forward"], [187, 1, 1, "", "get_buffer"], [187, 1, 1, "", "get_extra_state"], [187, 1, 1, "", "get_parameter"], [187, 1, 1, "", "get_submodule"], [187, 1, 1, "", "half"], [187, 1, 1, "", "init"], [187, 1, 1, "", "inv"], [187, 1, 1, "", "ipu"], [187, 1, 1, "", "load_state_dict"], [187, 1, 1, "", "modules"], [187, 1, 1, "", "mtia"], [187, 1, 1, "", "named_buffers"], [187, 1, 1, "", "named_children"], [187, 1, 1, "", "named_modules"], [187, 1, 1, "", "named_parameters"], [187, 1, 1, "", "parameters"], [187, 2, 1, "", "parent"], [187, 1, 1, "", "register_backward_hook"], [187, 1, 1, "", "register_buffer"], [187, 1, 1, "", "register_forward_hook"], [187, 1, 1, "", "register_forward_pre_hook"], [187, 1, 1, "", "register_full_backward_hook"], [187, 1, 1, "", "register_full_backward_pre_hook"], [187, 1, 1, "", "register_load_state_dict_post_hook"], [187, 1, 1, "", "register_load_state_dict_pre_hook"], [187, 1, 1, "", "register_module"], [187, 1, 1, "", "register_parameter"], [187, 1, 1, "", "register_state_dict_post_hook"], [187, 1, 1, "", "register_state_dict_pre_hook"], [187, 1, 1, "", "requires_grad_"], [187, 1, 1, "", "set_extra_state"], [187, 1, 1, "", "set_submodule"], [187, 1, 1, "", "share_memory"], [187, 1, 1, "", "state_dict"], [187, 1, 1, "", "to"], [187, 1, 1, "", "to_empty"], [187, 1, 1, "", "train"], [187, 1, 1, "", "transform_action_spec"], [187, 1, 1, "", "transform_done_spec"], [187, 1, 1, "", "transform_env_batch_size"], [187, 1, 1, "", "transform_env_device"], [187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_output_spec"], [187, 1, 1, "", "transform_reward_spec"], [187, 1, 1, "", "transform_state_spec"], [187, 1, 1, "", "type"], [187, 1, 1, "", "xpu"], [187, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[188, 2, 1, "", "action_key"], [188, 2, 1, "", "action_keys"], [188, 2, 1, "", "action_spec"], [188, 2, 1, "", "action_spec_unbatched"], [188, 1, 1, "", "add_module"], [188, 1, 1, "", "add_truncated_keys"], [188, 1, 1, "", "all_actions"], [188, 1, 1, "", "any_done"], [188, 1, 1, "", "append_transform"], [188, 1, 1, "", "apply"], [188, 1, 1, "", "auto_specs_"], [188, 2, 1, "", "batch_dims"], [188, 2, 1, "", "batch_locked"], [188, 2, 1, "", "batch_size"], [188, 1, 1, "", "bfloat16"], [188, 1, 1, "", "buffers"], [188, 1, 1, "", "cardinality"], [188, 1, 1, "", "check_env_specs"], [188, 1, 1, "", "children"], [188, 1, 1, "", "compile"], [188, 1, 1, "", "cpu"], [188, 1, 1, "", "cuda"], [188, 2, 1, "", "done_key"], [188, 2, 1, "", "done_keys"], [188, 2, 1, "", "done_keys_groups"], [188, 2, 1, "", "done_spec"], [188, 2, 1, "", "done_spec_unbatched"], [188, 1, 1, "", "double"], [188, 1, 1, "", "empty_cache"], [188, 1, 1, "", "eval"], [188, 1, 1, "", "extra_repr"], [188, 1, 1, "", "fake_tensordict"], [188, 1, 1, "", "float"], [188, 1, 1, "", "forward"], [188, 1, 1, "id0", "from_dataloader"], [188, 2, 1, "", "full_action_spec"], [188, 2, 1, "", "full_action_spec_unbatched"], [188, 2, 1, "", "full_done_spec"], [188, 2, 1, "", "full_done_spec_unbatched"], [188, 2, 1, "", "full_observation_spec_unbatched"], [188, 2, 1, "", "full_reward_spec"], [188, 2, 1, "", "full_reward_spec_unbatched"], [188, 2, 1, "", "full_state_spec"], [188, 2, 1, "", "full_state_spec_unbatched"], [188, 1, 1, "", "get_buffer"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "get_parameter"], [188, 1, 1, "", "get_submodule"], [188, 1, 1, "", "half"], [188, 2, 1, "", "input_spec"], [188, 2, 1, "", "input_spec_unbatched"], [188, 1, 1, "", "ipu"], [188, 2, 1, "", "is_spec_locked"], [188, 1, 1, "", "load_state_dict"], [188, 1, 1, "", "maybe_reset"], [188, 1, 1, "", "modules"], [188, 1, 1, "", "mtia"], [188, 1, 1, "", "named_buffers"], [188, 1, 1, "", "named_children"], [188, 1, 1, "", "named_modules"], [188, 1, 1, "", "named_parameters"], [188, 2, 1, "", "observation_keys"], [188, 2, 1, "", "observation_spec"], [188, 2, 1, "", "observation_spec_unbatched"], [188, 2, 1, "", "output_spec"], [188, 2, 1, "", "output_spec_unbatched"], [188, 1, 1, "", "parameters"], [188, 1, 1, "", "rand_action"], [188, 1, 1, "", "rand_step"], [188, 1, 1, "", "register_backward_hook"], [188, 1, 1, "", "register_buffer"], [188, 1, 1, "", "register_forward_hook"], [188, 1, 1, "", "register_forward_pre_hook"], [188, 1, 1, "", "register_full_backward_hook"], [188, 1, 1, "", "register_full_backward_pre_hook"], [188, 1, 1, "", "register_gym"], [188, 1, 1, "", "register_load_state_dict_post_hook"], [188, 1, 1, "", "register_load_state_dict_pre_hook"], [188, 1, 1, "", "register_module"], [188, 1, 1, "", "register_parameter"], [188, 1, 1, "", "register_state_dict_post_hook"], [188, 1, 1, "", "register_state_dict_pre_hook"], [188, 1, 1, "", "requires_grad_"], [188, 1, 1, "", "reset"], [188, 2, 1, "", "reset_keys"], [188, 2, 1, "", "reward_key"], [188, 2, 1, "", "reward_keys"], [188, 2, 1, "", "reward_spec"], [188, 2, 1, "", "reward_spec_unbatched"], [188, 1, 1, "", "rollout"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "set_seed"], [188, 1, 1, "", "set_spec_lock_"], [188, 1, 1, "", "set_submodule"], [188, 2, 1, "", "shape"], [188, 1, 1, "", "share_memory"], [188, 2, 1, "", "specs"], [188, 1, 1, "", "state_dict"], [188, 2, 1, "", "state_keys"], [188, 2, 1, "", "state_spec"], [188, 2, 1, "", "state_spec_unbatched"], [188, 1, 1, "", "step"], [188, 1, 1, "", "step_and_maybe_reset"], [188, 1, 1, "", "step_mdp"], [188, 1, 1, "", "to"], [188, 1, 1, "", "to_empty"], [188, 1, 1, "", "train"], [188, 1, 1, "", "type"], [188, 1, 1, "", "xpu"], [188, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[189, 2, 1, "", "action_key"], [189, 2, 1, "", "action_keys"], [189, 2, 1, "", "action_spec"], [189, 2, 1, "", "action_spec_unbatched"], [189, 1, 1, "", "add_module"], [189, 1, 1, "", "add_truncated_keys"], [189, 1, 1, "", "all_actions"], [189, 1, 1, "", "any_done"], [189, 1, 1, "", "append_transform"], [189, 1, 1, "", "apply"], [189, 1, 1, "", "auto_specs_"], [189, 2, 1, "", "batch_dims"], [189, 2, 1, "", "batch_locked"], [189, 2, 1, "", "batch_size"], [189, 1, 1, "", "bfloat16"], [189, 1, 1, "", "buffers"], [189, 1, 1, "", "cardinality"], [189, 1, 1, "", "check_env_specs"], [189, 1, 1, "", "children"], [189, 1, 1, "", "compile"], [189, 1, 1, "", "cpu"], [189, 1, 1, "", "cuda"], [189, 2, 1, "", "done_key"], [189, 2, 1, "", "done_keys"], [189, 2, 1, "", "done_keys_groups"], [189, 2, 1, "", "done_spec"], [189, 2, 1, "", "done_spec_unbatched"], [189, 1, 1, "", "double"], [189, 1, 1, "", "empty_cache"], [189, 1, 1, "", "eval"], [189, 1, 1, "", "extra_repr"], [189, 1, 1, "", "fake_tensordict"], [189, 1, 1, "", "float"], [189, 1, 1, "", "forward"], [189, 2, 1, "", "full_action_spec"], [189, 2, 1, "", "full_action_spec_unbatched"], [189, 2, 1, "", "full_done_spec"], [189, 2, 1, "", "full_done_spec_unbatched"], [189, 2, 1, "", "full_observation_spec_unbatched"], [189, 2, 1, "", "full_reward_spec"], [189, 2, 1, "", "full_reward_spec_unbatched"], [189, 2, 1, "", "full_state_spec"], [189, 2, 1, "", "full_state_spec_unbatched"], [189, 1, 1, "", "get_buffer"], [189, 1, 1, "", "get_extra_state"], [189, 1, 1, "", "get_parameter"], [189, 1, 1, "", "get_submodule"], [189, 1, 1, "", "half"], [189, 2, 1, "", "input_spec"], [189, 2, 1, "", "input_spec_unbatched"], [189, 1, 1, "", "ipu"], [189, 2, 1, "", "is_spec_locked"], [189, 1, 1, "", "load_state_dict"], [189, 1, 1, "", "make_tensordict"], [189, 1, 1, "", "maybe_reset"], [189, 1, 1, "", "modules"], [189, 1, 1, "", "mtia"], [189, 1, 1, "", "named_buffers"], [189, 1, 1, "", "named_children"], [189, 1, 1, "", "named_modules"], [189, 1, 1, "", "named_parameters"], [189, 2, 1, "", "observation_keys"], [189, 2, 1, "", "observation_spec"], [189, 2, 1, "", "observation_spec_unbatched"], [189, 2, 1, "", "output_spec"], [189, 2, 1, "", "output_spec_unbatched"], [189, 1, 1, "", "parameters"], [189, 1, 1, "", "rand_action"], [189, 1, 1, "", "rand_step"], [189, 1, 1, "", "register_backward_hook"], [189, 1, 1, "", "register_buffer"], [189, 1, 1, "", "register_forward_hook"], [189, 1, 1, "", "register_forward_pre_hook"], [189, 1, 1, "", "register_full_backward_hook"], [189, 1, 1, "", "register_full_backward_pre_hook"], [189, 1, 1, "", "register_gym"], [189, 1, 1, "", "register_load_state_dict_post_hook"], [189, 1, 1, "", "register_load_state_dict_pre_hook"], [189, 1, 1, "", "register_module"], [189, 1, 1, "", "register_parameter"], [189, 1, 1, "", "register_state_dict_post_hook"], [189, 1, 1, "", "register_state_dict_pre_hook"], [189, 1, 1, "", "requires_grad_"], [189, 1, 1, "", "reset"], [189, 2, 1, "", "reset_keys"], [189, 2, 1, "", "reward_key"], [189, 2, 1, "", "reward_keys"], [189, 2, 1, "", "reward_spec"], [189, 2, 1, "", "reward_spec_unbatched"], [189, 1, 1, "", "rollout"], [189, 1, 1, "", "set_extra_state"], [189, 1, 1, "", "set_seed"], [189, 1, 1, "", "set_spec_lock_"], [189, 1, 1, "", "set_submodule"], [189, 2, 1, "", "shape"], [189, 1, 1, "", "share_memory"], [189, 2, 1, "", "specs"], [189, 1, 1, "", "state_dict"], [189, 2, 1, "", "state_keys"], [189, 2, 1, "", "state_spec"], [189, 2, 1, "", "state_spec_unbatched"], [189, 1, 1, "", "step"], [189, 1, 1, "", "step_and_maybe_reset"], [189, 1, 1, "", "step_mdp"], [189, 1, 1, "", "to"], [189, 1, 1, "", "to_empty"], [189, 1, 1, "", "train"], [189, 1, 1, "", "type"], [189, 1, 1, "", "xpu"], [189, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[190, 2, 1, "", "action_key"], [190, 2, 1, "", "action_keys"], [190, 2, 1, "", "action_spec"], [190, 2, 1, "", "action_spec_unbatched"], [190, 1, 1, "", "add_module"], [190, 1, 1, "", "add_truncated_keys"], [190, 1, 1, "", "all_actions"], [190, 1, 1, "", "any_done"], [190, 1, 1, "", "append_transform"], [190, 1, 1, "", "apply"], [190, 1, 1, "", "auto_register_info_dict"], [190, 1, 1, "", "auto_specs_"], [190, 2, 1, "", "batch_dims"], [190, 2, 1, "", "batch_locked"], [190, 2, 1, "", "batch_size"], [190, 1, 1, "", "bfloat16"], [190, 1, 1, "", "buffers"], [190, 1, 1, "", "cardinality"], [190, 1, 1, "", "check_env_specs"], [190, 1, 1, "", "children"], [190, 1, 1, "", "close"], [190, 1, 1, "", "compile"], [190, 1, 1, "", "cpu"], [190, 1, 1, "", "cuda"], [190, 2, 1, "", "done_key"], [190, 2, 1, "", "done_keys"], [190, 2, 1, "", "done_keys_groups"], [190, 2, 1, "", "done_spec"], [190, 2, 1, "", "done_spec_unbatched"], [190, 1, 1, "", "double"], [190, 1, 1, "", "empty_cache"], [190, 1, 1, "", "eval"], [190, 1, 1, "", "extra_repr"], [190, 1, 1, "", "fake_tensordict"], [190, 1, 1, "", "fast_encoding"], [190, 1, 1, "", "float"], [190, 1, 1, "", "forward"], [190, 2, 1, "", "full_action_spec"], [190, 2, 1, "", "full_action_spec_unbatched"], [190, 2, 1, "", "full_done_spec"], [190, 2, 1, "", "full_done_spec_unbatched"], [190, 2, 1, "", "full_observation_spec_unbatched"], [190, 2, 1, "", "full_reward_spec"], [190, 2, 1, "", "full_reward_spec_unbatched"], [190, 2, 1, "", "full_state_spec"], [190, 2, 1, "", "full_state_spec_unbatched"], [190, 1, 1, "", "get_buffer"], [190, 1, 1, "", "get_extra_state"], [190, 1, 1, "", "get_library_name"], [190, 1, 1, "", "get_parameter"], [190, 1, 1, "", "get_submodule"], [190, 1, 1, "", "half"], [190, 2, 1, "", "input_spec"], [190, 2, 1, "", "input_spec_unbatched"], [190, 1, 1, "", "ipu"], [190, 2, 1, "", "is_spec_locked"], [190, 1, 1, "", "load_state_dict"], [190, 1, 1, "", "maybe_reset"], [190, 1, 1, "", "modules"], [190, 1, 1, "", "mtia"], [190, 1, 1, "", "named_buffers"], [190, 1, 1, "", "named_children"], [190, 1, 1, "", "named_modules"], [190, 1, 1, "", "named_parameters"], [190, 2, 1, "", "observation_keys"], [190, 2, 1, "", "observation_spec"], [190, 2, 1, "", "observation_spec_unbatched"], [190, 2, 1, "", "output_spec"], [190, 2, 1, "", "output_spec_unbatched"], [190, 1, 1, "", "parameters"], [190, 1, 1, "", "rand_action"], [190, 1, 1, "", "rand_step"], [190, 1, 1, "", "read_action"], [190, 1, 1, "", "read_done"], [190, 1, 1, "", "read_obs"], [190, 1, 1, "", "read_reward"], [190, 1, 1, "", "register_backward_hook"], [190, 1, 1, "", "register_buffer"], [190, 1, 1, "", "register_forward_hook"], [190, 1, 1, "", "register_forward_pre_hook"], [190, 1, 1, "", "register_full_backward_hook"], [190, 1, 1, "", "register_full_backward_pre_hook"], [190, 1, 1, "", "register_gym"], [190, 1, 1, "", "register_load_state_dict_post_hook"], [190, 1, 1, "", "register_load_state_dict_pre_hook"], [190, 1, 1, "", "register_module"], [190, 1, 1, "", "register_parameter"], [190, 1, 1, "", "register_state_dict_post_hook"], [190, 1, 1, "", "register_state_dict_pre_hook"], [190, 1, 1, "", "requires_grad_"], [190, 1, 1, "", "reset"], [190, 2, 1, "", "reset_keys"], [190, 2, 1, "", "reward_key"], [190, 2, 1, "", "reward_keys"], [190, 2, 1, "", "reward_spec"], [190, 2, 1, "", "reward_spec_unbatched"], [190, 1, 1, "", "rollout"], [190, 1, 1, "", "set_extra_state"], [190, 1, 1, "", "set_info_dict_reader"], [190, 1, 1, "", "set_seed"], [190, 1, 1, "", "set_spec_lock_"], [190, 1, 1, "", "set_submodule"], [190, 2, 1, "", "shape"], [190, 1, 1, "", "share_memory"], [190, 2, 1, "", "specs"], [190, 1, 1, "", "state_dict"], [190, 2, 1, "", "state_keys"], [190, 2, 1, "", "state_spec"], [190, 2, 1, "", "state_spec_unbatched"], [190, 1, 1, "", "step"], [190, 1, 1, "", "step_and_maybe_reset"], [190, 1, 1, "", "step_mdp"], [190, 1, 1, "", "to"], [190, 1, 1, "", "to_empty"], [190, 1, 1, "", "train"], [190, 1, 1, "", "type"], [190, 1, 1, "", "xpu"], [190, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[193, 0, 1, "", "BrowserTransform"], [194, 0, 1, "", "DataLoadingPrimer"], [195, 0, 1, "", "KLRewardTransform"], [196, 0, 1, "", "MCPToolTransform"], [197, 0, 1, "", "PolicyVersion"], [198, 0, 1, "", "PythonInterpreter"], [199, 0, 1, "", "RetrieveLogProb"], [200, 0, 1, "", "TemplateTransform"], [201, 0, 1, "", "Tokenizer"], [202, 0, 1, "", "as_nested_tensor"], [203, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.BrowserTransform": [[193, 1, 1, "", "add_module"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "children"], [193, 1, 1, "", "clone"], [193, 1, 1, "", "close"], [193, 1, 1, "", "compile"], [193, 2, 1, "", "container"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 1, 1, "", "double"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 1, 1, "", "init"], [193, 1, 1, "", "inv"], [193, 1, 1, "", "ipu"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 1, 1, "", "parameters"], [193, 2, 1, "", "parent"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_submodule"], [193, 1, 1, "", "share_memory"], [193, 1, 1, "", "state_dict"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "transform_action_spec"], [193, 1, 1, "", "transform_done_spec"], [193, 1, 1, "", "transform_env_batch_size"], [193, 1, 1, "", "transform_env_device"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_output_spec"], [193, 1, 1, "", "transform_reward_spec"], [193, 1, 1, "", "transform_state_spec"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[194, 1, 1, "", "add_module"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "children"], [194, 1, 1, "", "close"], [194, 1, 1, "", "compile"], [194, 2, 1, "", "container"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 1, 1, "", "double"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 1, 1, "", "init"], [194, 1, 1, "", "inv"], [194, 1, 1, "", "ipu"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 1, 1, "", "parameters"], [194, 2, 1, "", "parent"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "reset_dataloader"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_submodule"], [194, 1, 1, "", "share_memory"], [194, 1, 1, "", "state_dict"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "transform_action_spec"], [194, 1, 1, "", "transform_done_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "transform_state_spec"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "close"], [195, 1, 1, "", "compile"], [195, 2, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "init"], [195, 1, 1, "", "inv"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 2, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[196, 1, 1, "", "add_module"], [196, 1, 1, "", "apply"], [196, 1, 1, "", "bfloat16"], [196, 1, 1, "", "buffers"], [196, 1, 1, "", "children"], [196, 1, 1, "", "close"], [196, 1, 1, "", "compile"], [196, 2, 1, "", "container"], [196, 1, 1, "", "cpu"], [196, 1, 1, "", "cuda"], [196, 1, 1, "", "double"], [196, 1, 1, "", "eval"], [196, 1, 1, "", "extra_repr"], [196, 1, 1, "", "float"], [196, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffer"], [196, 1, 1, "", "get_extra_state"], [196, 1, 1, "", "get_parameter"], [196, 1, 1, "", "get_submodule"], [196, 1, 1, "", "half"], [196, 1, 1, "", "init"], [196, 1, 1, "", "inv"], [196, 1, 1, "", "ipu"], [196, 1, 1, "", "load_state_dict"], [196, 1, 1, "", "modules"], [196, 1, 1, "", "mtia"], [196, 1, 1, "", "named_buffers"], [196, 1, 1, "", "named_children"], [196, 1, 1, "", "named_modules"], [196, 1, 1, "", "named_parameters"], [196, 1, 1, "", "parameters"], [196, 2, 1, "", "parent"], [196, 1, 1, "", "register_backward_hook"], [196, 1, 1, "", "register_buffer"], [196, 1, 1, "", "register_forward_hook"], [196, 1, 1, "", "register_forward_pre_hook"], [196, 1, 1, "", "register_full_backward_hook"], [196, 1, 1, "", "register_full_backward_pre_hook"], [196, 1, 1, "", "register_load_state_dict_post_hook"], [196, 1, 1, "", "register_load_state_dict_pre_hook"], [196, 1, 1, "", "register_module"], [196, 1, 1, "", "register_parameter"], [196, 1, 1, "", "register_state_dict_post_hook"], [196, 1, 1, "", "register_state_dict_pre_hook"], [196, 1, 1, "", "requires_grad_"], [196, 1, 1, "", "set_extra_state"], [196, 1, 1, "", "set_submodule"], [196, 1, 1, "", "share_memory"], [196, 1, 1, "", "state_dict"], [196, 1, 1, "", "to"], [196, 1, 1, "", "to_empty"], [196, 1, 1, "", "train"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_batch_size"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"], [196, 1, 1, "", "type"], [196, 1, 1, "", "xpu"], [196, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PolicyVersion": [[197, 1, 1, "", "add_module"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "bfloat16"], [197, 1, 1, "", "buffers"], [197, 1, 1, "", "children"], [197, 1, 1, "", "close"], [197, 1, 1, "", "compile"], [197, 2, 1, "", "container"], [197, 1, 1, "", "cpu"], [197, 1, 1, "", "cuda"], [197, 1, 1, "", "double"], [197, 1, 1, "", "eval"], [197, 1, 1, "", "extra_repr"], [197, 1, 1, "", "float"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "get_buffer"], [197, 1, 1, "", "get_extra_state"], [197, 1, 1, "", "get_parameter"], [197, 1, 1, "", "get_submodule"], [197, 1, 1, "", "half"], [197, 1, 1, "", "increment_version"], [197, 1, 1, "", "init"], [197, 1, 1, "", "inv"], [197, 1, 1, "", "ipu"], [197, 1, 1, "", "load_state_dict"], [197, 1, 1, "", "modules"], [197, 1, 1, "", "mtia"], [197, 1, 1, "", "named_buffers"], [197, 1, 1, "", "named_children"], [197, 1, 1, "", "named_modules"], [197, 1, 1, "", "named_parameters"], [197, 1, 1, "", "parameters"], [197, 2, 1, "", "parent"], [197, 1, 1, "", "register_backward_hook"], [197, 1, 1, "", "register_buffer"], [197, 1, 1, "", "register_forward_hook"], [197, 1, 1, "", "register_forward_pre_hook"], [197, 1, 1, "", "register_full_backward_hook"], [197, 1, 1, "", "register_full_backward_pre_hook"], [197, 1, 1, "", "register_load_state_dict_post_hook"], [197, 1, 1, "", "register_load_state_dict_pre_hook"], [197, 1, 1, "", "register_module"], [197, 1, 1, "", "register_parameter"], [197, 1, 1, "", "register_state_dict_post_hook"], [197, 1, 1, "", "register_state_dict_pre_hook"], [197, 1, 1, "", "requires_grad_"], [197, 1, 1, "", "set_extra_state"], [197, 1, 1, "", "set_submodule"], [197, 1, 1, "", "share_memory"], [197, 1, 1, "", "state_dict"], [197, 1, 1, "", "to"], [197, 1, 1, "", "to_empty"], [197, 1, 1, "", "train"], [197, 1, 1, "", "transform_action_spec"], [197, 1, 1, "", "transform_done_spec"], [197, 1, 1, "", "transform_env_batch_size"], [197, 1, 1, "", "transform_env_device"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"], [197, 1, 1, "", "transform_output_spec"], [197, 1, 1, "", "transform_reward_spec"], [197, 1, 1, "", "transform_state_spec"], [197, 1, 1, "", "type"], [197, 2, 1, "", "version"], [197, 1, 1, "", "xpu"], [197, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[198, 1, 1, "", "add_module"], [198, 1, 1, "", "apply"], [198, 1, 1, "", "bfloat16"], [198, 1, 1, "", "buffers"], [198, 1, 1, "", "children"], [198, 1, 1, "", "clone"], [198, 1, 1, "", "close"], [198, 1, 1, "", "compile"], [198, 2, 1, "", "container"], [198, 1, 1, "", "cpu"], [198, 1, 1, "", "cuda"], [198, 1, 1, "", "double"], [198, 1, 1, "", "eval"], [198, 1, 1, "", "extra_repr"], [198, 1, 1, "", "float"], [198, 1, 1, "", "forward"], [198, 1, 1, "", "get_buffer"], [198, 1, 1, "", "get_extra_state"], [198, 1, 1, "", "get_parameter"], [198, 1, 1, "", "get_submodule"], [198, 1, 1, "", "half"], [198, 1, 1, "", "init"], [198, 1, 1, "", "inv"], [198, 1, 1, "", "ipu"], [198, 1, 1, "", "load_state_dict"], [198, 1, 1, "", "modules"], [198, 1, 1, "", "mtia"], [198, 1, 1, "", "named_buffers"], [198, 1, 1, "", "named_children"], [198, 1, 1, "", "named_modules"], [198, 1, 1, "", "named_parameters"], [198, 1, 1, "", "parameters"], [198, 2, 1, "", "parent"], [198, 1, 1, "", "register_backward_hook"], [198, 1, 1, "", "register_buffer"], [198, 1, 1, "", "register_forward_hook"], [198, 1, 1, "", "register_forward_pre_hook"], [198, 1, 1, "", "register_full_backward_hook"], [198, 1, 1, "", "register_full_backward_pre_hook"], [198, 1, 1, "", "register_load_state_dict_post_hook"], [198, 1, 1, "", "register_load_state_dict_pre_hook"], [198, 1, 1, "", "register_module"], [198, 1, 1, "", "register_parameter"], [198, 1, 1, "", "register_state_dict_post_hook"], [198, 1, 1, "", "register_state_dict_pre_hook"], [198, 1, 1, "", "requires_grad_"], [198, 1, 1, "", "set_extra_state"], [198, 1, 1, "", "set_submodule"], [198, 1, 1, "", "share_memory"], [198, 1, 1, "", "state_dict"], [198, 1, 1, "", "to"], [198, 1, 1, "", "to_empty"], [198, 1, 1, "", "train"], [198, 1, 1, "", "transform_action_spec"], [198, 1, 1, "", "transform_done_spec"], [198, 1, 1, "", "transform_env_batch_size"], [198, 1, 1, "", "transform_env_device"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_observation_spec"], [198, 1, 1, "", "transform_output_spec"], [198, 1, 1, "", "transform_reward_spec"], [198, 1, 1, "", "transform_state_spec"], [198, 1, 1, "", "type"], [198, 1, 1, "", "xpu"], [198, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveLogProb": [[199, 1, 1, "", "add_module"], [199, 1, 1, "", "apply"], [199, 1, 1, "", "bfloat16"], [199, 1, 1, "", "buffers"], [199, 1, 1, "", "children"], [199, 1, 1, "", "close"], [199, 1, 1, "", "compile"], [199, 2, 1, "", "container"], [199, 1, 1, "", "cpu"], [199, 1, 1, "", "cuda"], [199, 1, 1, "", "double"], [199, 1, 1, "", "eval"], [199, 1, 1, "", "extra_repr"], [199, 1, 1, "", "float"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_buffer"], [199, 1, 1, "", "get_extra_state"], [199, 1, 1, "", "get_parameter"], [199, 1, 1, "", "get_submodule"], [199, 1, 1, "", "half"], [199, 1, 1, "", "init"], [199, 1, 1, "", "inv"], [199, 1, 1, "", "ipu"], [199, 1, 1, "", "load_state_dict"], [199, 1, 1, "", "modules"], [199, 1, 1, "", "mtia"], [199, 1, 1, "", "named_buffers"], [199, 1, 1, "", "named_children"], [199, 1, 1, "", "named_modules"], [199, 1, 1, "", "named_parameters"], [199, 1, 1, "", "parameters"], [199, 2, 1, "", "parent"], [199, 1, 1, "", "register_backward_hook"], [199, 1, 1, "", "register_buffer"], [199, 1, 1, "", "register_forward_hook"], [199, 1, 1, "", "register_forward_pre_hook"], [199, 1, 1, "", "register_full_backward_hook"], [199, 1, 1, "", "register_full_backward_pre_hook"], [199, 1, 1, "", "register_load_state_dict_post_hook"], [199, 1, 1, "", "register_load_state_dict_pre_hook"], [199, 1, 1, "", "register_module"], [199, 1, 1, "", "register_parameter"], [199, 1, 1, "", "register_state_dict_post_hook"], [199, 1, 1, "", "register_state_dict_pre_hook"], [199, 1, 1, "", "requires_grad_"], [199, 1, 1, "", "set_extra_state"], [199, 1, 1, "", "set_submodule"], [199, 1, 1, "", "share_memory"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "to_empty"], [199, 1, 1, "", "train"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_batch_size"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"], [199, 1, 1, "", "type"], [199, 1, 1, "", "xpu"], [199, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[200, 1, 1, "", "add_module"], [200, 1, 1, "", "apply"], [200, 1, 1, "", "bfloat16"], [200, 1, 1, "", "buffers"], [200, 1, 1, "", "children"], [200, 1, 1, "", "close"], [200, 1, 1, "", "compile"], [200, 2, 1, "", "container"], [200, 1, 1, "", "cpu"], [200, 1, 1, "", "cuda"], [200, 1, 1, "", "double"], [200, 1, 1, "", "eval"], [200, 1, 1, "", "extra_repr"], [200, 1, 1, "", "float"], [200, 1, 1, "", "forward"], [200, 1, 1, "", "get_buffer"], [200, 1, 1, "", "get_extra_state"], [200, 1, 1, "", "get_parameter"], [200, 1, 1, "", "get_submodule"], [200, 1, 1, "", "half"], [200, 1, 1, "", "init"], [200, 1, 1, "", "inv"], [200, 1, 1, "", "ipu"], [200, 1, 1, "", "load_state_dict"], [200, 1, 1, "", "modules"], [200, 1, 1, "", "mtia"], [200, 1, 1, "", "named_buffers"], [200, 1, 1, "", "named_children"], [200, 1, 1, "", "named_modules"], [200, 1, 1, "", "named_parameters"], [200, 1, 1, "", "parameters"], [200, 2, 1, "", "parent"], [200, 1, 1, "", "register_backward_hook"], [200, 1, 1, "", "register_buffer"], [200, 1, 1, "", "register_forward_hook"], [200, 1, 1, "", "register_forward_pre_hook"], [200, 1, 1, "", "register_full_backward_hook"], [200, 1, 1, "", "register_full_backward_pre_hook"], [200, 1, 1, "", "register_load_state_dict_post_hook"], [200, 1, 1, "", "register_load_state_dict_pre_hook"], [200, 1, 1, "", "register_module"], [200, 1, 1, "", "register_parameter"], [200, 1, 1, "", "register_state_dict_post_hook"], [200, 1, 1, "", "register_state_dict_pre_hook"], [200, 1, 1, "", "requires_grad_"], [200, 1, 1, "", "set_extra_state"], [200, 1, 1, "", "set_submodule"], [200, 1, 1, "", "share_memory"], [200, 1, 1, "", "state_dict"], [200, 1, 1, "", "to"], [200, 1, 1, "", "to_empty"], [200, 1, 1, "", "train"], [200, 1, 1, "", "transform_action_spec"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_batch_size"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"], [200, 1, 1, "", "transform_state_spec"], [200, 1, 1, "", "type"], [200, 1, 1, "", "xpu"], [200, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[201, 1, 1, "", "add_module"], [201, 1, 1, "", "apply"], [201, 1, 1, "", "bfloat16"], [201, 1, 1, "", "buffers"], [201, 1, 1, "", "children"], [201, 1, 1, "", "close"], [201, 1, 1, "", "compile"], [201, 2, 1, "", "container"], [201, 1, 1, "", "cpu"], [201, 1, 1, "", "cuda"], [201, 1, 1, "", "double"], [201, 1, 1, "", "eval"], [201, 1, 1, "", "extra_repr"], [201, 1, 1, "", "float"], [201, 1, 1, "", "forward"], [201, 1, 1, "", "get_buffer"], [201, 1, 1, "", "get_extra_state"], [201, 1, 1, "", "get_parameter"], [201, 1, 1, "", "get_submodule"], [201, 1, 1, "", "half"], [201, 1, 1, "", "init"], [201, 1, 1, "", "inv"], [201, 1, 1, "", "ipu"], [201, 1, 1, "", "load_state_dict"], [201, 1, 1, "", "modules"], [201, 1, 1, "", "mtia"], [201, 1, 1, "", "named_buffers"], [201, 1, 1, "", "named_children"], [201, 1, 1, "", "named_modules"], [201, 1, 1, "", "named_parameters"], [201, 1, 1, "", "parameters"], [201, 2, 1, "", "parent"], [201, 1, 1, "", "register_backward_hook"], [201, 1, 1, "", "register_buffer"], [201, 1, 1, "", "register_forward_hook"], [201, 1, 1, "", "register_forward_pre_hook"], [201, 1, 1, "", "register_full_backward_hook"], [201, 1, 1, "", "register_full_backward_pre_hook"], [201, 1, 1, "", "register_load_state_dict_post_hook"], [201, 1, 1, "", "register_load_state_dict_pre_hook"], [201, 1, 1, "", "register_module"], [201, 1, 1, "", "register_parameter"], [201, 1, 1, "", "register_state_dict_post_hook"], [201, 1, 1, "", "register_state_dict_pre_hook"], [201, 1, 1, "", "requires_grad_"], [201, 1, 1, "", "set_extra_state"], [201, 1, 1, "", "set_submodule"], [201, 1, 1, "", "share_memory"], [201, 1, 1, "", "state_dict"], [201, 1, 1, "", "to"], [201, 1, 1, "", "to_empty"], [201, 1, 1, "", "train"], [201, 1, 1, "", "transform_action_spec"], [201, 1, 1, "", "transform_done_spec"], [201, 1, 1, "", "transform_env_batch_size"], [201, 1, 1, "", "transform_env_device"], [201, 1, 1, "", "transform_input_spec"], [201, 1, 1, "", "transform_observation_spec"], [201, 1, 1, "", "transform_output_spec"], [201, 1, 1, "", "transform_reward_spec"], [201, 1, 1, "", "transform_state_spec"], [201, 1, 1, "", "type"], [201, 1, 1, "", "xpu"], [201, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[205, 3, 1, "", "DreamerDecoder"], [206, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[212, 0, 1, "", "ActionDiscretizer"], [213, 0, 1, "", "ActionMask"], [214, 0, 1, "", "AutoResetEnv"], [215, 0, 1, "", "AutoResetTransform"], [216, 0, 1, "", "BatchSizeTransform"], [217, 0, 1, "", "BinarizeReward"], [218, 0, 1, "", "BurnInTransform"], [219, 0, 1, "", "CatFrames"], [220, 0, 1, "", "CatTensors"], [221, 0, 1, "", "CenterCrop"], [222, 0, 1, "", "ClipTransform"], [223, 0, 1, "", "Compose"], [224, 0, 1, "", "ConditionalPolicySwitch"], [225, 0, 1, "", "ConditionalSkip"], [226, 0, 1, "", "Crop"], [227, 0, 1, "", "DTypeCastTransform"], [228, 0, 1, "", "DeviceCastTransform"], [229, 0, 1, "", "DiscreteActionProjection"], [230, 0, 1, "", "DoubleToFloat"], [231, 0, 1, "", "EndOfLifeTransform"], [232, 0, 1, "", "ExcludeTransform"], [233, 0, 1, "", "FiniteTensorDictCheck"], [234, 0, 1, "", "FlattenObservation"], [235, 0, 1, "", "FrameSkipTransform"], [236, 0, 1, "", "GrayScale"], [237, 0, 1, "", "Hash"], [238, 0, 1, "", "InitTracker"], [239, 0, 1, "", "KLRewardTransform"], [240, 0, 1, "", "LineariseRewards"], [241, 0, 1, "", "MultiAction"], [242, 0, 1, "", "NoopResetEnv"], [243, 0, 1, "", "ObservationNorm"], [244, 0, 1, "", "ObservationTransform"], [245, 0, 1, "", "PermuteTransform"], [246, 0, 1, "", "PinMemoryTransform"], [247, 0, 1, "", "R3MTransform"], [248, 0, 1, "", "RandomCropTensorDict"], [249, 0, 1, "", "RemoveEmptySpecs"], [250, 0, 1, "", "RenameTransform"], [251, 0, 1, "", "Resize"], [252, 0, 1, "", "Reward2GoTransform"], [253, 0, 1, "", "RewardClipping"], [254, 0, 1, "", "RewardScaling"], [255, 0, 1, "", "RewardSum"], [256, 0, 1, "", "SelectTransform"], [257, 0, 1, "", "SignTransform"], [258, 0, 1, "", "SqueezeTransform"], [259, 0, 1, "", "Stack"], [260, 0, 1, "", "StepCounter"], [261, 0, 1, "", "TargetReturn"], [262, 0, 1, "", "TensorDictPrimer"], [263, 0, 1, "", "TimeMaxPool"], [264, 0, 1, "", "Timer"], [265, 0, 1, "", "ToTensorImage"], [266, 0, 1, "", "Tokenizer"], [267, 0, 1, "", "TrajCounter"], [268, 0, 1, "", "Transform"], [269, 0, 1, "", "TransformedEnv"], [270, 0, 1, "", "UnaryTransform"], [271, 0, 1, "", "UnsqueezeTransform"], [272, 0, 1, "", "VC1Transform"], [273, 0, 1, "", "VIPRewardTransform"], [274, 0, 1, "", "VIPTransform"], [275, 0, 1, "", "VecGymEnvTransform"], [276, 0, 1, "", "VecNorm"], [277, 0, 1, "", "VecNormV2"], [278, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[212, 0, 1, "", "SamplingStrategy"], [212, 1, 1, "", "inv"], [212, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[213, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[214, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[215, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "transform_env_batch_size"], [216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[217, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[218, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "make_rb_transform_and_sampler"], [219, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[221, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[223, 1, 1, "", "append"], [223, 1, 1, "", "close"], [223, 1, 1, "", "forward"], [223, 1, 1, "", "init"], [223, 1, 1, "", "insert"], [223, 1, 1, "", "pop"], [223, 1, 1, "", "to"], [223, 1, 1, "", "transform_action_spec"], [223, 1, 1, "", "transform_env_batch_size"], [223, 1, 1, "", "transform_env_device"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_output_spec"], [223, 1, 1, "", "transform_reward_spec"], [223, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[224, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[225, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_observation_spec"], [227, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_action_spec"], [228, 1, 1, "", "transform_done_spec"], [228, 1, 1, "", "transform_env_device"], [228, 1, 1, "", "transform_input_spec"], [228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_output_spec"], [228, 1, 1, "", "transform_reward_spec"], [228, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[229, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "register_keys"], [231, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[233, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[235, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[237, 1, 1, "", "get_input_from_hash"], [237, 1, 1, "", "reproducible_hash"], [237, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[240, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[241, 1, 1, "", "transform_input_spec"], [241, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[243, 1, 1, "", "init_stats"], [243, 1, 1, "", "transform_action_spec"], [243, 1, 1, "", "transform_observation_spec"], [243, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[245, 1, 1, "", "transform_input_spec"], [245, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[246, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[247, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[248, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "transform_input_spec"], [249, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "transform_input_spec"], [250, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[251, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[252, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[253, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[254, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "transform_input_spec"], [255, 1, 1, "", "transform_observation_spec"], [255, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[257, 1, 1, "", "transform_observation_spec"], [257, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "transform_done_spec"], [259, 1, 1, "", "transform_input_spec"], [259, 1, 1, "", "transform_observation_spec"], [259, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "transform_input_spec"], [260, 1, 1, "", "transform_observation_spec"], [260, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "transform_input_spec"], [261, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "to"], [262, 1, 1, "", "transform_input_spec"], [262, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[265, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "transform_done_spec"], [266, 1, 1, "", "transform_input_spec"], [266, 1, 1, "", "transform_observation_spec"], [266, 1, 1, "", "transform_output_spec"], [266, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "load_state_dict"], [267, 1, 1, "", "state_dict"], [267, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[268, 1, 1, "", "clone"], [268, 1, 1, "", "close"], [268, 2, 1, "", "container"], [268, 1, 1, "", "forward"], [268, 1, 1, "", "init"], [268, 1, 1, "", "inv"], [268, 2, 1, "", "parent"], [268, 1, 1, "", "reset_parent"], [268, 1, 1, "", "set_container"], [268, 1, 1, "", "to"], [268, 1, 1, "", "transform_action_spec"], [268, 1, 1, "", "transform_done_spec"], [268, 1, 1, "", "transform_env_batch_size"], [268, 1, 1, "", "transform_env_device"], [268, 1, 1, "", "transform_input_spec"], [268, 1, 1, "", "transform_observation_spec"], [268, 1, 1, "", "transform_output_spec"], [268, 1, 1, "", "transform_reward_spec"], [268, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[269, 1, 1, "", "add_truncated_keys"], [269, 1, 1, "", "append_transform"], [269, 2, 1, "", "batch_locked"], [269, 2, 1, "", "batch_size"], [269, 1, 1, "", "empty_cache"], [269, 1, 1, "", "eval"], [269, 2, 1, "", "input_spec"], [269, 1, 1, "", "insert_transform"], [269, 1, 1, "", "load_state_dict"], [269, 2, 1, "", "output_spec"], [269, 1, 1, "", "rand_action"], [269, 1, 1, "", "set_missing_tolerance"], [269, 1, 1, "", "set_seed"], [269, 1, 1, "", "state_dict"], [269, 1, 1, "", "to"], [269, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[270, 1, 1, "", "transform_action_spec"], [270, 1, 1, "", "transform_done_spec"], [270, 1, 1, "", "transform_input_spec"], [270, 1, 1, "", "transform_observation_spec"], [270, 1, 1, "", "transform_output_spec"], [270, 1, 1, "", "transform_reward_spec"], [270, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[271, 1, 1, "", "transform_action_spec"], [271, 1, 1, "", "transform_observation_spec"], [271, 1, 1, "", "transform_reward_spec"], [271, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "make_noload_model"], [272, 1, 1, "", "to"], [272, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[274, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[276, 1, 1, "", "build_td_for_shared_vecnorm"], [276, 1, 1, "", "forward"], [276, 1, 1, "", "freeze"], [276, 1, 1, "", "frozen_copy"], [276, 1, 1, "", "get_extra_state"], [276, 2, 1, "", "loc"], [276, 2, 1, "", "scale"], [276, 1, 1, "", "set_extra_state"], [276, 2, 1, "", "standard_normal"], [276, 1, 1, "", "to_observation_norm"], [276, 1, 1, "", "transform_observation_spec"], [276, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[277, 1, 1, "", "clone"], [277, 1, 1, "id0", "freeze"], [277, 1, 1, "id1", "frozen_copy"], [277, 1, 1, "id2", "get_extra_state"], [277, 2, 1, "id3", "loc"], [277, 2, 1, "id4", "scale"], [277, 1, 1, "id5", "set_extra_state"], [277, 2, 1, "id6", "standard_normal"], [277, 1, 1, "", "to_observation_norm"], [277, 1, 1, "id7", "transform_observation_spec"], [277, 1, 1, "id8", "transform_output_spec"], [277, 1, 1, "id9", "transform_reward_spec"], [277, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[279, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[279, 1, 1, "", "add_module"], [279, 1, 1, "", "apply"], [279, 1, 1, "", "bfloat16"], [279, 1, 1, "", "buffers"], [279, 1, 1, "", "children"], [279, 1, 1, "", "close"], [279, 1, 1, "", "compile"], [279, 2, 1, "", "container"], [279, 1, 1, "", "cpu"], [279, 1, 1, "", "cuda"], [279, 1, 1, "", "double"], [279, 1, 1, "", "eval"], [279, 1, 1, "", "extra_repr"], [279, 1, 1, "", "float"], [279, 1, 1, "", "forward"], [279, 1, 1, "", "get_buffer"], [279, 1, 1, "", "get_extra_state"], [279, 1, 1, "", "get_parameter"], [279, 1, 1, "", "get_submodule"], [279, 1, 1, "", "half"], [279, 1, 1, "", "init"], [279, 1, 1, "", "inv"], [279, 1, 1, "", "ipu"], [279, 1, 1, "", "load_state_dict"], [279, 1, 1, "", "modules"], [279, 1, 1, "", "mtia"], [279, 2, 1, "", "n_steps"], [279, 1, 1, "", "named_buffers"], [279, 1, 1, "", "named_children"], [279, 1, 1, "", "named_modules"], [279, 1, 1, "", "named_parameters"], [279, 1, 1, "", "parameters"], [279, 2, 1, "", "parent"], [279, 1, 1, "", "register_backward_hook"], [279, 1, 1, "", "register_buffer"], [279, 1, 1, "", "register_forward_hook"], [279, 1, 1, "", "register_forward_pre_hook"], [279, 1, 1, "", "register_full_backward_hook"], [279, 1, 1, "", "register_full_backward_pre_hook"], [279, 1, 1, "", "register_load_state_dict_post_hook"], [279, 1, 1, "", "register_load_state_dict_pre_hook"], [279, 1, 1, "", "register_module"], [279, 1, 1, "", "register_parameter"], [279, 1, 1, "", "register_state_dict_post_hook"], [279, 1, 1, "", "register_state_dict_pre_hook"], [279, 1, 1, "", "requires_grad_"], [279, 1, 1, "", "set_extra_state"], [279, 1, 1, "", "set_submodule"], [279, 1, 1, "", "share_memory"], [279, 1, 1, "", "state_dict"], [279, 1, 1, "", "to"], [279, 1, 1, "", "to_empty"], [279, 1, 1, "", "train"], [279, 1, 1, "", "transform_action_spec"], [279, 1, 1, "", "transform_done_spec"], [279, 1, 1, "", "transform_env_batch_size"], [279, 1, 1, "", "transform_env_device"], [279, 1, 1, "", "transform_input_spec"], [279, 1, 1, "", "transform_observation_spec"], [279, 1, 1, "", "transform_output_spec"], [279, 1, 1, "", "transform_reward_spec"], [279, 1, 1, "", "transform_state_spec"], [279, 1, 1, "", "type"], [279, 1, 1, "", "xpu"], [279, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[280, 1, 1, "", "get_class_that_defined_method"], [280, 1, 1, "", "import_module"], [280, 1, 1, "", "module_set"], [280, 1, 1, "", "reset"]], "torchrl.modules": [[281, 0, 1, "", "AdditiveGaussianModule"], [282, 0, 1, "", "BatchRenorm1d"], [283, 0, 1, "", "CEMPlanner"], [284, 0, 1, "", "ConsistentDropout"], [285, 0, 1, "", "ConsistentDropoutModule"], [286, 0, 1, "", "Conv3dNet"], [287, 0, 1, "", "ConvNet"], [288, 0, 1, "", "DTActor"], [289, 0, 1, "", "DdpgCnnActor"], [290, 0, 1, "", "DdpgCnnQNet"], [291, 0, 1, "", "DdpgMlpActor"], [292, 0, 1, "", "DdpgMlpQNet"], [293, 0, 1, "", "DecisionTransformer"], [294, 0, 1, "", "Delta"], [295, 0, 1, "", "DistributionalDQNnet"], [296, 0, 1, "", "DistributionalQValueHook"], [297, 0, 1, "", "DreamerActor"], [298, 0, 1, "", "DuelingCnnDQNet"], [299, 0, 1, "", "EGreedyModule"], [300, 0, 1, "", "GRU"], [301, 0, 1, "", "GRUCell"], [302, 0, 1, "", "GRUModule"], [303, 0, 1, "", "IndependentNormal"], [304, 0, 1, "", "LLMMaskedCategorical"], [305, 0, 1, "", "LSTM"], [306, 0, 1, "", "LSTMCell"], [307, 0, 1, "", "LSTMModule"], [308, 0, 1, "", "MLP"], [309, 0, 1, "", "MPCPlannerBase"], [310, 0, 1, "", "MPPIPlanner"], [311, 0, 1, "", "MaskedCategorical"], [312, 0, 1, "", "MaskedOneHotCategorical"], [313, 0, 1, "", "MultiAgentConvNet"], [314, 0, 1, "", "MultiAgentMLP"], [315, 0, 1, "", "MultiAgentNetBase"], [316, 0, 1, "", "NoisyLazyLinear"], [317, 0, 1, "", "NoisyLinear"], [318, 0, 1, "", "ObsDecoder"], [319, 0, 1, "", "ObsEncoder"], [320, 0, 1, "", "OneHotCategorical"], [321, 0, 1, "", "OneHotOrdinal"], [322, 0, 1, "", "OnlineDTActor"], [323, 0, 1, "", "Ordinal"], [324, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [325, 0, 1, "", "QMixer"], [326, 0, 1, "", "QValueHook"], [327, 0, 1, "", "RSSMPosterior"], [328, 0, 1, "", "RSSMPrior"], [329, 0, 1, "", "Squeeze2dLayer"], [330, 0, 1, "", "SqueezeLayer"], [331, 0, 1, "", "TanhDelta"], [332, 0, 1, "", "TanhNormal"], [333, 0, 1, "", "TruncatedNormal"], [334, 0, 1, "", "VDNMixer"], [335, 0, 1, "", "VmapModule"], [343, 0, 1, "", "recurrent_mode"], [344, 0, 1, "", "reset_noise"], [345, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[282, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[283, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[284, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[286, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[287, 1, 1, "", "default_atari_dqn"], [287, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[288, 1, 1, "", "default_config"], [288, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[289, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[290, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[291, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[292, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[293, 0, 1, "", "DTConfig"], [293, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[294, 1, 1, "", "expand"], [294, 1, 1, "", "log_prob"], [294, 2, 1, "", "mean"], [294, 2, 1, "", "mode"], [294, 1, 1, "", "rsample"], [294, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[295, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[297, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[298, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[299, 1, 1, "", "forward"], [299, 1, 1, "", "step"]], "torchrl.modules.GRU": [[300, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[301, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "make_cudnn_based"], [302, 1, 1, "", "make_python_based"], [302, 1, 1, "id0", "make_tensordict_primer"], [302, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[303, 2, 1, "", "mode"]], "torchrl.modules.LLMMaskedCategorical": [[304, 1, 1, "", "clear_cache"], [304, 1, 1, "", "entropy"], [304, 1, 1, "", "log_prob"], [304, 2, 1, "", "logits"], [304, 2, 1, "", "mask"], [304, 2, 1, "", "masked_dist"], [304, 2, 1, "", "masked_logits"], [304, 2, 1, "", "mode"], [304, 2, 1, "", "position_level_masking"], [304, 2, 1, "", "probs"], [304, 1, 1, "", "rsample"], [304, 1, 1, "", "sample"]], "torchrl.modules.LSTM": [[305, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[306, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_cudnn_based"], [307, 1, 1, "", "make_python_based"], [307, 1, 1, "id0", "make_tensordict_primer"], [307, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[308, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[310, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[311, 1, 1, "", "entropy"], [311, 1, 1, "", "log_prob"], [311, 2, 1, "", "padding_value"], [311, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[312, 1, 1, "", "log_prob"], [312, 2, 1, "", "mode"], [312, 1, 1, "", "rsample"], [312, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "from_stateful_net"], [315, 1, 1, "", "get_stateful_net"], [315, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[316, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[318, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[319, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[320, 1, 1, "", "entropy"], [320, 1, 1, "", "log_prob"], [320, 2, 1, "", "mode"], [320, 1, 1, "", "rsample"], [320, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[322, 1, 1, "", "default_config"], [322, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[324, 1, 1, "", "forward"], [324, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[325, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[327, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[328, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[330, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[331, 2, 1, "", "mean"], [331, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[332, 1, 1, "", "get_mode"], [332, 2, 1, "", "mean"], [332, 2, 1, "", "mode"], [332, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[333, 1, 1, "", "log_prob"], [333, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[334, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[335, 1, 1, "", "forward"]], "torchrl.modules.llm": [[336, 0, 1, "", "CategoricalSequential"], [337, 0, 1, "", "LLMOnDevice"], [338, 0, 1, "", "TransformersWrapper"], [339, 0, 1, "", "make_vllm_worker"], [340, 0, 1, "", "stateless_init_process_group"], [341, 0, 1, "", "vLLMWorker"], [342, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.CategoricalSequential": [[336, 1, 1, "", "add_module"], [336, 1, 1, "", "apply"], [336, 1, 1, "", "bfloat16"], [336, 1, 1, "", "buffers"], [336, 1, 1, "", "children"], [336, 1, 1, "", "compile"], [336, 1, 1, "", "cpu"], [336, 1, 1, "", "cuda"], [336, 1, 1, "", "double"], [336, 1, 1, "", "eval"], [336, 1, 1, "", "extra_repr"], [336, 1, 1, "", "float"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "get_buffer"], [336, 1, 1, "", "get_extra_state"], [336, 1, 1, "", "get_parameter"], [336, 1, 1, "", "get_submodule"], [336, 1, 1, "", "half"], [336, 1, 1, "", "ipu"], [336, 1, 1, "", "is_tdmodule_compatible"], [336, 1, 1, "", "load_state_dict"], [336, 1, 1, "", "modules"], [336, 1, 1, "", "mtia"], [336, 1, 1, "", "named_buffers"], [336, 1, 1, "", "named_children"], [336, 1, 1, "", "named_modules"], [336, 1, 1, "", "named_parameters"], [336, 1, 1, "", "parameters"], [336, 1, 1, "", "register_backward_hook"], [336, 1, 1, "", "register_buffer"], [336, 1, 1, "", "register_forward_hook"], [336, 1, 1, "", "register_forward_pre_hook"], [336, 1, 1, "", "register_full_backward_hook"], [336, 1, 1, "", "register_full_backward_pre_hook"], [336, 1, 1, "", "register_load_state_dict_post_hook"], [336, 1, 1, "", "register_load_state_dict_pre_hook"], [336, 1, 1, "", "register_module"], [336, 1, 1, "", "register_parameter"], [336, 1, 1, "", "register_state_dict_post_hook"], [336, 1, 1, "", "register_state_dict_pre_hook"], [336, 1, 1, "", "requires_grad_"], [336, 1, 1, "", "reset_out_keys"], [336, 1, 1, "", "reset_parameters_recursive"], [336, 1, 1, "", "select_out_keys"], [336, 1, 1, "", "set_extra_state"], [336, 1, 1, "", "set_submodule"], [336, 1, 1, "", "share_memory"], [336, 1, 1, "", "state_dict"], [336, 1, 1, "", "to"], [336, 1, 1, "", "to_empty"], [336, 1, 1, "", "train"], [336, 1, 1, "", "type"], [336, 1, 1, "", "xpu"], [336, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.TransformersWrapper": [[338, 1, 1, "", "add_module"], [338, 1, 1, "", "apply"], [338, 1, 1, "", "bfloat16"], [338, 1, 1, "", "buffers"], [338, 1, 1, "", "children"], [338, 1, 1, "", "compile"], [338, 1, 1, "", "cpu"], [338, 1, 1, "", "cuda"], [338, 1, 1, "", "double"], [338, 1, 1, "", "eval"], [338, 1, 1, "", "extra_repr"], [338, 1, 1, "", "float"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "get_buffer"], [338, 1, 1, "", "get_extra_state"], [338, 1, 1, "", "get_parameter"], [338, 1, 1, "", "get_submodule"], [338, 1, 1, "", "half"], [338, 1, 1, "", "ipu"], [338, 1, 1, "", "is_tdmodule_compatible"], [338, 1, 1, "", "load_state_dict"], [338, 1, 1, "", "modules"], [338, 1, 1, "", "mtia"], [338, 1, 1, "", "named_buffers"], [338, 1, 1, "", "named_children"], [338, 1, 1, "", "named_modules"], [338, 1, 1, "", "named_parameters"], [338, 1, 1, "", "parameters"], [338, 1, 1, "", "register_backward_hook"], [338, 1, 1, "", "register_buffer"], [338, 1, 1, "", "register_forward_hook"], [338, 1, 1, "", "register_forward_pre_hook"], [338, 1, 1, "", "register_full_backward_hook"], [338, 1, 1, "", "register_full_backward_pre_hook"], [338, 1, 1, "", "register_load_state_dict_post_hook"], [338, 1, 1, "", "register_load_state_dict_pre_hook"], [338, 1, 1, "", "register_module"], [338, 1, 1, "", "register_parameter"], [338, 1, 1, "", "register_state_dict_post_hook"], [338, 1, 1, "", "register_state_dict_pre_hook"], [338, 1, 1, "", "requires_grad_"], [338, 1, 1, "", "reset_out_keys"], [338, 1, 1, "", "reset_parameters_recursive"], [338, 1, 1, "", "select_out_keys"], [338, 1, 1, "", "set_extra_state"], [338, 1, 1, "", "set_submodule"], [338, 1, 1, "", "share_memory"], [338, 1, 1, "", "state_dict"], [338, 1, 1, "", "to"], [338, 1, 1, "", "to_empty"], [338, 1, 1, "", "train"], [338, 1, 1, "", "type"], [338, 1, 1, "", "xpu"], [338, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWorker": [[341, 1, 1, "", "check_weights_changed"]], "torchrl.modules.llm.vLLMWrapper": [[342, 1, 1, "", "add_module"], [342, 1, 1, "", "apply"], [342, 1, 1, "", "bfloat16"], [342, 1, 1, "", "buffers"], [342, 1, 1, "", "children"], [342, 1, 1, "", "compile"], [342, 1, 1, "", "cpu"], [342, 1, 1, "", "cuda"], [342, 1, 1, "", "double"], [342, 1, 1, "", "eval"], [342, 1, 1, "", "extra_repr"], [342, 1, 1, "", "float"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "get_buffer"], [342, 1, 1, "", "get_extra_state"], [342, 1, 1, "", "get_parameter"], [342, 1, 1, "", "get_submodule"], [342, 1, 1, "", "half"], [342, 1, 1, "", "ipu"], [342, 1, 1, "", "is_tdmodule_compatible"], [342, 1, 1, "", "load_state_dict"], [342, 1, 1, "", "modules"], [342, 1, 1, "", "mtia"], [342, 1, 1, "", "named_buffers"], [342, 1, 1, "", "named_children"], [342, 1, 1, "", "named_modules"], [342, 1, 1, "", "named_parameters"], [342, 1, 1, "", "parameters"], [342, 1, 1, "", "register_backward_hook"], [342, 1, 1, "", "register_buffer"], [342, 1, 1, "", "register_forward_hook"], [342, 1, 1, "", "register_forward_pre_hook"], [342, 1, 1, "", "register_full_backward_hook"], [342, 1, 1, "", "register_full_backward_pre_hook"], [342, 1, 1, "", "register_load_state_dict_post_hook"], [342, 1, 1, "", "register_load_state_dict_pre_hook"], [342, 1, 1, "", "register_module"], [342, 1, 1, "", "register_parameter"], [342, 1, 1, "", "register_state_dict_post_hook"], [342, 1, 1, "", "register_state_dict_pre_hook"], [342, 1, 1, "", "requires_grad_"], [342, 1, 1, "", "reset_out_keys"], [342, 1, 1, "", "reset_parameters_recursive"], [342, 1, 1, "", "select_out_keys"], [342, 1, 1, "", "set_extra_state"], [342, 1, 1, "", "set_submodule"], [342, 1, 1, "", "share_memory"], [342, 1, 1, "", "state_dict"], [342, 1, 1, "", "to"], [342, 1, 1, "", "to_empty"], [342, 1, 1, "", "train"], [342, 1, 1, "", "type"], [342, 1, 1, "", "xpu"], [342, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[346, 0, 1, "", "Actor"], [347, 0, 1, "", "ActorCriticOperator"], [348, 0, 1, "", "ActorCriticWrapper"], [349, 0, 1, "", "ActorValueOperator"], [350, 0, 1, "", "DecisionTransformerInferenceWrapper"], [351, 0, 1, "", "DistributionalQValueActor"], [352, 0, 1, "", "DistributionalQValueModule"], [353, 0, 1, "", "LMHeadActorValueOperator"], [354, 0, 1, "", "MultiStepActorWrapper"], [355, 0, 1, "", "ProbabilisticActor"], [356, 0, 1, "", "QValueActor"], [357, 0, 1, "", "QValueModule"], [358, 0, 1, "", "SafeModule"], [359, 0, 1, "", "SafeProbabilisticModule"], [360, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [361, 0, 1, "", "SafeSequential"], [362, 0, 1, "", "TanhModule"], [363, 0, 1, "", "ValueOperator"], [364, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[347, 1, 1, "", "get_critic_operator"], [347, 1, 1, "", "get_policy_head"], [347, 1, 1, "", "get_value_head"], [347, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[348, 1, 1, "", "get_policy_head"], [348, 1, 1, "", "get_policy_operator"], [348, 1, 1, "", "get_value_head"], [348, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[349, 1, 1, "", "get_policy_head"], [349, 1, 1, "", "get_policy_operator"], [349, 1, 1, "", "get_value_head"], [349, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[350, 1, 1, "", "forward"], [350, 1, 1, "", "mask_context"], [350, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[352, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[354, 1, 1, "", "forward"], [354, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[357, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[358, 1, 1, "", "random"], [358, 1, 1, "", "random_sample"], [358, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[359, 1, 1, "", "random"], [359, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[362, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[364, 1, 1, "", "get_reward_operator"], [364, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[365, 0, 1, "", "biased_softplus"], [366, 0, 1, "", "get_primers_from_module"], [367, 0, 1, "", "inv_softplus"], [368, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[365, 1, 1, "", "forward"]], "torchrl.objectives": [[369, 0, 1, "", "A2CLoss"], [370, 0, 1, "", "CQLLoss"], [371, 0, 1, "", "ClipPPOLoss"], [372, 0, 1, "", "CrossQLoss"], [373, 0, 1, "", "DDPGLoss"], [374, 0, 1, "", "DQNLoss"], [375, 0, 1, "", "DTLoss"], [376, 0, 1, "", "DiscreteCQLLoss"], [377, 0, 1, "", "DiscreteIQLLoss"], [378, 0, 1, "", "DiscreteSACLoss"], [379, 0, 1, "", "DistributionalDQNLoss"], [380, 0, 1, "", "DreamerActorLoss"], [381, 0, 1, "", "DreamerModelLoss"], [382, 0, 1, "", "DreamerValueLoss"], [383, 0, 1, "", "GAILLoss"], [384, 0, 1, "", "HardUpdate"], [385, 0, 1, "", "IQLLoss"], [386, 0, 1, "", "KLPENPPOLoss"], [387, 0, 1, "", "LossModule"], [388, 0, 1, "", "OnlineDTLoss"], [389, 0, 1, "", "PPOLoss"], [390, 0, 1, "", "REDQLoss"], [391, 0, 1, "", "ReinforceLoss"], [392, 0, 1, "", "SACLoss"], [393, 0, 1, "", "SoftUpdate"], [394, 0, 1, "", "TD3BCLoss"], [395, 0, 1, "", "TD3Loss"], [396, 0, 1, "", "ValueEstimators"], [397, 0, 1, "", "default_value_kwargs"], [398, 0, 1, "", "distance_loss"], [399, 0, 1, "", "group_optimizers"], [400, 0, 1, "", "hold_out_net"], [401, 0, 1, "", "hold_out_params"], [408, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[369, 4, 1, "", "default_keys"], [369, 1, 1, "", "forward"], [369, 2, 1, "", "functional"], [369, 1, 1, "", "loss_critic"], [369, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[370, 4, 1, "", "default_keys"], [370, 1, 1, "", "forward"], [370, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[371, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[372, 1, 1, "", "actor_loss"], [372, 1, 1, "", "alpha_loss"], [372, 4, 1, "", "default_keys"], [372, 1, 1, "", "forward"], [372, 1, 1, "", "load_state_dict"], [372, 1, 1, "", "make_value_estimator"], [372, 1, 1, "", "maybe_init_target_entropy"], [372, 1, 1, "", "qvalue_loss"], [372, 1, 1, "", "set_keys"], [372, 1, 1, "", "state_dict"], [372, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[373, 4, 1, "", "default_keys"], [373, 1, 1, "", "forward"], [373, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[374, 4, 1, "", "default_keys"], [374, 1, 1, "", "forward"], [374, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[375, 4, 1, "", "default_keys"], [375, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[376, 4, 1, "", "default_keys"], [376, 1, 1, "", "forward"], [376, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[377, 4, 1, "", "default_keys"], [377, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[378, 4, 1, "", "default_keys"], [378, 1, 1, "", "forward"], [378, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[379, 4, 1, "", "default_keys"], [379, 1, 1, "", "forward"], [379, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[380, 4, 1, "", "default_keys"], [380, 1, 1, "", "forward"], [380, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[381, 4, 1, "", "default_keys"], [381, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[382, 4, 1, "", "default_keys"], [382, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[383, 4, 1, "", "default_keys"], [383, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[385, 4, 1, "", "default_keys"], [385, 1, 1, "", "forward"], [385, 1, 1, "", "loss_value_diff"], [385, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[386, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[387, 1, 1, "", "convert_to_functional"], [387, 1, 1, "", "forward"], [387, 1, 1, "", "from_stateful_net"], [387, 2, 1, "", "functional"], [387, 1, 1, "", "get_stateful_net"], [387, 1, 1, "", "make_value_estimator"], [387, 1, 1, "", "named_parameters"], [387, 1, 1, "", "parameters"], [387, 1, 1, "", "reset_parameters_recursive"], [387, 1, 1, "", "set_keys"], [387, 2, 1, "", "value_estimator"], [387, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[388, 4, 1, "", "default_keys"], [388, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[389, 4, 1, "", "default_keys"], [389, 1, 1, "", "forward"], [389, 2, 1, "", "functional"], [389, 1, 1, "", "loss_critic"], [389, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[390, 4, 1, "", "default_keys"], [390, 1, 1, "", "forward"], [390, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[391, 4, 1, "", "default_keys"], [391, 1, 1, "", "forward"], [391, 2, 1, "", "functional"], [391, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[392, 4, 1, "", "default_keys"], [392, 1, 1, "", "forward"], [392, 1, 1, "", "load_state_dict"], [392, 1, 1, "", "make_value_estimator"], [392, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[394, 1, 1, "", "actor_loss"], [394, 4, 1, "", "default_keys"], [394, 1, 1, "", "forward"], [394, 1, 1, "", "make_value_estimator"], [394, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[395, 4, 1, "", "default_keys"], [395, 1, 1, "", "forward"], [395, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[402, 0, 1, "", "GRPOLoss"], [403, 0, 1, "", "GRPOLossOutput"], [404, 0, 1, "", "MCAdvantage"], [405, 0, 1, "", "SFTLoss"], [406, 0, 1, "", "SFTLossOutput"]], "torchrl.objectives.llm.GRPOLoss": [[402, 1, 1, "", "add_module"], [402, 1, 1, "", "apply"], [402, 1, 1, "", "bfloat16"], [402, 1, 1, "", "buffers"], [402, 1, 1, "", "children"], [402, 1, 1, "", "compile"], [402, 1, 1, "", "convert_to_functional"], [402, 1, 1, "", "cpu"], [402, 1, 1, "", "cuda"], [402, 4, 1, "", "default_keys"], [402, 1, 1, "", "double"], [402, 1, 1, "", "eval"], [402, 1, 1, "", "extra_repr"], [402, 1, 1, "", "float"], [402, 1, 1, "", "forward"], [402, 1, 1, "", "from_stateful_net"], [402, 2, 1, "", "functional"], [402, 1, 1, "", "get_buffer"], [402, 1, 1, "", "get_extra_state"], [402, 1, 1, "", "get_parameter"], [402, 1, 1, "", "get_stateful_net"], [402, 1, 1, "", "get_submodule"], [402, 1, 1, "", "half"], [402, 1, 1, "", "ipu"], [402, 1, 1, "", "is_tdmodule_compatible"], [402, 1, 1, "", "load_state_dict"], [402, 1, 1, "", "loss_critic"], [402, 1, 1, "", "make_value_estimator"], [402, 1, 1, "", "modules"], [402, 1, 1, "", "mtia"], [402, 1, 1, "", "named_buffers"], [402, 1, 1, "", "named_children"], [402, 1, 1, "", "named_modules"], [402, 1, 1, "", "named_parameters"], [402, 1, 1, "", "parameters"], [402, 1, 1, "", "register_backward_hook"], [402, 1, 1, "", "register_buffer"], [402, 1, 1, "", "register_forward_hook"], [402, 1, 1, "", "register_forward_pre_hook"], [402, 1, 1, "", "register_full_backward_hook"], [402, 1, 1, "", "register_full_backward_pre_hook"], [402, 1, 1, "", "register_load_state_dict_post_hook"], [402, 1, 1, "", "register_load_state_dict_pre_hook"], [402, 1, 1, "", "register_module"], [402, 1, 1, "", "register_parameter"], [402, 1, 1, "", "register_state_dict_post_hook"], [402, 1, 1, "", "register_state_dict_pre_hook"], [402, 1, 1, "", "requires_grad_"], [402, 1, 1, "", "reset_out_keys"], [402, 1, 1, "", "reset_parameters_recursive"], [402, 1, 1, "", "select_out_keys"], [402, 1, 1, "", "set_extra_state"], [402, 1, 1, "", "set_keys"], [402, 1, 1, "", "set_submodule"], [402, 1, 1, "", "share_memory"], [402, 1, 1, "", "state_dict"], [402, 1, 1, "", "to"], [402, 1, 1, "", "to_empty"], [402, 1, 1, "", "train"], [402, 1, 1, "", "type"], [402, 2, 1, "", "value_estimator"], [402, 2, 1, "", "vmap_randomness"], [402, 1, 1, "", "xpu"], [402, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[403, 2, 1, "", "device"], [403, 1, 1, "", "dumps"], [403, 1, 1, "", "fields"], [403, 1, 1, "", "from_tensordict"], [403, 1, 1, "", "get"], [403, 1, 1, "", "load"], [403, 1, 1, "", "load_"], [403, 1, 1, "", "load_memmap"], [403, 1, 1, "", "load_state_dict"], [403, 1, 1, "", "memmap"], [403, 1, 1, "", "memmap_"], [403, 1, 1, "", "memmap_like"], [403, 1, 1, "", "memmap_refresh_"], [403, 1, 1, "", "save"], [403, 1, 1, "", "set"], [403, 1, 1, "", "state_dict"], [403, 1, 1, "", "to_tensordict"], [403, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[404, 1, 1, "", "add_module"], [404, 1, 1, "", "apply"], [404, 1, 1, "", "bfloat16"], [404, 1, 1, "", "buffers"], [404, 1, 1, "", "children"], [404, 1, 1, "", "close"], [404, 1, 1, "", "compile"], [404, 2, 1, "", "container"], [404, 1, 1, "", "cpu"], [404, 1, 1, "", "cuda"], [404, 1, 1, "", "double"], [404, 1, 1, "", "eval"], [404, 1, 1, "", "extra_repr"], [404, 1, 1, "", "float"], [404, 1, 1, "", "forward"], [404, 1, 1, "", "get_buffer"], [404, 1, 1, "", "get_extra_state"], [404, 1, 1, "", "get_parameter"], [404, 1, 1, "", "get_submodule"], [404, 1, 1, "", "half"], [404, 1, 1, "", "init"], [404, 1, 1, "", "inv"], [404, 1, 1, "", "ipu"], [404, 1, 1, "", "load_state_dict"], [404, 1, 1, "", "modules"], [404, 1, 1, "", "mtia"], [404, 1, 1, "", "named_buffers"], [404, 1, 1, "", "named_children"], [404, 1, 1, "", "named_modules"], [404, 1, 1, "", "named_parameters"], [404, 1, 1, "", "parameters"], [404, 2, 1, "", "parent"], [404, 1, 1, "", "register_backward_hook"], [404, 1, 1, "", "register_buffer"], [404, 1, 1, "", "register_forward_hook"], [404, 1, 1, "", "register_forward_pre_hook"], [404, 1, 1, "", "register_full_backward_hook"], [404, 1, 1, "", "register_full_backward_pre_hook"], [404, 1, 1, "", "register_load_state_dict_post_hook"], [404, 1, 1, "", "register_load_state_dict_pre_hook"], [404, 1, 1, "", "register_module"], [404, 1, 1, "", "register_parameter"], [404, 1, 1, "", "register_state_dict_post_hook"], [404, 1, 1, "", "register_state_dict_pre_hook"], [404, 1, 1, "", "requires_grad_"], [404, 1, 1, "", "set_extra_state"], [404, 1, 1, "", "set_submodule"], [404, 1, 1, "", "share_memory"], [404, 1, 1, "", "state_dict"], [404, 1, 1, "", "to"], [404, 1, 1, "", "to_empty"], [404, 1, 1, "", "train"], [404, 1, 1, "", "transform_action_spec"], [404, 1, 1, "", "transform_done_spec"], [404, 1, 1, "", "transform_env_batch_size"], [404, 1, 1, "", "transform_env_device"], [404, 1, 1, "", "transform_input_spec"], [404, 1, 1, "", "transform_observation_spec"], [404, 1, 1, "", "transform_output_spec"], [404, 1, 1, "", "transform_reward_spec"], [404, 1, 1, "", "transform_state_spec"], [404, 1, 1, "", "type"], [404, 1, 1, "", "xpu"], [404, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLoss": [[405, 1, 1, "", "add_module"], [405, 1, 1, "", "apply"], [405, 1, 1, "", "bfloat16"], [405, 1, 1, "", "buffers"], [405, 1, 1, "", "children"], [405, 1, 1, "", "compile"], [405, 1, 1, "", "convert_to_functional"], [405, 1, 1, "", "cpu"], [405, 1, 1, "", "cuda"], [405, 4, 1, "", "default_keys"], [405, 1, 1, "", "double"], [405, 1, 1, "", "eval"], [405, 1, 1, "", "extra_repr"], [405, 1, 1, "", "float"], [405, 1, 1, "", "forward"], [405, 1, 1, "", "from_stateful_net"], [405, 2, 1, "", "functional"], [405, 1, 1, "", "get_buffer"], [405, 1, 1, "", "get_extra_state"], [405, 1, 1, "", "get_parameter"], [405, 1, 1, "", "get_stateful_net"], [405, 1, 1, "", "get_submodule"], [405, 1, 1, "", "half"], [405, 1, 1, "", "ipu"], [405, 1, 1, "", "is_tdmodule_compatible"], [405, 1, 1, "", "load_state_dict"], [405, 1, 1, "", "make_value_estimator"], [405, 1, 1, "", "modules"], [405, 1, 1, "", "mtia"], [405, 1, 1, "", "named_buffers"], [405, 1, 1, "", "named_children"], [405, 1, 1, "", "named_modules"], [405, 1, 1, "", "named_parameters"], [405, 1, 1, "", "parameters"], [405, 1, 1, "", "register_backward_hook"], [405, 1, 1, "", "register_buffer"], [405, 1, 1, "", "register_forward_hook"], [405, 1, 1, "", "register_forward_pre_hook"], [405, 1, 1, "", "register_full_backward_hook"], [405, 1, 1, "", "register_full_backward_pre_hook"], [405, 1, 1, "", "register_load_state_dict_post_hook"], [405, 1, 1, "", "register_load_state_dict_pre_hook"], [405, 1, 1, "", "register_module"], [405, 1, 1, "", "register_parameter"], [405, 1, 1, "", "register_state_dict_post_hook"], [405, 1, 1, "", "register_state_dict_pre_hook"], [405, 1, 1, "", "requires_grad_"], [405, 1, 1, "", "reset_out_keys"], [405, 1, 1, "", "reset_parameters_recursive"], [405, 1, 1, "", "select_out_keys"], [405, 1, 1, "", "set_extra_state"], [405, 1, 1, "", "set_keys"], [405, 1, 1, "", "set_submodule"], [405, 1, 1, "", "share_memory"], [405, 1, 1, "", "state_dict"], [405, 1, 1, "", "to"], [405, 1, 1, "", "to_empty"], [405, 1, 1, "", "train"], [405, 1, 1, "", "type"], [405, 2, 1, "", "value_estimator"], [405, 2, 1, "", "vmap_randomness"], [405, 1, 1, "", "xpu"], [405, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLossOutput": [[406, 2, 1, "", "device"], [406, 1, 1, "", "dumps"], [406, 1, 1, "", "fields"], [406, 1, 1, "", "from_tensordict"], [406, 1, 1, "", "get"], [406, 1, 1, "", "load"], [406, 1, 1, "", "load_"], [406, 1, 1, "", "load_memmap"], [406, 1, 1, "", "load_state_dict"], [406, 1, 1, "", "memmap"], [406, 1, 1, "", "memmap_"], [406, 1, 1, "", "memmap_like"], [406, 1, 1, "", "memmap_refresh_"], [406, 1, 1, "", "save"], [406, 1, 1, "", "set"], [406, 1, 1, "", "state_dict"], [406, 1, 1, "", "to_tensordict"], [406, 1, 1, "", "unbind"]], "torchrl.objectives.multiagent": [[407, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[407, 4, 1, "", "default_keys"], [407, 1, 1, "", "forward"], [407, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[409, 0, 1, "", "GAE"], [410, 0, 1, "", "TD0Estimator"], [411, 0, 1, "", "TD1Estimator"], [412, 0, 1, "", "TDLambdaEstimator"], [413, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[409, 1, 1, "", "forward"], [409, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[410, 1, 1, "", "forward"], [410, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[411, 1, 1, "", "forward"], [411, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[412, 1, 1, "", "forward"], [412, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[413, 4, 1, "", "default_keys"], [413, 1, 1, "", "forward"], [413, 1, 1, "", "set_keys"], [413, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[414, 0, 1, "", "generalized_advantage_estimate"], [415, 0, 1, "", "reward2go"], [416, 0, 1, "", "td0_advantage_estimate"], [417, 0, 1, "", "td0_return_estimate"], [418, 0, 1, "", "td1_advantage_estimate"], [419, 0, 1, "", "td1_return_estimate"], [420, 0, 1, "", "td_lambda_advantage_estimate"], [421, 0, 1, "", "td_lambda_return_estimate"], [422, 0, 1, "", "vec_generalized_advantage_estimate"], [423, 0, 1, "", "vec_td1_advantage_estimate"], [424, 0, 1, "", "vec_td1_return_estimate"], [425, 0, 1, "", "vec_td_lambda_advantage_estimate"], [426, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[427, 3, 1, "", "PixelRenderTransform"], [428, 3, 1, "", "TensorDictRecorder"], [429, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[430, 3, 1, "", "Logger"], [432, 3, 1, "", "generate_exp_name"], [433, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[431, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[434, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[435, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[436, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[438, 0, 1, "", "BatchSubSampler"], [439, 0, 1, "", "ClearCudaCache"], [440, 0, 1, "", "CountFramesLog"], [441, 0, 1, "", "LogScalar"], [442, 0, 1, "", "LogValidationReward"], [443, 0, 1, "", "OptimizerHook"], [444, 0, 1, "", "ReplayBufferTrainer"], [445, 0, 1, "", "RewardNormalizer"], [446, 0, 1, "", "SelectKeys"], [447, 0, 1, "", "Trainer"], [448, 0, 1, "", "TrainerHookBase"], [449, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[438, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[439, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[440, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[441, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[442, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[443, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[444, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[445, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[446, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[447, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[448, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[449, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[450, 3, 1, "", "correct_for_frame_skip"], [451, 3, 1, "", "get_stats_random_rollout"], [452, 3, 1, "", "make_collector_offpolicy"], [453, 3, 1, "", "make_collector_onpolicy"], [454, 3, 1, "", "make_dqn_loss"], [455, 3, 1, "", "make_replay_buffer"], [456, 3, 1, "", "make_target_updater"], [457, 3, 1, "", "make_trainer"], [458, 3, 1, "", "parallel_env_constructor"], [459, 3, 1, "", "sync_async_collector"], [460, 3, 1, "", "sync_sync_collector"], [461, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 466, 467, 468, 469, 471, 472, 473, 475, 477, 483, 485, 486, 487, 491, 492], "instal": [0, 6, 7, 483, 491], "get": [0, 476, 477, 478, 479, 480, 481], "start": [0, 476, 477, 478, 479, 480, 481, 483], "tutori": [0, 473, 485, 486], "basic": [0, 483, 489], "intermedi": [0, 8], "advanc": 0, "refer": [0, 463], "knowledg": [0, 464], "base": [0, 2, 7, 464, 475], "indic": 0, "tabl": 0, "collector": [1, 465, 471, 472, 473, 474, 479, 481, 485, 486, 491], "packag": [1, 2, 3, 466, 467, 468, 469], "batch": [1, 3, 471, 487, 489], "size": [1, 3, 471, 489], "polici": [1, 2, 4, 467, 471, 473, 474, 475, 477, 481, 484, 485, 486, 487], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 466], "environ": [1, 3, 4, 6, 7, 465, 471, 472, 473, 474, 476, 481, 483, 484, 485, 486, 487, 491, 492], "send": 1, "receiv": 1, "model": [1, 2, 4, 466, 471, 472, 474, 475, 478, 488, 491], "weightupdat": 1, "extend": 1, "updat": [1, 471], "class": [1, 3, 465, 487, 491], "replai": [1, 2, 3, 471, 472, 473, 474, 479, 481, 485, 486, 489, 491], "buffer": [1, 2, 3, 471, 472, 473, 474, 479, 481, 485, 486, 489, 491], "interoper": 1, "run": [1, 475, 476, 492], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 465, 471, 472, 473, 479, 481, 485, 486, 491], "helper": [1, 3, 483], "function": [1, 4, 467, 472, 473, 478, 485, 486, 491], "compos": [2, 223], "support": 2, "type": 2, "choos": 2, "storag": [2, 119, 471, 479, 489], "sampl": [2, 489], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 472, 489], "trajectori": [2, 489], "checkpoint": [2, 468], "episod": [2, 4], "format": 2, "ted": [2, 476], "The": [2, 471], "rational": 2, "behind": 2, "structur": [2, 465, 489], "A": [2, 472, 489], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 466, 489, 491], "special": [2, 477, 491], "case": 2, "footnot": 2, "multi": [2, 3, 466, 467, 484, 485, 486], "agent": [2, 3, 4, 466, 467, 485, 486], "present": 2, "rnn": 2, "transform": [2, 3, 268, 465, 471, 473, 476, 485, 486, 487, 489, 491, 492], "step": [2, 3, 471, 473, 476, 479, 483, 485, 486, 489, 492], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 83], "numer": 2, "subclass": [2, 3], "categor": [2, 39], "tree": [2, 85], "forest": 2, "tensordictmap": [2, 78], "mctsforest": [2, 51], "larg": 2, "languag": 2, "reinforc": [2, 467, 473, 485, 486], "learn": [2, 4, 466, 473, 485, 486], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 465, 466, 467, 468, 485], "env": [3, 487, 491, 492], "spec": [3, 487, 492], "lock": 3, "method": [3, 471], "partial": 3, "reset": [3, 487, 492], "vector": [3, 491], "async": [3, 491], "exampl": [3, 11, 472, 489], "custom": [3, 11, 487, 489], "nativ": 3, "auto": 3, "dynam": [3, 4, 489], "forward": [3, 4, 471], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 489], "expos": 3, "outsid": 3, "world": 3, "design": [3, 481], "your": [3, 4, 6, 471, 475, 481, 487], "own": [3, 481], "tip": 3, "us": [3, 4, 6, 9, 467, 474, 488, 489, 491], "clone": [3, 7], "mask": 3, "action": [3, 4, 467, 474, 487], "record": [3, 468, 471, 480], "video": [3, 11, 480], "domain": [3, 466], "specif": [3, 466, 484], "librari": [3, 491], "thing": [4, 471, 487], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 476, 478, 491], "gener": [4, 11, 466], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 466], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 471, 472, 478, 481], "return": [4, 467], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 491], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 484], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 471, 472, 473], "standard": 4, "explor": [4, 466, 471, 472, 477], "valu": [4, 466, 467, 471, 473, 474, 477], "loss": [4, 471, 472, 473, 474, 481, 485, 486], "earli": 4, "train": [4, 8, 467, 471, 473, 474, 475, 478, 481, 485, 486, 487], "roughli": 4, "uniformli": 4, "random": [4, 467, 485, 486], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 472], "increas": 4, "an": [4, 473, 474, 476, 487], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 471], "space": 4, "effect": [4, 487], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 475], "gym": [5, 491, 492], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 471], "render": [7, 11, 481, 485, 486, 492], "all": 7, "new": 7, "bindindg": 7, "2": [7, 483], "1": [7, 483], "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 471], "pytorch": [8, 9, 10, 475], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 487], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multiprocessedweightupdat": 14, "multisyncdatacollector": 15, "multiasyncdatacollector": 16, "rayweightupdat": 17, "syncdatacollector": 18, "vanillaweightupdat": 19, "weightupdaterbas": 20, "asyncdatacollector": 21, "distributeddatacollector": 22, "distributedsyncdatacollector": 23, "distributedweightupdat": 24, "rpcdatacollector": 25, "rpcweightupdat": 26, "raycollector": 27, "submitit_delayed_launch": 28, "llmcollector": 29, "rayllmcollector": 30, "vllmupdat": 31, "split_trajectori": 32, "adaptiveklcontrol": 33, "binari": [34, 475], "binarydiscretetensorspec": 35, "binarytodecim": 36, "bound": 37, "boundedtensorspec": 38, "composit": 40, "compositespec": 41, "constantklcontrol": 42, "densifyreward": 43, "discretetensorspec": 44, "flat2t": 45, "h5combin": 46, "h5split": 47, "hashtoint": 48, "lazystackedcompositespec": 49, "lazystackedtensorspec": 50, "multicategor": 52, "multidiscretetensorspec": 53, "multionehot": 54, "multionehotdiscretetensorspec": 55, "multistep": 56, "nested2t": 57, "nontensor": 58, "nontensorspec": 59, "onehot": 60, "onehotdiscretetensorspec": 61, "pairwisedataset": 62, "prioritizedreplaybuff": 63, "promptdata": 64, "prompttensordicttoken": 65, "querymodul": 66, "randomprojectionhash": 67, "rayreplaybuff": 68, "remotetensordictreplaybuff": 69, "replaybuff": 70, "rewarddata": 71, "rolloutfrommodel": 72, "siphash": 73, "stack": [74, 259], "stackedcomposit": 75, "ted2flat": 76, "ted2nest": 77, "tensordictprioritizedreplaybuff": 79, "tensordictreplaybuff": 80, "tensordicttoken": 81, "tensormap": 82, "tokenizeddatasetload": 84, "unbound": 86, "unboundedcontinu": 87, "unboundedcontinuoustensorspec": 88, "unboundeddiscret": 89, "unboundeddiscretetensorspec": 90, "check_no_exclusive_kei": 91, "consolidate_spec": 92, "contains_lazy_spec": 93, "create_infinite_iter": 94, "get_dataload": 95, "contentbas": 96, "histori": 97, "llmdata": 98, "topkrewardselector": 99, "flatstoragecheckpoint": 100, "h5storagecheckpoint": 101, "immutabledatasetwrit": 102, "lazymemmapstorag": 103, "lazystackstorag": 104, "lazytensorstorag": 105, "liststorag": 106, "liststoragecheckpoint": 107, "nestedstoragecheckpoint": 108, "prioritizedsampl": 109, "prioritizedslicesampl": 110, "randomsampl": 111, "replaybufferensembl": 112, "roundrobinwrit": 113, "sampler": 114, "samplerensembl": 115, "samplerwithoutreplac": 116, "slicesampl": 117, "slicesamplerwithoutreplac": 118, "storagecheckpointerbas": 120, "storageensembl": 121, "storageensemblecheckpoint": 122, "tensordictmaxvaluewrit": 123, "tensordictroundrobinwrit": 124, "tensorstorag": 125, "tensorstoragecheckpoint": 126, "writer": 127, "writerensembl": 128, "asyncenvpool": 129, "braxenv": 130, "braxwrapp": 131, "chessenv": 132, "dmcontrolenv": 133, "dmcontrolwrapp": 134, "envbas": [135, 487], "envcreat": 136, "envmetadata": 137, "gymenv": 138, "gymlikeenv": 139, "gymwrapp": 140, "habitatenv": 141, "isaacgymenv": 142, "isaacgymwrapp": 143, "isaaclabwrapp": 144, "jumanjienv": 145, "jumanjiwrapp": 146, "llmhashingenv": [147, 189], "mogymenv": 148, "mogymwrapp": 149, "marlgroupmaptyp": 150, "meltingpotenv": 151, "meltingpotwrapp": 152, "modelbasedenvbas": 153, "multithreadedenv": 154, "multithreadedenvwrapp": 155, "openmlenv": 156, "openspielenv": 157, "openspielwrapp": 158, "parallelenv": 159, "pendulumenv": 160, "pettingzooenv": 161, "pettingzoowrapp": 162, "processorasyncenvpool": 163, "randompolici": 164, "robohiveenv": 165, "smacv2env": 166, "smacv2wrapp": 167, "serialenv": 168, "threadingasyncenvpool": 169, "tictactoeenv": 170, "unitymlagentsenv": 171, "unitymlagentswrapp": 172, "vmasenv": 173, "vmaswrapp": 174, "check_env_spec": 175, "check_marl_group": 176, "exploration_typ": 177, "get_available_librari": 178, "gym_backend": 179, "chatenv": 180, "datasetchatenv": 181, "gsm8kenv": 182, "gsm8kpreparequest": 183, "gsm8krewardpars": 184, "ifevalenv": 185, "ifevalscoredata": 186, "ifevalscor": 187, "llmenv": 188, "mlgymwrapp": 190, "make_gsm8k_env": 191, "make_mlgym": 192, "browsertransform": 193, "dataloadingprim": 194, "klrewardtransform": [195, 239], "mcptooltransform": 196, "policyvers": 197, "pythoninterpret": 198, "retrievelogprob": 199, "templatetransform": 200, "token": [201, 266], "as_nested_tensor": 202, "as_padded_tensor": 203, "make_composite_from_td": 204, "dreamerdecod": 205, "dreamerenv": 206, "register_gym_spec_convers": 207, "set_exploration_typ": 208, "set_gym_backend": 209, "step_mdp": 210, "terminated_or_trunc": 211, "actiondiscret": 212, "actionmask": 213, "autoresetenv": 214, "autoresettransform": 215, "batchsizetransform": 216, "binarizereward": 217, "burnintransform": 218, "catfram": [219, 489], "cattensor": 220, "centercrop": 221, "cliptransform": 222, "conditionalpolicyswitch": 224, "conditionalskip": 225, "crop": 226, "dtypecasttransform": 227, "devicecasttransform": 228, "discreteactionproject": 229, "doubletofloat": 230, "endoflifetransform": 231, "excludetransform": 232, "finitetensordictcheck": 233, "flattenobserv": 234, "frameskiptransform": 235, "grayscal": 236, "hash": 237, "inittrack": 238, "linearisereward": 240, "multiact": 241, "noopresetenv": 242, "observationnorm": 243, "observationtransform": 244, "permutetransform": 245, "pinmemorytransform": 246, "r3mtransform": 247, "randomcroptensordict": 248, "removeemptyspec": 249, "renametransform": 250, "resiz": 251, "reward2gotransform": 252, "rewardclip": 253, "rewardsc": 254, "rewardsum": 255, "selecttransform": 256, "signtransform": 257, "squeezetransform": 258, "stepcount": 260, "targetreturn": 261, "tensordictprim": 262, "timemaxpool": 263, "timer": 264, "totensorimag": 265, "trajcount": 267, "transformedenv": 269, "unarytransform": 270, "unsqueezetransform": 271, "vc1transform": 272, "viprewardtransform": 273, "viptransform": 274, "vecgymenvtransform": 275, "vecnorm": [276, 492], "vecnormv2": 277, "gsdenois": 278, "multisteptransform": 279, "implement_for": 280, "additivegaussianmodul": 281, "batchrenorm1d": 282, "cemplann": 283, "consistentdropout": 284, "consistentdropoutmodul": 285, "conv3dnet": 286, "convnet": 287, "dtactor": 288, "ddpgcnnactor": 289, "ddpgcnnqnet": 290, "ddpgmlpactor": 291, "ddpgmlpqnet": 292, "decisiontransform": 293, "delta": 294, "distributionaldqnnet": 295, "distributionalqvaluehook": 296, "dreameractor": 297, "duelingcnndqnet": 298, "egreedymodul": 299, "gru": 300, "grucel": 301, "grumodul": 302, "independentnorm": 303, "llmmaskedcategor": 304, "lstm": [305, 474], "lstmcell": 306, "lstmmodul": 307, "mlp": [308, 474], "mpcplannerbas": 309, "mppiplann": 310, "maskedcategor": 311, "maskedonehotcategor": 312, "multiagentconvnet": 313, "multiagentmlp": 314, "multiagentnetbas": 315, "noisylazylinear": 316, "noisylinear": 317, "obsdecod": 318, "obsencod": 319, "onehotcategor": 320, "onehotordin": 321, "onlinedtactor": 322, "ordin": 323, "ornsteinuhlenbeckprocessmodul": 324, "qmixer": [325, 467], "qvaluehook": 326, "rssmposterior": 327, "rssmprior": 328, "squeeze2dlay": 329, "squeezelay": 330, "tanhdelta": 331, "tanhnorm": 332, "truncatednorm": 333, "vdnmixer": 334, "vmapmodul": 335, "categoricalsequenti": 336, "llmondevic": 337, "transformerswrapp": 338, "make_vllm_work": 339, "stateless_init_process_group": 340, "vllmworker": 341, "vllmwrapper": 342, "recurrent_mod": 343, "reset_nois": 344, "set_recurrent_mod": 345, "actor": [346, 466, 471, 477], "actorcriticoper": 347, "actorcriticwrapp": 348, "actorvalueoper": 349, "decisiontransformerinferencewrapp": 350, "distributionalqvalueactor": 351, "distributionalqvaluemodul": 352, "lmheadactorvalueoper": 353, "multistepactorwrapp": 354, "probabilisticactor": 355, "qvalueactor": [356, 466], "qvaluemodul": 357, "safemodul": [358, 466], "safeprobabilisticmodul": 359, "safeprobabilistictensordictsequenti": 360, "safesequenti": 361, "tanhmodul": 362, "valueoper": 363, "worldmodelwrapp": 364, "biased_softplu": 365, "get_primers_from_modul": 366, "inv_softplu": 367, "map": [368, 485], "a2closs": 369, "cqlloss": 370, "clipppoloss": 371, "crossqloss": 372, "ddpgloss": 373, "dqnloss": 374, "dtloss": 375, "discretecqlloss": 376, "discreteiqlloss": 377, "discretesacloss": 378, "distributionaldqnloss": 379, "dreameractorloss": 380, "dreamermodelloss": 381, "dreamervalueloss": 382, "gailloss": 383, "hardupd": 384, "iqlloss": 385, "klpenppoloss": 386, "lossmodul": [387, 471, 478], "onlinedtloss": 388, "ppoloss": 389, "redqloss": 390, "reinforceloss": 391, "sacloss": 392, "softupd": 393, "td3bcloss": 394, "td3loss": 395, "valueestim": 396, "default_value_kwarg": 397, "distance_loss": 398, "group_optim": 399, "hold_out_net": 400, "hold_out_param": 401, "grpoloss": 402, "grpolossoutput": 403, "mcadvantag": 404, "sftloss": 405, "sftlossoutput": 406, "qmixerloss": 407, "next_state_valu": 408, "gae": 409, "td0estim": 410, "td1estim": 411, "tdlambdaestim": 412, "valueestimatorbas": 413, "generalized_advantage_estim": 414, "reward2go": 415, "td0_advantage_estim": 416, "td0_return_estim": 417, "td1_advantage_estim": 418, "td1_return_estim": 419, "td_lambda_advantage_estim": 420, "td_lambda_return_estim": 421, "vec_generalized_advantage_estim": 422, "vec_td1_advantage_estim": 423, "vec_td1_return_estim": 424, "vec_td_lambda_advantage_estim": 425, "vec_td_lambda_return_estim": 426, "pixelrendertransform": 427, "tensordictrecord": 428, "videorecord": 429, "logger": [430, 468, 480, 481], "csvlogger": 431, "generate_exp_nam": 432, "get_logg": 433, "mlflowlogg": 434, "tensorboardlogg": 435, "wandblogg": 436, "set_auto_unwrap_transformed_env": 437, "batchsubsampl": 438, "clearcudacach": 439, "countframeslog": 440, "logscalar": 441, "logvalidationreward": 442, "optimizerhook": 443, "replaybuffertrain": 444, "rewardnorm": 445, "selectkei": 446, "trainer": [447, 468, 472], "trainerhookbas": 448, "updateweight": 449, "correct_for_frame_skip": 450, "get_stats_random_rollout": 451, "make_collector_offpolici": 452, "make_collector_onpolici": 453, "make_dqn_loss": 454, "make_replay_buff": 455, "make_target_updat": 456, "make_train": 457, "parallel_env_constructor": 458, "sync_async_collector": 459, "sync_sync_collector": 460, "transformed_env_constructor": 461, "readm": [462, 482], "tuto": [462, 482], "api": 463, "contribut": [464, 491], "content": 464, "llm": [465, 483], "interfac": 465, "avail": 465, "modul": [465, 466, 471, 474, 475, 477, 481, 491], "wrapper": [465, 466, 477], "object": [465, 467, 471, 478, 491], "grpo": 465, "sft": 465, "tensordictmodul": [466, 475, 477, 491], "probabilist": [466, 477], "q": [466, 472, 474, 477], "oper": 466, "join": 466, "hook": [466, 468, 472], "regular": 466, "planner": 466, "torch": 467, "vmap": [467, 491], "dqn": [467, 472, 474], "ddpg": [467, 471, 485], "sac": 467, "redq": 467, "crossq": 467, "iql": 467, "cql": 467, "gail": 467, "dt": 467, "td3": 467, "bc": 467, "ppo": [467, 473, 486], "head": 467, "a2c": 467, "dreamer": 467, "builder": 468, "_util": 469, "comput": [470, 472, 487, 490], "time": [470, 471, 490], "code": [471, 487], "overview": [471, 474], "setup": [471, 474, 483], "__init__": 471, "estim": 471, "put": 471, "togeth": [471, 487], "call": 471, "parallel": [471, 484, 492], "execut": [471, 483, 484, 487], "stat": 471, "build": [471, 472, 481, 483, 489], "evalu": 471, "construct": 471, "target": [471, 472, 478], "network": [471, 472, 473, 474, 477, 485, 486], "experi": [471, 487], "result": [471, 473, 483, 485, 486], "conclus": [471, 472, 473, 474, 475, 483, 485, 486, 487, 489], "next": [471, 473, 476, 479, 485, 486, 489], "deep": 472, "collect": [472, 473, 479], "paramet": [472, 473, 478], "hyperparamet": [472, 473, 485, 486], "regist": 472, "possibl": 472, "improv": 472, "defin": [473, 485, 486], "loop": [473, 474, 475, 481, 485, 486, 487], "recurr": [474, 475], "convolut": 474, "select": 474, "further": [474, 478], "read": 474, "export": 475, "introduct": [475, 491], "fast": 475, "recap": 475, "simpl": [475, 487], "stochast": 475, "aotinductor": 475, "free": 475, "c": 475, "onnx": 475, "rollout": [475, 476, 484, 485, 486, 487, 492], "creat": 476, "s": [477, 478], "output": 478, "consider": 478, "log": 480, "first": 481, "tool": 483, "enabl": 483, "configur": 483, "3": 483, "interact": 483, "4": 483, "perform": 483, "search": 483, "5": 483, "extract": 483, "divers": 484, "competit": 485, "group": 485, "critic": [485, 486], "pendulum": 487, "write": 487, "_step": 487, "simul": 487, "_reset": 487, "metadata": 487, "_spec": 487, "shape": 487, "seed": [487, 492], "wrap": 487, "test": 487, "our": 487, "pretrain": 488, "vanilla": 489, "integr": 489, "tensorclass": 489, "other": 489, "pytre": 489, "iter": 489, "over": 489, "fix": 489, "priorit": 489, "save": 489, "raw": 489, "imag": 489, "more": 489, "complex": 489, "config": 491, "sequenc": 491, "program": 491, "ensembl": 491, "meta": 491, "sync": 491, "multiprocess": 491, "frame_skip": 492, "deepmind": 492, "control": 492, "devic": 492, "close": 492, "access": 492, "attribut": 492, "kwarg": 492}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})