Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.LLMData", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.CategoricalSequential", "reference/generated/torchrl.modules.llm.LLMOnDevice", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.vLLMWorker", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.LLMData.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.CategoricalSequential.rst", "reference/generated/torchrl.modules.llm.LLMOnDevice.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.vLLMWorker.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "vLLMUpdater", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "ContentBase", "History", "LLMData", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "DataLoadingPrimer", "KLRewardTransform", "PythonInterpreter", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "CategoricalSequential", "LLMOnDevice", "TransformersWrapper", "make_vllm_worker", "stateless_init_process_group", "vLLMWorker", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 100, 101, 102, 103, 104, 108, 110, 111, 113, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 144, 145, 151, 152, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 215, 221, 223, 224, 227, 231, 236, 237, 241, 242, 243, 244, 246, 255, 256, 257, 258, 259, 261, 262, 263, 266, 269, 270, 271, 273, 276, 280, 281, 283, 284, 285, 286, 288, 293, 294, 296, 298, 300, 301, 302, 306, 307, 309, 317, 322, 323, 325, 329, 331, 333, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 357, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 418, 420, 423, 427, 433, 434, 438, 439, 442, 449, 450, 451, 452, 455, 456, 457, 458, 462, 463, 466, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481, 482], "open": [0, 5, 7, 61, 63, 70, 84, 95, 96, 97, 101, 184, 274, 333, 396, 463, 475, 476, 481], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "reinforc": [0, 3, 9, 149, 150, 179, 213, 271, 278, 283, 284, 285, 286, 290, 317, 345, 362, 363, 365, 368, 369, 370, 372, 377, 378, 384, 385, 386, 387, 454, 461, 463, 467, 468, 473, 477, 480, 481], "learn": [0, 3, 7, 8, 9, 22, 55, 133, 149, 150, 154, 157, 166, 179, 213, 271, 278, 283, 284, 285, 286, 290, 303, 310, 316, 317, 345, 362, 363, 365, 368, 369, 370, 372, 376, 377, 378, 383, 384, 385, 386, 387, 454, 458, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 479, 480, 481, 482], "rl": [0, 1, 2, 3, 5, 8, 10, 15, 16, 18, 21, 29, 142, 151, 213, 255, 310, 339, 348, 356, 362, 364, 379, 380, 382, 384, 429, 453, 455, 456, 457, 458, 459, 462, 463, 464, 470, 473, 475, 476, 478, 479, 482], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 25, 64, 80, 130, 131, 132, 141, 152, 176, 185, 335, 454, 455, 457, 458, 460, 462, 463, 464, 466, 467, 468, 470, 475, 476, 477, 482], "pytorch": [0, 1, 2, 3, 29, 31, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 213, 258, 259, 278, 294, 298, 309, 310, 438, 453, 455, 457, 459, 462, 464, 465, 469, 473, 475, 476, 477, 481, 482], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 23, 25, 29, 35, 42, 47, 55, 65, 66, 72, 77, 80, 127, 130, 133, 137, 141, 145, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 213, 234, 262, 270, 271, 273, 278, 298, 316, 329, 331, 335, 352, 395, 397, 427, 428, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 107, 108, 110, 114, 115, 116, 121, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 144, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 203, 205, 206, 207, 209, 210, 212, 213, 216, 217, 219, 221, 223, 224, 225, 228, 231, 235, 236, 237, 241, 242, 246, 249, 253, 254, 255, 256, 260, 261, 262, 263, 264, 266, 268, 270, 271, 273, 274, 277, 279, 280, 281, 283, 293, 294, 296, 297, 298, 300, 302, 303, 304, 306, 307, 308, 310, 317, 326, 328, 329, 331, 335, 339, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 418, 420, 427, 428, 433, 450, 451, 452, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 110, 127, 128, 129, 130, 133, 136, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 237, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 266, 267, 269, 270, 271, 273, 352, 380, 387, 395, 397, 452, 463, 464, 466, 467, 475, 476, 477, 479], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 237, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 313, 315, 316, 317, 318, 319, 325, 326, 327, 329, 331, 332, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 387, 388, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 418, 419, 420, 429, 435, 438, 441, 442, 446, 448, 449, 452, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482], "pypi": [0, 2, 481], "see": [0, 1, 2, 3, 6, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 94, 102, 108, 110, 115, 116, 127, 130, 133, 137, 140, 142, 144, 145, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 217, 219, 235, 241, 256, 259, 261, 262, 263, 266, 268, 270, 271, 272, 273, 278, 279, 280, 281, 294, 296, 297, 298, 300, 301, 307, 308, 309, 316, 318, 326, 327, 329, 331, 335, 338, 340, 342, 348, 351, 352, 365, 376, 380, 387, 395, 397, 420, 427, 435, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 108, 110, 121, 127, 130, 133, 136, 137, 138, 140, 141, 144, 145, 149, 150, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 259, 262, 266, 271, 272, 273, 274, 275, 276, 279, 290, 298, 301, 309, 329, 331, 335, 339, 344, 345, 351, 352, 356, 362, 372, 380, 382, 395, 397, 400, 405, 413, 427, 434, 455, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 481, 482], "about": [0, 3, 5, 7, 9, 22, 23, 25, 26, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 80, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 457, 458, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 479, 481, 482], "instruct": [0, 6, 7, 10, 28, 142, 180, 185, 223, 225, 456, 458, 462, 463, 464, 465, 475, 476, 479], "dedic": [0, 1, 2, 3, 22, 23, 25, 27, 50, 69, 78, 79, 110, 157, 166, 340, 341, 342, 456, 457, 462, 467, 469, 470, 472, 474, 476], "section": [0, 2, 3, 4, 32, 133, 294, 298, 456, 463, 466, 467, 472, 475, 476], "below": [0, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 69, 72, 77, 78, 79, 85, 94, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 219, 235, 241, 256, 261, 262, 263, 266, 268, 273, 280, 281, 294, 297, 298, 301, 307, 326, 329, 331, 335, 348, 351, 395, 397, 435, 462, 463, 464, 465, 466, 467, 475, 477], "pip": [0, 10, 466, 467, 468, 469, 470, 471, 472, 476, 481, 482], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 41, 42, 47, 48, 50, 51, 53, 55, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 83, 84, 91, 94, 95, 96, 97, 101, 102, 104, 108, 109, 110, 113, 115, 116, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 206, 210, 212, 213, 214, 215, 216, 220, 221, 224, 228, 231, 236, 237, 239, 241, 242, 245, 246, 249, 250, 255, 256, 257, 260, 261, 263, 265, 266, 268, 269, 270, 271, 273, 274, 280, 281, 287, 288, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 328, 329, 331, 335, 339, 343, 345, 347, 348, 349, 350, 352, 355, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 424, 429, 435, 442, 448, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "python": [0, 1, 3, 5, 6, 7, 10, 15, 16, 27, 62, 67, 68, 69, 72, 77, 78, 79, 84, 110, 153, 169, 170, 193, 203, 294, 295, 296, 298, 299, 300, 304, 305, 456, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "first": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 101, 103, 108, 115, 116, 121, 123, 127, 130, 133, 136, 137, 138, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 209, 210, 213, 214, 218, 219, 228, 235, 237, 241, 242, 258, 259, 263, 266, 271, 274, 281, 288, 294, 296, 298, 300, 301, 304, 305, 307, 309, 312, 339, 343, 344, 345, 348, 349, 351, 352, 364, 374, 379, 380, 382, 395, 419, 420, 437, 457, 461, 462, 463, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "low": [0, 3, 36, 39, 66, 77, 82, 85, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 206, 216, 223, 231, 234, 256, 264, 324, 325, 326, 343, 345, 348, 352, 355, 462, 463, 464, 466, 475, 476, 477, 481], "high": [0, 3, 9, 36, 39, 61, 63, 70, 78, 84, 85, 95, 96, 97, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 198, 206, 216, 223, 231, 234, 236, 256, 264, 324, 325, 326, 343, 345, 348, 352, 355, 396, 400, 405, 413, 462, 463, 464, 475, 476, 477, 479, 481], "level": [0, 2, 3, 4, 28, 39, 40, 48, 62, 67, 68, 69, 74, 78, 79, 110, 136, 138, 213, 254, 262, 296, 300, 379, 462, 463, 466, 470, 481], "abstract": [0, 1, 3, 8, 20, 81, 82, 125, 133, 238, 302, 404, 430, 439, 459, 464, 466, 477, 481], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 110, 113, 114, 115, 116, 117, 119, 121, 123, 127, 130, 133, 134, 136, 137, 138, 144, 145, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 204, 205, 206, 208, 209, 210, 212, 213, 216, 217, 219, 221, 222, 223, 224, 225, 227, 228, 231, 233, 234, 235, 236, 239, 241, 246, 249, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 275, 277, 278, 286, 288, 293, 294, 295, 296, 298, 299, 300, 302, 304, 305, 306, 307, 308, 310, 313, 318, 321, 329, 331, 334, 335, 338, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 418, 427, 428, 435, 438, 448, 452, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "intend": [0, 7, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 212, 223, 328, 380, 457, 481], "effici": [0, 1, 2, 4, 8, 17, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 294, 310, 365, 457, 462, 463, 464, 465, 466, 469, 470, 472, 474, 475, 476, 478, 479, 481], "modular": [0, 354, 456, 466, 479, 481], "document": [0, 2, 5, 7, 11, 22, 23, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 142, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 329, 331, 335, 395, 397, 453, 463, 465, 466, 467, 470, 473, 481], "properli": [0, 1, 3, 29, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 219, 296, 300, 400, 464, 471, 475, 476, 477, 481], "test": [0, 3, 5, 29, 127, 128, 129, 130, 133, 137, 143, 144, 145, 149, 150, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 191, 261, 266, 433, 448, 456, 464, 465, 466, 478, 481], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 107, 108, 110, 113, 115, 116, 117, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 201, 204, 205, 206, 209, 210, 212, 213, 217, 218, 219, 221, 224, 225, 226, 231, 234, 235, 237, 239, 241, 246, 248, 249, 250, 253, 254, 255, 256, 258, 261, 262, 263, 266, 268, 269, 270, 271, 273, 275, 276, 277, 278, 283, 284, 285, 286, 287, 290, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 306, 310, 314, 316, 317, 319, 320, 321, 329, 331, 333, 335, 338, 339, 340, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 418, 420, 422, 425, 426, 427, 428, 429, 434, 448, 450, 451, 454, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482], "code": [0, 3, 5, 7, 8, 15, 16, 66, 72, 127, 130, 133, 137, 142, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 241, 263, 266, 276, 294, 295, 298, 299, 348, 352, 354, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482], "aim": [0, 2, 3, 7, 50, 73, 74, 241, 266, 268, 301, 441, 455, 457, 458, 462, 463, 481], "support": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 61, 63, 65, 70, 77, 84, 94, 95, 96, 97, 101, 103, 117, 119, 123, 124, 126, 127, 128, 129, 130, 136, 138, 143, 152, 154, 157, 159, 163, 176, 184, 186, 195, 210, 213, 225, 231, 237, 256, 257, 260, 264, 271, 290, 314, 316, 325, 328, 329, 331, 335, 344, 345, 348, 351, 354, 372, 380, 395, 396, 400, 401, 402, 403, 425, 454, 456, 457, 459, 464, 465, 467, 468, 476, 477, 479, 481], "research": [0, 7, 9, 149, 150, 276, 481], "most": [0, 1, 2, 3, 7, 8, 15, 16, 55, 57, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 223, 269, 462, 464, 466, 467, 468, 469, 470, 471, 472, 477, 481, 482], "written": [0, 1, 2, 3, 29, 44, 61, 62, 63, 65, 67, 68, 69, 70, 75, 78, 79, 83, 84, 95, 96, 97, 99, 101, 108, 110, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 184, 185, 186, 187, 188, 192, 204, 205, 206, 213, 225, 228, 233, 234, 249, 254, 257, 258, 263, 269, 273, 274, 279, 317, 339, 348, 351, 352, 356, 362, 364, 379, 382, 384, 395, 396, 399, 418, 419, 420, 457, 458, 459, 462, 465, 466, 468, 474, 477, 481], "highli": [0, 2, 467, 481, 482], "wai": [0, 1, 2, 3, 4, 110, 121, 141, 179, 180, 183, 213, 241, 244, 261, 262, 268, 269, 296, 298, 300, 382, 400, 401, 402, 403, 457, 462, 463, 464, 466, 467, 469, 470, 474, 475, 476, 477, 478, 479, 481, 482], "easili": [0, 1, 2, 3, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 456, 458, 462, 463, 464, 467, 468, 469, 472, 475, 476, 481, 482], "swap": [0, 1, 3, 136, 269, 464, 466, 478, 481], "compon": [0, 1, 2, 3, 62, 66, 67, 68, 69, 78, 79, 101, 102, 103, 104, 110, 117, 119, 123, 290, 319, 344, 345, 350, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 434, 438, 456, 462, 463, 464, 465, 466, 468, 469, 472, 474, 475, 476, 477, 478, 481], "transform": [0, 1, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 42, 50, 55, 62, 64, 67, 68, 69, 71, 78, 79, 80, 96, 98, 99, 106, 110, 119, 124, 127, 130, 133, 134, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 282, 283, 287, 290, 291, 296, 300, 315, 318, 319, 325, 327, 331, 335, 343, 346, 347, 355, 358, 359, 361, 368, 381, 397, 418, 420, 435, 452, 454, 461, 463, 465, 466, 468, 470, 471, 472, 473, 478, 480], "them": [0, 2, 3, 7, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 35, 39, 40, 42, 47, 48, 62, 64, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 110, 121, 126, 127, 130, 133, 134, 137, 141, 145, 148, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 195, 221, 224, 231, 234, 256, 260, 263, 264, 270, 271, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 327, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 363, 365, 371, 378, 379, 383, 385, 387, 388, 401, 402, 403, 420, 462, 463, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "write": [0, 2, 3, 8, 15, 16, 18, 21, 29, 31, 50, 55, 61, 62, 63, 64, 67, 68, 69, 70, 78, 79, 83, 84, 95, 96, 97, 108, 110, 115, 119, 126, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 239, 240, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 269, 270, 273, 339, 351, 352, 354, 356, 365, 366, 367, 369, 370, 371, 378, 383, 385, 387, 388, 396, 397, 399, 404, 420, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482], "new": [0, 1, 2, 3, 4, 8, 15, 16, 18, 21, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 107, 108, 110, 114, 127, 130, 133, 137, 145, 152, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 210, 249, 253, 262, 263, 270, 271, 273, 288, 294, 296, 300, 317, 329, 331, 335, 351, 352, 357, 362, 363, 364, 367, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 396, 397, 398, 427, 458, 462, 464, 467, 469, 475, 476, 477, 481, 482], "ones": [0, 2, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 115, 116, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 214, 217, 218, 221, 222, 224, 237, 241, 246, 253, 256, 262, 263, 266, 268, 271, 273, 278, 304, 305, 316, 328, 329, 331, 335, 351, 362, 363, 364, 365, 366, 378, 379, 382, 383, 385, 387, 388, 395, 397, 406, 462, 464, 466, 475, 476, 477, 479, 481, 482], "littl": [0, 1, 3, 80, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 278, 362, 364, 379, 382, 384, 464, 465, 466, 470, 479, 481, 482], "effort": [0, 3, 477, 479, 481], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 121, 123, 124, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 201, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 237, 240, 241, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 323, 325, 326, 328, 329, 331, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 418, 419, 427, 428, 429, 431, 433, 435, 438, 440, 441, 442, 448, 452, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "repo": [0, 6, 213, 257, 266, 455, 476, 481], "attempt": [0, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 273, 278, 329, 331, 335, 352, 367, 370, 378, 395, 397, 398, 458, 469, 481], "align": [0, 294, 298, 481], "exist": [0, 1, 2, 3, 4, 22, 27, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 214, 222, 261, 263, 273, 274, 288, 329, 331, 335, 352, 365, 385, 395, 396, 397, 442, 452, 456, 475, 476, 481, 482], "ecosystem": [0, 466, 470, 481], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 110, 113, 115, 121, 123, 127, 130, 133, 134, 137, 141, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 213, 235, 254, 255, 256, 257, 258, 260, 261, 262, 263, 273, 275, 294, 296, 298, 300, 306, 308, 325, 329, 331, 335, 345, 347, 352, 362, 365, 379, 380, 382, 384, 395, 396, 397, 400, 420, 456, 458, 462, 463, 464, 465, 466, 467, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "dataset": [0, 46, 50, 61, 62, 63, 64, 69, 70, 71, 76, 78, 79, 83, 84, 94, 95, 96, 97, 100, 108, 110, 113, 115, 116, 154, 179, 180, 183, 184, 185, 186, 189, 270, 396, 420, 454, 456, 462, 463, 467, 478, 479, 481, 482], "pillar": [0, 481], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 183, 186, 187, 188, 189, 190, 191, 195, 200, 206, 207, 209, 210, 212, 213, 214, 218, 219, 221, 222, 223, 224, 229, 235, 236, 237, 241, 242, 243, 246, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 269, 270, 271, 274, 277, 279, 296, 300, 302, 303, 347, 369, 373, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 428, 429, 431, 433, 441, 442, 443, 444, 448, 449, 450, 451, 452, 454, 455, 457, 458, 461, 466, 468, 469, 470, 471, 473, 478, 479, 480], "model": [0, 3, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 32, 35, 41, 42, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 95, 96, 97, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 221, 241, 256, 266, 268, 272, 273, 280, 281, 282, 287, 289, 301, 302, 303, 307, 308, 315, 318, 327, 329, 331, 332, 335, 340, 341, 342, 346, 351, 357, 359, 362, 363, 364, 365, 367, 368, 369, 370, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 395, 396, 397, 398, 438, 443, 444, 445, 454, 455, 458, 459, 461, 464, 467, 470, 473, 475, 476, 477, 479, 480, 482], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 195, 198, 205, 207, 210, 212, 213, 218, 221, 222, 224, 226, 228, 231, 233, 237, 243, 246, 253, 254, 260, 262, 263, 264, 269, 271, 273, 277, 278, 290, 293, 296, 300, 303, 306, 307, 317, 319, 328, 331, 332, 333, 335, 338, 339, 344, 347, 348, 349, 351, 352, 354, 355, 356, 362, 363, 364, 365, 366, 367, 369, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 396, 398, 400, 401, 402, 403, 404, 418, 420, 427, 429, 435, 438, 440, 443, 448, 450, 451, 452, 454, 457, 458, 459, 461, 465, 466, 467, 468, 469, 473, 477, 478, 479, 480, 482], "util": [0, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 31, 35, 42, 47, 55, 65, 66, 69, 71, 72, 77, 115, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 150, 157, 158, 159, 160, 161, 166, 167, 168, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 241, 246, 256, 268, 273, 276, 279, 280, 281, 287, 294, 296, 298, 300, 329, 331, 335, 358, 359, 360, 361, 380, 395, 397, 448, 454, 460, 462, 464, 466, 468, 469, 470, 476, 477, 479, 481, 482], "e": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 107, 108, 121, 123, 127, 130, 133, 134, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 210, 212, 214, 217, 218, 219, 220, 228, 231, 234, 235, 237, 241, 249, 256, 258, 261, 262, 263, 266, 268, 273, 274, 294, 296, 297, 298, 300, 303, 307, 319, 325, 326, 329, 331, 333, 335, 338, 343, 345, 347, 348, 350, 351, 352, 362, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 396, 397, 399, 400, 401, 402, 403, 418, 429, 441, 451, 456, 457, 458, 463, 464, 466, 468, 469, 471, 475, 476, 478, 479, 481, 482], "g": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 121, 127, 130, 133, 134, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 210, 212, 214, 217, 218, 228, 231, 234, 237, 241, 249, 256, 258, 261, 262, 263, 266, 268, 273, 274, 294, 296, 297, 298, 299, 300, 303, 307, 325, 326, 329, 331, 333, 335, 343, 348, 351, 352, 365, 385, 395, 396, 397, 399, 409, 410, 411, 412, 414, 415, 416, 417, 418, 451, 457, 458, 463, 464, 466, 468, 471, 475, 476, 477, 478, 479, 481, 482], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 55, 62, 67, 68, 69, 71, 75, 78, 79, 110, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 210, 213, 246, 254, 273, 278, 296, 300, 317, 364, 379, 382, 395, 435, 438, 440, 443, 444, 448, 450, 451, 454, 458, 459, 466, 479, 482], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 100, 107, 108, 110, 111, 113, 115, 116, 117, 122, 125, 126, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 206, 213, 217, 221, 224, 231, 241, 253, 256, 261, 262, 263, 266, 268, 269, 270, 271, 273, 277, 280, 281, 294, 295, 298, 299, 301, 303, 306, 307, 329, 331, 335, 339, 344, 345, 348, 350, 351, 352, 356, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 424, 429, 441, 448, 449, 450, 451, 452, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482], "etc": [0, 2, 3, 7, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 253, 263, 273, 274, 301, 307, 325, 329, 331, 335, 395, 397, 456, 458, 463, 464, 470, 479, 481, 482], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 21, 22, 24, 25, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 110, 114, 117, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 201, 205, 206, 209, 213, 218, 221, 224, 225, 233, 236, 237, 253, 254, 256, 260, 261, 262, 263, 270, 271, 273, 275, 278, 280, 281, 301, 306, 307, 308, 317, 328, 329, 331, 335, 347, 353, 354, 362, 364, 379, 382, 384, 387, 391, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 429, 438, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "few": [0, 2, 8, 116, 137, 188, 420, 429, 456, 464, 465, 468, 475, 476, 479, 481, 482], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 61, 63, 85, 127, 130, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 221, 224, 352, 356, 382, 422, 457, 462, 464, 465, 475, 476, 477, 481, 482], "possibl": [0, 2, 3, 4, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 102, 108, 115, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 217, 241, 256, 261, 262, 263, 266, 268, 273, 280, 281, 294, 295, 298, 299, 329, 331, 335, 351, 395, 397, 418, 433, 438, 457, 462, 464, 465, 466, 468, 470, 471, 475, 476, 477, 479, 481, 482], "standard": [0, 2, 3, 57, 130, 237, 248, 270, 271, 275, 276, 277, 291, 303, 309, 310, 315, 343, 364, 379, 382, 387, 388, 400, 401, 402, 403, 462, 463, 467, 468, 476, 479, 481], "numpi": [0, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 231, 259, 264, 274, 438, 466, 477, 479, 481, 482], "common": [0, 2, 3, 4, 82, 127, 137, 143, 207, 225, 340, 341, 342, 346, 362, 363, 364, 365, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 448, 455, 457, 458, 459, 462, 464, 468, 471, 474, 475, 476, 477, 478, 481, 482], "openai": [0, 7, 32, 136, 138, 145, 163, 187, 464, 477, 481, 482], "gym": [0, 1, 3, 4, 8, 15, 16, 18, 21, 27, 28, 29, 67, 127, 130, 133, 134, 136, 137, 138, 139, 141, 142, 145, 149, 150, 152, 153, 157, 158, 161, 163, 166, 167, 168, 171, 172, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 203, 209, 213, 216, 225, 232, 233, 237, 239, 244, 246, 249, 256, 262, 269, 270, 273, 274, 397, 448, 455, 462, 463, 464, 465, 467, 471, 472, 477, 478, 479], "onli": [0, 1, 2, 3, 4, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 103, 107, 108, 110, 115, 116, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 141, 144, 145, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 209, 213, 214, 216, 217, 218, 219, 221, 223, 224, 228, 231, 235, 237, 241, 242, 246, 253, 254, 255, 256, 257, 261, 262, 263, 266, 268, 270, 271, 273, 274, 278, 298, 300, 306, 307, 329, 331, 335, 339, 343, 344, 348, 349, 351, 352, 353, 354, 362, 364, 365, 366, 370, 371, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395, 397, 400, 401, 402, 403, 404, 420, 427, 442, 456, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 479, 481, 482], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 245, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 319, 320, 321, 324, 325, 326, 328, 329, 331, 332, 335, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 422, 425, 427, 429, 431, 432, 433, 434, 435, 436, 438, 442, 448, 450, 451, 452, 457, 465, 467, 470, 475, 476, 477, 479, 481], "On": [0, 3, 7, 22, 23, 25, 27, 39, 295, 299, 457, 463, 475, 476], "end": [0, 2, 3, 15, 16, 21, 29, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 99, 108, 110, 114, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 225, 231, 239, 254, 255, 261, 263, 273, 280, 281, 294, 295, 298, 299, 302, 329, 331, 335, 347, 365, 385, 395, 397, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "come": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 50, 55, 121, 127, 130, 133, 137, 144, 145, 148, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 221, 224, 338, 339, 340, 341, 342, 348, 356, 362, 364, 379, 382, 384, 420, 462, 463, 464, 465, 469, 470, 471, 472, 475, 476, 479, 481, 482], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 38, 39, 40, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 84, 95, 96, 97, 101, 102, 103, 110, 114, 117, 123, 127, 130, 133, 135, 137, 138, 144, 145, 149, 150, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 202, 203, 205, 207, 209, 210, 213, 214, 217, 221, 224, 231, 232, 233, 234, 241, 246, 254, 255, 256, 257, 261, 262, 263, 266, 268, 270, 271, 273, 274, 294, 296, 298, 300, 302, 306, 307, 314, 316, 317, 325, 329, 331, 335, 338, 343, 351, 352, 364, 365, 371, 376, 379, 380, 382, 385, 395, 396, 397, 400, 404, 420, 428, 429, 433, 435, 444, 452, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 468, 469, 470, 474, 475, 476, 477, 478, 479, 481, 482], "re": [0, 2, 3, 8, 13, 22, 23, 25, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 110, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 228, 273, 300, 304, 305, 308, 329, 331, 335, 348, 352, 395, 397, 427, 459, 462, 464, 465, 467, 469, 474, 475, 477, 481, 482], "usabl": [0, 459, 465, 481], "function": [0, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 101, 102, 103, 104, 110, 117, 119, 123, 127, 130, 133, 134, 137, 138, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 203, 204, 205, 209, 210, 221, 224, 231, 233, 260, 261, 263, 264, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 311, 312, 313, 315, 317, 320, 321, 323, 326, 328, 329, 331, 335, 340, 341, 342, 343, 345, 347, 348, 350, 351, 352, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 438, 448, 454, 456, 457, 462, 465, 466, 467, 468, 471, 474, 477, 479, 482], "cost": [0, 2, 38, 102, 362, 364, 379, 382, 384, 458, 462, 463, 466, 475, 476, 477, 479], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 100, 102, 108, 110, 111, 113, 115, 116, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 281, 282, 283, 284, 285, 286, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 313, 315, 318, 320, 321, 324, 325, 326, 327, 329, 331, 333, 335, 336, 339, 340, 341, 342, 343, 347, 348, 350, 351, 352, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 424, 428, 438, 441, 443, 448, 449, 450, 451, 452, 454, 456, 457, 459, 462, 463, 464, 466, 468, 469, 471, 474, 475, 476, 477, 478, 479, 481, 482], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 35, 42, 47, 55, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 80, 83, 84, 95, 96, 97, 103, 107, 108, 111, 115, 123, 127, 130, 133, 134, 137, 141, 145, 148, 152, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 212, 213, 221, 224, 231, 256, 259, 261, 270, 271, 273, 296, 300, 306, 307, 317, 329, 331, 332, 333, 334, 335, 345, 350, 395, 396, 397, 454, 459, 462, 463, 465, 466, 467, 475, 476, 477, 478, 479, 481, 482], "good": [0, 1, 4, 9, 157, 462, 464, 465, 466, 468, 476, 481, 482], "runtim": [0, 2, 3, 31, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 477], "perform": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 96, 127, 130, 131, 132, 133, 136, 137, 138, 139, 144, 145, 157, 158, 161, 163, 166, 167, 168, 171, 172, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 221, 224, 231, 236, 258, 261, 263, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 311, 312, 315, 316, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 364, 365, 374, 382, 385, 395, 397, 433, 438, 458, 462, 463, 464, 465, 466, 467, 470, 472, 474, 475, 476, 477, 482], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 20, 22, 23, 25, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 99, 108, 110, 115, 116, 119, 126, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 148, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 219, 254, 256, 270, 273, 279, 296, 300, 317, 329, 331, 335, 340, 341, 342, 352, 365, 371, 376, 380, 387, 395, 397, 420, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482], "read": [0, 2, 3, 7, 31, 39, 40, 44, 48, 62, 64, 67, 68, 69, 71, 74, 75, 78, 79, 101, 102, 103, 104, 107, 110, 117, 119, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 239, 240, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 265, 266, 267, 269, 270, 273, 279, 313, 339, 340, 341, 342, 344, 347, 348, 351, 352, 354, 356, 357, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 397, 398, 400, 401, 402, 403, 404, 420, 433, 438, 457, 462, 463, 464, 466, 467, 468, 474, 475, 476, 477, 478, 481, 482], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 17, 27, 31, 459, 462, 467, 470, 474, 478, 482], "beyond": [0, 50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 466], "api": [0, 1, 2, 3, 5, 31, 39, 40, 42, 48, 50, 65, 74, 77, 82, 130, 133, 159, 160, 163, 188, 190, 241, 268, 270, 271, 278, 329, 331, 335, 395, 457, 458, 459, 466, 467, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482], "check": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 90, 92, 98, 99, 106, 115, 127, 130, 133, 134, 136, 137, 138, 145, 151, 157, 158, 161, 166, 167, 168, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 214, 219, 227, 233, 242, 256, 259, 263, 273, 274, 288, 329, 331, 334, 335, 339, 344, 345, 348, 349, 350, 351, 352, 365, 376, 387, 395, 397, 420, 453, 457, 458, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "paper": [0, 128, 129, 131, 132, 139, 143, 144, 149, 150, 152, 153, 163, 171, 172, 241, 266, 268, 281, 294, 318, 327, 369, 377, 387, 462, 464, 475, 476], "releas": [0, 4, 7, 10, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "sync": [0, 1, 15, 16, 21, 22, 23, 24, 25, 26, 27, 127, 332, 440, 448, 459, 462], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 35, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 95, 96, 97, 110, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 256, 261, 270, 273, 278, 329, 331, 335, 353, 354, 395, 396, 397, 400, 420, 462, 464, 465, 469, 472, 475, 476, 477, 482], "make": [0, 1, 2, 3, 4, 7, 11, 35, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 82, 84, 95, 96, 97, 110, 113, 117, 119, 126, 127, 130, 133, 137, 138, 141, 142, 144, 145, 147, 153, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 204, 206, 219, 226, 234, 237, 241, 242, 246, 250, 254, 258, 262, 266, 273, 276, 279, 294, 295, 296, 298, 299, 300, 306, 307, 309, 329, 331, 335, 344, 352, 362, 364, 379, 382, 384, 395, 396, 397, 400, 401, 402, 403, 418, 435, 444, 452, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "sure": [0, 1, 3, 4, 7, 42, 117, 130, 137, 141, 183, 188, 190, 219, 246, 344, 452, 457, 462, 464, 465, 466, 469, 475, 476, 477, 479, 481, 482], "alwai": [0, 2, 3, 15, 16, 25, 35, 36, 42, 47, 55, 65, 66, 72, 77, 82, 85, 94, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 236, 258, 270, 271, 273, 329, 331, 334, 335, 372, 380, 395, 397, 457, 458, 463, 464, 465, 466, 475, 476, 477, 479], "enjoi": [0, 2, 3, 470], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 152, 155, 156, 159, 160, 435, 464, 475, 476, 477, 481], "featur": [0, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 31, 35, 42, 59, 65, 77, 82, 83, 108, 115, 116, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 192, 210, 213, 228, 231, 233, 239, 256, 257, 265, 270, 276, 280, 281, 291, 292, 294, 295, 296, 298, 299, 300, 301, 306, 309, 310, 329, 331, 335, 352, 359, 362, 364, 379, 382, 384, 395, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 452, 457, 458, 462, 463, 464, 465, 466, 468, 469, 470, 472, 477, 479, 481, 482], "recent": [0, 7, 269, 271, 274, 482], "version": [0, 1, 2, 3, 6, 29, 34, 35, 37, 40, 42, 43, 47, 48, 49, 52, 54, 55, 58, 60, 61, 63, 65, 66, 71, 72, 77, 86, 87, 88, 89, 115, 127, 130, 133, 136, 137, 138, 139, 145, 152, 153, 157, 158, 159, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 213, 260, 269, 270, 271, 273, 274, 276, 296, 300, 308, 314, 329, 331, 335, 342, 362, 364, 379, 380, 382, 384, 385, 395, 397, 400, 403, 455, 456, 457, 458, 462, 464, 465, 466, 467, 469, 472, 475, 476, 477, 478, 482], "although": [0, 1, 3, 8, 27, 35, 42, 47, 65, 66, 72, 77, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 458, 459, 462, 463, 470, 479], "core": [0, 2, 3, 8, 62, 67, 68, 69, 78, 79, 110, 459, 465, 468, 481], "guarante": [0, 2, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 117, 119, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 270, 271, 273, 329, 331, 335, 352, 395, 396, 397, 470], "backward": [0, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 294, 295, 298, 299, 316, 329, 331, 335, 352, 362, 363, 365, 366, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 397, 462, 464, 465, 466, 469, 470, 472, 475, 476, 477], "compat": [0, 2, 3, 7, 15, 16, 18, 31, 35, 42, 47, 55, 65, 66, 72, 77, 102, 110, 113, 115, 116, 117, 121, 127, 130, 133, 137, 139, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 254, 266, 270, 271, 273, 274, 294, 295, 296, 298, 299, 300, 329, 331, 335, 349, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 384, 385, 387, 388, 391, 395, 397, 400, 462, 465, 479], "2": [0, 1, 2, 3, 8, 9, 10, 15, 16, 18, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 69, 72, 74, 75, 77, 78, 79, 80, 83, 84, 94, 96, 101, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 148, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 205, 209, 210, 212, 214, 217, 218, 219, 221, 222, 223, 224, 233, 234, 237, 239, 241, 243, 246, 249, 253, 254, 255, 256, 261, 262, 263, 266, 268, 270, 271, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 315, 316, 317, 325, 328, 329, 331, 335, 343, 344, 345, 347, 351, 355, 356, 362, 363, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 397, 399, 400, 401, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 429, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 474, 475, 476, 477, 479, 480, 481, 482], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 115, 116, 123, 127, 128, 129, 130, 133, 136, 137, 139, 140, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 313, 316, 317, 320, 321, 324, 325, 326, 328, 329, 331, 332, 334, 335, 339, 343, 345, 350, 351, 352, 354, 355, 358, 359, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 429, 436, 448, 452, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 20, 25, 26, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 102, 137, 157, 166, 186, 188, 234, 241, 244, 268, 329, 331, 335, 365, 368, 380, 395, 458, 459, 462, 463, 464, 465, 468, 470, 479, 481, 482], "tensordict": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 113, 115, 116, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 289, 290, 293, 296, 300, 302, 303, 306, 307, 317, 318, 319, 327, 328, 329, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 418, 419, 429, 433, 434, 435, 437, 438, 454, 456, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 482], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 101, 180, 193, 233, 243, 261, 262, 271, 329, 331, 335, 340, 341, 342, 351, 370, 378, 387, 454, 462, 475, 477, 481], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 35, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 83, 84, 94, 95, 96, 97, 99, 101, 110, 118, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 241, 268, 273, 303, 329, 331, 335, 395, 396, 397, 422, 427, 438, 459, 463, 466, 472, 475], "root": [0, 2, 3, 39, 40, 48, 50, 62, 67, 68, 69, 74, 78, 79, 84, 98, 99, 106, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 213, 235, 257, 258, 296, 297, 300, 325, 326, 400, 458, 465, 467, 475, 476, 477, 479, 482], "http": [0, 2, 5, 6, 7, 10, 15, 16, 22, 23, 25, 32, 62, 80, 107, 108, 128, 129, 131, 132, 139, 141, 143, 144, 149, 150, 152, 153, 154, 155, 156, 159, 160, 163, 169, 170, 171, 172, 185, 213, 241, 266, 276, 282, 283, 284, 285, 286, 287, 290, 291, 292, 298, 303, 304, 305, 310, 311, 312, 316, 317, 318, 320, 321, 327, 345, 362, 363, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 400, 405, 413, 453, 473, 478, 481], "github": [0, 2, 5, 6, 7, 10, 22, 23, 25, 32, 128, 129, 131, 132, 136, 139, 143, 144, 149, 150, 152, 153, 155, 156, 159, 160, 163, 169, 170, 171, 172, 210, 213, 266, 276, 468, 472, 475, 476, 481], "com": [0, 2, 5, 6, 7, 10, 22, 23, 25, 32, 128, 129, 131, 132, 139, 141, 143, 144, 149, 150, 152, 153, 155, 156, 159, 160, 163, 169, 170, 171, 172, 213, 276, 481], "setup": [0, 1, 7, 128, 129, 141, 143, 144, 169, 456], "py": [0, 3, 32, 136, 138, 203, 213, 288, 318, 327, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482], "develop": [0, 3, 4, 7, 50, 141, 462, 481], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 117, 121, 122, 123, 124, 125, 127, 130, 133, 135, 137, 139, 140, 142, 145, 157, 158, 161, 162, 163, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 204, 206, 208, 209, 210, 212, 213, 216, 218, 219, 223, 229, 233, 235, 241, 242, 244, 251, 256, 258, 261, 262, 263, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 290, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 307, 308, 310, 316, 328, 329, 330, 331, 333, 335, 343, 344, 345, 347, 348, 349, 352, 354, 355, 358, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 418, 421, 422, 425, 427, 428, 431, 438, 440, 448, 454, 456, 458, 461, 462, 464, 466, 468, 469, 470, 473, 477, 480, 482], "seri": [0, 2, 3, 7, 8, 59, 100, 111, 121, 122, 125, 126, 166, 236, 262, 420, 457, 458, 462, 463, 464, 471, 472, 475, 476, 479, 482], "quick": [0, 466], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 212, 231, 234, 257, 262, 273, 276, 382, 397, 455, 457, 458, 462, 463, 464, 465, 468, 472, 475, 476, 477, 479, 481, 482], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 108, 110, 111, 113, 114, 115, 116, 121, 123, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 201, 204, 205, 206, 209, 210, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 233, 234, 235, 236, 237, 241, 242, 245, 246, 249, 250, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 268, 270, 271, 273, 274, 279, 280, 281, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 317, 328, 329, 331, 335, 339, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 414, 415, 416, 417, 418, 424, 427, 428, 434, 435, 438, 440, 442, 448, 452, 455, 458, 462, 463, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479, 481, 482], "hurri": [0, 467], "last": [0, 1, 2, 3, 4, 15, 16, 18, 21, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 114, 115, 116, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 206, 209, 212, 218, 228, 235, 237, 242, 255, 257, 259, 269, 274, 275, 280, 281, 293, 294, 296, 298, 300, 301, 304, 305, 311, 322, 325, 328, 343, 347, 352, 365, 400, 402, 403, 456, 463, 464, 465, 466, 467, 468, 475, 476, 477, 478, 479, 481, 482], "item": [0, 2, 3, 8, 15, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 94, 102, 108, 110, 114, 121, 178, 206, 227, 262, 271, 304, 305, 366, 367, 369, 429, 458, 459, 462, 464, 465, 469, 470, 475, 476, 477, 479], "navig": [0, 476], "previou": [0, 3, 4, 10, 55, 62, 67, 68, 69, 71, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 228, 256, 273, 294, 298, 321, 343, 464, 465, 466, 467, 468, 472, 477, 482], "whenev": [0, 1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 69, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 108, 115, 116, 131, 132, 136, 138, 139, 149, 150, 163, 171, 172, 179, 180, 183, 203, 228, 232, 263, 269, 329, 331, 335, 380, 395, 400, 401, 402, 403, 418, 440, 457, 471, 479], "want": [0, 1, 2, 3, 6, 7, 8, 18, 29, 42, 65, 77, 116, 178, 213, 237, 316, 329, 331, 335, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 457, 462, 463, 464, 465, 466, 467, 469, 470, 471, 475, 476, 477, 478, 479, 481, 482], "ted": [0, 44, 56, 75, 76, 98, 99, 106, 454, 461, 473, 480], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 35, 39, 42, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 95, 96, 97, 110, 115, 116, 121, 127, 128, 129, 130, 133, 137, 141, 143, 144, 145, 149, 150, 152, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 217, 218, 231, 235, 241, 254, 256, 259, 260, 261, 262, 263, 266, 268, 270, 271, 273, 275, 278, 280, 281, 288, 293, 296, 300, 305, 306, 307, 310, 316, 318, 325, 327, 329, 331, 332, 335, 340, 342, 345, 347, 348, 351, 352, 355, 363, 364, 365, 370, 376, 378, 379, 380, 382, 385, 387, 395, 396, 397, 400, 401, 402, 403, 404, 418, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "modul": [0, 1, 2, 3, 4, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 41, 42, 47, 55, 65, 66, 71, 72, 77, 121, 127, 128, 129, 130, 133, 137, 145, 148, 151, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 212, 217, 223, 225, 231, 233, 241, 242, 255, 256, 261, 262, 263, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393, 395, 397, 398, 400, 401, 402, 403, 404, 418, 438, 445, 448, 454, 458, 459, 461, 463, 464, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480], "optim": [0, 1, 2, 8, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 277, 303, 309, 310, 316, 325, 329, 331, 335, 363, 365, 380, 381, 382, 385, 392, 395, 397, 433, 434, 438, 448, 458, 459, 461, 464, 465, 466, 467, 468, 470, 473, 475, 476, 477, 480], "collect": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 55, 62, 67, 68, 69, 78, 79, 110, 114, 127, 130, 133, 137, 145, 157, 158, 161, 163, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 191, 210, 213, 228, 237, 241, 268, 317, 347, 363, 366, 369, 371, 383, 385, 387, 388, 420, 429, 435, 438, 440, 441, 442, 448, 456, 459, 461, 462, 465, 466, 467, 468, 469, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482], "storag": [0, 1, 8, 15, 16, 18, 21, 29, 35, 42, 44, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 81, 84, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 130, 133, 135, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 212, 213, 221, 224, 246, 273, 329, 331, 335, 364, 379, 382, 395, 396, 397, 454, 459, 461, 463, 464, 465, 466, 467, 469, 472, 473, 475, 476, 478, 480], "log": [0, 3, 4, 8, 11, 71, 288, 289, 290, 304, 305, 313, 325, 326, 331, 335, 344, 345, 348, 352, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 427, 431, 432, 433, 438, 448, 457, 458, 459, 461, 462, 463, 464, 467, 468, 472, 473, 475, 476, 477, 480, 481], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 141, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 329, 331, 335, 352, 395, 397, 428, 452, 454, 455, 456, 457, 458, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 479, 480, 481], "own": [0, 1, 15, 16, 21, 27, 28, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 420, 454, 458, 461, 463, 464, 467, 473, 475, 476, 477, 480], "train": [0, 1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 32, 35, 38, 42, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 94, 95, 96, 97, 127, 130, 133, 137, 142, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 221, 229, 241, 255, 260, 263, 266, 268, 273, 275, 276, 278, 283, 285, 293, 317, 329, 331, 332, 333, 335, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 438, 440, 448, 454, 456, 457, 459, 461, 463, 467, 470, 471, 473, 478, 479, 480, 481, 482], "loop": [0, 1, 8, 18, 29, 61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 275, 293, 316, 317, 363, 365, 371, 378, 382, 383, 385, 387, 388, 396, 400, 401, 402, 403, 438, 458, 459, 461, 462, 463, 467, 469, 470, 471, 473, 474, 479, 480, 481], "ppo": [0, 1, 4, 8, 348, 352, 364, 379, 382, 395, 454, 457, 461, 462, 463, 466, 468, 469, 473, 475, 480], "pendulum": [0, 3, 15, 16, 18, 21, 27, 28, 29, 67, 121, 127, 130, 131, 132, 133, 134, 136, 137, 138, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 216, 217, 219, 226, 232, 233, 237, 244, 246, 250, 251, 254, 256, 257, 258, 261, 262, 263, 264, 270, 271, 273, 279, 296, 300, 397, 448, 457, 461, 463, 464, 467, 468, 469, 473, 480, 481, 482], "introduct": [0, 458, 461, 467, 473, 475, 476, 480, 482], "multi": [0, 1, 7, 9, 15, 16, 21, 35, 42, 47, 55, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 98, 99, 106, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 234, 263, 273, 294, 296, 298, 300, 301, 306, 307, 308, 329, 331, 335, 347, 352, 395, 397, 398, 400, 401, 402, 403, 454, 461, 462, 463, 464, 465, 467, 468, 473, 477, 480, 481], "agent": [0, 9, 68, 73, 74, 142, 148, 149, 150, 155, 156, 159, 160, 164, 165, 169, 170, 171, 172, 174, 234, 253, 254, 255, 304, 305, 306, 307, 308, 310, 318, 327, 364, 379, 382, 398, 454, 461, 467, 473, 477, 480], "env": [0, 1, 2, 5, 6, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 35, 39, 42, 44, 47, 50, 55, 65, 66, 67, 71, 72, 75, 77, 84, 96, 110, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 279, 296, 300, 302, 303, 329, 331, 335, 347, 351, 380, 395, 397, 418, 419, 420, 428, 442, 443, 444, 448, 450, 451, 452, 454, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 108, 109, 110, 115, 116, 121, 123, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 313, 315, 316, 317, 318, 319, 325, 326, 327, 328, 329, 331, 332, 333, 335, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 418, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 448, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 482], "pretrain": [0, 461, 473, 480], "recurr": [0, 2, 212, 294, 295, 296, 298, 300, 321, 338, 400, 461, 463, 468, 473, 479, 480], "dqn": [0, 2, 206, 225, 281, 290, 344, 345, 362, 363, 365, 366, 367, 369, 371, 372, 373, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 395, 398, 445, 454, 457, 461, 466, 468, 469, 472, 473, 480], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 44, 55, 67, 75, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 202, 218, 223, 233, 235, 255, 258, 275, 278, 279, 290, 293, 296, 300, 306, 307, 310, 317, 319, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 362, 363, 364, 365, 366, 370, 371, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 433, 440, 443, 444, 448, 450, 451, 454, 456, 457, 459, 461, 463, 467, 469, 470, 473, 478, 479, 480, 481, 482], "replai": [0, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 62, 67, 68, 69, 78, 79, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 121, 122, 126, 212, 213, 223, 242, 246, 256, 262, 273, 365, 366, 367, 369, 370, 371, 378, 383, 385, 387, 388, 397, 435, 438, 446, 448, 454, 456, 458, 459, 461, 466, 473, 477, 478, 480], "buffer": [0, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 126, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 212, 213, 217, 223, 231, 241, 242, 246, 256, 261, 262, 263, 266, 268, 273, 275, 317, 329, 331, 335, 343, 351, 354, 364, 365, 366, 367, 369, 370, 371, 378, 379, 382, 383, 385, 387, 388, 395, 396, 397, 400, 401, 402, 403, 404, 435, 438, 446, 448, 454, 456, 458, 459, 461, 466, 471, 473, 477, 478, 480, 482], "export": [0, 6, 7, 461, 473, 480], "competit": [0, 3, 149, 150, 461, 473, 476, 480], "ddpg": [0, 283, 284, 285, 286, 366, 377, 386, 454, 457, 461, 463, 469, 473, 476, 480], "task": [0, 2, 3, 9, 71, 73, 74, 83, 127, 130, 131, 132, 133, 137, 140, 145, 149, 150, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 183, 185, 186, 187, 188, 190, 241, 254, 263, 266, 268, 370, 378, 456, 461, 462, 463, 464, 465, 467, 468, 473, 475, 476, 477, 480, 482], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 183, 186, 187, 188, 191, 201, 235, 256, 271, 287, 296, 300, 343, 362, 380, 382, 384, 395, 420, 438, 454, 456, 458, 459, 461, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 479, 480, 481], "object": [0, 2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 32, 35, 39, 42, 47, 55, 57, 61, 63, 65, 66, 70, 72, 77, 82, 83, 84, 95, 96, 97, 101, 102, 103, 104, 110, 113, 117, 119, 123, 126, 127, 130, 133, 137, 143, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 221, 224, 225, 231, 234, 237, 241, 261, 262, 263, 266, 270, 271, 273, 296, 300, 303, 306, 307, 318, 325, 327, 329, 331, 335, 339, 340, 348, 351, 352, 353, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 442, 443, 444, 447, 448, 452, 454, 457, 459, 461, 463, 464, 465, 466, 470, 472, 473, 475, 476, 477, 479, 480, 482], "loss": [0, 3, 8, 63, 225, 304, 316, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 395, 398, 399, 400, 434, 438, 445, 448, 456, 458, 459, 461, 466, 467, 469, 470, 471, 473, 477, 479, 480], "trainer": [0, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 461, 462, 473, 480], "exampl": [0, 1, 2, 4, 9, 10, 15, 16, 18, 21, 22, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 83, 84, 85, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 199, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 313, 315, 316, 317, 318, 319, 327, 328, 329, 331, 332, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 406, 418, 420, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 448, 454, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482], "packag": [0, 6, 7, 10, 203, 454, 455, 482], "batch": [0, 2, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 31, 39, 55, 57, 59, 62, 64, 67, 68, 69, 71, 78, 79, 80, 82, 94, 101, 102, 103, 104, 108, 109, 110, 114, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 151, 152, 154, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 210, 213, 217, 219, 228, 235, 237, 239, 242, 246, 253, 256, 258, 262, 263, 265, 269, 270, 271, 273, 276, 288, 294, 295, 296, 298, 299, 300, 304, 305, 306, 307, 308, 309, 313, 317, 318, 324, 328, 331, 335, 338, 347, 351, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 429, 432, 435, 436, 437, 438, 440, 450, 451, 452, 454, 457, 458, 459, 463, 464, 465, 466, 467, 470, 472, 474, 475, 476, 478, 481, 482], "size": [0, 2, 15, 16, 18, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 114, 115, 116, 117, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 204, 206, 210, 212, 213, 214, 217, 220, 221, 224, 225, 226, 228, 231, 234, 235, 239, 241, 243, 244, 246, 250, 252, 253, 254, 256, 258, 259, 262, 263, 264, 265, 268, 270, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 327, 328, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354, 356, 359, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 420, 429, 435, 454, 457, 458, 463, 464, 465, 466, 467, 468, 470, 475, 476, 477, 482], "copi": [0, 2, 3, 14, 17, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 209, 213, 231, 244, 255, 261, 262, 263, 270, 271, 273, 274, 296, 300, 308, 329, 331, 335, 343, 365, 380, 385, 395, 396, 397, 400, 418, 454, 458, 462, 463, 465, 467, 475, 479, 481], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 42, 47, 55, 62, 65, 66, 71, 72, 77, 108, 110, 113, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 231, 234, 241, 256, 261, 262, 263, 266, 268, 273, 294, 295, 296, 298, 299, 300, 306, 308, 310, 329, 331, 332, 334, 335, 351, 362, 363, 364, 365, 371, 374, 385, 387, 395, 397, 440, 447, 454, 456, 457, 459, 462, 463, 464, 474, 477, 479, 481], "synchron": [0, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 61, 63, 70, 84, 95, 96, 97, 152, 184, 396, 450, 451, 454, 463, 464, 475], "distribut": [0, 2, 3, 4, 9, 10, 14, 17, 20, 22, 23, 24, 25, 26, 27, 28, 62, 67, 68, 69, 78, 79, 110, 130, 159, 160, 192, 233, 237, 271, 275, 277, 288, 289, 290, 291, 297, 303, 304, 305, 313, 314, 315, 316, 320, 321, 324, 325, 326, 333, 343, 344, 345, 348, 352, 353, 362, 363, 364, 365, 370, 371, 372, 378, 379, 382, 383, 384, 385, 387, 388, 395, 454, 458, 459, 463, 464, 466, 468, 470, 475, 476, 477, 481, 482], "interoper": [0, 15, 16, 454], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 35, 42, 47, 55, 65, 66, 67, 72, 77, 108, 115, 116, 127, 128, 129, 130, 131, 132, 133, 136, 137, 143, 144, 145, 151, 152, 153, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 231, 236, 237, 253, 261, 262, 263, 270, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 352, 353, 354, 355, 358, 365, 371, 385, 395, 397, 420, 427, 433, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 468, 469, 470, 471, 472, 475, 476, 477, 481], "asynchron": [0, 3, 9, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 362, 395, 396, 397, 450, 454, 462, 463, 464], "singl": [0, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 39, 40, 42, 45, 47, 48, 50, 53, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 80, 84, 95, 96, 97, 102, 110, 116, 121, 127, 130, 133, 136, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 206, 213, 214, 234, 241, 246, 256, 261, 263, 268, 273, 280, 281, 294, 295, 296, 298, 299, 300, 301, 307, 329, 331, 335, 350, 354, 363, 364, 365, 367, 369, 371, 372, 378, 379, 382, 383, 385, 387, 388, 392, 395, 396, 397, 400, 401, 402, 403, 409, 410, 411, 412, 414, 415, 416, 417, 418, 452, 454, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 481], "node": [0, 2, 20, 22, 23, 25, 27, 28, 39, 40, 48, 50, 61, 63, 70, 74, 84, 95, 96, 97, 145, 184, 187, 261, 333, 396, 454, 470, 481], "helper": [0, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 462, 463, 465, 475, 477], "compos": [0, 3, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 109, 110, 111, 112, 121, 122, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 218, 219, 231, 245, 261, 262, 263, 270, 273, 329, 331, 335, 346, 347, 365, 374, 385, 395, 397, 420, 454, 462, 463, 464, 465, 466, 470, 474, 476, 478, 479, 481, 482], "episod": [0, 3, 50, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 209, 246, 249, 255, 277, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 454, 463, 467, 472, 475, 476, 479], "format": [0, 1, 3, 35, 42, 44, 47, 53, 54, 55, 56, 59, 60, 65, 66, 72, 75, 76, 77, 84, 96, 98, 99, 106, 113, 121, 127, 130, 133, 137, 145, 157, 158, 159, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 213, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397, 420, 454, 456, 462, 463, 466, 467, 469, 471, 481, 482], "tensorspec": [0, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 127, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 206, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 228, 230, 232, 233, 234, 235, 237, 239, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 293, 317, 321, 339, 343, 344, 345, 348, 349, 350, 351, 352, 353, 355, 363, 365, 367, 370, 371, 383, 385, 387, 388, 397, 398, 454, 477], "tree": [0, 1, 50, 61, 63, 70, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 213, 396, 454, 475, 479], "forest": [0, 50, 84, 454], "larg": [0, 3, 4, 38, 61, 63, 70, 84, 95, 96, 97, 115, 116, 184, 221, 224, 266, 362, 364, 379, 382, 384, 395, 396, 454, 463, 464, 475, 476, 479], "languag": [0, 32, 71, 186, 454], "human": [0, 32, 179, 454, 477], "feedback": [0, 179, 454, 472, 481], "rlhf": [0, 179, 192, 233, 454, 457], "spec": [0, 1, 2, 15, 16, 18, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 201, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 230, 232, 233, 234, 235, 237, 239, 241, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 290, 293, 296, 300, 317, 319, 321, 339, 343, 344, 345, 348, 349, 350, 351, 352, 354, 355, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 397, 398, 454, 457, 458, 462, 463, 464, 465, 466, 467, 468, 472, 474, 475, 476, 481], "lock": [0, 39, 40, 48, 61, 63, 70, 74, 84, 95, 96, 97, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 210, 219, 256, 270, 271, 396, 454, 458, 477], "method": [0, 1, 2, 4, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 115, 116, 117, 118, 119, 121, 123, 127, 130, 133, 136, 137, 138, 139, 144, 145, 157, 158, 161, 162, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 232, 233, 235, 237, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 288, 293, 296, 300, 306, 307, 308, 329, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 359, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 376, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 404, 418, 419, 449, 454, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 477, 479, 482], "partial": [0, 2, 15, 16, 18, 21, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 213, 255, 256, 257, 348, 438, 454, 465], "step": [0, 1, 4, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 50, 55, 71, 84, 98, 99, 106, 108, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 204, 205, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 228, 229, 232, 233, 235, 237, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 273, 275, 276, 277, 291, 293, 294, 296, 298, 300, 302, 303, 316, 317, 347, 348, 352, 362, 373, 382, 397, 399, 400, 401, 402, 403, 406, 407, 408, 419, 422, 429, 433, 438, 454, 456, 459, 463, 465, 466, 468, 469, 471, 472, 474, 477, 478, 481], "reset": [0, 1, 2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 116, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 208, 209, 210, 213, 225, 228, 232, 236, 241, 249, 254, 255, 256, 257, 258, 261, 262, 263, 266, 269, 270, 273, 274, 279, 294, 296, 300, 308, 317, 329, 331, 335, 337, 347, 380, 395, 397, 419, 454, 456, 458, 462, 463, 464, 465, 467, 470, 474, 475, 476, 481], "vector": [0, 1, 8, 33, 59, 128, 129, 138, 143, 144, 148, 159, 160, 163, 171, 172, 223, 269, 271, 283, 285, 294, 295, 298, 299, 301, 400, 403, 413, 414, 415, 416, 417, 454, 457, 458, 462, 463, 465, 474, 475, 476, 477, 478, 482], "async": [0, 15, 16, 18, 21, 22, 23, 25, 27, 29, 67, 127, 161, 167, 269, 454, 456], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 266, 273, 306, 307, 329, 331, 335, 355, 361, 372, 382, 389, 395, 397, 452, 454, 456, 457, 462, 463, 464, 465, 468, 469, 471, 475, 476], "nativ": [0, 1, 7, 9, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 420, 454, 465, 479], "auto": [0, 103, 123, 133, 138, 208, 209, 263, 269, 317, 363, 365, 371, 381, 383, 385, 387, 388, 454, 458, 475, 476], "dynam": [0, 2, 7, 15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 198, 273, 370, 378, 454, 464, 467, 477], "mask": [0, 1, 4, 31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 242, 273, 278, 279, 290, 293, 304, 305, 319, 331, 335, 343, 344, 345, 349, 350, 371, 385, 435, 454, 463, 465, 466, 482], "action": [0, 2, 8, 9, 15, 16, 18, 21, 27, 29, 44, 50, 59, 67, 71, 75, 77, 84, 107, 108, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 204, 206, 207, 210, 216, 217, 218, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 235, 236, 237, 239, 243, 244, 246, 250, 254, 256, 260, 262, 263, 264, 265, 269, 273, 275, 277, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 300, 301, 302, 303, 304, 305, 306, 315, 317, 318, 319, 321, 324, 325, 327, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 355, 356, 362, 363, 364, 365, 366, 367, 369, 370, 371, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 448, 452, 454, 456, 457, 459, 462, 463, 464, 466, 467, 468, 469, 474, 475, 476, 478, 481, 482], "record": [0, 2, 11, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 199, 206, 233, 273, 329, 331, 335, 382, 395, 397, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 448, 454, 463, 464, 468, 472, 475], "domain": [0, 2, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 96, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 223, 231, 256, 264, 339, 344, 345, 348, 349, 350, 351, 352, 353, 354, 359, 454, 464, 469, 475, 476, 477, 481, 482], "llm": [0, 2, 29, 30, 71, 83, 94, 95, 96, 97, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 329, 330, 331, 332, 333, 334, 335, 395, 396, 397, 454], "interfac": [0, 1, 3, 127, 140, 154, 301, 309, 331, 335, 454, 457, 458, 462, 464, 466, 471, 477, 479], "structur": [0, 1, 3, 7, 50, 57, 61, 62, 63, 69, 70, 71, 78, 79, 82, 83, 84, 95, 96, 97, 102, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 205, 221, 224, 256, 306, 317, 331, 335, 362, 371, 382, 385, 396, 400, 401, 402, 403, 404, 454, 458, 462, 464, 465, 467, 470, 475, 476, 477, 478], "actor": [0, 3, 4, 27, 30, 162, 192, 233, 277, 282, 283, 285, 290, 291, 293, 303, 315, 317, 319, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 395, 398, 454, 458, 463, 465, 467, 469, 472, 475, 478, 481], "explor": [0, 1, 272, 275, 278, 293, 310, 317, 339, 344, 345, 348, 349, 350, 351, 352, 362, 380, 433, 443, 444, 448, 454, 464, 465, 466, 467, 469, 470, 472, 475, 476, 477], "valu": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 107, 108, 110, 115, 116, 121, 127, 130, 133, 137, 138, 145, 148, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 203, 204, 205, 206, 209, 211, 213, 214, 216, 219, 221, 222, 223, 224, 225, 231, 236, 237, 241, 242, 245, 246, 247, 249, 251, 253, 256, 257, 261, 262, 263, 268, 269, 270, 271, 273, 274, 275, 276, 279, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 300, 301, 303, 304, 305, 306, 307, 309, 310, 313, 317, 318, 319, 324, 325, 326, 327, 329, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 428, 429, 431, 432, 433, 434, 435, 438, 448, 454, 459, 463, 466, 469, 470, 471, 474, 475, 476, 477, 479, 481, 482], "gener": [0, 1, 2, 3, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 71, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 110, 112, 114, 127, 130, 133, 134, 137, 145, 149, 150, 151, 154, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 210, 217, 219, 221, 222, 226, 231, 233, 235, 237, 243, 244, 249, 250, 254, 256, 260, 262, 264, 269, 271, 273, 278, 279, 288, 296, 300, 304, 305, 313, 331, 335, 339, 348, 352, 356, 357, 376, 383, 390, 397, 400, 405, 413, 423, 438, 454, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "hook": [0, 2, 35, 42, 44, 47, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 110, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 319, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 395, 397, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 454], "planner": [0, 277, 303, 454], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 111, 114, 115, 116, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 204, 205, 206, 207, 209, 210, 211, 212, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 231, 233, 234, 237, 239, 241, 243, 244, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 262, 263, 264, 266, 268, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 429, 436, 437, 448, 454, 457, 459, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 475, 476, 477, 478, 479, 481, 482], "vmap": [0, 294, 295, 298, 299, 308, 328, 351, 354, 363, 365, 371, 378, 380, 383, 385, 387, 388, 395, 400, 401, 402, 403, 454, 457], "random": [0, 1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 71, 73, 74, 82, 85, 86, 87, 88, 89, 109, 121, 127, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 191, 206, 223, 236, 237, 256, 263, 279, 293, 294, 296, 298, 348, 351, 352, 359, 363, 380, 383, 395, 433, 442, 454, 457, 462, 463, 464, 466, 467, 468, 470, 477, 478, 479, 481, 482], "sac": [0, 371, 383, 385, 454], "redq": [0, 383, 454], "crossq": [0, 365, 454], "iql": [0, 370, 378, 454, 462, 475, 476], "cql": [0, 363, 369, 454], "gail": [0, 376, 454], "dt": [0, 158, 317, 454, 477], "td3": [0, 387, 388, 454], "bc": [0, 5, 387, 454], "a2c": [0, 362, 454], "dreamer": [0, 199, 200, 291, 373, 374, 375, 454, 457], "checkpoint": [0, 69, 99, 101, 105, 117, 118, 120, 124, 454, 479], "builder": [0, 185, 189, 454, 463, 482], "logger": [0, 3, 11, 418, 420, 422, 423, 424, 425, 426, 427, 432, 438, 448, 452, 454, 463, 475], "_util": [0, 3, 157, 274, 454, 466, 472], "implement_for": [0, 3, 454], "set_auto_unwrap_transformed_env": [0, 12, 263, 454], "auto_unwrap_transformed_env": [0, 428, 454], "thing": [0, 1, 3, 7, 8, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 262, 306, 307, 371, 385, 455, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 479, 482], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 35, 39, 40, 42, 47, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 101, 103, 115, 116, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 223, 270, 273, 288, 306, 307, 324, 329, 331, 335, 363, 365, 378, 383, 385, 387, 388, 395, 397, 400, 402, 403, 455, 458, 462, 467, 468, 469, 477, 479], "when": [0, 1, 2, 3, 5, 8, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 115, 116, 117, 119, 123, 127, 130, 133, 134, 136, 137, 138, 144, 145, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 204, 207, 209, 212, 213, 217, 218, 221, 223, 224, 233, 234, 236, 237, 241, 242, 249, 256, 258, 261, 262, 263, 266, 268, 269, 270, 271, 273, 274, 276, 277, 288, 290, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 316, 319, 325, 329, 331, 335, 347, 348, 351, 352, 354, 358, 363, 364, 365, 367, 371, 372, 378, 379, 380, 382, 383, 385, 387, 388, 389, 395, 397, 398, 399, 400, 401, 402, 403, 418, 419, 420, 422, 425, 427, 435, 452, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468, 470, 471, 475, 476, 477, 478, 479, 481, 482], "debug": [0, 6, 8, 50, 71, 84, 258, 455, 482], "work": [0, 1, 2, 3, 4, 8, 24, 26, 35, 42, 47, 55, 65, 66, 69, 72, 77, 101, 108, 113, 115, 116, 119, 126, 127, 130, 133, 136, 137, 138, 141, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 204, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 271, 273, 274, 280, 281, 301, 329, 331, 335, 345, 350, 355, 364, 379, 382, 395, 397, 438, 455, 456, 457, 462, 463, 464, 465, 467, 470, 474, 475, 476, 477, 478, 479, 481, 482], "habitat": [0, 3, 139, 455, 478], "lab": [0, 3, 131, 132, 139, 142, 455], "mujoco": [0, 6, 8, 163, 455, 462, 464, 465], "error": [0, 1, 3, 7, 10, 33, 34, 35, 38, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 70, 72, 73, 77, 84, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 242, 261, 273, 274, 329, 331, 335, 380, 395, 396, 397, 455, 458, 462, 464, 475, 476, 482], "solut": [0, 2, 3, 6, 7, 9, 27, 115, 455, 457, 459, 466, 481], "resourc": [0, 1, 13, 22, 23, 25, 27, 139, 455, 456, 462, 464, 466, 475, 476], "issu": [0, 2, 3, 4, 5, 8, 67, 99, 101, 103, 115, 123, 127, 130, 133, 136, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 213, 242, 257, 339, 344, 345, 348, 349, 350, 351, 352, 455, 481], "customis": [0, 455, 463, 471], "video": [0, 4, 9, 95, 420, 422, 425, 427, 433, 452, 454, 455, 472, 475, 476], "render": [0, 3, 8, 144, 171, 418, 420, 433, 455, 462, 463, 464, 466, 467, 471], "index": [0, 3, 7, 8, 10, 18, 29, 33, 34, 36, 37, 38, 39, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 100, 101, 102, 103, 107, 108, 110, 111, 113, 115, 119, 121, 122, 123, 125, 126, 127, 130, 133, 137, 145, 149, 150, 155, 156, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 204, 208, 213, 217, 223, 263, 304, 305, 347, 396, 454, 467, 474, 475, 476, 479, 481], "search": [0, 2, 39, 40, 48, 74, 84, 154, 205, 463], "page": [0, 7, 32, 427, 469], "import": [1, 2, 3, 4, 6, 10, 11, 15, 16, 18, 21, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 147, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 209, 210, 212, 213, 216, 218, 219, 225, 226, 231, 232, 233, 234, 237, 239, 241, 243, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 264, 268, 270, 271, 273, 274, 277, 279, 283, 284, 285, 286, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 306, 307, 308, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 418, 420, 431, 433, 448, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "syncdatacollector": [1, 2, 3, 15, 16, 19, 21, 22, 23, 25, 27, 29, 44, 55, 75, 210, 213, 246, 278, 296, 300, 448, 451, 454, 462, 463, 464, 465, 466, 470, 472, 475, 476, 479], "currentmodul": 1, "somewhat": [1, 2, 191, 458, 468, 482], "equival": [1, 3, 27, 33, 34, 35, 38, 39, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 83, 84, 94, 95, 96, 97, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 222, 225, 256, 258, 263, 273, 290, 298, 301, 319, 329, 331, 335, 344, 345, 349, 350, 382, 395, 396, 397, 435, 470, 481, 482], "dataload": [1, 29, 94, 114, 116, 186, 191, 463, 470, 479], "except": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 227, 246, 255, 256, 257, 261, 263, 273, 275, 293, 294, 296, 298, 300, 313, 317, 329, 331, 335, 362, 365, 380, 382, 385, 395, 396, 397, 420, 457, 462, 463, 467, 475, 479, 481, 482], "1": [1, 2, 3, 4, 8, 10, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 101, 102, 103, 107, 108, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 204, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 231, 233, 234, 235, 237, 239, 241, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 268, 270, 271, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 329, 331, 334, 335, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 414, 415, 417, 418, 420, 429, 433, 435, 436, 448, 452, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482], "thei": [1, 2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 108, 110, 127, 130, 133, 136, 137, 138, 145, 148, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 212, 227, 233, 241, 250, 258, 262, 263, 268, 273, 300, 329, 331, 335, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 435, 438, 457, 458, 459, 462, 463, 464, 465, 466, 469, 474, 475, 476, 477, 478, 479, 481, 482], "over": [1, 2, 3, 4, 8, 15, 16, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 93, 108, 110, 114, 115, 116, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 206, 223, 237, 249, 257, 271, 273, 313, 316, 325, 328, 329, 331, 335, 354, 372, 374, 380, 395, 397, 400, 406, 418, 441, 457, 459, 462, 463, 464, 466, 467, 468, 469, 470, 475, 476, 477, 482], "non": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 33, 35, 36, 37, 39, 40, 42, 47, 48, 49, 55, 57, 58, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 102, 104, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 210, 211, 213, 217, 228, 241, 253, 256, 262, 263, 264, 265, 266, 268, 271, 273, 279, 294, 296, 298, 300, 306, 329, 331, 335, 351, 352, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 457, 462, 465, 466, 475, 476, 477, 479, 482], "static": [1, 42, 65, 71, 77, 83, 108, 115, 116, 139, 158, 182, 188, 270, 274, 329, 331, 335, 378, 395, 467, 477, 479], "like": [1, 2, 3, 4, 7, 11, 24, 27, 35, 39, 40, 42, 47, 48, 50, 55, 57, 62, 65, 66, 69, 72, 74, 77, 78, 79, 83, 104, 110, 116, 127, 130, 133, 134, 137, 139, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 225, 256, 259, 273, 294, 298, 307, 329, 331, 335, 346, 352, 362, 364, 379, 382, 383, 384, 395, 397, 457, 458, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482], "being": [1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 35, 42, 47, 55, 65, 66, 72, 73, 77, 94, 102, 121, 124, 127, 130, 133, 136, 137, 138, 139, 144, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 212, 221, 223, 224, 231, 236, 244, 256, 261, 262, 263, 273, 293, 296, 300, 317, 329, 331, 335, 364, 365, 379, 380, 382, 385, 395, 397, 420, 435, 440, 450, 451, 452, 457, 458, 462, 463, 464, 465, 470, 475, 476, 477, 479], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 35, 42, 47, 55, 61, 63, 65, 66, 69, 70, 72, 77, 84, 85, 94, 95, 96, 97, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 208, 213, 217, 228, 231, 241, 249, 253, 256, 261, 262, 263, 264, 265, 266, 268, 273, 301, 328, 329, 331, 335, 351, 352, 353, 365, 385, 395, 396, 397, 420, 459, 464, 467, 471, 479, 481, 482], "two": [1, 2, 3, 4, 8, 10, 35, 42, 47, 50, 51, 52, 53, 54, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 84, 110, 114, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 218, 237, 241, 261, 268, 273, 286, 294, 296, 298, 300, 306, 307, 322, 325, 329, 331, 335, 352, 379, 387, 391, 395, 397, 433, 438, 458, 462, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 479, 481, 482], "main": [1, 2, 3, 5, 15, 16, 20, 25, 28, 31, 67, 134, 213, 218, 352, 438, 456, 457, 458, 462, 463, 474, 481, 482], "argument": [1, 2, 3, 11, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 110, 113, 114, 115, 116, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 204, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 235, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 293, 294, 296, 298, 300, 301, 304, 305, 306, 307, 309, 317, 328, 329, 331, 332, 335, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 408, 418, 419, 420, 425, 427, 431, 438, 441, 448, 449, 452, 462, 463, 464, 465, 466, 467, 468, 470, 475, 476, 477, 479, 481, 482], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 97, 102, 104, 110, 113, 114, 115, 116, 117, 119, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 204, 211, 212, 216, 221, 222, 224, 233, 234, 237, 239, 241, 249, 251, 259, 260, 261, 262, 263, 265, 266, 268, 270, 273, 279, 280, 281, 283, 289, 292, 296, 300, 301, 304, 305, 311, 319, 329, 331, 332, 335, 345, 347, 349, 350, 352, 354, 355, 356, 363, 365, 378, 380, 383, 385, 387, 388, 394, 395, 397, 400, 403, 418, 419, 433, 435, 450, 451, 458, 462, 464, 467, 468, 469, 470, 474, 475, 477, 478, 479, 481, 482], "constructor": [1, 2, 3, 15, 16, 18, 22, 23, 25, 27, 29, 67, 69, 78, 79, 83, 107, 121, 127, 130, 133, 137, 145, 152, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 183, 185, 186, 187, 188, 209, 213, 261, 280, 281, 301, 338, 348, 352, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 400, 401, 402, 403, 404, 449, 452, 457, 462, 463, 464, 467, 470, 475, 476, 479, 481], "iter": [1, 2, 3, 16, 18, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 93, 94, 104, 110, 114, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 226, 237, 250, 273, 274, 276, 278, 279, 280, 281, 301, 306, 307, 323, 329, 331, 335, 339, 344, 348, 349, 351, 353, 354, 356, 380, 394, 395, 397, 433, 437, 438, 458, 459, 462, 464, 465, 470, 472, 475, 476, 477], "execut": [1, 2, 3, 6, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 101, 102, 110, 115, 116, 127, 128, 129, 130, 133, 134, 137, 138, 139, 141, 143, 144, 145, 151, 152, 157, 158, 161, 163, 166, 167, 168, 169, 178, 179, 180, 183, 186, 187, 188, 193, 207, 218, 219, 235, 258, 263, 293, 294, 296, 298, 300, 308, 338, 347, 353, 354, 380, 387, 395, 397, 442, 452, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 479, 480, 481, 482], "queri": [1, 2, 3, 15, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 241, 266, 270, 273, 329, 331, 335, 354, 395, 396, 397, 458, 462, 469, 477, 481], "defin": [1, 2, 3, 15, 16, 18, 20, 21, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 242, 255, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 308, 311, 312, 315, 316, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 359, 367, 369, 380, 395, 397, 400, 401, 402, 403, 404, 419, 449, 457, 462, 463, 465, 469, 472, 477, 479, 482], "number": [1, 2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 113, 115, 116, 123, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 151, 152, 153, 154, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 223, 225, 226, 227, 229, 232, 233, 236, 237, 240, 242, 243, 244, 246, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 273, 275, 276, 277, 280, 281, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306, 307, 311, 312, 317, 318, 320, 321, 324, 325, 326, 327, 329, 331, 333, 335, 339, 343, 347, 348, 351, 352, 356, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 425, 427, 429, 431, 433, 438, 440, 441, 442, 450, 451, 452, 456, 457, 458, 462, 463, 464, 465, 467, 468, 470, 472, 475, 476, 477, 478, 479, 482], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 35, 38, 42, 43, 47, 50, 51, 52, 55, 65, 66, 72, 77, 83, 84, 114, 116, 121, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 278, 294, 296, 300, 301, 309, 310, 329, 331, 335, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 401, 402, 403, 435, 456, 462, 464, 465, 466, 470, 471, 475, 476, 477, 479, 482], "deliv": [1, 2, 3, 18, 191, 462, 463, 467, 470, 481], "stack": [1, 2, 3, 7, 8, 15, 16, 18, 22, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 102, 107, 110, 127, 130, 133, 136, 137, 138, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 191, 196, 197, 213, 218, 235, 270, 294, 296, 298, 299, 300, 347, 353, 354, 363, 365, 378, 383, 385, 387, 388, 396, 400, 419, 429, 454, 456, 463, 466, 467, 474, 475, 477, 481], "user": [1, 2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 42, 47, 50, 55, 65, 66, 72, 77, 84, 96, 108, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 214, 231, 255, 261, 263, 273, 287, 329, 331, 335, 365, 382, 385, 387, 395, 397, 420, 449, 456, 458, 459, 462, 463, 467, 469, 470, 477, 481, 482], "reach": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 71, 114, 127, 130, 133, 137, 144, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 235, 254, 275, 293, 317, 462, 464, 472, 475, 476, 481, 482], "done": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 74, 75, 77, 82, 84, 85, 86, 87, 88, 89, 98, 99, 106, 108, 110, 115, 116, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 206, 207, 209, 210, 213, 221, 222, 224, 225, 226, 231, 235, 236, 237, 239, 243, 244, 246, 248, 250, 253, 254, 256, 257, 260, 261, 262, 263, 264, 270, 273, 277, 294, 296, 300, 303, 325, 347, 362, 363, 364, 365, 366, 367, 369, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 457, 458, 462, 464, 465, 466, 467, 469, 470, 472, 474, 475, 476, 477, 479, 481, 482], "state": [1, 2, 3, 4, 15, 16, 18, 20, 21, 29, 35, 42, 44, 47, 50, 55, 62, 65, 66, 67, 68, 69, 71, 72, 75, 77, 78, 79, 84, 98, 99, 106, 110, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 151, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 209, 212, 213, 214, 216, 217, 219, 222, 225, 228, 231, 235, 237, 244, 254, 255, 260, 261, 262, 263, 264, 265, 270, 271, 273, 277, 282, 287, 291, 294, 295, 296, 298, 299, 300, 301, 303, 308, 311, 315, 318, 320, 321, 327, 329, 331, 335, 340, 347, 351, 357, 362, 364, 365, 369, 371, 379, 380, 382, 383, 384, 385, 395, 397, 398, 399, 400, 401, 402, 403, 404, 438, 452, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 475, 476, 477, 482], "after": [1, 2, 3, 8, 13, 15, 16, 21, 22, 23, 25, 27, 35, 42, 44, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 95, 96, 97, 103, 110, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 293, 294, 296, 300, 309, 329, 331, 335, 344, 349, 365, 374, 385, 387, 395, 396, 397, 400, 463, 464, 465, 466, 467, 468, 470, 472, 475, 476, 477, 478, 479, 482], "predefin": [1, 420, 463, 465, 470, 479, 481], "becaus": [1, 2, 3, 4, 7, 35, 42, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 95, 96, 97, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 225, 233, 254, 269, 273, 286, 307, 329, 331, 335, 339, 344, 345, 347, 348, 349, 350, 351, 352, 362, 382, 395, 396, 397, 400, 457, 462, 463, 465, 466, 468, 469, 470, 474, 475, 476, 477, 479, 482], "potenti": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 477, 479], "comput": [1, 3, 4, 8, 15, 17, 18, 27, 29, 35, 38, 42, 47, 55, 65, 66, 71, 72, 77, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 237, 251, 263, 267, 271, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 315, 317, 320, 321, 323, 325, 326, 328, 329, 331, 335, 340, 343, 345, 347, 348, 350, 352, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 442, 456, 458, 462, 464, 465, 466, 467, 468, 474, 475, 476, 478, 479], "heavi": [1, 8, 479], "crucial": [1, 2, 3, 275, 293, 317, 370, 378, 380, 456, 462, 463, 464, 465, 467, 469, 471, 475, 476, 477, 481, 482], "configur": [1, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 71, 130, 179, 192, 233, 282, 287, 315, 331, 335, 380, 382, 395, 457, 462, 463, 464, 469, 475, 476, 477], "hyperparamet": [1, 113, 273, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 462, 471, 477, 479], "appropri": [1, 3, 4, 7, 100, 111, 121, 122, 125, 126, 145, 157, 166, 187, 188, 225, 449, 452, 456, 462, 471, 479], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 117, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 457, 458, 462, 465, 466, 468, 472, 475, 476, 477, 478, 481], "take": [1, 2, 3, 8, 31, 35, 42, 47, 50, 65, 66, 71, 72, 77, 118, 124, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 216, 218, 254, 257, 258, 262, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 334, 335, 343, 345, 346, 347, 348, 350, 352, 355, 358, 361, 382, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 429, 440, 456, 457, 459, 462, 463, 464, 466, 467, 468, 469, 475, 476, 477, 479, 482], "consider": [1, 2, 3, 8, 136, 138, 262, 463, 475, 476, 479], "whether": [1, 2, 3, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 96, 101, 103, 110, 111, 123, 127, 130, 133, 137, 144, 145, 149, 150, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 209, 218, 219, 221, 224, 255, 261, 263, 270, 271, 273, 280, 281, 296, 300, 301, 329, 331, 332, 335, 347, 352, 356, 362, 363, 364, 365, 366, 367, 369, 371, 372, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 428, 452, 462, 463, 464, 466, 467, 475, 476, 477, 481, 482], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 101, 104, 108, 110, 115, 116, 117, 121, 124, 127, 130, 131, 132, 133, 136, 137, 138, 139, 144, 145, 148, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 206, 209, 210, 213, 216, 217, 218, 221, 222, 225, 226, 228, 233, 234, 235, 237, 242, 243, 244, 246, 249, 250, 254, 255, 257, 260, 262, 263, 264, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 307, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 348, 350, 351, 352, 355, 358, 362, 364, 365, 371, 377, 379, 380, 382, 383, 384, 385, 386, 387, 395, 396, 397, 399, 400, 401, 402, 403, 404, 420, 422, 428, 433, 434, 435, 438, 448, 450, 451, 452, 457, 458, 459, 462, 463, 464, 465, 466, 468, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "occur": [1, 8, 16, 42, 65, 73, 74, 77, 84, 127, 130, 133, 137, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 214, 226, 237, 242, 269, 276, 329, 331, 335, 339, 344, 345, 348, 349, 350, 351, 352, 374, 395, 466, 479, 482], "serial": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 270, 271, 273, 329, 331, 335, 395, 397], "parallel": [1, 3, 8, 127, 130, 133, 136, 137, 138, 145, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 263, 269, 296, 300, 362, 449, 450, 451, 452, 463, 464, 475, 476, 481], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 61, 63, 70, 82, 83, 84, 94, 95, 96, 97, 134, 152, 157, 166, 184, 261, 270, 271, 332, 333, 334, 396, 450, 451, 452, 462, 463, 464, 481, 482], "multisyncdatacollector": [1, 16, 22, 23, 25, 27, 278, 451, 454, 464, 470, 481], "split": [1, 15, 16, 18, 21, 22, 23, 25, 27, 39, 40, 46, 48, 61, 63, 74, 83, 94, 108, 115, 116, 148, 159, 160, 179, 294, 298, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 457, 459, 464, 468, 479, 481], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 66, 69, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 108, 115, 116, 128, 129, 131, 132, 136, 138, 139, 141, 143, 144, 152, 153, 157, 163, 168, 261, 270, 271, 273, 296, 300, 306, 316, 317, 380, 395, 397, 440, 454, 456, 457, 458, 462, 467, 471, 475, 476, 477], "aggreg": [1, 3, 35, 65, 108, 121, 159, 160, 185, 205, 234, 271, 280, 281, 283, 284, 354, 458, 476], "result": [1, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 36, 42, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 84, 85, 95, 96, 97, 108, 110, 114, 115, 116, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 278, 293, 294, 296, 298, 300, 301, 306, 319, 325, 329, 331, 335, 343, 345, 350, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 440, 458, 463, 465, 467, 468, 471, 472, 477, 478, 481, 482], "final": [1, 2, 3, 4, 27, 50, 61, 63, 70, 71, 84, 95, 96, 97, 180, 183, 184, 256, 269, 275, 293, 294, 296, 298, 300, 306, 317, 346, 353, 396, 400, 433, 457, 462, 463, 464, 466, 471, 472, 475, 476, 477, 482], "multiasyncdatacollector": [1, 15, 21, 22, 23, 25, 27, 278, 450, 454, 462, 463, 464, 470, 481], "sever": [1, 2, 3, 8, 35, 42, 47, 51, 55, 65, 66, 72, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 214, 216, 234, 263, 273, 329, 331, 335, 382, 395, 397, 462, 464, 466, 471, 472, 479, 482], "gather": [1, 3, 22, 25, 27, 50, 83, 94, 101, 103, 108, 115, 123, 235, 242, 305, 308, 313, 380, 395, 399, 442, 455, 456, 463, 464, 465, 470, 475, 476, 477, 479, 481, 482], "continu": [1, 2, 3, 9, 36, 39, 50, 85, 86, 87, 96, 116, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 198, 206, 231, 256, 264, 283, 284, 285, 286, 316, 317, 354, 359, 363, 386, 400, 405, 413, 457, 462, 464, 468, 475, 476, 479], "concomitantli": [1, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188], "network": [1, 4, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 280, 281, 283, 284, 285, 286, 289, 291, 292, 298, 301, 306, 307, 308, 310, 311, 312, 314, 316, 318, 320, 321, 322, 327, 329, 331, 335, 340, 341, 342, 343, 351, 355, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393, 395, 397, 398, 400, 401, 402, 403, 404, 447, 448, 457, 458, 459, 466, 469, 472, 474, 477, 482], "impli": [1, 84, 482], "mai": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 95, 96, 97, 99, 102, 108, 115, 127, 130, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 237, 250, 261, 263, 265, 270, 271, 273, 276, 296, 300, 301, 306, 329, 331, 335, 352, 364, 371, 379, 382, 385, 395, 396, 397, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 475, 476, 477, 478, 479, 482], "slightli": [1, 31, 458, 465, 466, 475, 477, 478, 479, 482], "lag": [1, 462, 463, 464], "therefor": [1, 2, 3, 7, 62, 69, 78, 79, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 246, 382, 397, 398, 456, 466, 469, 475, 482], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 213], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 35, 42, 44, 46, 47, 50, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 99, 101, 103, 108, 110, 115, 116, 121, 123, 124, 127, 130, 133, 137, 145, 148, 151, 154, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 204, 205, 206, 207, 210, 213, 218, 225, 233, 241, 246, 249, 254, 255, 256, 257, 258, 262, 263, 265, 268, 269, 273, 275, 293, 294, 295, 296, 298, 299, 300, 304, 305, 306, 314, 316, 317, 329, 331, 335, 343, 348, 351, 352, 361, 362, 363, 364, 365, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 458, 459, 462, 463, 464, 466, 467, 474, 475, 476, 477, 479, 482], "off": [1, 2, 4, 297, 326, 344, 385, 418, 433, 443, 457, 459, 462, 463, 464, 468, 469, 475, 476, 478, 481, 482], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 42, 43, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 103, 108, 110, 115, 123, 127, 130, 133, 136, 137, 138, 142, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 221, 224, 228, 237, 255, 262, 263, 269, 273, 290, 294, 296, 298, 300, 304, 307, 309, 329, 331, 335, 340, 342, 343, 345, 349, 362, 370, 372, 378, 382, 395, 397, 433, 457, 458, 459, 462, 463, 464, 465, 467, 468, 470, 471, 475, 476, 477, 478, 479, 482], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 62, 67, 68, 69, 78, 79, 110, 157, 166, 271, 332, 482], "rollout": [1, 2, 3, 11, 15, 16, 18, 21, 27, 29, 31, 50, 71, 77, 84, 121, 127, 128, 129, 130, 133, 137, 139, 140, 143, 144, 145, 149, 150, 151, 152, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 191, 206, 207, 209, 210, 213, 216, 218, 219, 221, 224, 225, 226, 231, 233, 234, 239, 243, 244, 249, 250, 251, 254, 255, 257, 258, 261, 264, 270, 271, 273, 277, 278, 279, 296, 300, 303, 317, 347, 362, 418, 420, 442, 457, 462, 464, 465, 468, 469, 470, 471, 472, 478, 479, 481], "necessari": [1, 4, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 250, 383, 400, 401, 402, 403, 404, 456, 458, 462, 464, 468, 469, 470], "synchronis": [1, 134, 475, 476], "either": [1, 2, 5, 28, 33, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 94, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 235, 254, 255, 271, 273, 329, 331, 335, 357, 380, 387, 388, 395, 397, 424, 459, 462, 463, 465, 475, 478, 479, 481, 482], "update_policy_weights_": [1, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 462, 476, 481], "update_at_each_batch": [1, 15, 16, 21], "true": [1, 2, 3, 4, 8, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 107, 108, 110, 111, 113, 114, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 204, 205, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 223, 226, 228, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 245, 248, 249, 250, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 280, 281, 283, 284, 285, 286, 292, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 324, 325, 326, 329, 331, 332, 335, 338, 339, 340, 341, 342, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 400, 401, 402, 403, 406, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 427, 428, 431, 432, 433, 435, 438, 452, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "second": [1, 2, 3, 8, 15, 16, 18, 21, 29, 31, 50, 51, 52, 53, 54, 121, 157, 210, 258, 294, 296, 298, 300, 345, 364, 379, 382, 385, 420, 422, 425, 427, 437, 462, 464, 470, 475, 476, 477, 479, 481, 482], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 201, 204, 206, 210, 217, 221, 222, 224, 225, 226, 231, 233, 234, 239, 240, 241, 243, 244, 246, 250, 253, 254, 256, 259, 262, 263, 264, 266, 268, 270, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 306, 307, 309, 310, 315, 317, 318, 319, 327, 329, 330, 331, 332, 333, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 418, 435, 440, 446, 457, 462, 463, 464, 465, 466, 475, 476, 477, 478, 481], "oper": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 102, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 228, 233, 258, 260, 264, 271, 273, 289, 290, 295, 299, 329, 331, 335, 340, 341, 342, 344, 345, 346, 351, 357, 362, 364, 366, 367, 372, 379, 382, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 438, 454, 456, 458, 459, 462, 463, 464, 465, 466, 467, 468, 474, 475, 476, 477, 482], "instanc": [1, 2, 3, 4, 7, 8, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 35, 36, 42, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 82, 83, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 106, 108, 110, 115, 116, 123, 127, 130, 132, 133, 134, 136, 137, 138, 142, 145, 151, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 205, 237, 256, 263, 270, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 306, 307, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 332, 333, 335, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 363, 365, 367, 370, 371, 378, 380, 383, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 418, 420, 424, 428, 433, 442, 443, 444, 448, 450, 451, 456, 457, 458, 459, 462, 464, 465, 466, 467, 468, 477, 479, 482], "cpu": [1, 2, 3, 8, 10, 15, 16, 18, 21, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 110, 115, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 204, 206, 210, 217, 221, 222, 224, 225, 226, 231, 234, 239, 241, 243, 244, 246, 250, 253, 254, 256, 262, 263, 264, 266, 268, 273, 277, 279, 289, 294, 295, 296, 298, 299, 300, 303, 309, 310, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354, 356, 359, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 418, 457, 462, 463, 464, 465, 475, 476, 477, 478, 481], "slower": [1, 475], "than": [1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 32, 33, 35, 65, 84, 108, 115, 116, 119, 121, 127, 130, 133, 137, 141, 145, 155, 156, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 218, 234, 235, 244, 271, 275, 286, 296, 298, 300, 301, 328, 339, 344, 351, 352, 356, 380, 395, 397, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 455, 457, 458, 462, 463, 464, 466, 467, 469, 475, 476, 477, 479, 481, 482], "one": [1, 2, 3, 4, 5, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 110, 111, 115, 116, 117, 119, 121, 122, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 210, 213, 216, 218, 219, 221, 222, 223, 224, 231, 234, 236, 237, 241, 246, 249, 252, 253, 255, 256, 257, 262, 263, 265, 268, 270, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 307, 308, 311, 312, 313, 314, 315, 317, 319, 320, 321, 323, 328, 329, 331, 335, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 395, 396, 397, 398, 400, 401, 402, 403, 407, 408, 420, 422, 431, 433, 434, 438, 442, 452, 455, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 482], "cuda": [1, 2, 3, 7, 15, 16, 18, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 128, 129, 130, 133, 137, 139, 140, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 233, 240, 241, 256, 262, 263, 266, 268, 273, 294, 295, 298, 299, 329, 331, 332, 335, 351, 395, 397, 430, 462, 463, 464, 465, 475, 476, 478, 482], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 53, 65, 69, 78, 79, 80, 84, 103, 110, 111, 123, 127, 128, 129, 143, 144, 157, 166, 168, 186, 191, 214, 216, 223, 232, 235, 236, 246, 249, 253, 254, 261, 270, 294, 298, 300, 306, 309, 310, 339, 344, 348, 349, 351, 352, 355, 364, 371, 379, 382, 392, 406, 452, 457, 458, 459, 462, 463, 464, 467, 469, 470, 475, 476, 477, 479, 481], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 213, 270, 309, 332, 343, 348, 352, 369, 418, 456, 462, 464, 466, 470, 472, 479, 481], "dispatch": [1, 3, 22, 23, 25, 27, 42, 65, 77, 181, 182, 185, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 328, 329, 331, 335, 347, 395, 397, 420, 462, 482], "avail": [1, 2, 3, 4, 6, 27, 62, 69, 78, 79, 108, 114, 115, 116, 128, 129, 131, 132, 141, 143, 144, 149, 150, 155, 156, 157, 159, 160, 163, 169, 170, 171, 172, 190, 192, 206, 209, 212, 231, 233, 290, 319, 348, 352, 380, 395, 420, 450, 451, 454, 462, 463, 464, 465, 466, 467, 468, 475, 476, 477, 479, 482], "speed": [1, 2, 3, 4, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 458, 462, 463, 464, 465, 475, 476, 477, 479, 481], "avoid": [1, 2, 3, 35, 42, 47, 55, 65, 66, 72, 77, 101, 103, 115, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 213, 231, 261, 263, 270, 271, 273, 276, 325, 329, 331, 335, 339, 351, 356, 364, 365, 379, 382, 385, 395, 397, 441, 464, 466, 476], "oom": [1, 3, 61, 63, 70, 84, 95, 96, 97, 101, 103, 123, 184, 396], "choic": [1, 2, 57, 157, 191, 457, 458, 462, 463, 469, 475, 476], "pass": [1, 2, 3, 4, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 33, 35, 39, 40, 42, 47, 48, 55, 57, 62, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 82, 83, 96, 99, 101, 103, 108, 110, 115, 116, 121, 123, 127, 130, 133, 134, 135, 137, 138, 145, 148, 152, 157, 158, 159, 160, 161, 166, 167, 168, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 207, 209, 210, 213, 219, 221, 224, 234, 235, 243, 244, 261, 265, 270, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 307, 308, 309, 311, 312, 315, 317, 318, 320, 321, 323, 327, 328, 329, 331, 332, 335, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 363, 364, 365, 378, 379, 380, 382, 383, 385, 387, 388, 395, 397, 400, 401, 402, 403, 404, 418, 435, 438, 450, 451, 452, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 479, 481, 482], "ie": [1, 2, 3, 22, 25, 28, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 89, 107, 116, 127, 130, 133, 137, 141, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 206, 213, 228, 253, 256, 265, 270, 296, 300, 329, 331, 335, 343, 351, 395, 457, 458, 463, 476], "store": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 35, 39, 42, 45, 46, 47, 50, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 110, 115, 121, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 231, 258, 269, 270, 271, 273, 275, 277, 278, 303, 317, 329, 331, 335, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 427, 454, 456, 459, 462, 464, 465, 468, 470, 472, 475, 476, 478, 482], "while": [1, 2, 3, 7, 8, 15, 16, 18, 21, 29, 31, 35, 42, 47, 55, 65, 66, 67, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 246, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 370, 378, 379, 382, 395, 397, 457, 458, 462, 464, 465, 468, 470, 471, 475, 476, 477, 478, 479, 481], "wait": [1, 13, 15, 16, 21, 22, 23, 24, 25, 27, 28, 67, 169, 465, 477], "also": [1, 2, 3, 8, 9, 11, 15, 16, 31, 33, 34, 35, 38, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 69, 70, 72, 77, 78, 79, 82, 84, 94, 95, 96, 97, 101, 102, 103, 108, 110, 115, 116, 121, 123, 127, 130, 133, 137, 144, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 203, 204, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 223, 225, 226, 227, 229, 231, 232, 233, 237, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 273, 274, 280, 281, 294, 298, 301, 321, 329, 331, 335, 347, 348, 353, 354, 355, 362, 363, 365, 366, 367, 369, 370, 371, 376, 378, 382, 385, 387, 395, 396, 397, 400, 407, 408, 418, 420, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 479, 481, 482], "impact": [1, 2, 3, 13, 22, 23, 25, 144, 221, 224, 276, 362, 364, 379, 382, 384, 395, 463, 465, 475, 476], "memori": [1, 3, 8, 27, 35, 38, 42, 47, 55, 61, 63, 65, 66, 67, 70, 72, 77, 83, 84, 95, 96, 97, 99, 101, 102, 106, 127, 130, 133, 134, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 217, 241, 256, 262, 263, 266, 268, 270, 271, 273, 288, 298, 299, 329, 331, 335, 351, 395, 396, 397, 452, 454, 459, 462, 463, 465, 475, 479, 481], "manag": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 278, 296, 300, 338, 393, 394, 400, 401, 402, 403, 428, 433, 456, 457, 465, 466, 469, 481], "kei": [1, 2, 7, 15, 16, 18, 21, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 107, 108, 110, 113, 115, 116, 121, 127, 130, 133, 137, 143, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 275, 277, 279, 289, 290, 293, 296, 300, 302, 303, 317, 319, 329, 331, 335, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 418, 420, 432, 433, 434, 436, 437, 438, 442, 458, 459, 462, 464, 465, 466, 467, 469, 474, 475, 476, 477, 479, 481, 482], "control": [1, 3, 5, 8, 18, 31, 32, 39, 40, 41, 48, 69, 74, 78, 79, 108, 110, 115, 127, 130, 131, 132, 133, 137, 144, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 223, 283, 284, 285, 286, 296, 300, 302, 303, 317, 321, 328, 330, 331, 335, 351, 352, 353, 362, 364, 365, 379, 380, 382, 386, 395, 400, 405, 413, 418, 428, 457, 459, 462, 463, 464, 465, 466, 467, 468, 469, 475, 476, 477, 479, 481], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 102, 110, 113, 114, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 213, 214, 218, 221, 224, 229, 231, 233, 234, 236, 237, 241, 242, 244, 254, 256, 257, 260, 261, 262, 263, 264, 266, 270, 273, 274, 289, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 314, 316, 326, 329, 331, 335, 340, 341, 342, 343, 347, 348, 351, 352, 353, 354, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 398, 400, 401, 402, 403, 418, 420, 429, 434, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 482], "storing_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 463, 476], "dure": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 62, 63, 66, 67, 68, 69, 71, 72, 78, 79, 83, 94, 99, 104, 108, 110, 113, 115, 127, 130, 133, 134, 137, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 190, 191, 194, 195, 209, 210, 213, 216, 221, 224, 226, 228, 229, 231, 235, 239, 251, 253, 256, 258, 260, 261, 263, 264, 265, 270, 271, 273, 276, 278, 279, 296, 300, 307, 347, 400, 402, 403, 433, 438, 458, 462, 463, 464, 465, 468, 469, 470, 472, 475, 476, 477, 479, 482], "heurist": [1, 4, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 275, 347, 352, 462, 466, 470, 482], "usual": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 113, 121, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 261, 310, 382, 387, 399, 400, 401, 402, 403, 404, 419, 455, 456, 457, 458, 459, 462, 463, 464, 465, 468, 470, 471, 476, 479, 482], "same": [1, 2, 3, 4, 18, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 114, 115, 116, 119, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 213, 221, 223, 224, 229, 231, 234, 235, 236, 237, 253, 261, 262, 263, 270, 273, 274, 280, 281, 295, 299, 301, 304, 305, 306, 307, 317, 325, 329, 331, 335, 343, 355, 363, 365, 378, 380, 383, 385, 387, 388, 392, 395, 396, 397, 458, 462, 463, 464, 467, 468, 470, 474, 475, 476, 478, 479, 482], "default": [1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 110, 111, 113, 114, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 319, 320, 321, 323, 324, 325, 326, 329, 331, 332, 333, 335, 338, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 448, 452, 458, 459, 462, 463, 464, 465, 468, 475, 478, 479, 481, 482], "behavior": [1, 2, 3, 4, 15, 16, 27, 35, 42, 47, 55, 65, 66, 72, 77, 82, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 214, 221, 224, 237, 242, 255, 263, 271, 273, 276, 296, 297, 300, 326, 329, 331, 335, 370, 378, 387, 395, 397, 418, 428, 433, 457, 463, 465, 475, 476, 477, 479], "besid": 1, "those": [1, 2, 3, 5, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 195, 213, 218, 221, 224, 231, 237, 256, 257, 260, 264, 300, 316, 348, 352, 353, 354, 440, 450, 451, 457, 462, 463, 467, 468, 476, 477, 482], "choos": [1, 3, 11, 57, 127, 130, 148, 296, 300, 382, 454, 458, 462, 463, 464, 466, 475, 476, 479, 481], "follow": [1, 2, 3, 6, 7, 8, 11, 20, 35, 42, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 77, 82, 84, 95, 96, 97, 108, 115, 116, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 151, 154, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 209, 213, 233, 241, 266, 270, 271, 273, 280, 281, 294, 296, 298, 300, 301, 329, 331, 335, 345, 348, 349, 350, 361, 362, 363, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 396, 397, 420, 438, 457, 458, 459, 462, 463, 464, 465, 466, 469, 470, 474, 475, 476, 477, 479, 481, 482], "max_frames_per_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 441, 462, 464, 481], "frame": [1, 2, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 178, 213, 229, 273, 275, 293, 317, 347, 419, 420, 422, 425, 427, 431, 433, 438, 441, 442, 456, 462, 463, 464, 465, 468, 475, 476, 479, 481, 482], "call": [1, 2, 3, 7, 8, 11, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 101, 102, 103, 104, 108, 109, 110, 114, 115, 117, 119, 123, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 307, 308, 309, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 351, 352, 354, 355, 358, 363, 364, 365, 371, 378, 379, 380, 382, 383, 385, 387, 388, 395, 396, 397, 399, 400, 401, 402, 403, 418, 419, 422, 433, 458, 459, 463, 464, 465, 466, 467, 468, 470, 471, 475, 476, 477, 479, 481, 482], "frames_per_batch": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 44, 55, 67, 75, 210, 213, 246, 296, 300, 441, 462, 463, 464, 465, 466, 470, 472, 475, 476, 479, 481], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 39, 40, 42, 46, 47, 48, 50, 51, 53, 55, 56, 65, 66, 69, 71, 72, 74, 76, 77, 78, 84, 108, 110, 113, 115, 116, 118, 121, 127, 130, 133, 134, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 232, 234, 235, 241, 246, 249, 254, 255, 256, 257, 261, 262, 268, 270, 271, 273, 274, 275, 290, 293, 294, 295, 296, 298, 300, 306, 307, 311, 318, 319, 327, 329, 331, 335, 338, 344, 345, 350, 352, 354, 364, 379, 382, 395, 397, 400, 406, 409, 410, 411, 412, 414, 415, 416, 417, 420, 433, 435, 450, 451, 458, 462, 463, 464, 465, 468, 469, 470, 472, 475, 476, 477, 478, 479, 481, 482], "init_random_fram": [1, 15, 16, 18, 21, 22, 23, 25, 27, 441, 462, 463, 466, 472], "rand_step": [1, 2, 3, 44, 75, 127, 130, 131, 132, 133, 134, 136, 137, 138, 145, 146, 147, 151, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 232, 256, 270, 477, 481, 482], "reset_at_each_it": [1, 15, 16, 18, 21, 22, 23, 25, 27, 29, 462], "split_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 462, 463, 464], "trajectori": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 42, 45, 46, 55, 56, 76, 78, 84, 107, 108, 115, 116, 121, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 242, 254, 261, 273, 277, 300, 303, 317, 382, 397, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 429, 454, 458, 462, 463, 464, 465, 467, 470, 472, 477, 481, 482], "pad": [1, 2, 3, 31, 64, 80, 96, 191, 195, 197, 213, 260, 280, 281, 283, 284, 300, 304, 305, 306, 331, 335, 435], "along": [1, 2, 3, 15, 16, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 103, 108, 110, 115, 116, 121, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 212, 213, 214, 235, 237, 239, 242, 249, 253, 259, 273, 300, 301, 304, 305, 310, 329, 331, 335, 344, 348, 351, 352, 365, 380, 387, 395, 396, 397, 462, 463, 465, 467, 469, 475, 476, 477, 479, 481], "point": [1, 2, 3, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 100, 107, 108, 111, 121, 122, 125, 126, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 273, 302, 329, 331, 335, 351, 361, 372, 395, 397, 438, 455, 463, 464, 474, 475, 476, 477, 479, 481, 482], "boolean": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 116, 137, 188, 205, 209, 218, 242, 254, 304, 305, 317, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 459, 465], "repres": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 39, 40, 44, 48, 50, 57, 74, 75, 77, 78, 84, 102, 127, 130, 131, 132, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 229, 242, 258, 270, 273, 290, 304, 305, 319, 325, 331, 335, 344, 345, 349, 350, 391, 400, 435, 457, 462, 464, 465, 466, 467, 468, 469, 475, 476], "valid": [1, 2, 3, 31, 61, 63, 64, 83, 84, 94, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 174, 178, 179, 180, 183, 186, 187, 188, 209, 242, 261, 263, 273, 275, 280, 281, 301, 304, 305, 317, 364, 371, 379, 382, 385, 400, 401, 402, 403, 435, 459, 466, 482], "exploration_typ": [1, 15, 16, 18, 21, 22, 23, 25, 27, 433, 454, 457, 462, 463], "strategi": [1, 2, 3, 18, 96, 113, 148, 206, 293, 305, 313, 457, 459, 462, 463, 466, 468, 475, 476, 479, 481], "reset_when_don": [1, 15, 16, 18, 21], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 103, 110, 115, 116, 127, 130, 133, 137, 144, 145, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 212, 213, 219, 225, 233, 254, 255, 256, 261, 263, 269, 270, 271, 273, 274, 275, 280, 281, 296, 300, 304, 305, 306, 307, 316, 329, 330, 331, 335, 344, 348, 349, 352, 355, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 388, 395, 396, 397, 398, 420, 438, 448, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482], "organ": [1, 2, 477, 479], "within": [1, 2, 3, 15, 16, 20, 21, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 102, 107, 108, 116, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 271, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 338, 343, 345, 347, 350, 352, 355, 358, 359, 367, 372, 387, 395, 396, 397, 398, 400, 418, 420, 456, 457, 458, 463, 466, 467, 468, 469, 470, 471, 472, 475, 477, 481], "differ": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 110, 113, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 213, 218, 222, 223, 234, 237, 244, 253, 261, 263, 265, 273, 274, 290, 294, 295, 298, 299, 301, 303, 306, 307, 308, 319, 329, 331, 335, 352, 378, 380, 382, 391, 395, 397, 400, 401, 402, 406, 407, 408, 433, 438, 440, 450, 451, 456, 457, 458, 459, 462, 463, 464, 466, 467, 469, 471, 474, 475, 476, 477, 478, 479, 481, 482], "how": [1, 2, 3, 11, 20, 22, 23, 25, 32, 35, 42, 47, 55, 62, 65, 66, 72, 77, 78, 107, 108, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 234, 273, 308, 329, 331, 335, 348, 362, 364, 377, 379, 380, 382, 395, 397, 420, 422, 438, 455, 457, 462, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "tabl": [1, 35, 457, 463, 468], "summar": [1, 3, 477], "what": [1, 3, 8, 11, 41, 42, 62, 82, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 204, 225, 256, 261, 349, 365, 376, 380, 387, 395, 455, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 475, 476, 477, 478, 479, 481, 482], "expect": [1, 2, 3, 4, 7, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 108, 114, 115, 127, 130, 133, 137, 145, 151, 154, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 228, 230, 232, 233, 234, 235, 237, 239, 241, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 294, 295, 296, 298, 299, 300, 306, 307, 317, 329, 331, 335, 345, 351, 354, 362, 363, 364, 365, 366, 367, 369, 370, 371, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 392, 395, 397, 398, 442, 455, 457, 458, 459, 462, 464, 465, 467, 468, 469, 470, 475, 476, 477, 479, 482], "n": [1, 2, 3, 6, 7, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 223, 228, 265, 273, 294, 295, 298, 303, 314, 316, 317, 329, 331, 335, 347, 352, 362, 363, 371, 380, 395, 397, 399, 435, 456, 459, 463, 465, 466, 479, 481, 482], "b": [1, 2, 3, 7, 8, 29, 31, 39, 40, 42, 48, 61, 63, 65, 69, 70, 71, 72, 74, 77, 78, 79, 84, 95, 96, 97, 101, 102, 121, 130, 184, 231, 264, 294, 295, 298, 299, 306, 307, 309, 310, 318, 327, 329, 331, 335, 355, 395, 396, 400, 401, 402, 403, 404, 406, 420, 463, 479], "cat_result": [1, 15, 16], "na": [1, 180, 183, 193], "t": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 107, 108, 110, 114, 115, 116, 121, 127, 130, 133, 134, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 269, 270, 273, 274, 294, 296, 298, 300, 317, 329, 331, 335, 344, 351, 362, 386, 395, 396, 397, 400, 401, 402, 403, 404, 406, 420, 427, 438, 440, 452, 455, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "p": [1, 2, 4, 110, 113, 134, 164, 165, 278, 279, 332], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 35, 42, 47, 55, 65, 66, 72, 77, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 221, 222, 224, 232, 241, 246, 250, 255, 256, 259, 261, 262, 263, 266, 268, 269, 271, 273, 274, 294, 297, 298, 301, 306, 321, 325, 326, 329, 331, 335, 351, 352, 354, 361, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 440, 450, 451, 452, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 482], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 106, 107, 108, 110, 121, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 221, 222, 224, 232, 237, 256, 259, 263, 264, 274, 300, 301, 307, 308, 348, 351, 352, 354, 355, 361, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 400, 401, 402, 403, 420, 429, 440, 450, 451, 452, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 475, 476, 477, 479, 481, 482], "dimens": [1, 3, 15, 16, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 69, 70, 71, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 108, 115, 116, 121, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 197, 198, 206, 212, 213, 214, 228, 235, 237, 239, 242, 249, 252, 253, 256, 259, 265, 270, 271, 280, 281, 282, 287, 288, 296, 298, 300, 301, 304, 305, 306, 309, 310, 315, 318, 322, 323, 324, 325, 328, 344, 347, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 452, 454, 458, 462, 463, 464, 465, 467, 475, 476, 477, 479], "time": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 96, 98, 101, 110, 121, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 148, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 204, 212, 213, 214, 235, 242, 249, 256, 257, 258, 261, 263, 270, 273, 279, 291, 294, 298, 300, 317, 329, 331, 335, 338, 347, 352, 363, 364, 365, 371, 374, 378, 379, 380, 382, 383, 385, 387, 388, 395, 397, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 438, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 479, 481, 482], "adapt": [1, 32, 207, 235, 254, 270, 276, 379, 462, 466, 477], "equal": [1, 15, 16, 21, 35, 84, 108, 115, 116, 130, 152, 155, 156, 157, 166, 186, 236, 237, 280, 281, 294, 296, 298, 300, 301, 304, 305, 307, 386, 391, 429, 450, 451, 462, 464, 478], "introduc": [1, 2, 157, 166, 294, 296, 298, 300, 317, 462, 475], "some": [1, 2, 3, 4, 7, 8, 9, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 101, 103, 110, 121, 123, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 241, 256, 263, 266, 273, 283, 296, 323, 329, 331, 335, 352, 353, 354, 395, 397, 420, 429, 441, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482], "confus": [1, 33, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 329, 331, 335, 395, 397], "other": [1, 2, 3, 4, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 110, 113, 114, 115, 116, 117, 119, 123, 127, 130, 133, 136, 137, 138, 142, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 216, 218, 222, 223, 243, 250, 256, 259, 266, 270, 271, 273, 278, 293, 294, 296, 300, 310, 329, 331, 335, 338, 343, 345, 350, 352, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 396, 397, 398, 400, 418, 435, 450, 451, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 481, 482], "better": [1, 3, 8, 9, 15, 16, 31, 144, 296, 300, 458, 464, 467, 477, 481], "consist": [1, 2, 3, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 269, 273, 278, 281, 301, 329, 331, 335, 395, 397, 456, 462, 463, 464, 477, 478, 482], "interact": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 189, 263, 348, 352, 456, 462, 464, 466, 467, 468, 470, 475, 476, 477, 482], "keep": [1, 2, 3, 4, 7, 8, 16, 62, 69, 78, 79, 110, 114, 121, 130, 157, 166, 204, 237, 241, 268, 270, 271, 273, 317, 347, 397, 420, 431, 438, 462, 463, 464, 465, 470, 471, 472, 476, 477, 479, 482], "separ": [1, 2, 4, 8, 15, 16, 18, 21, 22, 25, 27, 29, 31, 39, 40, 48, 69, 74, 78, 79, 213, 241, 268, 363, 366, 369, 371, 383, 385, 387, 388, 400, 458, 462, 463, 468, 469, 475, 476, 479, 482], "interchang": [1, 306, 307, 464, 467, 471, 478, 479], "between": [1, 2, 3, 4, 5, 15, 16, 17, 18, 21, 24, 27, 29, 32, 35, 42, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 95, 96, 97, 103, 108, 110, 111, 114, 115, 116, 123, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 223, 236, 247, 258, 261, 263, 270, 271, 273, 280, 281, 289, 294, 296, 300, 301, 306, 307, 329, 331, 333, 335, 345, 348, 352, 362, 364, 365, 366, 369, 370, 371, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 400, 433, 438, 458, 462, 463, 465, 466, 470, 475, 476, 477, 479, 482], "wherea": [1, 2, 28, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 223, 261, 263, 273, 329, 331, 335, 365, 380, 385, 395, 397, 459, 471], "correspond": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 107, 108, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 231, 241, 256, 261, 263, 268, 270, 271, 273, 278, 293, 296, 298, 300, 304, 305, 317, 329, 331, 335, 348, 352, 365, 367, 370, 371, 385, 395, 396, 397, 398, 400, 401, 402, 403, 404, 457, 462, 463, 464, 466, 467, 469, 470, 471, 475, 476, 477, 478], "sub": [1, 2, 3, 15, 16, 21, 22, 23, 25, 27, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 108, 115, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 242, 261, 271, 273, 329, 331, 335, 353, 354, 395, 397, 429, 438, 457, 458, 462, 463, 464, 470, 474, 481, 482], "doesn": [1, 4, 35, 42, 47, 55, 65, 66, 72, 77, 121, 127, 130, 133, 137, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 221, 224, 273, 274, 329, 331, 335, 395, 397, 466, 467], "understood": [1, 462], "serv": [1, 3, 22, 25, 27, 139, 479, 481, 482], "basi": [1, 121, 306, 479, 481], "we": [1, 2, 3, 5, 7, 9, 11, 31, 32, 35, 39, 42, 47, 50, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 101, 114, 116, 121, 127, 128, 129, 130, 133, 134, 137, 141, 143, 144, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 218, 233, 241, 244, 250, 261, 266, 269, 270, 271, 273, 274, 277, 300, 306, 307, 308, 329, 331, 335, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 420, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "anoth": [1, 2, 3, 8, 14, 17, 19, 20, 24, 26, 30, 50, 77, 82, 96, 102, 108, 115, 127, 130, 133, 136, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 210, 219, 221, 222, 224, 256, 262, 301, 331, 335, 348, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 458, 462, 464, 465, 466, 468, 469, 474, 475, 476, 477, 482], "wise": [1, 235], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 102, 107, 108, 115, 116, 127, 130, 133, 137, 141, 145, 152, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 213, 217, 218, 231, 241, 253, 256, 261, 262, 263, 266, 268, 271, 273, 278, 296, 300, 301, 308, 328, 329, 331, 335, 351, 352, 353, 354, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 418, 420, 422, 456, 457, 459, 462, 463, 464, 465, 467, 468, 469, 471, 475, 476, 477, 479, 481, 482], "op": [1, 17, 33, 34, 36, 37, 38, 43, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 236, 269, 275, 278, 293, 420, 440], "sinc": [1, 2, 3, 4, 5, 7, 11, 31, 35, 42, 47, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 107, 108, 116, 121, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 163, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 219, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 344, 345, 347, 349, 350, 355, 358, 395, 397, 418, 420, 458, 462, 463, 464, 465, 467, 468, 469, 475, 477, 478, 479, 481, 482], "goal": [1, 3, 4, 145, 187, 255, 456, 462, 463, 464, 465, 476, 477], "policy_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 463], "explicitli": [1, 2, 3, 4, 38, 83, 98, 99, 106, 110, 209, 316, 348, 428, 458, 463, 465, 470, 475, 476, 479], "do": [1, 2, 3, 4, 7, 57, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 193, 204, 206, 218, 242, 256, 261, 269, 270, 296, 300, 307, 309, 341, 352, 380, 395, 400, 420, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 479, 481, 482], "deepcopi": [1, 308, 380, 395, 475], "place": [1, 2, 3, 19, 32, 35, 41, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 101, 103, 110, 113, 115, 123, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 209, 217, 225, 241, 256, 262, 263, 266, 268, 269, 270, 273, 308, 329, 331, 335, 343, 347, 351, 395, 396, 397, 400, 435, 440, 441, 458, 463, 464, 468, 471, 475, 476, 477, 479], "instanti": [1, 2, 3, 15, 16, 27, 61, 62, 63, 67, 68, 69, 70, 78, 79, 82, 84, 95, 96, 97, 107, 108, 110, 141, 144, 184, 188, 209, 231, 256, 307, 396, 400, 401, 402, 403, 404, 418, 462, 463, 468, 469, 471, 475, 476, 477, 479, 482], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 110, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 202, 204, 206, 212, 213, 216, 217, 221, 222, 224, 227, 233, 236, 237, 241, 249, 251, 253, 256, 257, 262, 263, 266, 268, 270, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 307, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 338, 343, 345, 347, 350, 351, 352, 354, 355, 358, 359, 362, 363, 365, 374, 378, 380, 382, 383, 384, 385, 387, 388, 392, 395, 396, 397, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 434, 438, 441, 450, 451, 452, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 481, 482], "graph": [1, 3, 4, 8, 42, 65, 77, 128, 129, 143, 144, 329, 331, 335, 393, 394, 395, 462, 466, 477], "reli": [1, 2, 3, 11, 31, 66, 72, 178, 256, 294, 295, 296, 298, 299, 300, 333, 362, 382, 400, 458, 462, 464, 466, 468, 470, 477, 482], "third": [1, 237, 258, 345, 475, 476], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 39, 40, 48, 61, 63, 70, 74, 84, 95, 96, 97, 184, 396, 462, 463, 464, 465, 466, 469, 470, 475, 476, 477, 481, 482], "limit": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 213, 233, 362, 364, 379, 380, 382, 384, 395, 458, 462, 463, 465, 475, 476, 477], "chart": 1, "show": [1, 2, 11, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 273, 307, 329, 331, 335, 395, 397, 420, 462, 464, 465, 466, 475, 476, 477, 479, 481], "decis": [1, 2, 3, 282, 287, 315, 343, 368, 381, 457, 465, 467, 468, 475, 476, 479, 482], "multiprocess": [1, 2, 3, 14, 15, 16, 22, 23, 25, 69, 78, 79, 102, 110, 127, 134, 135, 157, 161, 166, 270, 271, 462, 463, 464, 465, 470, 475, 476, 477, 478, 482], "ensur": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 35, 42, 47, 55, 62, 65, 66, 72, 77, 78, 84, 107, 108, 114, 127, 130, 133, 137, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 213, 241, 254, 263, 266, 270, 271, 273, 296, 300, 329, 331, 335, 344, 364, 379, 382, 395, 397, 457, 463, 464, 477, 479], "flexibl": [1, 3, 9, 152, 389, 456, 458, 459, 462, 466, 479, 482], "extens": [1, 2, 62, 69, 78, 79, 116, 278, 459, 479], "mechan": [1, 4, 14, 17, 19, 24, 26, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 329, 331, 335, 395, 397, 463, 469, 477], "accommod": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 467, 468], "variou": [1, 2, 3, 14, 130, 178, 262, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 389, 395, 398, 420, 450, 451, 456, 462, 463, 464, 466, 467, 468, 469, 471, 475, 476, 479, 482], "deploy": [1, 466], "scenario": [1, 2, 19, 24, 26, 149, 150, 157, 171, 172, 218, 261, 418, 462, 468, 475, 476, 477], "facilit": [1, 2, 3, 7, 240, 241, 256, 266, 268, 340, 341, 342, 457, 462, 465, 468, 477], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 456], "These": [1, 2, 7, 50, 71, 124, 171, 241, 268, 271, 331, 335, 456, 457, 458, 462, 464, 475, 476, 477, 479, 482], "base": [1, 3, 4, 8, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 35, 50, 62, 69, 72, 78, 79, 83, 112, 118, 121, 122, 124, 125, 127, 128, 129, 130, 133, 137, 141, 143, 144, 145, 151, 152, 153, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 183, 186, 187, 188, 189, 195, 196, 197, 204, 218, 222, 246, 260, 262, 266, 267, 296, 300, 306, 308, 331, 335, 340, 346, 362, 363, 365, 366, 367, 369, 370, 371, 373, 378, 382, 383, 384, 385, 387, 388, 427, 438, 456, 457, 458, 459, 462, 463, 465, 467, 468, 469, 471, 475, 476, 477, 479, 482], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 81, 82, 85, 86, 87, 88, 89, 105, 117, 118, 127, 130, 133, 137, 145, 151, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 217, 221, 222, 226, 229, 233, 235, 243, 244, 250, 254, 260, 262, 263, 264, 270, 271, 273, 274, 278, 280, 294, 295, 296, 297, 298, 299, 300, 324, 325, 326, 329, 331, 335, 362, 363, 365, 368, 369, 370, 376, 378, 380, 381, 382, 384, 385, 387, 395, 397, 418, 429, 443, 456, 457, 459, 462, 463, 464, 465, 466, 475, 476, 477, 481], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 456, 475], "allow": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 39, 40, 42, 47, 48, 55, 57, 59, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 84, 95, 96, 97, 102, 108, 110, 113, 115, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 209, 210, 244, 271, 273, 274, 301, 329, 331, 335, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 389, 391, 395, 396, 397, 398, 456, 457, 459, 462, 464, 465, 466, 467, 468, 469, 475, 476, 477, 479, 481, 482], "tailor": [1, 186, 456, 481], "need": [1, 2, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 32, 35, 41, 42, 47, 55, 61, 63, 65, 66, 72, 77, 82, 117, 121, 127, 130, 133, 137, 141, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 216, 218, 219, 228, 234, 241, 244, 257, 261, 262, 263, 268, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 309, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 348, 349, 350, 351, 355, 358, 361, 371, 384, 385, 395, 397, 399, 404, 420, 438, 452, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 479, 481, 482], "handl": [1, 2, 3, 14, 15, 16, 22, 25, 27, 35, 42, 47, 55, 57, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 269, 270, 271, 273, 300, 301, 329, 331, 332, 335, 362, 380, 382, 395, 397, 438, 450, 451, 456, 462, 463, 464, 465, 467, 469, 476, 479], "well": [1, 2, 3, 8, 27, 31, 35, 42, 47, 55, 62, 64, 65, 66, 69, 72, 77, 78, 79, 82, 108, 113, 117, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 262, 263, 273, 274, 278, 283, 298, 320, 321, 329, 331, 335, 352, 380, 382, 387, 395, 397, 400, 404, 456, 457, 462, 463, 465, 466, 467, 468, 469, 471, 478, 479, 481, 482], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "everi": [1, 3, 8, 15, 16, 17, 18, 21, 29, 35, 39, 40, 42, 47, 48, 55, 59, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 84, 110, 117, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 254, 255, 270, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 306, 307, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 364, 379, 380, 382, 395, 397, 438, 459, 462, 463, 464, 465, 467, 468, 475, 476, 477], "even": [1, 2, 3, 4, 8, 11, 16, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 101, 102, 103, 104, 108, 115, 117, 119, 123, 127, 130, 133, 134, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 209, 462, 464, 467, 475, 476, 477, 482], "simplest": [1, 42, 65, 77, 121, 329, 331, 335, 355, 395, 462, 464, 465, 468, 475, 476, 479, 482], "vanillaweightupdat": 1, "dict": [1, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 55, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 108, 110, 115, 116, 127, 130, 133, 134, 135, 136, 137, 138, 145, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 233, 256, 261, 263, 269, 270, 271, 273, 274, 280, 281, 282, 283, 284, 285, 286, 287, 292, 301, 315, 329, 331, 335, 348, 352, 365, 385, 387, 395, 396, 397, 420, 424, 425, 433, 438, 443, 444, 450, 451, 452, 457, 462, 463, 464, 479, 481, 482], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 18, 24, 26, 30, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 99, 106, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 198, 212, 215, 220, 228, 241, 242, 249, 256, 263, 266, 268, 279, 296, 300, 328, 338, 355, 367, 371, 372, 385, 397, 398, 409, 410, 411, 412, 414, 415, 416, 417, 420, 462, 464, 474, 477], "divers": [1, 4, 157, 166], "abl": [1, 3, 50, 127, 148, 159, 160, 161, 167, 296, 300, 456, 462, 464, 465, 468, 474, 475, 476, 477, 479], "leav": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 69, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 205, 250, 396, 458, 462, 470, 479], "untouch": [1, 181, 182, 185, 191, 192, 193, 194, 195, 210, 217, 221, 222, 226, 233, 235, 243, 244, 250, 254, 260, 262, 264, 271, 273, 397], "particularli": [1, 2, 3, 466, 481, 482], "benefici": [1, 2], "involv": [1, 136, 138, 139, 149, 150, 163, 210, 213, 261, 296, 300, 467, 469], "complex": [1, 2, 3, 14, 17, 19, 20, 24, 26, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397, 462, 463, 467, 468], "architectur": [1, 4, 287, 469, 475, 476, 481], "special": [1, 3, 86, 88, 188, 454, 456, 462, 465, 466, 482], "hardwar": [1, 3, 466], "By": [1, 2, 3, 18, 20, 39, 40, 48, 59, 74, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 235, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 328, 352, 380, 395, 397, 428, 433, 452, 456, 458, 462, 465, 475, 478, 479, 482], "retriev": [1, 3, 14, 17, 20, 24, 26, 50, 61, 62, 63, 65, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 110, 113, 115, 116, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 191, 204, 214, 222, 225, 237, 277, 280, 303, 331, 335, 347, 348, 352, 355, 359, 362, 363, 364, 365, 367, 379, 382, 383, 385, 387, 388, 395, 396, 398, 400, 401, 402, 403, 452, 459, 463, 464, 468, 477, 482], "appli": [1, 2, 3, 4, 14, 17, 18, 24, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 96, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 236, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 273, 278, 294, 298, 308, 325, 329, 331, 335, 344, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 381, 382, 383, 384, 385, 387, 388, 395, 397, 400, 418, 434, 459, 462, 463, 464, 470, 475, 477, 481, 482], "seamless": [1, 2, 301], "integr": [1, 2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 286, 296, 300, 303, 329, 331, 335, 351, 395, 397, 457, 467, 468, 470, 475, 476, 477, 478], "infrastructur": [1, 3, 475, 476], "transit": [1, 35, 42, 47, 55, 65, 66, 72, 77, 108, 116, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 276, 278, 329, 331, 335, 357, 395, 397, 462, 465, 467, 468, 470, 475, 477, 479], "sampl": [1, 4, 8, 9, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 94, 101, 102, 103, 107, 108, 109, 110, 113, 114, 115, 116, 119, 121, 123, 127, 130, 133, 137, 145, 151, 154, 157, 158, 161, 166, 167, 168, 175, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 271, 273, 275, 277, 288, 293, 297, 303, 304, 305, 313, 315, 316, 317, 320, 325, 326, 329, 331, 335, 336, 339, 344, 345, 346, 348, 349, 350, 351, 352, 362, 363, 364, 365, 366, 367, 369, 379, 381, 382, 387, 388, 395, 397, 429, 435, 438, 441, 454, 457, 458, 462, 463, 464, 465, 466, 467, 468, 470, 472, 475, 476, 478, 481, 482], "attent": [1, 2, 8, 186, 213, 331, 335, 462, 465, 482], "given": [1, 2, 3, 15, 16, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 108, 110, 115, 116, 127, 130, 133, 137, 145, 151, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 217, 223, 231, 237, 241, 256, 260, 262, 263, 264, 266, 268, 270, 271, 273, 275, 277, 279, 290, 291, 293, 294, 296, 298, 300, 303, 308, 319, 323, 329, 331, 335, 339, 344, 345, 347, 350, 351, 352, 353, 354, 356, 361, 366, 367, 369, 380, 395, 397, 399, 400, 401, 402, 403, 404, 406, 430, 433, 448, 457, 458, 459, 462, 463, 464, 467, 468, 469, 470, 471, 476, 477, 482], "built": [1, 2, 3, 5, 7, 110, 128, 129, 136, 143, 144, 154, 155, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 389, 395, 398, 446, 448, 449, 452, 462, 463, 464, 465, 466, 469, 471, 477, 479, 482], "flatten": [1, 29, 33, 34, 36, 37, 38, 39, 40, 43, 44, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 121, 184, 210, 228, 396, 397, 400, 435, 454, 465, 476], "suffici": [1, 3, 4, 462], "preprocess": [1, 2, 83, 262, 463, 466], "popul": [1, 2, 3, 15, 16, 18, 27, 29, 62, 67, 68, 69, 76, 78, 79, 110, 186, 232, 256, 288, 308, 380, 395, 456, 462, 464, 465, 468, 470, 477, 479], "replaybuff": [1, 2, 3, 15, 16, 18, 21, 27, 29, 44, 62, 67, 68, 75, 78, 79, 101, 102, 107, 108, 109, 110, 115, 116, 125, 213, 242, 246, 273, 367, 372, 398, 446, 448, 454, 464, 466, 470, 472, 475, 476, 478, 479, 481], "lazytensorstorag": [1, 2, 15, 16, 18, 21, 29, 62, 69, 77, 78, 79, 107, 115, 116, 121, 246, 273, 464, 466, 472, 475, 476, 479], "lambda": [1, 2, 15, 16, 18, 21, 27, 28, 29, 42, 50, 65, 69, 77, 84, 121, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 203, 210, 218, 219, 231, 233, 256, 264, 271, 273, 274, 279, 328, 329, 331, 335, 344, 347, 348, 349, 373, 375, 376, 387, 395, 400, 403, 411, 412, 416, 417, 418, 448, 458, 462, 463, 466, 475, 476, 478, 479, 481, 482], "reshap": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 115, 121, 210, 296, 300, 301, 316, 418, 464, 475, 476], "slice": [1, 2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 108, 110, 115, 116, 206, 212, 213, 479], "recommend": [1, 2, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 61, 62, 63, 69, 70, 78, 79, 84, 95, 96, 97, 115, 121, 141, 178, 179, 180, 183, 184, 213, 308, 333, 396, 458, 470, 475, 476], "achiev": [1, 2, 3, 4, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 255, 273, 279, 329, 331, 335, 348, 395, 397, 435, 459, 462, 463, 464, 465, 466, 475, 476, 477, 479, 481, 482], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 102, 104, 110, 121, 127, 130, 133, 134, 137, 141, 145, 157, 158, 159, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 204, 210, 213, 218, 231, 241, 261, 262, 263, 266, 269, 270, 271, 273, 280, 281, 283, 284, 285, 286, 287, 288, 292, 296, 300, 301, 302, 306, 307, 329, 331, 333, 335, 343, 351, 352, 359, 365, 367, 372, 383, 385, 395, 396, 397, 398, 420, 435, 442, 443, 444, 448, 450, 451, 456, 457, 462, 463, 464, 465, 466, 468, 471, 475, 476, 477, 478, 479, 481, 482], "multidimension": [1, 2, 78, 107, 108, 479], "slicesampl": [1, 2, 108, 116, 213, 479], "sampler": [1, 2, 62, 67, 68, 69, 78, 79, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 123, 213, 242, 316, 367, 372, 398, 462, 464, 475, 476, 479], "One": [1, 2, 3, 4, 8, 33, 34, 38, 39, 40, 43, 48, 53, 54, 59, 60, 74, 83, 121, 127, 128, 129, 157, 161, 166, 167, 213, 246, 266, 275, 313, 351, 355, 386, 391, 424, 462, 463, 479, 482], "must": [1, 2, 3, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 101, 102, 103, 104, 108, 110, 115, 116, 117, 118, 119, 121, 123, 127, 128, 130, 133, 134, 137, 143, 145, 155, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 206, 209, 210, 213, 216, 218, 219, 225, 229, 231, 233, 235, 237, 239, 250, 253, 255, 256, 257, 260, 261, 263, 264, 265, 270, 273, 280, 281, 290, 296, 300, 301, 304, 305, 306, 307, 319, 329, 331, 335, 339, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 386, 387, 388, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 458, 462, 463, 464, 465, 468, 474, 477, 479], "shape": [1, 2, 3, 15, 16, 18, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 101, 102, 103, 107, 110, 115, 121, 123, 127, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 198, 204, 206, 210, 212, 214, 221, 224, 225, 226, 231, 233, 234, 237, 239, 243, 244, 246, 250, 253, 254, 256, 259, 264, 270, 272, 273, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 313, 314, 315, 316, 317, 318, 319, 324, 325, 327, 329, 331, 332, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 391, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 429, 435, 438, 448, 457, 458, 462, 463, 464, 465, 466, 468, 469, 472, 474, 475, 476, 478, 479, 481, 482], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 29, 57, 262, 297, 325, 326, 361, 455, 462, 463, 464, 465, 466, 469, 475, 476, 478, 482], "dimension": [1, 62, 66, 69, 77, 78, 79, 186, 223, 296, 300, 400, 405, 413, 458, 476], "num_slic": [1, 2, 108, 115, 116, 479], "4": [1, 2, 3, 7, 33, 35, 39, 40, 44, 48, 50, 53, 54, 55, 59, 62, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 101, 102, 103, 110, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 137, 143, 144, 145, 146, 147, 148, 151, 153, 157, 158, 161, 164, 165, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 207, 209, 210, 213, 218, 219, 225, 246, 253, 254, 255, 261, 270, 271, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 298, 299, 301, 303, 304, 305, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 327, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354, 356, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 418, 419, 456, 457, 461, 462, 463, 464, 465, 471, 475, 476, 477, 479, 480, 481, 482], "trajectory_kei": [1, 31, 115, 116], "traj_id": [1, 2, 3, 15, 16, 18, 29, 31, 44, 75, 210, 246, 470, 479], "total_fram": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 44, 55, 67, 75, 210, 213, 246, 438, 441, 448, 459, 462, 463, 464, 465, 466, 470, 472, 475, 476, 479, 481], "dim": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 115, 184, 197, 213, 214, 235, 239, 252, 253, 256, 265, 270, 299, 323, 328, 347, 396, 452, 458, 463, 464, 466, 475, 477, 479], "ndim": [1, 2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 101, 103, 107, 108, 121, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 235, 273, 347], "parallelenv": [1, 2, 3, 15, 16, 18, 21, 25, 29, 121, 127, 130, 133, 137, 145, 152, 158, 159, 160, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 261, 271, 296, 300, 418, 449, 454, 462, 463, 464, 467, 474, 481, 482], "make_env": [1, 3, 157, 166, 172, 261, 270, 271, 418, 443, 444, 462, 463, 481, 482], "regular": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 61, 63, 70, 84, 95, 96, 97, 107, 113, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 273, 276, 278, 289, 296, 300, 319, 345, 349, 350, 351, 352, 372, 382, 396, 397, 440, 454, 459, 462, 463, 466, 467, 468, 472, 479, 482], "behav": [1, 3, 139, 151, 294, 298, 313, 370, 378, 380, 395, 466, 478], "accordingli": [1, 2, 3, 108, 219, 235, 254, 255, 298, 349, 465], "3": [1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 21, 27, 29, 33, 34, 35, 38, 39, 40, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 84, 95, 96, 97, 101, 103, 108, 110, 115, 116, 121, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 145, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 207, 209, 210, 213, 217, 218, 219, 223, 225, 226, 231, 233, 237, 239, 241, 243, 244, 246, 249, 250, 253, 254, 255, 256, 259, 261, 262, 263, 264, 266, 268, 271, 273, 274, 276, 277, 279, 280, 281, 283, 284, 285, 287, 290, 292, 294, 295, 296, 298, 299, 300, 301, 303, 304, 306, 307, 308, 313, 316, 318, 328, 329, 331, 335, 339, 340, 341, 342, 344, 345, 348, 350, 351, 354, 355, 356, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 406, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 437, 457, 459, 461, 462, 463, 464, 465, 467, 468, 470, 471, 475, 476, 477, 479, 480, 481, 482], "isn": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 61, 63, 70, 84, 95, 96, 97, 107, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 209, 225, 231, 344, 351, 396, 400, 468, 469, 471, 475, 476], "current": [1, 2, 3, 12, 14, 15, 16, 17, 24, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 105, 108, 110, 116, 127, 130, 133, 137, 139, 145, 152, 155, 156, 157, 158, 161, 166, 167, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 209, 210, 213, 231, 242, 255, 256, 257, 261, 262, 263, 271, 273, 291, 317, 321, 325, 329, 331, 333, 335, 336, 347, 362, 364, 365, 372, 379, 382, 384, 385, 395, 396, 397, 400, 423, 459, 462, 463, 464, 465, 469, 475, 476, 477, 479, 482], "fulli": [1, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 295, 299, 329, 331, 335, 395, 397, 463, 466, 469, 477, 479], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 111, 114, 116, 117, 119, 121, 122, 123, 125, 126, 127, 130, 133, 134, 137, 138, 145, 152, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 228, 229, 231, 232, 233, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 279, 280, 281, 287, 288, 301, 310, 316, 329, 331, 335, 343, 347, 351, 352, 353, 354, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 400, 402, 403, 418, 420, 425, 438, 455, 458, 462, 463, 464, 465, 466, 468, 469, 475, 476, 477, 479, 481, 482], "consecut": [1, 3, 114, 141, 300, 317, 420, 465, 467, 470, 476, 479, 482], "won": [1, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 134, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 241, 268, 273, 329, 331, 335, 362, 395, 396, 397, 438, 452, 463, 464, 467, 468], "therebi": [1, 32, 418, 458, 462, 463], "interrupt": [1, 2, 137, 188, 347, 406], "start": [1, 2, 3, 4, 5, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 50, 67, 82, 83, 84, 108, 115, 116, 127, 130, 133, 134, 137, 142, 145, 148, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 220, 434, 461, 462, 463, 466, 473, 476, 477, 479, 480, 482], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 39, 40, 42, 48, 50, 61, 62, 63, 65, 66, 69, 70, 72, 74, 77, 84, 95, 96, 97, 101, 103, 108, 115, 116, 117, 119, 121, 123, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 207, 212, 214, 218, 221, 223, 224, 233, 237, 242, 255, 256, 259, 263, 270, 271, 293, 329, 331, 332, 335, 339, 348, 349, 352, 359, 395, 396, 400, 401, 402, 403, 404, 420, 424, 457, 458, 461, 462, 463, 464, 465, 466, 473, 475, 476, 477, 479, 480, 481, 482], "rid": [1, 42, 65, 77, 329, 331, 335, 395], "natur": [1, 2, 3, 13, 22, 23, 25, 462, 468, 469, 470, 479], "background": [1, 13, 15, 16, 21, 22, 23, 25, 479], "simpli": [1, 3, 6, 61, 63, 70, 83, 84, 95, 96, 97, 119, 121, 126, 184, 190, 226, 250, 269, 380, 395, 396, 400, 457, 458, 462, 464, 469, 475, 476, 482], "replay_buff": [1, 2, 8, 15, 16, 18, 21, 27, 29, 62, 67, 68, 69, 78, 79, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 213, 435, 448, 462, 463, 464, 470, 475, 476, 479], "rb": [1, 2, 15, 16, 18, 21, 29, 44, 62, 67, 68, 69, 75, 78, 79, 102, 107, 108, 110, 115, 116, 121, 213, 246, 273, 463, 465, 466, 470, 472, 476, 478, 479, 481], "paus": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "sleep": [1, 15, 16, 18, 21, 29, 67, 134, 482], "10": [1, 2, 3, 7, 28, 31, 33, 34, 35, 38, 42, 43, 50, 51, 55, 62, 67, 68, 69, 71, 77, 78, 79, 80, 83, 84, 101, 102, 103, 107, 110, 115, 116, 121, 123, 127, 128, 129, 130, 133, 134, 137, 143, 144, 145, 151, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 191, 193, 206, 207, 210, 212, 213, 218, 219, 255, 257, 258, 259, 270, 271, 273, 277, 279, 282, 283, 285, 287, 289, 293, 294, 295, 296, 298, 299, 300, 303, 304, 305, 315, 317, 328, 348, 352, 355, 359, 363, 367, 369, 376, 382, 383, 384, 388, 398, 400, 401, 402, 403, 406, 420, 429, 459, 462, 463, 464, 465, 466, 467, 468, 472, 475, 477, 479, 481, 482], "i": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 39, 40, 42, 44, 47, 48, 55, 62, 65, 66, 69, 72, 74, 75, 77, 79, 80, 84, 101, 103, 107, 108, 115, 116, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 219, 220, 235, 241, 246, 249, 261, 263, 268, 273, 295, 296, 299, 300, 319, 329, 331, 335, 338, 345, 347, 348, 350, 351, 352, 362, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 397, 400, 401, 402, 403, 429, 441, 456, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 475, 476, 477, 479, 481, 482], "rang": [1, 2, 3, 4, 8, 62, 67, 68, 69, 71, 78, 79, 101, 103, 110, 121, 127, 130, 133, 134, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 246, 259, 270, 273, 274, 295, 299, 316, 334, 379, 387, 388, 458, 459, 462, 464, 465, 466, 469, 470, 472, 475, 476, 477, 479, 481], "optim_step": [1, 277, 303, 466, 472], "rest": [1, 15, 16, 21, 42, 278, 457, 464, 465, 475, 477, 481], "multithread": [1, 2, 3, 62, 69, 78, 79, 94, 152, 153, 470, 479], "mind": [1, 3, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 475, 476], "gil": 1, "relat": [1, 2, 3, 4, 10, 62, 157, 183, 228, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 463, 472, 477], "restrict": [1, 2, 3, 458, 463, 478, 479, 482], "hand": [1, 2, 3, 7, 27, 39, 475, 476, 477], "let": [1, 2, 3, 6, 7, 11, 31, 35, 42, 47, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 80, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 273, 306, 307, 329, 331, 335, 344, 395, 397, 433, 456, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "child": [1, 20, 35, 42, 47, 50, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 463], "fill": [1, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188, 209, 256, 269, 300, 465, 477, 478], "truli": [1, 269, 481], "decoupl": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 462, 469, 481], "been": [1, 2, 3, 5, 7, 8, 12, 22, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 110, 114, 127, 130, 133, 137, 141, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 233, 254, 255, 262, 263, 294, 296, 298, 300, 308, 347, 362, 380, 382, 384, 395, 462, 463, 464, 465, 474, 475, 476, 477, 479, 481, 482], "shut": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 161, 167], "down": [1, 4, 13, 15, 16, 18, 21, 22, 23, 25, 29, 161, 167, 458, 465, 467], "async_shutdown": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 67], "mean": [1, 2, 3, 4, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 61, 63, 70, 78, 82, 84, 95, 96, 97, 102, 107, 108, 115, 116, 121, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 209, 237, 261, 270, 271, 275, 276, 277, 288, 291, 294, 296, 298, 300, 303, 315, 316, 324, 325, 348, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 457, 458, 462, 463, 464, 466, 468, 475, 476, 477, 479, 482], "drastic": [1, 144, 157, 479], "load": [1, 2, 6, 7, 15, 16, 18, 21, 29, 35, 42, 44, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 95, 96, 97, 99, 101, 102, 103, 104, 110, 117, 118, 119, 123, 124, 127, 130, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 270, 271, 273, 329, 331, 335, 395, 396, 397, 438, 452, 456, 459, 462, 464, 466, 479], "factor": [1, 8, 11, 32, 42, 55, 246, 273, 275, 276, 293, 297, 310, 317, 325, 326, 363, 369, 372, 373, 375, 386, 406, 462, 463, 466, 468, 472, 475, 476, 479, 482], "signific": [1, 3, 5, 8, 464, 481, 482], "understand": [1, 2, 8, 13, 22, 23, 25, 42, 462, 463, 466, 467, 468, 475, 476], "affect": [1, 3, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 219, 263, 271, 273, 329, 331, 335, 395, 397, 400, 401, 402, 403, 475], "algorithm": [1, 2, 3, 8, 9, 13, 22, 23, 25, 151, 206, 253, 362, 382, 383, 385, 454, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 476, 478, 479, 481], "legitim": [1, 458, 482], "unless": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 114, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 271, 273, 278, 329, 331, 335, 362, 363, 365, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 464], "benchmark": [1, 2, 3, 9, 128, 129, 137, 143, 144, 188], "tool": [1, 2, 3, 5, 193, 456, 457, 458, 465, 467, 475, 477, 479, 482], "backend": [1, 3, 7, 15, 16, 18, 21, 22, 23, 27, 28, 29, 84, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 183, 186, 187, 188, 203, 274, 335, 456, 459, 462, 464, 465, 466, 467, 470, 471, 477], "gloo": [1, 22, 23, 28], "nccl": [1, 22, 23, 333], "mpi": [1, 22, 23], "distributeddatacollector": [1, 24, 28, 454], "rpc": [1, 25, 26, 28, 68], "rpcdatacollector": [1, 26, 28, 454], "launcher": [1, 22, 23, 25, 28], "rai": [1, 17, 18, 27, 29, 30, 62, 67, 68, 69, 78, 79, 110, 332, 334], "submitit": [1, 22, 23, 25, 28], "mode": [1, 3, 6, 13, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 142, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 221, 224, 255, 263, 270, 271, 273, 278, 288, 296, 297, 300, 305, 313, 324, 325, 326, 329, 331, 335, 338, 348, 352, 380, 395, 397, 418, 428, 433, 457, 458, 462, 463, 475, 476, 481, 482], "find": [1, 4, 6, 7, 22, 23, 25, 62, 64, 80, 115, 116, 275, 298, 317, 432, 436, 462, 463, 466, 468, 469, 475, 476], "folder": [1, 2, 61, 63, 70, 84, 95, 96, 97, 171, 184, 213, 396, 463], "machin": [1, 2, 7, 22, 23, 25, 55, 141, 475, 476, 481], "wonder": 1, "why": [1, 2, 3, 204, 458, 475, 477, 482], "instead": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 35, 38, 42, 47, 55, 65, 66, 67, 72, 77, 81, 84, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 228, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 351, 355, 358, 362, 364, 365, 367, 370, 371, 372, 378, 379, 382, 383, 384, 385, 395, 397, 398, 400, 404, 408, 452, 458, 466, 467, 468, 472, 477, 479, 482], "lower": [1, 2, 3, 27, 35, 36, 216, 270, 271, 320, 321, 355, 464, 475, 477], "io": [1, 11, 143, 144, 152, 155, 156, 169, 170, 298, 299, 466], "footprint": [1, 2, 479], "commun": [1, 2, 3, 24, 26, 145, 157, 161, 166, 187, 333, 455, 464, 482], "yet": [1, 128, 129, 143, 397, 478], "plai": [1, 3, 159, 160, 168, 178, 213, 463, 464, 469, 479, 482], "role": [1, 3, 96, 150, 178, 180, 183, 463, 469, 482], "opposit": [1, 475], "direct": [1, 2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 294, 298, 329, 331, 335, 380, 395, 397, 463, 469], "faster": [1, 2, 4, 31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 152, 304, 400, 401, 402, 403, 465, 466, 475, 476], "share": [1, 3, 6, 8, 15, 16, 18, 21, 29, 31, 61, 63, 69, 70, 78, 79, 82, 84, 95, 96, 97, 99, 101, 102, 103, 104, 108, 110, 111, 115, 117, 119, 123, 134, 157, 166, 184, 253, 261, 270, 271, 296, 300, 306, 307, 340, 341, 342, 362, 363, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 396, 452, 454, 457, 458, 464, 466, 472, 474, 475, 476, 481, 482], "among": [1, 3, 57, 159, 160, 261, 371, 385, 458, 475, 476], "prohibit": [1, 3, 18, 121], "slow": [1, 3, 4, 11, 61, 63, 70, 84, 95, 96, 97, 102, 115, 116, 184, 396], "compar": [1, 3, 121, 363, 365, 378, 383, 385, 387, 388, 433, 458, 462, 464, 466, 468, 469, 475, 476, 479, 482], "gpu": [1, 7, 8, 35, 42, 47, 55, 65, 66, 72, 77, 101, 103, 123, 127, 130, 133, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 462, 464, 465, 475, 476, 482], "driver": [1, 7], "keyword": [1, 2, 3, 11, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 110, 113, 115, 116, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 235, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 293, 296, 300, 304, 305, 306, 307, 317, 329, 331, 332, 335, 339, 343, 344, 347, 348, 349, 351, 352, 355, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 408, 418, 420, 425, 427, 438, 449, 462, 463, 464, 466, 468, 471, 475, 476, 479, 481, 482], "build": [1, 2, 3, 7, 31, 35, 39, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 110, 127, 128, 129, 130, 133, 137, 138, 139, 143, 144, 145, 149, 150, 152, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 246, 270, 271, 273, 277, 303, 329, 331, 335, 346, 348, 352, 395, 397, 438, 445, 446, 447, 457, 458, 459, 464, 465, 466, 468, 469, 470, 471, 475, 476, 477, 478, 481, 482], "mani": [1, 2, 3, 4, 69, 128, 129, 131, 132, 133, 136, 138, 139, 143, 144, 152, 153, 163, 186, 191, 256, 362, 364, 371, 379, 382, 395, 457, 462, 463, 464, 466, 467, 468, 470, 472, 475, 476, 477, 479, 481, 482], "eg": [1, 2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 117, 119, 123, 127, 130, 131, 132, 133, 136, 137, 138, 139, 141, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 223, 254, 263, 274, 306, 343, 396, 420], "gymnasium": [1, 2, 3, 5, 15, 16, 18, 21, 29, 77, 127, 130, 133, 136, 137, 138, 142, 145, 146, 147, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 183, 186, 187, 188, 203, 226, 250, 254, 269, 274, 463, 464, 466, 477, 481], "warn": [1, 3, 66, 72, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 270, 275, 293, 317, 428, 463], "quickli": [1, 3, 463, 475, 476, 482], "becom": [1, 2, 3, 4, 27, 294, 298, 475, 476, 482], "quit": [1, 3, 11, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 462, 463, 464, 466, 468, 475, 476, 482], "annoi": [1, 3], "filter": [1, 2, 3, 4, 83, 108, 115, 116, 362, 363, 365, 366, 370, 371, 378, 382, 383, 385, 467], "out": [1, 2, 3, 4, 5, 9, 14, 17, 19, 20, 24, 26, 27, 30, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 99, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 253, 256, 273, 275, 294, 295, 298, 304, 305, 308, 309, 310, 329, 331, 335, 339, 343, 344, 345, 348, 349, 350, 351, 352, 380, 393, 394, 395, 396, 397, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 475, 476, 477, 479, 481, 482], "still": [1, 2, 3, 9, 42, 65, 77, 84, 85, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 261, 317, 329, 331, 335, 379, 380, 395, 458, 462, 463, 465, 474, 477, 479, 482], "wish": [1, 3, 11, 15, 16, 21, 203, 469, 479], "displai": [1, 3, 7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 438, 459, 462, 463, 476, 477], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 204, 205, 206, 207, 209, 210, 213, 214, 217, 219, 221, 224, 225, 226, 228, 231, 232, 233, 235, 236, 237, 239, 241, 242, 243, 244, 246, 248, 249, 250, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 283, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 317, 318, 319, 325, 326, 327, 329, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 398, 400, 401, 402, 403, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 427, 428, 431, 432, 433, 435, 436, 438, 452, 457, 458, 459, 462, 463, 464, 466, 471, 472, 474, 475, 476, 477, 478, 481, 482], "central": [2, 14, 20, 24, 26, 306, 307, 308, 462, 463, 467, 475, 476, 479], "part": [2, 3, 4, 8, 35, 42, 47, 55, 65, 66, 71, 72, 77, 84, 127, 128, 130, 133, 137, 143, 145, 155, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 212, 237, 246, 249, 273, 329, 331, 335, 356, 395, 397, 429, 452, 456, 458, 462, 464, 465, 466, 472, 475, 477, 482], "wide": [2, 3, 5, 481], "give": [2, 3, 7, 78, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 364, 379, 382, 455, 456, 458, 462, 463, 466, 475, 476, 477, 478, 481], "abil": [2, 380, 477, 479], "panel": [2, 464], "usag": [2, 3, 5, 7, 15, 16, 18, 21, 22, 23, 25, 27, 42, 65, 77, 99, 121, 179, 210, 213, 225, 278, 296, 300, 329, 331, 335, 365, 370, 378, 385, 389, 395, 457, 462, 464, 465, 468, 469, 471, 475, 476, 479], "includ": [2, 3, 4, 7, 9, 27, 35, 42, 47, 55, 65, 66, 72, 77, 82, 84, 98, 99, 101, 102, 103, 104, 106, 117, 119, 123, 127, 130, 133, 137, 145, 151, 155, 156, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 228, 231, 255, 261, 263, 270, 271, 273, 296, 300, 329, 331, 335, 362, 365, 380, 385, 395, 397, 441, 456, 457, 459, 462, 463, 464, 465, 466, 475, 476, 477, 479, 482], "almost": [2, 271, 304, 305, 465], "physic": [2, 6, 7, 99, 157, 158, 163, 459, 462, 475, 476, 477], "theori": 2, "crude": 2, "made": [2, 3, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 101, 102, 103, 104, 117, 119, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 256, 273, 308, 317, 329, 331, 335, 367, 380, 395, 397, 398, 462, 463, 465, 475, 476, 478, 479, 481], "liststorag": [2, 50, 62, 67, 68, 69, 77, 78, 79, 102, 110, 479], "veri": [2, 3, 143, 144, 183, 463, 467, 470, 475, 477, 479, 481, 482], "ineffici": [2, 4], "tensor": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 115, 116, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 223, 224, 225, 226, 228, 231, 232, 234, 237, 239, 241, 242, 243, 244, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 362, 363, 365, 366, 367, 369, 370, 371, 374, 375, 378, 380, 382, 383, 384, 385, 387, 388, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 475, 476, 477, 481, 482], "contigu": [2, 3, 8, 36, 39, 47, 85, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 231, 234, 256, 264, 477, 479, 481], "tensorstorag": [2, 69, 77, 101, 107, 108, 121, 124, 470, 479], "lazymemmapstorag": [2, 44, 62, 67, 68, 69, 75, 78, 79, 108, 110, 115, 116, 212, 213, 462, 463, 465, 470, 475, 478, 479], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 133, 134, 135, 136, 137, 138, 139, 144, 145, 148, 151, 154, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 450, 451, 452, 454, 457, 458, 459, 462, 463, 464, 465, 467, 468, 469, 470, 471, 475, 476, 479, 482], "citizen": 2, "pytre": [2, 62, 67, 68, 69, 78, 79, 104, 110, 124], "tupl": [2, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 104, 108, 110, 115, 119, 121, 127, 130, 131, 132, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 231, 233, 237, 273, 279, 283, 289, 290, 296, 299, 300, 301, 308, 315, 318, 319, 329, 331, 335, 344, 345, 349, 350, 355, 362, 363, 364, 365, 366, 370, 371, 373, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 400, 401, 402, 403, 432, 433, 436, 445, 479, 481], "dictionari": [2, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 35, 39, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 108, 113, 115, 116, 127, 130, 133, 136, 137, 138, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 256, 261, 263, 271, 273, 329, 331, 335, 348, 352, 365, 385, 387, 395, 396, 397, 433, 450, 451, 452, 459, 463, 464, 467, 469, 475, 477, 482], "nest": [2, 3, 31, 35, 39, 40, 42, 44, 46, 47, 48, 55, 56, 61, 63, 65, 66, 69, 70, 72, 74, 75, 76, 77, 84, 90, 95, 96, 97, 101, 102, 103, 106, 110, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 213, 254, 257, 261, 273, 329, 331, 335, 347, 395, 396, 397, 400, 401, 402, 403, 404, 418, 428, 459, 463, 464, 466, 476, 477, 479, 481], "construct": [2, 3, 5, 31, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 110, 127, 130, 133, 134, 136, 137, 145, 157, 158, 159, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 221, 224, 271, 273, 296, 300, 321, 329, 331, 335, 352, 395, 397, 438, 456, 457, 463, 464, 465, 468, 475, 477, 479, 482], "ram": [2, 136, 138, 471, 479], "prealloc": [2, 3, 157, 166, 477], "ve": [2, 71, 462, 465, 472], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 44, 50, 62, 65, 67, 68, 69, 75, 78, 79, 84, 100, 101, 104, 107, 108, 110, 111, 115, 116, 119, 121, 122, 125, 126, 181, 182, 185, 191, 192, 193, 194, 195, 206, 212, 246, 262, 273, 276, 380, 395, 397, 435, 454, 456, 458, 459, 462, 463, 464, 465, 466, 470, 472, 475, 476, 478, 479, 481], "here": [2, 3, 4, 7, 8, 9, 10, 15, 16, 27, 121, 127, 130, 131, 132, 133, 137, 141, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 193, 213, 261, 308, 331, 427, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 475, 476, 477, 479, 481, 482], "add": [2, 3, 4, 6, 27, 35, 39, 40, 42, 47, 48, 50, 55, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 96, 100, 102, 107, 110, 111, 121, 122, 125, 126, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 231, 233, 260, 263, 273, 296, 300, 309, 329, 331, 335, 346, 362, 395, 397, 434, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 479, 481], "string": [2, 22, 23, 25, 35, 42, 47, 50, 55, 57, 64, 65, 66, 72, 77, 83, 84, 94, 102, 127, 130, 133, 137, 145, 149, 155, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 203, 231, 241, 254, 260, 268, 273, 296, 300, 329, 331, 335, 344, 347, 348, 349, 361, 395, 397, 419, 437, 458, 462, 464, 465, 479], "element": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 33, 50, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 77, 78, 79, 82, 84, 95, 96, 97, 101, 102, 103, 104, 107, 108, 110, 115, 116, 121, 123, 127, 130, 133, 137, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 191, 206, 213, 218, 219, 242, 251, 255, 256, 271, 275, 280, 281, 294, 295, 298, 338, 339, 344, 347, 351, 352, 356, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 400, 429, 456, 458, 462, 464, 468, 470, 479, 482], "30": [2, 3, 69, 77, 115, 116, 209, 236, 320, 321, 418, 422, 425, 427, 470, 476, 477, 479], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 123, 127, 130, 133, 134, 136, 137, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 228, 230, 231, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 325, 327, 328, 329, 331, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 447, 448, 450, 451, 452, 457, 459, 462, 463, 465, 466, 477, 479, 481], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 206, 208, 209, 210, 212, 213, 214, 215, 217, 220, 223, 228, 229, 231, 235, 236, 237, 239, 241, 242, 245, 252, 253, 254, 257, 260, 261, 263, 265, 268, 273, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 343, 344, 345, 347, 348, 350, 352, 362, 363, 364, 371, 373, 374, 379, 380, 381, 382, 383, 387, 388, 395, 396, 397, 400, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 425, 427, 429, 430, 431, 433, 435, 438, 440, 450, 451, 452, 466, 477, 479], "entri": [2, 3, 15, 16, 21, 31, 35, 39, 40, 42, 44, 47, 48, 50, 55, 61, 63, 64, 65, 66, 70, 72, 74, 75, 77, 83, 84, 91, 95, 96, 97, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 157, 158, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 209, 213, 215, 216, 219, 220, 221, 222, 224, 225, 228, 232, 234, 235, 237, 239, 241, 244, 246, 249, 251, 253, 254, 255, 256, 258, 261, 263, 265, 268, 270, 273, 296, 304, 305, 329, 331, 335, 343, 344, 347, 349, 350, 363, 365, 385, 395, 396, 397, 400, 401, 402, 403, 457, 462, 464, 465, 467, 468, 469, 471, 475, 476, 477, 478, 479, 481, 482], "onto": [2, 8, 59, 61, 63, 70, 84, 95, 96, 97, 184, 198, 222, 275, 317, 339, 344, 345, 348, 349, 350, 351, 352, 396, 400, 465, 477], "__setitem__": 2, "indic": [2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 25, 27, 31, 33, 34, 36, 37, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 107, 108, 110, 111, 113, 114, 115, 116, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 205, 206, 213, 214, 218, 254, 255, 256, 257, 263, 271, 273, 274, 280, 281, 301, 304, 305, 307, 317, 331, 335, 347, 349, 350, 358, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 398, 442, 452, 455, 459, 464, 465, 466, 470, 471, 472, 477, 479, 482], "without": [2, 3, 7, 9, 14, 15, 16, 17, 18, 24, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 221, 224, 259, 262, 273, 294, 295, 298, 299, 329, 331, 333, 335, 341, 342, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 397, 399, 400, 401, 402, 403, 404, 448, 455, 457, 462, 463, 464, 466, 467, 468, 469, 470, 475, 476, 477, 479, 482], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 35, 41, 42, 47, 50, 55, 61, 62, 63, 65, 66, 70, 71, 72, 77, 78, 84, 95, 96, 97, 107, 108, 127, 130, 133, 137, 145, 151, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 207, 209, 210, 221, 223, 224, 231, 243, 254, 255, 261, 263, 267, 270, 271, 273, 275, 277, 278, 293, 294, 303, 308, 317, 329, 331, 332, 334, 335, 348, 349, 350, 351, 352, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 433, 438, 440, 443, 444, 447, 448, 454, 456, 459, 463, 464, 465, 466, 469, 472, 475, 476, 477, 479, 482], "length": [2, 25, 33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 71, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 108, 115, 116, 119, 127, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 206, 213, 234, 242, 270, 277, 280, 281, 283, 285, 287, 294, 298, 301, 303, 306, 307, 331, 335, 339, 351, 356, 397, 429, 435, 462, 464, 465, 470, 472, 477, 479, 482], "cursor": [2, 62, 67, 68, 69, 78, 79, 110], "afterward": [2, 35, 42, 47, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 475, 482], "tell": [2, 3, 4, 7, 127, 159, 160, 178, 261, 462, 465, 470, 475, 476], "our": [2, 3, 7, 8, 11, 22, 50, 69, 178, 213, 218, 420, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481], "far": [2, 62, 67, 68, 69, 71, 78, 79, 110, 178, 183, 297, 325, 326, 472, 477, 482], "empti": [2, 3, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 104, 110, 127, 130, 133, 137, 144, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 221, 224, 241, 243, 257, 263, 266, 268, 271, 273, 329, 331, 335, 351, 395, 396, 397, 424, 462, 477], "64": [2, 3, 61, 63, 70, 84, 95, 96, 97, 110, 184, 213, 245, 283, 284, 292, 296, 300, 307, 308, 318, 396, 398, 462, 463, 464, 465, 466, 468, 472, 474, 477, 479, 481, 482], "dtype": [2, 3, 15, 16, 18, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 107, 108, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 201, 204, 205, 206, 207, 210, 211, 217, 218, 221, 222, 223, 224, 225, 226, 231, 233, 234, 237, 239, 241, 243, 244, 246, 250, 253, 254, 256, 258, 259, 262, 263, 264, 266, 268, 273, 277, 279, 289, 290, 294, 295, 296, 298, 299, 300, 303, 309, 310, 317, 318, 319, 327, 329, 331, 332, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 359, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 406, 457, 466, 474, 477, 479, 481, 482], "unit8": 2, "img": 2, "randint": [2, 83, 110, 191, 259, 479], "255": [2, 110, 259, 479], "uint8": [2, 3, 39, 61, 63, 70, 84, 95, 96, 97, 131, 132, 149, 150, 184, 225, 231, 239, 259, 396, 463, 479], "next": [2, 3, 4, 8, 15, 16, 18, 31, 39, 40, 42, 44, 46, 48, 50, 55, 62, 67, 68, 69, 71, 74, 75, 77, 78, 79, 84, 94, 98, 99, 106, 108, 110, 115, 116, 121, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 149, 150, 151, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 186, 187, 188, 191, 193, 198, 204, 206, 209, 210, 212, 213, 218, 219, 221, 224, 225, 226, 231, 232, 233, 234, 235, 239, 243, 244, 246, 249, 250, 254, 256, 258, 261, 264, 269, 270, 271, 273, 277, 295, 296, 299, 300, 303, 321, 347, 357, 359, 362, 363, 365, 366, 367, 369, 370, 371, 372, 378, 382, 383, 384, 385, 387, 388, 397, 398, 399, 400, 401, 402, 403, 404, 420, 432, 433, 436, 463, 465, 466, 468, 472, 477, 478, 481, 482], "ask": [2, 3, 8, 108, 115, 116, 420, 464, 465, 467, 468, 475, 476, 478, 482], "automat": [2, 3, 5, 12, 20, 36, 50, 82, 85, 101, 103, 110, 116, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 221, 224, 237, 256, 269, 271, 280, 296, 300, 333, 339, 347, 348, 352, 418, 428, 457, 462, 464, 467, 468, 475, 476, 477, 479, 481], "look": [2, 3, 5, 7, 8, 35, 42, 47, 55, 65, 66, 72, 77, 108, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 231, 241, 242, 266, 273, 278, 329, 331, 335, 348, 352, 353, 354, 395, 397, 458, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482], "lead": [2, 3, 4, 8, 10, 29, 31, 39, 40, 48, 55, 62, 69, 74, 84, 114, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 256, 274, 297, 318, 325, 326, 338, 462, 465, 466, 475, 476, 477, 479, 481], "match": [2, 3, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 110, 119, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 228, 230, 232, 233, 234, 235, 237, 239, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 280, 281, 288, 296, 300, 301, 306, 307, 324, 329, 331, 335, 339, 343, 344, 348, 349, 351, 352, 355, 356, 363, 364, 365, 371, 379, 381, 382, 383, 385, 395, 397, 435, 440, 457, 458, 462, 464, 466, 474, 476, 477, 479, 482], "don": [2, 3, 4, 6, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 178, 213, 262, 463, 464, 466, 470, 479, 481, 482], "throw": [2, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 396, 397, 482], "rb_td": 2, "batch_siz": [2, 3, 8, 15, 16, 18, 29, 31, 39, 42, 44, 50, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 101, 102, 103, 107, 108, 109, 110, 115, 116, 121, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 204, 205, 206, 210, 212, 213, 217, 221, 224, 225, 226, 231, 239, 243, 244, 246, 250, 253, 254, 256, 262, 263, 264, 273, 277, 279, 287, 288, 289, 290, 293, 296, 300, 303, 317, 318, 319, 327, 328, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 420, 429, 435, 456, 457, 458, 462, 463, 464, 465, 470, 475, 476, 477, 479, 481, 482], "max": [2, 31, 59, 63, 78, 83, 94, 107, 108, 121, 144, 223, 257, 317, 363, 364, 365, 371, 381, 383, 385, 395, 462, 464, 465, 466, 472], "label": [2, 63, 64, 71, 83, 84, 462, 475, 479], "100": [2, 15, 16, 18, 21, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 101, 103, 110, 115, 116, 121, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 216, 218, 225, 237, 246, 251, 254, 273, 304, 305, 306, 329, 331, 335, 345, 347, 395, 397, 420, 430, 448, 463, 464, 466, 467, 469, 472, 474, 475, 476, 477, 479, 481, 482], "rb_pytre": 2, "randn": [2, 3, 62, 65, 67, 68, 69, 78, 79, 101, 102, 103, 108, 110, 115, 116, 123, 127, 198, 212, 237, 279, 282, 283, 287, 289, 290, 294, 295, 298, 299, 304, 305, 306, 313, 315, 319, 339, 340, 341, 342, 343, 344, 348, 349, 351, 354, 355, 356, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 384, 385, 387, 388, 395, 400, 401, 402, 403, 437, 457, 466, 479, 481, 482], "c": [2, 3, 6, 7, 15, 16, 18, 21, 29, 39, 42, 61, 63, 65, 69, 70, 77, 78, 79, 84, 95, 96, 97, 102, 184, 237, 259, 264, 298, 299, 329, 331, 335, 395, 396, 463, 479], "zero": [2, 3, 4, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 110, 115, 116, 121, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 204, 210, 212, 214, 218, 221, 223, 224, 237, 243, 246, 253, 271, 273, 276, 277, 284, 285, 286, 292, 293, 294, 295, 296, 298, 299, 300, 304, 305, 307, 308, 317, 318, 327, 329, 331, 335, 350, 352, 358, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 406, 465, 466, 479, 481, 482], "assert": [2, 3, 6, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 110, 121, 127, 130, 133, 137, 140, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 184, 186, 187, 188, 198, 203, 206, 210, 213, 216, 221, 224, 233, 244, 251, 263, 270, 279, 307, 328, 396, 400, 401, 402, 403, 428, 429, 437, 470, 474, 479, 482], "len": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 101, 103, 110, 123, 191, 239, 280, 281, 301, 307, 462, 466, 470, 472, 475, 477, 478, 479, 481], "ambigu": [2, 62, 67, 68, 69, 78, 79, 110], "signatur": [2, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 110, 119, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 210, 217, 231, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397, 458, 462, 466, 467, 477], "deal": [2, 3, 62, 67, 68, 69, 78, 79, 110, 380, 395, 458, 462, 464, 476, 479], "interpret": [2, 3, 62, 67, 68, 69, 78, 79, 110, 456, 463], "put": [2, 62, 67, 68, 69, 78, 79, 110, 137, 149, 150, 168, 171, 172, 270, 427, 452, 457, 463, 464, 465, 467, 475, 477], "solv": [2, 4, 7, 9, 10, 62, 67, 68, 69, 78, 79, 110, 455, 462, 463, 464, 470, 472, 475, 476, 477, 479], "clear": [2, 3, 11, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 430, 467, 470], "cut": [2, 62, 67, 68, 69, 78, 79, 110], "distinct": [2, 3, 62, 67, 68, 69, 78, 79, 110, 210, 213, 469, 474], "view": [2, 3, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 273, 290, 294, 298, 301, 329, 331, 335, 395, 397, 467, 477, 479, 481, 482], "through": [2, 3, 4, 5, 8, 15, 16, 18, 20, 21, 22, 25, 27, 29, 39, 40, 48, 62, 66, 67, 68, 69, 72, 74, 78, 79, 84, 110, 127, 128, 129, 130, 133, 136, 137, 138, 141, 143, 144, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 219, 221, 224, 242, 274, 279, 301, 318, 347, 348, 352, 353, 354, 358, 361, 380, 400, 401, 402, 403, 428, 456, 457, 458, 462, 463, 464, 467, 469, 474, 475, 476, 477, 478, 479, 482], "collate_fn": [2, 62, 67, 68, 69, 77, 78, 79, 110, 179, 180, 183, 479, 481], "__init__": [2, 3, 7, 133, 151, 169, 181, 182, 185, 191, 192, 193, 194, 195, 203, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 277, 288, 290, 294, 298, 303, 332, 356, 363, 365, 366, 371, 378, 383, 385, 387, 388, 397, 459, 477, 482], "major": 2, "worri": [2, 80, 482], "though": [2, 4, 11, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 301, 464, 475, 476], "too": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 65, 71, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 236, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 297, 325, 326, 329, 331, 335, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 463, 468, 471, 477, 479, 482], "latter": [2, 22, 23, 25, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 382, 395, 397, 450, 451], "inv": [2, 3, 181, 182, 185, 191, 192, 193, 194, 195, 206, 216, 223, 226, 231, 239, 246, 251, 253, 258, 262, 265, 273, 397, 477], "obvious": [2, 466], "ignor": [2, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 72, 73, 74, 77, 80, 82, 85, 86, 87, 88, 89, 99, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 223, 226, 250, 259, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 395, 397, 400, 479], "thread": [2, 3, 15, 16, 18, 21, 29, 61, 63, 70, 84, 95, 96, 97, 127, 128, 129, 143, 144, 157, 166, 167, 184, 271, 396], "prefetch": [2, 62, 69, 78, 79, 94, 462, 463, 465, 479], "advis": [2, 11, 471, 482], "techniqu": [2, 8, 157, 166, 463, 466, 470, 479], "real": [2, 5, 352, 458, 465, 466, 477, 478], "life": [2, 225, 478], "adopt": [2, 3, 5, 462, 482], "throughput": [2, 9, 144, 462], "constant": [2, 11, 41, 213, 237, 255, 459, 462, 464, 465, 482], "throughout": [2, 3, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 464, 475, 482], "further": [2, 3, 5, 32, 462, 464, 466, 467], "refin": [2, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398], "coupl": [2, 465, 468, 469, 477, 479], "first_elt": 2, "128": [2, 116, 128, 129, 143, 144, 284, 287, 463, 465, 466, 472, 475, 478, 479], "wa": [2, 3, 5, 7, 39, 40, 42, 48, 50, 62, 65, 67, 68, 69, 74, 77, 78, 79, 84, 108, 110, 114, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 205, 213, 231, 263, 298, 329, 331, 335, 362, 364, 377, 379, 382, 384, 386, 395, 406, 458, 463, 464, 467, 468, 474, 475, 479, 481], "print": [2, 3, 6, 7, 15, 16, 18, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 107, 108, 110, 115, 116, 121, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 203, 204, 205, 206, 209, 210, 213, 214, 218, 219, 221, 222, 223, 224, 232, 237, 243, 244, 246, 249, 254, 256, 257, 258, 259, 270, 271, 273, 280, 281, 283, 284, 285, 286, 287, 290, 292, 293, 296, 300, 301, 304, 305, 306, 307, 313, 316, 317, 319, 329, 331, 335, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 356, 359, 380, 395, 396, 397, 418, 448, 456, 457, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 214], "larger": [2, 4, 77, 296, 300, 370, 378, 481], "volum": 2, "due": [2, 3, 5, 13, 22, 23, 25, 31, 469, 478, 479, 482], "memorymappedtensor": [2, 44, 61, 63, 75, 83, 101, 422, 470], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 110, 127, 130, 133, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 220, 221, 222, 224, 249, 252, 255, 260, 264, 265, 273, 274, 277, 298, 329, 331, 333, 335, 351, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 395, 397, 427, 457, 462, 464, 465, 466, 470, 475], "file": [2, 6, 7, 8, 61, 63, 70, 84, 95, 96, 97, 99, 171, 184, 396, 419, 420, 422, 438, 459, 461, 463, 475, 479, 480], "locat": [2, 7, 61, 63, 70, 83, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 201, 220, 225, 237, 248, 271, 297, 325, 326, 396, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 462, 463, 464, 471, 475, 476, 479], "improv": [2, 4, 11, 229, 362, 458, 466, 475, 476, 479], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 157, 166, 231, 456, 464, 475, 479], "found": [2, 3, 6, 7, 10, 15, 16, 18, 21, 27, 31, 35, 39, 40, 42, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 95, 96, 97, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 207, 213, 234, 246, 249, 257, 270, 271, 273, 293, 306, 307, 329, 331, 335, 348, 352, 379, 380, 382, 395, 396, 397, 458, 462, 463, 465, 466, 467, 469, 471, 477, 479, 481], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 73, 74, 82, 85, 86, 87, 88, 89, 101, 108, 155, 156, 223, 261, 276, 298, 299, 370, 465, 466, 470, 479], "sharabl": [2, 157, 166], "collabor": 2, "rather": [2, 4, 119, 155, 156, 186, 191, 244, 271, 457, 458, 462, 463, 464, 467, 469, 475, 476, 479], "incur": [2, 128, 129, 143, 144], "transmiss": 2, "overhead": [2, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 352], "content": [2, 3, 8, 18, 39, 40, 48, 61, 62, 63, 69, 70, 74, 78, 79, 84, 95, 96, 97, 114, 115, 116, 127, 130, 133, 136, 137, 138, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 182, 183, 184, 186, 187, 188, 243, 280, 281, 301, 306, 307, 348, 380, 395, 396, 464, 477, 481], "map": [2, 3, 8, 14, 17, 19, 24, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 106, 107, 108, 127, 130, 133, 137, 145, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 206, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 239, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 290, 329, 331, 335, 339, 340, 341, 342, 344, 348, 349, 351, 352, 354, 355, 356, 357, 364, 365, 379, 382, 385, 395, 396, 397, 398, 400, 433, 454, 457, 458, 462, 463, 464, 465, 468, 469, 478], "writer": [2, 62, 67, 68, 69, 78, 79, 100, 103, 108, 110, 111, 115, 121, 122, 123, 126, 464, 479], "tensordictroundrobinwrit": [2, 79, 110], "goe": [2, 4, 84, 159, 160, 462, 464, 475, 476, 482], "prioritizedsampl": [2, 62, 67, 68, 69, 78, 79, 108, 110, 367, 372, 398, 462, 479], "access": [2, 3, 7, 8, 11, 35, 42, 47, 55, 62, 65, 66, 72, 77, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 213, 241, 262, 266, 273, 329, 331, 335, 395, 397, 452, 455, 462, 467, 475, 476, 477, 479, 481], "tensordictreplaybuff": [2, 62, 67, 68, 69, 78, 107, 108, 110, 115, 116, 121, 212, 213, 435, 448, 454, 462, 463, 465, 479], "mp": [2, 22, 23, 25, 134, 270, 271], "def": [2, 3, 28, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 127, 130, 133, 134, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 203, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 271, 273, 274, 277, 290, 294, 295, 298, 299, 303, 308, 329, 331, 335, 347, 348, 356, 363, 365, 366, 371, 378, 380, 383, 385, 387, 388, 395, 397, 418, 428, 456, 458, 459, 462, 463, 466, 474, 475, 476, 477, 479, 481, 482], "td": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 39, 42, 44, 50, 61, 62, 63, 65, 67, 68, 69, 70, 75, 77, 78, 79, 84, 95, 96, 97, 101, 110, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 155, 156, 157, 158, 161, 162, 166, 167, 168, 169, 170, 178, 179, 180, 183, 184, 186, 187, 188, 191, 204, 207, 210, 212, 214, 218, 219, 221, 222, 223, 224, 232, 233, 234, 235, 237, 246, 249, 253, 256, 259, 263, 270, 277, 279, 289, 290, 293, 302, 303, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 348, 349, 351, 354, 356, 395, 396, 398, 401, 402, 403, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 429, 437, 457, 458, 462, 463, 465, 476, 477, 478, 481], "__name__": [2, 3, 15, 16, 18, 21, 28, 29, 67, 134, 271, 418, 463, 481], "__main__": [2, 3, 15, 16, 18, 21, 28, 29, 67, 134, 271, 418, 481], "21": [2, 50, 84, 115, 116, 157, 159, 160, 166, 218], "proc": 2, "target": [2, 4, 8, 27, 32, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 255, 273, 316, 329, 331, 335, 351, 352, 362, 363, 364, 365, 366, 367, 369, 371, 372, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 395, 397, 398, 399, 400, 401, 402, 403, 404, 441, 447, 448, 458, 459, 465, 466, 472, 475, 477], "arg": [2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 49, 50, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 108, 110, 115, 116, 117, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 200, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 235, 240, 241, 242, 243, 244, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 277, 279, 280, 281, 288, 289, 293, 296, 300, 301, 302, 303, 317, 328, 329, 330, 331, 332, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 427, 431, 435, 438, 452, 463, 466], "join": [2, 134, 191, 454, 463, 464, 466, 475], "now": [2, 3, 7, 62, 69, 78, 79, 110, 155, 156, 157, 213, 250, 307, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 478, 479, 482], "20": [2, 50, 77, 83, 84, 115, 116, 121, 127, 130, 133, 137, 141, 145, 155, 156, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 255, 273, 292, 294, 295, 298, 299, 316, 343, 429, 465, 479, 482], "_data": [2, 477], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 71, 72, 73, 74, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 102, 110, 113, 121, 126, 127, 130, 133, 137, 139, 145, 151, 152, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 210, 212, 213, 225, 231, 233, 237, 242, 255, 261, 263, 269, 271, 273, 275, 283, 285, 291, 293, 306, 307, 316, 317, 318, 320, 321, 327, 328, 329, 331, 335, 345, 347, 350, 352, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 388, 395, 397, 398, 399, 400, 418, 427, 433, 455, 457, 458, 462, 463, 465, 466, 467, 475, 476, 477, 478, 479, 481, 482], "difficult": [2, 4, 157, 471], "pai": [2, 8, 213, 462], "word": [2, 3, 11, 71, 380, 395, 462, 470, 477, 482], "1m": [2, 441, 462, 464, 465], "doe": [2, 3, 19, 22, 35, 42, 47, 55, 61, 62, 63, 65, 66, 70, 72, 77, 78, 83, 84, 95, 96, 97, 98, 99, 106, 107, 108, 115, 117, 119, 126, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 271, 273, 278, 287, 288, 294, 295, 296, 298, 299, 300, 309, 316, 328, 329, 331, 335, 343, 353, 354, 362, 364, 372, 379, 380, 382, 395, 396, 397, 399, 438, 458, 459, 462, 463, 464, 465, 467, 470, 475, 477, 479, 482], "howev": [2, 3, 5, 7, 35, 42, 47, 55, 65, 66, 72, 77, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 273, 329, 331, 335, 362, 364, 365, 379, 382, 384, 385, 395, 397, 457, 462, 463, 465, 466, 469, 477, 479, 482], "capac": [2, 62, 69, 78, 79, 101, 103, 107, 115, 123, 464, 470], "There": [2, 3, 10, 110, 180, 262, 278, 296, 300, 362, 382, 457, 458, 459, 464, 465, 466, 468, 470, 475, 476, 477, 479, 481, 482], "circumv": 2, "account": [2, 101, 103, 123, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 219, 304, 305, 457, 463, 465, 479, 482], "save": [2, 3, 8, 35, 42, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 84, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 110, 117, 118, 119, 123, 124, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 269, 273, 329, 331, 335, 395, 396, 397, 419, 420, 422, 427, 438, 459, 466, 470, 471, 472, 475, 476], "convent": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 458, 462, 465, 475, 476, 477], "overridden": [2, 3, 35, 42, 47, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 400, 402, 403, 465, 475], "dim_extend": [2, 62, 69, 78, 79], "obtain": [2, 3, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 241, 255, 268, 277, 279, 316, 318, 435, 462, 464, 467, 468, 469, 475, 476], "counterpart": [2, 3, 213], "desir": [2, 3, 11, 15, 16, 18, 21, 29, 35, 38, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 208, 210, 217, 219, 237, 239, 241, 242, 256, 262, 263, 266, 268, 273, 280, 281, 288, 301, 307, 329, 331, 335, 339, 344, 345, 348, 349, 350, 351, 352, 395, 397, 457, 462, 466, 475, 476, 477, 479], "diversifi": 2, "offer": [2, 3, 7, 127, 128, 129, 130, 133, 137, 143, 144, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 261, 418, 456, 457, 462, 463, 466, 467, 469, 470, 475, 477, 479, 482], "accomplish": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 467], "__especially__": 2, "offlin": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 363, 369, 370, 378, 387, 397, 427, 459, 467, 478, 479], "docstr": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 467, 468], "detail": [2, 3, 5, 6, 7, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 259, 263, 273, 278, 290, 294, 298, 308, 316, 329, 331, 335, 345, 362, 372, 380, 382, 395, 397, 455, 459, 463, 466, 470, 474, 479], "happi": [2, 466], "concaten": [2, 8, 15, 16, 27, 50, 51, 53, 84, 178, 186, 213, 214, 237, 253, 298, 301, 354, 462, 463, 468, 475, 476, 477, 479, 482], "schedul": [2, 4, 7, 71, 433, 464, 477], "transformedenv": [2, 3, 11, 12, 55, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 210, 213, 216, 217, 219, 221, 224, 225, 226, 232, 233, 234, 236, 237, 239, 243, 244, 245, 246, 249, 250, 251, 254, 255, 256, 257, 261, 262, 270, 273, 296, 300, 347, 397, 420, 428, 462, 463, 464, 465, 466, 467, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "stepcount": [2, 50, 55, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 219, 261, 262, 263, 273, 279, 397, 462, 463, 464, 465, 466, 467, 472, 475, 476, 481], "gymenv": [2, 3, 5, 11, 15, 16, 18, 21, 27, 28, 29, 44, 50, 55, 67, 75, 77, 121, 127, 130, 133, 134, 137, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 209, 210, 213, 216, 217, 218, 219, 225, 231, 232, 233, 237, 239, 244, 245, 246, 249, 251, 255, 256, 257, 258, 261, 262, 263, 264, 270, 271, 273, 279, 296, 300, 347, 397, 418, 420, 448, 454, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 478, 479, 481, 482], "randompolici": [2, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 55, 213, 246, 454, 470, 479], "cartpol": [2, 3, 11, 44, 55, 75, 77, 127, 130, 131, 132, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 210, 213, 218, 249, 255, 270, 273, 347, 418, 463, 465, 468, 470, 471, 472, 479, 482], "v1": [2, 3, 11, 15, 16, 18, 21, 27, 28, 29, 44, 55, 67, 75, 77, 121, 127, 130, 133, 134, 136, 137, 138, 143, 144, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 210, 213, 216, 218, 219, 226, 232, 233, 237, 244, 246, 249, 250, 251, 254, 255, 256, 257, 258, 261, 262, 264, 270, 271, 273, 279, 296, 300, 347, 391, 397, 409, 410, 411, 412, 414, 415, 416, 417, 418, 457, 463, 465, 467, 468, 469, 470, 471, 472, 477, 479, 481, 482], "action_spec": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 127, 128, 129, 130, 133, 137, 143, 144, 145, 151, 157, 158, 159, 160, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 210, 213, 217, 221, 222, 224, 233, 237, 243, 246, 262, 263, 264, 265, 273, 277, 290, 303, 319, 321, 339, 344, 348, 349, 363, 365, 367, 369, 383, 385, 387, 388, 397, 448, 457, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 475, 476, 477, 478, 479, 481, 482], "8": [2, 3, 6, 7, 39, 40, 48, 55, 69, 74, 77, 107, 108, 115, 116, 127, 128, 129, 130, 131, 132, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 183, 186, 187, 188, 206, 209, 218, 219, 255, 258, 264, 271, 280, 281, 283, 284, 292, 301, 340, 341, 342, 348, 351, 354, 378, 462, 463, 477, 479, 481], "traj_kei": [2, 108, 115, 116, 479], "truncated_kei": [2, 108, 115, 116, 246, 254], "strict_length": [2, 108, 115, 116, 420], "enumer": [2, 15, 16, 18, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 75, 77, 79, 82, 85, 86, 87, 88, 89, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 389, 395, 397, 458, 462, 463, 464, 465, 472, 475, 479, 481], "break": [2, 5, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 65, 66, 67, 69, 72, 77, 79, 94, 108, 115, 116, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 213, 246, 270, 271, 273, 296, 300, 325, 329, 331, 335, 395, 397, 420, 463, 466, 470, 472, 479, 481], "step_count": [2, 15, 16, 18, 55, 127, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 219, 254, 273, 464, 465, 466, 467, 472], "32": [2, 28, 39, 62, 67, 68, 69, 78, 79, 110, 116, 137, 144, 164, 165, 171, 172, 188, 213, 231, 280, 281, 282, 283, 284, 286, 287, 292, 301, 306, 307, 311, 312, 315, 318, 327, 398, 418, 463, 465, 466, 468, 469, 477, 478, 479, 481, 482], "33": [2, 35, 39, 42, 47, 55, 65, 66, 72, 77, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 280, 281, 301, 329, 331, 335, 395, 397], "34": [2, 280, 281, 301], "35": [2, 280, 281, 301], "36": [2, 180], "37": [2, 212], "38": [2, 7, 50], "39": [2, 143, 144], "40": [2, 77, 143, 144], "41": [2, 115], "11": [2, 10, 31, 50, 59, 77, 83, 84, 101, 102, 103, 107, 116, 123, 134, 206, 218, 259, 273, 277, 303], "12": [2, 7, 10, 50, 77, 101, 103, 116, 123, 143, 144, 157, 164, 165, 166, 180, 218, 271, 273, 420, 479], "13": [2, 5, 77, 115, 116, 163, 218, 269, 271, 273, 274], "14": [2, 6, 77, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 218, 237, 273, 274], "15": [2, 31, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 218, 273, 317, 343, 373, 479], "16": [2, 3, 15, 16, 21, 29, 35, 42, 47, 55, 65, 66, 72, 77, 108, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 273, 329, 331, 335, 395, 397, 465, 479], "17": [2, 11, 115, 116, 137, 157, 188, 206, 218, 273], "could": [2, 3, 4, 6, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 352, 395, 397, 463, 464, 471, 475, 476, 478, 482], "sai": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 306, 329, 331, 335, 395, 397, 475, 478, 482], "interleav": 2, "cannot": [2, 3, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 39, 53, 59, 69, 78, 79, 103, 104, 108, 111, 115, 116, 123, 127, 130, 133, 136, 137, 138, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 221, 224, 242, 249, 261, 306, 307, 349, 362, 365, 382, 463, 464, 465, 466, 475, 476, 477], "suggest": [2, 398, 462, 476], "serialenv": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 167, 168, 178, 179, 180, 183, 186, 187, 188, 256, 271, 273, 279, 347, 454, 481, 482], "squeez": [2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 209, 210, 213, 218, 252, 255, 280, 281, 322, 323, 462, 466, 477, 479], "6": [2, 3, 7, 15, 16, 18, 21, 29, 31, 50, 55, 69, 72, 77, 84, 108, 116, 131, 132, 137, 157, 164, 165, 180, 188, 206, 209, 218, 219, 237, 239, 255, 261, 271, 279, 280, 281, 283, 284, 285, 288, 292, 295, 301, 306, 307, 308, 311, 324, 347, 348, 356, 463, 466, 481], "5": [2, 3, 15, 16, 18, 21, 29, 31, 38, 39, 40, 48, 50, 51, 52, 53, 54, 55, 59, 62, 67, 69, 72, 74, 77, 78, 79, 110, 115, 116, 121, 127, 130, 133, 134, 137, 143, 144, 145, 149, 150, 152, 157, 158, 161, 164, 165, 166, 167, 168, 171, 172, 178, 180, 183, 186, 187, 188, 193, 206, 209, 210, 212, 218, 219, 234, 246, 253, 254, 255, 261, 271, 273, 276, 277, 278, 279, 280, 281, 283, 284, 289, 290, 291, 292, 294, 297, 298, 301, 303, 306, 307, 311, 316, 319, 325, 326, 343, 344, 347, 349, 355, 379, 382, 384, 387, 388, 418, 456, 457, 461, 462, 463, 466, 468, 472, 475, 476, 477, 479, 480, 481, 482], "7": [2, 3, 6, 10, 42, 50, 55, 59, 62, 69, 77, 78, 108, 116, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 209, 218, 219, 255, 258, 271, 277, 279, 280, 281, 284, 301, 303, 306, 406, 462, 479, 481], "9": [2, 3, 7, 31, 35, 50, 55, 62, 69, 77, 78, 84, 108, 116, 121, 131, 132, 148, 159, 160, 168, 206, 209, 218, 219, 255, 258, 263, 270, 271, 273, 304, 305, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 389, 395, 398, 428, 458, 462, 463, 475, 476], "18": [2, 50, 115, 116, 164, 165, 171, 172, 261, 273, 307], "19": [2, 115, 116, 121, 218, 273, 461, 480], "independ": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 157, 166, 228, 235, 256, 265, 278, 307, 338, 362, 382, 458, 459, 462, 463, 476, 479, 481], "congruent": 2, "name": [2, 3, 6, 7, 18, 35, 39, 40, 42, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 94, 95, 96, 97, 127, 128, 130, 131, 133, 137, 143, 145, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 163, 166, 167, 168, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 201, 205, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 223, 225, 226, 227, 229, 231, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 273, 274, 296, 300, 329, 331, 332, 335, 344, 349, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 396, 397, 398, 400, 402, 403, 404, 418, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 459, 462, 463, 464, 465, 466, 469, 470, 471, 475, 476, 477, 478, 482], "randomcroptensordict": [2, 462], "unlik": [2, 33, 69, 78, 79, 114, 137, 149, 150, 171, 172, 188, 276, 278, 331, 347, 372, 382, 420, 457, 463, 466, 468, 470, 481], "stop": [2, 3, 15, 16, 18, 21, 27, 29, 71, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 470, 475, 476, 481, 482], "signal": [2, 3, 15, 16, 18, 21, 31, 50, 108, 115, 116, 121, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 205, 213, 219, 225, 234, 254, 257, 458, 462, 464, 475, 476, 479, 482], "disk": [2, 3, 50, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 101, 110, 184, 396, 438, 459, 462, 463, 465, 466, 470, 471, 475, 479], "dump": [2, 3, 11, 44, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 84, 95, 96, 97, 99, 101, 102, 103, 104, 110, 117, 119, 123, 184, 396, 418, 419, 420, 471, 472, 475], "json": 2, "metadata": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 365, 387, 464, 467, 469, 470, 475, 476, 482], "anticip": [2, 221, 224], "compli": [2, 278, 457], "back": [2, 32, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 195, 260, 269, 308, 339, 344, 345, 348, 349, 350, 351, 352, 464, 466, 475, 476, 477, 479], "exact": [2, 3, 31, 157, 298], "statu": [2, 3, 24, 133], "prioriti": [2, 4, 62, 78, 79, 101, 102, 103, 104, 107, 108, 117, 119, 123, 365, 366, 367, 369, 370, 371, 372, 378, 383, 385, 387, 388, 398, 459, 462, 463, 479], "heap": 2, "under": [2, 3, 4, 27, 35, 42, 47, 50, 55, 65, 66, 71, 72, 77, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 234, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 278, 329, 331, 335, 339, 344, 345, 348, 349, 350, 351, 352, 380, 395, 397, 400, 401, 402, 403, 404, 420, 458, 462, 463, 468, 475, 477, 482], "hood": [2, 3, 27, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 278, 477], "naiv": [2, 266, 467], "just": [2, 3, 4, 84, 119, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 148, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 183, 186, 187, 188, 205, 209, 216, 256, 274, 307, 332, 429, 456, 459, 462, 463, 464, 465, 466, 467, 468, 470, 475, 476, 477, 479, 481, 482], "public": [2, 68, 118, 241, 268], "serializ": 2, "consum": [2, 114, 116, 347, 463, 464, 470, 476, 479], "much": [2, 3, 8, 15, 16, 21, 62, 78, 107, 108, 157, 166, 379, 382, 464, 466, 467, 471, 475, 476, 477, 479, 482], "duplic": [2, 35, 42, 47, 55, 65, 66, 72, 77, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 363, 365, 367, 372, 378, 380, 383, 385, 387, 388, 395, 397, 398], "observ": [2, 3, 8, 15, 16, 18, 21, 27, 29, 32, 44, 50, 55, 67, 75, 77, 84, 98, 99, 106, 108, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 199, 204, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 235, 237, 238, 239, 243, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 279, 282, 283, 284, 285, 286, 287, 290, 293, 296, 300, 306, 311, 312, 315, 316, 317, 319, 320, 339, 340, 341, 342, 343, 344, 347, 348, 349, 356, 357, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 378, 379, 382, 383, 384, 385, 387, 388, 397, 398, 400, 401, 402, 403, 404, 418, 420, 448, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 479, 481, 482], "plu": [2, 15, 16, 21, 71, 157, 166, 178, 477], "enabl": [2, 7, 8, 101, 103, 114, 123, 210, 296, 300, 317, 331, 335, 347, 418, 420, 433, 456, 464, 467, 475, 476, 477, 479], "three": [2, 33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 65, 94, 365, 457, 459, 464, 466, 467, 468, 475, 476, 477, 479, 482], "flatstoragecheckpoint": 2, "discard": [2, 3, 83, 137, 204, 266, 419, 479, 482], "compress": 2, "At": [2, 258, 293, 302, 463, 464, 465, 470, 474, 477, 478], "correct": [2, 4, 61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 190, 192, 213, 233, 396, 441, 464, 465], "addit": [2, 3, 4, 14, 17, 24, 26, 35, 42, 47, 55, 57, 65, 66, 72, 77, 84, 96, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 171, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 217, 241, 256, 260, 262, 263, 266, 268, 273, 275, 294, 329, 331, 335, 343, 347, 351, 361, 380, 395, 397, 400, 418, 420, 458, 462, 463, 466, 467, 475, 476, 479], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 102, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 241, 266, 268, 273, 329, 331, 335, 362, 382, 395, 397, 462, 477, 478, 482], "appar": [2, 3, 431], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 96, 98, 99, 106, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 201, 206, 216, 223, 231, 234, 256, 264, 275, 281, 287, 290, 306, 312, 317, 319, 339, 344, 345, 348, 349, 350, 351, 352, 354, 355, 356, 359, 362, 367, 369, 370, 371, 382, 387, 388, 398, 457, 458, 463, 464, 465, 466, 467, 468, 469, 475, 476, 477, 482], "assumpt": [2, 3, 82, 477, 479], "accur": [2, 7, 463, 477, 479], "truncat": [2, 3, 15, 16, 18, 21, 44, 46, 50, 55, 56, 64, 75, 77, 80, 83, 96, 98, 99, 106, 108, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 186, 187, 188, 191, 205, 206, 225, 226, 231, 236, 243, 246, 250, 254, 256, 263, 264, 273, 296, 300, 326, 331, 335, 347, 400, 406, 462, 464, 467, 475, 482], "marl": [2, 148, 174, 213, 253, 257, 306, 307, 308, 371, 385, 458, 467, 475, 476], "extra": [2, 10, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 213, 270, 271, 273, 329, 331, 335, 395, 397, 427, 457, 464, 465, 479], "fail": [2, 7, 28, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 207], "concret": [2, 462, 464], "set_se": [2, 3, 15, 16, 18, 21, 27, 29, 44, 50, 55, 75, 77, 127, 128, 129, 130, 133, 137, 143, 144, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 218, 219, 237, 244, 249, 255, 257, 263, 273, 456, 466, 470, 472, 477, 481, 482], "manual_se": [2, 3, 33, 44, 51, 52, 62, 69, 75, 77, 78, 79, 102, 115, 116, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 207, 209, 218, 219, 223, 237, 246, 249, 255, 257, 271, 273, 293, 304, 305, 313, 316, 317, 339, 345, 352, 355, 362, 363, 365, 366, 370, 378, 385, 466, 470, 472, 475, 476, 477, 481, 482], "200": [2, 15, 16, 18, 27, 35, 42, 44, 47, 55, 65, 66, 67, 72, 75, 77, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 246, 273, 283, 284, 291, 320, 321, 329, 331, 335, 395, 397, 418, 420, 462, 465, 466, 470, 472, 479], "22": [2, 29, 115, 116, 269], "rb_test": 2, "_storag": [2, 478, 479], "max_siz": [2, 50, 62, 69, 77, 78, 79, 101, 102, 103, 104, 115, 116, 117, 121, 123, 464, 470], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 38, 61, 63, 70, 84, 95, 96, 97, 152, 184, 218, 261, 287, 304, 305, 306, 361, 365, 396, 418, 462, 464, 466, 475, 476], "state_dict": [2, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 270, 271, 273, 306, 307, 329, 331, 335, 365, 385, 395, 396, 397, 452, 459, 462, 463, 482], "load_state_dict": [2, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 270, 271, 273, 329, 331, 335, 365, 385, 395, 396, 397, 459, 462], "drawback": 2, "struggl": 2, "big": [2, 464, 470, 479, 482], "sequenti": [2, 9, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 212, 233, 273, 329, 331, 335, 338, 340, 341, 342, 348, 353, 354, 359, 362, 363, 365, 371, 378, 382, 383, 384, 385, 387, 395, 397, 457, 464, 465, 468, 476, 477, 478, 481, 482], "known": [2, 3, 5, 7, 8, 77, 137, 188, 256, 407, 408, 462, 463, 467], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 276, 462, 463, 469], "essenti": [2, 3, 13, 22, 23, 25, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 463, 467, 475, 477, 479], "purpos": [2, 3, 7, 11, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 294, 362, 364, 376, 379, 382, 384, 395, 448, 462, 464, 465, 466, 469, 471, 475, 476, 478, 482], "guid": [2, 11, 159, 160, 164, 165, 255, 455, 462, 476, 481], "explan": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 278, 329, 331, 335, 395, 397], "effect": [2, 3, 18, 29, 35, 39, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 108, 110, 113, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 213, 219, 263, 273, 278, 329, 331, 335, 395, 397, 438, 457, 462, 468, 475, 479, 482], "realm": [2, 468], "As": [2, 3, 4, 55, 69, 78, 79, 82, 110, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 246, 288, 352, 400, 457, 462, 463, 464, 465, 466, 467, 469, 470, 475, 476, 477, 478, 479, 481, 482], "practition": 2, "often": [2, 3, 8, 308, 377, 380, 395, 438, 462, 463, 467, 469, 477, 479, 482], "encount": [2, 4, 235, 347, 455, 463, 468, 477], "situat": [2, 149, 150, 186, 191], "sometim": [2, 3, 82, 465, 482], "variabl": [2, 3, 4, 7, 8, 20, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 72, 73, 74, 82, 85, 86, 87, 88, 89, 96, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 191, 258, 262, 271, 294, 295, 296, 298, 299, 300, 303, 340, 341, 342, 380, 383, 428, 459, 463], "immedi": [2, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 399, 475, 476], "199": 2, "info": [2, 3, 15, 16, 62, 67, 68, 69, 78, 79, 84, 107, 108, 110, 113, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 145, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 231, 264, 266, 269, 272, 427, 467, 472, 475, 476, 479, 481], "glanc": [2, 467], "seem": [2, 462, 465, 467], "togeth": [2, 3, 11, 15, 16, 18, 21, 22, 23, 25, 27, 50, 65, 71, 73, 74, 102, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 242, 253, 262, 294, 296, 298, 300, 327, 340, 341, 342, 357, 457, 463, 465, 467, 475], "less": [2, 24, 152, 328, 450, 451, 458, 464, 465, 479, 481], "omit": [2, 145, 187, 275, 293, 317, 434, 464, 469, 477, 479], "proper": [2, 3, 4, 6, 7, 331, 335, 400, 401, 402, 403, 463, 464, 475, 476, 477, 479], "imposs": [2, 3, 69, 78, 79, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 362, 364, 379, 382, 384], "determin": [2, 3, 17, 50, 62, 78, 84, 107, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 241, 268, 306, 317, 331, 335, 365, 463, 468, 475, 476], "complic": [2, 42, 65, 77, 329, 331, 335, 395, 477, 479, 482], "matter": [2, 41, 470], "inconsist": [2, 482], "miss": [2, 3, 4, 6, 7, 35, 39, 42, 47, 50, 55, 65, 66, 72, 77, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 231, 261, 263, 269, 273, 274, 329, 331, 335, 353, 354, 362, 365, 385, 395, 397, 455, 462, 465], "primari": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 145, 187, 470], "elimin": [2, 3, 467], "upon": [2, 3, 8, 20, 475, 477], "canon": 2, "definit": [2, 59, 117, 306], "markov": [2, 3, 467, 482], "mdp": [2, 204, 467, 477], "context": [2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 116, 127, 130, 133, 134, 137, 145, 154, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 256, 265, 273, 278, 296, 300, 307, 309, 329, 331, 335, 338, 343, 393, 394, 395, 397, 400, 401, 402, 403, 405, 413, 420, 428, 433, 456, 457, 458, 462, 463, 464, 465, 466, 475, 476, 477, 478, 479, 481], "condit": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 186, 218, 219, 255, 270, 344, 345, 347, 349, 350, 361, 458, 462, 475, 477, 479], "complet": [2, 7, 9, 24, 29, 114, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 254, 397, 455, 458, 462, 464, 467, 474], "termin": [2, 3, 7, 15, 16, 18, 21, 29, 44, 46, 50, 55, 56, 71, 75, 77, 98, 99, 106, 115, 127, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 186, 187, 188, 191, 205, 206, 209, 210, 225, 231, 243, 256, 264, 273, 277, 296, 300, 303, 347, 353, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 462, 463, 464, 475, 476, 477, 481, 482], "reward": [2, 3, 15, 16, 18, 41, 42, 44, 46, 50, 55, 56, 61, 70, 71, 75, 77, 83, 84, 94, 107, 108, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 204, 206, 207, 210, 211, 216, 217, 221, 222, 224, 225, 226, 231, 233, 234, 235, 239, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 260, 262, 263, 264, 265, 267, 268, 270, 271, 273, 277, 296, 303, 343, 347, 357, 362, 363, 365, 366, 367, 369, 370, 371, 374, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 431, 432, 433, 436, 452, 456, 458, 459, 462, 463, 464, 465, 466, 467, 471, 475, 476, 477, 481, 482], "imit": [2, 3, 376], "inform": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 134, 137, 140, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 279, 280, 281, 301, 307, 329, 331, 335, 395, 396, 397, 457, 458, 459, 462, 463, 464, 465, 466, 467, 475, 476, 477, 479, 481], "stateless": [2, 3, 50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 210, 219, 271, 333, 334, 380, 395, 418, 462, 467, 477, 482], "simul": [2, 3, 5, 7, 8, 82, 128, 129, 130, 139, 143, 144, 163, 171, 172, 200, 277, 303, 332, 456, 457, 462, 464, 466, 467, 471, 475, 476], "furthermor": [2, 475, 476], "certain": [2, 4, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 218, 219, 229, 254, 263, 273, 293, 295, 299, 329, 331, 335, 379, 395, 397, 462, 463, 464, 466, 472, 475, 476, 482], "composit": [2, 3, 33, 34, 36, 37, 38, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 91, 96, 113, 119, 126, 127, 130, 133, 135, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 205, 207, 210, 221, 222, 223, 224, 226, 231, 233, 235, 243, 244, 250, 254, 256, 260, 261, 262, 264, 271, 273, 275, 277, 303, 339, 348, 352, 354, 355, 359, 362, 382, 397, 454, 462, 464, 468, 477], "uniform": [2, 62, 78, 107, 108, 331, 335, 475], "unambigu": 2, "distinguish": [2, 3, 69, 78, 79, 149, 150, 171, 172], "happen": [2, 3, 24, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 274, 317, 463, 466, 469, 470, 471, 478, 482], "everyth": [2, 463, 464, 465, 471, 472], "belong": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 269, 270, 352, 462, 470, 476], "rule": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 221, 224, 273, 329, 331, 335, 352, 395, 397, 457, 464], "field": [2, 3, 15, 16, 18, 21, 29, 31, 35, 39, 42, 44, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 95, 96, 97, 101, 102, 103, 107, 115, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 206, 210, 221, 224, 225, 226, 231, 239, 243, 244, 246, 250, 253, 254, 256, 261, 263, 264, 273, 277, 279, 289, 290, 296, 300, 303, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354, 356, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 442, 455, 457, 463, 477], "taken": [2, 3, 33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 245, 304, 305, 458, 462, 464, 465, 468, 475, 476, 477], "is_shar": [2, 3, 15, 16, 18, 29, 31, 39, 42, 44, 50, 61, 63, 64, 65, 70, 71, 75, 77, 78, 79, 80, 83, 84, 94, 95, 96, 97, 101, 102, 103, 107, 115, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 191, 204, 206, 210, 221, 224, 225, 226, 231, 239, 243, 244, 246, 250, 253, 254, 256, 264, 270, 277, 279, 289, 290, 296, 300, 303, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354, 356, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 398, 457, 477], "envbas": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 50, 84, 127, 130, 134, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 207, 210, 221, 224, 236, 243, 244, 262, 263, 270, 273, 277, 296, 300, 302, 303, 347, 397, 433, 442, 443, 444, 448, 450, 451, 452, 454, 456, 467], "brought": [2, 464, 465, 468], "step_mdp": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 296, 300, 454, 465, 467, 477, 481, 482], "count": [2, 3, 15, 16, 18, 21, 29, 50, 55, 84, 133, 134, 218, 254, 261, 271, 317, 433, 438, 441, 462, 463, 464, 465, 479, 482], "trigger": [2, 7, 42, 65, 77, 186, 271, 329, 331, 335, 395], "turn": [2, 22, 23, 25, 27, 39, 40, 48, 61, 63, 66, 70, 72, 74, 84, 95, 96, 97, 130, 144, 157, 168, 184, 218, 230, 262, 265, 269, 344, 396, 400, 418, 433, 458, 462, 463, 465, 468, 477, 478], "retain": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "regard": [2, 290, 345, 362, 372, 382, 462, 464, 477], "expand": [2, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 115, 116, 184, 210, 256, 288, 351, 354, 363, 365, 378, 380, 383, 385, 387, 388, 395, 396, 475, 476, 477, 479, 481], "recur": [2, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 400, 401, 402, 403, 404, 468], "anyth": [2, 4, 15, 16, 18, 21, 22, 23, 25, 27, 458], "els": [2, 128, 129, 191, 210, 294, 295, 298, 299, 311, 457, 459, 462, 463, 464, 465, 475, 476, 477, 478], "repetit": [2, 464, 467, 470], "embed": [2, 241, 266, 267, 268, 283, 318, 339, 340, 341, 342, 351, 352, 356, 478], "strictli": [2, 3, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 234, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397, 462, 464], "enforc": [2, 35, 39, 42, 47, 55, 65, 66, 72, 77, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 353, 365, 385, 395, 397, 477], "n_action": [2, 347, 363, 365, 367, 369, 381, 385], "rightmost": [2, 458], "n_ob": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 233, 347, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 469], "estim": [2, 4, 108, 115, 116, 179, 180, 183, 186, 191, 192, 225, 233, 283, 325, 340, 341, 342, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 458, 463, 464, 468, 469, 475, 476], "subsequ": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 273, 329, 331, 335, 395, 397, 465, 475], "proce": [2, 475], "state_valu": [2, 341, 342, 356, 364, 370, 378, 379, 382, 383, 385, 400, 401, 402, 403, 405, 407, 409, 411, 413, 414, 416, 457, 462, 476], "f": [2, 15, 16, 18, 21, 29, 128, 129, 137, 143, 144, 178, 188, 193, 258, 274, 299, 361, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 462, 463, 464, 465, 472, 475, 476, 477, 479, 482], "next_state_valu": [2, 387, 388, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 454], "broadcast": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 288, 332, 371, 385], "left": [2, 57, 108, 115, 181, 182, 185, 186, 191, 192, 193, 194, 195, 210, 217, 218, 220, 221, 222, 226, 233, 235, 241, 243, 244, 250, 254, 257, 260, 262, 264, 266, 268, 271, 273, 293, 306, 397, 463, 464, 466, 470, 471], "would": [2, 3, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 294, 296, 298, 300, 301, 306, 329, 331, 335, 352, 395, 397, 458, 459, 463, 464, 465, 467, 469, 470, 477, 479, 481, 482], "best": [2, 5, 9, 141, 296, 300, 475, 476, 479, 481], "bug": [2, 4], "worst": [2, 463], "twice": [2, 8, 116], "feasibl": 2, "mostli": [2, 3, 21, 316, 420, 458, 471, 479, 482], "eas": [2, 3, 475, 476], "flat": [2, 121, 400], "manner": [2, 137, 188, 241, 266, 457, 462, 463, 464, 470, 474, 477, 479], "ted2flat": [2, 44, 454], "flat2t": [2, 454], "unflatten": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 210, 347], "deseri": [2, 3, 44], "posit": [2, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 228, 229, 231, 252, 253, 254, 257, 261, 263, 265, 273, 329, 331, 335, 365, 385, 395, 397, 458, 464, 475, 476, 477, 479], "both": [2, 3, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 127, 130, 133, 134, 136, 137, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 169, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 206, 213, 231, 244, 260, 261, 263, 273, 280, 281, 296, 299, 300, 301, 306, 307, 329, 331, 335, 340, 341, 342, 345, 350, 362, 364, 365, 366, 370, 371, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 400, 433, 457, 462, 464, 466, 467, 469, 475, 476, 477, 478, 479, 482], "mark": [2, 3, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258, 296, 300, 400, 402, 403, 470, 479], "identifi": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 64, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188], "abov": [2, 3, 7, 35, 42, 47, 55, 65, 66, 72, 77, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 262, 273, 297, 325, 326, 329, 331, 335, 361, 395, 397, 458, 459, 462, 464, 466, 467, 468, 475, 476, 477, 482], "output": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 84, 96, 108, 115, 116, 127, 130, 131, 132, 133, 136, 137, 138, 139, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 205, 210, 211, 213, 216, 217, 219, 220, 221, 222, 224, 226, 228, 231, 233, 235, 237, 241, 243, 244, 249, 250, 253, 254, 257, 258, 260, 262, 263, 264, 266, 268, 269, 271, 273, 275, 280, 281, 282, 283, 284, 287, 289, 290, 291, 294, 295, 296, 298, 299, 300, 301, 306, 307, 314, 316, 317, 319, 328, 329, 331, 335, 339, 340, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 404, 418, 420, 429, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 471, 474, 475, 476, 477, 478, 481, 482], "typic": [2, 3, 4, 8, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 35, 42, 47, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 225, 255, 273, 314, 316, 329, 331, 335, 348, 363, 365, 380, 382, 385, 395, 397, 456, 457, 458, 459, 464, 466, 467, 469, 470, 475, 476, 477], "adjust": [2, 11, 256, 462, 475, 476, 477], "grumodul": [2, 212, 256, 338, 359, 465], "lstmmodul": [2, 296, 338, 465, 466], "skip": [2, 3, 17, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 219, 229, 231, 235, 261, 263, 273, 329, 331, 335, 348, 352, 365, 380, 385, 395, 397, 400, 401, 402, 403, 419, 420, 431, 433, 462, 463, 477], "accumul": [2, 8, 273], "upcom": [2, 380, 395, 409, 410, 411, 412, 414, 415, 416, 417, 462], "popular": [2, 3, 456, 457, 465, 469, 476], "rainbow": 2, "multistep": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 273, 454, 463], "shift": [2, 44, 46, 55, 56, 75, 98, 99, 106, 358, 400, 401, 402, 403, 464], "approxim": [2, 476, 482], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 15, 21, 213, 287, 315, 362, 368, 381, 382, 429, 452, 456, 464, 465, 476, 479], "2x": 2, "small": [2, 116, 266, 271, 276, 462, 464, 466, 475, 476, 482], "clearer": [2, 466, 468], "lazi": [2, 3, 73, 74, 91, 92, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 241, 266, 280, 306, 309, 353, 354, 462, 463, 468, 470, 474, 479, 482], "certainli": 2, "welcom": [2, 467], "wrapper": [2, 3, 21, 61, 63, 70, 71, 78, 79, 84, 95, 96, 97, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 184, 186, 187, 188, 191, 269, 274, 278, 279, 328, 330, 331, 335, 343, 347, 352, 357, 396, 400, 425, 426, 427, 452, 454, 464, 465, 467, 475, 476, 478, 481, 482], "around": [2, 5, 7, 21, 78, 79, 127, 130, 133, 137, 145, 151, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 278, 316, 330, 347, 352, 400, 456, 462, 463, 476, 482], "selecttransform": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "excludetransform": [2, 250, 479], "promptli": 2, "virtual": [2, 3, 136], "instal": [2, 3, 5, 10, 22, 23, 25, 66, 77, 127, 130, 133, 137, 142, 145, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 422, 438, 455, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 482], "respons": [2, 3, 8, 15, 16, 18, 20, 22, 25, 27, 29, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 185, 186, 187, 188, 193, 331, 335, 438, 456, 469, 470, 482], "d4rl": 2, "repositori": [2, 7, 171, 172, 475, 476], "wheel": [2, 464], "publish": 2, "openml": [2, 154], "scikit": [2, 154], "panda": 2, "raw": [2, 3, 4, 71, 195, 231, 260, 264, 297, 325, 326, 463, 466, 470, 477], "go": [2, 3, 7, 102, 148, 157, 178, 219, 242, 246, 343, 406, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "modifi": [2, 3, 7, 8, 35, 42, 47, 55, 65, 66, 72, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 213, 217, 219, 228, 231, 233, 241, 256, 262, 263, 266, 268, 271, 273, 308, 317, 329, 331, 332, 335, 343, 351, 352, 395, 397, 441, 456, 458, 462, 463, 464, 466, 467, 475, 476, 477], "fly": [2, 213, 270, 379, 458, 464, 477, 479, 482], "least": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 216, 471, 482], "pre": [2, 7, 28, 35, 42, 47, 55, 65, 66, 72, 77, 83, 103, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 241, 260, 266, 268, 273, 329, 331, 335, 395, 397, 482], "conisder": 2, "per": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 121, 141, 143, 144, 157, 159, 160, 216, 235, 249, 280, 281, 291, 293, 306, 307, 347, 420, 422, 425, 427, 438, 450, 451, 462, 463, 464, 465, 466, 468, 469, 472, 475, 476, 479, 481], "pipelin": [2, 3, 7, 137, 188, 456, 457, 458, 464], "replac": [2, 3, 6, 7, 35, 42, 47, 55, 65, 66, 72, 77, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 209, 223, 225, 232, 270, 271, 273, 293, 329, 331, 335, 363, 365, 371, 378, 383, 385, 387, 388, 395, 397, 400, 401, 402, 403, 457, 475, 479, 481], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 235, 246, 256, 263, 273, 275, 317, 329, 331, 335, 347, 395, 396, 397, 436, 457, 459, 463, 464, 465, 468, 471, 477, 479, 482], "produc": [2, 3, 39, 40, 48, 50, 74, 115, 178, 206, 209, 210, 280, 281, 301, 307, 313, 340, 342, 343, 352, 420, 464, 465, 466, 467, 468, 470, 479, 482], "download": [2, 7, 10, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 141, 241, 268, 420, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "forc": [2, 3, 6, 7, 15, 16, 21, 22, 23, 25, 27, 158, 463, 475, 476, 477], "robosetexperiencereplai": [2, 115, 116], "fk1": 2, "v4": [2, 137, 157, 188, 206, 245, 409, 410, 411, 412, 414, 415, 416, 417, 462, 464, 478, 481], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 272], "obs_norm": 2, "norm": [2, 4, 8, 128, 129, 276, 438, 462, 463, 464, 475, 476, 477], "num_work": [2, 24, 26, 61, 63, 83, 94, 152, 157, 166, 462, 463], "os": [2, 63, 83, 94, 463], "cpu_count": [2, 63, 83, 94], "num_chunk": 2, "1000": [2, 4, 18, 29, 50, 69, 77, 101, 102, 107, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 270, 275, 293, 316, 317, 348, 352, 377, 462, 463, 464, 465, 466, 468, 470, 472, 477, 478, 479], "mp_start_method": [2, 157, 166, 261, 463, 481], "fork": [2, 5, 462, 463, 464, 465, 475, 476, 478, 481], "recreat": [2, 477], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 32, 69, 78, 79, 108, 110, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 210, 233, 456, 466, 470, 478], "grain": [2, 3, 69, 78, 79, 108, 110, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 210], "nomenclatur": 2, "compact": [2, 50, 75, 98, 99, 106], "propos": [2, 213, 225, 278, 302, 377, 386, 457, 465, 479], "replaybufferensembl": [2, 113, 119, 126], "primit": [2, 3, 4, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 456], "individu": [2, 4, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 83, 108, 110, 121, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 271, 273, 329, 331, 335, 364, 379, 382, 395, 397, 456, 462, 476], "dummi": [2, 3, 168, 191, 418, 462, 466, 470, 482], "semant": [2, 73, 74, 136, 138, 478], "ident": [2, 3, 15, 16, 18, 55, 61, 63, 69, 70, 77, 78, 79, 84, 95, 96, 97, 101, 110, 115, 127, 130, 133, 136, 137, 138, 145, 152, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 185, 186, 187, 188, 225, 253, 262, 271, 276, 306, 307, 363, 365, 378, 383, 385, 387, 388, 396, 400, 401, 402, 403, 450, 451, 463, 467, 475, 476], "another_kei": [2, 110], "renam": [2, 3, 61, 63, 70, 84, 95, 96, 97, 110, 184, 204, 244, 246, 396, 462], "resiz": [2, 3, 110, 213, 463, 465, 466, 467, 479, 482], "imag": [2, 3, 4, 7, 11, 95, 213, 215, 218, 220, 241, 259, 268, 301, 418, 420, 462, 463, 466, 467, 471, 476, 478, 482], "comops": 2, "totensorimag": [2, 3, 110, 213, 245, 463, 465, 466, 479, 481, 482], "renametransform": [2, 3, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213], "rb0": [2, 110], "in_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 50, 65, 67, 77, 110, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 199, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 277, 279, 289, 296, 300, 303, 318, 327, 328, 329, 331, 335, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 359, 362, 363, 364, 365, 366, 367, 369, 370, 371, 376, 378, 379, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 419, 420, 448, 457, 462, 463, 464, 465, 466, 468, 469, 472, 474, 475, 476, 477, 478, 479, 481, 482], "pixel": [2, 3, 7, 39, 110, 130, 131, 132, 136, 138, 139, 163, 213, 215, 220, 225, 228, 230, 237, 239, 241, 245, 259, 266, 268, 283, 311, 312, 418, 420, 462, 463, 465, 466, 471, 475, 478, 479, 481, 482], "rb1": [2, 110], "out_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 50, 65, 67, 77, 110, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 199, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 277, 279, 289, 290, 296, 300, 303, 318, 319, 327, 328, 329, 331, 335, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 362, 363, 364, 365, 370, 371, 376, 378, 379, 382, 383, 384, 385, 387, 395, 397, 398, 400, 401, 402, 403, 418, 420, 433, 448, 457, 462, 463, 464, 465, 466, 468, 472, 474, 475, 476, 477, 478, 479, 481, 482], "pixels33": [2, 110], "data0": [2, 102, 110], "244": [2, 110, 241, 268], "data1": [2, 102, 110, 481], "_": [2, 8, 62, 67, 68, 69, 78, 79, 102, 110, 130, 134, 141, 171, 172, 191, 214, 221, 223, 224, 233, 237, 244, 259, 270, 273, 316, 339, 351, 352, 356, 361, 362, 363, 365, 366, 370, 371, 378, 382, 383, 385, 387, 388, 400, 401, 402, 403, 422, 462, 463, 464, 465, 466, 472, 475, 476, 477, 479, 481], "parent": [2, 3, 27, 35, 42, 46, 47, 55, 57, 65, 66, 72, 77, 82, 84, 110, 119, 126, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 210, 213, 214, 217, 218, 219, 222, 225, 228, 229, 235, 237, 241, 249, 254, 255, 256, 257, 261, 262, 265, 266, 273, 296, 300, 329, 331, 335, 340, 359, 380, 382, 395, 397, 404, 418, 420, 462, 470, 477, 481, 482], "basic": [2, 3, 19, 151, 457, 464, 469, 470, 472, 475, 481, 482], "properti": [2, 3, 14, 17, 19, 20, 24, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 110, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 261, 262, 263, 270, 271, 273, 288, 297, 305, 309, 313, 324, 325, 326, 329, 331, 335, 347, 362, 365, 380, 382, 384, 385, 395, 396, 397, 468, 470, 477, 479], "input": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 118, 124, 127, 130, 133, 137, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 306, 307, 308, 309, 310, 317, 319, 320, 321, 322, 323, 325, 328, 329, 331, 335, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 432, 436, 441, 448, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 475, 476, 477, 481, 482], "send": [2, 3, 8, 20, 30, 161, 167, 427, 454, 481], "receiv": [2, 3, 14, 17, 19, 20, 24, 26, 30, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 262, 263, 271, 273, 301, 329, 331, 335, 395, 397, 406, 454, 458, 462, 464, 469, 474, 477], "spawn": [2, 3, 4, 22, 28, 141, 152, 157, 166, 261, 463, 475, 476], "check_env_spec": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 231, 243, 264, 418, 454, 464, 475, 476, 477], "saniti": [2, 3, 7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 464], "make_composite_from_td": [2, 82, 454, 477], "fall": [2, 4], "categori": [2, 39, 457, 459], "bound": [2, 3, 4, 27, 35, 37, 39, 42, 47, 55, 65, 66, 72, 77, 85, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 216, 236, 270, 273, 275, 293, 317, 320, 321, 329, 331, 335, 339, 344, 345, 348, 349, 350, 351, 352, 355, 362, 363, 365, 366, 378, 382, 383, 385, 387, 388, 395, 397, 454, 457, 462, 463, 464, 466, 475, 477, 481, 482], "unbound": [2, 3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 86, 87, 88, 89, 95, 96, 97, 110, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 191, 198, 207, 210, 221, 224, 243, 256, 277, 303, 339, 351, 354, 356, 384, 396, 454, 477, 479], "boundeddiscret": [2, 36, 39], "boundedcontinu": [2, 28, 36, 39, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 231, 234, 264], "unboundeddiscret": [2, 85, 158, 231, 454], "unboundedcontinu": [2, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 243, 256, 354, 359, 454], "implicitli": 2, "onehot": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 60, 73, 74, 82, 85, 86, 87, 88, 89, 128, 129, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170, 290, 319, 344, 349, 367, 369, 370, 371, 398, 454, 457], "multionehot": [2, 51, 52, 54, 367, 370, 371, 398, 454], "multicategor": [2, 52, 53, 54, 454], "binari": [2, 3, 7, 34, 35, 59, 169, 207, 211, 290, 319, 344, 345, 349, 350, 367, 370, 371, 398, 454], "concept": [2, 3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 316, 463, 479], "arbitrari": [2, 3, 33, 59, 69, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 458, 462, 463, 477, 479], "combin": [2, 4, 45, 66, 387, 463, 466, 471, 479, 481], "nevertheless": [2, 3, 464, 467, 479], "otherwis": [2, 3, 12, 15, 16, 18, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 108, 110, 115, 116, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 214, 218, 219, 223, 231, 237, 255, 256, 257, 261, 262, 263, 270, 273, 274, 276, 278, 294, 297, 298, 306, 307, 325, 326, 329, 331, 335, 338, 344, 349, 352, 355, 363, 365, 374, 380, 381, 385, 395, 396, 397, 400, 402, 403, 433, 435, 458, 459, 462, 463, 464, 465, 477, 482], "similarli": [2, 3, 27, 35, 42, 47, 55, 65, 66, 72, 77, 114, 119, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 235, 273, 306, 329, 331, 335, 353, 354, 370, 378, 395, 397, 400, 456, 482], "possess": [2, 82], "unsqueez": [2, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 108, 198, 207, 210, 213, 214, 259, 265, 462, 465, 466, 475, 476, 477], "move": [2, 4, 35, 42, 47, 55, 65, 66, 72, 77, 82, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 206, 217, 222, 241, 256, 262, 263, 266, 268, 270, 271, 273, 301, 329, 331, 335, 351, 395, 397, 436, 462, 463, 465, 467, 482], "unbind": [2, 61, 62, 63, 69, 70, 78, 79, 84, 95, 96, 97, 184, 235, 347, 396], "said": [2, 464], "neg": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 62, 65, 78, 82, 107, 108, 190, 213, 228, 242, 253, 265, 364, 373, 379, 382, 400, 402, 403, 458, 464, 475, 476, 477], "seen": [2, 3, 22, 23, 25, 27, 39, 40, 48, 74, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 222, 458, 462, 463, 465, 469, 475, 476, 479], "predict": [2, 3, 55, 71, 289, 291, 302, 303, 343, 357, 362, 364, 369, 372, 374, 375, 379, 382, 384, 395, 399, 462, 463, 469], "deprec": [2, 31, 34, 35, 37, 40, 42, 43, 47, 48, 49, 52, 54, 55, 58, 60, 65, 66, 72, 77, 87, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 270, 273, 329, 331, 335, 362, 364, 365, 367, 370, 371, 372, 378, 379, 382, 383, 384, 385, 395, 397, 398, 400, 401, 402, 403, 408, 482], "mont": [2, 179, 180, 183, 186, 191, 362, 364, 379, 382, 395, 397, 462], "carlo": [2, 179, 180, 183, 186, 191, 362, 364, 379, 382, 395, 397, 462], "mct": [2, 50], "act": [2, 3, 4, 115, 116, 159, 160, 263, 289, 307, 363, 365, 366, 378, 383, 385, 387, 388, 465, 466, 475, 476, 479, 481], "tradit": [2, 469, 475], "integ": [2, 15, 16, 18, 21, 29, 31, 47, 51, 53, 55, 59, 65, 66, 71, 72, 84, 108, 115, 116, 117, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 206, 209, 225, 229, 237, 254, 271, 280, 281, 301, 306, 307, 365, 370, 378, 385, 458, 466, 479], "advanc": [2, 3, 27, 62, 69, 78, 79, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 467, 470, 479], "rebuild": [2, 50], "initi": [2, 4, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 33, 34, 35, 38, 42, 43, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 95, 96, 97, 110, 121, 127, 130, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 212, 231, 237, 241, 256, 263, 266, 271, 272, 273, 274, 275, 276, 277, 293, 294, 295, 298, 299, 303, 306, 307, 308, 309, 310, 317, 329, 331, 333, 334, 335, 347, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 452, 457, 458, 462, 463, 465, 467, 468, 470, 475, 477, 482], "pair": [2, 3, 55, 61, 63, 65, 70, 77, 84, 95, 96, 97, 127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 246, 256, 261, 296, 340, 348, 352, 380, 395, 396, 400, 401, 402, 403, 404, 457, 458, 462, 463, 464, 468, 469, 474, 477, 482], "term": [2, 71, 102, 192, 233, 298, 299, 309, 310, 361, 362, 371, 440, 463, 464, 467, 468, 476], "pseudocod": [2, 3], "next_stat": [2, 458], "associ": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 39, 40, 42, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 273, 320, 329, 331, 334, 335, 395, 396, 397, 452, 462, 479], "sens": [2, 4, 61, 63, 70, 84, 95, 96, 97, 184, 191, 213, 396, 470, 477], "hard": [2, 3, 7, 121, 131, 132, 157, 377, 463, 482], "know": [2, 3, 4, 9, 62, 69, 78, 79, 136, 138, 275, 380, 383, 395, 433, 462, 463, 464, 465, 466, 467, 468, 469, 470, 475, 476, 479], "next_td": 2, "Of": [2, 3, 7, 455, 477, 482], "cours": [2, 3, 4, 455, 477, 482], "handi": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 471], "undertaken": [2, 84, 458, 477], "link": [2, 6, 7, 133, 463, 472], "hash": [2, 47, 50, 65, 66, 72, 77, 84, 130, 145, 187], "past": [2, 4, 213, 347, 463, 479], "node_map": [2, 50], "_index": [2, 65, 77], "Then": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 183, 269, 464, 474], "track": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 79, 107, 108, 114, 130, 186, 249, 258, 270, 271, 273, 317, 347, 397, 425, 431, 463, 465, 467, 470, 476, 477, 479], "next_data": [2, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "data_map": [2, 50], "form": [2, 15, 16, 21, 35, 42, 47, 55, 62, 65, 66, 69, 72, 77, 78, 79, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 294, 296, 298, 300, 329, 331, 335, 352, 361, 362, 364, 379, 382, 395, 397, 438, 457, 468], "figur": [2, 3, 84, 145, 187, 462, 464, 465, 476, 477, 482], "flowchart": 2, "o": [2, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 299, 329, 331, 335, 395, 397], "get_tre": [2, 50, 84], "vertex": [2, 84], "longer": [2, 84, 274, 463, 472, 475, 476, 479], "vertic": [2, 84], "branch": [2, 50, 84], "repeat": [2, 84, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 189, 191, 261, 277, 288, 464, 475, 476, 477], "depth": [2, 69, 82, 127, 130, 133, 137, 145, 151, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 277, 280, 281, 283, 284, 285, 286, 291, 292, 301, 303, 306, 307, 308, 311, 312, 344, 457, 463, 467, 469, 470, 474, 475, 476, 479], "until": [2, 3, 7, 27, 29, 144, 181, 182, 185, 191, 192, 193, 194, 195, 257, 262, 273, 397, 428, 464, 465, 472, 475, 476], "anymor": [2, 61, 63, 70, 84, 95, 96, 97, 184, 263, 351, 396], "utmost": 2, "post": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 456], "grpo": [2, 186, 191, 395, 454], "commonli": [2, 108, 115, 116, 482], "emploi": [2, 310], "scarc": 2, "address": [2, 333, 479], "subdomain": 2, "extern": [2, 3, 221, 224, 271, 333, 475, 482], "token": [2, 29, 63, 64, 71, 80, 83, 94, 96, 97, 145, 178, 179, 180, 182, 183, 186, 187, 189, 190, 193, 194, 331, 335, 456], "dm": [3, 462, 482], "experi": [3, 62, 69, 78, 79, 107, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 422, 423, 424, 425, 426, 427, 455, 463, 464, 466, 470, 471, 475, 476, 479], "box": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 136, 138, 308, 380, 395], "lib": [3, 5, 6, 7, 9, 10, 15, 16, 18, 21, 27, 28, 29, 67, 127, 130, 133, 134, 137, 142, 145, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 216, 225, 232, 233, 237, 239, 244, 246, 249, 256, 262, 269, 270, 273, 397, 418, 448, 462, 463, 464, 465, 474, 476, 478, 479, 481, 482], "hope": [3, 11], "nn": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 41, 42, 47, 55, 65, 66, 67, 71, 72, 77, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 218, 223, 225, 233, 241, 256, 262, 263, 266, 268, 273, 277, 279, 280, 281, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 305, 306, 307, 308, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 356, 359, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 448, 457, 458, 462, 463, 464, 465, 466, 468, 469, 472, 474, 475, 476, 477, 478, 481], "organis": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 463], "attribut": [3, 4, 7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 136, 137, 138, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 225, 235, 241, 263, 266, 270, 271, 273, 329, 331, 335, 352, 362, 363, 365, 366, 367, 369, 371, 372, 373, 376, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 462, 465, 477], "live": [3, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 225, 273, 329, 331, 335, 395, 397], "actual": [3, 4, 7, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 269, 396, 441, 458, 462, 464, 466, 475, 476, 477], "care": [3, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 420, 462, 464, 466, 475, 476, 477, 479], "parametr": [3, 310, 352, 363, 365, 370, 378, 385, 462, 464], "observation_spec": [3, 50, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 210, 213, 214, 215, 216, 217, 220, 221, 222, 224, 225, 228, 230, 231, 232, 233, 237, 239, 241, 243, 245, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 273, 277, 296, 300, 303, 397, 442, 448, 462, 464, 469, 474, 475, 476, 477, 482], "state_spec": [3, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 217, 222, 237, 262, 264, 265, 273, 277, 303, 397, 477, 482], "reward_spec": [3, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 210, 211, 216, 217, 221, 222, 224, 234, 243, 247, 248, 249, 251, 253, 260, 262, 264, 265, 271, 273, 277, 303, 397, 464, 475, 476, 477, 482], "done_spec": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 221, 222, 224, 225, 243, 253, 260, 262, 264, 273, 397, 475, 476, 477, 482], "flag": [3, 8, 42, 62, 67, 68, 69, 78, 79, 110, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 232, 317, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 457, 475, 476, 477, 478], "input_spec": [3, 84, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 210, 217, 221, 222, 223, 235, 239, 243, 244, 249, 250, 253, 254, 255, 256, 260, 262, 263, 264, 267, 273, 397, 464, 477], "full_action_spec": [3, 84, 127, 130, 133, 137, 145, 155, 156, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 183, 186, 187, 188, 206, 222, 277, 303, 475, 476], "full_state_spec": [3, 50, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 206, 222, 277, 303], "output_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 217, 221, 222, 226, 233, 235, 243, 244, 250, 254, 260, 262, 263, 264, 271, 273, 397, 477], "full_observation_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 277, 303], "full_reward_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 210, 222, 243, 475, 476], "full_done_spec": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 210, 222, 243, 475, 476], "carri": [3, 27, 53, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 256, 271, 380, 395, 456, 463, 465, 475, 476, 477, 479], "nontensor": [3, 58, 96, 183, 188, 231, 264, 454], "spec_lock": [3, 133], "modif": [3, 5, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 228, 231, 273, 329, 331, 335, 380, 395, 397, 458, 464, 477], "children": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "unlock": [3, 39, 40, 48, 61, 63, 70, 74, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 396], "set_spec_lock_": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reason": [3, 4, 8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 241, 266, 273, 300, 329, 331, 335, 395, 397, 458, 462, 463, 464, 469, 470, 475, 477, 479], "easi": [3, 5, 11, 127, 130, 131, 132, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 293, 317, 335, 457, 458, 462, 463, 464, 476, 478, 479, 481, 482], "cach": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 73, 74, 82, 83, 85, 86, 87, 88, 89, 94, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 209, 221, 224, 241, 262, 263, 268, 278, 430], "principl": 3, "new_spec": 3, "eras": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263], "relock": 3, "previous": [3, 4, 50, 464, 482], "importantli": [3, 348, 352], "action_s": 3, "help": [3, 4, 35, 42, 47, 55, 65, 66, 72, 77, 82, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 225, 273, 329, 331, 335, 362, 364, 379, 382, 384, 395, 397, 455, 458, 462, 463, 464, 465, 475, 476], "With": [3, 143, 144, 148, 255, 459, 463, 474, 475, 476, 479, 482], "necessarili": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 482], "present": [3, 29, 35, 42, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 95, 96, 97, 107, 108, 110, 114, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 205, 226, 246, 250, 256, 261, 263, 273, 281, 282, 283, 284, 285, 286, 292, 296, 298, 300, 310, 315, 317, 329, 331, 335, 347, 351, 352, 353, 354, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 452, 456, 459, 462, 472, 474, 475, 476, 479, 481], "0s": [3, 256, 465], "step_and_maybe_reset": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 456, 467], "done_kei": [3, 31, 42, 44, 46, 50, 56, 75, 98, 99, 106, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 209, 213, 225, 246, 254, 273, 397, 475, 476], "assign": [3, 4, 15, 16, 21, 35, 36, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 85, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 333, 335, 365, 366, 367, 369, 385, 395, 396, 397, 464, 468, 475, 476, 479], "_reset": [3, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 207, 209, 210, 213, 221, 224, 232, 243, 258, 277, 303, 475], "data_": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "append": [3, 8, 11, 50, 62, 67, 68, 69, 78, 79, 96, 110, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 190, 191, 209, 216, 217, 235, 246, 256, 263, 269, 295, 296, 299, 300, 344, 349, 456, 462, 463, 464, 465, 466, 475, 476, 477, 478, 479, 481], "seed": [3, 15, 16, 18, 21, 27, 29, 69, 78, 79, 110, 127, 130, 133, 137, 145, 151, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 173, 178, 179, 180, 183, 186, 187, 188, 189, 207, 210, 221, 224, 231, 243, 263, 418, 438, 475], "determinist": [3, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 202, 217, 241, 256, 262, 263, 266, 268, 273, 282, 291, 311, 321, 329, 331, 335, 339, 348, 351, 352, 355, 363, 380, 395, 397, 433, 457, 462, 463, 464, 465, 466, 468, 469, 472, 475, 477, 481, 482], "preced": [3, 55, 130, 213, 465], "risk": [3, 242], "overlap": [3, 78, 121], "reproduc": [3, 66, 72, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 213, 231, 462, 464, 466, 476], "maximum": [3, 4, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 33, 55, 61, 63, 64, 71, 77, 80, 83, 84, 85, 94, 101, 102, 103, 104, 107, 108, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 223, 247, 254, 255, 257, 276, 324, 325, 326, 355, 363, 365, 370, 371, 378, 380, 381, 385, 395, 420, 435, 457, 462, 463, 464, 465, 468, 475, 476, 479], "max_step": [3, 11, 121, 127, 130, 133, 137, 145, 149, 150, 151, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 254, 261, 273, 418, 467, 468, 469, 471, 472, 475, 476, 481, 482], "tensordictmodul": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 42, 65, 67, 71, 77, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 212, 218, 233, 279, 290, 296, 300, 303, 318, 319, 327, 328, 329, 331, 335, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 357, 359, 363, 365, 366, 370, 371, 373, 374, 375, 376, 378, 380, 383, 385, 387, 388, 395, 398, 399, 400, 401, 402, 403, 433, 448, 454, 462, 464, 465, 469, 472, 474, 475, 476, 477, 478, 482], "trail": [3, 185, 270], "treat": [3, 55, 458, 468, 469], "brief": [3, 464, 467, 469, 479], "deliveri": 3, "metaclass": [3, 133, 138], "flank": [3, 458, 465], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 136, 137, 138, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 231, 261, 263, 270, 273, 277, 290, 291, 303, 304, 305, 306, 307, 308, 311, 312, 320, 321, 329, 331, 335, 342, 345, 362, 365, 372, 373, 374, 375, 382, 385, 395, 397, 400, 405, 413, 461, 462, 464, 466, 468, 469, 470, 471, 475, 476, 479], "union": [3, 25, 35, 39, 40, 42, 47, 48, 49, 53, 54, 55, 57, 59, 60, 65, 66, 72, 73, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 306, 327, 329, 331, 335, 369, 371, 383, 395, 397, 449, 452], "assess": [3, 15, 16, 18, 21, 22, 23, 25, 27, 39, 40, 48, 74, 149, 150, 174, 183, 462], "split_trajectori": [3, 15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 116, 454], "adjac": [3, 31, 228, 347], "junction": 3, "inittrack": [3, 296, 300, 347, 462, 465], "tutori": [3, 158, 453, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 482], "scratch": [3, 8, 463, 477], "mere": [3, 21, 466], "batch_lock": [3, 127, 130, 133, 135, 137, 145, 157, 161, 166, 167, 178, 179, 180, 183, 186, 187, 188, 210, 256, 263, 477], "contrast": [3, 294, 316, 377, 479], "notabl": 3, "braxenv": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 244, 454, 467], "jumanjienv": [3, 454], "straightforward": [3, 19, 462, 463, 467, 468, 469, 470, 479], "merg": [3, 62, 69, 78, 79, 477], "correctli": [3, 7, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "silent": [3, 35, 42, 47, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358], "_step": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397], "temporari": [3, 462], "hold": [3, 262, 393, 394, 397, 477, 479], "arm": 3, "unbatch": [3, 294, 298], "captur": [3, 275, 293, 317, 466], "base_env": [3, 127, 129, 130, 133, 137, 138, 144, 145, 156, 157, 158, 161, 166, 167, 168, 170, 178, 179, 180, 183, 186, 187, 188, 206, 207, 210, 216, 218, 219, 221, 223, 224, 233, 239, 243, 245, 251, 254, 256, 257, 261, 263, 273, 420, 428, 456, 462, 463, 464, 466, 475, 478, 481, 482], "break_when_all_don": [3, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "conditionalskip": 3, "programmat": 3, "pretti": [3, 462, 467, 471, 479], "likewis": 3, "break_when_any_don": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 209, 261, 273, 279, 347, 476], "te": 3, "paragraph": 3, "deep": [3, 9, 213, 234, 283, 284, 285, 286, 289, 317, 362, 365, 377, 385, 386, 462, 475], "dive": 3, "gym3": 3, "envpool": [3, 152, 153], "simultan": [3, 25, 144, 152, 153, 157, 166, 477], "advantag": [3, 8, 186, 191, 292, 362, 364, 379, 382, 384, 395, 397, 400, 401, 402, 403, 404, 405, 407, 409, 411, 413, 414, 416, 458, 459, 462, 463, 464, 465, 476, 477, 482], "scale": [3, 4, 32, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 213, 233, 237, 248, 255, 259, 270, 271, 276, 291, 297, 320, 321, 325, 326, 340, 341, 342, 348, 352, 354, 362, 363, 365, 378, 382, 383, 384, 385, 436, 442, 452, 457, 462, 463, 464, 465, 468, 476, 481], "varieti": [3, 11], "inherit": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 302, 306, 307, 380, 459, 464, 475, 476], "from_pixel": [3, 11, 128, 129, 131, 132, 136, 138, 139, 143, 144, 163, 213, 245, 418, 420, 462, 463, 465, 467, 471, 472, 478, 479, 481, 482], "81": [3, 115], "d": [3, 42, 62, 65, 69, 77, 78, 79, 94, 107, 108, 276, 294, 298, 329, 331, 335, 348, 352, 395, 481], "privat": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 269, 477, 482], "absenc": 3, "total": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 110, 116, 121, 180, 184, 218, 333, 364, 379, 382, 395, 396, 429, 431, 433, 438, 441, 442, 461, 462, 463, 464, 465, 469, 475, 476, 478, 479, 480, 481], "accord": [3, 15, 16, 18, 21, 22, 23, 25, 27, 50, 61, 63, 70, 71, 84, 95, 96, 97, 110, 113, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 183, 184, 186, 187, 188, 237, 248, 297, 309, 320, 325, 326, 396, 398, 457, 458, 468, 469, 475, 477, 479], "inner": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 223, 263, 459, 463, 464, 476, 482], "kept": [3, 24, 26, 31, 114, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 204, 223, 250, 297, 325, 326, 469, 475], "wherev": 3, "lost": [3, 8, 269], "intern": [3, 50, 81, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 271, 460], "face": [3, 5, 8, 9, 331, 335, 467, 482], "NOT": [3, 98, 99, 106, 116, 242], "right": [3, 6, 7, 31, 71, 108, 115, 188, 218, 463, 464, 466, 476, 477, 482], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 42, 65, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 329, 331, 335, 395, 469], "annihil": 3, "supersed": [3, 31], "pettingzoowrapp": [3, 454], "group": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 183, 186, 187, 188, 191, 234, 253, 333, 334, 392, 457, 463, 468, 470, 476, 479], "__not__": [3, 348, 363, 365, 378, 383, 385, 387, 388], "constrain": [3, 192, 233, 296, 300, 382, 482], "li": 3, "fact": [3, 7, 8, 462, 464, 467, 475, 476, 477, 478, 479, 482], "meaning": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "perfectli": [3, 459, 462, 466, 477], "meaningless": 3, "val": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 179, 271, 428, 469, 481], "agent0": [3, 466], "agent1": 3, "overrid": [3, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 273, 288, 329, 331, 335, 395, 397, 420, 452, 457], "bool": [3, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 114, 115, 116, 117, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 204, 205, 206, 207, 209, 210, 213, 214, 218, 219, 221, 223, 224, 225, 226, 228, 231, 233, 235, 236, 237, 239, 241, 243, 244, 246, 248, 249, 250, 253, 254, 256, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 324, 325, 326, 329, 331, 332, 335, 338, 339, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 398, 400, 401, 402, 403, 406, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 427, 428, 431, 432, 433, 435, 436, 438, 452, 463, 464, 466, 477, 481, 482], "500": [3, 462, 463], "note": [3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 205, 221, 224, 261, 270, 271, 273, 278, 294, 296, 298, 300, 317, 329, 331, 335, 348, 352, 372, 395, 397, 454, 458, 463, 466, 468, 474, 475, 476, 482], "launch": [3, 15, 16, 21, 22, 23, 25, 28, 157, 166, 332], "bottleneck": [3, 8, 108, 115, 116], "great": [3, 7, 8, 466, 475, 481], "speedup": [3, 8, 475, 482], "precis": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 204, 221, 224, 295, 299, 462, 464], "misspecifi": 3, "caus": [3, 7, 8, 15, 16, 18, 101, 103, 123, 127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 242, 482], "breakag": 3, "rais": [3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 227, 236, 246, 255, 256, 257, 261, 263, 270, 273, 275, 293, 317, 329, 331, 335, 365, 380, 385, 395, 396, 397, 428, 462, 464, 475, 476, 479], "mismatch": [3, 65, 463], "subprocess": [3, 15, 16, 21, 134, 157, 166], "multithreadedenv": [3, 454], "underneath": 3, "higher": [3, 4, 108, 216, 355, 462, 463, 464, 475, 479, 482], "cover": [3, 136, 138, 455, 464, 467, 470, 471, 477, 481], "type": [3, 12, 15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 110, 127, 130, 133, 137, 145, 148, 151, 154, 157, 158, 159, 160, 161, 166, 167, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 202, 204, 210, 213, 217, 221, 222, 225, 226, 231, 233, 235, 241, 243, 244, 250, 254, 256, 260, 261, 262, 263, 264, 266, 268, 270, 271, 273, 275, 280, 281, 301, 306, 307, 310, 318, 327, 329, 331, 333, 335, 336, 344, 348, 351, 352, 359, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 390, 392, 395, 396, 397, 398, 406, 418, 450, 454, 457, 462, 463, 464, 466, 470, 475, 476, 477, 479, 482], "atari": [3, 4, 213, 281, 420, 466, 471, 482], "classic": [3, 142, 151, 160, 463], "benchmark_batched_env": 3, "significantli": [3, 13, 22, 23, 25, 115, 116, 213, 458, 462, 463, 469, 476], "asyncenvpool": [3, 29, 161, 167], "pool": [3, 127, 161, 167, 257], "concurr": [3, 127, 475, 476], "contrari": [3, 458], "permit": [3, 216, 228, 253, 265, 362, 364, 379, 382, 384], "job": [3, 7, 22, 23, 25, 28, 69, 78, 79, 110, 479, 481], "famili": 3, "interest": [3, 348, 352, 457, 463, 464, 467, 476, 477, 482], "prefer": [3, 15, 16, 21, 25, 31, 32, 62, 69, 78, 79, 115, 116, 127, 161, 167, 189, 242, 250, 382, 387, 435, 457, 464, 475, 476, 479, 481], "pleas": [3, 35, 42, 47, 55, 65, 66, 72, 77, 81, 127, 130, 133, 136, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 213, 231, 257, 261, 263, 273, 306, 307, 308, 329, 331, 335, 365, 385, 395, 397, 455], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 157, 161], "threadingasyncenvpool": 3, "executor": [3, 22, 23, 25, 167], "functool": [3, 15, 16, 18, 21, 29, 127], "s0": [3, 127], "clamp": [3, 127, 352, 355, 374, 438, 458, 475, 477], "env_index": [3, 127], "async_step_send": [3, 127, 161, 167], "s0_result": [3, 127], "async_step_recv": [3, 127, 161, 167], "close": [3, 13, 15, 16, 18, 21, 22, 23, 25, 29, 127, 137, 152, 181, 182, 185, 188, 191, 192, 193, 194, 195, 217, 233, 262, 271, 273, 362, 364, 379, 382, 395, 397, 418, 462, 463, 467, 474, 475, 477, 481], "seamlessli": [3, 477], "paradigm": [3, 21, 476], "decpodp": 3, "game": [3, 4, 5, 130, 149, 150, 155, 156, 218, 281, 420, 466, 471], "thank": [3, 462, 466, 467, 481], "carrier": [3, 464, 465, 467, 479], "particular": [3, 35, 42, 47, 55, 65, 66, 72, 77, 83, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 263, 273, 329, 331, 335, 395, 397, 458, 459, 463, 465, 467, 474, 476, 479], "thu": [3, 379, 476], "vma": [3, 171, 172, 418, 475, 476], "robot": [3, 5, 7, 241, 266, 268, 466, 476], "vmasenv": [3, 418, 454, 475, 476], "balanc": [3, 131, 132, 462, 463], "num_env": [3, 15, 16, 21, 27, 127, 136, 140, 153, 171, 172, 179, 180, 183, 189, 418, 475, 476], "n_agent": [3, 171, 172, 306, 307, 308, 318, 327, 398, 418, 458, 475, 476], "ground_rew": 3, "pos_rew": 3, "style": [3, 62, 69, 78, 79], "vari": [3, 136, 138, 139, 159, 160, 163, 171, 242, 458, 466, 476], "creation": [3, 157, 166, 482], "info_spec": [3, 157], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 33, 34, 36, 37, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 205, 206, 207, 225, 243, 290, 313, 316, 319, 344, 345, 348, 349, 350, 367, 370, 371, 398, 454, 465], "simpl": [3, 9, 19, 20, 35, 42, 47, 55, 59, 65, 66, 72, 77, 82, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 283, 329, 331, 335, 347, 352, 367, 369, 380, 384, 395, 397, 400, 458, 462, 463, 464, 467, 468, 469, 475, 476, 479, 482], "prefix": [3, 31, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 258, 261, 263, 273, 329, 331, 335, 348, 365, 380, 385, 395, 396, 397, 419, 465, 469, 482], "exactli": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 139, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 294, 298, 313, 329, 331, 335, 365, 385, 395, 397, 462, 465, 470, 475, 476], "action_kei": [3, 15, 16, 18, 21, 22, 23, 25, 27, 50, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 192, 204, 206, 207, 223, 233, 235, 275, 277, 293, 302, 303, 317, 347, 458, 475, 476], "reward_kei": [3, 42, 44, 46, 50, 56, 75, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 273, 277, 303, 432, 436, 475, 476], "set_kei": [3, 225, 362, 364, 365, 367, 370, 371, 372, 378, 379, 380, 382, 383, 384, 385, 395, 398, 404, 462, 475, 476], "awai": [3, 464, 467, 475, 476, 481], "leaf": [3, 15, 16, 18, 20, 21, 22, 23, 25, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 74, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 232, 254, 256, 262, 352], "full": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 278, 296, 300, 331, 345, 352, 429, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "autoresettransform": 3, "invalid": [3, 35, 42, 47, 55, 65, 66, 72, 77, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 304, 305, 329, 331, 335, 395, 397], "nan": [3, 209, 269], "auto_reset": [3, 50, 127, 130, 133, 137, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 209, 273, 477], "auto_reset_replac": [3, 209], "placehold": [3, 138, 139, 183, 225, 263, 269], "set_gym_backend": [3, 15, 16, 18, 21, 29, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 183, 186, 187, 188, 209, 454, 467, 481], "autoresettinggymenv": [3, 209], "self": [3, 15, 16, 18, 21, 22, 23, 25, 27, 32, 35, 39, 40, 42, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 232, 233, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 273, 274, 275, 277, 290, 293, 296, 300, 303, 306, 307, 318, 327, 329, 331, 335, 348, 351, 356, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 459, 462, 477, 481], "super": [3, 151, 181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 277, 290, 303, 356, 363, 365, 366, 371, 378, 383, 385, 387, 388, 397, 462, 477, 481], "td_reset": [3, 178, 209], "exclud": [3, 8, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 209, 213, 226, 318, 364, 379, 382, 475, 476, 479], "r": [3, 4, 50, 55, 130, 180, 183, 193, 206, 207, 209, 216, 218, 219, 237, 251, 258, 261, 270, 271, 276, 279, 295, 352, 361, 399, 418, 463, 477, 482], "3633e": [3, 209], "02": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 271, 463, 472], "4877e": [3, 209], "01": [3, 209, 237, 271, 276, 317, 358, 362, 364, 379, 382, 395], "2849e": [3, 209], "7584e": [3, 209], "6609e": [3, 209], "6166e": [3, 209], "8366e": [3, 209], "2761e": [3, 209], "5685e": [3, 209], "4102e": [3, 209], "8111e": [3, 209], "9959e": [3, 209], "0865e": [3, 209], "5644e": [3, 209], "2119e": [3, 209], "2542e": [3, 209], "03": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 209, 237, 258], "9952e": [3, 209], "4059e": [3, 209], "2094e": [3, 209], "9009e": [3, 209], "5140e": [3, 209], "3554e": [3, 209], "2920e": [3, 209], "7893e": [3, 209], "6429e": [3, 209], "3057e": [3, 209], "2867e": [3, 209], "6963e": [3, 209], "3818e": [3, 209], "2576e": [3, 209], "2679e": [3, 209], "1640e": [3, 209], "00": [3, 128, 129, 209, 461, 480], "6972e": [3, 209], "0212e": [3, 209], "5959e": [3, 209], "4637e": [3, 209], "3121e": [3, 209], "2168e": [3, 209], "5232e": [3, 209], "7704e": [3, 209], "7457e": [3, 209], "4127e": [3, 209], "1064e": [3, 209], "0854e": [3, 209], "5712e": [3, 209], "2189e": [3, 209], "5235e": [3, 209], "8289e": [3, 209], "0009e": [3, 209], "0257e": [3, 209], "8893e": [3, 209], "5872e": [3, 209], "9405e": [3, 209], "7766e": [3, 209], "0403e": [3, 209], "0626e": [3, 209], "2959e": [3, 209], "7263e": [3, 209], "2775e": [3, 209], "9564e": [3, 209], "0411e": [3, 209], "6769e": [3, 209], "6354e": [3, 209], "8698e": [3, 209], "1765e": [3, 209], "6292e": [3, 209], "5375e": [3, 209], "1820e": [3, 209], "7023e": [3, 209], "5836e": [3, 209], "9016e": [3, 209], "4826e": [3, 209], "6191e": [3, 209], "6387e": [3, 209], "8667e": [3, 209], "2056e": [3, 209], "1147e": [3, 209], "5991e": [3, 209], "0278e": [3, 209], "5219e": [3, 209], "3067e": [3, 209], "6617e": [3, 209], "3322e": [3, 209], "2629e": [3, 209], "4599e": [3, 209], "7298e": [3, 209], "5848e": [3, 209], "0148e": [3, 209], "5745e": [3, 209], "6982e": [3, 209], "7877e": [3, 209], "3527e": [3, 209], "7285e": [3, 209], "6668e": [3, 209], "0583e": [3, 209], "6956e": [3, 209], "3962e": [3, 209], "9845e": [3, 209], "5015e": [3, 209], "5903e": [3, 209], "9993e": [3, 209], "9418e": [3, 209], "0196e": [3, 209], "6557e": [3, 209], "2109e": [3, 209], "8997e": [3, 209], "1507e": [3, 209], "7363e": [3, 209], "0310e": [3, 209], "9574e": [3, 209], "8980e": [3, 209], "0090e": [3, 209], "forecast": 3, "awar": [3, 7, 101, 102, 103, 104, 117, 119, 123, 296, 300, 463, 465], "detect": [3, 186, 380, 395, 458], "return_contigu": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 474], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 68, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 121, 127, 130, 133, 135, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 204, 205, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 275, 277, 293, 296, 300, 302, 303, 317, 329, 331, 335, 343, 345, 347, 350, 351, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 438, 462, 475, 477], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 35, 36, 39, 41, 42, 47, 55, 59, 62, 65, 66, 71, 72, 77, 78, 85, 107, 108, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 206, 209, 213, 217, 221, 224, 233, 234, 237, 241, 246, 247, 248, 255, 256, 259, 262, 263, 266, 268, 271, 273, 275, 276, 278, 279, 288, 291, 294, 297, 298, 301, 304, 305, 309, 310, 316, 320, 321, 324, 326, 329, 331, 335, 351, 355, 358, 360, 361, 362, 363, 364, 365, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 395, 397, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 436, 462, 463, 479, 482], "_set_se": [3, 207, 210, 221, 224, 243, 477], "lazystackedtensordict": [3, 29, 50, 74, 102, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 474], "float32": [3, 15, 16, 18, 36, 39, 42, 44, 50, 61, 62, 63, 65, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 95, 96, 97, 101, 102, 103, 107, 108, 115, 123, 127, 128, 129, 130, 133, 136, 137, 138, 143, 144, 145, 151, 154, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 172, 178, 179, 180, 183, 184, 186, 187, 188, 198, 204, 206, 210, 221, 224, 225, 226, 231, 234, 237, 239, 243, 244, 246, 250, 253, 254, 256, 259, 264, 277, 279, 289, 290, 296, 300, 303, 317, 318, 319, 327, 329, 331, 335, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 354, 356, 359, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 396, 398, 457, 477], "exclusive_field": [3, 29, 50, 102, 127, 180, 183, 191], "stack_dim": [3, 29, 50, 102, 127, 180, 183, 191, 197], "dramat": 3, "carefulli": [3, 475, 476, 482], "against": [3, 5, 7, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 339, 344, 345, 348, 349, 350, 351, 352, 363, 365, 378, 383, 385, 387, 388, 395, 397, 464, 475, 476], "plain": [3, 8, 332, 363, 365, 371, 378, 383, 385, 387, 388, 401, 402, 403, 467], "expens": [3, 108, 115, 116, 418, 479], "absent": [3, 39, 40, 48, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 250, 263], "torchvis": [3, 11, 241, 268, 422, 475, 481, 482], "callabl": [3, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 110, 127, 130, 133, 134, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 203, 208, 210, 217, 218, 219, 225, 231, 256, 263, 264, 273, 274, 280, 281, 301, 308, 329, 331, 335, 352, 361, 380, 395, 397, 418, 443, 444, 450, 451, 452, 463, 479], "bring": [3, 464, 467, 482], "kind": [3, 69, 82, 469, 475, 479], "consult": 3, "resize_par": 3, "revers": [3, 298], "order": [3, 11, 18, 29, 35, 42, 47, 55, 59, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 114, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 214, 221, 224, 231, 239, 253, 261, 263, 273, 316, 329, 331, 335, 339, 344, 351, 353, 354, 356, 362, 363, 365, 366, 370, 371, 378, 382, 383, 384, 385, 387, 388, 395, 397, 463, 475, 476], "chain": [3, 61, 62, 63, 69, 70, 78, 79, 84, 95, 96, 97, 145, 184, 186, 187, 217, 223, 280, 281, 354, 396, 482], "in_keys_inv": [3, 195, 199, 216, 221, 222, 224, 231, 237, 238, 239, 243, 244, 246, 251, 260, 262, 264, 265, 462, 474, 477, 482], "append_transform": [3, 50, 62, 67, 68, 69, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 199, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 279, 296, 300, 397, 418, 456, 462, 465, 475, 477, 479, 481, 482], "doubletofloat": [3, 462, 464, 474], "float64": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 131, 132, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 217, 221, 224, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "think": [3, 180, 182, 183, 455, 464, 475, 476, 482], "in_": 3, "out_": 3, "perspect": [3, 290, 345, 372, 464, 466], "outer": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263, 459, 462, 463, 482], "ob": [3, 4, 8, 31, 39, 40, 48, 50, 62, 67, 68, 69, 74, 77, 78, 79, 84, 107, 110, 115, 116, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 204, 207, 209, 218, 221, 222, 224, 237, 251, 253, 259, 283, 284, 285, 286, 306, 307, 308, 349, 356, 363, 365, 366, 371, 378, 383, 385, 387, 388, 400, 401, 402, 403, 463, 466, 474, 475, 477, 479, 481, 482], "obs_standard": 3, "out_keys_inv": [3, 195, 199, 216, 221, 222, 224, 231, 237, 238, 239, 243, 244, 251, 253, 260, 262, 264, 265, 477], "illustr": [3, 462, 463, 468, 479], "chang": [3, 5, 7, 11, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 101, 102, 103, 104, 108, 114, 115, 117, 119, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 217, 221, 222, 224, 226, 233, 235, 243, 244, 250, 254, 260, 262, 263, 264, 270, 271, 273, 298, 329, 331, 335, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 458, 462, 465, 475, 476, 477, 478, 479, 482], "schemat": [3, 458], "outermost": 3, "innermost": 3, "similar": [3, 35, 42, 47, 55, 57, 61, 63, 65, 66, 69, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 267, 268, 270, 271, 273, 329, 331, 335, 340, 342, 348, 351, 352, 395, 396, 397, 458, 462, 463, 464, 465, 466, 468, 469, 470, 471, 477, 479, 481, 482], "transform_action_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 217, 222, 237, 262, 264, 265, 273, 397], "spec_from_random_valu": 3, "_apply_transform": [3, 181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397, 477, 482], "rand": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 102, 110, 128, 129, 143, 144, 151, 155, 156, 162, 169, 170, 207, 210, 221, 224, 243, 253, 277, 303, 348, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 382, 383, 385, 387, 388, 395, 477, 481, 482], "approach": [3, 62, 69, 78, 79, 213, 237, 276, 306, 307, 333, 387, 456, 462, 464, 469, 470, 475, 482], "insid": [3, 61, 63, 70, 84, 95, 96, 97, 157, 184, 396, 482], "did": [3, 69, 269, 406, 463, 464, 470, 479, 482], "_inv_apply_transform": [3, 181, 182, 185, 191, 192, 193, 194, 195, 206, 262, 273, 397, 477, 482], "actiondiscret": 3, "rand_act": [3, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 210, 263, 467], "action_discret": 3, "addonetoob": 3, "Is": [3, 262], "rewrit": [3, 262], "_call": [3, 181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397, 477], "_inv_cal": [3, 181, 182, 185, 191, 192, 193, 194, 195, 206, 262, 273, 397], "overwrit": [3, 262], "till": [3, 262, 269], "encapsul": [3, 262, 467, 468, 469], "forget": [3, 262, 298], "edit": [3, 262, 273, 470], "top": [3, 4, 121, 128, 129, 143, 144, 220, 262, 277, 303, 331, 335, 468], "transform_output_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 210, 217, 221, 222, 226, 233, 235, 243, 244, 250, 254, 260, 262, 264, 271, 273, 397], "transform_input_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 206, 210, 217, 221, 222, 223, 235, 239, 243, 244, 249, 253, 254, 255, 256, 260, 262, 264, 267, 273, 397], "transform_observation_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 210, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 228, 230, 232, 233, 235, 237, 239, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 273, 397, 477], "transform_state_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 217, 222, 237, 262, 264, 265, 273, 397], "transform_reward_spec": [3, 181, 182, 185, 191, 192, 193, 194, 195, 210, 211, 216, 217, 221, 222, 226, 233, 234, 235, 243, 244, 247, 248, 249, 250, 251, 253, 254, 260, 262, 264, 265, 271, 273, 397], "rewardsum": [3, 181, 182, 185, 191, 192, 193, 194, 195, 204, 262, 273, 397, 475, 476], "undo": 3, "addonetoact": 3, "subtract": [3, 255], "regist": [3, 14, 17, 19, 20, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 110, 127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 201, 204, 221, 224, 225, 249, 261, 263, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 418, 420, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 459, 462, 464, 467, 479], "manipul": [3, 4, 8, 131, 132, 241, 262, 266], "third_transform": 3, "unexpect": [3, 15, 16, 18, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 482], "behviour": 3, "fortun": [3, 465, 466, 467, 468, 471], "alreadi": [3, 8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 205, 256, 273, 274, 329, 331, 335, 352, 395, 396, 397, 400, 401, 402, 403, 462, 464, 471, 475, 476], "catfram": [3, 347, 463], "notic": [3, 121, 213, 458, 464, 472, 477], "parenthood": 3, "henc": [3, 62, 205, 242, 306, 462, 464, 475, 476, 477], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 157, 166, 263, 418, 428, 477], "discret": [3, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 136, 137, 138, 145, 149, 150, 157, 158, 159, 160, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188, 206, 223, 231, 313, 316, 319, 369, 370, 371, 372, 457, 463, 468, 476], "might": [3, 61, 63, 64, 70, 84, 95, 96, 97, 184, 396, 424, 455, 462, 467, 482], "action_mask": [3, 130, 143, 144, 159, 160, 164, 165, 207], "unavail": [3, 159, 160], "probabl": [3, 4, 8, 71, 110, 113, 278, 279, 288, 290, 293, 294, 296, 298, 300, 301, 304, 305, 313, 325, 326, 331, 335, 348, 352, 365, 382, 457, 458, 463, 466, 468, 481], "probabilistictensordictmodul": [3, 192, 233, 352, 353, 458, 481], "tensordictsequenti": [3, 42, 65, 77, 279, 293, 296, 300, 317, 329, 331, 335, 344, 347, 353, 354, 359, 395, 457, 462, 463, 465, 466, 468, 472, 474, 475, 478, 481], "maskedcategor": [3, 305, 454], "linear": [3, 15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 65, 66, 67, 72, 77, 127, 128, 129, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 233, 241, 256, 262, 263, 266, 268, 273, 277, 279, 280, 281, 283, 284, 285, 286, 290, 292, 293, 301, 303, 306, 307, 309, 310, 317, 319, 320, 321, 329, 331, 335, 339, 340, 341, 342, 346, 347, 348, 349, 351, 354, 356, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 448, 457, 463, 474, 478, 481], "in_feat": 3, "out_feat": 3, "logit": [3, 63, 71, 97, 289, 304, 305, 313, 316, 345, 348, 370, 371, 457], "dist": [3, 10, 304, 305, 313, 352, 458, 468], "distribution_class": [3, 233, 340, 341, 342, 343, 348, 352, 354, 362, 363, 365, 370, 371, 378, 382, 383, 384, 385, 457, 462, 464, 468, 475, 476, 481], "wrap": [3, 5, 15, 16, 18, 21, 22, 23, 25, 27, 32, 35, 41, 42, 47, 55, 65, 66, 71, 72, 77, 127, 128, 129, 130, 133, 137, 138, 142, 143, 144, 145, 150, 153, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 170, 172, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 201, 219, 261, 263, 273, 274, 296, 300, 328, 329, 331, 335, 340, 341, 342, 347, 349, 352, 357, 380, 395, 397, 398, 456, 457, 462, 463, 464, 465, 469, 472, 475, 476, 482], "actionmask": [3, 130], "your_base_env": 3, "mask_kei": [3, 31, 207, 242, 273], "itself": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 209, 273, 329, 331, 335, 380, 387, 395, 397, 456, 464, 467], "ey": 3, "report": [3, 128, 129, 143, 144, 471], "foremost": 3, "callback": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 476], "ad": [3, 4, 18, 31, 35, 42, 47, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 91, 107, 108, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 213, 231, 249, 261, 263, 273, 276, 309, 310, 317, 329, 331, 335, 361, 362, 364, 365, 367, 372, 379, 382, 385, 395, 397, 398, 463, 465, 466, 468, 475, 479, 481, 482], "tensordictrecord": [3, 454], "videorecord": [3, 11, 418, 454, 464, 471, 472, 475], "csvlogger": [3, 11, 418, 420, 454, 463, 471, 472, 475], "wandblogg": [3, 454, 471], "tensorboardlogg": [3, 448, 454, 471], "tag": [3, 7, 11, 182, 183, 418, 420, 422, 425, 452, 456, 471, 472, 475], "mp4": [3, 418, 420, 422, 472, 475], "video_format": [3, 418, 420, 422, 472, 475], "whc": 3, "cwh": 3, "exp": [3, 361, 458], "al": [3, 15, 16, 18, 21, 29, 32, 136, 138, 225, 239, 277, 466, 482], "pong": [3, 15, 16, 18, 21, 29, 153, 239, 466, 482], "v5": [3, 15, 16, 18, 21, 29, 136, 138, 153, 225, 239, 466, 482], "grow": [3, 102], "tediou": [3, 467], "workspac": [3, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 231], "pixelrendertransform": [3, 454, 475], "stream": [3, 332], "alik": [3, 418], "envcreat": [3, 18, 28, 157, 166, 261, 271, 418, 448, 449, 452, 454, 462, 463, 481, 482], "render_mod": [3, 418, 477], "rgb_arrai": [3, 418, 475, 476, 477], "uncom": [3, 471], "line": [3, 7, 35, 42, 47, 50, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 463, 471, 475, 476], "comment": [3, 459, 463, 481], "pixels_record": [3, 418], "mission": 3, "irrespect": [3, 351, 352], "dmcontrol": [3, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "jumanji": [3, 127, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "framework": [3, 4, 9, 28, 127, 128, 129, 130, 133, 137, 143, 144, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 294, 481, 482], "Its": [3, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 270, 273, 329, 331, 335, 351, 395, 397, 404], "success": [3, 180, 182, 186, 191, 213, 258, 293, 365, 387, 463, 470, 472, 477, 479, 481], "foundat": [3, 5, 159, 160, 464, 476], "inspir": [3, 466, 477], "gone": [3, 4, 5, 347], "maintain": [3, 5, 9, 41, 57, 213, 271, 477], "concomittantli": 3, "problem": [3, 7, 8, 9, 18, 183, 463, 464, 465, 470, 475, 476, 477, 479, 482], "decor": [3, 8, 201, 203, 274, 296, 300, 338, 380, 400, 401, 402, 403, 428, 456, 465, 481], "relev": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 71, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 400, 401, 402, 403, 404, 427, 466, 477], "gym_backend": [3, 203, 454], "env1": [3, 279, 474], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 130, 203], "env2": [3, 474], "_env": [3, 6, 136, 482], "classic_control": 3, "pendulumenv": [3, 50, 454, 477], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 147, 177, 234], "side": [3, 4, 482], "v0": [3, 15, 16, 39, 40, 48, 74, 127, 130, 133, 137, 139, 142, 143, 144, 145, 146, 147, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 217, 234, 263, 270, 271, 428, 448], "26": [3, 116, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 218], "fun": [3, 203, 274, 464, 475, 476], "reveal": 4, "curv": 4, "exploit": [4, 468], "cv": 4, "flip": [4, 144], "correspondingli": 4, "invers": [4, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 110, 181, 182, 185, 191, 192, 193, 194, 195, 206, 213, 221, 224, 226, 231, 237, 244, 246, 258, 260, 262, 264, 273, 360, 370, 378, 397, 454, 477], "prescript": 4, "tune": [4, 32, 192, 233, 456, 475, 476, 478], "coeffici": [4, 32, 41, 71, 192, 233, 364, 379, 382, 476], "bonu": [4, 362, 364, 379, 382, 395], "beta": [4, 62, 78, 107, 108, 370, 378, 379, 462, 463, 479, 481], "reduc": [4, 6, 38, 121, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 213, 219, 255, 271, 276, 278, 325, 454, 463, 475], "downstream": [4, 458, 462], "formul": [4, 475, 476], "rate": [4, 11, 270, 271, 399, 463, 464, 475, 476], "gradient": [4, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 278, 297, 305, 310, 313, 325, 326, 329, 331, 335, 352, 362, 364, 365, 366, 370, 371, 376, 378, 379, 380, 382, 383, 384, 385, 387, 388, 395, 397, 399, 400, 401, 402, 403, 438, 462, 464, 475, 476, 477], "easier": [4, 66, 457, 462, 481], "local": [4, 7, 10, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 35, 42, 47, 55, 65, 66, 68, 72, 77, 95, 108, 115, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 271, 273, 306, 307, 318, 327, 329, 331, 335, 395, 397, 398, 425, 427, 466, 471, 472, 475, 476], "optima": 4, "product": [4, 9, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 294, 295, 298, 299, 450, 451], "sum": [4, 27, 35, 42, 53, 59, 77, 121, 128, 129, 131, 132, 136, 138, 139, 143, 144, 152, 153, 163, 185, 212, 234, 249, 304, 305, 325, 327, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 378, 379, 381, 382, 383, 384, 385, 387, 388, 395, 399, 406, 458, 462, 463, 464, 465, 466, 469, 472, 475, 476, 477, 482], "stat": [4, 237, 270, 271, 442, 452, 463, 464], "w": [4, 110, 130, 155, 156, 213, 215, 220, 245, 259, 294, 317, 420, 463, 479], "yield": [4, 15, 16, 18, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397, 456, 462, 469], "insight": [4, 179, 466], "auxiliari": [4, 469], "credit": 4, "futur": [4, 31, 35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 98, 99, 106, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 241, 261, 263, 268, 273, 301, 329, 331, 335, 362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 396, 397, 398, 455], "spars": [4, 42, 465], "intermedi": [4, 15, 16, 42, 50, 65, 77, 212, 279, 296, 300, 329, 331, 335, 345, 395, 462, 466, 478], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": [4, 180], "likelihood": [4, 462], "discov": 4, "score": [4, 71, 185, 314, 316], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 42, 62, 65, 67, 68, 69, 77, 78, 79, 84, 110, 130, 149, 150, 159, 160, 162, 171, 172, 181, 182, 185, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 277, 329, 331, 335, 344, 349, 395, 397, 437, 457, 458, 462, 466, 467, 475, 479], "explicit": [4, 15, 16, 18, 274, 479], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 32, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 298, 370, 378, 464, 476], "addition": [4, 288], "timestep": [4, 71, 246, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 475, 476], "realli": 4, "huge": [4, 307, 465], "std": [4, 237, 270, 275, 315, 462, 482], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 461, 465, 467, 469, 470, 471, 472, 473, 474, 478, 479, 480], "unseen": 4, "extrins": 4, "wrong": [4, 108, 115], "bonus": 4, "denser": 4, "prior": [4, 72, 321, 374, 476], "freshli": 4, "drop": [4, 114, 116, 204, 271], "meant": [4, 55, 151, 186, 329], "encourag": [4, 157, 316, 462, 463, 479], "measur": [4, 101, 103, 123, 128, 129, 143, 144, 181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397, 464, 470], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 32, 468], "ideal": [4, 218, 237, 477], "distil": 4, "nois": [4, 272, 310, 317, 337, 383, 387, 388, 433, 452, 462, 475], "exploratori": [4, 362, 364, 379, 382, 395], "misalign": 4, "trade": [4, 468], "unavoid": 4, "bootstrap": [4, 372, 400, 401, 407, 408, 462, 465], "noisi": [4, 309, 310, 337, 457], "unstabl": [4, 297, 325, 326], "inher": [4, 362, 382], "stochast": [4, 192, 233, 291, 310, 311, 321, 363, 365, 368, 370, 371, 376, 378, 381, 383, 385, 457, 464, 468, 476], "enemi": 4, "pomdp": [4, 479], "loos": [4, 352, 457, 463, 464], "nonexist": 4, "sequenc": [4, 15, 16, 18, 21, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 100, 110, 111, 113, 119, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 195, 199, 211, 212, 213, 214, 215, 220, 221, 223, 224, 228, 230, 231, 234, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 257, 258, 259, 260, 262, 264, 270, 271, 280, 281, 288, 290, 294, 298, 301, 304, 305, 306, 307, 313, 319, 323, 329, 331, 335, 343, 353, 354, 368, 395, 419, 420, 433, 434, 435, 437, 438, 457, 462, 464, 465, 466, 474, 475, 476, 482], "lstm": [4, 256, 299, 300, 466], "rel": [4, 110, 256, 288, 324, 462, 463, 475, 476, 479], "tend": 4, "stabl": [4, 9, 10, 154], "compens": 4, "descent": [4, 310], "minimum": [4, 85, 127, 157, 166, 247, 291, 324, 325, 326, 355, 358, 361, 363, 365, 371, 380, 381, 385, 395, 429, 458, 462, 464, 472, 475, 476], "manual": [4, 11, 22, 25, 27, 50, 62, 67, 68, 69, 78, 79, 110, 137, 138, 188, 462, 465, 479], "deviat": [4, 237, 270, 271, 275, 277, 291, 303, 309, 310, 315, 316, 382, 387, 388, 462, 468, 476], "radic": 4, "begin": [4, 15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 209, 294, 295, 298, 299, 361, 428, 458, 466, 467, 468, 469, 470, 471, 472], "stabil": [4, 229, 278, 362, 364, 379, 382, 384, 395], "stage": [4, 462, 477], "never": [4, 15, 16, 21, 29, 36, 85, 108, 258, 470, 481], "prevent": [4, 33, 34, 38, 39, 40, 43, 48, 51, 52, 53, 54, 59, 60, 67, 74, 99, 270, 271, 297, 325, 326, 362, 364, 379, 382, 384, 395, 436, 471, 479], "entir": [4, 15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 271, 306, 464, 467, 477, 479], "submit": [4, 136, 210, 455, 481], "system": [4, 5, 96, 99, 178, 180, 183, 193, 456, 464, 475, 476, 477], "adequ": [4, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 464, 475, 476], "infeas": 4, "allevi": [4, 457], "prune": [4, 145, 187], "fire": [4, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "illeg": 4, "chess": [4, 130, 155, 156], "grasp": 4, "wherein": 4, "cumul": [4, 42, 249, 255, 277, 406, 464], "q": [4, 9, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 283, 284, 285, 286, 289, 290, 292, 318, 319, 327, 342, 345, 349, 350, 363, 365, 366, 367, 369, 370, 371, 372, 377, 378, 383, 385, 387, 388, 398, 454, 462, 469], "flow": [4, 400, 462, 464, 475, 476, 477, 479], "reparameter": [4, 288, 305, 313], "soft": [4, 377, 385, 386, 475], "critic": [4, 8, 340, 346, 362, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 395, 462, 469], "clip": [4, 71, 216, 247, 362, 364, 379, 382, 384, 387, 388, 395, 438, 464, 476, 477], "oppos": [4, 83], "incorrect": [4, 115], "thought": [4, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "region": 4, "squash": [4, 465, 481], "tanh": [4, 280, 281, 294, 295, 297, 298, 299, 301, 307, 324, 325, 326, 355, 464, 468, 475, 476, 477, 478], "prob": [4, 304, 305, 313, 316, 464, 476], "rememb": [4, 475], "remap": 4, "origin": [4, 8, 42, 61, 63, 64, 65, 70, 71, 77, 80, 84, 95, 96, 97, 141, 184, 192, 222, 223, 233, 241, 263, 268, 273, 294, 329, 331, 335, 348, 351, 352, 363, 365, 377, 378, 380, 382, 383, 385, 387, 388, 395, 396, 462, 466, 474, 477, 482], "world": [5, 151, 331, 335, 357, 374, 456, 466, 471, 475, 476, 477, 482], "histor": 5, "ceas": 5, "farama": [5, 146, 147, 159, 160, 464, 477], "gymwrapp": [5, 127, 130, 133, 137, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 226, 250, 254, 269, 454, 464, 481], "feel": [5, 455, 472, 481], "free": [5, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 204, 221, 224, 362, 374, 382, 459, 464, 472, 476, 481], "gladli": 5, "prepar": [6, 46, 181, 464], "conda": [6, 7, 455], "cmake": 6, "activ": [6, 7, 9, 50, 280, 281, 287, 291, 301, 306, 307, 364, 379, 382, 457, 477, 481], "sim": 6, "bullet": 6, "headless": [6, 7, 142], "cluster": [6, 7, 8, 22, 27, 455], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 139], "y": [6, 7, 42, 65, 69, 77, 154, 292, 306, 328, 329, 331, 335, 395, 462, 476, 479], "facebookresearch": [6, 139], "subdirectori": 6, "verbos": [6, 472], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 243, 252, 273, 329, 331, 335, 380, 395, 396, 397, 475, 476, 481, 482], "command": [6, 7, 10, 161, 167, 168, 464, 475, 476, 477, 482], "readm": [6, 7, 171, 481], "md": [6, 7], "habitatenv": [6, 454], "_has_habitat": 6, "available_env": [6, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 146, 149, 150, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 183, 186, 187, 188, 482], "startswith": [6, 279, 458, 462, 469], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 134, 380, 462], "env_nam": [6, 127, 128, 130, 131, 133, 134, 136, 137, 139, 143, 145, 146, 152, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 462, 464, 482], "llvmlite": 6, "config": [6, 7, 241, 268, 282, 287, 315, 442, 443, 444, 446, 449], "var": [6, 7, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 271, 273, 329, 331, 335, 365, 380, 385, 395, 397], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 344, 363, 365, 371, 378, 380, 383, 385, 387, 388, 401, 402, 403], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 35, 38, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 365, 380, 385, 395, 397, 466, 479], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 466], "stand": [7, 45, 131, 132, 157, 166, 474, 477], "joint": [7, 463], "contact": [7, 64, 475], "engin": [7, 163, 332, 397, 456, 477], "biomechan": 7, "graphic": 7, "anim": [7, 476], "area": 7, "demand": [7, 471, 482], "fast": [7, 9, 102, 128, 129, 204, 244, 383, 462, 463, 464, 481], "articul": 7, "acquir": [7, 464], "deepmind": [7, 8, 9, 127, 130, 131, 132, 133, 137, 145, 149, 150, 155, 156, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 225, 464, 467], "whomev": 7, "licenc": 7, "incorpor": [7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 293, 317, 387, 465, 468, 477], "relianc": 7, "obsolet": 7, "legaci": [7, 31], "pro": [7, 455], "tip": [7, 455], "glfw": [7, 462], "osmesa": 7, "egl": 7, "advic": [7, 482], "sudo": [7, 455], "apt": [7, 476], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 145, 187, 340, 341, 342], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 458, 462, 464, 465, 475, 476, 479], "roboti": 7, "html": [7, 15, 16, 152, 154, 155, 156], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 15, 16, 21, 157, 166], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 61, 63, 83, 94], "bin": [7, 290, 316, 345, 457], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 286, 348, 352, 462, 464, 466, 479], "nvidia": [7, 141, 466], "older": [7, 274], "hack": [7, 462], "adatp": 7, "script": [7, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 428, 448, 452, 456, 457, 458, 459, 462, 463, 466, 471, 475, 476, 477, 479], "unnot": [7, 242], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 99, 463, 479], "troubleshoot": 7, "gl": 7, "h": [7, 110, 213, 215, 220, 245, 259, 294, 295, 296, 298, 299, 300, 303, 420, 463, 479], "eglshim": 7, "fatal": 7, "No": [7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 34, 38, 43, 53, 54, 59, 60], "directori": [7, 61, 63, 70, 83, 84, 95, 96, 97, 101, 184, 396, 425, 427, 456, 458, 459, 462, 468, 471, 475], "devel": 7, "ubuntu": [7, 141], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 463, 465, 474], "libstdc": 7, "glibcxx_3": 7, "29": [7, 115, 116], "compil": [7, 15, 16, 18, 31, 35, 42, 47, 55, 65, 66, 69, 72, 77, 78, 79, 100, 101, 102, 103, 104, 108, 111, 115, 116, 117, 122, 123, 125, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 274, 294, 295, 298, 299, 325, 329, 331, 335, 395, 397, 400], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 15, 16, 18, 21, 24, 29, 35, 38, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 236, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397, 458, 482], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 115, 128, 129], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 475, 476], "global": [7, 35, 42, 47, 55, 65, 66, 69, 72, 77, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 261, 273, 318, 327, 329, 331, 333, 335, 348, 352, 395, 397, 398, 459, 462, 475, 476], "cuda_visible_devic": 7, "id": [7, 20, 31, 71, 84, 108, 110, 115, 116, 127, 130, 133, 136, 137, 145, 157, 158, 161, 166, 167, 168, 169, 170, 178, 179, 180, 183, 185, 186, 187, 188, 317, 365, 383, 423, 427, 470, 479], "slurm_step_gpu": 7, "black": [7, 130, 475], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 476], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 459], "n_training_step": 8, "datapoint": [8, 83, 479], "n_data_per_train": 8, "no_grad": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 273, 278, 294, 295, 298, 299, 329, 331, 335, 395, 397, 400, 401, 402, 403, 464, 465, 466, 476], "loss_fn": [8, 465, 469, 470, 481], "zero_grad": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 316, 329, 331, 335, 395, 397, 459, 462, 464, 465, 466, 469, 472, 475, 476, 477], "backpropag": [8, 128, 129, 143, 144, 157, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 398, 469, 476, 477], "differenti": [8, 83, 128, 129, 192, 233, 365, 387, 400, 401, 402, 403, 465, 468, 469, 475, 476, 477], "denomin": 8, "artifact": 8, "numer": [8, 69, 137, 188, 270, 297, 325, 326, 339, 344, 345, 348, 349, 350, 351, 352, 436, 464, 479, 482], "misconcept": 8, "freed": 8, "appear": [8, 11, 36, 59, 84, 85, 108, 115, 116, 133, 186, 191, 458, 477, 479], "compuat": 8, "fix": [8, 41, 157, 256, 363, 365, 381, 385, 463, 472, 477, 482], "retain_graph": [8, 128, 129], "discuss": [8, 9, 470, 475, 476], "inplac": [8, 35, 42, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 351, 395, 396, 397, 462], "forward": [8, 15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 237, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 306, 307, 308, 309, 311, 312, 315, 317, 318, 320, 321, 323, 327, 328, 329, 331, 335, 343, 345, 347, 348, 350, 351, 352, 355, 356, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 395, 397, 398, 400, 401, 402, 403, 404, 454, 458, 465, 477, 481], "submodul": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 256, 273, 296, 300, 329, 331, 335, 359, 380, 395, 397], "param": [8, 35, 42, 47, 55, 65, 66, 71, 72, 77, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 210, 217, 221, 222, 226, 233, 235, 243, 244, 250, 254, 260, 262, 264, 271, 273, 288, 290, 306, 307, 308, 324, 329, 331, 335, 343, 348, 351, 354, 380, 390, 394, 395, 397, 400, 401, 402, 403, 404, 462, 466, 472, 475, 476, 477, 478, 481], "grad": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 352, 395, 397, 462, 464], "whose": [8, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 318, 329, 331, 335, 351, 395, 397], "fit": [8, 66, 237, 256, 274, 458, 459, 462], "brax": [8, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 244, 467, 482], "jax": [8, 128, 129, 143, 144, 274], "improperli": 8, "underli": [8, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 380, 465, 467, 469, 471, 477], "tedeiou": 8, "priorit": [8, 62, 78, 107, 108, 365, 366, 367, 369, 370, 371, 378, 383, 385, 387, 388, 462, 463, 470, 481], "amount": [8, 157, 317, 400, 463, 479], "costli": [8, 477], "constitut": [8, 463, 476, 477], "profil": 8, "frequent": [8, 50, 479], "program": [8, 370, 378, 466, 482], "functorch": [8, 10], "incl": 8, "suit": [8, 132, 464, 467, 481, 482], "mujoco_instal": 8, "valueerror": [8, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 114, 239, 259, 466, 481, 482], "idea": [9, 383, 459, 465, 468, 475, 476], "introductori": 9, "intro": [9, 464, 465], "dai": [9, 481], "2022": [9, 10, 278, 481], "spin": [9, 131, 132], "hug": [9, 331, 335], "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 468], "summari": [9, 237, 270, 271, 462, 463, 464, 465], "reddit": 9, "reagent": 9, "orient": [9, 482], "baselines3": 9, "tf": 9, "bandit": [9, 154], "tensorflow": [9, 304, 305], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 466, 472], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 481], "grade": 9, "factori": [9, 15, 16, 18, 21, 22, 23, 25, 27, 67, 69, 78, 79, 80, 82, 462], "cherri": 9, "jaxrl": 9, "mbrl": [9, 151, 457], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 464, 465, 475, 476], "notebook": [10, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "24": [10, 116, 136, 152, 153, 180, 316, 347, 420, 475], "pip3": [10, 462, 464, 465, 475, 476], "url": [10, 95, 139], "org": [10, 15, 16, 32, 62, 107, 108, 128, 129, 131, 132, 139, 143, 144, 149, 150, 152, 153, 154, 163, 171, 172, 213, 241, 266, 276, 282, 283, 284, 285, 286, 287, 290, 291, 292, 298, 303, 304, 305, 310, 311, 312, 316, 317, 318, 320, 321, 327, 345, 362, 363, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 400, 405, 413, 453, 473, 478], "whl": 10, "u": [10, 294, 295, 298, 299, 477], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 213, 464, 475, 476, 477, 479], "power": [11, 463], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 250, 454], "ultim": [11, 297, 325, 326], "ffmpeg": 11, "whatev": [11, 458, 462], "fed": [11, 178, 476, 479], "feed": [11, 241, 268, 380, 395, 457, 462, 475, 476, 479], "suppos": [11, 157, 433, 459, 482], "snippet": [11, 241, 266, 462], "gave": 11, "extrem": [11, 157, 166, 362, 364, 379, 382, 384, 395], "blurri": [11, 466], "stitch": 11, "exp_nam": [11, 420, 421, 422, 425, 426, 427, 448, 463, 471, 472], "my_exp": [11, 471], "pixels_onli": [11, 131, 132, 136, 138, 139, 163, 462, 463, 471, 472, 481, 482], "my_video": [11, 471], "record_env": [11, 471, 472], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 342, 457], "allow_non": 12, "unwrap": [12, 225, 263, 428], "seealso": 12, "timeout": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 157, 193], "close_env": [13, 15, 16, 18, 21, 22, 23, 25, 29], "shutdown": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 161, 167, 210, 462, 463, 479, 481], "implic": [13, 22, 23, 25], "notimplementederror": [13, 22, 23, 25, 84, 462], "subclass": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 35, 36, 39, 42, 47, 65, 66, 72, 77, 85, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 208, 209, 262, 269, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 351, 352, 353, 355, 358, 380, 382, 456, 463, 465, 470, 477, 479], "policy_weight": [13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "kwarg": [13, 15, 16, 18, 21, 22, 25, 26, 27, 29, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 49, 52, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 110, 115, 116, 117, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 200, 201, 207, 208, 210, 217, 241, 243, 252, 256, 261, 262, 263, 265, 267, 268, 270, 272, 273, 275, 277, 279, 280, 281, 283, 284, 285, 286, 289, 292, 293, 296, 297, 300, 301, 302, 303, 306, 307, 308, 313, 317, 326, 328, 329, 330, 331, 332, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 418, 420, 424, 425, 427, 431, 438, 443, 444, 449, 450, 451, 458, 464, 466, 476], "upload": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "transfer": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 352], "fetch": [13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 61, 63, 70, 84, 95, 96, 97, 128, 129, 131, 132, 184, 192, 233, 396, 468, 478, 479], "typeerror": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "weight_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 463], "overwritten": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 228, 331, 335], "localweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "remoteweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "get_server_weight": 14, "design": [14, 24, 26, 35, 42, 47, 55, 57, 59, 65, 66, 72, 77, 113, 119, 126, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 213, 231, 242, 261, 263, 271, 273, 329, 331, 335, 343, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 395, 397, 398, 454, 456, 462, 463, 464, 465, 467, 468, 469, 474, 475, 476, 477, 479, 481, 482], "date": [14, 17, 130, 212, 423], "datacollectorbas": [14, 15, 17, 19, 20, 23, 24, 26, 30, 348, 352, 440, 443, 444, 448, 454], "all_worker_id": [14, 17, 19, 20, 24, 26, 30], "scope": [14, 17, 19, 20, 24, 26, 30, 84, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 466, 482], "push_weight": [14, 17, 19, 20, 24, 26, 30], "push": [14, 17, 19, 20, 24, 26, 30], "noth": [14, 17, 19, 20, 24, 26, 30, 50, 145, 187, 462, 464], "register_collector": [14, 17, 19, 20, 24, 26, 30], "create_env_fn": [15, 16, 18, 21, 22, 23, 25, 27, 134, 157, 166, 462, 481], "policy_factori": [15, 16, 18, 21, 22, 23, 25, 27, 29], "device_typ": [15, 18, 21, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 241, 266, 268, 280, 281, 282, 283, 284, 285, 286, 292, 301, 306, 307, 309, 310, 315, 318, 351, 435, 446], "env_devic": [15, 16, 18, 21, 22, 23, 25, 27, 463], "create_env_kwarg": [15, 16, 18, 21, 27, 134, 152, 157, 166, 261, 462, 482], "collector_class": [15, 16, 22, 23, 25, 26, 27], "postproc": [15, 16, 18, 21, 22, 23, 25, 27, 29, 55, 246, 463, 479], "explorationtyp": [15, 16, 18, 21, 22, 23, 25, 27, 348, 380, 433, 457, 462, 463, 464, 465, 468, 475, 481], "interactiontyp": [15, 18, 21, 22, 23, 25, 27, 175, 202, 348, 352, 433], "preemptive_threshold": [15, 16, 21], "num_thread": [15, 16, 21, 61, 63, 70, 84, 95, 96, 97, 137, 157, 166, 184, 188, 396], "num_sub_thread": [15, 16, 21, 157, 166], "str": [15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 107, 108, 110, 121, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 143, 145, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 205, 209, 213, 225, 231, 232, 233, 241, 245, 254, 255, 258, 260, 261, 263, 264, 266, 268, 269, 270, 273, 274, 277, 289, 290, 296, 300, 302, 303, 306, 307, 308, 318, 319, 327, 329, 331, 332, 333, 335, 339, 344, 345, 348, 349, 350, 351, 352, 355, 356, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 452, 463, 464, 466], "set_trunc": [15, 16, 18, 21, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "use_buff": [15, 16, 18, 157, 166], "extend_buff": [15, 16, 18], "replay_buffer_chunk": 15, "trust_polici": [15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "compile_polici": [15, 16, 18], "cudagraph_polici": [15, 16, 18], "no_cuda_sync": [15, 16, 18], "datacollector": [15, 16, 18, 21, 27, 29, 55, 382, 464, 470, 479], "recept": 15, "safe": [15, 16, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 108, 115, 184, 275, 317, 324, 325, 339, 344, 345, 348, 349, 350, 351, 352, 354, 396, 457, 481], "sota": [15, 16, 151, 229, 384, 429, 443, 456, 462, 463, 481], "guard": [15, 16], "doc": [15, 16, 80, 139, 142, 143, 144, 154, 163, 427, 458, 463, 475, 476, 479], "env_mak": [15, 16, 18, 27, 67, 127, 448, 482], "2000": [15, 16, 18, 55, 83, 140, 316, 420, 479], "50": [15, 16, 18, 27, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 71, 73, 74, 82, 85, 86, 87, 88, 89, 115, 116, 149, 150, 273, 465, 479], "del": [15, 16, 18, 29, 462, 463, 464, 474, 475, 479, 481, 482], "int64": [15, 16, 18, 29, 31, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 70, 71, 75, 78, 80, 83, 84, 94, 95, 96, 97, 107, 115, 127, 130, 133, 137, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 191, 206, 210, 218, 225, 239, 246, 254, 290, 317, 319, 344, 345, 348, 349, 350, 396, 457, 477], "tensordictmodulebas": [15, 16, 18, 21, 22, 23, 25, 27, 42, 65, 77, 212, 328, 329, 331, 335, 344, 347, 349, 395, 465], "undergon": [15, 16, 18, 21, 22, 23, 25, 27, 83], "env_obs_kei": [15, 16, 18, 21, 22, 23, 25, 27], "mustn": [15, 16, 18, 21, 22, 23, 25, 27], "pickl": [15, 16, 18, 21, 22, 23, 25, 27, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 329, 331, 335, 395, 397], "exclus": [15, 16, 18, 21, 22, 23, 25, 27, 29, 69, 78, 79, 90, 91, 108, 115, 116, 190, 210, 226, 228, 294, 296, 298, 300, 304, 305, 344, 345, 349, 350, 386, 387, 388, 400, 401, 402, 403, 404, 427, 452, 457], "lifespan": [15, 16, 18, 21, 22, 23, 25, 29, 463], "divis": [15, 16, 18, 21, 22, 23, 25, 35, 108, 115, 116, 271, 276, 476], "endless": [15, 16, 18, 21, 22, 23, 25, 191], "sit": [15, 16, 18, 21, 22, 23, 25, 27, 440, 463], "cast": [15, 16, 18, 21, 22, 23, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 232, 233, 240, 241, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 329, 331, 335, 351, 364, 379, 382, 395, 396, 397, 475, 482], "deriv": [15, 16, 22, 23, 25, 27, 81, 288, 438], "span": [15, 16, 18, 21, 22, 23, 25, 27, 108, 115, 116], "n_step": [15, 16, 18, 21, 22, 23, 25, 27, 55, 273, 347, 463, 464, 475, 476], "mainli": [15, 16, 18, 21, 22, 23, 25, 27, 71, 179, 180, 183, 427, 457, 475, 476, 477], "round": [15, 16, 18, 21, 22, 23, 25, 27, 130, 178], "closest": [15, 16, 18, 21, 22, 23, 25, 27], "boolm": [15, 16, 21], "ratio": [15, 16, 21, 71, 462, 464], "finish": [15, 16, 18, 21, 27, 29, 137, 188, 246, 482], "earli": [15, 16, 21, 55, 137, 188, 254, 481], "safeti": [15, 16, 21, 151, 157, 166, 271], "harm": [15, 16, 21, 157, 166], "add_truncated_kei": [15, 16, 18, 21, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263], "trust": [15, 16, 18, 127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 219, 300], "cudagraphmodul": [15, 16, 18, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "behaviour": [15, 16, 18, 42, 65, 77, 329, 331, 335, 395, 465, 466, 481], "bypass": [15, 16, 18, 468], "isaaclab": [15, 16, 18, 138, 142], "maniskil": [15, 16, 18], "crash": [15, 16, 18, 246], "multiprocessedweightupdat": [15, 16], "ordereddict": [15, 16, 18, 21, 27, 29, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 270, 271, 273, 329, 331, 335, 365, 385, 395, 397], "worker0": [15, 16, 21], "state_dict0": [15, 16, 21], "worker1": [15, 16, 21], "state_dict1": [15, 16, 21], "reset_idx": [15, 16, 21], "static_se": [15, 16, 18, 21, 27, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263], "increment": [15, 16, 18, 21, 29, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 237, 379], "env_fn": [15, 16, 18, 21, 29, 134, 450, 451], "env_fn_parallel": [15, 16, 18, 21, 29], "300": [15, 16, 18, 21, 29, 115, 116, 285, 286], "out_se": [15, 16, 18, 21, 29, 482], "irrevers": [15, 16, 21], "pipe": [15, 16, 18, 21, 29, 157], "tqdm": [15, 16, 18, 21, 29, 62, 67, 68, 69, 78, 79, 110, 438, 462, 464, 465, 475, 476, 477], "ale_pi": [15, 16, 18, 21, 29, 466], "10000": [15, 16, 21, 27, 157, 276, 438, 465], "progress": [15, 16, 18, 21, 29, 431, 432, 433, 438, 459, 463, 465, 482], "bar": [15, 16, 18, 21, 29, 101, 103, 123, 343, 431, 432, 433, 438, 459, 463], "pbar": [15, 16, 18, 21, 29, 462, 464, 465, 475, 476, 477], "100_000": [15, 16, 18, 21, 29, 466, 472], "prec_wc": [15, 16, 18, 21, 29], "wc": [15, 16, 18, 21, 29], "write_count": [15, 16, 18, 21, 29, 62, 67, 68, 69, 78, 79, 110], "set_descript": [15, 16, 18, 21, 29, 462, 464, 465, 475, 476, 477], "remote_collector": [17, 27], "max_interv": 17, "leverag": [17, 27, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 462, 476, 482], "_get_server_weight": [17, 20, 24, 26], "_maybe_map_weight": [17, 20, 24, 26], "_sync_weights_with_work": [17, 20, 24, 26], "_skip_upd": 17, "interv": [17, 206, 258, 419, 420, 430, 440, 463, 477], "raycollector": [17, 67, 454], "return_same_td": 18, "interruptor": 18, "cautious": [18, 382], "whole": [18, 35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 348, 365, 385, 395, 397, 429, 462, 464], "_interruptor": 18, "outsid": [18, 222, 261, 458, 471, 475, 476, 477], "start_collect": 18, "stop_collect": 18, "preeptiv": 18, "init": [18, 27, 29, 35, 42, 47, 55, 65, 66, 67, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 262, 270, 273, 306, 307, 308, 329, 331, 335, 395, 397, 400, 427, 463, 464], "chunk": [18, 29, 468], "policy_state_dict": [18, 29], "env_state_dict": [18, 29], "256": [18, 29, 94, 149, 150, 231, 287, 463, 464, 466, 475, 476], "weight_gett": 19, "vanillaweightsend": 19, "sender": 19, "weightupdatereceiverbas": 19, "update_weight": [19, 24, 26, 440], "piec": [20, 100, 111, 122, 125, 126, 462, 463, 464, 471, 475, 476, 477, 479], "scheme": [20, 459, 482], "hanld": 20, "unchang": [20, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 223, 241, 256, 262, 263, 266, 268, 273, 293, 329, 331, 335, 351, 395, 397, 420, 435, 462, 479], "__call__": [20, 35, 42, 47, 55, 64, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 352, 395, 397, 459], "proxi": [20, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 184, 305, 313, 348, 396, 458], "weakref": [20, 50, 84], "registr": [20, 463], "exporationtyp": [22, 23, 25], "collector_kwarg": [22, 23, 25, 27], "num_workers_per_collector": [22, 23, 25, 27], "slurm_kwarg": [22, 23, 25], "update_after_each_batch": [22, 23, 25, 27], "max_weight_update_interv": [22, 23, 25, 27], "tcp_port": [22, 23, 25, 28], "respect": [22, 23, 25, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 211, 217, 221, 224, 235, 241, 242, 251, 256, 262, 263, 266, 268, 273, 294, 298, 306, 321, 329, 331, 335, 351, 356, 362, 364, 379, 382, 384, 395, 397, 400, 402, 403, 434, 458, 464, 465, 475, 476], "subnod": [22, 23, 25, 27], "readi": [22, 25, 27, 455, 463, 464, 466, 468, 471, 479, 481], "fashion": [22, 25, 27, 61, 63, 70, 84, 95, 96, 97, 116, 184, 396], "distributed_back": [22, 23], "ucc": [22, 23], "submitit_delai": [22, 28], "former": [22, 23, 25, 31, 35, 42, 47, 62, 65, 66, 69, 72, 77, 78, 79, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358, 462], "whilst": [22, 23, 25], "homonym": [22, 23, 25, 477], "visit": [22, 23, 25, 84, 183], "facebookincub": [22, 23, 25], "tcp": [22, 23, 25, 28], "port": [22, 23, 25, 28, 169, 333], "10003": [22, 23, 25, 28], "distributedweightupdat": 22, "liter": [23, 84, 95, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 190, 191, 331, 335, 338], "update_interv": 23, "frequenc": [23, 316, 462], "restart": 24, "rank": [24, 121, 277, 333, 334], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 31, 59, 348, 352], "tensorpiperpcbackendopt": 25, "rpcweightupdat": 25, "collector_info": 26, "collector_rref": 26, "ray_init_config": [27, 67], "remote_config": [27, 62, 67, 68, 69, 78, 79, 110], "num_collector": [27, 450, 451, 462, 463], "coordin": [27, 220], "autodetect": 27, "num_cpu": [27, 67], "num_gpu": [27, 67], "1024": [27, 67, 287, 479], "equat": [27, 65, 84, 137, 188, 270, 271, 317, 361, 364, 386, 395, 464, 467, 477], "exce": [27, 479], "indefinit": [27, 93], "rayreplaybuff": [27, 454], "enfoc": 27, "rayweightupdat": 27, "distributed_collector": [27, 67], "add_collector": 27, "local_polici": 27, "stop_remote_collector": 27, "num_job": 28, "tcpport": 28, "submitit_main_conf": 28, "slurm_cpus_per_task": 28, "slurm_gpus_per_nod": 28, "slurm_partit": 28, "timeout_min": 28, "submitit_collection_conf": 28, "delai": [28, 387, 469], "jump": [28, 467], "host": [28, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "satellit": 28, "rendezv": 28, "hang": 28, "forev": 28, "default_config": [28, 282, 287, 315, 343], "default_slurm_conf_main": 28, "default_slurm_conf": 28, "dialog_turns_per_batch": 29, "yield_only_last_step": 29, "yield_completed_trajectori": 29, "total_dialog_turn": 29, "async_env": 29, "flatten_data": 29, "queue": [29, 161, 270, 397, 479, 481], "simplifi": [29, 62, 201, 468, 477, 479], "steps_per_batch": 29, "total_step": 29, "vllm": [29, 30, 186, 330, 331, 332, 333, 334, 335], "vllmwrapper": [29, 186, 331], "mocking_class": [29, 261], "dummystrdataload": 29, "llmenv": [29, 181, 189, 191, 335], "llm_model": 29, "gpt2": [29, 64, 71, 80, 83, 145, 187, 282, 287, 315, 331, 335], "get_token": 29, "pad_token": [29, 64, 80], "eos_token": [29, 64, 182], "from_dataload": [29, 186, 191], "from_text": [29, 178, 186, 191, 331, 335], "group_repeat": [29, 179, 180, 183, 186, 189, 191], "attention_mask": [29, 61, 63, 64, 70, 71, 80, 83, 94, 97, 186, 331, 335], "text": [29, 64, 71, 80, 95, 97, 145, 178, 179, 180, 182, 183, 185, 186, 187, 193, 294, 295, 298, 299, 317, 331, 335, 397, 456, 464], "nontensorstack": [29, 50, 57, 102, 127, 130, 145, 178, 180, 183, 187, 191, 195, 231, 260, 264, 335], "plsgqejeyd": 29, "text_respons": [29, 97, 178, 180, 182, 183, 185, 186, 188, 193, 331, 335, 456], "ec": 29, "tjbjz3perwhz": 29, "tokens_respons": [29, 97, 186, 331, 335], "alia": [29, 35, 42, 47, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 101, 102, 103, 104, 110, 117, 119, 123, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 395, 397, 398, 404], "master_address": [30, 333], "master_port": [30, 333], "model_metadata": 30, "vllm_tp_size": 30, "rollout_tensordict": 31, "nestedkei": [31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 70, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 108, 115, 116, 127, 130, 133, 137, 145, 157, 158, 161, 162, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 195, 199, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 275, 279, 290, 293, 317, 319, 343, 347, 352, 367, 396, 397, 398, 418, 420], "as_nest": 31, "x": [31, 42, 55, 65, 66, 69, 71, 72, 77, 116, 145, 187, 231, 233, 259, 264, 274, 276, 278, 279, 281, 290, 292, 294, 295, 296, 298, 299, 300, 301, 303, 306, 307, 328, 329, 331, 335, 344, 348, 349, 358, 361, 395, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 438, 456, 462, 466, 475, 477, 479, 481], "durat": [31, 476], "meta": [31, 61, 63, 70, 82, 84, 95, 96, 97, 135, 139, 184, 362, 364, 379, 382, 384, 396, 459, 464, 475, 476, 479], "aren": [31, 255, 465], "eventu": [31, 318, 465, 477], "recov": [31, 115, 116, 353, 370, 378, 474], "layout": 31, "to_padded_tensor": 31, "nested_tensor": [31, 136, 138], "stride": [31, 35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 280, 281, 283, 284, 292, 306, 329, 331, 335, 395, 397, 463, 475, 481], "jag": 31, "focu": [31, 462, 463, 464, 466, 468, 469, 470, 475], "team": [31, 475, 476, 481], "cat": [31, 50, 191, 356, 363, 365, 366, 378, 383, 385, 387, 388, 475, 479, 481], "arang": [31, 33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 108, 115, 116, 206, 290, 304, 305, 344, 429, 457, 479], "obs_": 31, "trajectory_id": 31, "int32": [31, 35, 36, 50, 79, 85, 115, 143, 144, 155, 156, 168, 198, 347], "data_split": 31, "got": [31, 470], "init_kl_coef": 32, "horizon": [32, 149, 150, 171, 172, 277, 303, 464], "kl": [32, 41, 71, 192, 233, 374, 379], "describ": [32, 61, 63, 70, 82, 84, 95, 96, 97, 162, 184, 214, 324, 325, 367, 396, 423, 458, 462, 464, 475, 476, 477, 482], "ziegler": 32, "et": [32, 277], "relax": [32, 418], "penalti": [32, 71, 190, 376, 379], "strai": [32, 71], "greater": [32, 108, 115, 116, 218, 234, 235, 296, 300, 365, 462, 463], "increas": [32, 99, 213, 257, 278, 317, 475, 476], "pull": [32, 50, 84, 179, 479], "toward": [32, 268], "aggress": 32, "kl_coef": [32, 41, 71], "arxiv": [32, 62, 107, 108, 128, 129, 131, 132, 143, 144, 149, 150, 152, 153, 163, 171, 172, 213, 241, 266, 276, 282, 283, 284, 285, 286, 287, 290, 291, 292, 298, 303, 310, 311, 312, 316, 317, 318, 320, 321, 327, 345, 362, 363, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 382, 385, 386, 387, 400, 405, 413, 478], "pdf": [32, 213, 282, 283, 284, 285, 286, 290, 316, 317, 345, 365, 372, 376, 383, 386, 387, 400, 405, 413], "1909": 32, "08593": 32, "lm": 32, "blob": 32, "master": [32, 333, 475, 476], "lm_human_prefer": 32, "train_polici": 32, "kl_valu": 32, "coef": [32, 192, 233, 364, 379, 382], "newest": 32, "int8": [33, 133, 148, 159, 160, 211], "encod": [33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 128, 129, 133, 136, 137, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170, 188, 206, 223, 312, 313, 316, 320, 331, 335, 361, 463, 464, 465, 468, 477, 479], "null": [33, 36, 37, 39, 40, 42, 48, 49, 57, 58, 62, 73, 74, 78, 82, 85, 86, 87, 88, 89, 107, 108, 178, 186, 211, 231], "denot": [33, 476], "clariti": [33, 50], "assert_is_in": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "cardin": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 290, 319, 344, 345, 350, 464], "outcom": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 288, 304, 305, 324, 380, 395, 475], "cartesian": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "clear_device_": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "is_in": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 482], "np": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188, 269, 355, 418, 466, 475, 477], "ndarrai": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188, 317, 355, 418, 466, 475], "ignore_devic": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "arrai": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 71, 73, 74, 82, 85, 86, 87, 88, 89, 107, 127, 130, 133, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 191, 225, 294, 295, 298, 299, 462, 475], "use_mask": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 159, 160], "erase_memoize_cach": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "memoiz": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 137, 188], "memoize_encod": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "compliant": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "singleton": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 185, 280, 281, 301, 322, 323, 454, 458], "start_dim": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "end_dim": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "classmethod": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 110, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 231, 266, 274, 281, 282, 315, 396], "implements_for_spec": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "torch_funct": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "index_typ": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 57, 58, 73, 74, 82, 85, 86, 87, 88, 89], "tensor_to_index": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "exanpl": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "one_hot": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 290, 305, 319], "categ": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 348], "to_categorical_spec": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_one_hot": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_categ": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_categor": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "make_neg_dim": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "convert": [33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 217, 221, 224, 241, 256, 262, 263, 266, 268, 270, 271, 273, 329, 331, 335, 351, 361, 380, 395, 396, 397, 462, 463, 464, 477, 479], "shortcut": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 477, 482], "ndimens": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 462], "violat": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 457], "project": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 73, 74, 82, 85, 86, 87, 88, 89, 223, 275, 298, 317, 339, 344, 345, 348, 349, 350, 351, 352, 427, 457, 481, 482], "uniformli": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 109, 380, 395, 482], "normal": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 68, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 237, 270, 271, 275, 276, 280, 281, 297, 301, 304, 305, 325, 326, 348, 352, 364, 365, 379, 382, 397, 433, 436, 452, 457, 459, 465, 468, 476, 482], "drawn": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 256, 293, 348, 352, 464, 475, 476], "set_provisional_n": [33, 34, 38, 43, 51, 52], "temporarili": [33, 34, 38, 43, 51, 52, 99, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 470, 479], "dest": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 241, 266, 268, 351], "to_numpi": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "transformed_in": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 263, 324, 452], "check_spec_encod": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_one_hot": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "hot": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60, 128, 129, 136, 138, 139, 142, 143, 144, 149, 150, 152, 153, 155, 156, 159, 160, 163, 169, 170, 171, 172, 206, 207, 223, 290, 313, 314, 319, 344, 345, 349, 350, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 465], "categ_sampl": [33, 34, 38, 43, 53, 54, 59, 60], "onehot_sampl": [33, 34, 38, 43, 53, 54], "to_one_hot_spec": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "categoricalbox": [33, 34, 38, 43, 53, 54, 59, 60, 158], "type_check": [33, 34, 36, 37, 38, 39, 40, 43, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "update_mask": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "disabl": [33, 34, 35, 38, 42, 43, 47, 51, 52, 53, 54, 55, 59, 60, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 297, 326, 329, 331, 335, 395, 397, 418, 462, 475, 476], "unmask": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "ts": [33, 34, 38, 43, 51, 52, 53, 54, 59, 60], "num_bit": 35, "convert_to_binari": 35, "decim": 35, "1001": 35, "bit": [35, 231, 464, 465, 467, 475, 476, 479], "heavysid": 35, "binary_to_decim": 35, "add_modul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "fn": [35, 42, 47, 55, 64, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 264, 273, 329, 331, 335, 395, 397, 450, 451], "recurs": [35, 39, 40, 42, 47, 48, 55, 65, 66, 72, 74, 77, 90, 91, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397, 466], "init_weight": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "m": [35, 42, 47, 51, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 223, 273, 279, 329, 331, 335, 352, 395, 397, 463, 477], "fill_": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 463, 465], "net": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 284, 286, 289, 292, 307, 329, 331, 335, 362, 363, 365, 371, 378, 382, 383, 384, 385, 395, 397, 448, 463, 477, 478, 481], "in_featur": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 280, 281, 283, 284, 285, 286, 292, 301, 306, 307, 309, 310, 329, 331, 335, 340, 351, 359, 367, 369, 395, 397, 466, 468, 469], "out_featur": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 151, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 277, 280, 281, 283, 284, 285, 286, 291, 292, 296, 300, 301, 303, 306, 307, 309, 310, 329, 331, 335, 340, 344, 351, 359, 367, 369, 395, 397, 457, 462, 465, 466, 468, 469, 472, 481], "bia": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 231, 241, 256, 261, 262, 263, 266, 268, 273, 276, 280, 281, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 307, 309, 310, 317, 329, 331, 335, 351, 358, 360, 361, 365, 380, 385, 395, 397, 458, 462, 463, 464, 465, 476], "requires_grad": [35, 42, 47, 55, 65, 66, 72, 77, 127, 128, 129, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 261, 263, 273, 316, 329, 331, 335, 352, 365, 385, 395, 397], "bfloat16": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "datatyp": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 479], "member": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397, 420], "xdoctest": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 231, 241, 256, 261, 262, 263, 266, 268, 273, 329, 331, 335, 351, 365, 380, 385, 395, 397], "buf": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "20l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397], "1l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397], "5l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397], "doubl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 221, 222, 224, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 367, 372, 377, 383, 386, 395, 397, 398, 462, 463, 464, 465, 482], "eval": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 270, 273, 278, 329, 331, 335, 395, 397, 457, 462, 463, 464], "evalu": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 138, 145, 149, 150, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 218, 263, 273, 278, 288, 304, 305, 313, 326, 329, 331, 335, 383, 395, 397, 443, 444, 463, 464, 472], "dropout": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 278, 279, 294, 296, 298, 300, 301, 329, 331, 335, 395, 397, 457, 465], "batchnorm": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 276, 329, 331, 335, 395, 397], "comparison": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 263, 273, 329, 331, 335, 380, 395, 397, 462, 463], "extra_repr": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "recip": [35, 42, 47, 64, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 308, 311, 312, 315, 317, 320, 321, 323, 328, 329, 331, 335, 343, 345, 347, 350, 355, 358], "get_buff": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "get_submodul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "qualifi": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "referenc": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "resolv": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "someth": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 148, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 455, 463, 464, 477, 482], "get_extra_st": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 329, 331, 335, 395, 397], "set_extra_st": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 329, 331, 335, 395, 397], "picklabl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 329, 331, 335, 395, 397], "get_paramet": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "net_b": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "net_c": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "conv": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 280, 281, 329, 331, 335, 395, 397, 463], "conv2d": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 281, 283, 284, 292, 306, 329, 331, 335, 395, 397], "kernel_s": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 280, 281, 283, 284, 292, 306, 311, 329, 331, 335, 395, 397, 463, 481], "diagram": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "degre": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 219, 273, 329, 331, 335, 395, 397], "named_modul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "half": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397, 462], "ipu": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "strict": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 365, 385, 395, 396, 397, 466], "descend": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "get_swap_module_params_on_convers": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "persist": [35, 42, 45, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 231, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "preserv": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 351, 365, 385, 395, 397], "missing_kei": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "unexpected_kei": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "namedtupl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "l": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 294, 298, 329, 331, 335, 395, 397, 399, 464, 477], "idx": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "mtia": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "named_buff": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "remove_dupl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397], "prepend": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 380, 395, 397, 466], "running_var": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "named_children": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "conv4": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "conv5": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "memo": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "named_paramet": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 233, 273, 329, 331, 332, 335, 380, 395, 397], "register_backward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "removablehandl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "favor": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 273, 329, 331, 335, 395, 397, 464], "register_full_backward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_buff": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "running_mean": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "alongsid": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 456, 471], "num_featur": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 276, 329, 331, 335, 395, 397], "register_forward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 290, 319, 329, 331, 335, 395, 397], "with_kwarg": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "always_cal": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_module_forward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "regardless": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 364, 379, 382, 395, 397], "register_forward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "invok": [35, 42, 47, 55, 65, 66, 68, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "And": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 334, 335, 395, 397, 469], "forward_pr": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_module_forward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "ordinarili": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "grad_input": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "grad_output": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "technic": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 463, 465, 466, 468], "caller": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_module_full_backward_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_full_backward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "backward_pr": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_module_full_backward_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_load_state_dict_post_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "incompatible_kei": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "thrown": [35, 42, 47, 55, 65, 66, 72, 73, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 479], "register_load_state_dict_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "local_metadata": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "error_msg": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "noqa": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "b950": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_modul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 459], "register_paramet": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_state_dict_post_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "register_state_dict_pre_hook": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "keep_var": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 365, 385, 395, 396, 397], "requires_grad_": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 466], "autograd": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397], "freez": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 270, 271, 273, 329, 331, 335, 395, 397], "finetun": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "gan": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "set_submodul": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "share_memori": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 134, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 462], "share_memory_": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397, 481], "destin": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 204, 212, 221, 222, 224, 231, 261, 263, 266, 270, 273, 329, 331, 335, 365, 385, 395, 396, 397, 420], "averag": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 270, 271, 273, 317, 329, 331, 335, 365, 373, 374, 385, 395, 397, 436, 462, 464], "shallow": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 365, 385, 395, 397, 465], "detach": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 231, 261, 263, 273, 329, 331, 335, 365, 376, 380, 385, 387, 395, 397, 400, 401, 402, 403, 462], "non_block": [35, 42, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 396, 397, 465], "memory_format": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "channels_last": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "tri": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397, 471], "pin": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "4d": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "ignore_w": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "1913": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "3420": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "5113": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "2325": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "torch_doctest_cuda1": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "gpu1": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "1914": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "5112": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "2324": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "float16": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 295, 299, 329, 331, 335, 351, 395, 397], "cdoubl": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "3741": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "j": [35, 42, 47, 55, 62, 65, 66, 72, 77, 107, 108, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397, 459, 469], "2382": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "5593": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "4443": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "complex128": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "6122": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "1150": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 217, 241, 256, 262, 263, 266, 268, 273, 329, 331, 335, 351, 395, 397], "to_empti": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "dst_type": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "xpu": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "set_to_non": [35, 42, 47, 55, 65, 66, 72, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 273, 329, 331, 335, 395, 397], "upper": [36, 113, 236], "continuousbox": [36, 39, 85, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 198, 231, 234, 256, 264], "provision": 38, "descript": [39, 142, 171, 178, 209, 463, 464], "akin": 39, "unnam": 39, "compositespec": [39, 454, 477, 482], "constraint": [39, 151, 325, 464, 475, 476], "data_cl": 39, "tensorclass": [39, 61, 63, 70, 84, 94, 95, 96, 97, 101, 103, 123, 184, 396], "pixels_spec": 39, "observation_vector_spec": 39, "composite_spec": 39, "observation_vector": [39, 214, 462], "_nodefault": [39, 40, 48, 74], "is_empti": [39, 40, 48, 74, 477], "include_nest": [39, 40, 48, 74], "leaves_onli": [39, 40, 48, 74], "is_leaf": [39, 40, 48, 74], "_compositespecitemsview": [39, 40, 48, 74], "_compositespeckeysview": [39, 40, 48, 74], "reflect": [39, 40, 48, 74, 138, 159, 160, 204, 231, 269, 380, 395, 441, 463, 464, 465, 476], "lock_": [39, 40, 48, 74], "propag": [39, 40, 48, 74, 362, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 400, 401, 402, 403, 464, 475, 476], "succeed": [39, 40, 48, 74, 231, 264], "pop": [39, 40, 48, 74], "keyerror": [39, 40, 48, 74, 179, 180, 183, 263], "extract": [39, 40, 48, 74, 195, 209, 231, 260, 264, 346, 462, 464, 481], "selected_kei": [39, 40, 48, 74, 250, 462], "unlock_": [39, 40, 48, 74], "_compositespecvaluesview": [39, 40, 48, 74], "multipli": [41, 186, 191, 278, 294, 298, 362, 363, 364, 365, 371, 379, 381, 382, 383, 385, 395, 436, 462, 475], "calcul": [41, 71, 180, 246, 294, 362, 364, 369, 379, 382, 384, 387, 395, 400], "reassign": 42, "reward2go": [42, 454], "reward_key_out": 42, "time_dim": [42, 400, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417], "unrol": [42, 373, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417], "discount": [42, 55, 134, 246, 273, 363, 369, 372, 373, 375, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 458, 463, 464, 475, 476], "lastrewardtotraj": 42, "last_reward_to_traj": 42, "new_tensordict": 42, "is_tdmodule_compat": [42, 65, 77, 329, 331, 335, 395], "reset_out_kei": [42, 65, 77, 329, 331, 335, 395], "orign": [42, 65, 77, 329, 331, 335, 395], "mod": [42, 65, 77, 218, 233, 279, 296, 300, 329, 331, 335, 347, 352, 355, 395, 465, 466, 472], "select_out_kei": [42, 65, 77, 329, 331, 335, 362, 363, 365, 366, 370, 371, 378, 382, 383, 385, 387, 388, 395, 466], "reset_parameters_recurs": [42, 65, 77, 329, 331, 335, 380, 395], "relu": [42, 65, 77, 151, 277, 287, 303, 329, 331, 335, 361], "old_param": [42, 65, 77, 329, 331, 335], "bork": [42, 65, 77, 329, 331, 335], "dork": [42, 65, 77, 329, 331, 335], "reset_paramet": [42, 65, 77, 308, 329, 331, 335], "from_modul": [42, 65, 77, 290, 329, 331, 335, 351, 354, 481], "out_keys_sourc": [42, 65, 77, 329, 331, 335, 395], "rubric": [42, 65, 77, 237, 329, 331, 335, 354, 395], "revert": [42, 65, 77, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 329, 331, 335, 395, 468, 479], "seq": [42, 65, 77, 279, 294, 296, 298, 300, 329, 331, 335, 347, 395, 465, 466, 472, 474], "z": [42, 65, 77, 295, 329, 331, 335, 395], "shift_kei": [44, 46, 56, 75], "is_full_kei": [44, 46, 56, 75], "is_ful": [44, 46, 56, 75], "tempfil": [44, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 95, 96, 97, 101, 110, 184, 396, 448, 462, 463, 465, 466, 470, 475, 478, 479], "register_save_hook": [44, 62, 67, 68, 69, 75, 78, 79, 110], "temporarydirectori": [44, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 95, 96, 97, 110, 184, 396, 462, 463, 465, 466, 470, 475, 478, 479], "tmpdir": [44, 62, 67, 68, 69, 75, 78, 79, 83, 110, 462, 463, 466, 475], "rb_load": [44, 62, 67, 68, 69, 78, 79, 110], "register_load_hook": [44, 62, 67, 68, 69, 78, 79, 110], "filesystem": [45, 479], "ted2nest": [46, 454], "stackedcomposit": [48, 454], "tensordictmap": [50, 454], "observation_kei": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "excluded_kei": [50, 226], "consolid": [50, 77, 91, 103], "lazili": [50, 102, 307, 477], "from_tensordict_pair": [50, 77], "querymodul": [50, 77], "get_keys_from_env": 50, "cattensor": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 462, 474, 477, 482], "unsqueezetransform": [50, 213, 477, 479], "oracl": 50, "obs_kei": 50, "state_kei": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reset_st": 50, "rollout0": 50, "rollout1": 50, "rollout1b": 50, "collaps": 50, "max_length": [50, 61, 63, 64, 80, 83, 84, 94, 191, 195, 260, 466, 472], "valid_path": [50, 84], "assert_clos": 50, "subtre": [50, 84], "intersect": [50, 274], "Or": [50, 164, 165, 306], "rollout_from_path": [50, 84], "plot": [50, 84, 462, 464, 465, 475, 476, 477], "_nestedkei": [50, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "return_nod": 50, "diverg": [50, 192, 233, 348, 352, 374, 379], "endpoint": 50, "r0": [50, 462], "123": [50, 84], "392": [50, 84], "989": [50, 84], "809": [50, 84], "847": [50, 84], "r1": 50, "235": 50, "td_root": [50, 84], "node_data": [50, 84], "node_id": [50, 84], "nontensordata": [50, 57, 96, 130, 155, 156, 191, 195, 231, 260, 264, 418], "_parent": [50, 84], "0x716eeb78fbf0": 50, "0x": 50, "4341220243998689835": 50, "6745467818783115365": 50, "win": [50, 84], "to_str": [50, 84], "node_format_fn": [50, 84], "indent": [50, 84], "rollouts_data": [50, 84], "456": [50, 84], "359": [50, 84], "3094": [50, 84], "75": [50, 84, 115], "948": [50, 84], "68": [50, 84, 115], "9045": [50, 84], "rollout_data": [50, 84], "nvec": [51, 53], "remove_singleton": 51, "ax": [51, 309, 310, 475], "Not": [51, 52, 69, 128, 129, 143, 261, 296, 300], "neither": [51, 52, 53, 54, 169, 477], "use_regist": [53, 59], "mone_hot": [53, 54], "boxlist": [53, 54], "gamma": [55, 246, 273, 303, 362, 363, 365, 366, 367, 369, 371, 372, 373, 375, 378, 380, 382, 383, 384, 385, 387, 388, 389, 390, 395, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 448, 458, 462, 463, 464, 475, 476, 481], "sutton": [55, 458, 475, 476], "1988": 55, "tempor": [55, 296, 300, 303, 401, 402, 407, 408], "44": [55, 115], "ahead": [55, 273, 482], "bias": [55, 294, 295, 298, 299, 358, 458, 462], "mitig": [55, 213], "multisteptransform": [55, 454], "99": [55, 246, 270, 303, 375, 390, 399, 406, 448, 462, 463, 464, 466, 469, 472, 475, 476, 481], "nontermin": 55, "original_reward": 55, "newli": [55, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "OR": 55, "row": [56, 76, 143, 144, 234], "example_data": [57, 96, 183, 186, 191], "conform": 57, "templat": [57, 96, 179, 180, 183, 194, 421], "randomli": [57, 114, 168, 236, 237, 256, 293, 348, 352, 468, 475, 476, 477, 479], "unidimension": 59, "action_valu": [59, 289, 290, 319, 344, 345, 349, 350, 365, 371, 380, 395, 398, 457, 465, 466, 468, 472], "keepdim": 59, "chosen_action_valu": [59, 318, 319, 327, 349, 350, 398, 457, 465, 468], "priori": 59, "uniqu": [59, 84, 115, 116, 145, 149, 150, 185, 187, 213, 225, 255, 256, 257, 261, 347, 427, 470, 479], "tensor_spec": [59, 162, 205, 207, 370, 371, 382, 384], "one_hot_sampl": [59, 60], "chosen_data": [61, 94], "rewarddata": [61, 94, 454], "rejected_data": [61, 94], "copy_exist": [61, 63, 70, 84, 95, 96, 97, 184, 396], "return_earli": [61, 63, 70, 84, 95, 96, 97, 184, 396], "share_non_tensor": [61, 63, 70, 84, 95, 96, 97, 184, 396], "memmap": [61, 63, 70, 84, 95, 96, 97, 101, 157, 166, 184, 270, 396, 420, 422, 435], "dataclass": [61, 63, 70, 82, 84, 95, 96, 97, 184, 380, 396], "from_dataset": [61, 63, 94], "dataset_nam": [61, 63, 71, 83, 94, 154], "550": [61, 63, 71, 83, 94, 115, 116], "root_dir": [61, 63, 83, 94], "from_disk": [61, 63, 83, 94], "carperai": [61, 63, 71, 83], "openai_summarize_comparison": [61, 63, 83], "load_from_disk": [61, 63, 83, 94], "load_dataset": [61, 63, 83, 94], "92534": 61, "input_id": [61, 63, 64, 70, 71, 80, 83, 94, 145, 186, 187], "end_scor": [61, 70, 71, 94], "sub_data": [61, 63], "from_tensordict": [61, 63, 70, 84, 95, 96, 97, 184, 396], "non_tensordict": [61, 63, 70, 84, 95, 96, 97, 184, 396], "getattr": [61, 63, 70, 84, 95, 96, 97, 184, 396], "load_memmap": [61, 63, 70, 84, 95, 96, 97, 184, 396], "load_": [61, 63, 70, 84, 95, 96, 97, 184, 396], "load_memmap_": [61, 63, 70, 84, 95, 96, 97, 184, 396], "fromkei": [61, 63, 70, 84, 95, 96, 97, 184, 396], "saved_td": [61, 63, 70, 84, 95, 96, 97, 184, 396], "td_load": [61, 63, 70, 84, 95, 96, 97, 184, 396], "fake": [61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 396, 462, 463, 466], "_subclass": [61, 63, 70, 84, 95, 96, 97, 184, 396], "faketensormod": [61, 63, 70, 84, 95, 96, 97, 184, 396], "faketensor": [61, 63, 70, 84, 95, 96, 97, 184, 396], "from_flatten": [61, 63, 70, 84, 95, 96, 97, 184, 396], "attemptedli": [61, 63, 70, 84, 95, 96, 97, 184, 396], "existsok": [61, 63, 70, 84, 95, 96, 97, 101, 184, 396], "mimic": [61, 63, 70, 84, 95, 96, 97, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 184, 186, 187, 188, 396], "cross": [61, 63, 70, 84, 95, 96, 97, 184, 277, 396], "tensordictfutur": [61, 63, 70, 84, 95, 96, 97, 184, 396], "serialis": [61, 63, 70, 84, 95, 96, 97, 184, 396], "deepli": [61, 63, 70, 84, 95, 96, 97, 184, 396], "memmap_": [61, 63, 70, 84, 95, 96, 97, 184, 270, 396], "memmap_lik": [61, 63, 70, 84, 95, 96, 97, 184, 396], "contentless": [61, 63, 70, 84, 95, 96, 97, 184, 396], "1_000_000": [61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 95, 96, 97, 110, 115, 184, 396, 462, 465, 475], "alloc": [61, 63, 70, 84, 95, 96, 97, 103, 184, 288, 304, 305, 396, 456, 462], "memmap_refresh_": [61, 63, 70, 84, 95, 96, 97, 184, 396], "refresh": [61, 63, 70, 84, 95, 96, 97, 184, 396, 472, 475, 476], "saved_path": [61, 63, 70, 84, 95, 96, 97, 184, 396], "setattr": [61, 63, 70, 84, 95, 96, 97, 184, 396], "tent": [61, 63, 70, 83, 84, 95, 96, 97, 184, 396], "to_tensordict": [61, 63, 70, 84, 95, 96, 97, 184, 396, 465], "retain_non": [61, 63, 70, 84, 95, 96, 97, 184, 396], "discrard": [61, 63, 70, 84, 95, 96, 97, 184, 396], "alpha": [62, 78, 107, 108, 280, 281, 283, 284, 285, 286, 292, 306, 363, 365, 371, 381, 383, 385, 387, 462, 479, 481], "ep": [62, 78, 107, 108, 237, 270, 271, 276, 317, 364, 386, 395, 436, 458, 462, 463, 465, 466, 469, 472], "1e": [62, 78, 107, 108, 237, 270, 271, 276, 288, 291, 324, 462, 463, 464, 476], "08": [62, 78, 107, 108], "pin_memori": [62, 69, 78, 79, 240, 462, 481], "schaul": [62, 107, 108], "quan": [62, 107, 108], "antonogl": [62, 107, 108], "silver": [62, 107, 108], "2015": [62, 107, 108, 218], "ab": [62, 107, 108, 128, 129, 131, 132, 143, 144, 149, 150, 152, 153, 163, 171, 172, 212, 241, 266, 270, 276, 282, 287, 291, 292, 298, 303, 310, 311, 312, 318, 320, 321, 327, 362, 363, 367, 368, 369, 370, 373, 374, 375, 377, 378, 381, 382, 385, 478], "1511": [62, 107, 108, 292], "05952": [62, 107, 108], "expon": [62, 78, 107, 108], "\u03b1": [62, 78, 107, 108], "delta": [62, 78, 107, 108, 294, 298, 324, 348, 352, 454, 458, 475], "1_000": [62, 69, 78, 79, 475, 479], "mini": [62, 69, 78, 79, 476], "decid": [62, 69, 78, 79, 475, 481], "incompat": [62, 69, 78, 79, 384, 479], "drop_last": [62, 69, 78, 79, 114, 116], "notion": [62, 69, 78, 79, 316], "caution": [62, 69, 78, 79, 114, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 482], "codebas": [62, 69, 78, 79, 477], "return_info": [62, 67, 68, 69, 78, 79, 107, 108, 110, 479], "tensordictprioritizedreplaybuff": [62, 454, 481], "_weight": [62, 78, 107, 108], "update_prior": [62, 107, 108, 435, 459, 463, 479, 481], "36278465": 62, "invert": [62, 67, 68, 69, 78, 79, 110, 360, 464], "as_remot": [62, 67, 68, 69, 78, 79, 110], "cl": [62, 67, 68, 69, 78, 79, 110, 463], "quantiti": [62, 67, 68, 69, 78, 79, 110], "reserv": [62, 67, 68, 69, 78, 79, 110, 459], "default_remote_class_config": [62, 67, 68, 69, 78, 79, 110], "randomsampl": [62, 67, 68, 69, 78, 79, 110, 462, 475], "td_error": [62, 67, 68, 69, 78, 79, 110, 365, 366, 367, 369, 370, 371, 372, 378, 380, 383, 385, 387, 388, 395, 398, 462, 479, 481], "update_tensordict_prior": [62, 67, 68, 69, 78, 79, 110, 462, 479, 481], "insert_transform": [62, 67, 68, 69, 78, 79, 110, 179, 180, 183, 208, 263], "insert": [62, 67, 68, 69, 78, 79, 100, 110, 111, 121, 122, 125, 126, 179, 180, 183, 208, 213, 217, 253, 263, 265], "set_sampl": [62, 67, 68, 69, 78, 79, 110], "set_storag": [62, 67, 68, 69, 78, 79, 110], "set_writ": [62, 67, 68, 69, 78, 79, 110], "prompt_rindex": [63, 64, 71], "promptdatatldr": 63, "116722": 63, "prompt": [64, 71, 96, 178, 181, 185, 186, 191, 193, 397, 456], "return_tensordict": [64, 80], "tensodict": [64, 80], "valid_sampl": 64, "eough": 64, "toknen": 64, "meet": 64, "criterion": 64, "autotoken": [64, 80, 83, 96, 178, 179, 180, 182, 183, 190, 193, 331, 335, 456], "from_pretrain": [64, 71, 80, 145, 178, 180, 183, 187, 193, 331, 456], "enough": [64, 479], "inde": [64, 223, 464, 466, 477], "index_kei": [65, 77], "hash_kei": 65, "_hash": 65, "hash_modul": [65, 72, 77], "siphash": [65, 66, 77, 145, 187], "hash_to_int": 65, "hashtoint": 65, "query_modul": [65, 77], "key1": [65, 77, 214, 253, 429, 437, 481], "key2": [65, 77, 214, 253, 429, 437, 481], "write_hash": 65, "n_compon": 66, "dtype_cast": 66, "as_tensor": [66, 72, 466], "init_method": 66, "emb": [66, 465], "sklearn": [66, 154], "byte": [66, 72, 181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397], "builtin": [66, 72], "pythonhashse": [66, 72], "todo": [66, 192, 397], "optiona": 67, "transform_factori": [67, 69, 78, 79], "asyncio": [67, 127], "ray_buff": 67, "object_store_memori": 67, "600": [67, 71], "await": 67, "invoc": 68, "friendli": [68, 462], "include_info": [68, 78, 79], "storagecheckpointerbas": [69, 117], "roundrobinwrit": 69, "_pytre": [69, 479], "tree_map": [69, 479], "assert0": [69, 479], "ref_model": 71, "reward_model": [71, 357], "max_new_token": 71, "score_clip": 71, "kl_schedul": 71, "klcontrollerbas": 71, "num_step": [71, 466], "causal": 71, "sentenc": [71, 182], "frozen": [71, 192, 233, 270, 271], "gpt2rewardmodel": 71, "get_dataload": [71, 454], "promptdata": [71, 454], "gpt2lmheadmodel": 71, "dl": [71, 191], "block_siz": [71, 94], "tensorclass_typ": [71, 94], "openai_summarize_tldr": 71, "config_class": 71, "model_path": 71, "rollout_from_model": 71, "rollout_from_data": 71, "reward_kl": [71, 233], "reward_raw": 71, "sample_log_prob": [71, 233, 340, 341, 342, 348, 352, 354, 382], "create_rollout_td": 71, "log_prob": [71, 97, 192, 288, 304, 305, 313, 316, 326, 331, 335, 352, 365, 458], "log_ratio": 71, "replic": [71, 458], "rindex": 71, "eo": 71, "generation_config": 71, "generationconfig": 71, "ti": [71, 409, 410, 411, 412, 414, 415, 416, 417, 463], "log_probs_gen": 71, "logprobs_of_label": 71, "hash_a": 72, "4669941682990263259": 72, "3778166555168484291": 72, "9122128731510687521": 72, "hash_b": 72, "heterogen": [73, 74, 102, 127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 306, 307, 462, 463], "220": 75, "resembl": 77, "tensormap": 77, "collat": [77, 110, 179, 180, 183], "subtyp": 77, "embedding_storag": 77, "tensor_dict_storag": 77, "new_index": 77, "key3": 77, "retrieve_valu": 77, "storage_constructor": 77, "write_fn": 77, "tensordictstorag": 77, "thumb": [77, 157, 464], "lazydynamicstorag": 77, "fixedstorag": 77, "randomprojectionhash": 77, "priority_kei": [78, 79, 107, 365, 367, 370, 371, 372, 378, 380, 383, 385, 387, 388, 395, 398, 479, 481], "reduct": [78, 107, 108, 121, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 381, 382, 383, 384, 385, 387, 388, 395], "prioritizedreplaybuff": [78, 454, 481], "min": [78, 107, 108, 121, 317, 363, 364, 365, 371, 381, 383, 385, 395, 463, 464], "median": [78, 107, 108, 121, 137, 143, 144, 188, 206, 348, 352], "huggingfac": [80, 185, 346], "co": [80, 185, 225, 477], "pad_trunc": 80, "am": 80, "me": 80, "reassur": 80, "ok": 80, "_encode_memo_dict": 82, "primarili": [82, 242, 468], "educ": 82, "guess": 82, "knowledg": [82, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 469, 471], "tokenizer_fn": 83, "tensordicttoken": [83, 454], "pre_tokenization_hook": 83, "valid_s": 83, "tokenizer_class": 83, "tokenizer_model_nam": 83, "tokein": 83, "elementwis": 83, "vocabulari": [83, 145, 186, 187, 195, 260], "loader": [83, 464], "185068": 83, "dataset_to_tensordict": 83, "data_dir": 83, "batch_dim": [83, 127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 452], "valid_mask_kei": 83, "batch_dimens": 83, "filder": 83, "from_dict": [83, 191], "data_memmap": 83, "ref": 84, "branching_act": 84, "prev_act": 84, "edg": [84, 466], "travers": 84, "breadth": 84, "bf": 84, "fully_expand": 84, "get_vertex_by_hash": 84, "get_vertex_by_id": 84, "is_termin": 84, "make_nod": 84, "node_observ": 84, "bag": 84, "num_children": 84, "num_vertic": 84, "count_repeat": 84, "recustruct": 84, "plotli": 84, "make_label": 84, "visual": [84, 241, 266, 268, 420, 464, 475, 477], "unsupport": 84, "selected_act": 84, "mctsforest": [84, 145, 187, 454], "key_typ": 84, "recurse_through_entri": 91, "recurse_through_stack": 91, "infinit": [94, 149, 150, 171, 172, 271, 470, 479], "block": [94, 100, 126, 142, 183, 193, 456, 457, 462, 465, 466, 469, 470, 475, 479], "pairwisedataset": [94, 454], "audio": 95, "function_cal": 95, "_wrap_td_method": 95, "wrapped_func": 95, "0x7f0158f231f0": 95, "mime_typ": 95, "function_nam": 95, "function_arg": 95, "contentbas": [96, 454], "tool_cal": 96, "tool_respons": [96, 193, 456], "apply_chat_templ": [96, 178, 193, 456], "autoprocessor": 96, "add_generation_prompt": 96, "chat_templ": [96, 194], "continue_final_messag": 96, "return_tensor": 96, "pt": [96, 422, 459], "return_dict": 96, "chat": [96, 178, 179, 180, 183, 193, 194, 456], "pretrainedtoken": [96, 178, 189, 331, 335], "messag": [96, 456], "default_spec": 96, "set_list_to_stack": [96, 178, 183, 193, 456], "foo": [96, 101, 103, 123, 343, 479, 482], "token_list": 97, "tokens_response_list": 97, "checkpoint_fil": 99, "h5": 99, "h5_kwarg": 99, "iff": 99, "suffix": [99, 433], "h5py": 99, "create_dataset": 99, "consequ": [99, 298, 470], "immut": [100, 127, 130, 133, 137, 145, 157, 161, 166, 167, 178, 179, 180, 183, 186, 187, 188, 244, 263], "scratch_dir": [101, 462, 463, 465, 470, 475, 478, 479], "sent": [101, 103, 123, 270], "mistak": [101, 103, 123], "overewritten": 101, "tensorstoragecheckpoint": 101, "pathlib": [101, 438, 466], "main_ckpt_dir": 101, "rb_memmap": 101, "10_000_000": 101, "myclass": [101, 103, 123], "attach": [101, 102, 103, 104, 117, 119, 123, 463], "entiti": [101, 102, 103, 104, 117, 119, 123, 178], "lazystacktensordict": 102, "heterougen": 102, "linearli": 102, "densifi": 102, "unlimit": [102, 104], "st": 102, "expans": [103, 380, 395], "zero_": [103, 123, 198, 332], "liststoag": 105, "max_capac": [107, 108, 462, 479], "max_priority_within_buff": [107, 108], "data_0": 107, "data_1": 107, "smoothen": 107, "tdrb": 107, "pack": [107, 294, 298, 464, 467, 482], "nd": [107, 108], "1d": [107, 108, 115, 116, 121], "sum_tre": [107, 108], "min_tre": [107, 108], "slice_len": [108, 115, 116, 420], "end_kei": [108, 115, 116], "cache_valu": [108, 115, 116], "closer": [108, 481], "readili": [108, 115, 116, 352], "conjunct": [108, 115, 116, 463], "Will": [108, 115, 152, 420], "buffer0": [108, 115], "immutablewrit": [108, 115], "buffer1": [108, 115], "other_sampl": [108, 115], "shorter": [108, 115, 116], "short": [108, 115, 116, 127, 128, 129, 130, 133, 137, 143, 144, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 298, 299, 463, 464, 467, 468, 476, 479], "Be": [108, 115, 116], "fewer": [108, 115], "tolist": 108, "120110917137936e": 108, "06": [108, 288, 324], "storageensembl": [110, 113], "samplerensembl": 110, "writerensembl": [110, 119], "sample_from_al": [110, 113], "num_buffer_sampl": [110, 113], "ensembl": [110, 113, 119, 120, 126, 351, 383], "forbidden": 110, "0x13a2ef430": 110, "0x13a2f9310": 110, "interpol": [110, 245, 463, 466], "interpolationmod": 110, "bilinear": [110, 245], "0x13a2f9220": 110, "0x13a2f9f70": 110, "0x13a2d9b50": 110, "0x13a2f95b0": 110, "0x128648260": 110, "roundrobin": [111, 122], "buffer_id": [113, 119], "shuffl": [114, 116, 476], "incomplet": [114, 116], "fresh": 114, "haven": [114, 478], "remain": [114, 192, 212, 222, 223, 233, 255, 310, 469], "draw": [114, 293], "use_gpu": [115, 116], "slicesamplerwithoutreplac": [115, 479], "acceler": [115, 116, 137, 188, 475, 476], "reconstruct": [115, 116, 374, 462, 482], "ep_1": [115, 116], "ep_2": [115, 116], "73": 115, "74": 115, "76": 115, "77": 115, "42": [115, 301, 316, 362, 363, 365, 366, 370, 378, 385], "43": 115, "45": 115, "67": [115, 474], "69": 115, "70": 115, "71": 115, "27": [115, 116, 128, 129, 157, 166, 218], "28": [115, 116, 306], "31": [115, 143, 144], "80": [115, 128, 129], "82": 115, "83": 115, "84": [115, 245, 465, 466], "78": 115, "79": 115, "320": [115, 116, 131, 132], "700": [115, 116], "dataid": [115, 116], "available_dataset": [115, 116], "counter": [116, 218, 261, 347, 431, 459, 466], "23": [116, 218, 274], "request": [116, 210, 242], "51": 116, "__len__": 117, "rank_kei": 121, "samplerwithoutreplac": [121, 464, 476, 479], "get_insert_index": 121, "themselv": [127, 278, 463], "dens": [127, 304, 305], "maybe_dens": 127, "min_get": [127, 161, 167], "maker": [127, 452, 463], "sort": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 214, 317], "another_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "discretebox": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "mutabl": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "action_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 476], "had": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 468, 470], "all_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "any_don": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "loc": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188, 233, 237, 248, 270, 271, 297, 325, 326, 340, 341, 342, 348, 352, 354, 362, 363, 365, 378, 382, 383, 384, 385, 442, 452, 457, 462, 463, 464, 465, 468, 476, 481], "_callabletransform": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 186, 187, 188], "auto_specs_": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "action_spac": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 225, 290, 319, 344, 345, 349, 350, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 465, 466, 468, 472], "check_dtyp": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188], "discrep": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 362, 364, 366, 367, 379, 382, 384, 398], "broken": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188], "rng": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 173, 178, 179, 180, 183, 186, 187, 188, 477], "done_keys_group": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "another_don": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "done_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "empty_cach": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 263], "env_batch_s": [127, 161, 167], "fake_tensordict": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 463, 466], "envnam": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_action_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 475, 476], "full_done_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_observation_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_reward_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "pipeline_st": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "full_state_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "input_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "is_spec_lock": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "maybe_reset": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "speak": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 219, 352, 462], "observation_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "output_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "register_gym": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 467], "entry_point": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "info_kei": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reward_threshold": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "nondeterminist": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "max_episode_step": [127, 130, 133, 136, 137, 138, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "order_enforc": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "autoreset": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "disable_env_check": [127, 130, 133, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "apply_api_compat": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "nasium": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 201], "dmcontrolenv": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 420, 454, 462, 467, 474, 482], "dmc": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "cheetah": [127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 420, 462], "removeemptyspec": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "threshold": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 293, 363, 364, 395, 464], "learnt": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 448], "checker": [127, 130, 133, 136, 137, 145, 152, 153, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "stepapicompat": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "deem": [127, 130, 133, 137, 145, 149, 150, 157, 158, 161, 166, 167, 168, 171, 172, 178, 179, 180, 183, 186, 187, 188], "task_nam": [127, 130, 131, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "envgym": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0855": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0215": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0881": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0412": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "1101": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0080": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0254": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0424": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "veloc": [127, 130, 131, 132, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 475, 476, 477, 482], "9609e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "9776e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "04": [127, 130, 133, 137, 141, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258, 271], "6347e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "3842e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5338e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "3064e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0381e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "6656e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258, 276, 477], "0204e": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0833": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0275": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0612": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0770": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "1256": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0082": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0186": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0476": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "2221": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "2256": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5930": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "6937": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5865": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5479": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0187": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "6825": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "5224": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0018": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "1005": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0335": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 219], "0268": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0133": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0627": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0074": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0488": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0353": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0075": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0069": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0098": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0058": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0033": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0157": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0004": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 258], "0381": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0452": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "11355747": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "04257728": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "00408397": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "04155852": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0389733": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "01409826": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0978704": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "08808327": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "03970837": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "00535434": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "02353762": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05116226": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "02788907": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "06848346": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05154399": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "0371798": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "05128025": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "dydact": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "ant": [127, 128, 129, 130, 133, 137, 140, 142, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 478], "gym_env": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 481], "reset_kei": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 213, 249, 255, 256, 257, 475], "multitask": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "multiag": [127, 130, 133, 137, 145, 148, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 307, 318, 327, 364, 379, 382, 398], "another_reward": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "reward_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "auto_cast_to_devic": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 476], "soon": [127, 130, 133, 137, 145, 157, 158, 159, 160, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "__sort": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "as__": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "categorical_action_encod": [127, 128, 129, 130, 133, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 157, 158, 161, 163, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 201, 218, 466], "argmaxmodul": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "argmax": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 290, 319, 345, 350, 466, 468], "n_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 233, 362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 469], "ourselv": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 464, 482], "emul": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "epoch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 438, 464, 475, 476], "input_td": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "rollout_td": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "state_spec_unbatch": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "prevail": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 205, 214, 249], "next_tensordict": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204, 210, 214, 226, 227, 228, 240, 243, 244, 250, 253, 266, 270], "precomput": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188], "_stepmdp": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204], "exclude_act": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 204], "minim": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 422, 479], "reset_data": [127, 130, 133, 137, 145, 157, 158, 161, 166, 167, 168, 178, 179, 180, 183, 186, 187, 188, 456, 482], "googl": [128, 129, 149, 150, 155, 156, 183, 185, 276, 464, 465, 475, 476], "convers": [128, 129, 143, 144, 180, 183, 201, 456, 458], "2106": [128, 129, 368, 387], "13281": [128, 129], "frame_skip": [128, 129, 131, 132, 136, 137, 138, 139, 143, 144, 146, 147, 152, 153, 163, 188, 229, 431, 433, 441, 459, 462, 463, 464, 481], "allow_done_after_reset": [128, 129, 131, 132, 133, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170], "toler": [128, 129, 131, 132, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 163, 169, 170, 288, 324], "is_avail": [128, 129, 462, 463, 464, 465, 475, 476, 478], "87": [128, 129], "acrobot": [128, 129, 131, 132, 482], "advant": [128, 129, 143, 144], "timer": [128, 129, 137, 143, 144, 188], "timeit": [128, 129, 143, 144, 466], "310": [128, 129], "ms": [128, 129, 143, 144], "268": [128, 129], "433": [128, 129], "213": [128, 129], "8605": [128, 129], "pipelineenv": 129, "get_environ": 129, "san": 130, "fen": [130, 155, 156], "pgn": 130, "legal": 130, "board": [130, 168], "include_san": 130, "algebra": [130, 477], "notat": 130, "include_fen": 130, "forsyth": 130, "edward": 130, "include_pgn": 130, "portabl": [130, 471], "include_legal_mov": 130, "include_hash": 130, "mask_act": 130, "subset": [130, 477, 478], "29275": 130, "rnbqkbnr": [130, 155, 156], "pppppppp": [130, 155, 156], "kqkq": [130, 155, 156], "legal_mov": 130, "219": 130, "5p2": 130, "ppppp1pp": 130, "event": [130, 304, 305, 313, 409, 410, 411, 412, 414, 415, 416, 417, 479], "white": 130, "f4": 130, "96": 130, "kq": 130, "5n2": 130, "rnbqkb1r": 130, "nf3": 130, "na6": 130, "c4": 130, "f6": 130, "h4": 130, "rb8": 130, "na3": 130, "ra": 130, "get_legal_mov": 130, "uci": 130, "dm_control": [131, 132, 462, 474, 482], "2006": [131, 132, 218, 363, 369], "12983": [131, 132], "240": [131, 132, 481], "swingup": [131, 132, 482], "swingup_spars": [131, 132], "ball_in_cup": [131, 132], "catch": [131, 132, 466], "balance_spars": [131, 132], "three_pol": [131, 132], "two_pol": [131, 132], "finger": [131, 132], "turn_easi": [131, 132], "turn_hard": [131, 132], "fish": [131, 132], "upright": [131, 132, 463], "swim": [131, 132], "hopper": [131, 132], "hop": [131, 132], "humanoid": [131, 132, 157, 166, 474], "walk": [131, 132, 157, 166, 463, 474], "run_pure_st": [131, 132], "bring_bal": [131, 132], "bring_peg": [131, 132], "insert_bal": [131, 132], "insert_peg": [131, 132], "point_mass": [131, 132], "reacher": [131, 132], "swimmer": [131, 132], "swimmer6": [131, 132], "swimmer15": [131, 132], "walker": [131, 132], "dog": [131, 132], "trot": [131, 132], "humanoid_cmu": [131, 132], "lqr": [131, 132], "lqr_2_1": [131, 132], "lqr_6_2": [131, 132], "quadrup": [131, 132], "escap": [131, 132], "stacker": [131, 132], "stack_2": [131, 132], "stack_4": [131, 132], "deviceless": 133, "run_type_check": [133, 151], "hint": 133, "counterenv": 133, "creator": [134, 443, 444, 450, 451, 452], "substitut": [134, 255, 270, 468], "vecnorm": [134, 271, 452], "env_creat": [134, 462], "test_env1": 134, "_td": [134, 373], "observation_count": [134, 482], "test_env2": 134, "ps": 134, "p1": 134, "p2": 134, "9934": 134, "make_vari": [134, 261], "variant": [134, 261, 278, 457], "trajcount": 134, "env_creator_pendulum": 134, "env_creator_cartpol": 134, "env_str": 135, "device_map": 135, "registri": [136, 169], "asyncvectorenv": 136, "pixel_observ": [136, 138, 139, 163], "pixelobservationwrapp": [136, 138, 139, 163], "adventur": [136, 138], "airraid": [136, 138, 482], "alien": [136, 138], "time_limit": 136, "timelimit": [136, 149, 150, 171, 172], "default_info_dict_read": [136, 137, 138, 157, 188], "reader": [136, 137, 138, 157, 188, 463], "set_info_dict_read": [136, 137, 138, 157, 188, 467], "info_dict": [136, 137, 138, 157, 188], "gymlikeenv": [136, 138, 188, 454], "auto_register_info_dict": [136, 137, 138, 157, 188], "multibinari": [136, 138], "multidiscret": [136, 138], "rag": [136, 138], "gym_conversion_exampl": [136, 138], "info_dict_read": [137, 157, 188], "ignore_priv": [137, 188], "baseinfodictread": [137, 188], "tensordictprim": [137, 157, 188, 279, 296, 300, 359, 457, 465], "succe": [137, 157, 188], "underscor": [137, 188], "primer": [137, 186, 188, 191, 256, 279, 296, 300, 359, 465], "halfcheetah": [137, 157, 188, 206, 245, 462, 481], "reward_ctrl": [137, 157, 188], "reward_run": [137, 157, 188], "x_posit": [137, 157, 188], "x_veloc": [137, 157, 188], "raise_if_clos": [137, 188], "fast_encod": [137, 188], "memoize_cach": [137, 188], "adaptive_autorang": [137, 188], "4f": [137, 188, 464, 465, 477], "fp": [137, 188, 420, 425, 427], "10141": [137, 188], "5742fp": [137, 188], "10576": [137, 188], "8388fp": [137, 188], "read_act": [137, 188], "read_don": [137, 188], "nonsens": [137, 188], "fallback": [137, 188], "read_ob": [137, 188], "dictat": [137, 188, 234, 348, 352, 382, 462, 477], "read_reward": [137, 188], "hoc": [137, 157, 188, 468], "dict_read": [137, 188], "my_info_kei": [137, 188], "some_env": [137, 188], "vecenv": 138, "vectorenv": 138, "convert_actions_to_numpi": 138, "missing_obs_valu": [138, 269], "vecgymenvtransform": 138, "secur": 139, "habitat3": 139, "ai": [139, 478], "habitatrenderpick": 139, "isaacgym": [140, 141], "isaacgymwrapp": [140, 454], "isaacgymenv": [141, 454], "webpag": 141, "isaac": [141, 142], "essenc": [141, 467], "scripts_isaaclab": 142, "managerbasedrlenv": 142, "app": 142, "applaunch": 142, "argpars": [142, 449, 452], "parser": [142, 182, 449, 452], "argumentpars": 142, "add_app_launcher_arg": 142, "args_cli": 142, "hydra_arg": 142, "parse_known_arg": 142, "app_launch": 142, "isaaclab_task": 142, "f401": 142, "manager_bas": 142, "ant_env_cfg": 142, "antenvcfg": 142, "isaac_lab": 142, "cfg": [142, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452], "instadeepai": [143, 144], "2306": [143, 144, 271], "09884": [143, 144], "snake": [143, 144, 180], "grid": [143, 144, 420], "bodi": [143, 144], "body_st": [143, 144], "fruit_posit": [143, 144], "col": [143, 144], "head_posit": [143, 144], "tail": [143, 144], "game2048": [143, 144], "maze": [143, 144], "cleaner": [143, 144], "cvrp": [143, 144], "multicvrp": [143, 144], "minesweep": [143, 144], "rubikscub": [143, 144], "knapsack": [143, 144], "sudoku": [143, 144], "tsp": [143, 144], "connector": [143, 144], "v2": [143, 144, 164, 165, 391, 409, 410, 411, 412, 414, 415, 416, 417, 465], "mmst": [143, 144], "graphcolor": [143, 144], "partli": [143, 144], "scrambl": [143, 144], "robotwarehous": [143, 144], "tetri": [143, 144], "binpack": [143, 144], "jobshop": [143, 144], "0x1fca91910": 143, "122": [143, 144, 482], "0x1ff9baee0": 143, "134": [143, 144], "0x1ff9ba7c0": 143, "172": [143, 144], "jit": 144, "eager": 144, "tdreset": [144, 273, 474], "whichev": 144, "overview": [145, 187, 464, 466, 469, 475, 476, 481], "vocab_s": [145, 186, 187], "hashing_modul": [145, 187], "text_output": [145, 187], "decod": [145, 187, 199, 311, 331, 335], "batch_decod": [145, 187], "text_kei": [145, 187], "gpt2token": [145, 187], "make_tensordict": [145, 187], "mo": [146, 147], "minecart": [146, 147], "mo_gym": [147, 234], "qualnam": 148, "neural": [148, 159, 160, 280, 281, 314, 316, 322, 351, 400, 457, 463, 464, 465, 468, 475, 476, 477, 482], "group_map": [148, 149, 150, 155, 156, 159, 160, 169, 170, 171, 172, 174, 475], "constructiuon": [148, 159, 160], "premad": [148, 149, 150, 159, 160, 171, 172, 398], "all_in_one_group": [148, 155, 156, 174], "agent_0": [148, 159, 160, 169, 174, 253], "agent_1": [148, 159, 160, 169, 174, 253], "agent_2": [148, 159, 160, 169, 174], "agent_3": [148, 169], "one_group_per_ag": [148, 159, 160], "meltingpot": [149, 150], "2211": [149, 150], "13746": [149, 150], "melt": [149, 150], "pot": [149, 150], "novel": [149, 150, 469], "social": [149, 150], "familiar": [149, 150, 463, 476, 482], "unfamiliar": [149, 150], "broad": [149, 150], "cooper": [149, 150, 475, 476], "decept": [149, 150], "reciproc": [149, 150], "stubborn": [149, 150], "substrat": [149, 150], "ml_collect": 149, "config_dict": 149, "configdict": 149, "categorical_act": [149, 150, 155, 156, 159, 160, 164, 165, 169, 170, 171, 172], "marlgroupmaptyp": [149, 150, 155, 156, 159, 160, 169, 170, 171, 172, 174, 454, 475], "agent_nam": [149, 150, 171, 172, 174], "agent_names_to_indices_map": [149, 150, 171, 172], "env_torchrl": [149, 150], "commons_harvest__open": [149, 150], "rgb": [149, 150], "144": [149, 150], "192": [149, 150], "collective_reward": [149, 150], "ready_to_shoot": [149, 150], "88": [149, 150, 164, 165], "substrate_config": 150, "get_config": 150, "mp_env": 150, "build_from_config": 150, "default_player_rol": 150, "mymbenv": [151, 277, 303], "world_model": [151, 277, 303, 374], "hidden_observ": [151, 277, 303], "mlp": [151, 277, 280, 281, 283, 284, 285, 286, 292, 296, 300, 303, 307, 308, 340, 344, 359, 367, 369, 457, 463, 466, 468, 469, 472, 474, 478, 481], "worldmodelwrapp": [151, 277, 303], "activation_class": [151, 277, 280, 281, 283, 284, 285, 286, 291, 292, 301, 303, 306, 307, 463, 468, 475, 476, 481], "activate_last_lay": [151, 277, 286, 301, 303], "sail": [152, 153], "sg": [152, 153], "2206": [152, 153], "10558": [152, 153], "readthedoc": [152, 155, 156], "en": [152, 155, 156], "python_interfac": 152, "envpoolmixin": 153, "env_bas": 153, "task_id": 153, "env_typ": 153, "gym_reset_return_info": 153, "envpool_env": 153, "www": [154, 304, 305], "fetch_openml": 154, "adult_num": 154, "adult_onehot": 154, "mushroom_num": 154, "mushroom_onehot": 154, "covertyp": 154, "shuttl": 154, "magic": [154, 466, 467], "106": 154, "openspiel": [155, 156], "open_spiel": [155, 156], "game_str": 155, "return_st": [155, 156, 159, 160], "4672": [155, 156], "current_play": [155, 156], "674": 155, "2048": [155, 156], "add_nois": [155, 156], "amazon": [155, 156], "backgammon": [155, 156], "restor": [155, 156], "td_restor": [155, 156], "pyspiel": 156, "load_gam": 156, "new_initial_st": 156, "3009": 156, "my_env_fun": [157, 166], "custom_attribute_list": [157, 166], "custom_attribut": [157, 166], "custom_method_list": [157, 166], "custom_method": [157, 166], "deploi": [157, 166, 210, 466], "slight": [157, 166, 463], "share_individual_td": [157, 166], "shared_memori": [157, 166], "policy_proof": [157, 166], "ll": [157, 166, 218, 294, 295, 298, 299, 462, 463, 464, 465, 467, 468, 469, 470, 472, 476, 482], "hidden": [157, 166, 212, 283, 291, 294, 295, 296, 298, 299, 300, 311, 312, 320, 321, 340, 341, 342, 343, 351, 354, 364, 379, 382, 457, 465, 474, 481], "serial_for_singl": [157, 166, 463], "circular": [157, 166, 462], "list_of_kwarg": [157, 166], "com_veloc": [157, 166], "head_height": [157, 166], "joint_angl": [157, 166], "torso_vert": [157, 166], "idl": 157, "batched_pipe_timeout": 157, "stringent": [157, 464, 475, 476], "penv": [157, 261], "env_fix": 157, "influenc": 157, "myenv": [157, 210, 221, 224], "update_kwarg": [157, 166], "th": [158, 228, 265, 294, 298, 477], "thdot": [158, 477], "max_spe": [158, 477], "max_torqu": [158, 477], "gen_param": [158, 477], "gravit": [158, 477], "torqu": [158, 477], "pettingzoo": [159, 160, 475, 476], "pet": [159, 160], "zoo": [159, 160], "__": [159, 160], "aecenv": [159, 160], "dead": [159, 160], "done_on_ani": [159, 160, 475], "compulsori": [159, 160], "adversary_0": [159, 160], "adversari": [159, 160, 376, 475], "sisl": 159, "multiwalker_v9": 159, "aec": [159, 160], "n_piston": [159, 160], "pistonball_v6": [159, 160], "piston": [159, 160], "piston_0": [159, 160], "piston_1": [159, 160], "piston_20": [159, 160], "tictactoe_v3": [159, 160], "player": [159, 160, 168], "player_1": [159, 160], "player_2": [159, 160], "butterfli": 160, "parallel_env": [160, 462, 481, 482], "_setup": [161, 167], "async_reset_send": [161, 167], "async_reset_recv": [161, 167], "cube": 162, "roboh": 163, "expos": [163, 221, 224, 353, 463], "vikashplu": 163, "wiki": 163, "2310": 163, "06828": 163, "from_depth": 163, "smacv2": [164, 165], "starcraft": [164, 165], "challeng": [164, 165, 467, 477, 478], "10gen_terran": [164, 165], "10gen_zerg": [164, 165], "10gen_protoss": [164, 165], "3m": [164, 165], "8m": [164, 165], "25m": [164, 165], "5m_vs_6m": [164, 165], "8m_vs_9m": [164, 165], "10m_vs_11m": [164, 165], "27m_vs_30m": [164, 165], "mmm": [164, 165], "mmm2": [164, 165], "2s3z": [164, 165], "3s5z": [164, 165], "3s5z_vs_3s6z": [164, 165], "3s_vs_3z": [164, 165], "3s_vs_4z": [164, 165], "3s_vs_5z": [164, 165], "1c3s5z": [164, 165], "2m_vs_1z": [164, 165], "corridor": [164, 165], "6h_vs_8z": [164, 165], "2s_vs_1sc": [164, 165], "so_many_banel": [164, 165], "bane_vs_ban": [164, 165], "2c_vs_64zg": [164, 165], "old": [164, 165, 271, 379, 482], "smac": [164, 165], "map_nam": [164, 165], "176": [164, 165], "battle_won": [164, 165], "dead_al": [164, 165], "dead_enemi": [164, 165], "episode_limit": [164, 165], "322": [164, 165], "procedur": [164, 165], "distribution_config": [164, 165], "n_unit": [164, 165], "n_enemi": [164, 165], "team_gen": [164, 165], "dist_typ": [164, 165], "weighted_team": [164, 165], "unit_typ": [164, 165], "marin": [164, 165], "maraud": [164, 165], "medivac": [164, 165], "exception_unit_typ": [164, 165], "start_posit": [164, 165], "surrounded_and_reflect": [164, 165], "map_x": [164, 165], "map_i": [164, 165], "capability_config": [164, 165], "131": [164, 165], "starcraft2env": 165, "tic": 168, "tac": 168, "toe": 168, "single_play": 168, "player1": 168, "desired_batch_s": 168, "player0": 168, "uniti": [169, 170], "ml": [169, 170], "technolog": [169, 170], "llapi": [169, 170], "mlagents_env": [169, 170], "unityenviron": [169, 170], "file_nam": 169, "registered_nam": 169, "nor": 169, "localhost": [169, 333], "connect": 169, "3dball": 169, "group_0": 169, "vectorsensor_size8": 169, "continuous_act": [169, 171, 172, 418, 475, 476], "agent_10": 169, "agent_11": 169, "agent_4": 169, "agent_5": 169, "agent_6": 169, "agent_7": 169, "agent_8": 169, "agent_9": 169, "group_reward": 169, "proroklab": [171, 172], "vectorizedmultiagentsimul": [171, 172], "2207": [171, 172], "03530": [171, 172], "basescenario": 171, "defaultt": 171, "chosen": [171, 172, 255, 256, 318, 319, 327, 350, 420, 457, 471], "sparsiti": 171, "unbatched_action_spec": [171, 172], "unbatched_observation_spec": [171, 172], "unbatched_reward_spec": [171, 172], "het_spec": [171, 172], "het_specs_map": [171, 172], "flock": [171, 172, 418], "agent_collision_rew": [171, 172], "agent_distance_rew": [171, 172], "ca": 174, "environment4": 174, "get_group_map": 174, "sumbodul": 177, "histori": [178, 179, 180, 183, 186, 193, 454, 456], "assist": [178, 180, 183, 193, 456, 465], "answer": [178, 180, 182, 183], "hopefulli": [178, 463], "system_prompt": [178, 193, 456], "apply_templ": [178, 179, 180, 183, 193], "pars": [178, 182, 194, 456, 479], "template_kwarg": [178, 179, 180, 183], "system_rol": [178, 456], "user_rol": [178, 456], "datasetchatenv": [178, 456], "gsm8kenv": [178, 179, 182, 189, 456], "ifevalenv": [178, 179], "pprint": [178, 183, 456], "qwen": [178, 180, 183, 193, 456], "qwen2": [178, 180, 183, 193, 456], "3b": [178, 180, 183, 193], "im_start": [178, 180, 183, 193, 456], "ni": 178, "im_end": [178, 180, 193, 456], "td_action": 178, "td_next": 178, "nthi": 178, "rlvr": 179, "verifi": 179, "batch_size_dl": [179, 180, 183, 189], "thin": [179, 188, 330, 458], "chatenv": [179, 188, 193, 456], "bucket": 179, "dataloadingprim": [179, 186, 256, 456], "set_missing_toler": [179, 180, 183, 263], "gsm8k": [180, 181, 189], "compute_reward": [180, 183], "question": [180, 183, 479, 481], "adam": [180, 316, 325, 462, 463, 464, 465, 466, 469, 472, 475, 476, 477], "bought": 180, "sandwich": 180, "he": 180, "paid": 180, "breed": 180, "mari": 180, "saw": [180, 471, 477, 479], "reward_answ": [180, 182], "reward_contain": [180, 182], "reward_right": [180, 182], "reward_think": [180, 182], "snak": 180, "transformthatmeasuresbyt": [181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397], "bytes_in_td": [181, 182, 185, 191, 192, 193, 194, 195, 207, 209, 210, 212, 213, 214, 217, 218, 219, 222, 225, 226, 227, 229, 232, 233, 240, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 269, 270, 273, 397], "transform_done_spec": [181, 182, 185, 191, 192, 193, 194, 195, 222, 253, 260, 262, 264, 273, 397], "transform_env_batch_s": [181, 182, 185, 191, 192, 193, 194, 195, 210, 217, 262, 273, 397], "transform_env_devic": [181, 182, 185, 191, 192, 193, 194, 195, 217, 222, 262, 273, 397], "transform_full_done_spec": [181, 182, 185, 191, 192, 193, 194, 195, 210, 217, 221, 222, 226, 233, 235, 243, 244, 250, 254, 260, 262, 264, 271, 273, 397], "make_gsm8k_env": [182, 456], "asssoci": 182, "extract_tag": 182, "xml": 182, "ifev": [183, 185], "nyou": 183, "instruction_id_list": [183, 185], "detectable_cont": 183, "number_placehold": 183, "num_highlight": 183, "num_": 183, "respond": 183, "plan": [183, 277, 302, 303], "week": 183, "europ": 183, "trip": 183, "london": 183, "pari": 183, "rome": 183, "cap": [183, 464, 479], "restaur": 183, "prompt_level_strict_acc": 184, "inst_level_strict_acc": 184, "prompt_level_loose_acc": 184, "inst_level_loose_acc": 184, "instruction_ids_kei": 185, "prompt_kei": [185, 397], "keyword_args_kei": 185, "id_kei": 185, "response_column": 185, "score_kei": 185, "ifeval_scor": 185, "aggregate_reward": 185, "ifevalscoredata": 185, "scorer": 185, "IF": 185, "column": 185, "langdetect": 185, "nltk": 185, "immutabledict": 185, "cot": 186, "token_kei": 186, "str_kei": 186, "attention_kei": 186, "assign_reward": 186, "has_attent": 186, "assign_don": 186, "batchless": 186, "eos_token_id": 186, "pretrainedtokenizerbas": [186, 195, 260], "stack_method": [186, 191], "as_nested_tensor": [186, 191], "as_padded_tensor": [186, 191], "data_kei": 186, "bert": [186, 195, 260], "uncas": [186, 195, 260], "tokens_in": 186, "tokens_out": 186, "mlgym": [188, 190], "get_library_nam": 188, "prisonersdilemma": 190, "reward_wrong_format": 190, "mlgymenv": 190, "wrongli": 190, "mappabl": 191, "maybe_dense_stack": 191, "unrel": 191, "endless_dataload": 191, "set_capture_non_tensor_stack": 191, "dummydataload": 191, "generate_random_str": 191, "ascii_lowercas": 191, "__iter__": 191, "__next__": 191, "zxwvupirska": 191, "stringa": 191, "zxwvupirsk": 191, "roll": 191, "init_st": 191, "nngcmflsana": 191, "vrrbnhzpmga": 191, "nngcmflsan": 191, "vrrb": 191, "dummytensordataload": 191, "generate_random_tensor": 191, "pad_tensor": 191, "padding_length": 191, "data_spec": 191, "log_prob_kei": [192, 233, 352, 458], "add_to_reward": 192, "pi_curr": [192, 233], "pi_0": [192, 233], "overfit": [192, 233], "probabilist": [192, 233, 348, 362, 382, 454, 464, 481], "get_dist": [192, 233, 352, 353], "kl_penalti": 192, "ref_log_prob": 192, "formula": [192, 233, 297, 325, 326, 362, 364, 379, 382, 395, 458, 464], "tool_nam": 193, "nprint": 193, "successfulli": [193, 456], "use_raw_nontensor": [195, 231, 260, 264], "additional_token": [195, 260], "skip_special_token": [195, 260], "add_special_token": [195, 260], "return_attention_mask": [195, 260], "missing_toler": [195, 260], "call_before_reset": [195, 260], "test_input_spec": [195, 264], "list_of_tensordict": [196, 197], "unsqueeze_null_shap": 198, "dynamic_shap": 198, "model_bas": [199, 200, 277, 303], "model_based_env": [199, 373], "dreamerenv": [199, 373, 454], "model_based_env_ev": 199, "spec_typ": 201, "convert_specnam": 201, "remap_state_to_observ": 201, "spectyp": 201, "unus": 201, "probabilistictdmodul": [202, 301, 348, 352, 399, 433], "keep_oth": [204, 477], "exclude_reward": 204, "exclude_don": 204, "next_": 204, "write_full_fals": 205, "_terminated_or_trunc": 205, "num_interv": 206, "out_action_kei": 206, "samplingstrategi": 206, "optino": 206, "intenum": 206, "action_disc": 206, "masker": 207, "maskedenv": 207, "ones_lik": [207, 304], "scatter": 207, "fill_float": 209, "fill_int": 209, "fill_bool": 209, "someenvclass": 209, "autoresetenv": 209, "fooenv": 209, "sign": [209, 251, 400, 475], "envtyp": 209, "reshape_fn": [210, 466], "reset_func": 210, "env_kwarg": [210, 450, 451, 462], "accompani": [210, 254], "tensordict_batch_s": 210, "tensordict_reset": [210, 477], "biner": 211, "burn_in": 212, "burn": 212, "burnt": 212, "gru_modul": [212, 296, 359], "input_s": [212, 256, 294, 295, 296, 298, 299, 300, 359, 465, 466], "hidden_s": [212, 256, 294, 295, 296, 298, 299, 300, 359, 465, 466], "default_recurrent_mod": [212, 296, 300], "burn_in_transform": 212, "gru": [212, 256, 295, 296, 359, 466], "num_lay": [212, 294, 296, 298, 300, 311, 312, 359, 466], "is_init": [212, 232, 296, 300, 317, 347, 359, 400, 465, 466], "86": 212, "3008": 212, "0344": 212, "padding_valu": [213, 304, 305], "as_invers": 213, "movement": 213, "1312": 213, "5602": 213, "consumpt": [213, 454], "pictur": 213, "pixels_trsf": [213, 479], "grayscal": [213, 463, 465, 466, 479, 482], "data_exclud": [213, 479], "make_rb_transform_and_sampl": 213, "sampler_kwarg": 213, "redund": [213, 465], "del_kei": [214, 253, 266, 474, 477], "unsqueeze_if_oor": 214, "observation_posit": 214, "observation_veloc": 214, "delet": [214, 253, 427], "crop": [215, 242, 420], "center": [215, 316, 420], "width": [215, 220, 245], "height": [215, 220, 245], "squar": [215, 220, 297, 325, 326, 420, 456], "scalar": [216, 247, 275, 284, 286, 293, 309, 310, 317, 358, 362, 363, 364, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 395, 398, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 457, 463, 469, 477], "rewardsc": [217, 263, 462, 463, 465], "rewardclip": 217, "transformed_env": [217, 263, 467], "condition": 218, "switch": [218, 263, 271, 297, 326, 418], "met": [218, 219, 361, 475, 477], "unalt": 218, "criteria": 218, "policy_switch": 218, "cond": [218, 219], "step_count_kei": [218, 219, 254], "step_count_tot": 218, "step_count_main": 218, "0322": 218, "1540": 218, "0111": 218, "3190": 218, "0299": 218, "1544": 218, "0181": 218, "3280": 218, "0276": 218, "1550": 218, "0255": 218, "3414": 218, "0253": 218, "1558": 218, "0334": 218, "3596": 218, "0230": 218, "1569": 218, "0422": 218, "3828": 218, "0206": 218, "1582": 218, "0519": 218, "4117": 218, "1598": 218, "0629": 218, "4469": 218, "0156": 218, "1617": 218, "0753": 218, "4891": 218, "0130": 218, "1639": 218, "0895": 218, "5394": 218, "0104": 218, "1665": 218, "1058": 218, "5987": 218, "0076": 218, "1696": 218, "1246": 218, "6685": 218, "0047": 218, "1732": 218, "1463": 218, "7504": 218, "0016": 218, "1774": 218, "1715": 218, "8459": 218, "0020": 218, "0150": 218, "1884": 218, "6117": 218, "0017": 218, "2071": 218, "3838": 218, "0105": 218, "2115": 218, "5110": 218, "25": [218, 462], "altogeth": 219, "exectu": 219, "palliat": [219, 468], "inner_count": 219, "middle_env": 219, "middle_count": 219, "auto_unwrap": [219, 263, 428], "9670": 219, "2546": 219, "9669": 219, "9802": 219, "1981": 219, "1601": 219, "9926": 219, "1214": 219, "5556": 219, "9994": 219, "7622": 219, "9984": 219, "0561": 219, "7933": 219, "9895": 219, "1445": 219, "7779": 219, "dtype_in": 221, "dtype_out": 221, "scan": [221, 224, 353, 354], "resp": [221, 224], "not_transform": [221, 224], "orig_devic": 222, "unspecifi": 222, "num_actions_effect": 223, "max_act": 223, "include_forward": 223, "num_act": [223, 281, 371, 466, 468], "action_out": 223, "eol_kei": 225, "lives_kei": 225, "eol_attribut": 225, "breakout": 225, "210": [225, 239], "160": [225, 239], "eol_transform": 225, "eol": 225, "dqnloss": [225, 362, 363, 365, 366, 369, 371, 372, 373, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 395, 398, 445, 454, 458, 463, 465, 466, 472], "register_kei": 225, "loss_or_advantag": 225, "lossmodul": [225, 438, 447, 448, 454, 458], "valueestimatorbas": [225, 380, 395, 454], "finit": [227, 316, 468, 479], "first_dim": 228, "last_dim": 228, "allow_positive_dim": [228, 253, 265], "frameskip": 228, "repeatedli": [229, 464, 476], "hash_fn": 231, "repertoir": 231, "reproducible_hash": 231, "unarytransform": 231, "observation_str": 231, "tobyt": [231, 264], "observation_hash": 231, "x08": 231, "x8b": 231, "xbexav": 231, "xbf": 231, "x00": 231, "xee": 231, "xb5": 231, "x17": 231, "x8f": 231, "xbe": [231, 264], "x88": 231, "xccu": 231, "xc0vr": 231, "get_input_from_hash": 231, "hash_tensor": 231, "init_kei": [232, 347], "tracker": 232, "normalparamextractor": [233, 340, 341, 342, 348, 354, 362, 363, 365, 371, 378, 382, 383, 384, 385, 387, 388, 457, 464, 468, 476, 481], "probabilisticactor": [233, 340, 341, 342, 343, 362, 363, 365, 368, 370, 371, 378, 381, 382, 383, 384, 385, 387, 388, 457, 462, 464, 468, 475, 476], "tanhnorm": [233, 340, 341, 342, 348, 354, 362, 363, 365, 378, 382, 383, 384, 385, 387, 388, 454, 464, 476, 481], "return_log_prob": [233, 331, 335, 340, 341, 342, 348, 352, 354, 384, 457, 464, 468, 475, 476, 481], "apply_": 233, "copy_": [233, 462], "mogymwrapp": [234, 454], "mo_env": 234, "sea": 234, "treasur": 234, "so_env": 234, "stack_reward": 235, "stack_observ": 235, "auto_batch_size_": 235, "macro": [235, 347], "noop": 236, "trial": 236, "standard_norm": [237, 248, 270, 271, 462, 463, 465], "affin": [237, 248, 270, 271], "layer": [237, 270, 276, 280, 281, 283, 284, 289, 291, 294, 295, 296, 298, 299, 300, 301, 306, 307, 309, 310, 311, 312, 322, 323, 337, 346, 355, 457, 463, 464, 465, 466, 468, 475, 478], "epsilon": [237, 275, 293, 317, 386, 436, 463, 464, 465, 468], "recover": 237, "set_default_tensor_typ": 237, "doubletensor": 237, "isclos": 237, "next_ob": [237, 400, 401, 402, 403, 481], "init_stat": [237, 462, 463, 464, 465], "3752e": 237, "5087e": 237, "9294e": 237, "9636": 237, "5608": 237, "6408": 237, "num_it": [237, 463, 464], "reduce_dim": [237, 462, 463, 464, 465], "cat_dim": [237, 462, 463, 464, 465], "keep_dim": [237, 347, 463, 465], "statist": [237, 270, 271, 276, 384, 452, 462, 463, 464, 482], "gaussian": [237, 256, 275, 277, 303, 309, 310, 315, 464, 466, 475], "empir": [237, 277, 303, 348, 352, 462, 464, 476], "3d": [237, 280], "reorder": 239, "in_keys_in": [239, 265], "channel": [239, 259, 306, 311, 312, 463], "r3m": [241, 478], "resnet": [241, 266, 268], "ego4d": [241, 266, 268], "univers": [241, 266, 268, 467], "suraj": [241, 266], "nair": [241, 266], "aravind": [241, 266], "rajeswaran": [241, 266], "vikash": [241, 266, 268], "kumar": [241, 266, 268], "chelsea": [241, 266], "finn": [241, 266], "abhinav": [241, 266], "gupta": [241, 266], "2203": [241, 266, 303, 478], "12601": [241, 266, 478], "_init": [241, 266, 462], "resnet50": [241, 268, 478], "model_nam": [241, 266, 268, 332, 423], "resnet34": 241, "resnet18": 241, "r3m_vec": [241, 478], "stack_imag": [241, 268], "tread": [241, 268], "hub": [241, 268, 467], "resnet50_weight": [241, 268], "imagenet1k_v1": [241, 268], "download_path": [241, 268], "tensor_pixels_kei": [241, 268], "sub_seq_len": 242, "sample_dim": [242, 462], "hesit": 242, "robust": [242, 276], "mix": [242, 318, 327, 398, 462, 475, 476], "improp": 242, "dummyenv": 243, "another_oth": 243, "other_reward": 243, "create_copi": 244, "stuff": [244, 470], "newnam": 244, "r2g": 246, "reward_to_go": 246, "bernoulli_": 246, "9010": 246, "9404": [246, 406], "9701": [246, 406], "9900": [246, 406], "0000": [246, 257, 258, 293, 316, 355, 406], "clamp_min": 247, "clamp_max": 247, "clip_min": 247, "clip_max": 247, "episode_": 249, "reward1": 249, "reward2": 249, "episode_reward": [249, 475, 476], "keep_reward": 250, "keep_don": 250, "logical_or": 251, "in_key_inv": 253, "unstack": 253, "update_don": 254, "disjunct": 254, "recognis": 254, "target_return": 255, "default_valu": [256, 359], "expand_spec": 256, "single_default_valu": 256, "call_before_env_reset": 256, "unit": [256, 277, 291, 294, 295, 311, 312, 320, 321, 464], "scala": 256, "mykei": 256, "__unless": 256, "exists__": 256, "get_primers_from_modul": [256, 279, 296, 300, 454], "recurrent_st": [256, 296, 300, 359, 465], "10th": 257, "0216": 257, "1149": 257, "1990": 257, "2749": 257, "3281": 257, "9290": 257, "3702": 257, "8978": 257, "time_kei": 258, "elaps": [258, 471], "monitor": [258, 467], "expend": 258, "_polici": 258, "time_reset": 258, "time_polici": 258, "time_step": [258, 299, 347], "0882": 258, "0002": 258, "5797e": 258, "6289e": 258, "7990e": 258, "0824e": 258, "0837e": 258, "6056e": 258, "2016e": 258, "1062e": 258, "7009e": 258, "from_int": 259, "shape_toler": 259, "ri": 259, "traj_count": 261, "traj": 261, "countingenv": 261, "make_env_c0": 261, "make_env_c1": 261, "set_contain": 262, "reset_par": 262, "smoothli": [263, 276], "add_1": 263, "cache_spec": 263, "inv_fn": 264, "unari": 264, "durin": 264, "ommit": 264, "observation_trsf": 264, "xbc": 264, "x7f": 264, "x859": 264, "x81": 264, "x9a": 264, "xbd": 264, "xb8t8": 264, "test_output_spec": 264, "danger": 265, "vc1": 266, "vc1_vec": 266, "untrain": 266, "make_noload_model": 266, "vip": [267, 268, 478], "implicit": [268, 370, 378, 479], "jason": 268, "ma": 268, "shagun": 268, "sodhani": 268, "dinesh": 268, "jayaraman": 268, "osbert": 268, "bastani": 268, "ami": 268, "zhang": 268, "vip_vec": 268, "final_nam": 269, "sb3": 269, "terminal_obs_read": 269, "vecnormv2": 270, "new_api": [270, 271], "to_observation_norm": [270, 271], "frozen_copi": [270, 271], "shared_td": 270, "race": 270, "decai": [270, 271, 275, 293, 386, 436, 462, 463, 465, 482], "underflow": [270, 436], "build_td_for_shared_vecnorm": 270, "memmori": 270, "td_share": 270, "v": [270, 294, 295, 298, 299, 340, 370, 378, 385, 462, 463], "unfreez": [270, 271], "observationnorm": [270, 271, 452, 462, 463, 464, 465, 481], "train_env": 270, "eval_env": 270, "9999": 271, "0001": [271, 291], "shared_data": 271, "reduce_batch_dim": 271, "varianc": [271, 276, 277, 278, 297, 325, 326, 458, 462, 464, 476], "vs": [271, 274], "weigh": 271, "_cast_int_to_float": 271, "env_trsf": 271, "observation_norm": 271, "reward_norm": [271, 436], "unnorm": [271, 304, 305, 313], "7967": 271, "1238": 271, "5911": 271, "5275": 271, "8585": 271, "5028": 271, "2505": 271, "3169": [271, 355], "1332": 271, "1235": 271, "6596e": 271, "3072e": 271, "9170e": 271, "9255e": 271, "9131e": 271, "4671e": 271, "3760e": 271, "2058e": 271, "3484e": 271, "6185e": 271, "1456": 271, "1862": 271, "2053": 271, "2605": 271, "4046": 271, "5185": 271, "8023": 271, "1364": 271, "6183": 271, "5406": 271, "0920": 271, "1492": 271, "2702": 271, "3917": 271, "5001": 271, "7947": 271, "0160": 271, "3347": 271, "9082": 271, "9679": 271, "2199": 271, "2918": 271, "1668": 271, "2083": 271, "4981": 271, "5046": 271, "7950": 271, "9791": 271, "1484": 271, "4182": 271, "2201": 271, "0403": 271, "5206": 271, "7791": 271, "8282": 271, "2279": 271, "2907": 271, "4929": 271, "7793": 271, "8626": 271, "1832": 271, "local_env": 271, "testifi": 271, "4307": 271, "9613": 271, "state_dim": [272, 282, 287, 315, 320, 321, 343], "action_dim": [272, 282, 283, 285, 287, 315, 343, 462, 474], "gsde": [272, 383, 452], "gsdemodul": 272, "rb_transform": 273, "resist": 273, "insensit": 273, "sensit": [273, 463, 465], "_orig": 273, "95": [273, 303, 390, 464, 465], "window": [273, 347, 475, 479, 481], "module_nam": [274, 380, 395], "from_vers": 274, "to_vers": 274, "class_method": 274, "import_modul": 274, "get_class_that_defined_method": 274, "module_set": 274, "setters_dict": 274, "setter": 274, "setter_dict": 274, "po": 275, "sigma_init": [275, 475], "sigma_end": [275, 475], "annealing_num_step": [275, 293, 317, 462, 463, 465, 466, 468, 472, 475], "sigma": [275, 294, 295, 297, 298, 299, 317, 325, 326, 464, 475], "omiss": [275, 293, 317], "momentum": 276, "max_r": 276, "max_d": 276, "warmup_step": 276, "batchrenorm": 276, "1702": 276, "03275": 276, "corenet": 276, "enhanc": 276, "warmup": 276, "phase": [276, 278, 476, 479], "outlier": 276, "period": 276, "warm": 276, "renorm": 276, "entropi": [277, 313, 362, 363, 364, 365, 370, 371, 378, 379, 381, 382, 383, 385, 387, 388, 395, 396, 476], "botev": 277, "2013": 277, "cem": 277, "k": [277, 279, 294, 295, 298, 299, 331, 335], "maximis": [277, 283, 285, 303, 463, 464, 476], "modelbasedenv": [277, 303], "planning_horizon": [277, 303], "mpc": [277, 302, 303], "num_candid": [277, 303], "candid": [277, 303], "top_k": [277, 303], "modelbasedenvbas": [277, 302, 303, 454], "safemodul": [277, 302, 340, 342, 352, 362, 363, 365, 370, 371, 378, 382, 383, 384, 385, 387, 388, 443, 444, 448, 454, 481], "hausknecht": 278, "wagen": 278, "reus": [278, 283, 427], "consistentdropoutmodul": [278, 457], "capit": 278, "conceptu": 278, "devianc": 278, "set_exploration_typ": [278, 380, 433, 454, 457, 464, 465, 466, 468, 475, 481], "_main_async_collector": 278, "asyncdatacollector": [278, 454], "ditto": 278, "consistentdropout": 279, "input_shap": 279, "batcht": 279, "make_tensordict_prim": [279, 296, 300, 465], "input_dtyp": 279, "get_default_dtyp": [279, 436], "mask_6127171760": 279, "env0": [279, 482], "num_cel": [280, 281, 283, 284, 285, 286, 291, 292, 296, 300, 301, 306, 307, 340, 359, 463, 464, 465, 466, 468, 469, 472, 475, 476, 481], "elu": [280, 281, 283, 284, 285, 286, 291, 292, 306, 463, 481], "activation_kwarg": [280, 281, 301], "norm_class": [280, 281, 283, 284, 301], "norm_kwarg": [280, 281, 301], "bias_last_lay": [280, 281, 283, 284, 285, 286, 292, 301], "aggregator_class": [280, 281, 283, 284, 463, 465, 481], "squashdim": [280, 281, 283, 292, 306, 481], "aggregator_kwarg": [280, 281, 283, 284, 463, 465], "squeeze_output": [280, 281, 283, 284, 463, 465], "convolut": [280, 281, 283, 284, 306, 322, 466, 468], "cell": [280, 281, 294, 295, 296, 298, 299, 300, 301, 306, 307, 464, 466, 467, 468, 469, 470, 471, 472], "kernel": [280, 281, 306], "cnet": [280, 281], "conv3d": 280, "rectangular": [280, 281], "lazyconv2d": [281, 283, 284, 292, 306], "default_atari_dqn": [281, 466], "semin": 281, "transformer_config": [282, 315, 343], "decisiontransform": [282, 315], "dtconfig": [282, 287, 315], "2202": [282, 287, 381], "05607": [282, 287, 381], "return_to_go": [282, 287, 315, 343], "conv_net_kwarg": [283, 284], "mlp_net_kwarg": [283, 284, 285], "use_avg_pool": [283, 284], "WITH": [283, 284, 285, 286, 317, 386], "1509": [283, 284, 285, 286, 303, 317, 367, 377, 386], "02971": [283, 284, 285, 286, 317, 386], "convnet": [283, 284, 292, 306, 465, 466, 468, 481], "ndims_in": 283, "avgpool": [283, 284], "lazylinear": [283, 284, 285, 286, 292, 301, 457, 464, 468, 477, 478], "2304": 283, "adaptiveavgpool2d": [284, 463, 465], "output_s": [284, 463, 465], "squeeze2dlay": 284, "400": [285, 286, 476], "mlp_net_kwargs_net1": 286, "mlp_net_kwargs_net2": 286, "mlp1": 286, "mlp2": 286, "desdescrib": 287, "n_embd": 287, "n_layer": [287, 294, 298], "n_head": 287, "n_inner": 287, "n_posit": 287, "resid_pdrop": 287, "attn_pdrop": 287, "gpt2config": 287, "atol": [288, 324], "rtol": [288, 324], "batch_shap": [288, 313, 324], "event_shap": [288, 324], "absolut": [288, 324, 462], "_instanc": 288, "densiti": [288, 304, 305, 313, 326], "mass": [288, 304, 305, 313, 326, 477], "rsampl": [288, 305, 313, 352], "sample_shap": [288, 304, 305, 313], "softmax": [289, 305, 313, 344, 345], "var_num": [290, 319, 344, 345, 350], "action_value_kei": [290, 319, 344, 345, 349, 350, 365, 380, 395, 398], "action_mask_kei": [290, 293, 319, 344, 345, 349, 350], "1707": [290, 345, 372, 382], "06887": [290, 345, 372], "mult": [290, 307, 319, 344, 345, 349, 350], "tensordict_modul": [290, 294, 295, 298, 299, 319, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 363, 365, 366, 370, 371, 378, 382, 383, 384, 385, 387, 388, 457], "nbin": [290, 344, 457], "customdistributionalqv": 290, "log_softmax": [290, 344], "qvalue_actor": [290, 319, 344, 349, 457], "to_modul": [290, 351, 354, 462, 481], "std_bia": 291, "std_min_val": 291, "belief": [291, 311, 320, 321], "1912": [291, 373, 374, 375], "01603": [291, 373, 374, 375], "softplu": [291, 358, 360, 361], "out_features_valu": 292, "cnn_kwarg": [292, 463], "mlp_kwarg": [292, 463], "duel": 292, "cnn": [292, 306, 463, 466, 468, 481], "06581": 292, "512": 292, "greedi": [293, 319, 345, 350, 463, 465, 466, 468], "eps_init": [293, 317, 463, 465, 466, 468, 472], "eps_end": [293, 317, 463], "explorative_polici": [293, 317], "9055": 293, "9277": 293, "6295": 293, "2532": 293, "grad_fn": [293, 339, 352], "addbackward0": 293, "batch_first": [294, 298, 465], "bidirect": [294, 298, 465], "cudnn": [294, 295, 296, 298, 299, 300, 465, 466], "rnn": [294, 295, 296, 298, 299, 300, 338, 371, 385, 400, 465, 466, 468], "device_count": [294, 295, 298, 299, 482], "n_in": [294, 295, 298, 299], "n_out": [294, 295, 298, 299], "h0": [294, 295, 298, 299], "h1": [294, 295, 298, 299], "vectoris": [294, 295, 298, 299], "call_gru": [294, 295], "h_out": [294, 295, 298, 299], "batched_cal": [294, 295, 298, 299], "gate": [294, 295, 298], "r_t": 294, "w_": [294, 295, 298, 299], "ir": [294, 295], "x_t": [294, 298], "b_": [294, 295, 298, 299], "hr": [294, 295, 298], "h_": [294, 295, 298], "z_t": 294, "iz": [294, 295], "hz": [294, 295], "n_t": 294, "odot": [294, 295, 298, 299], "hn": [294, 295, 298], "h_t": [294, 298], "sigmoid": [294, 295, 298, 299], "hadamard": [294, 295, 298, 299], "multilay": [294, 298], "_t": [294, 298, 476, 477], "ge": [294, 298], "bernoulli": [294, 298], "b_ih": [294, 295, 298, 299, 300], "b_hh": [294, 295, 298, 299, 300], "h_0": [294, 298, 299], "pack_padded_sequ": [294, 298], "pack_sequ": [294, 298], "num": [294, 298, 472], "_layer": [294, 298], "_size": [294, 295, 298, 299], "h_n": [294, 298], "packedsequ": [294, 298], "weight_ih_l": [294, 298], "learnabl": [294, 295, 298, 299], "w_ir": 294, "w_iz": 294, "w_in": 294, "num_direct": [294, 298], "weight_hh_l": [294, 298], "w_hr": 294, "w_hz": 294, "w_hn": 294, "bias_ih_l": [294, 298], "b_ir": 294, "b_iz": 294, "b_in": 294, "bias_hh_l": [294, 298], "b_hr": 294, "b_hz": 294, "b_hn": 294, "mathcal": [294, 295, 298, 299], "sqrt": [294, 295, 298, 299, 317], "frac": [294, 295, 298, 299, 464], "seq_len": [294, 298], "subtli": 294, "matrix": [294, 298, 309, 310], "hx": [294, 295, 298, 299], "lstmcell": [295, 300, 466], "gru_cel": 295, "weight_ih": [295, 299], "weight_hh": [295, 299], "bias_ih": [295, 299], "bias_hh": [295, 299], "rocm": [295, 299], "embedd": [296, 300], "grucel": [296, 351], "python_bas": [296, 300], "custom_kei": [296, 300], "hasn": [296, 300], "set_recurrent_mod": [296, 300, 465], "recurrent_mod": [296, 300, 338], "rs": [296, 462], "gru_module_train": 296, "policy_train": 296, "traj_td": 296, "make_cudnn_bas": [296, 300], "make_python_bas": [296, 300, 466], "supplementari": [296, 300, 464, 482], "That": [296, 300, 464, 475], "dealt": [296, 300], "poorli": [296, 300], "meth": [296, 300, 380, 477], "data_collector": [296, 300, 463], "upscal": [297, 325, 326], "tanh_loc": [297, 325, 326], "event_dim": [297, 324, 325], "poor": [297, 325, 326], "explos": [297, 325, 326], "proj_siz": 298, "c0": [298, 299], "c1": [298, 299], "call_lstm": [298, 299], "c_out": [298, 299], "i_t": 298, "ii": [298, 299], "hi": [298, 299], "f_t": 298, "hf": [298, 299], "g_t": 298, "ig": [298, 299], "hg": [298, 299], "o_t": 298, "ho": [298, 299], "c_t": 298, "c_": 298, "1402": 298, "1128": 298, "c_0": [298, 299], "proj": 298, "c_n": 298, "w_ii": 298, "w_if": 298, "w_ig": 298, "w_io": 298, "w_hi": 298, "w_hf": 298, "w_hg": 298, "w_ho": 298, "b_ii": 298, "b_if": 298, "b_ig": 298, "b_io": 298, "b_hi": 298, "b_hf": 298, "b_hg": 298, "b_ho": 298, "weight_hr_l": 298, "_revers": 298, "analog": [298, 468], "cn": 298, "lstm_cell": 299, "h_1": 299, "c_1": 299, "cx": 299, "recurrent_state_h": 300, "recurrent_state_c": 300, "triplet": [300, 349, 350], "lstm_modul": 300, "rs_h": 300, "rs_c": 300, "single_bias_last_lay": 301, "layer_class": 301, "layer_kwarg": 301, "perceptron": [301, 468], "noisylinear": [301, 309, 454, 463], "noisylazylinear": [301, 454], "mpcplanner": 302, "tensordict_out": [302, 329, 331, 335, 482], "mppi": 303, "covari": 303, "william": [303, 384], "aldrich": 303, "theodor": 303, "01149": 303, "hansen": 303, "wang": 303, "su": 303, "04955": 303, "valueoper": [303, 340, 341, 342, 362, 363, 364, 365, 366, 371, 378, 379, 382, 383, 384, 385, 387, 388, 448, 457, 462, 464, 469], "tdlambdaestim": [303, 454, 462], "value_net": [303, 367, 369, 384, 400, 401, 402, 403, 464, 466, 468, 469, 472], "adv": 303, "lmbda": [303, 390, 400, 403, 405, 411, 412, 413, 416, 417, 458, 462, 464, 476], "value_network": [303, 366, 367, 369, 370, 372, 378, 385, 400, 401, 402, 403, 458, 462, 464, 466, 469, 472, 475], "temperatur": [303, 331, 335, 363, 370, 378], "neg_inf": [304, 305], "inf": [304, 305], "use_cross_entropi": 304, "api_doc": [304, 305], "tf_agent": [304, 305], "sparse_mask": [304, 305], "cross_entropi": 304, "1203": [304, 305], "0928": [304, 305], "0831": [304, 305], "1972": [304, 305], "grad_method": [305, 313], "reparamgradientstrategi": [305, 313], "passthrough": [305, 313], "relaxedonehot": [305, 313], "sample_non_valid": 305, "zeros_lik": [305, 477], "share_param": [306, 307, 308, 475, 476], "use_td_param": [306, 307, 308], "get_stateful_net": [306, 307, 308, 380, 395, 457, 458], "from_stateful_net": [306, 307, 308, 380, 395, 458], "homogen": [306, 307, 475, 476], "tensordictparam": [306, 307, 352], "_empty_net": [306, 307], "roughli": [306, 307, 481], "agent_network": [306, 307], "modulelist": [306, 307], "2592": 306, "decentr": 306, "n_agent_input": [307, 308, 475, 476], "n_agent_output": [307, 308, 475, 476], "toech": 307, "centalis": 307, "shown": [307, 457, 466, 474, 475, 476, 479], "agent_dim": 308, "vmap_random": [308, 380, 395, 458], "stateful_net": [308, 380, 395], "Such": [308, 380, 395], "multiagentmlp": [308, 475, 476], "snet": 308, "hasattr": [308, 462], "kaiming_normal_": 308, "std_init": [309, 310], "initialize_paramet": 309, "isol": [309, 380, 395, 456, 466], "1706": [310, 327], "10295v3": 310, "induc": [310, 352], "aid": 310, "1803": [311, 312, 318], "10122": [311, 312], "rnn_hidden": 311, "latent": 312, "ordin": [314, 454], "parametris": [314, 316], "inres": 315, "mu": [315, 317, 464], "impos": [316, 457], "proxim": [316, 382, 464, 476], "atom": 316, "tang": 316, "agraw": 316, "2020": 316, "1901": 316, "10500": 316, "discretis": 316, "num_atom": 316, "num_sampl": 316, "middl": 316, "lr": [316, 462, 463, 464, 465, 472, 475, 476, 477], "optimis": [316, 475, 476], "minimis": 316, "penalis": 316, "0308": 316, "1586": 316, "4727": 316, "2260": 316, "1120": 316, "histogram": 316, "return_typ": 316, "hist": [316, 479], "158": 316, "478": 316, "228": 316, "112": 316, "bin_edg": 316, "8000": 316, "6000": 316, "4000": 316, "ornstein": [317, 462, 466], "uhlenbeck": [317, 462, 466], "ou": [317, 462], "correl": 317, "noise_t": 317, "noise_": 317, "theta": [317, 464, 477], "sigma_t": 317, "sigma_": 317, "anneal": [317, 463, 468, 475], "ou_prev_nois": 317, "ou_step": 317, "x0": 317, "sigma_min": 317, "n_steps_ann": 317, "is_init_kei": 317, "_ou_prev_nois": 317, "_ou_step": 317, "state_shap": [318, 398], "mixing_embed_dim": [318, 398], "qmix": [318, 475, 476], "mixer": [318, 327, 398], "monoton": 318, "hyper": 318, "11485": 318, "qmixerloss": [318, 327], "qmix_vdn": [318, 327], "vdn": [318, 327], "hidden_dim": [320, 321], "scale_lb": [320, 321], "posterior": [320, 374], "rssm": [320, 321, 374], "1811": [320, 321], "04551": [320, 321], "obs_embed": 320, "rnn_hidden_dim": 321, "dream": 321, "safe_tanh": 325, "tanhtransform": 325, "overflow": [325, 339, 344, 345, 348, 349, 350, 351, 352], "get_mod": [325, 352], "decomposit": 327, "05296": 327, "hide": [328, 464, 475, 476], "satisfi": [328, 457], "vmap_dim": 328, "lam": 328, "sample_in": 328, "sample_in_td": 328, "vm": 328, "probabilistictensordictsequenti": [329, 353, 362, 364, 379, 382, 384, 395, 443, 444, 458, 481], "placement": 330, "tokenization_util": [331, 335], "generate_kwarg": [331, 335], "aspect": [331, 335, 463, 469], "tokenizer_kwarg": [331, 335], "pad_output": [331, 335], "conserv": [331, 335, 363, 369], "automodelforcausallm": 331, "input_data": [331, 335], "hello": [331, 335], "output_data": [331, 335], "make_ray_work": 332, "train_model": 332, "inference_serv": 332, "collective_rpc": 332, "update_weight_broadcast": 332, "model_update_group": 332, "src": 332, "current_stream": 332, "world_siz": 333, "statelessprocessgroup": 333, "plane": 333, "pyncclcommun": 333, "vllmparameterserv": 334, "tp": 334, "tp_size": 334, "check_weights_chang": 334, "transformerswrapp": 335, "llmdata": [335, 454], "translat": [339, 348], "character": [339, 344, 348, 349, 351, 479], "td_modul": [339, 340, 341, 342, 348, 351, 352, 354, 356, 468, 481], "3635": 339, "0340": 339, "1476": 339, "3911": 339, "1664": 339, "5455": 339, "2247": 339, "4583": 339, "2916": 339, "2160": 339, "5337": 339, "5193": 339, "addmmbackward0": 339, "actorvalueoper": [340, 364, 379, 382, 457, 468], "get_policy_oper": [340, 341, 342, 364, 379, 382, 457], "standalon": [340, 341, 342, 466, 468], "tdmodul": [340, 341, 342, 448], "get_critic_oper": 340, "common_oper": [340, 342], "policy_oper": [340, 341, 342], "value_oper": [340, 341, 342], "module_hidden": [340, 342], "td_module_hidden": [340, 342], "module_act": [340, 342], "td_module_act": [340, 341, 342], "module_valu": [340, 341, 342], "td_module_valu": [340, 341, 342], "state_action_valu": [340, 356, 363, 365, 370, 378, 385, 399, 448, 457, 462, 475, 481], "td_clone": [340, 341, 342], "tensordictmodulewrapp": [340, 443, 444, 448], "get_policy_head": [340, 341, 342], "safesequenti": [340, 341, 342, 398], "head": [340, 342, 352, 359, 364, 379, 382, 454], "get_value_head": [340, 341, 342], "get_value_oper": [340, 341, 342, 364, 379, 382], "action_modul": 341, "actorcriticoper": [342, 457, 468], "actorcriticwrapp": [342, 457, 462], "inferec": 343, "set_tensor_kei": 343, "dt_inference_wrapp": 343, "baz": 343, "inference_context": 343, "obs_dim": 343, "tanhdelta": [343, 454, 462, 475], "dtactor": 343, "actor_modul": [343, 481], "dist_class": 343, "dist_kwarg": 343, "distribution_kwarg": [343, 348, 352, 464, 475, 476], "inference_actor": 343, "sequence_length": 343, "mask_context": 343, "out_act": 343, "qvaluemodul": [344, 349, 398, 465, 466, 468, 472], "distributionaldqnnet": 344, "make_log_softmax": 344, "my_action_valu": [345, 350], "chanc": 345, "lmheadmodel": 346, "actor_head": [346, 364, 379, 382], "base_model": 346, "lm_head": 346, "lookahead": 347, "reshape_cat": 347, "actor_bas": 347, "obs_cat": 347, "obs_cat_reshap": 347, "action_orig": 347, "multistepenvwrapp": 347, "alter": [347, 380, 456, 457], "ego": 347, "default_interaction_typ": [348, 352, 468], "interaction_typ": [348, 352], "set_interaction_typ": [348, 352], "compositedistribut": [348, 352, 362, 382, 458, 468], "distribution_map": [348, 352], "name_map": [348, 352], "cache_dist": [348, 352], "n_empirical_estim": [348, 352], "compound": [348, 468], "chose": 350, "functionalmodul": 351, "functionalmodulewithbuff": 351, "td_fmodul": 351, "td_function": 351, "td_state": 351, "params_repeat": 351, "td_vmap": [351, 354], "random_sampl": [351, 352], "suppli": 352, "paliat": 352, "get_median": 352, "get_mean": 352, "sample_key_nam": 352, "_log_prob": 352, "composite_lp_aggreg": 352, "clampbackward0": 352, "anihil": 352, "partial_toler": [353, 354, 474], "AND": [353, 354, 365], "tensordictsequ": 354, "safeprobabilisticmodul": [354, 457], "spec1": 354, "net1": 354, "module1": 354, "td_module1": 354, "spec2": 354, "module2": 354, "td_module2": 354, "boundari": [355, 464, 466, 475, 476], "resolut": 355, "9944": 355, "9991": 355, "3020": 355, "2299": 355, "5418": 355, "2989": 355, "6849": 355, "2690": 355, "9649": 355, "5686": 355, "8602": 355, "0315": 355, "8455": 355, "6027": 355, "4746": 355, "7843": 355, "7782": 355, "2111": 355, "5115": 355, "4687": 355, "5760": 355, "custommodul": 356, "imaginari": 357, "imagin": 357, "transition_model": 357, "get_reward_oper": 357, "get_transition_model_oper": 357, "min_val": [358, 361], "_bia": 358, "surject": 361, "expln": 361, "biased_softplu": [361, 454], "biased_softplus_": 361, "syntax": [361, 462], "add_custom_map": 361, "1602": 362, "01783v2": 362, "actor_network": [362, 363, 364, 365, 366, 368, 370, 371, 378, 379, 381, 382, 383, 384, 385, 387, 388, 395, 458, 462, 464, 469, 475, 476], "critic_network": [362, 364, 379, 382, 384, 464, 476], "entropy_bonu": [362, 364, 379, 382, 395, 464], "favour": [362, 364, 379, 382, 395], "samples_mc_entropi": [362, 364, 379, 381, 382, 395], "entropy_coef": [362, 364, 379, 382, 395, 464, 476], "critic_coef": [362, 364, 379, 382, 395, 464], "loss_critic_typ": [362, 364, 379, 382, 384, 464], "l1": [362, 364, 366, 367, 371, 379, 382, 383, 384, 387, 388, 391, 398, 457, 462], "l2": [362, 364, 366, 367, 368, 369, 371, 374, 375, 379, 382, 383, 384, 387, 388, 391, 398, 462, 475], "smooth_l1": [362, 363, 364, 365, 366, 367, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388, 391, 398, 464], "separate_loss": [362, 364, 365, 366, 370, 371, 378, 379, 382, 383, 384, 385, 387, 388], "advantage_kei": [362, 364, 379, 382, 384, 395, 397, 400, 401, 402, 403], "value_target_kei": [362, 364, 379, 382, 384, 400, 401, 402, 403], "value_target": [362, 364, 379, 382, 384, 400, 401, 402, 403, 464, 476], "ddp": [362, 364, 379, 382, 384], "fsdp": [362, 364, 379, 382, 384], "divid": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378, 379, 381, 382, 383, 384, 385, 387, 388, 395, 441, 462, 475, 476, 477], "clip_valu": [362, 364, 379, 382, 384, 395], "loss_crit": [362, 382, 395, 464, 476], "loss_entropi": [362, 382, 396, 464, 476], "loss_object": [362, 382, 396, 464, 476], "next_reward": [362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 400, 401, 402, 403], "next_don": [362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 400, 401, 402, 403], "next_termin": [362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 400, 401, 402, 403], "loss_obj": 362, "next_observ": [362, 363, 365, 366, 367, 369, 370, 371, 378, 382, 383, 384, 385, 387, 388, 474], "sacloss": [362, 377, 386, 454], "default_kei": [362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 395, 398, 404], "_acceptedkei": [362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 387, 388, 395, 398, 404], "fraction": 362, "make_value_estim": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 389, 395, 398, 458, 462, 463, 475, 476, 481], "value_typ": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 390, 395, 398, 462], "valueestim": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 390, 395, 398, 454, 458, 462, 475, 476], "hyperparam": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 462], "enum": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 390, 395, 398, 462], "default_value_estim": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 462, 481], "default_value_kwarg": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 454, 462], "dqn_loss": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 389, 395, 398], "td1": [362, 363, 365, 366, 367, 369, 371, 372, 373, 378, 380, 382, 383, 384, 385, 387, 388, 395, 398, 462], "04779": [363, 369], "qvalue_network": [363, 365, 370, 371, 378, 383, 385, 387, 388], "unti": [363, 365, 378, 383, 385, 387, 388], "loss_funct": [363, 365, 366, 367, 368, 369, 370, 371, 378, 383, 385, 387, 388, 391, 398, 462, 475], "alpha_init": [363, 365, 371, 381, 383, 385], "min_alpha": [363, 365, 371, 381, 383, 385], "max_alpha": [363, 365, 371, 381, 383, 385], "fixed_alpha": [363, 365, 371, 381, 383, 385], "target_entropi": [363, 365, 371, 381, 383, 385], "prod": [363, 365, 381, 385], "delay_actor": [363, 366, 385, 387, 388], "delay_qvalu": [363, 371, 383, 385, 387, 388], "min_q_weight": 363, "max_q_backup": 363, "backup": 363, "deterministic_backup": 363, "num_random": 363, "with_lagrang": 363, "lagrang": 363, "lagrange_thresh": 363, "deactivate_vmap": [363, 365, 371, 378, 383, 385, 387, 388, 400, 401, 402, 403], "valueclass": [363, 365, 366, 371, 383, 385, 387, 388], "qvalu": [363, 365, 370, 371, 378, 383, 385, 387, 388], "loss_actor": [363, 365, 366, 370, 371, 378, 383, 384, 385, 387, 388, 434, 462, 475], "loss_actor_bc": 363, "loss_alpha": [363, 365, 371, 383, 385], "loss_cql": [363, 369], "loss_qvalu": [363, 365, 369, 370, 371, 378, 383, 385, 387, 388], "loss_alpha_prim": 363, "clip_epsilon": [364, 395, 464, 476], "head_nam": [364, 379, 382], "normalize_advantag": [364, 379, 382, 476], "normalize_advantage_exclude_dim": [364, 379, 382], "multiobject": [364, 379, 382], "value_kei": [364, 379, 382, 400, 401, 402, 403, 462], "somemodul": [364, 379, 382], "someactor": [364, 379, 382], "value_head": [364, 379, 382], "somevalu": [364, 379, 382], "loss_modul": [364, 377, 379, 380, 382, 386, 395, 438, 447, 448, 458, 459, 462, 463, 464, 475, 476, 479], "IN": 365, "FOR": 365, "simplic": [365, 463, 464, 470, 478, 479, 481], "openreview": [365, 383], "pczqttstix": 365, "qvalue_loss": [365, 387], "actor_loss": [365, 387], "alpha_loss": 365, "num_qvalue_net": [365, 370, 371, 378, 383, 385, 387, 388], "maybe_init_target_entropi": 365, "fault_toler": 365, "target_entropy_buff": 365, "delay_valu": [366, 367, 369, 372, 384, 385, 398, 463, 465, 466, 472, 475], "loss_valu": [366, 370, 378, 384, 385, 462, 464, 475, 476], "pred_valu": [366, 369, 387, 388, 462], "pred_value_max": [366, 462], "target_valu": [366, 369, 383, 387, 388, 399, 458, 462], "target_value_max": [366, 462], "qvalueactor": [367, 369, 398, 463, 465], "double_dqn": 367, "06461": [367, 377], "mult_one_hot": [367, 370, 371, 398], "loss_val": [367, 369, 458, 462, 464, 465, 466, 469, 470, 472, 475, 476, 479], "01345": 368, "distanc": [369, 379, 391, 399, 400, 476], "dcql_loss": 369, "2110": [370, 378], "06169": [370, 378], "expectil": [370, 378], "tau": [370, 378, 386, 462, 463, 475], "antmaz": [370, 378], "sticht": [370, 378], "onehotcategor": [370, 371, 454], "target_entropy_weight": 371, "skip_done_st": [371, 385], "disctount": 372, "distributionalqvalueactor": [372, 457], "input_tensordict": [372, 462], "actor_model": 373, "value_model": [373, 375], "imagination_horizon": 373, "discount_loss": [373, 375], "lambda_kl": 374, "lambda_reco": 374, "lambda_reward": 374, "reco_loss": 374, "reward_loss": 374, "free_nat": 374, "nat": 374, "delayed_clamp": 374, "global_averag": 374, "value_loss": 375, "fake_data": 375, "1606": 376, "03476": 376, "discriminator_network": 376, "use_grad_penalti": 376, "gp_lambda": 376, "discrimin": 376, "ddpgloss": [377, 386, 448, 454, 462, 469, 475, 481], "td3loss": [377, 386, 454], "value_network_update_interv": 377, "qvalueclass": 378, "loss_value_diff": 378, "diff": 378, "old_polici": 379, "new_polici": 379, "apart": [379, 476], "dtarg": 379, "samples_mc_kl": 379, "analyt": 379, "decrement": 379, "loss_": [380, 434, 458, 462, 469], "equip": [380, 465, 466, 468], "gh": 380, "_forward_value_estimator_kei": 380, "value_estim": [380, 395, 400, 401, 402, 403, 404, 458, 462, 476], "myloss": 380, "action2": 380, "augment": [380, 456, 470, 472, 479], "deterministic_sampling_mod": 380, "convert_to_funct": [380, 395, 462], "expand_dim": [380, 395], "create_target_param": [380, 395, 462], "compare_against": [380, 395, 462], "_param": [380, 395], "resampl": [380, 395], "_target_param": [380, 395], "network_nam": [380, 395], "blend": [380, 395], "add_random_modul": [380, 395, 458], "flavor": [382, 462, 475, 476, 481], "clipppoloss": [382, 454, 464, 476], "klpenppoloss": [382, 454], "06347": 382, "gae": [382, 454, 458, 462, 464, 476], "ppo_loss": 382, "tdlambda": [382, 390, 458, 462], "base_lay": 382, "randn_lik": 382, "samplelogprob": 382, "ay8zfzm0tdd": 383, "sub_sample_len": 383, "subsampl": [383, 429, 459], "action_log_prob_actor": 383, "state_action_value_actor": [383, 387, 388], "connectionist": 384, "1992": 384, "doi": 384, "1007": 384, "bf00992696": 384, "actor_net": [384, 462, 464], "1801": 385, "01290": 385, "applic": [385, 398, 467, 468, 477], "1812": 385, "05905": 385, "redqloss": [386, 454], "math": 386, "theta_t": [386, 477], "theta_": [386, 477], "polyak": 386, "minimalist": 387, "06860": 387, "policy_nois": [387, 388], "noise_clip": [387, 388], "td3_bc": 387, "bc_loss": 387, "lmbd": 387, "td0": [389, 462, 475], "strict_shap": 391, "view_a": 391, "grpolossoutput": [395, 397], "clip_fract": 396, "kl_approx": 396, "ess": 396, "loss_kl_to_ref": 396, "kl_to_ref": 396, "grpo_siz": 397, "rewards_kei": 397, "hit": 397, "qmixer": [398, 454], "local_valu": 398, "visibl": [398, 476], "acceptedkei": 398, "global_valu": 398, "penultim": 398, "local_value_network": 398, "mixer_network": 398, "value_modul": [398, 464, 481], "qnet": [398, 462], "next_val_kei": 399, "pred_next_v": 399, "mse": 399, "q_valu": 399, "n_steps_to_next": 399, "value_next_st": 399, "1506": [400, 405, 413], "02438": [400, 405, 413], "exponenti": [400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 436], "average_ga": [400, 464], "skip_exist": [400, 401, 402, 403], "get_default_devic": [400, 401, 402, 403, 404], "auto_reset_env": 400, "next_valu": [400, 401, 402, 403, 404], "gradient_mod": 400, "value_error": [400, 401, 402, 403, 404], "marker": [400, 462], "trajecotri": 400, "fair": 400, "target_param": [400, 401, 402, 403, 404, 462, 476], "98": [400, 401, 402, 403], "94": [400, 403], "unpack": [400, 401, 402, 403], "tensor_kei": [400, 401, 402, 403, 404], "aka": [401, 463, 475], "average_reward": [401, 402, 403], "tdestim": [401, 402, 404], "infti": 402, "valuefunctionbas": 404, "old_stat": [405, 407, 409, 411, 413, 414, 416], "new_stat": [405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "rolling_gamma": [409, 410, 411, 412, 414, 415, 416, 417], "g1": [409, 410, 411, 412, 414, 415, 416, 417], "g2": [409, 410, 411, 412, 414, 415, 416, 417], "g3": [409, 410, 411, 412, 414, 415, 416, 417], "g4": [409, 410, 411, 412, 414, 415, 416, 417], "v3": [409, 410, 411, 412, 414, 415, 416, 417], "preproc": [418, 466, 475], "as_non_tensor": [418, 475], "render_method": 418, "pass_tensordict": 418, "syntact": 418, "sugar": 418, "out_file_bas": 419, "skip_reset": 419, "center_crop": 420, "make_grid": 420, "log_video": 420, "csv": [420, 422, 424, 463, 471, 472], "wandb": [420, 424, 427, 471, 481], "tensorboard": [420, 424, 426, 471, 481], "log_dir": [420, 421, 422, 424, 426, 427, 463, 472], "cheetah_video": 420, "run_video": 420, "openxexperiencereplai": 420, "sec": [420, 477], "video_fp": [420, 422, 425], "cmu_stretch": 420, "run_video_0": 420, "cur_dir": 422, "csv_log": 422, "add_video": 422, "video_": 422, "experiment_nam": [423, 424], "uuid": [423, 463, 482], "logger_typ": 424, "logger_nam": 424, "mlflow": [424, 425], "wandb_kwarg": 424, "mlflow_kwarg": 424, "tracking_uri": 425, "uri": 425, "datastor": 425, "tb_log": 426, "tensoarboard": 426, "td_log": 426, "save_dir": 427, "resum": 427, "uncategor": 427, "my_funct": 428, "sub_traj_len": 429, "min_sub_traj_len": 429, "register_op": [429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 459, 463], "process_optim_batch": [429, 435, 436, 459], "td_out": [429, 437], "_process_optim_batch_hook": [429, 459], "batch_subsampl": 429, "clear_cuda": 430, "pre_optim_step": [430, 459], "log_pbar": [431, 432, 433, 436, 459, 463], "count_fram": 431, "pre_steps_log": [431, 432, 459], "count_frames_log": 431, "lognam": 432, "r_train": 432, "log_reward": [432, 463], "record_interv": [433, 462, 463], "record_fram": [433, 441, 462, 463], "policy_explor": [433, 448, 462, 463, 466, 468, 472], "log_kei": [433, 463], "underestim": 433, "r_evalu": [433, 462], "loss_compon": 434, "appl": 434, "optimizer_hook": 434, "flatten_tensordict": [435, 463], "max_dim": 435, "rb_trainer": 435, "batch_process": [435, 436, 437, 459], "post_loss": [435, 459], "999": [436, 463], "jitter": 436, "finfo": 436, "default_dtyp": 436, "update_reward_stat": 436, "normalize_reward": 436, "make_train": [437, 454], "_process_batch_hook": [437, 459], "select_kei": [437, 459], "versatil": [438, 467], "optim_steps_per_batch": [438, 459, 463], "clip_grad_norm": 438, "clip_norm": 438, "progress_bar": 438, "save_trainer_interv": 438, "log_interv": [438, 463], "save_trainer_fil": [438, 459], "load_from_fil": [438, 459], "update_weights_interv": [440, 463], "post_step": [440, 459, 463], "dictconfig": [441, 442, 443, 444, 446, 447, 448, 449, 452], "unknowingli": 441, "annealing_fram": [441, 462], "init_env_step": [441, 442, 462], "proof_environ": [442, 462], "sta": 442, "ot": 442, "actor_model_explor": [443, 444, 462], "make_env_kwarg": [443, 444], "targetnetupdat": [445, 447, 448], "replayargsconfig": 446, "target_net_updat": [448, 462, 463], "constitu": 448, "egreedywrapp": 448, "env_proof": 448, "obs_spec": 448, "net_valu": 448, "dir": [448, 459, 463], "gettempdir": 448, "namespac": [449, 452], "transformed_env_constructor": [449, 454], "num_env_per_collector": [450, 451], "video_tag": 452, "norm_obs_onli": 452, "use_env_cr": 452, "custom_env_mak": 452, "custom_env": 452, "return_transformed_env": 452, "action_dim_gsd": 452, "state_dim_gsd": 452, "obs_norm_state_dict": 452, "weightupdat": 454, "distributedsyncdatacollector": 454, "submitit_delayed_launch": 454, "remotetensordictreplaybuff": 454, "rational": 454, "footnot": 454, "binarydiscretetensorspec": 454, "boundedtensorspec": 454, "discretetensorspec": 454, "lazystackedcompositespec": 454, "lazystackedtensorspec": 454, "multidiscretetensorspec": 454, "multionehotdiscretetensorspec": 454, "nontensorspec": 454, "onehotdiscretetensorspec": 454, "unboundedcontinuoustensorspec": 454, "unboundeddiscretetensorspec": 454, "prompttensordicttoken": 454, "rolloutfrommodel": 454, "tokenizeddatasetload": 454, "create_infinite_iter": 454, "constantklcontrol": 454, "adaptiveklcontrol": 454, "densifyreward": 454, "h5combin": 454, "h5split": 454, "nested2t": 454, "check_no_exclusive_kei": 454, "consolidate_spec": 454, "contains_lazy_spec": 454, "envmetadata": 454, "chessenv": 454, "tictactoeenv": 454, "llmhashingenv": 454, "check_marl_group": 454, "get_available_librari": 454, "terminated_or_trunc": 454, "dreamerdecod": 454, "braxwrapp": 454, "dmcontrolwrapp": 454, "isaaclabwrapp": 454, "jumanjiwrapp": 454, "meltingpotenv": 454, "meltingpotwrapp": 454, "mogymenv": 454, "multithreadedenvwrapp": 454, "openmlenv": 454, "openspielwrapp": 454, "openspielenv": 454, "pettingzooenv": [454, 475], "robohiveenv": 454, "smacv2env": 454, "smacv2wrapp": 454, "unitymlagentsenv": 454, "unitymlagentswrapp": 454, "vmaswrapp": 454, "register_gym_spec_convers": 454, "vllmupdat": 454, "llmcollector": [454, 456], "qvaluehook": 454, "distributionalqvaluehook": 454, "reset_nois": 454, "cemplann": 454, "mpcplannerbas": 454, "mppiplann": 454, "independentnorm": 454, "truncatednorm": 454, "maskedonehotcategor": 454, "onehotordin": 454, "inv_softplu": 454, "vmapmodul": 454, "distributionaldqnloss": [454, 463], "discretesacloss": 454, "crossqloss": 454, "iqlloss": 454, "discreteiqlloss": 454, "cqlloss": 454, "discretecqlloss": 454, "gailloss": 454, "dtloss": 454, "onlinedtloss": 454, "td3bcloss": 454, "ppoloss": 454, "a2closs": 454, "reinforceloss": 454, "dreameractorloss": 454, "dreamermodelloss": 454, "dreamervalueloss": 454, "td0estim": [454, 462], "td1estim": [454, 462], "td0_return_estim": 454, "td0_advantage_estim": 454, "td1_return_estim": 454, "vec_td1_return_estim": 454, "td1_advantage_estim": 454, "vec_td1_advantage_estim": 454, "td_lambda_return_estim": 454, "vec_td_lambda_return_estim": 454, "td_lambda_advantage_estim": 454, "vec_td_lambda_advantage_estim": 454, "generalized_advantage_estim": 454, "vec_generalized_advantage_estim": 454, "hardupd": [454, 462, 469], "softupd": [454, 462, 463, 465, 466, 469, 472, 475], "distance_loss": [454, 462], "group_optim": 454, "hold_out_net": 454, "hold_out_param": [454, 462], "batchsubsampl": [454, 459], "clearcudacach": 454, "countframeslog": 454, "logscalar": [454, 459, 463], "optimizerhook": [454, 463], "logvalidationreward": [454, 459, 462, 463], "replaybuffertrain": [454, 459, 463], "rewardnorm": 454, "selectkei": [454, 459], "trainerhookbas": [454, 459, 463], "updateweight": [454, 459, 463], "make_collector_offpolici": 454, "make_collector_onpolici": 454, "make_dqn_loss": 454, "make_replay_buff": [454, 462], "make_target_updat": 454, "parallel_env_constructor": [454, 462], "sync_async_collector": 454, "sync_sync_collector": 454, "correct_for_frame_skip": 454, "get_stats_random_rollout": 454, "mlflowlogg": 454, "get_logg": 454, "generate_exp_nam": 454, "journei": 455, "textbook": 455, "highlight": [455, 475], "ever": [455, 476], "bump": 455, "benefit": [455, 467, 475, 476, 479], "pr": 455, "fundament": [456, 470], "templatetransform": 456, "pythoninterpret": 456, "klrewardtransform": 456, "grpoloss": 456, "simpler": [456, 463, 467], "make_mlgym": 456, "7b": 456, "step_data": 456, "s_": 456, "unifi": [456, 482], "ground": [457, 462, 477], "recycl": [457, 479], "noisier": 457, "Their": [457, 475, 476], "sd": [457, 482], "prob_modul": 457, "uncertainti": 457, "soften": 457, "backbon": [457, 465, 468, 474, 481], "make_actor": 457, "make_valu": 457, "shared_param": 457, "make_common": 457, "reusabl": [458, 462, 479], "swappabl": [458, 462], "characterist": [458, 462, 477], "trainabl": [458, 462, 469, 478], "smth": [458, 462], "metric": [458, 462], "plenti": [458, 466], "amort": [458, 463, 464], "told": [458, 464], "pseudo": [458, 470, 477], "buri": 458, "str_valu": 458, "nutshel": [458, 462], "barto": [458, 475, 476], "chapter": [458, 471], "value_net_loss": 458, "pow": [458, 462], "room": 458, "signifi": [458, 475, 476], "underperform": 458, "intric": [458, 468], "set_composite_lp_aggreg": [458, 476], "action_td": 458, "action0": 458, "f0": 458, "action1": 458, "f1": 458, "f2": 458, "f3": 458, "action0_log_prob": 458, "action1_log_prob": 458, "inferior": 458, "multivari": 458, "dirichlet": 458, "prev_log_prob": 458, "new_log_prob": 458, "log_weight": 458, "appreci": [458, 467], "multihead": 458, "believ": 459, "substanti": 459, "_pre_steps_log_hook": 459, "_pre_optim_hook": 459, "sub_batch": 459, "_post_loss_hook": 459, "_post_optim_hook": 459, "post_optim": [459, 463], "_post_optim_log": 459, "post_optim_log": 459, "_post_steps_hook": 459, "_post_steps_log_hook": 459, "post_steps_log": 459, "logginghook": 459, "logging_hook": 459, "save_dict": 459, "some_valu": 459, "torchsnapshot": 459, "ckpt_backend": 459, "filepath": 459, "save_train": 459, "000": [461, 480], "galleri": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "mem": [461, 480], "mb": [461, 480], "coding_ddpg": [461, 462, 480], "coding_dqn": [461, 463, 480], "coding_ppo": [461, 464, 480], "dqn_with_rnn": [461, 465, 480], "multi_task": [461, 474, 480], "multiagent_competitive_ddpg": [461, 475, 480], "multiagent_ppo": [461, 476, 480], "pretrained_model": [461, 478, 480], "rb_tutori": [461, 479, 480], "torchrl_demo": [461, 480, 481], "torchrl_env": [461, 480, 482], "author": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 479, 482], "vincent": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 479, 482], "moen": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 479, 482], "assembl": 462, "focus": [462, 469], "maxim": [462, 469, 477], "transpar": [462, 465], "bash": 462, "is_fork": [462, 463, 464, 465, 475, 476, 478], "get_start_method": [462, 463, 464, 465, 475, 476, 478], "collector_devic": 462, "loss_dict": 462, "modal": 462, "oblivi": [462, 464, 479], "elementari": 462, "didact": [462, 466], "dilut": 462, "pessimist": [462, 463, 464], "target_actor_network_param": 462, "actor_in_kei": 462, "actor_crit": 462, "compromis": 462, "hp": 462, "_value_estim": 462, "elif": [462, 463], "unknown": 462, "_loss_actor": 462, "td_copi": 462, "actor_network_param": [462, 475], "value_network_param": [462, 475], "_loss_valu": 462, "pred_val": 462, "target_value_network_param": 462, "glue": 462, "_forward": 462, "remaind": 462, "env_librari": 462, "env_task": 462, "env_arg": [462, 463], "torchr": 462, "rescal": 462, "presum": 462, "make_transformed_env": 462, "reward_sc": 462, "env_per_collector": 462, "transform_state_dict": 462, "make_t_env": 462, "cheat": 462, "10m": 462, "cautiou": 462, "magnitud": [462, 475], "thousand": [462, 465], "get_env_stat": 462, "proof_env": 462, "5000": [462, 466, 472], "recal": [462, 464, 479], "ddpgmlpactor": 462, "ddpgmlpqnet": 462, "materi": 462, "ornsteinuhlenbeckprocessmodul": [462, 468], "make_ddpg_actor": 462, "q_net": 462, "tight": 462, "10_000": [462, 464], "traj_len": [462, 465], "make_record": 462, "recorder_obj": 462, "pick": [462, 463, 468], "buffer_s": [462, 463], "random_crop_len": 462, "prb": 462, "buffer_scratch_dir": [462, 463, 465, 470, 478], "dataflow": 462, "ceil_div": 462, "utd": [462, 465], "update_to_data": 462, "realiz": 462, "_must_": 462, "001": [462, 477], "outdat": 462, "trick": [462, 463], "despit": 462, "optimizer_actor": 462, "weight_decai": [462, 463], "optimizer_valu": 462, "total_collection_step": 462, "rewards_ev": 462, "collected_fram": 462, "numel": [462, 464, 465, 466, 472, 475, 478, 479], "current_fram": [462, 475], "sampled_tensordict": 462, "gn1": 462, "clip_grad_norm_": [462, 464, 475, 476, 477], "gn2": 462, "gn": [462, 477], "td_record": 462, "rn": 462, "2f": 462, "mention": [462, 465, 479, 482], "matplotlib": [462, 464, 465, 466, 475, 476, 477, 479, 482], "pyplot": [462, 464, 465, 466, 475, 476, 477, 479, 482], "plt": [462, 464, 465, 466, 475, 476, 477, 479, 482], "zip": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "legend": [462, 475], "xlabel": [462, 465, 476, 477], "ylabel": [462, 476], "tight_layout": 462, "takeawai": [462, 463, 466], "distpatch": 462, "jupyt": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "ipynb": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482], "sphinx": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "road": 463, "highest": [463, 468], "prerequisit": [463, 465], "lookup": 463, "cart": 463, "pole": 463, "un": 463, "actuat": 463, "frictionless": 463, "duelingcnndqnet": 463, "egreedymodul": [463, 465, 466, 468, 472], "is_notebook": 463, "shell": 463, "get_ipython": 463, "__class__": 463, "zmqinteractiveshel": 463, "qtconsol": 463, "terminalinteractiveshel": 463, "ipython": [463, 476, 477], "nameerror": [463, 475], "umbrella": 463, "misplac": 463, "misus": 463, "orchestr": [463, 469, 471], "five": 463, "64x64": 463, "motion": [463, 477], "obs_norm_sd": 463, "mp_context": 463, "get_norm_stat": 463, "test_env": 463, "mathbb": 463, "rightarrow": 463, "make_model": 463, "dummy_env": 463, "init_bia": 463, "exploration_modul": [463, 465, 466, 468, 472], "eps_greedy_v": 463, "eps_greedy_val_env": 463, "actor_explor": 463, "get_replay_buff": 463, "n_optim": [463, 469, 470], "parametriz": 463, "get_collector": 463, "bunch": 463, "ubiquit": [463, 467], "get_loss_modul": 463, "target_updat": [463, 475], "995": 463, "variat": 463, "2e": [463, 477], "wd": 463, "upd": 463, "harder": [463, 481], "5_000": 463, "500000": 463, "100000": 463, "005": [463, 475], "mandatori": [463, 464, 476, 477], "fairer": 463, "budget": 463, "dqn_exp_": 463, "uuid1": [463, 482], "cumbersom": 463, "buffer_hook": 463, "aliv": 463, "total_reward": 463, "print_csv_files_in_fold": 463, "folder_path": 463, "csv_file": 463, "output_str": 463, "dirpath": 463, "endswith": 463, "strip": 463, "qvaluenetwork": 463, "accuraci": 463, "fanci": [463, 470], "demonstr": [464, 466, 470, 475, 476, 477, 479, 482], "talk": 464, "six": 464, "sophist": [464, 476], "invent": 464, "theta_k": 464, "pi_": 464, "exceed": 464, "discourag": [464, 477], "indispens": 464, "analyz": 464, "lingua": 464, "franca": 464, "defaultdict": [464, 477], "3e": [464, 465, 475, 476], "max_grad_norm": [464, 475, 476], "sub_batch_s": 464, "num_epoch": [464, 476], "entropy_ep": [464, 476], "charact": [464, 466], "inverteddoublependulum": 464, "transmit": 464, "stai": 464, "confid": [464, 475, 476], "ran": 464, "f_": 464, "mu_": 464, "difficulti": [464, 482], "d_ob": 464, "d_action": 464, "policy_modul": [464, 475, 476], "briefli": [464, 475, 476], "refil": [464, 476], "easiest": [464, 469, 475, 476], "mathemat": [464, 475, 476], "tradeoff": [464, 476], "advantage_modul": 464, "lr_schedul": [464, 477], "cosineannealinglr": [464, 477], "eval_str": 464, "tensordict_data": [464, 476], "data_view": [464, 476], "subdata": [464, 475, 476], "cum_reward_str": 464, "stepcount_str": 464, "param_group": [464, 475], "lr_str": 464, "eval_rollout": 464, "nice": [464, 467, 470], "figsiz": [464, 477], "subplot": [464, 475, 477, 482], "titl": [464, 465, 466, 476, 477], "84x84": [465, 466], "accessori": 465, "stamp": 465, "n_cell": 465, "customiz": 465, "wouldn": 465, "qval": 465, "stoch_polici": 465, "opportun": [465, 475], "uniniti": 465, "again": [465, 466, 467, 468, 470, 476, 478, 479, 482], "strongli": 465, "million": 465, "sake": [465, 478, 479], "20_000": [465, 477], "longest": 465, "npai": 465, "action_spread": 465, "strong": 466, "impress": 466, "arduino": 466, "raspberri": 466, "pi": [466, 475, 476, 477], "alon": 466, "examplifi": 466, "ship": 466, "stick": 466, "nearest": 466, "value_mlp": [466, 472], "init_rand_step": [466, 472], "total_count": [466, 472], "total_episod": [466, 472], "t0": [466, 472], "screen": [466, 475], "color": [466, 475], "unblock": 466, "policy_transform": 466, "fake_td": 466, "exported_polici": 466, "div": 466, "graph_modul": 466, "print_read": 466, "group0": 466, "group0_agent0_ob": 466, "collid": [466, 476], "group0_agent0": 466, "agent0_ob": 466, "comma": 466, "digress": 466, "exported_stochastic_polici": 466, "trace": 466, "batchsizetransform": 466, "hidden0": 466, "hidden1": 466, "recurrent_polici": 466, "fake_ob": 466, "fake_hidden0": 466, "fake_hidden1": 466, "fake_is_init": 466, "exported_recurrent_polici": 466, "platform": [466, 481], "aoti": 466, "_inductor": 466, "aoti_compile_and_packag": 466, "aoti_load_packag": 466, "pt2": 466, "pkg_path": 466, "package_path": 466, "compiled_modul": 466, "onnxruntim": 466, "showcas": [466, 477], "web": 466, "explain": [466, 478], "tensorrt": 466, "android": 466, "aleinterfac": 466, "rom": 466, "loadrom": 466, "reset_gam": 466, "screen_ob": 466, "getscreenrgb": 466, "tick_param": 466, "bottom": 466, "labelleft": 466, "labelbottom": 466, "imshow": [466, 482], "dynamo_export": 466, "onnx_policy_export": 466, "onnx_file_path": 466, "ort_sess": 466, "inferencesess": 466, "cpuexecutionprovid": 466, "onnxruntime_input": 466, "get_input": 466, "onnx_polici": 466, "lightweight": [466, 471], "onnxruntime_output": 466, "topic": [467, 468, 469], "straight": 467, "backtrack": 467, "reset_with_act": 467, "stepped_data": 467, "spatial": 467, "useless": 467, "policyless": 467, "examin": [467, 475], "tackl": 468, "delv": 468, "extractor": 468, "additivegaussianmodul": [468, 475], "exploration_polici": [468, 475], "greedili": 468, "2d": [468, 475, 476], "innov": [468, 469], "rollout_explor": 468, "sole": 469, "supervis": [469, 470, 479, 482], "n_collect": 469, "get_next_batch": 469, "concis": 469, "ddpg_loss": 469, "total_loss": 469, "prove": 469, "reliev": 469, "concern": 469, "accustom": 470, "surprisingli": 470, "art": [470, 475, 476], "countless": 470, "yourself": [470, 475, 476], "everywher": 471, "log_scalar": 471, "my_scalar": 471, "excess": 471, "lesson": 472, "voluntarili": 472, "torchrl_logg": 472, "training_loop": 472, "video_record": 472, "arbitrarili": 472, "t1": 472, "conclud": [472, 478], "tutorials_python": 473, "tutorials_jupyt": 473, "env1_obs_kei": 474, "observation_stand": 474, "env2_obs_kei": 474, "observation_walk": 474, "tdreset1": 474, "tdreset2": 474, "lazy_stack": 474, "policy_common": 474, "policy_stand": 474, "policy_walk": 474, "But": 474, "env1_mak": 474, "env2_mak": 474, "_single_task": 474, "td_rollout": 474, "matteo": [475, 476], "bettini": [475, 476], "benchmarl": [475, 476], "simple_tag": 475, "maddpg": [475, 476], "multiagentparticleenviron": 475, "mpe": 475, "centralis": [475, 476], "tie": [475, 476], "iddpg": [475, 476], "richard": 475, "andrew": 475, "mit": 475, "press": 475, "2018": 475, "mathbf": [475, 476], "decentralis": [475, 476], "literatur": [475, 476], "overcom": [475, 476], "stationari": [475, 476], "establish": 475, "gui": [475, 476], "is_sphinx": 475, "__sphinx_build__": 475, "n_iter": [475, 476, 477], "evad": 475, "iteration_when_stop_training_evad": 475, "memory_s": 475, "n_optimiser_step": 475, "train_batch_s": 475, "polyak_tau": 475, "chaser": 475, "red": 475, "circl": [475, 476], "green": 475, "touch": [475, 477], "penal": [475, 476], "obstacl": 475, "drag": [475, 476], "elast": [475, 476], "collis": [475, 476], "imped": 475, "n_chaser": 475, "n_evad": 475, "n_obstacl": 475, "use_vma": 475, "simple_tag_v3": 475, "num_good": 475, "num_adversari": 475, "num_obstacl": 475, "max_cycl": 475, "num_vmas_env": [475, 476], "num_good_ag": 475, "num_landmark": 475, "four": [475, 476, 477], "n_agents_in_that_group": 475, "stress": [475, 476], "paramount": [475, 476], "n_rollout_step": [475, 476], "evolut": [475, 476], "group_nam": 475, "n_agents_in_group": 475, "minor": 475, "agents_exploration_polici": 475, "utilis": [475, 476], "n_obs_per_ag": [475, 476], "n_actions_per_ag": [475, 476], "share_parameters_polici": [475, 476], "policy_net": [475, 476], "_agent": 475, "grant": [475, 476], "converg": [475, 476], "share_parameters_crit": [475, 476], "obs_act": 475, "cat_modul": 475, "critic_modul": 475, "fantast": [475, 476], "reset_td": 475, "interfer": 475, "subject": [475, 477], "flatten_kei": 475, "process_batch": 475, "group_shap": 475, "get_item_shap": [475, 476], "nested_done_kei": 475, "nested_terminated_kei": 475, "desc": [475, 476], "episode_reward_mean_": 475, "episode_reward_mean_map": 475, "train_group_map": 475, "group_batch": 475, "_group": 475, "loss_nam": 475, "episode_reward_mean": [475, 476], "fig": [475, 479], "set_ylabel": 475, "axvlin": 475, "orang": 475, "set_xlabel": 475, "video_logg": 475, "vmas_log": 475, "env_with_rend": 475, "vmas_rend": 475, "print_log_dir": 475, "profici": [475, 476], "lidar": 476, "sensor": 476, "mappo": 476, "ippo": 476, "analys": 476, "visualis": 476, "vmas_devic": 476, "6_000": 476, "minibatch_s": 476, "generalis": 476, "simd": 476, "warp": 476, "todai": 476, "surround": 476, "dot": [476, 477], "scenario_nam": 476, "critic_net": 476, "minibatch": 476, "episode_reward_mean_list": 476, "critic_network_param": 476, "target_critic_network_param": 476, "xvfb": 476, "pyvirtualdisplai": 476, "1400": 476, "900": 476, "pil": 476, "rendering_callback": 476, "fromarrai": 476, "gif": 476, "save_al": 476, "append_imag": 476, "freeli": 477, "broader": 477, "wider": 477, "acquaint": 477, "avenu": 477, "_apply_to_composit": 477, "default_x": 477, "default_i": 477, "upward": 477, "angular": 477, "sin": 477, "rad": 477, "angl": 477, "deleg": 477, "new_th": 477, "new_thdot": 477, "g_forc": 477, "angle_norm": 477, "albeit": 477, "high_th": 477, "high_thdot": 477, "low_th": 477, "low_thdot": 477, "trivial": 477, "irrelev": 477, "_make_spec": 477, "td_param": 477, "render_fp": 477, "random_": 477, "_make_step": 477, "staticmethod": 477, "skeleton": 477, "unitari": 477, "sine": 477, "cosin": 477, "sintransform": 477, "costransform": 477, "t_sin": 477, "t_co": 477, "cat_transform": 477, "simple_rollout": 477, "unexplor": 477, "init_td": 477, "traj_return": 477, "last_reward": 477, "is_ipython": 477, "inlin": 477, "get_backend": 477, "ion": 477, "gcf": 477, "clear_output": 477, "r3mtransform": 478, "embodi": 478, "env_transform": [478, 482], "wiser": 478, "batteri": 479, "gc": 479, "buffer_list": 479, "lowest": 479, "medium": 479, "buffer_lazytensor": 479, "tempdir": 479, "buffer_lazymemmap": 479, "fullest": 479, "mydata": 479, "buffer_lazi": 479, "_i": 479, "artifici": 479, "hamper": 479, "she": 479, "proport": 479, "reappear": 479, "unfold": 479, "problemat": 479, "4th": 479, "prioritizedslicesampl": 479, "tensordictmaxvaluewrit": 479, "demo": 481, "icml": 481, "vmoen": 481, "fb": 481, "invest": 481, "media": 481, "predominantli": 481, "data2": 481, "sub_key1": 481, "scturctur": 481, "data_stack": 481, "data_sampl": 481, "_sampler": 481, "_sum_tre": 481, "modulenotfounderror": 481, "noopresetenv": [481, 482], "backbone_modul": 481, "params_expand": 481, "exec_sequ": 481, "tensordict_exp": 481, "base_modul": 481, "tensordicts_prealloc": 481, "tensordicts_stack": 481, "tensordict_rollout": [481, 482], "automatical": 481, "60": 481, "particularili": 481, "concatmodul": 481, "loss_td": 481, "contributor": 481, "curiou": 481, "nascent": 481, "unsupervis": 482, "_build_env": 482, "deserv": 482, "__episode__": 482, "__trajectory__": 482, "void": 482, "reproduct": 482, "tensordict_tprim": 482, "wrapper1": 482, "wrapper2": 482, "obviou": 482, "truth": 482, "env_transformed_bi": 482, "stanc": 482, "transformeddistribut": 482, "base_dist": 482, "concat": 482, "mofidi": 482, "transformedenviron": 482, "moderet": 482, "computation": 482, "incom": 482, "amongst": 482, "has_cuda": 482, "convention": 482, "markovian": 482, "bar_": 482, "get_someth": 482, "aargh": 482, "is_clos": 482, "foo_list": 482, "121": 482, "evolv": 482, "steadi": 482, "approx": 482, "absor": 482, "_extra_st": 482}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [274, 0, 1, "", "implement_for"], [428, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiProcessedWeightUpdater"], [15, 0, 1, "", "MultiSyncDataCollector"], [16, 0, 1, "", "MultiaSyncDataCollector"], [17, 0, 1, "", "RayWeightUpdater"], [18, 0, 1, "", "SyncDataCollector"], [19, 0, 1, "", "VanillaWeightUpdater"], [20, 0, 1, "", "WeightUpdaterBase"], [21, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[14, 1, 1, "", "all_worker_ids"], [14, 2, 1, "", "collector"], [14, 1, 1, "", "push_weights"], [14, 1, 1, "", "register_collector"]], "torchrl.collectors.MultiSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[17, 1, 1, "", "_get_server_weights"], [17, 1, 1, "", "_maybe_map_weights"], [17, 1, 1, "", "_skip_update"], [17, 1, 1, "", "_sync_weights_with_worker"], [17, 1, 1, "id0", "all_worker_ids"], [17, 2, 1, "", "collector"], [17, 1, 1, "", "push_weights"], [17, 1, 1, "", "register_collector"]], "torchrl.collectors.SyncDataCollector": [[18, 1, 1, "", "async_shutdown"], [18, 1, 1, "", "iterator"], [18, 1, 1, "", "load_state_dict"], [18, 1, 1, "", "pause"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "rollout"], [18, 1, 1, "", "set_seed"], [18, 1, 1, "", "shutdown"], [18, 1, 1, "", "start"], [18, 1, 1, "", "state_dict"], [18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "", "push_weights"], [19, 1, 1, "", "register_collector"]], "torchrl.collectors.WeightUpdaterBase": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 1, 1, "id0", "push_weights"], [20, 1, 1, "id1", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[22, 0, 1, "", "DistributedDataCollector"], [23, 0, 1, "", "DistributedSyncDataCollector"], [24, 0, 1, "", "DistributedWeightUpdater"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RPCWeightUpdater"], [27, 0, 1, "", "RayCollector"], [28, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[24, 1, 1, "", "_get_server_weights"], [24, 1, 1, "", "_maybe_map_weights"], [24, 1, 1, "", "_sync_weights_with_worker"], [24, 1, 1, "id0", "all_worker_ids"], [24, 2, 1, "", "collector"], [24, 1, 1, "", "push_weights"], [24, 1, 1, "", "register_collector"], [24, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "async_shutdown"], [25, 1, 1, "", "pause"], [25, 1, 1, "", "start"], [25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[26, 1, 1, "", "_get_server_weights"], [26, 1, 1, "", "_maybe_map_weights"], [26, 1, 1, "", "_sync_weights_with_worker"], [26, 1, 1, "id0", "all_worker_ids"], [26, 2, 1, "", "collector"], [26, 1, 1, "", "push_weights"], [26, 1, 1, "", "register_collector"], [26, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[27, 1, 1, "", "add_collectors"], [27, 1, 1, "", "async_shutdown"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "local_policy"], [27, 1, 1, "", "pause"], [27, 2, 1, "", "remote_collectors"], [27, 1, 1, "", "set_seed"], [27, 1, 1, "", "shutdown"], [27, 1, 1, "", "start"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "stop_remote_collectors"], [27, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[29, 0, 1, "", "LLMCollector"], [30, 0, 1, "", "vLLMUpdater"]], "torchrl.collectors.llm.LLMCollector": [[29, 1, 1, "", "async_shutdown"], [29, 2, 1, "", "dialog_turns_per_batch"], [29, 1, 1, "", "iterator"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "pause"], [29, 1, 1, "", "reset"], [29, 2, 1, "", "rollout"], [29, 1, 1, "", "set_seed"], [29, 1, 1, "", "shutdown"], [29, 1, 1, "", "start"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.vLLMUpdater": [[30, 1, 1, "", "all_worker_ids"], [30, 2, 1, "", "collector"], [30, 1, 1, "", "push_weights"], [30, 1, 1, "", "register_collector"]], "torchrl.collectors.utils": [[31, 3, 1, "", "split_trajectories"]], "torchrl.data": [[32, 0, 1, "", "AdaptiveKLController"], [33, 0, 1, "", "Binary"], [34, 0, 1, "", "BinaryDiscreteTensorSpec"], [35, 0, 1, "", "BinaryToDecimal"], [36, 0, 1, "", "Bounded"], [37, 0, 1, "", "BoundedTensorSpec"], [38, 0, 1, "", "Categorical"], [39, 0, 1, "", "Composite"], [40, 0, 1, "", "CompositeSpec"], [41, 0, 1, "", "ConstantKLController"], [42, 0, 1, "", "DensifyReward"], [43, 0, 1, "", "DiscreteTensorSpec"], [44, 0, 1, "", "Flat2TED"], [45, 0, 1, "", "H5Combine"], [46, 0, 1, "", "H5Split"], [47, 0, 1, "", "HashToInt"], [48, 0, 1, "", "LazyStackedCompositeSpec"], [49, 0, 1, "", "LazyStackedTensorSpec"], [50, 0, 1, "", "MCTSForest"], [51, 0, 1, "", "MultiCategorical"], [52, 0, 1, "", "MultiDiscreteTensorSpec"], [53, 0, 1, "", "MultiOneHot"], [54, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [55, 0, 1, "", "MultiStep"], [56, 0, 1, "", "Nested2TED"], [57, 0, 1, "", "NonTensor"], [58, 0, 1, "", "NonTensorSpec"], [59, 0, 1, "", "OneHot"], [60, 0, 1, "", "OneHotDiscreteTensorSpec"], [61, 0, 1, "", "PairwiseDataset"], [62, 0, 1, "", "PrioritizedReplayBuffer"], [63, 0, 1, "", "PromptData"], [64, 0, 1, "", "PromptTensorDictTokenizer"], [65, 0, 1, "", "QueryModule"], [66, 0, 1, "", "RandomProjectionHash"], [67, 0, 1, "", "RayReplayBuffer"], [68, 0, 1, "", "RemoteTensorDictReplayBuffer"], [69, 0, 1, "", "ReplayBuffer"], [70, 0, 1, "", "RewardData"], [71, 0, 1, "", "RolloutFromModel"], [72, 0, 1, "", "SipHash"], [73, 0, 1, "", "Stacked"], [74, 0, 1, "", "StackedComposite"], [75, 0, 1, "", "TED2Flat"], [76, 0, 1, "", "TED2Nested"], [77, 0, 1, "", "TensorDictMap"], [78, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [79, 0, 1, "", "TensorDictReplayBuffer"], [80, 0, 1, "", "TensorDictTokenizer"], [81, 0, 1, "", "TensorMap"], [82, 0, 1, "", "TensorSpec"], [83, 0, 1, "", "TokenizedDatasetLoader"], [84, 0, 1, "", "Tree"], [85, 0, 1, "", "Unbounded"], [86, 0, 1, "", "UnboundedContinuous"], [87, 0, 1, "", "UnboundedContinuousTensorSpec"], [88, 0, 1, "", "UnboundedDiscrete"], [89, 0, 1, "", "UnboundedDiscreteTensorSpec"], [90, 0, 1, "", "check_no_exclusive_keys"], [91, 0, 1, "", "consolidate_spec"], [92, 0, 1, "", "contains_lazy_spec"], [93, 0, 1, "", "create_infinite_iterator"], [94, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[32, 1, 1, "", "update"]], "torchrl.data.Binary": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 4, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "erase_memoize_cache"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 1, 1, "", "memoize_encode"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "set_provisional_n"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 4, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[35, 1, 1, "", "add_module"], [35, 1, 1, "", "apply"], [35, 1, 1, "", "bfloat16"], [35, 1, 1, "", "buffers"], [35, 1, 1, "", "children"], [35, 1, 1, "", "compile"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 1, 1, "", "double"], [35, 1, 1, "", "eval"], [35, 1, 1, "", "extra_repr"], [35, 1, 1, "", "float"], [35, 1, 1, "", "forward"], [35, 1, 1, "", "get_buffer"], [35, 1, 1, "", "get_extra_state"], [35, 1, 1, "", "get_parameter"], [35, 1, 1, "", "get_submodule"], [35, 1, 1, "", "half"], [35, 1, 1, "", "ipu"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "modules"], [35, 1, 1, "", "mtia"], [35, 1, 1, "", "named_buffers"], [35, 1, 1, "", "named_children"], [35, 1, 1, "", "named_modules"], [35, 1, 1, "", "named_parameters"], [35, 1, 1, "", "parameters"], [35, 1, 1, "", "register_backward_hook"], [35, 1, 1, "", "register_buffer"], [35, 1, 1, "", "register_forward_hook"], [35, 1, 1, "", "register_forward_pre_hook"], [35, 1, 1, "", "register_full_backward_hook"], [35, 1, 1, "", "register_full_backward_pre_hook"], [35, 1, 1, "", "register_load_state_dict_post_hook"], [35, 1, 1, "", "register_load_state_dict_pre_hook"], [35, 1, 1, "", "register_module"], [35, 1, 1, "", "register_parameter"], [35, 1, 1, "", "register_state_dict_post_hook"], [35, 1, 1, "", "register_state_dict_pre_hook"], [35, 1, 1, "", "requires_grad_"], [35, 1, 1, "", "set_extra_state"], [35, 1, 1, "", "set_submodule"], [35, 1, 1, "", "share_memory"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_empty"], [35, 1, 1, "", "train"], [35, 1, 1, "", "type"], [35, 1, 1, "", "xpu"], [35, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 2, 1, "", "device"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "erase_memoize_cache"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "make_neg_dim"], [36, 1, 1, "", "memoize_encode"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "set_provisional_n"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_categorical"], [38, 1, 1, "", "to_categorical_spec"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "to_one_hot"], [38, 1, 1, "", "to_one_hot_spec"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "update_mask"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 2, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "set"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "get"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_empty"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "items"], [40, 1, 1, "", "keys"], [40, 1, 1, "", "lock_"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "pop"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "separates"], [40, 1, 1, "", "set"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unlock_"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "values"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "compile"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "is_tdmodule_compatible"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "mtia"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_load_state_dict_pre_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_post_hook"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset_out_keys"], [42, 1, 1, "", "reset_parameters_recursive"], [42, 1, 1, "", "select_out_keys"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_submodule"], [42, 1, 1, "", "share_memory"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 4, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "set_provisional_n"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "compile"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "mtia"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_load_state_dict_pre_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "register_state_dict_post_hook"], [47, 1, 1, "", "register_state_dict_pre_hook"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_submodule"], [47, 1, 1, "", "share_memory"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 2, 1, "", "device"], [48, 1, 1, "", "empty"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "erase_memoize_cache"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "get"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_empty"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "items"], [48, 1, 1, "", "keys"], [48, 1, 1, "", "lock_"], [48, 1, 1, "", "make_neg_dim"], [48, 1, 1, "", "memoize_encode"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "pop"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "separates"], [48, 1, 1, "", "set"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unlock_"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "values"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[50, 2, 1, "", "action_keys"], [50, 2, 1, "", "done_keys"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "get_keys_from_env"], [50, 2, 1, "", "observation_keys"], [50, 2, 1, "", "reward_keys"], [50, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 4, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "erase_memoize_cache"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 1, 1, "", "memoize_encode"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "set_provisional_n"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 2, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "erase_memoize_cache"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 1, 1, "", "memoize_encode"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "erase_memoize_cache"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 1, 1, "", "memoize_encode"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 4, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "erase_memoize_cache"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 1, 1, "", "memoize_encode"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_categorical"], [59, 1, 1, "", "to_categorical_spec"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "to_one_hot"], [59, 1, 1, "", "to_one_hot_spec"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "update_mask"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[61, 2, 1, "", "device"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "fields"], [61, 1, 1, "", "from_dataset"], [61, 1, 1, "", "from_tensordict"], [61, 1, 1, "", "get"], [61, 1, 1, "", "load"], [61, 1, 1, "", "load_"], [61, 1, 1, "", "load_memmap"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "memmap"], [61, 1, 1, "", "memmap_"], [61, 1, 1, "", "memmap_like"], [61, 1, 1, "", "memmap_refresh_"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to_tensordict"], [61, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[63, 2, 1, "", "device"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "fields"], [63, 1, 1, "", "from_dataset"], [63, 1, 1, "", "from_tensordict"], [63, 1, 1, "", "get"], [63, 1, 1, "", "load"], [63, 1, 1, "", "load_"], [63, 1, 1, "", "load_memmap"], [63, 1, 1, "", "load_state_dict"], [63, 1, 1, "", "memmap"], [63, 1, 1, "", "memmap_"], [63, 1, 1, "", "memmap_like"], [63, 1, 1, "", "memmap_refresh_"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set"], [63, 1, 1, "", "state_dict"], [63, 1, 1, "", "to_tensordict"], [63, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[65, 1, 1, "", "add_module"], [65, 1, 1, "", "apply"], [65, 1, 1, "", "bfloat16"], [65, 1, 1, "", "buffers"], [65, 1, 1, "", "children"], [65, 1, 1, "", "compile"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 1, 1, "", "double"], [65, 1, 1, "", "eval"], [65, 1, 1, "", "extra_repr"], [65, 1, 1, "", "float"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_buffer"], [65, 1, 1, "", "get_extra_state"], [65, 1, 1, "", "get_parameter"], [65, 1, 1, "", "get_submodule"], [65, 1, 1, "", "half"], [65, 1, 1, "", "ipu"], [65, 1, 1, "", "is_tdmodule_compatible"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "modules"], [65, 1, 1, "", "mtia"], [65, 1, 1, "", "named_buffers"], [65, 1, 1, "", "named_children"], [65, 1, 1, "", "named_modules"], [65, 1, 1, "", "named_parameters"], [65, 1, 1, "", "parameters"], [65, 1, 1, "", "register_backward_hook"], [65, 1, 1, "", "register_buffer"], [65, 1, 1, "", "register_forward_hook"], [65, 1, 1, "", "register_forward_pre_hook"], [65, 1, 1, "", "register_full_backward_hook"], [65, 1, 1, "", "register_full_backward_pre_hook"], [65, 1, 1, "", "register_load_state_dict_post_hook"], [65, 1, 1, "", "register_load_state_dict_pre_hook"], [65, 1, 1, "", "register_module"], [65, 1, 1, "", "register_parameter"], [65, 1, 1, "", "register_state_dict_post_hook"], [65, 1, 1, "", "register_state_dict_pre_hook"], [65, 1, 1, "", "requires_grad_"], [65, 1, 1, "", "reset_out_keys"], [65, 1, 1, "", "reset_parameters_recursive"], [65, 1, 1, "", "select_out_keys"], [65, 1, 1, "", "set_extra_state"], [65, 1, 1, "", "set_submodule"], [65, 1, 1, "", "share_memory"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_empty"], [65, 1, 1, "", "train"], [65, 1, 1, "", "type"], [65, 1, 1, "", "xpu"], [65, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "as_remote"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 2, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 2, 1, "", "storage"], [67, 2, 1, "", "write_count"], [67, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[70, 2, 1, "", "device"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "fields"], [70, 1, 1, "", "from_tensordict"], [70, 1, 1, "", "get"], [70, 1, 1, "", "load"], [70, 1, 1, "", "load_"], [70, 1, 1, "", "load_memmap"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "memmap"], [70, 1, 1, "", "memmap_"], [70, 1, 1, "", "memmap_like"], [70, 1, 1, "", "memmap_refresh_"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "to_tensordict"], [70, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[71, 1, 1, "", "create_rollout_td"], [71, 1, 1, "", "generate"], [71, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "cardinality"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 2, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "enumerate"], [73, 1, 1, "", "erase_memoize_cache"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 1, 1, "", "memoize_encode"], [73, 2, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "erase_memoize_cache"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "get"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_empty"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "items"], [74, 1, 1, "", "keys"], [74, 1, 1, "", "lock_"], [74, 1, 1, "", "make_neg_dim"], [74, 1, 1, "", "memoize_encode"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "pop"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "separates"], [74, 1, 1, "", "set"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unlock_"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "values"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[77, 1, 1, "", "add_module"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "bfloat16"], [77, 1, 1, "", "buffers"], [77, 1, 1, "", "children"], [77, 1, 1, "", "compile"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 1, 1, "", "double"], [77, 1, 1, "", "eval"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "float"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "from_tensordict_pair"], [77, 1, 1, "", "get_buffer"], [77, 1, 1, "", "get_extra_state"], [77, 1, 1, "", "get_parameter"], [77, 1, 1, "", "get_submodule"], [77, 1, 1, "", "half"], [77, 1, 1, "", "ipu"], [77, 1, 1, "", "is_tdmodule_compatible"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "modules"], [77, 1, 1, "", "mtia"], [77, 1, 1, "", "named_buffers"], [77, 1, 1, "", "named_children"], [77, 1, 1, "", "named_modules"], [77, 1, 1, "", "named_parameters"], [77, 1, 1, "", "parameters"], [77, 1, 1, "", "register_backward_hook"], [77, 1, 1, "", "register_buffer"], [77, 1, 1, "", "register_forward_hook"], [77, 1, 1, "", "register_forward_pre_hook"], [77, 1, 1, "", "register_full_backward_hook"], [77, 1, 1, "", "register_full_backward_pre_hook"], [77, 1, 1, "", "register_load_state_dict_post_hook"], [77, 1, 1, "", "register_load_state_dict_pre_hook"], [77, 1, 1, "", "register_module"], [77, 1, 1, "", "register_parameter"], [77, 1, 1, "", "register_state_dict_post_hook"], [77, 1, 1, "", "register_state_dict_pre_hook"], [77, 1, 1, "", "requires_grad_"], [77, 1, 1, "", "reset_out_keys"], [77, 1, 1, "", "reset_parameters_recursive"], [77, 1, 1, "", "select_out_keys"], [77, 1, 1, "", "set_extra_state"], [77, 1, 1, "", "set_submodule"], [77, 1, 1, "", "share_memory"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_empty"], [77, 1, 1, "", "train"], [77, 1, 1, "", "type"], [77, 1, 1, "", "xpu"], [77, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 1, 1, "", "as_remote"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 2, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 2, 1, "", "storage"], [78, 2, 1, "", "write_count"], [78, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "erase_memoize_cache"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 1, 1, "", "memoize_encode"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[83, 1, 1, "", "dataset_to_tensordict"], [83, 1, 1, "", "load"]], "torchrl.data.Tree": [[84, 2, 1, "", "branching_action"], [84, 2, 1, "", "device"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "edges"], [84, 1, 1, "", "fields"], [84, 1, 1, "", "from_tensordict"], [84, 2, 1, "", "full_action_spec"], [84, 2, 1, "", "full_done_spec"], [84, 2, 1, "", "full_observation_spec"], [84, 2, 1, "", "full_reward_spec"], [84, 2, 1, "", "full_state_spec"], [84, 1, 1, "", "fully_expanded"], [84, 1, 1, "", "get"], [84, 1, 1, "", "get_vertex_by_hash"], [84, 1, 1, "", "get_vertex_by_id"], [84, 2, 1, "", "is_terminal"], [84, 1, 1, "", "load"], [84, 1, 1, "", "load_"], [84, 1, 1, "", "load_memmap"], [84, 1, 1, "", "load_state_dict"], [84, 1, 1, "", "make_node"], [84, 1, 1, "", "max_length"], [84, 1, 1, "", "memmap"], [84, 1, 1, "", "memmap_"], [84, 1, 1, "", "memmap_like"], [84, 1, 1, "", "memmap_refresh_"], [84, 2, 1, "", "node_observation"], [84, 2, 1, "", "node_observations"], [84, 2, 1, "", "num_children"], [84, 1, 1, "", "num_vertices"], [84, 2, 1, "", "parent"], [84, 1, 1, "", "plot"], [84, 2, 1, "", "prev_action"], [84, 1, 1, "", "rollout_from_path"], [84, 1, 1, "", "save"], [84, 2, 1, "", "selected_actions"], [84, 1, 1, "", "set"], [84, 1, 1, "", "state_dict"], [84, 1, 1, "", "to_string"], [84, 1, 1, "", "to_tensordict"], [84, 1, 1, "", "unbind"], [84, 1, 1, "", "valid_paths"], [84, 1, 1, "", "vertices"], [84, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "erase_memoize_cache"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 1, 1, "", "memoize_encode"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "erase_memoize_cache"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 1, 1, "", "memoize_encode"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "erase_memoize_cache"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 1, 1, "", "memoize_encode"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.llm": [[95, 0, 1, "", "ContentBase"], [96, 0, 1, "", "History"], [97, 0, 1, "", "LLMData"]], "torchrl.data.llm.ContentBase": [[95, 2, 1, "", "device"], [95, 1, 1, "", "dumps"], [95, 1, 1, "", "fields"], [95, 1, 1, "", "from_tensordict"], [95, 1, 1, "", "get"], [95, 1, 1, "", "load"], [95, 1, 1, "", "load_"], [95, 1, 1, "", "load_memmap"], [95, 1, 1, "", "load_state_dict"], [95, 1, 1, "", "memmap"], [95, 1, 1, "", "memmap_"], [95, 1, 1, "", "memmap_like"], [95, 1, 1, "", "memmap_refresh_"], [95, 1, 1, "", "save"], [95, 1, 1, "", "set"], [95, 1, 1, "", "state_dict"], [95, 1, 1, "", "to_tensordict"], [95, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[96, 1, 1, "", "append"], [96, 1, 1, "", "apply_chat_template"], [96, 1, 1, "", "default_spec"], [96, 2, 1, "", "device"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "fields"], [96, 1, 1, "", "from_tensordict"], [96, 1, 1, "", "get"], [96, 1, 1, "", "load"], [96, 1, 1, "", "load_"], [96, 1, 1, "", "load_memmap"], [96, 1, 1, "", "load_state_dict"], [96, 1, 1, "", "memmap"], [96, 1, 1, "", "memmap_"], [96, 1, 1, "", "memmap_like"], [96, 1, 1, "", "memmap_refresh_"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set"], [96, 1, 1, "", "state_dict"], [96, 1, 1, "", "to_tensordict"], [96, 1, 1, "", "unbind"]], "torchrl.data.llm.LLMData": [[97, 2, 1, "", "device"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "fields"], [97, 1, 1, "", "from_tensordict"], [97, 1, 1, "", "get"], [97, 1, 1, "", "load"], [97, 1, 1, "", "load_"], [97, 1, 1, "", "load_memmap"], [97, 1, 1, "", "load_state_dict"], [97, 1, 1, "", "memmap"], [97, 1, 1, "", "memmap_"], [97, 1, 1, "", "memmap_like"], [97, 1, 1, "", "memmap_refresh_"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set"], [97, 1, 1, "", "state_dict"], [97, 1, 1, "", "to_tensordict"], [97, 1, 1, "", "unbind"]], "torchrl.data.replay_buffers": [[98, 0, 1, "", "FlatStorageCheckpointer"], [99, 0, 1, "", "H5StorageCheckpointer"], [100, 0, 1, "", "ImmutableDatasetWriter"], [101, 0, 1, "", "LazyMemmapStorage"], [102, 0, 1, "", "LazyStackStorage"], [103, 0, 1, "", "LazyTensorStorage"], [104, 0, 1, "", "ListStorage"], [105, 0, 1, "", "ListStorageCheckpointer"], [106, 0, 1, "", "NestedStorageCheckpointer"], [107, 0, 1, "", "PrioritizedSampler"], [108, 0, 1, "", "PrioritizedSliceSampler"], [109, 0, 1, "", "RandomSampler"], [110, 0, 1, "", "ReplayBufferEnsemble"], [111, 0, 1, "", "RoundRobinWriter"], [112, 0, 1, "", "Sampler"], [113, 0, 1, "", "SamplerEnsemble"], [114, 0, 1, "", "SamplerWithoutReplacement"], [115, 0, 1, "", "SliceSampler"], [116, 0, 1, "", "SliceSamplerWithoutReplacement"], [117, 0, 1, "", "Storage"], [118, 0, 1, "", "StorageCheckpointerBase"], [119, 0, 1, "", "StorageEnsemble"], [120, 0, 1, "", "StorageEnsembleCheckpointer"], [121, 0, 1, "", "TensorDictMaxValueWriter"], [122, 0, 1, "", "TensorDictRoundRobinWriter"], [123, 0, 1, "", "TensorStorage"], [124, 0, 1, "", "TensorStorageCheckpointer"], [125, 0, 1, "", "Writer"], [126, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[100, 1, 1, "", "add"], [100, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[102, 1, 1, "", "attach"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "load"], [102, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[104, 1, 1, "", "attach"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "load"], [104, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[107, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[108, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[110, 1, 1, "", "add"], [110, 1, 1, "", "append_transform"], [110, 1, 1, "", "as_remote"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "dumps"], [110, 1, 1, "", "empty"], [110, 1, 1, "", "extend"], [110, 1, 1, "", "insert_transform"], [110, 1, 1, "", "load"], [110, 1, 1, "", "loads"], [110, 1, 1, "", "register_load_hook"], [110, 1, 1, "", "register_save_hook"], [110, 1, 1, "", "sample"], [110, 2, 1, "", "sampler"], [110, 1, 1, "", "save"], [110, 1, 1, "", "set_sampler"], [110, 1, 1, "", "set_storage"], [110, 1, 1, "", "set_writer"], [110, 2, 1, "", "storage"], [110, 2, 1, "", "write_count"], [110, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[111, 1, 1, "", "add"], [111, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[119, 1, 1, "", "attach"], [119, 1, 1, "", "dump"], [119, 1, 1, "", "load"], [119, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[121, 1, 1, "", "add"], [121, 1, 1, "", "extend"], [121, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[122, 1, 1, "", "add"], [122, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[123, 1, 1, "", "attach"], [123, 1, 1, "", "dump"], [123, 1, 1, "", "load"], [123, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[125, 1, 1, "", "add"], [125, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[126, 1, 1, "", "add"], [126, 1, 1, "", "extend"]], "torchrl.envs": [[127, 0, 1, "", "AsyncEnvPool"], [128, 3, 1, "", "BraxEnv"], [129, 3, 1, "", "BraxWrapper"], [130, 0, 1, "", "ChessEnv"], [131, 3, 1, "", "DMControlEnv"], [132, 3, 1, "", "DMControlWrapper"], [133, 0, 1, "", "EnvBase"], [134, 0, 1, "", "EnvCreator"], [135, 0, 1, "", "EnvMetaData"], [136, 3, 1, "", "GymEnv"], [137, 0, 1, "", "GymLikeEnv"], [138, 3, 1, "", "GymWrapper"], [139, 3, 1, "", "HabitatEnv"], [140, 3, 1, "", "IsaacGymEnv"], [141, 3, 1, "", "IsaacGymWrapper"], [142, 3, 1, "", "IsaacLabWrapper"], [143, 3, 1, "", "JumanjiEnv"], [144, 3, 1, "", "JumanjiWrapper"], [145, 0, 1, "", "LLMHashingEnv"], [146, 3, 1, "", "MOGymEnv"], [147, 3, 1, "", "MOGymWrapper"], [148, 3, 1, "", "MarlGroupMapType"], [149, 3, 1, "", "MeltingpotEnv"], [150, 3, 1, "", "MeltingpotWrapper"], [151, 3, 1, "", "ModelBasedEnvBase"], [152, 3, 1, "", "MultiThreadedEnv"], [153, 3, 1, "", "MultiThreadedEnvWrapper"], [154, 3, 1, "", "OpenMLEnv"], [155, 3, 1, "", "OpenSpielEnv"], [156, 3, 1, "", "OpenSpielWrapper"], [157, 0, 1, "", "ParallelEnv"], [158, 0, 1, "", "PendulumEnv"], [159, 3, 1, "", "PettingZooEnv"], [160, 3, 1, "", "PettingZooWrapper"], [161, 0, 1, "", "ProcessorAsyncEnvPool"], [162, 3, 1, "", "RandomPolicy"], [163, 3, 1, "", "RoboHiveEnv"], [164, 3, 1, "", "SMACv2Env"], [165, 3, 1, "", "SMACv2Wrapper"], [166, 0, 1, "", "SerialEnv"], [167, 0, 1, "", "ThreadingAsyncEnvPool"], [168, 0, 1, "", "TicTacToeEnv"], [169, 3, 1, "", "UnityMLAgentsEnv"], [170, 3, 1, "", "UnityMLAgentsWrapper"], [171, 3, 1, "", "VmasEnv"], [172, 3, 1, "", "VmasWrapper"], [173, 3, 1, "", "check_env_specs"], [174, 3, 1, "", "check_marl_grouping"], [175, 3, 1, "", "exploration_type"], [176, 3, 1, "", "get_available_libraries"], [177, 3, 1, "", "gym_backend"], [198, 3, 1, "", "make_composite_from_td"], [151, 1, 1, "", "rand_step"], [201, 3, 1, "", "register_gym_spec_conversion"], [151, 1, 1, "", "reset"], [151, 1, 1, "", "rollout"], [202, 3, 1, "", "set_exploration_type"], [203, 3, 1, "", "set_gym_backend"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "step"], [204, 3, 1, "", "step_mdp"], [205, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[127, 2, 1, "", "action_key"], [127, 2, 1, "", "action_keys"], [127, 2, 1, "", "action_spec"], [127, 2, 1, "", "action_spec_unbatched"], [127, 1, 1, "", "add_module"], [127, 1, 1, "", "add_truncated_keys"], [127, 1, 1, "", "all_actions"], [127, 1, 1, "", "any_done"], [127, 1, 1, "", "append_transform"], [127, 1, 1, "", "apply"], [127, 1, 1, "", "auto_specs_"], [127, 2, 1, "", "batch_dims"], [127, 2, 1, "", "batch_locked"], [127, 2, 1, "", "batch_size"], [127, 1, 1, "", "bfloat16"], [127, 1, 1, "", "buffers"], [127, 1, 1, "", "cardinality"], [127, 1, 1, "", "check_env_specs"], [127, 1, 1, "", "children"], [127, 1, 1, "", "compile"], [127, 1, 1, "", "cpu"], [127, 1, 1, "", "cuda"], [127, 2, 1, "", "done_key"], [127, 2, 1, "", "done_keys"], [127, 2, 1, "", "done_keys_groups"], [127, 2, 1, "", "done_spec"], [127, 2, 1, "", "done_spec_unbatched"], [127, 1, 1, "", "double"], [127, 1, 1, "", "empty_cache"], [127, 2, 1, "", "env_batch_sizes"], [127, 1, 1, "", "eval"], [127, 1, 1, "", "extra_repr"], [127, 1, 1, "", "fake_tensordict"], [127, 1, 1, "", "float"], [127, 1, 1, "", "forward"], [127, 2, 1, "", "full_action_spec"], [127, 2, 1, "", "full_action_spec_unbatched"], [127, 2, 1, "", "full_done_spec"], [127, 2, 1, "", "full_done_spec_unbatched"], [127, 2, 1, "", "full_observation_spec_unbatched"], [127, 2, 1, "", "full_reward_spec"], [127, 2, 1, "", "full_reward_spec_unbatched"], [127, 2, 1, "", "full_state_spec"], [127, 2, 1, "", "full_state_spec_unbatched"], [127, 1, 1, "", "get_buffer"], [127, 1, 1, "", "get_extra_state"], [127, 1, 1, "", "get_parameter"], [127, 1, 1, "", "get_submodule"], [127, 1, 1, "", "half"], [127, 2, 1, "", "input_spec"], [127, 2, 1, "", "input_spec_unbatched"], [127, 1, 1, "", "ipu"], [127, 2, 1, "", "is_spec_locked"], [127, 1, 1, "", "load_state_dict"], [127, 1, 1, "", "maybe_reset"], [127, 1, 1, "", "modules"], [127, 1, 1, "", "mtia"], [127, 1, 1, "", "named_buffers"], [127, 1, 1, "", "named_children"], [127, 1, 1, "", "named_modules"], [127, 1, 1, "", "named_parameters"], [127, 2, 1, "", "observation_keys"], [127, 2, 1, "", "observation_spec"], [127, 2, 1, "", "observation_spec_unbatched"], [127, 2, 1, "", "output_spec"], [127, 2, 1, "", "output_spec_unbatched"], [127, 1, 1, "", "parameters"], [127, 1, 1, "", "rand_action"], [127, 1, 1, "", "rand_step"], [127, 1, 1, "", "register_backward_hook"], [127, 1, 1, "", "register_buffer"], [127, 1, 1, "", "register_forward_hook"], [127, 1, 1, "", "register_forward_pre_hook"], [127, 1, 1, "", "register_full_backward_hook"], [127, 1, 1, "", "register_full_backward_pre_hook"], [127, 1, 1, "", "register_gym"], [127, 1, 1, "", "register_load_state_dict_post_hook"], [127, 1, 1, "", "register_load_state_dict_pre_hook"], [127, 1, 1, "", "register_module"], [127, 1, 1, "", "register_parameter"], [127, 1, 1, "", "register_state_dict_post_hook"], [127, 1, 1, "", "register_state_dict_pre_hook"], [127, 1, 1, "", "requires_grad_"], [127, 1, 1, "", "reset"], [127, 2, 1, "", "reset_keys"], [127, 2, 1, "", "reward_key"], [127, 2, 1, "", "reward_keys"], [127, 2, 1, "", "reward_spec"], [127, 2, 1, "", "reward_spec_unbatched"], [127, 1, 1, "", "rollout"], [127, 1, 1, "", "set_extra_state"], [127, 1, 1, "", "set_seed"], [127, 1, 1, "", "set_spec_lock_"], [127, 1, 1, "", "set_submodule"], [127, 2, 1, "", "shape"], [127, 1, 1, "", "share_memory"], [127, 2, 1, "", "specs"], [127, 1, 1, "", "state_dict"], [127, 2, 1, "", "state_keys"], [127, 2, 1, "", "state_spec"], [127, 2, 1, "", "state_spec_unbatched"], [127, 1, 1, "", "step"], [127, 1, 1, "", "step_and_maybe_reset"], [127, 1, 1, "", "step_mdp"], [127, 1, 1, "", "to"], [127, 1, 1, "", "to_empty"], [127, 1, 1, "", "train"], [127, 1, 1, "", "type"], [127, 1, 1, "", "xpu"], [127, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[130, 2, 1, "", "action_key"], [130, 2, 1, "", "action_keys"], [130, 2, 1, "", "action_spec"], [130, 2, 1, "", "action_spec_unbatched"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "all_actions"], [130, 1, 1, "", "any_done"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 1, 1, "", "auto_specs_"], [130, 2, 1, "", "batch_dims"], [130, 2, 1, "", "batch_locked"], [130, 2, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "cardinality"], [130, 1, 1, "", "check_env_specs"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 2, 1, "", "done_key"], [130, 2, 1, "", "done_keys"], [130, 2, 1, "", "done_keys_groups"], [130, 2, 1, "", "done_spec"], [130, 2, 1, "", "done_spec_unbatched"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 2, 1, "", "full_action_spec"], [130, 2, 1, "", "full_action_spec_unbatched"], [130, 2, 1, "", "full_done_spec"], [130, 2, 1, "", "full_done_spec_unbatched"], [130, 2, 1, "", "full_observation_spec_unbatched"], [130, 2, 1, "", "full_reward_spec"], [130, 2, 1, "", "full_reward_spec_unbatched"], [130, 2, 1, "", "full_state_spec"], [130, 2, 1, "", "full_state_spec_unbatched"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_legal_moves"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 2, 1, "", "input_spec"], [130, 2, 1, "", "input_spec_unbatched"], [130, 1, 1, "", "ipu"], [130, 2, 1, "", "is_spec_locked"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 2, 1, "", "observation_keys"], [130, 2, 1, "", "observation_spec"], [130, 2, 1, "", "observation_spec_unbatched"], [130, 2, 1, "", "output_spec"], [130, 2, 1, "", "output_spec_unbatched"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 2, 1, "", "reset_keys"], [130, 2, 1, "", "reward_key"], [130, 2, 1, "", "reward_keys"], [130, 2, 1, "", "reward_spec"], [130, 2, 1, "", "reward_spec_unbatched"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_spec_lock_"], [130, 1, 1, "", "set_submodule"], [130, 2, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 2, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 2, 1, "", "state_keys"], [130, 2, 1, "", "state_spec"], [130, 2, 1, "", "state_spec_unbatched"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "step_mdp"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[133, 2, 1, "", "action_key"], [133, 2, 1, "", "action_keys"], [133, 2, 1, "", "action_spec"], [133, 2, 1, "", "action_spec_unbatched"], [133, 1, 1, "", "add_module"], [133, 1, 1, "", "add_truncated_keys"], [133, 1, 1, "", "all_actions"], [133, 1, 1, "", "any_done"], [133, 1, 1, "", "append_transform"], [133, 1, 1, "", "apply"], [133, 1, 1, "", "auto_specs_"], [133, 2, 1, "", "batch_dims"], [133, 2, 1, "", "batch_locked"], [133, 2, 1, "", "batch_size"], [133, 1, 1, "", "bfloat16"], [133, 1, 1, "", "buffers"], [133, 1, 1, "", "cardinality"], [133, 1, 1, "", "check_env_specs"], [133, 1, 1, "", "children"], [133, 1, 1, "", "compile"], [133, 1, 1, "", "cpu"], [133, 1, 1, "", "cuda"], [133, 2, 1, "", "done_key"], [133, 2, 1, "", "done_keys"], [133, 2, 1, "", "done_keys_groups"], [133, 2, 1, "", "done_spec"], [133, 2, 1, "", "done_spec_unbatched"], [133, 1, 1, "", "double"], [133, 1, 1, "", "empty_cache"], [133, 1, 1, "", "eval"], [133, 1, 1, "", "extra_repr"], [133, 1, 1, "", "fake_tensordict"], [133, 1, 1, "", "float"], [133, 1, 1, "", "forward"], [133, 2, 1, "", "full_action_spec"], [133, 2, 1, "", "full_action_spec_unbatched"], [133, 2, 1, "", "full_done_spec"], [133, 2, 1, "", "full_done_spec_unbatched"], [133, 2, 1, "", "full_observation_spec_unbatched"], [133, 2, 1, "", "full_reward_spec"], [133, 2, 1, "", "full_reward_spec_unbatched"], [133, 2, 1, "", "full_state_spec"], [133, 2, 1, "", "full_state_spec_unbatched"], [133, 1, 1, "", "get_buffer"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "get_parameter"], [133, 1, 1, "", "get_submodule"], [133, 1, 1, "", "half"], [133, 2, 1, "", "input_spec"], [133, 2, 1, "", "input_spec_unbatched"], [133, 1, 1, "", "ipu"], [133, 2, 1, "", "is_spec_locked"], [133, 1, 1, "", "load_state_dict"], [133, 1, 1, "", "maybe_reset"], [133, 1, 1, "", "modules"], [133, 1, 1, "", "mtia"], [133, 1, 1, "", "named_buffers"], [133, 1, 1, "", "named_children"], [133, 1, 1, "", "named_modules"], [133, 1, 1, "", "named_parameters"], [133, 2, 1, "", "observation_keys"], [133, 2, 1, "", "observation_spec"], [133, 2, 1, "", "observation_spec_unbatched"], [133, 2, 1, "", "output_spec"], [133, 2, 1, "", "output_spec_unbatched"], [133, 1, 1, "", "parameters"], [133, 1, 1, "", "rand_action"], [133, 1, 1, "id0", "rand_step"], [133, 1, 1, "", "register_backward_hook"], [133, 1, 1, "", "register_buffer"], [133, 1, 1, "", "register_forward_hook"], [133, 1, 1, "", "register_forward_pre_hook"], [133, 1, 1, "", "register_full_backward_hook"], [133, 1, 1, "", "register_full_backward_pre_hook"], [133, 1, 1, "", "register_gym"], [133, 1, 1, "", "register_load_state_dict_post_hook"], [133, 1, 1, "", "register_load_state_dict_pre_hook"], [133, 1, 1, "", "register_module"], [133, 1, 1, "", "register_parameter"], [133, 1, 1, "", "register_state_dict_post_hook"], [133, 1, 1, "", "register_state_dict_pre_hook"], [133, 1, 1, "", "requires_grad_"], [133, 1, 1, "id1", "reset"], [133, 2, 1, "", "reset_keys"], [133, 2, 1, "", "reward_key"], [133, 2, 1, "", "reward_keys"], [133, 2, 1, "", "reward_spec"], [133, 2, 1, "", "reward_spec_unbatched"], [133, 1, 1, "id2", "rollout"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "id3", "set_seed"], [133, 1, 1, "", "set_spec_lock_"], [133, 1, 1, "", "set_submodule"], [133, 2, 1, "", "shape"], [133, 1, 1, "", "share_memory"], [133, 2, 1, "", "specs"], [133, 1, 1, "", "state_dict"], [133, 2, 1, "", "state_keys"], [133, 2, 1, "", "state_spec"], [133, 2, 1, "", "state_spec_unbatched"], [133, 1, 1, "id4", "step"], [133, 1, 1, "", "step_and_maybe_reset"], [133, 1, 1, "", "step_mdp"], [133, 1, 1, "", "to"], [133, 1, 1, "", "to_empty"], [133, 1, 1, "", "train"], [133, 1, 1, "", "type"], [133, 1, 1, "", "xpu"], [133, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[134, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[137, 2, 1, "", "action_key"], [137, 2, 1, "", "action_keys"], [137, 2, 1, "", "action_spec"], [137, 2, 1, "", "action_spec_unbatched"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "all_actions"], [137, 1, 1, "", "any_done"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 1, 1, "", "auto_register_info_dict"], [137, 1, 1, "", "auto_specs_"], [137, 2, 1, "", "batch_dims"], [137, 2, 1, "", "batch_locked"], [137, 2, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "cardinality"], [137, 1, 1, "", "check_env_specs"], [137, 1, 1, "", "children"], [137, 1, 1, "", "close"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 2, 1, "", "done_key"], [137, 2, 1, "", "done_keys"], [137, 2, 1, "", "done_keys_groups"], [137, 2, 1, "", "done_spec"], [137, 2, 1, "", "done_spec_unbatched"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "fast_encoding"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 2, 1, "", "full_action_spec"], [137, 2, 1, "", "full_action_spec_unbatched"], [137, 2, 1, "", "full_done_spec"], [137, 2, 1, "", "full_done_spec_unbatched"], [137, 2, 1, "", "full_observation_spec_unbatched"], [137, 2, 1, "", "full_reward_spec"], [137, 2, 1, "", "full_reward_spec_unbatched"], [137, 2, 1, "", "full_state_spec"], [137, 2, 1, "", "full_state_spec_unbatched"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 2, 1, "", "input_spec"], [137, 2, 1, "", "input_spec_unbatched"], [137, 1, 1, "", "ipu"], [137, 2, 1, "", "is_spec_locked"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 2, 1, "", "observation_keys"], [137, 2, 1, "", "observation_spec"], [137, 2, 1, "", "observation_spec_unbatched"], [137, 2, 1, "", "output_spec"], [137, 2, 1, "", "output_spec_unbatched"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "read_action"], [137, 1, 1, "", "read_done"], [137, 1, 1, "", "read_obs"], [137, 1, 1, "", "read_reward"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 2, 1, "", "reset_keys"], [137, 2, 1, "", "reward_key"], [137, 2, 1, "", "reward_keys"], [137, 2, 1, "", "reward_spec"], [137, 2, 1, "", "reward_spec_unbatched"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_info_dict_reader"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_spec_lock_"], [137, 1, 1, "", "set_submodule"], [137, 2, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 2, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 2, 1, "", "state_keys"], [137, 2, 1, "", "state_spec"], [137, 2, 1, "", "state_spec_unbatched"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "step_mdp"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[145, 2, 1, "", "action_key"], [145, 2, 1, "", "action_keys"], [145, 2, 1, "", "action_spec"], [145, 2, 1, "", "action_spec_unbatched"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "all_actions"], [145, 1, 1, "", "any_done"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 1, 1, "", "auto_specs_"], [145, 2, 1, "", "batch_dims"], [145, 2, 1, "", "batch_locked"], [145, 2, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "cardinality"], [145, 1, 1, "", "check_env_specs"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 2, 1, "", "done_key"], [145, 2, 1, "", "done_keys"], [145, 2, 1, "", "done_keys_groups"], [145, 2, 1, "", "done_spec"], [145, 2, 1, "", "done_spec_unbatched"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 2, 1, "", "full_action_spec"], [145, 2, 1, "", "full_action_spec_unbatched"], [145, 2, 1, "", "full_done_spec"], [145, 2, 1, "", "full_done_spec_unbatched"], [145, 2, 1, "", "full_observation_spec_unbatched"], [145, 2, 1, "", "full_reward_spec"], [145, 2, 1, "", "full_reward_spec_unbatched"], [145, 2, 1, "", "full_state_spec"], [145, 2, 1, "", "full_state_spec_unbatched"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 2, 1, "", "input_spec"], [145, 2, 1, "", "input_spec_unbatched"], [145, 1, 1, "", "ipu"], [145, 2, 1, "", "is_spec_locked"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "make_tensordict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 2, 1, "", "observation_keys"], [145, 2, 1, "", "observation_spec"], [145, 2, 1, "", "observation_spec_unbatched"], [145, 2, 1, "", "output_spec"], [145, 2, 1, "", "output_spec_unbatched"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 2, 1, "", "reset_keys"], [145, 2, 1, "", "reward_key"], [145, 2, 1, "", "reward_keys"], [145, 2, 1, "", "reward_spec"], [145, 2, 1, "", "reward_spec_unbatched"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_spec_lock_"], [145, 1, 1, "", "set_submodule"], [145, 2, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 2, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 2, 1, "", "state_keys"], [145, 2, 1, "", "state_spec"], [145, 2, 1, "", "state_spec_unbatched"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "step_mdp"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[157, 2, 1, "", "action_key"], [157, 2, 1, "", "action_keys"], [157, 2, 1, "", "action_spec"], [157, 2, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "all_actions"], [157, 1, 1, "", "any_done"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "auto_specs_"], [157, 2, 1, "", "batch_dims"], [157, 2, 1, "", "batch_locked"], [157, 2, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 2, 1, "", "done_key"], [157, 2, 1, "", "done_keys"], [157, 2, 1, "", "done_keys_groups"], [157, 2, 1, "", "done_spec"], [157, 2, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 2, 1, "", "full_action_spec"], [157, 2, 1, "", "full_action_spec_unbatched"], [157, 2, 1, "", "full_done_spec"], [157, 2, 1, "", "full_done_spec_unbatched"], [157, 2, 1, "", "full_observation_spec_unbatched"], [157, 2, 1, "", "full_reward_spec"], [157, 2, 1, "", "full_reward_spec_unbatched"], [157, 2, 1, "", "full_state_spec"], [157, 2, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 2, 1, "", "input_spec"], [157, 2, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 2, 1, "", "is_spec_locked"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 2, 1, "", "observation_keys"], [157, 2, 1, "", "observation_spec"], [157, 2, 1, "", "observation_spec_unbatched"], [157, 2, 1, "", "output_spec"], [157, 2, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 2, 1, "", "reset_keys"], [157, 2, 1, "", "reward_key"], [157, 2, 1, "", "reward_keys"], [157, 2, 1, "", "reward_spec"], [157, 2, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_spec_lock_"], [157, 1, 1, "", "set_submodule"], [157, 2, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 2, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 2, 1, "", "state_keys"], [157, 2, 1, "", "state_spec"], [157, 2, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "update_kwargs"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "gen_params"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[161, 1, 1, "", "_setup"], [161, 2, 1, "", "action_key"], [161, 2, 1, "", "action_keys"], [161, 2, 1, "", "action_spec"], [161, 2, 1, "", "action_spec_unbatched"], [161, 1, 1, "", "add_module"], [161, 1, 1, "", "add_truncated_keys"], [161, 1, 1, "", "all_actions"], [161, 1, 1, "", "any_done"], [161, 1, 1, "", "append_transform"], [161, 1, 1, "", "apply"], [161, 1, 1, "", "async_reset_recv"], [161, 1, 1, "", "async_reset_send"], [161, 1, 1, "", "async_step_recv"], [161, 1, 1, "", "async_step_send"], [161, 1, 1, "", "auto_specs_"], [161, 2, 1, "", "batch_dims"], [161, 2, 1, "", "batch_locked"], [161, 2, 1, "", "batch_size"], [161, 1, 1, "", "bfloat16"], [161, 1, 1, "", "buffers"], [161, 1, 1, "", "cardinality"], [161, 1, 1, "", "check_env_specs"], [161, 1, 1, "", "children"], [161, 1, 1, "", "compile"], [161, 1, 1, "", "cpu"], [161, 1, 1, "", "cuda"], [161, 2, 1, "", "done_key"], [161, 2, 1, "", "done_keys"], [161, 2, 1, "", "done_keys_groups"], [161, 2, 1, "", "done_spec"], [161, 2, 1, "", "done_spec_unbatched"], [161, 1, 1, "", "double"], [161, 1, 1, "", "empty_cache"], [161, 2, 1, "", "env_batch_sizes"], [161, 1, 1, "", "eval"], [161, 1, 1, "", "extra_repr"], [161, 1, 1, "", "fake_tensordict"], [161, 1, 1, "", "float"], [161, 1, 1, "", "forward"], [161, 2, 1, "", "full_action_spec"], [161, 2, 1, "", "full_action_spec_unbatched"], [161, 2, 1, "", "full_done_spec"], [161, 2, 1, "", "full_done_spec_unbatched"], [161, 2, 1, "", "full_observation_spec_unbatched"], [161, 2, 1, "", "full_reward_spec"], [161, 2, 1, "", "full_reward_spec_unbatched"], [161, 2, 1, "", "full_state_spec"], [161, 2, 1, "", "full_state_spec_unbatched"], [161, 1, 1, "", "get_buffer"], [161, 1, 1, "", "get_extra_state"], [161, 1, 1, "", "get_parameter"], [161, 1, 1, "", "get_submodule"], [161, 1, 1, "", "half"], [161, 2, 1, "", "input_spec"], [161, 2, 1, "", "input_spec_unbatched"], [161, 1, 1, "", "ipu"], [161, 2, 1, "", "is_spec_locked"], [161, 1, 1, "", "load_state_dict"], [161, 1, 1, "", "maybe_reset"], [161, 1, 1, "", "modules"], [161, 1, 1, "", "mtia"], [161, 1, 1, "", "named_buffers"], [161, 1, 1, "", "named_children"], [161, 1, 1, "", "named_modules"], [161, 1, 1, "", "named_parameters"], [161, 2, 1, "", "observation_keys"], [161, 2, 1, "", "observation_spec"], [161, 2, 1, "", "observation_spec_unbatched"], [161, 2, 1, "", "output_spec"], [161, 2, 1, "", "output_spec_unbatched"], [161, 1, 1, "", "parameters"], [161, 1, 1, "", "rand_action"], [161, 1, 1, "", "rand_step"], [161, 1, 1, "", "register_backward_hook"], [161, 1, 1, "", "register_buffer"], [161, 1, 1, "", "register_forward_hook"], [161, 1, 1, "", "register_forward_pre_hook"], [161, 1, 1, "", "register_full_backward_hook"], [161, 1, 1, "", "register_full_backward_pre_hook"], [161, 1, 1, "", "register_gym"], [161, 1, 1, "", "register_load_state_dict_post_hook"], [161, 1, 1, "", "register_load_state_dict_pre_hook"], [161, 1, 1, "", "register_module"], [161, 1, 1, "", "register_parameter"], [161, 1, 1, "", "register_state_dict_post_hook"], [161, 1, 1, "", "register_state_dict_pre_hook"], [161, 1, 1, "", "requires_grad_"], [161, 1, 1, "", "reset"], [161, 2, 1, "", "reset_keys"], [161, 2, 1, "", "reward_key"], [161, 2, 1, "", "reward_keys"], [161, 2, 1, "", "reward_spec"], [161, 2, 1, "", "reward_spec_unbatched"], [161, 1, 1, "", "rollout"], [161, 1, 1, "", "set_extra_state"], [161, 1, 1, "", "set_seed"], [161, 1, 1, "", "set_spec_lock_"], [161, 1, 1, "", "set_submodule"], [161, 2, 1, "", "shape"], [161, 1, 1, "", "share_memory"], [161, 1, 1, "", "shutdown"], [161, 2, 1, "", "specs"], [161, 1, 1, "", "state_dict"], [161, 2, 1, "", "state_keys"], [161, 2, 1, "", "state_spec"], [161, 2, 1, "", "state_spec_unbatched"], [161, 1, 1, "", "step"], [161, 1, 1, "", "step_and_maybe_reset"], [161, 1, 1, "", "step_mdp"], [161, 1, 1, "", "to"], [161, 1, 1, "", "to_empty"], [161, 1, 1, "", "train"], [161, 1, 1, "", "type"], [161, 1, 1, "", "xpu"], [161, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[166, 2, 1, "", "action_key"], [166, 2, 1, "", "action_keys"], [166, 2, 1, "", "action_spec"], [166, 2, 1, "", "action_spec_unbatched"], [166, 1, 1, "", "add_module"], [166, 1, 1, "", "add_truncated_keys"], [166, 1, 1, "", "all_actions"], [166, 1, 1, "", "any_done"], [166, 1, 1, "", "append_transform"], [166, 1, 1, "", "apply"], [166, 1, 1, "", "auto_specs_"], [166, 2, 1, "", "batch_dims"], [166, 2, 1, "", "batch_locked"], [166, 2, 1, "", "batch_size"], [166, 1, 1, "", "bfloat16"], [166, 1, 1, "", "buffers"], [166, 1, 1, "", "cardinality"], [166, 1, 1, "", "check_env_specs"], [166, 1, 1, "", "children"], [166, 1, 1, "", "compile"], [166, 1, 1, "", "cpu"], [166, 1, 1, "", "cuda"], [166, 2, 1, "", "done_key"], [166, 2, 1, "", "done_keys"], [166, 2, 1, "", "done_keys_groups"], [166, 2, 1, "", "done_spec"], [166, 2, 1, "", "done_spec_unbatched"], [166, 1, 1, "", "double"], [166, 1, 1, "", "empty_cache"], [166, 1, 1, "", "eval"], [166, 1, 1, "", "extra_repr"], [166, 1, 1, "", "fake_tensordict"], [166, 1, 1, "", "float"], [166, 1, 1, "", "forward"], [166, 2, 1, "", "full_action_spec"], [166, 2, 1, "", "full_action_spec_unbatched"], [166, 2, 1, "", "full_done_spec"], [166, 2, 1, "", "full_done_spec_unbatched"], [166, 2, 1, "", "full_observation_spec_unbatched"], [166, 2, 1, "", "full_reward_spec"], [166, 2, 1, "", "full_reward_spec_unbatched"], [166, 2, 1, "", "full_state_spec"], [166, 2, 1, "", "full_state_spec_unbatched"], [166, 1, 1, "", "get_buffer"], [166, 1, 1, "", "get_extra_state"], [166, 1, 1, "", "get_parameter"], [166, 1, 1, "", "get_submodule"], [166, 1, 1, "", "half"], [166, 2, 1, "", "input_spec"], [166, 2, 1, "", "input_spec_unbatched"], [166, 1, 1, "", "ipu"], [166, 2, 1, "", "is_spec_locked"], [166, 1, 1, "", "load_state_dict"], [166, 1, 1, "", "maybe_reset"], [166, 1, 1, "", "modules"], [166, 1, 1, "", "mtia"], [166, 1, 1, "", "named_buffers"], [166, 1, 1, "", "named_children"], [166, 1, 1, "", "named_modules"], [166, 1, 1, "", "named_parameters"], [166, 2, 1, "", "observation_keys"], [166, 2, 1, "", "observation_spec"], [166, 2, 1, "", "observation_spec_unbatched"], [166, 2, 1, "", "output_spec"], [166, 2, 1, "", "output_spec_unbatched"], [166, 1, 1, "", "parameters"], [166, 1, 1, "", "rand_action"], [166, 1, 1, "", "rand_step"], [166, 1, 1, "", "register_backward_hook"], [166, 1, 1, "", "register_buffer"], [166, 1, 1, "", "register_forward_hook"], [166, 1, 1, "", "register_forward_pre_hook"], [166, 1, 1, "", "register_full_backward_hook"], [166, 1, 1, "", "register_full_backward_pre_hook"], [166, 1, 1, "", "register_gym"], [166, 1, 1, "", "register_load_state_dict_post_hook"], [166, 1, 1, "", "register_load_state_dict_pre_hook"], [166, 1, 1, "", "register_module"], [166, 1, 1, "", "register_parameter"], [166, 1, 1, "", "register_state_dict_post_hook"], [166, 1, 1, "", "register_state_dict_pre_hook"], [166, 1, 1, "", "requires_grad_"], [166, 1, 1, "", "reset"], [166, 2, 1, "", "reset_keys"], [166, 2, 1, "", "reward_key"], [166, 2, 1, "", "reward_keys"], [166, 2, 1, "", "reward_spec"], [166, 2, 1, "", "reward_spec_unbatched"], [166, 1, 1, "", "rollout"], [166, 1, 1, "", "set_extra_state"], [166, 1, 1, "", "set_seed"], [166, 1, 1, "", "set_spec_lock_"], [166, 1, 1, "", "set_submodule"], [166, 2, 1, "", "shape"], [166, 1, 1, "", "share_memory"], [166, 2, 1, "", "specs"], [166, 1, 1, "", "state_dict"], [166, 2, 1, "", "state_keys"], [166, 2, 1, "", "state_spec"], [166, 2, 1, "", "state_spec_unbatched"], [166, 1, 1, "", "step"], [166, 1, 1, "", "step_and_maybe_reset"], [166, 1, 1, "", "step_mdp"], [166, 1, 1, "", "to"], [166, 1, 1, "", "to_empty"], [166, 1, 1, "", "train"], [166, 1, 1, "", "type"], [166, 1, 1, "", "update_kwargs"], [166, 1, 1, "", "xpu"], [166, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[167, 1, 1, "", "_setup"], [167, 2, 1, "", "action_key"], [167, 2, 1, "", "action_keys"], [167, 2, 1, "", "action_spec"], [167, 2, 1, "", "action_spec_unbatched"], [167, 1, 1, "", "add_module"], [167, 1, 1, "", "add_truncated_keys"], [167, 1, 1, "", "all_actions"], [167, 1, 1, "", "any_done"], [167, 1, 1, "", "append_transform"], [167, 1, 1, "", "apply"], [167, 1, 1, "", "async_reset_recv"], [167, 1, 1, "", "async_reset_send"], [167, 1, 1, "", "async_step_recv"], [167, 1, 1, "", "async_step_send"], [167, 1, 1, "", "auto_specs_"], [167, 2, 1, "", "batch_dims"], [167, 2, 1, "", "batch_locked"], [167, 2, 1, "", "batch_size"], [167, 1, 1, "", "bfloat16"], [167, 1, 1, "", "buffers"], [167, 1, 1, "", "cardinality"], [167, 1, 1, "", "check_env_specs"], [167, 1, 1, "", "children"], [167, 1, 1, "", "compile"], [167, 1, 1, "", "cpu"], [167, 1, 1, "", "cuda"], [167, 2, 1, "", "done_key"], [167, 2, 1, "", "done_keys"], [167, 2, 1, "", "done_keys_groups"], [167, 2, 1, "", "done_spec"], [167, 2, 1, "", "done_spec_unbatched"], [167, 1, 1, "", "double"], [167, 1, 1, "", "empty_cache"], [167, 2, 1, "", "env_batch_sizes"], [167, 1, 1, "", "eval"], [167, 1, 1, "", "extra_repr"], [167, 1, 1, "", "fake_tensordict"], [167, 1, 1, "", "float"], [167, 1, 1, "", "forward"], [167, 2, 1, "", "full_action_spec"], [167, 2, 1, "", "full_action_spec_unbatched"], [167, 2, 1, "", "full_done_spec"], [167, 2, 1, "", "full_done_spec_unbatched"], [167, 2, 1, "", "full_observation_spec_unbatched"], [167, 2, 1, "", "full_reward_spec"], [167, 2, 1, "", "full_reward_spec_unbatched"], [167, 2, 1, "", "full_state_spec"], [167, 2, 1, "", "full_state_spec_unbatched"], [167, 1, 1, "", "get_buffer"], [167, 1, 1, "", "get_extra_state"], [167, 1, 1, "", "get_parameter"], [167, 1, 1, "", "get_submodule"], [167, 1, 1, "", "half"], [167, 2, 1, "", "input_spec"], [167, 2, 1, "", "input_spec_unbatched"], [167, 1, 1, "", "ipu"], [167, 2, 1, "", "is_spec_locked"], [167, 1, 1, "", "load_state_dict"], [167, 1, 1, "", "maybe_reset"], [167, 1, 1, "", "modules"], [167, 1, 1, "", "mtia"], [167, 1, 1, "", "named_buffers"], [167, 1, 1, "", "named_children"], [167, 1, 1, "", "named_modules"], [167, 1, 1, "", "named_parameters"], [167, 2, 1, "", "observation_keys"], [167, 2, 1, "", "observation_spec"], [167, 2, 1, "", "observation_spec_unbatched"], [167, 2, 1, "", "output_spec"], [167, 2, 1, "", "output_spec_unbatched"], [167, 1, 1, "", "parameters"], [167, 1, 1, "", "rand_action"], [167, 1, 1, "", "rand_step"], [167, 1, 1, "", "register_backward_hook"], [167, 1, 1, "", "register_buffer"], [167, 1, 1, "", "register_forward_hook"], [167, 1, 1, "", "register_forward_pre_hook"], [167, 1, 1, "", "register_full_backward_hook"], [167, 1, 1, "", "register_full_backward_pre_hook"], [167, 1, 1, "", "register_gym"], [167, 1, 1, "", "register_load_state_dict_post_hook"], [167, 1, 1, "", "register_load_state_dict_pre_hook"], [167, 1, 1, "", "register_module"], [167, 1, 1, "", "register_parameter"], [167, 1, 1, "", "register_state_dict_post_hook"], [167, 1, 1, "", "register_state_dict_pre_hook"], [167, 1, 1, "", "requires_grad_"], [167, 1, 1, "", "reset"], [167, 2, 1, "", "reset_keys"], [167, 2, 1, "", "reward_key"], [167, 2, 1, "", "reward_keys"], [167, 2, 1, "", "reward_spec"], [167, 2, 1, "", "reward_spec_unbatched"], [167, 1, 1, "", "rollout"], [167, 1, 1, "", "set_extra_state"], [167, 1, 1, "", "set_seed"], [167, 1, 1, "", "set_spec_lock_"], [167, 1, 1, "", "set_submodule"], [167, 2, 1, "", "shape"], [167, 1, 1, "", "share_memory"], [167, 1, 1, "", "shutdown"], [167, 2, 1, "", "specs"], [167, 1, 1, "", "state_dict"], [167, 2, 1, "", "state_keys"], [167, 2, 1, "", "state_spec"], [167, 2, 1, "", "state_spec_unbatched"], [167, 1, 1, "", "step"], [167, 1, 1, "", "step_and_maybe_reset"], [167, 1, 1, "", "step_mdp"], [167, 1, 1, "", "to"], [167, 1, 1, "", "to_empty"], [167, 1, 1, "", "train"], [167, 1, 1, "", "type"], [167, 1, 1, "", "xpu"], [167, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[168, 2, 1, "", "action_key"], [168, 2, 1, "", "action_keys"], [168, 2, 1, "", "action_spec"], [168, 2, 1, "", "action_spec_unbatched"], [168, 1, 1, "", "add_module"], [168, 1, 1, "", "add_truncated_keys"], [168, 1, 1, "", "all_actions"], [168, 1, 1, "", "any_done"], [168, 1, 1, "", "append_transform"], [168, 1, 1, "", "apply"], [168, 1, 1, "", "auto_specs_"], [168, 2, 1, "", "batch_dims"], [168, 2, 1, "", "batch_size"], [168, 1, 1, "", "bfloat16"], [168, 1, 1, "", "buffers"], [168, 1, 1, "", "cardinality"], [168, 1, 1, "", "check_env_specs"], [168, 1, 1, "", "children"], [168, 1, 1, "", "compile"], [168, 1, 1, "", "cpu"], [168, 1, 1, "", "cuda"], [168, 2, 1, "", "done_key"], [168, 2, 1, "", "done_keys"], [168, 2, 1, "", "done_keys_groups"], [168, 2, 1, "", "done_spec"], [168, 2, 1, "", "done_spec_unbatched"], [168, 1, 1, "", "double"], [168, 1, 1, "", "empty_cache"], [168, 1, 1, "", "eval"], [168, 1, 1, "", "extra_repr"], [168, 1, 1, "", "fake_tensordict"], [168, 1, 1, "", "float"], [168, 1, 1, "", "forward"], [168, 2, 1, "", "full_action_spec"], [168, 2, 1, "", "full_action_spec_unbatched"], [168, 2, 1, "", "full_done_spec"], [168, 2, 1, "", "full_done_spec_unbatched"], [168, 2, 1, "", "full_observation_spec_unbatched"], [168, 2, 1, "", "full_reward_spec"], [168, 2, 1, "", "full_reward_spec_unbatched"], [168, 2, 1, "", "full_state_spec"], [168, 2, 1, "", "full_state_spec_unbatched"], [168, 1, 1, "", "get_buffer"], [168, 1, 1, "", "get_extra_state"], [168, 1, 1, "", "get_parameter"], [168, 1, 1, "", "get_submodule"], [168, 1, 1, "", "half"], [168, 2, 1, "", "input_spec"], [168, 2, 1, "", "input_spec_unbatched"], [168, 1, 1, "", "ipu"], [168, 2, 1, "", "is_spec_locked"], [168, 1, 1, "", "load_state_dict"], [168, 1, 1, "", "maybe_reset"], [168, 1, 1, "", "modules"], [168, 1, 1, "", "mtia"], [168, 1, 1, "", "named_buffers"], [168, 1, 1, "", "named_children"], [168, 1, 1, "", "named_modules"], [168, 1, 1, "", "named_parameters"], [168, 2, 1, "", "observation_keys"], [168, 2, 1, "", "observation_spec"], [168, 2, 1, "", "observation_spec_unbatched"], [168, 2, 1, "", "output_spec"], [168, 2, 1, "", "output_spec_unbatched"], [168, 1, 1, "", "parameters"], [168, 1, 1, "", "rand_action"], [168, 1, 1, "", "rand_step"], [168, 1, 1, "", "register_backward_hook"], [168, 1, 1, "", "register_buffer"], [168, 1, 1, "", "register_forward_hook"], [168, 1, 1, "", "register_forward_pre_hook"], [168, 1, 1, "", "register_full_backward_hook"], [168, 1, 1, "", "register_full_backward_pre_hook"], [168, 1, 1, "", "register_gym"], [168, 1, 1, "", "register_load_state_dict_post_hook"], [168, 1, 1, "", "register_load_state_dict_pre_hook"], [168, 1, 1, "", "register_module"], [168, 1, 1, "", "register_parameter"], [168, 1, 1, "", "register_state_dict_post_hook"], [168, 1, 1, "", "register_state_dict_pre_hook"], [168, 1, 1, "", "requires_grad_"], [168, 1, 1, "", "reset"], [168, 2, 1, "", "reset_keys"], [168, 2, 1, "", "reward_key"], [168, 2, 1, "", "reward_keys"], [168, 2, 1, "", "reward_spec"], [168, 2, 1, "", "reward_spec_unbatched"], [168, 1, 1, "", "rollout"], [168, 1, 1, "", "set_extra_state"], [168, 1, 1, "", "set_seed"], [168, 1, 1, "", "set_spec_lock_"], [168, 1, 1, "", "set_submodule"], [168, 2, 1, "", "shape"], [168, 1, 1, "", "share_memory"], [168, 2, 1, "", "specs"], [168, 1, 1, "", "state_dict"], [168, 2, 1, "", "state_keys"], [168, 2, 1, "", "state_spec"], [168, 2, 1, "", "state_spec_unbatched"], [168, 1, 1, "", "step"], [168, 1, 1, "", "step_and_maybe_reset"], [168, 1, 1, "", "step_mdp"], [168, 1, 1, "", "to"], [168, 1, 1, "", "to_empty"], [168, 1, 1, "", "train"], [168, 1, 1, "", "type"], [168, 1, 1, "", "xpu"], [168, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[178, 0, 1, "", "ChatEnv"], [179, 0, 1, "", "DatasetChatEnv"], [180, 0, 1, "", "GSM8KEnv"], [181, 0, 1, "", "GSM8KPrepareQuestion"], [182, 0, 1, "", "GSM8KRewardParser"], [183, 0, 1, "", "IFEvalEnv"], [184, 0, 1, "", "IFEvalScoreData"], [185, 0, 1, "", "IfEvalScorer"], [186, 0, 1, "", "LLMEnv"], [187, 0, 1, "", "LLMHashingEnv"], [188, 0, 1, "", "MLGymWrapper"], [189, 0, 1, "", "make_gsm8k_env"], [190, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[178, 2, 1, "", "action_key"], [178, 2, 1, "", "action_keys"], [178, 2, 1, "", "action_spec"], [178, 2, 1, "", "action_spec_unbatched"], [178, 1, 1, "", "add_module"], [178, 1, 1, "", "add_truncated_keys"], [178, 1, 1, "", "all_actions"], [178, 1, 1, "", "any_done"], [178, 1, 1, "", "append_transform"], [178, 1, 1, "", "apply"], [178, 1, 1, "", "auto_specs_"], [178, 2, 1, "", "batch_dims"], [178, 2, 1, "", "batch_locked"], [178, 2, 1, "", "batch_size"], [178, 1, 1, "", "bfloat16"], [178, 1, 1, "", "buffers"], [178, 1, 1, "", "cardinality"], [178, 1, 1, "", "check_env_specs"], [178, 1, 1, "", "children"], [178, 1, 1, "", "compile"], [178, 1, 1, "", "cpu"], [178, 1, 1, "", "cuda"], [178, 2, 1, "", "done_key"], [178, 2, 1, "", "done_keys"], [178, 2, 1, "", "done_keys_groups"], [178, 2, 1, "", "done_spec"], [178, 2, 1, "", "done_spec_unbatched"], [178, 1, 1, "", "double"], [178, 1, 1, "", "empty_cache"], [178, 1, 1, "", "eval"], [178, 1, 1, "", "extra_repr"], [178, 1, 1, "", "fake_tensordict"], [178, 1, 1, "", "float"], [178, 1, 1, "", "forward"], [178, 2, 1, "", "full_action_spec"], [178, 2, 1, "", "full_action_spec_unbatched"], [178, 2, 1, "", "full_done_spec"], [178, 2, 1, "", "full_done_spec_unbatched"], [178, 2, 1, "", "full_observation_spec_unbatched"], [178, 2, 1, "", "full_reward_spec"], [178, 2, 1, "", "full_reward_spec_unbatched"], [178, 2, 1, "", "full_state_spec"], [178, 2, 1, "", "full_state_spec_unbatched"], [178, 1, 1, "", "get_buffer"], [178, 1, 1, "", "get_extra_state"], [178, 1, 1, "", "get_parameter"], [178, 1, 1, "", "get_submodule"], [178, 1, 1, "", "half"], [178, 2, 1, "", "input_spec"], [178, 2, 1, "", "input_spec_unbatched"], [178, 1, 1, "", "ipu"], [178, 2, 1, "", "is_spec_locked"], [178, 1, 1, "", "load_state_dict"], [178, 1, 1, "", "maybe_reset"], [178, 1, 1, "", "modules"], [178, 1, 1, "", "mtia"], [178, 1, 1, "", "named_buffers"], [178, 1, 1, "", "named_children"], [178, 1, 1, "", "named_modules"], [178, 1, 1, "", "named_parameters"], [178, 2, 1, "", "observation_keys"], [178, 2, 1, "", "observation_spec"], [178, 2, 1, "", "observation_spec_unbatched"], [178, 2, 1, "", "output_spec"], [178, 2, 1, "", "output_spec_unbatched"], [178, 1, 1, "", "parameters"], [178, 1, 1, "", "rand_action"], [178, 1, 1, "", "rand_step"], [178, 1, 1, "", "register_backward_hook"], [178, 1, 1, "", "register_buffer"], [178, 1, 1, "", "register_forward_hook"], [178, 1, 1, "", "register_forward_pre_hook"], [178, 1, 1, "", "register_full_backward_hook"], [178, 1, 1, "", "register_full_backward_pre_hook"], [178, 1, 1, "", "register_gym"], [178, 1, 1, "", "register_load_state_dict_post_hook"], [178, 1, 1, "", "register_load_state_dict_pre_hook"], [178, 1, 1, "", "register_module"], [178, 1, 1, "", "register_parameter"], [178, 1, 1, "", "register_state_dict_post_hook"], [178, 1, 1, "", "register_state_dict_pre_hook"], [178, 1, 1, "", "requires_grad_"], [178, 1, 1, "id0", "reset"], [178, 2, 1, "", "reset_keys"], [178, 2, 1, "", "reward_key"], [178, 2, 1, "", "reward_keys"], [178, 2, 1, "", "reward_spec"], [178, 2, 1, "", "reward_spec_unbatched"], [178, 1, 1, "", "rollout"], [178, 1, 1, "", "set_extra_state"], [178, 1, 1, "", "set_seed"], [178, 1, 1, "", "set_spec_lock_"], [178, 1, 1, "", "set_submodule"], [178, 2, 1, "", "shape"], [178, 1, 1, "", "share_memory"], [178, 2, 1, "", "specs"], [178, 1, 1, "", "state_dict"], [178, 2, 1, "", "state_keys"], [178, 2, 1, "", "state_spec"], [178, 2, 1, "", "state_spec_unbatched"], [178, 1, 1, "id1", "step"], [178, 1, 1, "", "step_and_maybe_reset"], [178, 1, 1, "", "step_mdp"], [178, 1, 1, "", "to"], [178, 1, 1, "", "to_empty"], [178, 1, 1, "", "train"], [178, 1, 1, "", "type"], [178, 1, 1, "", "xpu"], [178, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[179, 2, 1, "", "action_key"], [179, 2, 1, "", "action_keys"], [179, 2, 1, "", "action_spec"], [179, 2, 1, "", "action_spec_unbatched"], [179, 1, 1, "", "add_module"], [179, 1, 1, "", "add_truncated_keys"], [179, 1, 1, "", "all_actions"], [179, 1, 1, "", "any_done"], [179, 1, 1, "", "append_transform"], [179, 1, 1, "", "apply"], [179, 1, 1, "", "auto_specs_"], [179, 2, 1, "", "batch_dims"], [179, 2, 1, "", "batch_locked"], [179, 2, 1, "", "batch_size"], [179, 1, 1, "", "bfloat16"], [179, 1, 1, "", "buffers"], [179, 1, 1, "", "cardinality"], [179, 1, 1, "", "check_env_specs"], [179, 1, 1, "", "children"], [179, 1, 1, "", "compile"], [179, 1, 1, "", "cpu"], [179, 1, 1, "", "cuda"], [179, 2, 1, "", "done_key"], [179, 2, 1, "", "done_keys"], [179, 2, 1, "", "done_keys_groups"], [179, 2, 1, "", "done_spec"], [179, 2, 1, "", "done_spec_unbatched"], [179, 1, 1, "", "double"], [179, 1, 1, "", "empty_cache"], [179, 1, 1, "", "eval"], [179, 1, 1, "", "extra_repr"], [179, 1, 1, "", "fake_tensordict"], [179, 1, 1, "", "float"], [179, 1, 1, "", "forward"], [179, 2, 1, "", "full_action_spec"], [179, 2, 1, "", "full_action_spec_unbatched"], [179, 2, 1, "", "full_done_spec"], [179, 2, 1, "", "full_done_spec_unbatched"], [179, 2, 1, "", "full_observation_spec_unbatched"], [179, 2, 1, "", "full_reward_spec"], [179, 2, 1, "", "full_reward_spec_unbatched"], [179, 2, 1, "", "full_state_spec"], [179, 2, 1, "", "full_state_spec_unbatched"], [179, 1, 1, "", "get_buffer"], [179, 1, 1, "", "get_extra_state"], [179, 1, 1, "", "get_parameter"], [179, 1, 1, "", "get_submodule"], [179, 1, 1, "", "half"], [179, 2, 1, "", "input_spec"], [179, 2, 1, "", "input_spec_unbatched"], [179, 1, 1, "", "insert_transform"], [179, 1, 1, "", "ipu"], [179, 2, 1, "", "is_spec_locked"], [179, 1, 1, "", "load_state_dict"], [179, 1, 1, "", "maybe_reset"], [179, 1, 1, "", "modules"], [179, 1, 1, "", "mtia"], [179, 1, 1, "", "named_buffers"], [179, 1, 1, "", "named_children"], [179, 1, 1, "", "named_modules"], [179, 1, 1, "", "named_parameters"], [179, 2, 1, "", "observation_keys"], [179, 2, 1, "", "observation_spec"], [179, 2, 1, "", "observation_spec_unbatched"], [179, 2, 1, "", "output_spec"], [179, 2, 1, "", "output_spec_unbatched"], [179, 1, 1, "", "parameters"], [179, 1, 1, "", "rand_action"], [179, 1, 1, "", "rand_step"], [179, 1, 1, "", "register_backward_hook"], [179, 1, 1, "", "register_buffer"], [179, 1, 1, "", "register_forward_hook"], [179, 1, 1, "", "register_forward_pre_hook"], [179, 1, 1, "", "register_full_backward_hook"], [179, 1, 1, "", "register_full_backward_pre_hook"], [179, 1, 1, "", "register_gym"], [179, 1, 1, "", "register_load_state_dict_post_hook"], [179, 1, 1, "", "register_load_state_dict_pre_hook"], [179, 1, 1, "", "register_module"], [179, 1, 1, "", "register_parameter"], [179, 1, 1, "", "register_state_dict_post_hook"], [179, 1, 1, "", "register_state_dict_pre_hook"], [179, 1, 1, "", "requires_grad_"], [179, 1, 1, "", "reset"], [179, 2, 1, "", "reset_keys"], [179, 2, 1, "", "reward_key"], [179, 2, 1, "", "reward_keys"], [179, 2, 1, "", "reward_spec"], [179, 2, 1, "", "reward_spec_unbatched"], [179, 1, 1, "", "rollout"], [179, 1, 1, "", "set_extra_state"], [179, 1, 1, "", "set_missing_tolerance"], [179, 1, 1, "", "set_seed"], [179, 1, 1, "", "set_spec_lock_"], [179, 1, 1, "", "set_submodule"], [179, 2, 1, "", "shape"], [179, 1, 1, "", "share_memory"], [179, 2, 1, "", "specs"], [179, 1, 1, "", "state_dict"], [179, 2, 1, "", "state_keys"], [179, 2, 1, "", "state_spec"], [179, 2, 1, "", "state_spec_unbatched"], [179, 1, 1, "", "step"], [179, 1, 1, "", "step_and_maybe_reset"], [179, 1, 1, "", "step_mdp"], [179, 1, 1, "", "to"], [179, 1, 1, "", "to_empty"], [179, 1, 1, "", "train"], [179, 1, 1, "", "type"], [179, 1, 1, "", "xpu"], [179, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[180, 2, 1, "", "action_key"], [180, 2, 1, "", "action_keys"], [180, 2, 1, "", "action_spec"], [180, 2, 1, "", "action_spec_unbatched"], [180, 1, 1, "", "add_module"], [180, 1, 1, "", "add_truncated_keys"], [180, 1, 1, "", "all_actions"], [180, 1, 1, "", "any_done"], [180, 1, 1, "", "append_transform"], [180, 1, 1, "", "apply"], [180, 1, 1, "", "auto_specs_"], [180, 2, 1, "", "batch_dims"], [180, 2, 1, "", "batch_locked"], [180, 2, 1, "", "batch_size"], [180, 1, 1, "", "bfloat16"], [180, 1, 1, "", "buffers"], [180, 1, 1, "", "cardinality"], [180, 1, 1, "", "check_env_specs"], [180, 1, 1, "", "children"], [180, 1, 1, "", "compile"], [180, 1, 1, "", "cpu"], [180, 1, 1, "", "cuda"], [180, 2, 1, "", "done_key"], [180, 2, 1, "", "done_keys"], [180, 2, 1, "", "done_keys_groups"], [180, 2, 1, "", "done_spec"], [180, 2, 1, "", "done_spec_unbatched"], [180, 1, 1, "", "double"], [180, 1, 1, "", "empty_cache"], [180, 1, 1, "", "eval"], [180, 1, 1, "", "extra_repr"], [180, 1, 1, "", "fake_tensordict"], [180, 1, 1, "", "float"], [180, 1, 1, "", "forward"], [180, 2, 1, "", "full_action_spec"], [180, 2, 1, "", "full_action_spec_unbatched"], [180, 2, 1, "", "full_done_spec"], [180, 2, 1, "", "full_done_spec_unbatched"], [180, 2, 1, "", "full_observation_spec_unbatched"], [180, 2, 1, "", "full_reward_spec"], [180, 2, 1, "", "full_reward_spec_unbatched"], [180, 2, 1, "", "full_state_spec"], [180, 2, 1, "", "full_state_spec_unbatched"], [180, 1, 1, "", "get_buffer"], [180, 1, 1, "", "get_extra_state"], [180, 1, 1, "", "get_parameter"], [180, 1, 1, "", "get_submodule"], [180, 1, 1, "", "half"], [180, 2, 1, "", "input_spec"], [180, 2, 1, "", "input_spec_unbatched"], [180, 1, 1, "", "insert_transform"], [180, 1, 1, "", "ipu"], [180, 2, 1, "", "is_spec_locked"], [180, 1, 1, "", "load_state_dict"], [180, 1, 1, "", "maybe_reset"], [180, 1, 1, "", "modules"], [180, 1, 1, "", "mtia"], [180, 1, 1, "", "named_buffers"], [180, 1, 1, "", "named_children"], [180, 1, 1, "", "named_modules"], [180, 1, 1, "", "named_parameters"], [180, 2, 1, "", "observation_keys"], [180, 2, 1, "", "observation_spec"], [180, 2, 1, "", "observation_spec_unbatched"], [180, 2, 1, "", "output_spec"], [180, 2, 1, "", "output_spec_unbatched"], [180, 1, 1, "", "parameters"], [180, 1, 1, "", "rand_action"], [180, 1, 1, "", "rand_step"], [180, 1, 1, "", "register_backward_hook"], [180, 1, 1, "", "register_buffer"], [180, 1, 1, "", "register_forward_hook"], [180, 1, 1, "", "register_forward_pre_hook"], [180, 1, 1, "", "register_full_backward_hook"], [180, 1, 1, "", "register_full_backward_pre_hook"], [180, 1, 1, "", "register_gym"], [180, 1, 1, "", "register_load_state_dict_post_hook"], [180, 1, 1, "", "register_load_state_dict_pre_hook"], [180, 1, 1, "", "register_module"], [180, 1, 1, "", "register_parameter"], [180, 1, 1, "", "register_state_dict_post_hook"], [180, 1, 1, "", "register_state_dict_pre_hook"], [180, 1, 1, "", "requires_grad_"], [180, 1, 1, "", "reset"], [180, 2, 1, "", "reset_keys"], [180, 2, 1, "", "reward_key"], [180, 2, 1, "", "reward_keys"], [180, 2, 1, "", "reward_spec"], [180, 2, 1, "", "reward_spec_unbatched"], [180, 1, 1, "", "rollout"], [180, 1, 1, "", "set_extra_state"], [180, 1, 1, "", "set_missing_tolerance"], [180, 1, 1, "", "set_seed"], [180, 1, 1, "", "set_spec_lock_"], [180, 1, 1, "", "set_submodule"], [180, 2, 1, "", "shape"], [180, 1, 1, "", "share_memory"], [180, 2, 1, "", "specs"], [180, 1, 1, "", "state_dict"], [180, 2, 1, "", "state_keys"], [180, 2, 1, "", "state_spec"], [180, 2, 1, "", "state_spec_unbatched"], [180, 1, 1, "", "step"], [180, 1, 1, "", "step_and_maybe_reset"], [180, 1, 1, "", "step_mdp"], [180, 1, 1, "", "to"], [180, 1, 1, "", "to_empty"], [180, 1, 1, "", "train"], [180, 1, 1, "", "type"], [180, 1, 1, "", "xpu"], [180, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[181, 1, 1, "", "add_module"], [181, 1, 1, "", "apply"], [181, 1, 1, "", "bfloat16"], [181, 1, 1, "", "buffers"], [181, 1, 1, "", "children"], [181, 1, 1, "", "close"], [181, 1, 1, "", "compile"], [181, 2, 1, "", "container"], [181, 1, 1, "", "cpu"], [181, 1, 1, "", "cuda"], [181, 1, 1, "", "double"], [181, 1, 1, "", "eval"], [181, 1, 1, "", "extra_repr"], [181, 1, 1, "", "float"], [181, 1, 1, "", "forward"], [181, 1, 1, "", "get_buffer"], [181, 1, 1, "", "get_extra_state"], [181, 1, 1, "", "get_parameter"], [181, 1, 1, "", "get_submodule"], [181, 1, 1, "", "half"], [181, 1, 1, "", "init"], [181, 1, 1, "", "inv"], [181, 1, 1, "", "ipu"], [181, 1, 1, "", "load_state_dict"], [181, 1, 1, "", "modules"], [181, 1, 1, "", "mtia"], [181, 1, 1, "", "named_buffers"], [181, 1, 1, "", "named_children"], [181, 1, 1, "", "named_modules"], [181, 1, 1, "", "named_parameters"], [181, 1, 1, "", "parameters"], [181, 2, 1, "", "parent"], [181, 1, 1, "", "register_backward_hook"], [181, 1, 1, "", "register_buffer"], [181, 1, 1, "", "register_forward_hook"], [181, 1, 1, "", "register_forward_pre_hook"], [181, 1, 1, "", "register_full_backward_hook"], [181, 1, 1, "", "register_full_backward_pre_hook"], [181, 1, 1, "", "register_load_state_dict_post_hook"], [181, 1, 1, "", "register_load_state_dict_pre_hook"], [181, 1, 1, "", "register_module"], [181, 1, 1, "", "register_parameter"], [181, 1, 1, "", "register_state_dict_post_hook"], [181, 1, 1, "", "register_state_dict_pre_hook"], [181, 1, 1, "", "requires_grad_"], [181, 1, 1, "", "set_extra_state"], [181, 1, 1, "", "set_submodule"], [181, 1, 1, "", "share_memory"], [181, 1, 1, "", "state_dict"], [181, 1, 1, "", "to"], [181, 1, 1, "", "to_empty"], [181, 1, 1, "", "train"], [181, 1, 1, "", "transform_action_spec"], [181, 1, 1, "", "transform_done_spec"], [181, 1, 1, "", "transform_env_batch_size"], [181, 1, 1, "", "transform_env_device"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"], [181, 1, 1, "", "transform_output_spec"], [181, 1, 1, "", "transform_reward_spec"], [181, 1, 1, "", "transform_state_spec"], [181, 1, 1, "", "type"], [181, 1, 1, "", "xpu"], [181, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[182, 1, 1, "", "add_module"], [182, 1, 1, "", "apply"], [182, 1, 1, "", "bfloat16"], [182, 1, 1, "", "buffers"], [182, 1, 1, "", "children"], [182, 1, 1, "", "close"], [182, 1, 1, "", "compile"], [182, 2, 1, "", "container"], [182, 1, 1, "", "cpu"], [182, 1, 1, "", "cuda"], [182, 1, 1, "", "double"], [182, 1, 1, "", "eval"], [182, 1, 1, "", "extra_repr"], [182, 1, 1, "", "extract_tags"], [182, 1, 1, "", "float"], [182, 1, 1, "", "forward"], [182, 1, 1, "", "get_buffer"], [182, 1, 1, "", "get_extra_state"], [182, 1, 1, "", "get_parameter"], [182, 1, 1, "", "get_submodule"], [182, 1, 1, "", "half"], [182, 1, 1, "", "init"], [182, 1, 1, "", "inv"], [182, 1, 1, "", "ipu"], [182, 1, 1, "", "load_state_dict"], [182, 1, 1, "", "modules"], [182, 1, 1, "", "mtia"], [182, 1, 1, "", "named_buffers"], [182, 1, 1, "", "named_children"], [182, 1, 1, "", "named_modules"], [182, 1, 1, "", "named_parameters"], [182, 1, 1, "", "parameters"], [182, 2, 1, "", "parent"], [182, 1, 1, "", "register_backward_hook"], [182, 1, 1, "", "register_buffer"], [182, 1, 1, "", "register_forward_hook"], [182, 1, 1, "", "register_forward_pre_hook"], [182, 1, 1, "", "register_full_backward_hook"], [182, 1, 1, "", "register_full_backward_pre_hook"], [182, 1, 1, "", "register_load_state_dict_post_hook"], [182, 1, 1, "", "register_load_state_dict_pre_hook"], [182, 1, 1, "", "register_module"], [182, 1, 1, "", "register_parameter"], [182, 1, 1, "", "register_state_dict_post_hook"], [182, 1, 1, "", "register_state_dict_pre_hook"], [182, 1, 1, "", "requires_grad_"], [182, 1, 1, "", "set_extra_state"], [182, 1, 1, "", "set_submodule"], [182, 1, 1, "", "share_memory"], [182, 1, 1, "", "state_dict"], [182, 1, 1, "", "to"], [182, 1, 1, "", "to_empty"], [182, 1, 1, "", "train"], [182, 1, 1, "", "transform_action_spec"], [182, 1, 1, "", "transform_done_spec"], [182, 1, 1, "", "transform_env_batch_size"], [182, 1, 1, "", "transform_env_device"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"], [182, 1, 1, "", "transform_output_spec"], [182, 1, 1, "", "transform_reward_spec"], [182, 1, 1, "", "transform_state_spec"], [182, 1, 1, "", "type"], [182, 1, 1, "", "xpu"], [182, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[183, 2, 1, "", "action_key"], [183, 2, 1, "", "action_keys"], [183, 2, 1, "", "action_spec"], [183, 2, 1, "", "action_spec_unbatched"], [183, 1, 1, "", "add_module"], [183, 1, 1, "", "add_truncated_keys"], [183, 1, 1, "", "all_actions"], [183, 1, 1, "", "any_done"], [183, 1, 1, "", "append_transform"], [183, 1, 1, "", "apply"], [183, 1, 1, "", "auto_specs_"], [183, 2, 1, "", "batch_dims"], [183, 2, 1, "", "batch_locked"], [183, 2, 1, "", "batch_size"], [183, 1, 1, "", "bfloat16"], [183, 1, 1, "", "buffers"], [183, 1, 1, "", "cardinality"], [183, 1, 1, "", "check_env_specs"], [183, 1, 1, "", "children"], [183, 1, 1, "", "compile"], [183, 1, 1, "", "cpu"], [183, 1, 1, "", "cuda"], [183, 2, 1, "", "done_key"], [183, 2, 1, "", "done_keys"], [183, 2, 1, "", "done_keys_groups"], [183, 2, 1, "", "done_spec"], [183, 2, 1, "", "done_spec_unbatched"], [183, 1, 1, "", "double"], [183, 1, 1, "", "empty_cache"], [183, 1, 1, "", "eval"], [183, 1, 1, "", "extra_repr"], [183, 1, 1, "", "fake_tensordict"], [183, 1, 1, "", "float"], [183, 1, 1, "", "forward"], [183, 2, 1, "", "full_action_spec"], [183, 2, 1, "", "full_action_spec_unbatched"], [183, 2, 1, "", "full_done_spec"], [183, 2, 1, "", "full_done_spec_unbatched"], [183, 2, 1, "", "full_observation_spec_unbatched"], [183, 2, 1, "", "full_reward_spec"], [183, 2, 1, "", "full_reward_spec_unbatched"], [183, 2, 1, "", "full_state_spec"], [183, 2, 1, "", "full_state_spec_unbatched"], [183, 1, 1, "", "get_buffer"], [183, 1, 1, "", "get_extra_state"], [183, 1, 1, "", "get_parameter"], [183, 1, 1, "", "get_submodule"], [183, 1, 1, "", "half"], [183, 2, 1, "", "input_spec"], [183, 2, 1, "", "input_spec_unbatched"], [183, 1, 1, "", "insert_transform"], [183, 1, 1, "", "ipu"], [183, 2, 1, "", "is_spec_locked"], [183, 1, 1, "", "load_state_dict"], [183, 1, 1, "", "maybe_reset"], [183, 1, 1, "", "modules"], [183, 1, 1, "", "mtia"], [183, 1, 1, "", "named_buffers"], [183, 1, 1, "", "named_children"], [183, 1, 1, "", "named_modules"], [183, 1, 1, "", "named_parameters"], [183, 2, 1, "", "observation_keys"], [183, 2, 1, "", "observation_spec"], [183, 2, 1, "", "observation_spec_unbatched"], [183, 2, 1, "", "output_spec"], [183, 2, 1, "", "output_spec_unbatched"], [183, 1, 1, "", "parameters"], [183, 1, 1, "", "rand_action"], [183, 1, 1, "", "rand_step"], [183, 1, 1, "", "register_backward_hook"], [183, 1, 1, "", "register_buffer"], [183, 1, 1, "", "register_forward_hook"], [183, 1, 1, "", "register_forward_pre_hook"], [183, 1, 1, "", "register_full_backward_hook"], [183, 1, 1, "", "register_full_backward_pre_hook"], [183, 1, 1, "", "register_gym"], [183, 1, 1, "", "register_load_state_dict_post_hook"], [183, 1, 1, "", "register_load_state_dict_pre_hook"], [183, 1, 1, "", "register_module"], [183, 1, 1, "", "register_parameter"], [183, 1, 1, "", "register_state_dict_post_hook"], [183, 1, 1, "", "register_state_dict_pre_hook"], [183, 1, 1, "", "requires_grad_"], [183, 1, 1, "", "reset"], [183, 2, 1, "", "reset_keys"], [183, 2, 1, "", "reward_key"], [183, 2, 1, "", "reward_keys"], [183, 2, 1, "", "reward_spec"], [183, 2, 1, "", "reward_spec_unbatched"], [183, 1, 1, "", "rollout"], [183, 1, 1, "", "set_extra_state"], [183, 1, 1, "", "set_missing_tolerance"], [183, 1, 1, "", "set_seed"], [183, 1, 1, "", "set_spec_lock_"], [183, 1, 1, "", "set_submodule"], [183, 2, 1, "", "shape"], [183, 1, 1, "", "share_memory"], [183, 2, 1, "", "specs"], [183, 1, 1, "", "state_dict"], [183, 2, 1, "", "state_keys"], [183, 2, 1, "", "state_spec"], [183, 2, 1, "", "state_spec_unbatched"], [183, 1, 1, "", "step"], [183, 1, 1, "", "step_and_maybe_reset"], [183, 1, 1, "", "step_mdp"], [183, 1, 1, "", "to"], [183, 1, 1, "", "to_empty"], [183, 1, 1, "", "train"], [183, 1, 1, "", "type"], [183, 1, 1, "", "xpu"], [183, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[184, 2, 1, "", "device"], [184, 1, 1, "", "dumps"], [184, 1, 1, "", "fields"], [184, 1, 1, "", "from_tensordict"], [184, 1, 1, "", "get"], [184, 1, 1, "", "load"], [184, 1, 1, "", "load_"], [184, 1, 1, "", "load_memmap"], [184, 1, 1, "", "load_state_dict"], [184, 1, 1, "", "memmap"], [184, 1, 1, "", "memmap_"], [184, 1, 1, "", "memmap_like"], [184, 1, 1, "", "memmap_refresh_"], [184, 1, 1, "", "save"], [184, 1, 1, "", "set"], [184, 1, 1, "", "state_dict"], [184, 1, 1, "", "to_tensordict"], [184, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[185, 1, 1, "", "add_module"], [185, 1, 1, "", "apply"], [185, 1, 1, "", "bfloat16"], [185, 1, 1, "", "buffers"], [185, 1, 1, "", "children"], [185, 1, 1, "", "close"], [185, 1, 1, "", "compile"], [185, 2, 1, "", "container"], [185, 1, 1, "", "cpu"], [185, 1, 1, "", "cuda"], [185, 1, 1, "", "double"], [185, 1, 1, "", "eval"], [185, 1, 1, "", "extra_repr"], [185, 1, 1, "", "float"], [185, 1, 1, "", "forward"], [185, 1, 1, "", "get_buffer"], [185, 1, 1, "", "get_extra_state"], [185, 1, 1, "", "get_parameter"], [185, 1, 1, "", "get_submodule"], [185, 1, 1, "", "half"], [185, 1, 1, "", "init"], [185, 1, 1, "", "inv"], [185, 1, 1, "", "ipu"], [185, 1, 1, "", "load_state_dict"], [185, 1, 1, "", "modules"], [185, 1, 1, "", "mtia"], [185, 1, 1, "", "named_buffers"], [185, 1, 1, "", "named_children"], [185, 1, 1, "", "named_modules"], [185, 1, 1, "", "named_parameters"], [185, 1, 1, "", "parameters"], [185, 2, 1, "", "parent"], [185, 1, 1, "", "register_backward_hook"], [185, 1, 1, "", "register_buffer"], [185, 1, 1, "", "register_forward_hook"], [185, 1, 1, "", "register_forward_pre_hook"], [185, 1, 1, "", "register_full_backward_hook"], [185, 1, 1, "", "register_full_backward_pre_hook"], [185, 1, 1, "", "register_load_state_dict_post_hook"], [185, 1, 1, "", "register_load_state_dict_pre_hook"], [185, 1, 1, "", "register_module"], [185, 1, 1, "", "register_parameter"], [185, 1, 1, "", "register_state_dict_post_hook"], [185, 1, 1, "", "register_state_dict_pre_hook"], [185, 1, 1, "", "requires_grad_"], [185, 1, 1, "", "set_extra_state"], [185, 1, 1, "", "set_submodule"], [185, 1, 1, "", "share_memory"], [185, 1, 1, "", "state_dict"], [185, 1, 1, "", "to"], [185, 1, 1, "", "to_empty"], [185, 1, 1, "", "train"], [185, 1, 1, "", "transform_action_spec"], [185, 1, 1, "", "transform_done_spec"], [185, 1, 1, "", "transform_env_batch_size"], [185, 1, 1, "", "transform_env_device"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_output_spec"], [185, 1, 1, "", "transform_reward_spec"], [185, 1, 1, "", "transform_state_spec"], [185, 1, 1, "", "type"], [185, 1, 1, "", "xpu"], [185, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[186, 2, 1, "", "action_key"], [186, 2, 1, "", "action_keys"], [186, 2, 1, "", "action_spec"], [186, 2, 1, "", "action_spec_unbatched"], [186, 1, 1, "", "add_module"], [186, 1, 1, "", "add_truncated_keys"], [186, 1, 1, "", "all_actions"], [186, 1, 1, "", "any_done"], [186, 1, 1, "", "append_transform"], [186, 1, 1, "", "apply"], [186, 1, 1, "", "auto_specs_"], [186, 2, 1, "", "batch_dims"], [186, 2, 1, "", "batch_locked"], [186, 2, 1, "", "batch_size"], [186, 1, 1, "", "bfloat16"], [186, 1, 1, "", "buffers"], [186, 1, 1, "", "cardinality"], [186, 1, 1, "", "check_env_specs"], [186, 1, 1, "", "children"], [186, 1, 1, "", "compile"], [186, 1, 1, "", "cpu"], [186, 1, 1, "", "cuda"], [186, 2, 1, "", "done_key"], [186, 2, 1, "", "done_keys"], [186, 2, 1, "", "done_keys_groups"], [186, 2, 1, "", "done_spec"], [186, 2, 1, "", "done_spec_unbatched"], [186, 1, 1, "", "double"], [186, 1, 1, "", "empty_cache"], [186, 1, 1, "", "eval"], [186, 1, 1, "", "extra_repr"], [186, 1, 1, "", "fake_tensordict"], [186, 1, 1, "", "float"], [186, 1, 1, "", "forward"], [186, 1, 1, "id0", "from_dataloader"], [186, 2, 1, "", "full_action_spec"], [186, 2, 1, "", "full_action_spec_unbatched"], [186, 2, 1, "", "full_done_spec"], [186, 2, 1, "", "full_done_spec_unbatched"], [186, 2, 1, "", "full_observation_spec_unbatched"], [186, 2, 1, "", "full_reward_spec"], [186, 2, 1, "", "full_reward_spec_unbatched"], [186, 2, 1, "", "full_state_spec"], [186, 2, 1, "", "full_state_spec_unbatched"], [186, 1, 1, "", "get_buffer"], [186, 1, 1, "", "get_extra_state"], [186, 1, 1, "", "get_parameter"], [186, 1, 1, "", "get_submodule"], [186, 1, 1, "", "half"], [186, 2, 1, "", "input_spec"], [186, 2, 1, "", "input_spec_unbatched"], [186, 1, 1, "", "ipu"], [186, 2, 1, "", "is_spec_locked"], [186, 1, 1, "", "load_state_dict"], [186, 1, 1, "", "maybe_reset"], [186, 1, 1, "", "modules"], [186, 1, 1, "", "mtia"], [186, 1, 1, "", "named_buffers"], [186, 1, 1, "", "named_children"], [186, 1, 1, "", "named_modules"], [186, 1, 1, "", "named_parameters"], [186, 2, 1, "", "observation_keys"], [186, 2, 1, "", "observation_spec"], [186, 2, 1, "", "observation_spec_unbatched"], [186, 2, 1, "", "output_spec"], [186, 2, 1, "", "output_spec_unbatched"], [186, 1, 1, "", "parameters"], [186, 1, 1, "", "rand_action"], [186, 1, 1, "", "rand_step"], [186, 1, 1, "", "register_backward_hook"], [186, 1, 1, "", "register_buffer"], [186, 1, 1, "", "register_forward_hook"], [186, 1, 1, "", "register_forward_pre_hook"], [186, 1, 1, "", "register_full_backward_hook"], [186, 1, 1, "", "register_full_backward_pre_hook"], [186, 1, 1, "", "register_gym"], [186, 1, 1, "", "register_load_state_dict_post_hook"], [186, 1, 1, "", "register_load_state_dict_pre_hook"], [186, 1, 1, "", "register_module"], [186, 1, 1, "", "register_parameter"], [186, 1, 1, "", "register_state_dict_post_hook"], [186, 1, 1, "", "register_state_dict_pre_hook"], [186, 1, 1, "", "requires_grad_"], [186, 1, 1, "", "reset"], [186, 2, 1, "", "reset_keys"], [186, 2, 1, "", "reward_key"], [186, 2, 1, "", "reward_keys"], [186, 2, 1, "", "reward_spec"], [186, 2, 1, "", "reward_spec_unbatched"], [186, 1, 1, "", "rollout"], [186, 1, 1, "", "set_extra_state"], [186, 1, 1, "", "set_seed"], [186, 1, 1, "", "set_spec_lock_"], [186, 1, 1, "", "set_submodule"], [186, 2, 1, "", "shape"], [186, 1, 1, "", "share_memory"], [186, 2, 1, "", "specs"], [186, 1, 1, "", "state_dict"], [186, 2, 1, "", "state_keys"], [186, 2, 1, "", "state_spec"], [186, 2, 1, "", "state_spec_unbatched"], [186, 1, 1, "", "step"], [186, 1, 1, "", "step_and_maybe_reset"], [186, 1, 1, "", "step_mdp"], [186, 1, 1, "", "to"], [186, 1, 1, "", "to_empty"], [186, 1, 1, "", "train"], [186, 1, 1, "", "type"], [186, 1, 1, "", "xpu"], [186, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[187, 2, 1, "", "action_key"], [187, 2, 1, "", "action_keys"], [187, 2, 1, "", "action_spec"], [187, 2, 1, "", "action_spec_unbatched"], [187, 1, 1, "", "add_module"], [187, 1, 1, "", "add_truncated_keys"], [187, 1, 1, "", "all_actions"], [187, 1, 1, "", "any_done"], [187, 1, 1, "", "append_transform"], [187, 1, 1, "", "apply"], [187, 1, 1, "", "auto_specs_"], [187, 2, 1, "", "batch_dims"], [187, 2, 1, "", "batch_locked"], [187, 2, 1, "", "batch_size"], [187, 1, 1, "", "bfloat16"], [187, 1, 1, "", "buffers"], [187, 1, 1, "", "cardinality"], [187, 1, 1, "", "check_env_specs"], [187, 1, 1, "", "children"], [187, 1, 1, "", "compile"], [187, 1, 1, "", "cpu"], [187, 1, 1, "", "cuda"], [187, 2, 1, "", "done_key"], [187, 2, 1, "", "done_keys"], [187, 2, 1, "", "done_keys_groups"], [187, 2, 1, "", "done_spec"], [187, 2, 1, "", "done_spec_unbatched"], [187, 1, 1, "", "double"], [187, 1, 1, "", "empty_cache"], [187, 1, 1, "", "eval"], [187, 1, 1, "", "extra_repr"], [187, 1, 1, "", "fake_tensordict"], [187, 1, 1, "", "float"], [187, 1, 1, "", "forward"], [187, 2, 1, "", "full_action_spec"], [187, 2, 1, "", "full_action_spec_unbatched"], [187, 2, 1, "", "full_done_spec"], [187, 2, 1, "", "full_done_spec_unbatched"], [187, 2, 1, "", "full_observation_spec_unbatched"], [187, 2, 1, "", "full_reward_spec"], [187, 2, 1, "", "full_reward_spec_unbatched"], [187, 2, 1, "", "full_state_spec"], [187, 2, 1, "", "full_state_spec_unbatched"], [187, 1, 1, "", "get_buffer"], [187, 1, 1, "", "get_extra_state"], [187, 1, 1, "", "get_parameter"], [187, 1, 1, "", "get_submodule"], [187, 1, 1, "", "half"], [187, 2, 1, "", "input_spec"], [187, 2, 1, "", "input_spec_unbatched"], [187, 1, 1, "", "ipu"], [187, 2, 1, "", "is_spec_locked"], [187, 1, 1, "", "load_state_dict"], [187, 1, 1, "", "make_tensordict"], [187, 1, 1, "", "maybe_reset"], [187, 1, 1, "", "modules"], [187, 1, 1, "", "mtia"], [187, 1, 1, "", "named_buffers"], [187, 1, 1, "", "named_children"], [187, 1, 1, "", "named_modules"], [187, 1, 1, "", "named_parameters"], [187, 2, 1, "", "observation_keys"], [187, 2, 1, "", "observation_spec"], [187, 2, 1, "", "observation_spec_unbatched"], [187, 2, 1, "", "output_spec"], [187, 2, 1, "", "output_spec_unbatched"], [187, 1, 1, "", "parameters"], [187, 1, 1, "", "rand_action"], [187, 1, 1, "", "rand_step"], [187, 1, 1, "", "register_backward_hook"], [187, 1, 1, "", "register_buffer"], [187, 1, 1, "", "register_forward_hook"], [187, 1, 1, "", "register_forward_pre_hook"], [187, 1, 1, "", "register_full_backward_hook"], [187, 1, 1, "", "register_full_backward_pre_hook"], [187, 1, 1, "", "register_gym"], [187, 1, 1, "", "register_load_state_dict_post_hook"], [187, 1, 1, "", "register_load_state_dict_pre_hook"], [187, 1, 1, "", "register_module"], [187, 1, 1, "", "register_parameter"], [187, 1, 1, "", "register_state_dict_post_hook"], [187, 1, 1, "", "register_state_dict_pre_hook"], [187, 1, 1, "", "requires_grad_"], [187, 1, 1, "", "reset"], [187, 2, 1, "", "reset_keys"], [187, 2, 1, "", "reward_key"], [187, 2, 1, "", "reward_keys"], [187, 2, 1, "", "reward_spec"], [187, 2, 1, "", "reward_spec_unbatched"], [187, 1, 1, "", "rollout"], [187, 1, 1, "", "set_extra_state"], [187, 1, 1, "", "set_seed"], [187, 1, 1, "", "set_spec_lock_"], [187, 1, 1, "", "set_submodule"], [187, 2, 1, "", "shape"], [187, 1, 1, "", "share_memory"], [187, 2, 1, "", "specs"], [187, 1, 1, "", "state_dict"], [187, 2, 1, "", "state_keys"], [187, 2, 1, "", "state_spec"], [187, 2, 1, "", "state_spec_unbatched"], [187, 1, 1, "", "step"], [187, 1, 1, "", "step_and_maybe_reset"], [187, 1, 1, "", "step_mdp"], [187, 1, 1, "", "to"], [187, 1, 1, "", "to_empty"], [187, 1, 1, "", "train"], [187, 1, 1, "", "type"], [187, 1, 1, "", "xpu"], [187, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[188, 2, 1, "", "action_key"], [188, 2, 1, "", "action_keys"], [188, 2, 1, "", "action_spec"], [188, 2, 1, "", "action_spec_unbatched"], [188, 1, 1, "", "add_module"], [188, 1, 1, "", "add_truncated_keys"], [188, 1, 1, "", "all_actions"], [188, 1, 1, "", "any_done"], [188, 1, 1, "", "append_transform"], [188, 1, 1, "", "apply"], [188, 1, 1, "", "auto_register_info_dict"], [188, 1, 1, "", "auto_specs_"], [188, 2, 1, "", "batch_dims"], [188, 2, 1, "", "batch_locked"], [188, 2, 1, "", "batch_size"], [188, 1, 1, "", "bfloat16"], [188, 1, 1, "", "buffers"], [188, 1, 1, "", "cardinality"], [188, 1, 1, "", "check_env_specs"], [188, 1, 1, "", "children"], [188, 1, 1, "", "close"], [188, 1, 1, "", "compile"], [188, 1, 1, "", "cpu"], [188, 1, 1, "", "cuda"], [188, 2, 1, "", "done_key"], [188, 2, 1, "", "done_keys"], [188, 2, 1, "", "done_keys_groups"], [188, 2, 1, "", "done_spec"], [188, 2, 1, "", "done_spec_unbatched"], [188, 1, 1, "", "double"], [188, 1, 1, "", "empty_cache"], [188, 1, 1, "", "eval"], [188, 1, 1, "", "extra_repr"], [188, 1, 1, "", "fake_tensordict"], [188, 1, 1, "", "fast_encoding"], [188, 1, 1, "", "float"], [188, 1, 1, "", "forward"], [188, 2, 1, "", "full_action_spec"], [188, 2, 1, "", "full_action_spec_unbatched"], [188, 2, 1, "", "full_done_spec"], [188, 2, 1, "", "full_done_spec_unbatched"], [188, 2, 1, "", "full_observation_spec_unbatched"], [188, 2, 1, "", "full_reward_spec"], [188, 2, 1, "", "full_reward_spec_unbatched"], [188, 2, 1, "", "full_state_spec"], [188, 2, 1, "", "full_state_spec_unbatched"], [188, 1, 1, "", "get_buffer"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "get_library_name"], [188, 1, 1, "", "get_parameter"], [188, 1, 1, "", "get_submodule"], [188, 1, 1, "", "half"], [188, 2, 1, "", "input_spec"], [188, 2, 1, "", "input_spec_unbatched"], [188, 1, 1, "", "ipu"], [188, 2, 1, "", "is_spec_locked"], [188, 1, 1, "", "load_state_dict"], [188, 1, 1, "", "maybe_reset"], [188, 1, 1, "", "modules"], [188, 1, 1, "", "mtia"], [188, 1, 1, "", "named_buffers"], [188, 1, 1, "", "named_children"], [188, 1, 1, "", "named_modules"], [188, 1, 1, "", "named_parameters"], [188, 2, 1, "", "observation_keys"], [188, 2, 1, "", "observation_spec"], [188, 2, 1, "", "observation_spec_unbatched"], [188, 2, 1, "", "output_spec"], [188, 2, 1, "", "output_spec_unbatched"], [188, 1, 1, "", "parameters"], [188, 1, 1, "", "rand_action"], [188, 1, 1, "", "rand_step"], [188, 1, 1, "", "read_action"], [188, 1, 1, "", "read_done"], [188, 1, 1, "", "read_obs"], [188, 1, 1, "", "read_reward"], [188, 1, 1, "", "register_backward_hook"], [188, 1, 1, "", "register_buffer"], [188, 1, 1, "", "register_forward_hook"], [188, 1, 1, "", "register_forward_pre_hook"], [188, 1, 1, "", "register_full_backward_hook"], [188, 1, 1, "", "register_full_backward_pre_hook"], [188, 1, 1, "", "register_gym"], [188, 1, 1, "", "register_load_state_dict_post_hook"], [188, 1, 1, "", "register_load_state_dict_pre_hook"], [188, 1, 1, "", "register_module"], [188, 1, 1, "", "register_parameter"], [188, 1, 1, "", "register_state_dict_post_hook"], [188, 1, 1, "", "register_state_dict_pre_hook"], [188, 1, 1, "", "requires_grad_"], [188, 1, 1, "", "reset"], [188, 2, 1, "", "reset_keys"], [188, 2, 1, "", "reward_key"], [188, 2, 1, "", "reward_keys"], [188, 2, 1, "", "reward_spec"], [188, 2, 1, "", "reward_spec_unbatched"], [188, 1, 1, "", "rollout"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "set_info_dict_reader"], [188, 1, 1, "", "set_seed"], [188, 1, 1, "", "set_spec_lock_"], [188, 1, 1, "", "set_submodule"], [188, 2, 1, "", "shape"], [188, 1, 1, "", "share_memory"], [188, 2, 1, "", "specs"], [188, 1, 1, "", "state_dict"], [188, 2, 1, "", "state_keys"], [188, 2, 1, "", "state_spec"], [188, 2, 1, "", "state_spec_unbatched"], [188, 1, 1, "", "step"], [188, 1, 1, "", "step_and_maybe_reset"], [188, 1, 1, "", "step_mdp"], [188, 1, 1, "", "to"], [188, 1, 1, "", "to_empty"], [188, 1, 1, "", "train"], [188, 1, 1, "", "type"], [188, 1, 1, "", "xpu"], [188, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[191, 0, 1, "", "DataLoadingPrimer"], [192, 0, 1, "", "KLRewardTransform"], [193, 0, 1, "", "PythonInterpreter"], [194, 0, 1, "", "TemplateTransform"], [195, 0, 1, "", "Tokenizer"], [196, 0, 1, "", "as_nested_tensor"], [197, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[191, 1, 1, "", "add_module"], [191, 1, 1, "", "apply"], [191, 1, 1, "", "bfloat16"], [191, 1, 1, "", "buffers"], [191, 1, 1, "", "children"], [191, 1, 1, "", "close"], [191, 1, 1, "", "compile"], [191, 2, 1, "", "container"], [191, 1, 1, "", "cpu"], [191, 1, 1, "", "cuda"], [191, 1, 1, "", "double"], [191, 1, 1, "", "eval"], [191, 1, 1, "", "extra_repr"], [191, 1, 1, "", "float"], [191, 1, 1, "", "forward"], [191, 1, 1, "", "get_buffer"], [191, 1, 1, "", "get_extra_state"], [191, 1, 1, "", "get_parameter"], [191, 1, 1, "", "get_submodule"], [191, 1, 1, "", "half"], [191, 1, 1, "", "init"], [191, 1, 1, "", "inv"], [191, 1, 1, "", "ipu"], [191, 1, 1, "", "load_state_dict"], [191, 1, 1, "", "modules"], [191, 1, 1, "", "mtia"], [191, 1, 1, "", "named_buffers"], [191, 1, 1, "", "named_children"], [191, 1, 1, "", "named_modules"], [191, 1, 1, "", "named_parameters"], [191, 1, 1, "", "parameters"], [191, 2, 1, "", "parent"], [191, 1, 1, "", "register_backward_hook"], [191, 1, 1, "", "register_buffer"], [191, 1, 1, "", "register_forward_hook"], [191, 1, 1, "", "register_forward_pre_hook"], [191, 1, 1, "", "register_full_backward_hook"], [191, 1, 1, "", "register_full_backward_pre_hook"], [191, 1, 1, "", "register_load_state_dict_post_hook"], [191, 1, 1, "", "register_load_state_dict_pre_hook"], [191, 1, 1, "", "register_module"], [191, 1, 1, "", "register_parameter"], [191, 1, 1, "", "register_state_dict_post_hook"], [191, 1, 1, "", "register_state_dict_pre_hook"], [191, 1, 1, "", "requires_grad_"], [191, 1, 1, "", "set_extra_state"], [191, 1, 1, "", "set_submodule"], [191, 1, 1, "", "share_memory"], [191, 1, 1, "", "state_dict"], [191, 1, 1, "", "to"], [191, 1, 1, "", "to_empty"], [191, 1, 1, "", "train"], [191, 1, 1, "", "transform_action_spec"], [191, 1, 1, "", "transform_done_spec"], [191, 1, 1, "", "transform_env_batch_size"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "transform_state_spec"], [191, 1, 1, "", "type"], [191, 1, 1, "", "xpu"], [191, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[192, 1, 1, "", "add_module"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "children"], [192, 1, 1, "", "close"], [192, 1, 1, "", "compile"], [192, 2, 1, "", "container"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 1, 1, "", "double"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 1, 1, "", "init"], [192, 1, 1, "", "inv"], [192, 1, 1, "", "ipu"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 1, 1, "", "parameters"], [192, 2, 1, "", "parent"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_submodule"], [192, 1, 1, "", "share_memory"], [192, 1, 1, "", "state_dict"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "transform_action_spec"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_batch_size"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "transform_state_spec"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[193, 1, 1, "", "add_module"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "children"], [193, 1, 1, "", "clone"], [193, 1, 1, "", "close"], [193, 1, 1, "", "compile"], [193, 2, 1, "", "container"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 1, 1, "", "double"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 1, 1, "", "init"], [193, 1, 1, "", "inv"], [193, 1, 1, "", "ipu"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 1, 1, "", "parameters"], [193, 2, 1, "", "parent"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_submodule"], [193, 1, 1, "", "share_memory"], [193, 1, 1, "", "state_dict"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "transform_action_spec"], [193, 1, 1, "", "transform_done_spec"], [193, 1, 1, "", "transform_env_batch_size"], [193, 1, 1, "", "transform_env_device"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_output_spec"], [193, 1, 1, "", "transform_reward_spec"], [193, 1, 1, "", "transform_state_spec"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[194, 1, 1, "", "add_module"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "children"], [194, 1, 1, "", "close"], [194, 1, 1, "", "compile"], [194, 2, 1, "", "container"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 1, 1, "", "double"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 1, 1, "", "init"], [194, 1, 1, "", "inv"], [194, 1, 1, "", "ipu"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 1, 1, "", "parameters"], [194, 2, 1, "", "parent"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_submodule"], [194, 1, 1, "", "share_memory"], [194, 1, 1, "", "state_dict"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "transform_action_spec"], [194, 1, 1, "", "transform_done_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "transform_state_spec"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "close"], [195, 1, 1, "", "compile"], [195, 2, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "init"], [195, 1, 1, "", "inv"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 2, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[199, 3, 1, "", "DreamerDecoder"], [200, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[206, 0, 1, "", "ActionDiscretizer"], [207, 0, 1, "", "ActionMask"], [208, 0, 1, "", "AutoResetEnv"], [209, 0, 1, "", "AutoResetTransform"], [210, 0, 1, "", "BatchSizeTransform"], [211, 0, 1, "", "BinarizeReward"], [212, 0, 1, "", "BurnInTransform"], [213, 0, 1, "", "CatFrames"], [214, 0, 1, "", "CatTensors"], [215, 0, 1, "", "CenterCrop"], [216, 0, 1, "", "ClipTransform"], [217, 0, 1, "", "Compose"], [218, 0, 1, "", "ConditionalPolicySwitch"], [219, 0, 1, "", "ConditionalSkip"], [220, 0, 1, "", "Crop"], [221, 0, 1, "", "DTypeCastTransform"], [222, 0, 1, "", "DeviceCastTransform"], [223, 0, 1, "", "DiscreteActionProjection"], [224, 0, 1, "", "DoubleToFloat"], [225, 0, 1, "", "EndOfLifeTransform"], [226, 0, 1, "", "ExcludeTransform"], [227, 0, 1, "", "FiniteTensorDictCheck"], [228, 0, 1, "", "FlattenObservation"], [229, 0, 1, "", "FrameSkipTransform"], [230, 0, 1, "", "GrayScale"], [231, 0, 1, "", "Hash"], [232, 0, 1, "", "InitTracker"], [233, 0, 1, "", "KLRewardTransform"], [234, 0, 1, "", "LineariseRewards"], [235, 0, 1, "", "MultiAction"], [236, 0, 1, "", "NoopResetEnv"], [237, 0, 1, "", "ObservationNorm"], [238, 0, 1, "", "ObservationTransform"], [239, 0, 1, "", "PermuteTransform"], [240, 0, 1, "", "PinMemoryTransform"], [241, 0, 1, "", "R3MTransform"], [242, 0, 1, "", "RandomCropTensorDict"], [243, 0, 1, "", "RemoveEmptySpecs"], [244, 0, 1, "", "RenameTransform"], [245, 0, 1, "", "Resize"], [246, 0, 1, "", "Reward2GoTransform"], [247, 0, 1, "", "RewardClipping"], [248, 0, 1, "", "RewardScaling"], [249, 0, 1, "", "RewardSum"], [250, 0, 1, "", "SelectTransform"], [251, 0, 1, "", "SignTransform"], [252, 0, 1, "", "SqueezeTransform"], [253, 0, 1, "", "Stack"], [254, 0, 1, "", "StepCounter"], [255, 0, 1, "", "TargetReturn"], [256, 0, 1, "", "TensorDictPrimer"], [257, 0, 1, "", "TimeMaxPool"], [258, 0, 1, "", "Timer"], [259, 0, 1, "", "ToTensorImage"], [260, 0, 1, "", "Tokenizer"], [261, 0, 1, "", "TrajCounter"], [262, 0, 1, "", "Transform"], [263, 0, 1, "", "TransformedEnv"], [264, 0, 1, "", "UnaryTransform"], [265, 0, 1, "", "UnsqueezeTransform"], [266, 0, 1, "", "VC1Transform"], [267, 0, 1, "", "VIPRewardTransform"], [268, 0, 1, "", "VIPTransform"], [269, 0, 1, "", "VecGymEnvTransform"], [270, 0, 1, "", "VecNorm"], [271, 0, 1, "", "VecNormV2"], [272, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[206, 0, 1, "", "SamplingStrategy"], [206, 1, 1, "", "inv"], [206, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[207, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[208, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[209, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_env_batch_size"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[212, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "make_rb_transform_and_sampler"], [213, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[215, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[217, 1, 1, "", "append"], [217, 1, 1, "", "close"], [217, 1, 1, "", "forward"], [217, 1, 1, "", "init"], [217, 1, 1, "", "insert"], [217, 1, 1, "", "to"], [217, 1, 1, "", "transform_action_spec"], [217, 1, 1, "", "transform_env_batch_size"], [217, 1, 1, "", "transform_env_device"], [217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "transform_output_spec"], [217, 1, 1, "", "transform_reward_spec"], [217, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[218, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[219, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[220, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_observation_spec"], [221, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "transform_action_spec"], [222, 1, 1, "", "transform_done_spec"], [222, 1, 1, "", "transform_env_device"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "transform_output_spec"], [222, 1, 1, "", "transform_reward_spec"], [222, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[223, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "register_keys"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[227, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[229, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[231, 1, 1, "", "get_input_from_hash"], [231, 1, 1, "", "reproducible_hash"], [231, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[234, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[235, 1, 1, "", "transform_input_spec"], [235, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[237, 1, 1, "", "init_stats"], [237, 1, 1, "", "transform_action_spec"], [237, 1, 1, "", "transform_observation_spec"], [237, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[239, 1, 1, "", "transform_input_spec"], [239, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[240, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[241, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[242, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "transform_input_spec"], [243, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "transform_input_spec"], [244, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[245, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[246, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[247, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[248, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "transform_input_spec"], [249, 1, 1, "", "transform_observation_spec"], [249, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[251, 1, 1, "", "transform_observation_spec"], [251, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "transform_done_spec"], [253, 1, 1, "", "transform_input_spec"], [253, 1, 1, "", "transform_observation_spec"], [253, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "transform_input_spec"], [254, 1, 1, "", "transform_observation_spec"], [254, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "transform_input_spec"], [255, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "to"], [256, 1, 1, "", "transform_input_spec"], [256, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[259, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "transform_done_spec"], [260, 1, 1, "", "transform_input_spec"], [260, 1, 1, "", "transform_observation_spec"], [260, 1, 1, "", "transform_output_spec"], [260, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "load_state_dict"], [261, 1, 1, "", "state_dict"], [261, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[262, 1, 1, "", "clone"], [262, 1, 1, "", "close"], [262, 2, 1, "", "container"], [262, 1, 1, "", "forward"], [262, 1, 1, "", "init"], [262, 1, 1, "", "inv"], [262, 2, 1, "", "parent"], [262, 1, 1, "", "reset_parent"], [262, 1, 1, "", "set_container"], [262, 1, 1, "", "to"], [262, 1, 1, "", "transform_action_spec"], [262, 1, 1, "", "transform_done_spec"], [262, 1, 1, "", "transform_env_batch_size"], [262, 1, 1, "", "transform_env_device"], [262, 1, 1, "", "transform_input_spec"], [262, 1, 1, "", "transform_observation_spec"], [262, 1, 1, "", "transform_output_spec"], [262, 1, 1, "", "transform_reward_spec"], [262, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[263, 1, 1, "", "add_truncated_keys"], [263, 1, 1, "", "append_transform"], [263, 2, 1, "", "batch_locked"], [263, 2, 1, "", "batch_size"], [263, 1, 1, "", "empty_cache"], [263, 1, 1, "", "eval"], [263, 2, 1, "", "input_spec"], [263, 1, 1, "", "insert_transform"], [263, 1, 1, "", "load_state_dict"], [263, 2, 1, "", "output_spec"], [263, 1, 1, "", "rand_action"], [263, 1, 1, "", "set_missing_tolerance"], [263, 1, 1, "", "set_seed"], [263, 1, 1, "", "state_dict"], [263, 1, 1, "", "to"], [263, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[264, 1, 1, "", "transform_action_spec"], [264, 1, 1, "", "transform_done_spec"], [264, 1, 1, "", "transform_input_spec"], [264, 1, 1, "", "transform_observation_spec"], [264, 1, 1, "", "transform_output_spec"], [264, 1, 1, "", "transform_reward_spec"], [264, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[265, 1, 1, "", "transform_action_spec"], [265, 1, 1, "", "transform_observation_spec"], [265, 1, 1, "", "transform_reward_spec"], [265, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_noload_model"], [266, 1, 1, "", "to"], [266, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[268, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[270, 1, 1, "", "build_td_for_shared_vecnorm"], [270, 1, 1, "", "forward"], [270, 1, 1, "", "freeze"], [270, 1, 1, "", "frozen_copy"], [270, 1, 1, "", "get_extra_state"], [270, 2, 1, "", "loc"], [270, 2, 1, "", "scale"], [270, 1, 1, "", "set_extra_state"], [270, 2, 1, "", "standard_normal"], [270, 1, 1, "", "to_observation_norm"], [270, 1, 1, "", "transform_observation_spec"], [270, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[271, 1, 1, "", "clone"], [271, 1, 1, "id0", "freeze"], [271, 1, 1, "id1", "frozen_copy"], [271, 1, 1, "id2", "get_extra_state"], [271, 2, 1, "id3", "loc"], [271, 2, 1, "id4", "scale"], [271, 1, 1, "id5", "set_extra_state"], [271, 2, 1, "id6", "standard_normal"], [271, 1, 1, "", "to_observation_norm"], [271, 1, 1, "id7", "transform_observation_spec"], [271, 1, 1, "id8", "transform_output_spec"], [271, 1, 1, "id9", "transform_reward_spec"], [271, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[273, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[273, 1, 1, "", "add_module"], [273, 1, 1, "", "apply"], [273, 1, 1, "", "bfloat16"], [273, 1, 1, "", "buffers"], [273, 1, 1, "", "children"], [273, 1, 1, "", "close"], [273, 1, 1, "", "compile"], [273, 2, 1, "", "container"], [273, 1, 1, "", "cpu"], [273, 1, 1, "", "cuda"], [273, 1, 1, "", "double"], [273, 1, 1, "", "eval"], [273, 1, 1, "", "extra_repr"], [273, 1, 1, "", "float"], [273, 1, 1, "", "forward"], [273, 1, 1, "", "get_buffer"], [273, 1, 1, "", "get_extra_state"], [273, 1, 1, "", "get_parameter"], [273, 1, 1, "", "get_submodule"], [273, 1, 1, "", "half"], [273, 1, 1, "", "init"], [273, 1, 1, "", "inv"], [273, 1, 1, "", "ipu"], [273, 1, 1, "", "load_state_dict"], [273, 1, 1, "", "modules"], [273, 1, 1, "", "mtia"], [273, 2, 1, "", "n_steps"], [273, 1, 1, "", "named_buffers"], [273, 1, 1, "", "named_children"], [273, 1, 1, "", "named_modules"], [273, 1, 1, "", "named_parameters"], [273, 1, 1, "", "parameters"], [273, 2, 1, "", "parent"], [273, 1, 1, "", "register_backward_hook"], [273, 1, 1, "", "register_buffer"], [273, 1, 1, "", "register_forward_hook"], [273, 1, 1, "", "register_forward_pre_hook"], [273, 1, 1, "", "register_full_backward_hook"], [273, 1, 1, "", "register_full_backward_pre_hook"], [273, 1, 1, "", "register_load_state_dict_post_hook"], [273, 1, 1, "", "register_load_state_dict_pre_hook"], [273, 1, 1, "", "register_module"], [273, 1, 1, "", "register_parameter"], [273, 1, 1, "", "register_state_dict_post_hook"], [273, 1, 1, "", "register_state_dict_pre_hook"], [273, 1, 1, "", "requires_grad_"], [273, 1, 1, "", "set_extra_state"], [273, 1, 1, "", "set_submodule"], [273, 1, 1, "", "share_memory"], [273, 1, 1, "", "state_dict"], [273, 1, 1, "", "to"], [273, 1, 1, "", "to_empty"], [273, 1, 1, "", "train"], [273, 1, 1, "", "transform_action_spec"], [273, 1, 1, "", "transform_done_spec"], [273, 1, 1, "", "transform_env_batch_size"], [273, 1, 1, "", "transform_env_device"], [273, 1, 1, "", "transform_input_spec"], [273, 1, 1, "", "transform_observation_spec"], [273, 1, 1, "", "transform_output_spec"], [273, 1, 1, "", "transform_reward_spec"], [273, 1, 1, "", "transform_state_spec"], [273, 1, 1, "", "type"], [273, 1, 1, "", "xpu"], [273, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[274, 1, 1, "", "get_class_that_defined_method"], [274, 1, 1, "", "import_module"], [274, 1, 1, "", "module_set"], [274, 1, 1, "", "reset"]], "torchrl.modules": [[275, 0, 1, "", "AdditiveGaussianModule"], [276, 0, 1, "", "BatchRenorm1d"], [277, 0, 1, "", "CEMPlanner"], [278, 0, 1, "", "ConsistentDropout"], [279, 0, 1, "", "ConsistentDropoutModule"], [280, 0, 1, "", "Conv3dNet"], [281, 0, 1, "", "ConvNet"], [282, 0, 1, "", "DTActor"], [283, 0, 1, "", "DdpgCnnActor"], [284, 0, 1, "", "DdpgCnnQNet"], [285, 0, 1, "", "DdpgMlpActor"], [286, 0, 1, "", "DdpgMlpQNet"], [287, 0, 1, "", "DecisionTransformer"], [288, 0, 1, "", "Delta"], [289, 0, 1, "", "DistributionalDQNnet"], [290, 0, 1, "", "DistributionalQValueHook"], [291, 0, 1, "", "DreamerActor"], [292, 0, 1, "", "DuelingCnnDQNet"], [293, 0, 1, "", "EGreedyModule"], [294, 0, 1, "", "GRU"], [295, 0, 1, "", "GRUCell"], [296, 0, 1, "", "GRUModule"], [297, 0, 1, "", "IndependentNormal"], [298, 0, 1, "", "LSTM"], [299, 0, 1, "", "LSTMCell"], [300, 0, 1, "", "LSTMModule"], [301, 0, 1, "", "MLP"], [302, 0, 1, "", "MPCPlannerBase"], [303, 0, 1, "", "MPPIPlanner"], [304, 0, 1, "", "MaskedCategorical"], [305, 0, 1, "", "MaskedOneHotCategorical"], [306, 0, 1, "", "MultiAgentConvNet"], [307, 0, 1, "", "MultiAgentMLP"], [308, 0, 1, "", "MultiAgentNetBase"], [309, 0, 1, "", "NoisyLazyLinear"], [310, 0, 1, "", "NoisyLinear"], [311, 0, 1, "", "ObsDecoder"], [312, 0, 1, "", "ObsEncoder"], [313, 0, 1, "", "OneHotCategorical"], [314, 0, 1, "", "OneHotOrdinal"], [315, 0, 1, "", "OnlineDTActor"], [316, 0, 1, "", "Ordinal"], [317, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [318, 0, 1, "", "QMixer"], [319, 0, 1, "", "QValueHook"], [320, 0, 1, "", "RSSMPosterior"], [321, 0, 1, "", "RSSMPrior"], [322, 0, 1, "", "Squeeze2dLayer"], [323, 0, 1, "", "SqueezeLayer"], [324, 0, 1, "", "TanhDelta"], [325, 0, 1, "", "TanhNormal"], [326, 0, 1, "", "TruncatedNormal"], [327, 0, 1, "", "VDNMixer"], [328, 0, 1, "", "VmapModule"], [336, 0, 1, "", "recurrent_mode"], [337, 0, 1, "", "reset_noise"], [338, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[276, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[277, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[278, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[280, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[281, 1, 1, "", "default_atari_dqn"], [281, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[282, 1, 1, "", "default_config"], [282, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[283, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[284, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[285, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[286, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[287, 0, 1, "", "DTConfig"], [287, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[288, 1, 1, "", "expand"], [288, 1, 1, "", "log_prob"], [288, 2, 1, "", "mean"], [288, 2, 1, "", "mode"], [288, 1, 1, "", "rsample"], [288, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[289, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[291, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[292, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "step"]], "torchrl.modules.GRU": [[294, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[295, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "make_cudnn_based"], [296, 1, 1, "", "make_python_based"], [296, 1, 1, "id0", "make_tensordict_primer"], [296, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[297, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[298, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[299, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "make_cudnn_based"], [300, 1, 1, "", "make_python_based"], [300, 1, 1, "id0", "make_tensordict_primer"], [300, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[301, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[303, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[304, 1, 1, "", "log_prob"], [304, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[305, 1, 1, "", "log_prob"], [305, 2, 1, "", "mode"], [305, 1, 1, "", "rsample"], [305, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "from_stateful_net"], [308, 1, 1, "", "get_stateful_net"], [308, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[309, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[311, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[312, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[313, 1, 1, "", "entropy"], [313, 1, 1, "", "log_prob"], [313, 2, 1, "", "mode"], [313, 1, 1, "", "rsample"], [313, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[315, 1, 1, "", "default_config"], [315, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[318, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[320, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[321, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[323, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[324, 2, 1, "", "mean"], [324, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[325, 1, 1, "", "get_mode"], [325, 2, 1, "", "mean"], [325, 2, 1, "", "mode"], [325, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[326, 1, 1, "", "log_prob"], [326, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[327, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[328, 1, 1, "", "forward"]], "torchrl.modules.llm": [[329, 0, 1, "", "CategoricalSequential"], [330, 0, 1, "", "LLMOnDevice"], [331, 0, 1, "", "TransformersWrapper"], [332, 0, 1, "", "make_vllm_worker"], [333, 0, 1, "", "stateless_init_process_group"], [334, 0, 1, "", "vLLMWorker"], [335, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.CategoricalSequential": [[329, 1, 1, "", "add_module"], [329, 1, 1, "", "apply"], [329, 1, 1, "", "bfloat16"], [329, 1, 1, "", "buffers"], [329, 1, 1, "", "children"], [329, 1, 1, "", "compile"], [329, 1, 1, "", "cpu"], [329, 1, 1, "", "cuda"], [329, 1, 1, "", "double"], [329, 1, 1, "", "eval"], [329, 1, 1, "", "extra_repr"], [329, 1, 1, "", "float"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "get_buffer"], [329, 1, 1, "", "get_extra_state"], [329, 1, 1, "", "get_parameter"], [329, 1, 1, "", "get_submodule"], [329, 1, 1, "", "half"], [329, 1, 1, "", "ipu"], [329, 1, 1, "", "is_tdmodule_compatible"], [329, 1, 1, "", "load_state_dict"], [329, 1, 1, "", "modules"], [329, 1, 1, "", "mtia"], [329, 1, 1, "", "named_buffers"], [329, 1, 1, "", "named_children"], [329, 1, 1, "", "named_modules"], [329, 1, 1, "", "named_parameters"], [329, 1, 1, "", "parameters"], [329, 1, 1, "", "register_backward_hook"], [329, 1, 1, "", "register_buffer"], [329, 1, 1, "", "register_forward_hook"], [329, 1, 1, "", "register_forward_pre_hook"], [329, 1, 1, "", "register_full_backward_hook"], [329, 1, 1, "", "register_full_backward_pre_hook"], [329, 1, 1, "", "register_load_state_dict_post_hook"], [329, 1, 1, "", "register_load_state_dict_pre_hook"], [329, 1, 1, "", "register_module"], [329, 1, 1, "", "register_parameter"], [329, 1, 1, "", "register_state_dict_post_hook"], [329, 1, 1, "", "register_state_dict_pre_hook"], [329, 1, 1, "", "requires_grad_"], [329, 1, 1, "", "reset_out_keys"], [329, 1, 1, "", "reset_parameters_recursive"], [329, 1, 1, "", "select_out_keys"], [329, 1, 1, "", "set_extra_state"], [329, 1, 1, "", "set_submodule"], [329, 1, 1, "", "share_memory"], [329, 1, 1, "", "state_dict"], [329, 1, 1, "", "to"], [329, 1, 1, "", "to_empty"], [329, 1, 1, "", "train"], [329, 1, 1, "", "type"], [329, 1, 1, "", "xpu"], [329, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.TransformersWrapper": [[331, 1, 1, "", "add_module"], [331, 1, 1, "", "apply"], [331, 1, 1, "", "bfloat16"], [331, 1, 1, "", "buffers"], [331, 1, 1, "", "children"], [331, 1, 1, "", "compile"], [331, 1, 1, "", "cpu"], [331, 1, 1, "", "cuda"], [331, 1, 1, "", "double"], [331, 1, 1, "", "eval"], [331, 1, 1, "", "extra_repr"], [331, 1, 1, "", "float"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "get_buffer"], [331, 1, 1, "", "get_extra_state"], [331, 1, 1, "", "get_parameter"], [331, 1, 1, "", "get_submodule"], [331, 1, 1, "", "half"], [331, 1, 1, "", "ipu"], [331, 1, 1, "", "is_tdmodule_compatible"], [331, 1, 1, "", "load_state_dict"], [331, 1, 1, "", "modules"], [331, 1, 1, "", "mtia"], [331, 1, 1, "", "named_buffers"], [331, 1, 1, "", "named_children"], [331, 1, 1, "", "named_modules"], [331, 1, 1, "", "named_parameters"], [331, 1, 1, "", "parameters"], [331, 1, 1, "", "register_backward_hook"], [331, 1, 1, "", "register_buffer"], [331, 1, 1, "", "register_forward_hook"], [331, 1, 1, "", "register_forward_pre_hook"], [331, 1, 1, "", "register_full_backward_hook"], [331, 1, 1, "", "register_full_backward_pre_hook"], [331, 1, 1, "", "register_load_state_dict_post_hook"], [331, 1, 1, "", "register_load_state_dict_pre_hook"], [331, 1, 1, "", "register_module"], [331, 1, 1, "", "register_parameter"], [331, 1, 1, "", "register_state_dict_post_hook"], [331, 1, 1, "", "register_state_dict_pre_hook"], [331, 1, 1, "", "requires_grad_"], [331, 1, 1, "", "reset_out_keys"], [331, 1, 1, "", "reset_parameters_recursive"], [331, 1, 1, "", "select_out_keys"], [331, 1, 1, "", "set_extra_state"], [331, 1, 1, "", "set_submodule"], [331, 1, 1, "", "share_memory"], [331, 1, 1, "", "state_dict"], [331, 1, 1, "", "to"], [331, 1, 1, "", "to_empty"], [331, 1, 1, "", "train"], [331, 1, 1, "", "type"], [331, 1, 1, "", "xpu"], [331, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWorker": [[334, 1, 1, "", "check_weights_changed"]], "torchrl.modules.llm.vLLMWrapper": [[335, 1, 1, "", "add_module"], [335, 1, 1, "", "apply"], [335, 1, 1, "", "bfloat16"], [335, 1, 1, "", "buffers"], [335, 1, 1, "", "children"], [335, 1, 1, "", "compile"], [335, 1, 1, "", "cpu"], [335, 1, 1, "", "cuda"], [335, 1, 1, "", "double"], [335, 1, 1, "", "eval"], [335, 1, 1, "", "extra_repr"], [335, 1, 1, "", "float"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "get_buffer"], [335, 1, 1, "", "get_extra_state"], [335, 1, 1, "", "get_parameter"], [335, 1, 1, "", "get_submodule"], [335, 1, 1, "", "half"], [335, 1, 1, "", "ipu"], [335, 1, 1, "", "is_tdmodule_compatible"], [335, 1, 1, "", "load_state_dict"], [335, 1, 1, "", "modules"], [335, 1, 1, "", "mtia"], [335, 1, 1, "", "named_buffers"], [335, 1, 1, "", "named_children"], [335, 1, 1, "", "named_modules"], [335, 1, 1, "", "named_parameters"], [335, 1, 1, "", "parameters"], [335, 1, 1, "", "register_backward_hook"], [335, 1, 1, "", "register_buffer"], [335, 1, 1, "", "register_forward_hook"], [335, 1, 1, "", "register_forward_pre_hook"], [335, 1, 1, "", "register_full_backward_hook"], [335, 1, 1, "", "register_full_backward_pre_hook"], [335, 1, 1, "", "register_load_state_dict_post_hook"], [335, 1, 1, "", "register_load_state_dict_pre_hook"], [335, 1, 1, "", "register_module"], [335, 1, 1, "", "register_parameter"], [335, 1, 1, "", "register_state_dict_post_hook"], [335, 1, 1, "", "register_state_dict_pre_hook"], [335, 1, 1, "", "requires_grad_"], [335, 1, 1, "", "reset_out_keys"], [335, 1, 1, "", "reset_parameters_recursive"], [335, 1, 1, "", "select_out_keys"], [335, 1, 1, "", "set_extra_state"], [335, 1, 1, "", "set_submodule"], [335, 1, 1, "", "share_memory"], [335, 1, 1, "", "state_dict"], [335, 1, 1, "", "to"], [335, 1, 1, "", "to_empty"], [335, 1, 1, "", "train"], [335, 1, 1, "", "type"], [335, 1, 1, "", "xpu"], [335, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[339, 0, 1, "", "Actor"], [340, 0, 1, "", "ActorCriticOperator"], [341, 0, 1, "", "ActorCriticWrapper"], [342, 0, 1, "", "ActorValueOperator"], [343, 0, 1, "", "DecisionTransformerInferenceWrapper"], [344, 0, 1, "", "DistributionalQValueActor"], [345, 0, 1, "", "DistributionalQValueModule"], [346, 0, 1, "", "LMHeadActorValueOperator"], [347, 0, 1, "", "MultiStepActorWrapper"], [348, 0, 1, "", "ProbabilisticActor"], [349, 0, 1, "", "QValueActor"], [350, 0, 1, "", "QValueModule"], [351, 0, 1, "", "SafeModule"], [352, 0, 1, "", "SafeProbabilisticModule"], [353, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [354, 0, 1, "", "SafeSequential"], [355, 0, 1, "", "TanhModule"], [356, 0, 1, "", "ValueOperator"], [357, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[340, 1, 1, "", "get_critic_operator"], [340, 1, 1, "", "get_policy_head"], [340, 1, 1, "", "get_value_head"], [340, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[341, 1, 1, "", "get_policy_head"], [341, 1, 1, "", "get_policy_operator"], [341, 1, 1, "", "get_value_head"], [341, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[342, 1, 1, "", "get_policy_head"], [342, 1, 1, "", "get_policy_operator"], [342, 1, 1, "", "get_value_head"], [342, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[343, 1, 1, "", "forward"], [343, 1, 1, "", "mask_context"], [343, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[345, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[347, 1, 1, "", "forward"], [347, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[350, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[351, 1, 1, "", "random"], [351, 1, 1, "", "random_sample"], [351, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[352, 1, 1, "", "random"], [352, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[355, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[357, 1, 1, "", "get_reward_operator"], [357, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[358, 0, 1, "", "biased_softplus"], [359, 0, 1, "", "get_primers_from_module"], [360, 0, 1, "", "inv_softplus"], [361, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[358, 1, 1, "", "forward"]], "torchrl.objectives": [[362, 0, 1, "", "A2CLoss"], [363, 0, 1, "", "CQLLoss"], [364, 0, 1, "", "ClipPPOLoss"], [365, 0, 1, "", "CrossQLoss"], [366, 0, 1, "", "DDPGLoss"], [367, 0, 1, "", "DQNLoss"], [368, 0, 1, "", "DTLoss"], [369, 0, 1, "", "DiscreteCQLLoss"], [370, 0, 1, "", "DiscreteIQLLoss"], [371, 0, 1, "", "DiscreteSACLoss"], [372, 0, 1, "", "DistributionalDQNLoss"], [373, 0, 1, "", "DreamerActorLoss"], [374, 0, 1, "", "DreamerModelLoss"], [375, 0, 1, "", "DreamerValueLoss"], [376, 0, 1, "", "GAILLoss"], [377, 0, 1, "", "HardUpdate"], [378, 0, 1, "", "IQLLoss"], [379, 0, 1, "", "KLPENPPOLoss"], [380, 0, 1, "", "LossModule"], [381, 0, 1, "", "OnlineDTLoss"], [382, 0, 1, "", "PPOLoss"], [383, 0, 1, "", "REDQLoss"], [384, 0, 1, "", "ReinforceLoss"], [385, 0, 1, "", "SACLoss"], [386, 0, 1, "", "SoftUpdate"], [387, 0, 1, "", "TD3BCLoss"], [388, 0, 1, "", "TD3Loss"], [389, 0, 1, "", "ValueEstimators"], [390, 0, 1, "", "default_value_kwargs"], [391, 0, 1, "", "distance_loss"], [392, 0, 1, "", "group_optimizers"], [393, 0, 1, "", "hold_out_net"], [394, 0, 1, "", "hold_out_params"], [399, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[362, 4, 1, "", "default_keys"], [362, 1, 1, "", "forward"], [362, 2, 1, "", "functional"], [362, 1, 1, "", "loss_critic"], [362, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[363, 4, 1, "", "default_keys"], [363, 1, 1, "", "forward"], [363, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[364, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[365, 1, 1, "", "actor_loss"], [365, 1, 1, "", "alpha_loss"], [365, 4, 1, "", "default_keys"], [365, 1, 1, "", "forward"], [365, 1, 1, "", "load_state_dict"], [365, 1, 1, "", "make_value_estimator"], [365, 1, 1, "", "maybe_init_target_entropy"], [365, 1, 1, "", "qvalue_loss"], [365, 1, 1, "", "set_keys"], [365, 1, 1, "", "state_dict"], [365, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[366, 4, 1, "", "default_keys"], [366, 1, 1, "", "forward"], [366, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[367, 4, 1, "", "default_keys"], [367, 1, 1, "", "forward"], [367, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[368, 4, 1, "", "default_keys"], [368, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[369, 4, 1, "", "default_keys"], [369, 1, 1, "", "forward"], [369, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[370, 4, 1, "", "default_keys"], [370, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[371, 4, 1, "", "default_keys"], [371, 1, 1, "", "forward"], [371, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[372, 4, 1, "", "default_keys"], [372, 1, 1, "", "forward"], [372, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[373, 4, 1, "", "default_keys"], [373, 1, 1, "", "forward"], [373, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[374, 4, 1, "", "default_keys"], [374, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[375, 4, 1, "", "default_keys"], [375, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[376, 4, 1, "", "default_keys"], [376, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[378, 4, 1, "", "default_keys"], [378, 1, 1, "", "forward"], [378, 1, 1, "", "loss_value_diff"], [378, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[379, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[380, 1, 1, "", "convert_to_functional"], [380, 1, 1, "", "forward"], [380, 1, 1, "", "from_stateful_net"], [380, 2, 1, "", "functional"], [380, 1, 1, "", "get_stateful_net"], [380, 1, 1, "", "make_value_estimator"], [380, 1, 1, "", "named_parameters"], [380, 1, 1, "", "parameters"], [380, 1, 1, "", "reset_parameters_recursive"], [380, 1, 1, "", "set_keys"], [380, 2, 1, "", "value_estimator"], [380, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[381, 4, 1, "", "default_keys"], [381, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[382, 4, 1, "", "default_keys"], [382, 1, 1, "", "forward"], [382, 2, 1, "", "functional"], [382, 1, 1, "", "loss_critic"], [382, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[383, 4, 1, "", "default_keys"], [383, 1, 1, "", "forward"], [383, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[384, 4, 1, "", "default_keys"], [384, 1, 1, "", "forward"], [384, 2, 1, "", "functional"], [384, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[385, 4, 1, "", "default_keys"], [385, 1, 1, "", "forward"], [385, 1, 1, "", "load_state_dict"], [385, 1, 1, "", "make_value_estimator"], [385, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[387, 1, 1, "", "actor_loss"], [387, 4, 1, "", "default_keys"], [387, 1, 1, "", "forward"], [387, 1, 1, "", "make_value_estimator"], [387, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[388, 4, 1, "", "default_keys"], [388, 1, 1, "", "forward"], [388, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[395, 0, 1, "", "GRPOLoss"], [396, 0, 1, "", "GRPOLossOutput"], [397, 0, 1, "", "MCAdvantage"]], "torchrl.objectives.llm.GRPOLoss": [[395, 1, 1, "", "add_module"], [395, 1, 1, "", "apply"], [395, 1, 1, "", "bfloat16"], [395, 1, 1, "", "buffers"], [395, 1, 1, "", "children"], [395, 1, 1, "", "compile"], [395, 1, 1, "", "convert_to_functional"], [395, 1, 1, "", "cpu"], [395, 1, 1, "", "cuda"], [395, 4, 1, "", "default_keys"], [395, 1, 1, "", "double"], [395, 1, 1, "", "eval"], [395, 1, 1, "", "extra_repr"], [395, 1, 1, "", "float"], [395, 1, 1, "", "forward"], [395, 1, 1, "", "from_stateful_net"], [395, 2, 1, "", "functional"], [395, 1, 1, "", "get_buffer"], [395, 1, 1, "", "get_extra_state"], [395, 1, 1, "", "get_parameter"], [395, 1, 1, "", "get_stateful_net"], [395, 1, 1, "", "get_submodule"], [395, 1, 1, "", "half"], [395, 1, 1, "", "ipu"], [395, 1, 1, "", "is_tdmodule_compatible"], [395, 1, 1, "", "load_state_dict"], [395, 1, 1, "", "loss_critic"], [395, 1, 1, "", "make_value_estimator"], [395, 1, 1, "", "modules"], [395, 1, 1, "", "mtia"], [395, 1, 1, "", "named_buffers"], [395, 1, 1, "", "named_children"], [395, 1, 1, "", "named_modules"], [395, 1, 1, "", "named_parameters"], [395, 1, 1, "", "parameters"], [395, 1, 1, "", "register_backward_hook"], [395, 1, 1, "", "register_buffer"], [395, 1, 1, "", "register_forward_hook"], [395, 1, 1, "", "register_forward_pre_hook"], [395, 1, 1, "", "register_full_backward_hook"], [395, 1, 1, "", "register_full_backward_pre_hook"], [395, 1, 1, "", "register_load_state_dict_post_hook"], [395, 1, 1, "", "register_load_state_dict_pre_hook"], [395, 1, 1, "", "register_module"], [395, 1, 1, "", "register_parameter"], [395, 1, 1, "", "register_state_dict_post_hook"], [395, 1, 1, "", "register_state_dict_pre_hook"], [395, 1, 1, "", "requires_grad_"], [395, 1, 1, "", "reset_out_keys"], [395, 1, 1, "", "reset_parameters_recursive"], [395, 1, 1, "", "select_out_keys"], [395, 1, 1, "", "set_extra_state"], [395, 1, 1, "", "set_keys"], [395, 1, 1, "", "set_submodule"], [395, 1, 1, "", "share_memory"], [395, 1, 1, "", "state_dict"], [395, 1, 1, "", "to"], [395, 1, 1, "", "to_empty"], [395, 1, 1, "", "train"], [395, 1, 1, "", "type"], [395, 2, 1, "", "value_estimator"], [395, 2, 1, "", "vmap_randomness"], [395, 1, 1, "", "xpu"], [395, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[396, 2, 1, "", "device"], [396, 1, 1, "", "dumps"], [396, 1, 1, "", "fields"], [396, 1, 1, "", "from_tensordict"], [396, 1, 1, "", "get"], [396, 1, 1, "", "load"], [396, 1, 1, "", "load_"], [396, 1, 1, "", "load_memmap"], [396, 1, 1, "", "load_state_dict"], [396, 1, 1, "", "memmap"], [396, 1, 1, "", "memmap_"], [396, 1, 1, "", "memmap_like"], [396, 1, 1, "", "memmap_refresh_"], [396, 1, 1, "", "save"], [396, 1, 1, "", "set"], [396, 1, 1, "", "state_dict"], [396, 1, 1, "", "to_tensordict"], [396, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[397, 1, 1, "", "add_module"], [397, 1, 1, "", "apply"], [397, 1, 1, "", "bfloat16"], [397, 1, 1, "", "buffers"], [397, 1, 1, "", "children"], [397, 1, 1, "", "close"], [397, 1, 1, "", "compile"], [397, 2, 1, "", "container"], [397, 1, 1, "", "cpu"], [397, 1, 1, "", "cuda"], [397, 1, 1, "", "double"], [397, 1, 1, "", "eval"], [397, 1, 1, "", "extra_repr"], [397, 1, 1, "", "float"], [397, 1, 1, "", "forward"], [397, 1, 1, "", "get_buffer"], [397, 1, 1, "", "get_extra_state"], [397, 1, 1, "", "get_parameter"], [397, 1, 1, "", "get_submodule"], [397, 1, 1, "", "half"], [397, 1, 1, "", "init"], [397, 1, 1, "", "inv"], [397, 1, 1, "", "ipu"], [397, 1, 1, "", "load_state_dict"], [397, 1, 1, "", "modules"], [397, 1, 1, "", "mtia"], [397, 1, 1, "", "named_buffers"], [397, 1, 1, "", "named_children"], [397, 1, 1, "", "named_modules"], [397, 1, 1, "", "named_parameters"], [397, 1, 1, "", "parameters"], [397, 2, 1, "", "parent"], [397, 1, 1, "", "register_backward_hook"], [397, 1, 1, "", "register_buffer"], [397, 1, 1, "", "register_forward_hook"], [397, 1, 1, "", "register_forward_pre_hook"], [397, 1, 1, "", "register_full_backward_hook"], [397, 1, 1, "", "register_full_backward_pre_hook"], [397, 1, 1, "", "register_load_state_dict_post_hook"], [397, 1, 1, "", "register_load_state_dict_pre_hook"], [397, 1, 1, "", "register_module"], [397, 1, 1, "", "register_parameter"], [397, 1, 1, "", "register_state_dict_post_hook"], [397, 1, 1, "", "register_state_dict_pre_hook"], [397, 1, 1, "", "requires_grad_"], [397, 1, 1, "", "set_extra_state"], [397, 1, 1, "", "set_submodule"], [397, 1, 1, "", "share_memory"], [397, 1, 1, "", "state_dict"], [397, 1, 1, "", "to"], [397, 1, 1, "", "to_empty"], [397, 1, 1, "", "train"], [397, 1, 1, "", "transform_action_spec"], [397, 1, 1, "", "transform_done_spec"], [397, 1, 1, "", "transform_env_batch_size"], [397, 1, 1, "", "transform_env_device"], [397, 1, 1, "", "transform_input_spec"], [397, 1, 1, "", "transform_observation_spec"], [397, 1, 1, "", "transform_output_spec"], [397, 1, 1, "", "transform_reward_spec"], [397, 1, 1, "", "transform_state_spec"], [397, 1, 1, "", "type"], [397, 1, 1, "", "xpu"], [397, 1, 1, "", "zero_grad"]], "torchrl.objectives.multiagent": [[398, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[398, 4, 1, "", "default_keys"], [398, 1, 1, "", "forward"], [398, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[400, 0, 1, "", "GAE"], [401, 0, 1, "", "TD0Estimator"], [402, 0, 1, "", "TD1Estimator"], [403, 0, 1, "", "TDLambdaEstimator"], [404, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[400, 1, 1, "", "forward"], [400, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[401, 1, 1, "", "forward"], [401, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[402, 1, 1, "", "forward"], [402, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[403, 1, 1, "", "forward"], [403, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[404, 4, 1, "", "default_keys"], [404, 1, 1, "", "forward"], [404, 1, 1, "", "set_keys"], [404, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[405, 0, 1, "", "generalized_advantage_estimate"], [406, 0, 1, "", "reward2go"], [407, 0, 1, "", "td0_advantage_estimate"], [408, 0, 1, "", "td0_return_estimate"], [409, 0, 1, "", "td1_advantage_estimate"], [410, 0, 1, "", "td1_return_estimate"], [411, 0, 1, "", "td_lambda_advantage_estimate"], [412, 0, 1, "", "td_lambda_return_estimate"], [413, 0, 1, "", "vec_generalized_advantage_estimate"], [414, 0, 1, "", "vec_td1_advantage_estimate"], [415, 0, 1, "", "vec_td1_return_estimate"], [416, 0, 1, "", "vec_td_lambda_advantage_estimate"], [417, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[418, 3, 1, "", "PixelRenderTransform"], [419, 3, 1, "", "TensorDictRecorder"], [420, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[421, 3, 1, "", "Logger"], [423, 3, 1, "", "generate_exp_name"], [424, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[422, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[425, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[426, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[427, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[429, 0, 1, "", "BatchSubSampler"], [430, 0, 1, "", "ClearCudaCache"], [431, 0, 1, "", "CountFramesLog"], [432, 0, 1, "", "LogScalar"], [433, 0, 1, "", "LogValidationReward"], [434, 0, 1, "", "OptimizerHook"], [435, 0, 1, "", "ReplayBufferTrainer"], [436, 0, 1, "", "RewardNormalizer"], [437, 0, 1, "", "SelectKeys"], [438, 0, 1, "", "Trainer"], [439, 0, 1, "", "TrainerHookBase"], [440, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[429, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[430, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[431, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[432, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[433, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[434, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[435, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[436, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[437, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[438, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[439, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[440, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[441, 3, 1, "", "correct_for_frame_skip"], [442, 3, 1, "", "get_stats_random_rollout"], [443, 3, 1, "", "make_collector_offpolicy"], [444, 3, 1, "", "make_collector_onpolicy"], [445, 3, 1, "", "make_dqn_loss"], [446, 3, 1, "", "make_replay_buffer"], [447, 3, 1, "", "make_target_updater"], [448, 3, 1, "", "make_trainer"], [449, 3, 1, "", "parallel_env_constructor"], [450, 3, 1, "", "sync_async_collector"], [451, 3, 1, "", "sync_sync_collector"], [452, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 457, 458, 459, 460, 462, 463, 464, 466, 468, 475, 476, 477, 481, 482], "instal": [0, 6, 7, 481], "get": [0, 467, 468, 469, 470, 471, 472], "start": [0, 467, 468, 469, 470, 471, 472], "tutori": [0, 464, 475, 476], "basic": [0, 479], "intermedi": [0, 8], "advanc": 0, "refer": [0, 454], "knowledg": [0, 455], "base": [0, 2, 7, 455, 466], "indic": 0, "tabl": 0, "collector": [1, 456, 462, 463, 464, 465, 470, 472, 475, 476, 481], "packag": [1, 2, 3, 457, 458, 459, 460], "batch": [1, 3, 462, 477, 479], "size": [1, 3, 462, 479], "polici": [1, 2, 4, 458, 462, 464, 465, 466, 468, 472, 474, 475, 476, 477], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 457], "environ": [1, 3, 4, 6, 7, 456, 462, 463, 464, 465, 467, 472, 474, 475, 476, 477, 481, 482], "send": 1, "receiv": 1, "model": [1, 2, 4, 457, 462, 463, 465, 466, 469, 478, 481], "weightupdat": 1, "extend": 1, "updat": [1, 462], "class": [1, 3, 456, 477, 481], "replai": [1, 2, 3, 462, 463, 464, 465, 470, 472, 475, 476, 479, 481], "buffer": [1, 2, 3, 462, 463, 464, 465, 470, 472, 475, 476, 479, 481], "interoper": 1, "run": [1, 466, 467, 482], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 456, 462, 463, 464, 470, 472, 475, 476, 481], "helper": [1, 3], "function": [1, 4, 458, 463, 464, 469, 475, 476, 481], "compos": [2, 217], "support": 2, "type": 2, "choos": 2, "storag": [2, 117, 462, 470, 479], "sampl": [2, 479], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 463, 479], "trajectori": [2, 479], "checkpoint": [2, 459], "episod": [2, 4], "format": 2, "ted": [2, 467], "The": [2, 462], "rational": 2, "behind": 2, "structur": [2, 456, 479], "A": [2, 463, 479], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 457, 479, 481], "special": [2, 468, 481], "case": 2, "footnot": 2, "multi": [2, 3, 457, 458, 474, 475, 476], "agent": [2, 3, 4, 457, 458, 475, 476], "present": 2, "rnn": 2, "transform": [2, 3, 262, 456, 462, 464, 467, 475, 476, 477, 479, 481, 482], "step": [2, 3, 462, 464, 467, 470, 475, 476, 479, 482], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 82], "numer": 2, "subclass": [2, 3], "categor": [2, 38], "tree": [2, 84], "forest": 2, "tensordictmap": [2, 77], "mctsforest": [2, 50], "larg": 2, "languag": 2, "reinforc": [2, 458, 464, 475, 476], "learn": [2, 4, 457, 464, 475, 476], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 456, 457, 458, 459, 475], "env": [3, 477, 481, 482], "spec": [3, 477, 482], "lock": 3, "method": [3, 462], "partial": 3, "reset": [3, 477, 482], "vector": [3, 481], "async": [3, 481], "exampl": [3, 11, 463, 479], "custom": [3, 11, 477, 479], "nativ": 3, "auto": 3, "dynam": [3, 4, 479], "forward": [3, 4, 462], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 479], "expos": 3, "outsid": 3, "world": 3, "design": [3, 472], "your": [3, 4, 6, 462, 466, 472, 477], "own": [3, 472], "tip": 3, "us": [3, 4, 6, 9, 458, 465, 478, 479, 481], "clone": [3, 7], "mask": 3, "action": [3, 4, 458, 465, 477], "record": [3, 459, 462, 471], "video": [3, 11, 471], "domain": [3, 457], "specif": [3, 457, 474], "librari": [3, 481], "thing": [4, 462, 477], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 467, 469, 481], "gener": [4, 11, 457], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 457], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 462, 463, 469, 472], "return": [4, 458], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 481], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 474], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 462, 463, 464], "standard": 4, "explor": [4, 457, 462, 463, 468], "valu": [4, 457, 458, 462, 464, 465, 468], "loss": [4, 462, 463, 464, 465, 472, 475, 476], "earli": 4, "train": [4, 8, 458, 462, 464, 465, 466, 469, 472, 475, 476, 477], "roughli": 4, "uniformli": 4, "random": [4, 458, 475, 476], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 463], "increas": 4, "an": [4, 464, 465, 467, 477], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 462], "space": 4, "effect": [4, 477], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 466], "gym": [5, 481, 482], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 462], "render": [7, 11, 472, 475, 476, 482], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 462], "pytorch": [8, 9, 10, 466], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 477], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multiprocessedweightupdat": 14, "multisyncdatacollector": 15, "multiasyncdatacollector": 16, "rayweightupdat": 17, "syncdatacollector": 18, "vanillaweightupdat": 19, "weightupdaterbas": 20, "asyncdatacollector": 21, "distributeddatacollector": 22, "distributedsyncdatacollector": 23, "distributedweightupdat": 24, "rpcdatacollector": 25, "rpcweightupdat": 26, "raycollector": 27, "submitit_delayed_launch": 28, "llmcollector": 29, "vllmupdat": 30, "split_trajectori": 31, "adaptiveklcontrol": 32, "binari": [33, 466], "binarydiscretetensorspec": 34, "binarytodecim": 35, "bound": 36, "boundedtensorspec": 37, "composit": 39, "compositespec": 40, "constantklcontrol": 41, "densifyreward": 42, "discretetensorspec": 43, "flat2t": 44, "h5combin": 45, "h5split": 46, "hashtoint": 47, "lazystackedcompositespec": 48, "lazystackedtensorspec": 49, "multicategor": 51, "multidiscretetensorspec": 52, "multionehot": 53, "multionehotdiscretetensorspec": 54, "multistep": 55, "nested2t": 56, "nontensor": 57, "nontensorspec": 58, "onehot": 59, "onehotdiscretetensorspec": 60, "pairwisedataset": 61, "prioritizedreplaybuff": 62, "promptdata": 63, "prompttensordicttoken": 64, "querymodul": 65, "randomprojectionhash": 66, "rayreplaybuff": 67, "remotetensordictreplaybuff": 68, "replaybuff": 69, "rewarddata": 70, "rolloutfrommodel": 71, "siphash": 72, "stack": [73, 253], "stackedcomposit": 74, "ted2flat": 75, "ted2nest": 76, "tensordictprioritizedreplaybuff": 78, "tensordictreplaybuff": 79, "tensordicttoken": 80, "tensormap": 81, "tokenizeddatasetload": 83, "unbound": 85, "unboundedcontinu": 86, "unboundedcontinuoustensorspec": 87, "unboundeddiscret": 88, "unboundeddiscretetensorspec": 89, "check_no_exclusive_kei": 90, "consolidate_spec": 91, "contains_lazy_spec": 92, "create_infinite_iter": 93, "get_dataload": 94, "contentbas": 95, "histori": 96, "llmdata": 97, "flatstoragecheckpoint": 98, "h5storagecheckpoint": 99, "immutabledatasetwrit": 100, "lazymemmapstorag": 101, "lazystackstorag": 102, "lazytensorstorag": 103, "liststorag": 104, "liststoragecheckpoint": 105, "nestedstoragecheckpoint": 106, "prioritizedsampl": 107, "prioritizedslicesampl": 108, "randomsampl": 109, "replaybufferensembl": 110, "roundrobinwrit": 111, "sampler": 112, "samplerensembl": 113, "samplerwithoutreplac": 114, "slicesampl": 115, "slicesamplerwithoutreplac": 116, "storagecheckpointerbas": 118, "storageensembl": 119, "storageensemblecheckpoint": 120, "tensordictmaxvaluewrit": 121, "tensordictroundrobinwrit": 122, "tensorstorag": 123, "tensorstoragecheckpoint": 124, "writer": 125, "writerensembl": 126, "asyncenvpool": 127, "braxenv": 128, "braxwrapp": 129, "chessenv": 130, "dmcontrolenv": 131, "dmcontrolwrapp": 132, "envbas": [133, 477], "envcreat": 134, "envmetadata": 135, "gymenv": 136, "gymlikeenv": 137, "gymwrapp": 138, "habitatenv": 139, "isaacgymenv": 140, "isaacgymwrapp": 141, "isaaclabwrapp": 142, "jumanjienv": 143, "jumanjiwrapp": 144, "llmhashingenv": [145, 187], "mogymenv": 146, "mogymwrapp": 147, "marlgroupmaptyp": 148, "meltingpotenv": 149, "meltingpotwrapp": 150, "modelbasedenvbas": 151, "multithreadedenv": 152, "multithreadedenvwrapp": 153, "openmlenv": 154, "openspielenv": 155, "openspielwrapp": 156, "parallelenv": 157, "pendulumenv": 158, "pettingzooenv": 159, "pettingzoowrapp": 160, "processorasyncenvpool": 161, "randompolici": 162, "robohiveenv": 163, "smacv2env": 164, "smacv2wrapp": 165, "serialenv": 166, "threadingasyncenvpool": 167, "tictactoeenv": 168, "unitymlagentsenv": 169, "unitymlagentswrapp": 170, "vmasenv": 171, "vmaswrapp": 172, "check_env_spec": 173, "check_marl_group": 174, "exploration_typ": 175, "get_available_librari": 176, "gym_backend": 177, "chatenv": 178, "datasetchatenv": 179, "gsm8kenv": 180, "gsm8kpreparequest": 181, "gsm8krewardpars": 182, "ifevalenv": 183, "ifevalscoredata": 184, "ifevalscor": 185, "llmenv": 186, "mlgymwrapp": 188, "make_gsm8k_env": 189, "make_mlgym": 190, "dataloadingprim": 191, "klrewardtransform": [192, 233], "pythoninterpret": 193, "templatetransform": 194, "token": [195, 260], "as_nested_tensor": 196, "as_padded_tensor": 197, "make_composite_from_td": 198, "dreamerdecod": 199, "dreamerenv": 200, "register_gym_spec_convers": 201, "set_exploration_typ": 202, "set_gym_backend": 203, "step_mdp": 204, "terminated_or_trunc": 205, "actiondiscret": 206, "actionmask": 207, "autoresetenv": 208, "autoresettransform": 209, "batchsizetransform": 210, "binarizereward": 211, "burnintransform": 212, "catfram": [213, 479], "cattensor": 214, "centercrop": 215, "cliptransform": 216, "conditionalpolicyswitch": 218, "conditionalskip": 219, "crop": 220, "dtypecasttransform": 221, "devicecasttransform": 222, "discreteactionproject": 223, "doubletofloat": 224, "endoflifetransform": 225, "excludetransform": 226, "finitetensordictcheck": 227, "flattenobserv": 228, "frameskiptransform": 229, "grayscal": 230, "hash": 231, "inittrack": 232, "linearisereward": 234, "multiact": 235, "noopresetenv": 236, "observationnorm": 237, "observationtransform": 238, "permutetransform": 239, "pinmemorytransform": 240, "r3mtransform": 241, "randomcroptensordict": 242, "removeemptyspec": 243, "renametransform": 244, "resiz": 245, "reward2gotransform": 246, "rewardclip": 247, "rewardsc": 248, "rewardsum": 249, "selecttransform": 250, "signtransform": 251, "squeezetransform": 252, "stepcount": 254, "targetreturn": 255, "tensordictprim": 256, "timemaxpool": 257, "timer": 258, "totensorimag": 259, "trajcount": 261, "transformedenv": 263, "unarytransform": 264, "unsqueezetransform": 265, "vc1transform": 266, "viprewardtransform": 267, "viptransform": 268, "vecgymenvtransform": 269, "vecnorm": [270, 482], "vecnormv2": 271, "gsdenois": 272, "multisteptransform": 273, "implement_for": 274, "additivegaussianmodul": 275, "batchrenorm1d": 276, "cemplann": 277, "consistentdropout": 278, "consistentdropoutmodul": 279, "conv3dnet": 280, "convnet": 281, "dtactor": 282, "ddpgcnnactor": 283, "ddpgcnnqnet": 284, "ddpgmlpactor": 285, "ddpgmlpqnet": 286, "decisiontransform": 287, "delta": 288, "distributionaldqnnet": 289, "distributionalqvaluehook": 290, "dreameractor": 291, "duelingcnndqnet": 292, "egreedymodul": 293, "gru": 294, "grucel": 295, "grumodul": 296, "independentnorm": 297, "lstm": [298, 465], "lstmcell": 299, "lstmmodul": 300, "mlp": [301, 465], "mpcplannerbas": 302, "mppiplann": 303, "maskedcategor": 304, "maskedonehotcategor": 305, "multiagentconvnet": 306, "multiagentmlp": 307, "multiagentnetbas": 308, "noisylazylinear": 309, "noisylinear": 310, "obsdecod": 311, "obsencod": 312, "onehotcategor": 313, "onehotordin": 314, "onlinedtactor": 315, "ordin": 316, "ornsteinuhlenbeckprocessmodul": 317, "qmixer": [318, 458], "qvaluehook": 319, "rssmposterior": 320, "rssmprior": 321, "squeeze2dlay": 322, "squeezelay": 323, "tanhdelta": 324, "tanhnorm": 325, "truncatednorm": 326, "vdnmixer": 327, "vmapmodul": 328, "categoricalsequenti": 329, "llmondevic": 330, "transformerswrapp": 331, "make_vllm_work": 332, "stateless_init_process_group": 333, "vllmworker": 334, "vllmwrapper": 335, "recurrent_mod": 336, "reset_nois": 337, "set_recurrent_mod": 338, "actor": [339, 457, 462, 468], "actorcriticoper": 340, "actorcriticwrapp": 341, "actorvalueoper": 342, "decisiontransformerinferencewrapp": 343, "distributionalqvalueactor": 344, "distributionalqvaluemodul": 345, "lmheadactorvalueoper": 346, "multistepactorwrapp": 347, "probabilisticactor": 348, "qvalueactor": [349, 457], "qvaluemodul": 350, "safemodul": [351, 457], "safeprobabilisticmodul": 352, "safeprobabilistictensordictsequenti": 353, "safesequenti": 354, "tanhmodul": 355, "valueoper": 356, "worldmodelwrapp": 357, "biased_softplu": 358, "get_primers_from_modul": 359, "inv_softplu": 360, "map": [361, 475], "a2closs": 362, "cqlloss": 363, "clipppoloss": 364, "crossqloss": 365, "ddpgloss": 366, "dqnloss": 367, "dtloss": 368, "discretecqlloss": 369, "discreteiqlloss": 370, "discretesacloss": 371, "distributionaldqnloss": 372, "dreameractorloss": 373, "dreamermodelloss": 374, "dreamervalueloss": 375, "gailloss": 376, "hardupd": 377, "iqlloss": 378, "klpenppoloss": 379, "lossmodul": [380, 462, 469], "onlinedtloss": 381, "ppoloss": 382, "redqloss": 383, "reinforceloss": 384, "sacloss": 385, "softupd": 386, "td3bcloss": 387, "td3loss": 388, "valueestim": 389, "default_value_kwarg": 390, "distance_loss": 391, "group_optim": 392, "hold_out_net": 393, "hold_out_param": 394, "grpoloss": 395, "grpolossoutput": 396, "mcadvantag": 397, "qmixerloss": 398, "next_state_valu": 399, "gae": 400, "td0estim": 401, "td1estim": 402, "tdlambdaestim": 403, "valueestimatorbas": 404, "generalized_advantage_estim": 405, "reward2go": 406, "td0_advantage_estim": 407, "td0_return_estim": 408, "td1_advantage_estim": 409, "td1_return_estim": 410, "td_lambda_advantage_estim": 411, "td_lambda_return_estim": 412, "vec_generalized_advantage_estim": 413, "vec_td1_advantage_estim": 414, "vec_td1_return_estim": 415, "vec_td_lambda_advantage_estim": 416, "vec_td_lambda_return_estim": 417, "pixelrendertransform": 418, "tensordictrecord": 419, "videorecord": 420, "logger": [421, 459, 471, 472], "csvlogger": 422, "generate_exp_nam": 423, "get_logg": 424, "mlflowlogg": 425, "tensorboardlogg": 426, "wandblogg": 427, "set_auto_unwrap_transformed_env": 428, "batchsubsampl": 429, "clearcudacach": 430, "countframeslog": 431, "logscalar": 432, "logvalidationreward": 433, "optimizerhook": 434, "replaybuffertrain": 435, "rewardnorm": 436, "selectkei": 437, "trainer": [438, 459, 463], "trainerhookbas": 439, "updateweight": 440, "correct_for_frame_skip": 441, "get_stats_random_rollout": 442, "make_collector_offpolici": 443, "make_collector_onpolici": 444, "make_dqn_loss": 445, "make_replay_buff": 446, "make_target_updat": 447, "make_train": 448, "parallel_env_constructor": 449, "sync_async_collector": 450, "sync_sync_collector": 451, "transformed_env_constructor": 452, "readm": [453, 473], "tuto": [453, 473], "api": 454, "contribut": [455, 481], "content": 455, "llm": 456, "interfac": 456, "avail": 456, "modul": [456, 457, 462, 465, 466, 468, 472, 481], "wrapper": [456, 457, 468], "object": [456, 458, 462, 469, 481], "grpo": 456, "tensordictmodul": [457, 466, 468, 481], "probabilist": [457, 468], "q": [457, 463, 465, 468], "oper": 457, "join": 457, "hook": [457, 459, 463], "regular": 457, "planner": 457, "torch": 458, "vmap": [458, 481], "dqn": [458, 463, 465], "ddpg": [458, 462, 475], "sac": 458, "redq": 458, "crossq": 458, "iql": 458, "cql": 458, "gail": 458, "dt": 458, "td3": 458, "bc": 458, "ppo": [458, 464, 476], "head": 458, "a2c": 458, "dreamer": 458, "builder": 459, "_util": 460, "comput": [461, 463, 477, 480], "time": [461, 462, 480], "code": [462, 477], "overview": [462, 465], "setup": [462, 465], "__init__": 462, "estim": 462, "put": 462, "togeth": [462, 477], "call": 462, "parallel": [462, 474, 482], "execut": [462, 474, 477], "stat": 462, "build": [462, 463, 472, 479], "evalu": 462, "construct": 462, "target": [462, 463, 469], "network": [462, 463, 464, 465, 468, 475, 476], "experi": [462, 477], "result": [462, 464, 475, 476], "conclus": [462, 463, 464, 465, 466, 475, 476, 477, 479], "next": [462, 464, 467, 470, 475, 476, 479], "deep": 463, "collect": [463, 464, 470], "paramet": [463, 464, 469], "hyperparamet": [463, 464, 475, 476], "regist": 463, "possibl": 463, "improv": 463, "defin": [464, 475, 476], "loop": [464, 465, 466, 472, 475, 476, 477], "recurr": [465, 466], "convolut": 465, "select": 465, "further": [465, 469], "read": 465, "export": 466, "introduct": [466, 481], "fast": 466, "recap": 466, "simpl": [466, 477], "stochast": 466, "aotinductor": 466, "free": 466, "c": 466, "onnx": 466, "rollout": [466, 467, 474, 475, 476, 477, 482], "creat": 467, "s": [468, 469], "output": 469, "consider": 469, "log": 471, "first": 472, "divers": 474, "competit": 475, "group": 475, "critic": [475, 476], "pendulum": 477, "write": 477, "_step": 477, "simul": 477, "_reset": 477, "metadata": 477, "_spec": 477, "shape": 477, "seed": [477, 482], "wrap": 477, "test": 477, "our": 477, "pretrain": 478, "vanilla": 479, "integr": 479, "tensorclass": 479, "other": 479, "pytre": 479, "iter": 479, "over": 479, "fix": 479, "priorit": 479, "save": 479, "raw": 479, "imag": 479, "more": 479, "complex": 479, "config": 481, "sequenc": 481, "program": 481, "ensembl": 481, "meta": 481, "sync": 481, "multiprocess": 481, "frame_skip": 482, "deepmind": 482, "control": 482, "devic": 482, "close": 482, "access": 482, "attribut": 482, "kwarg": 482}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})