Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater.rst", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "LocalWeightUpdaterBase", "MultiProcessedRemoteWeightUpdate", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayRemoteWeightUpdater", "RemoteWeightUpdaterBase", "SyncDataCollector", "VanillaLocalWeightUpdater", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 93, 97, 98, 99, 100, 101, 105, 107, 108, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 147, 148, 150, 153, 154, 155, 156, 158, 161, 162, 163, 167, 168, 180, 181, 183, 184, 186, 187, 189, 194, 195, 197, 198, 201, 205, 210, 211, 215, 216, 217, 218, 220, 229, 230, 231, 232, 233, 235, 236, 237, 240, 243, 244, 245, 247, 250, 254, 255, 257, 258, 259, 260, 262, 267, 268, 270, 272, 274, 275, 276, 280, 281, 283, 291, 296, 297, 299, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 324, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 364, 365, 366, 367, 368, 382, 384, 387, 391, 397, 398, 402, 403, 406, 413, 414, 415, 416, 419, 420, 421, 425, 426, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 444, 445], "open": [0, 5, 7, 45, 46, 47, 61, 63, 70, 84, 98, 248, 426, 438, 439, 444], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "reinforc": [0, 1, 3, 9, 145, 146, 187, 245, 252, 257, 258, 259, 260, 264, 291, 312, 329, 330, 332, 335, 336, 337, 339, 344, 345, 351, 352, 353, 354, 418, 424, 426, 430, 431, 436, 440, 443, 444], "learn": [0, 1, 3, 7, 8, 9, 23, 55, 129, 145, 146, 150, 153, 161, 187, 245, 252, 257, 258, 259, 260, 264, 277, 284, 290, 291, 312, 329, 330, 332, 335, 336, 337, 339, 343, 344, 345, 350, 351, 352, 353, 354, 418, 421, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 443, 444, 445], "rl": [0, 1, 2, 3, 5, 8, 10, 16, 17, 20, 22, 147, 187, 229, 284, 306, 315, 323, 329, 331, 346, 347, 349, 351, 393, 417, 419, 420, 421, 422, 425, 426, 427, 433, 436, 438, 439, 441, 442, 445], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 16, 17, 23, 24, 25, 64, 80, 126, 127, 128, 137, 148, 170, 418, 419, 420, 421, 423, 425, 426, 427, 429, 430, 431, 433, 438, 439, 440, 445], "pytorch": [0, 1, 2, 3, 28, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 167, 187, 232, 233, 252, 268, 272, 283, 284, 402, 417, 419, 420, 422, 425, 427, 428, 432, 436, 438, 439, 440, 444, 445], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 32, 39, 44, 55, 65, 66, 72, 77, 80, 126, 129, 133, 137, 140, 141, 144, 145, 146, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 177, 187, 208, 236, 244, 245, 247, 252, 272, 290, 319, 391, 392, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 104, 105, 107, 111, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 175, 177, 179, 180, 181, 183, 184, 186, 187, 190, 191, 192, 194, 195, 197, 198, 199, 202, 205, 209, 210, 211, 215, 216, 220, 223, 227, 228, 229, 230, 234, 235, 236, 237, 238, 240, 242, 244, 245, 247, 248, 251, 253, 254, 255, 257, 267, 268, 270, 271, 272, 274, 276, 277, 280, 281, 282, 284, 291, 300, 302, 306, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 382, 384, 391, 392, 397, 414, 415, 416, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "directli": [0, 4, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 107, 124, 125, 126, 129, 132, 133, 140, 141, 147, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 211, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 240, 241, 243, 244, 245, 247, 319, 347, 354, 416, 426, 427, 429, 430, 438, 439, 440, 442], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 211, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 287, 289, 290, 291, 292, 293, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 345, 346, 347, 349, 350, 351, 352, 354, 355, 357, 362, 363, 364, 365, 366, 367, 370, 382, 383, 384, 393, 399, 402, 405, 406, 410, 412, 413, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445], "pypi": [0, 2, 444], "see": [0, 1, 2, 3, 6, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 94, 99, 105, 107, 112, 113, 126, 129, 133, 136, 139, 140, 141, 145, 146, 148, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 187, 191, 192, 195, 209, 215, 230, 233, 235, 236, 237, 240, 242, 244, 245, 246, 247, 252, 253, 254, 255, 268, 270, 271, 272, 274, 275, 281, 282, 283, 290, 292, 300, 301, 305, 307, 309, 315, 318, 319, 332, 343, 347, 354, 384, 391, 399, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 442, 444, 445], "more": [0, 1, 2, 3, 4, 6, 8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 105, 107, 118, 126, 129, 132, 133, 134, 136, 137, 139, 140, 141, 145, 146, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 187, 233, 236, 240, 246, 247, 248, 249, 250, 253, 264, 272, 275, 283, 306, 311, 312, 318, 319, 323, 329, 339, 347, 349, 364, 369, 377, 391, 398, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 444, 445], "about": [0, 3, 5, 7, 9, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 80, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 420, 421, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 444, 445], "instruct": [0, 6, 7, 10, 27, 197, 199, 421, 425, 426, 427, 428, 438, 439, 442], "dedic": [0, 1, 2, 3, 23, 24, 25, 26, 50, 69, 78, 79, 107, 153, 161, 307, 308, 309, 420, 425, 430, 432, 433, 435, 437, 439], "section": [0, 2, 3, 4, 29, 129, 268, 272, 426, 429, 430, 435, 438, 439], "below": [0, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 85, 94, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 192, 195, 209, 215, 230, 235, 236, 237, 240, 242, 247, 254, 255, 268, 271, 272, 275, 281, 300, 315, 318, 399, 425, 426, 427, 428, 429, 430, 438, 440], "pip": [0, 10, 429, 430, 431, 432, 433, 434, 435, 439, 444, 445], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 50, 51, 53, 55, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 83, 84, 91, 94, 98, 99, 101, 105, 106, 107, 110, 112, 113, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 178, 179, 180, 184, 186, 187, 188, 189, 190, 193, 194, 198, 202, 205, 210, 211, 213, 215, 216, 219, 220, 223, 224, 229, 230, 231, 234, 235, 237, 239, 240, 242, 243, 244, 245, 247, 248, 254, 255, 261, 262, 264, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 302, 306, 310, 312, 314, 315, 316, 317, 319, 322, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 388, 393, 399, 406, 412, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "python": [0, 3, 5, 6, 7, 10, 16, 17, 26, 62, 67, 68, 69, 72, 77, 78, 79, 84, 107, 149, 163, 164, 177, 268, 269, 270, 272, 273, 274, 278, 279, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 100, 105, 112, 113, 118, 120, 126, 129, 132, 133, 134, 139, 140, 141, 153, 154, 161, 162, 183, 184, 187, 188, 192, 202, 209, 211, 215, 216, 232, 233, 237, 240, 245, 248, 255, 262, 268, 270, 272, 274, 275, 278, 279, 281, 283, 286, 306, 310, 311, 312, 315, 316, 318, 319, 331, 341, 346, 347, 349, 383, 384, 401, 420, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "low": [0, 3, 33, 36, 66, 77, 82, 85, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 180, 190, 197, 205, 208, 230, 238, 298, 299, 300, 310, 312, 315, 319, 322, 425, 426, 427, 429, 438, 439, 440, 444], "high": [0, 3, 9, 33, 36, 45, 46, 47, 61, 63, 70, 78, 84, 85, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 180, 190, 197, 205, 208, 210, 230, 238, 298, 299, 300, 310, 312, 315, 319, 322, 364, 369, 377, 425, 426, 427, 438, 439, 440, 442, 444], "level": [0, 2, 3, 4, 27, 36, 37, 48, 62, 67, 68, 69, 74, 78, 79, 107, 132, 134, 187, 228, 236, 270, 274, 346, 425, 426, 429, 433, 444], "abstract": [0, 1, 3, 8, 14, 19, 81, 82, 122, 129, 212, 276, 368, 394, 403, 422, 427, 429, 440, 444], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 103, 107, 110, 111, 112, 113, 114, 116, 118, 120, 126, 129, 130, 132, 133, 134, 139, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 172, 178, 179, 180, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 205, 207, 208, 209, 210, 213, 215, 220, 223, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 249, 251, 252, 260, 262, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 282, 284, 287, 292, 295, 305, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 359, 362, 363, 364, 365, 366, 367, 368, 382, 391, 392, 399, 402, 412, 416, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "intend": [0, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 186, 197, 302, 347, 420, 444], "effici": [0, 1, 2, 4, 8, 18, 126, 129, 133, 140, 141, 153, 154, 161, 162, 268, 284, 332, 420, 425, 426, 427, 428, 429, 432, 433, 435, 437, 438, 439, 441, 442, 444], "modular": [0, 321, 429, 442, 444], "document": [0, 2, 5, 7, 11, 23, 24, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 164, 237, 247, 417, 426, 428, 429, 430, 433, 436, 444], "properli": [0, 1, 3, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 192, 270, 274, 427, 434, 438, 439, 440, 444], "test": [0, 3, 5, 124, 125, 126, 129, 133, 138, 139, 140, 141, 145, 146, 153, 154, 161, 162, 167, 195, 235, 240, 270, 274, 397, 412, 427, 428, 429, 441, 444], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 104, 105, 107, 110, 112, 113, 114, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 165, 166, 167, 175, 178, 179, 180, 183, 184, 186, 187, 191, 192, 194, 195, 198, 199, 200, 205, 208, 209, 211, 213, 215, 220, 222, 223, 224, 227, 228, 229, 230, 232, 235, 236, 237, 240, 242, 243, 244, 245, 247, 249, 250, 251, 252, 257, 258, 259, 260, 261, 264, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 284, 288, 290, 291, 293, 294, 295, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 370, 382, 384, 386, 389, 390, 391, 392, 393, 398, 412, 414, 415, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445], "code": [0, 3, 5, 7, 8, 16, 17, 66, 72, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 215, 237, 240, 250, 268, 269, 270, 272, 273, 274, 315, 319, 321, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445], "aim": [0, 2, 3, 7, 50, 73, 74, 215, 240, 242, 275, 405, 419, 420, 421, 425, 426, 444], "support": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 39, 45, 46, 47, 61, 63, 65, 70, 77, 84, 94, 98, 100, 114, 116, 120, 121, 123, 124, 125, 126, 132, 134, 138, 148, 150, 153, 155, 158, 170, 184, 187, 199, 205, 211, 230, 231, 234, 238, 264, 288, 290, 299, 302, 311, 312, 315, 318, 321, 339, 347, 364, 365, 366, 367, 389, 418, 420, 422, 427, 428, 430, 431, 439, 440, 442, 444], "research": [0, 7, 9, 145, 146, 250, 444], "most": [0, 1, 2, 3, 7, 8, 16, 17, 55, 57, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 197, 243, 425, 427, 429, 430, 431, 432, 433, 434, 435, 440, 444, 445], "written": [0, 1, 2, 3, 41, 45, 46, 47, 61, 62, 63, 65, 67, 68, 69, 70, 75, 78, 79, 83, 84, 96, 98, 105, 107, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 178, 179, 180, 187, 199, 202, 207, 208, 223, 228, 231, 232, 237, 243, 247, 248, 253, 291, 306, 315, 318, 319, 323, 329, 331, 346, 349, 351, 363, 382, 383, 384, 420, 421, 422, 425, 428, 429, 431, 437, 440, 444], "highli": [0, 2, 430, 444, 445], "wai": [0, 1, 2, 3, 4, 107, 118, 137, 187, 215, 218, 235, 236, 242, 243, 270, 272, 274, 349, 364, 365, 366, 367, 420, 425, 426, 427, 429, 430, 432, 433, 437, 438, 439, 440, 441, 442, 444, 445], "easili": [0, 1, 2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 421, 425, 426, 427, 430, 431, 432, 435, 438, 439, 444, 445], "swap": [0, 1, 3, 132, 243, 427, 429, 441, 444], "compon": [0, 1, 2, 3, 62, 66, 67, 68, 69, 78, 79, 98, 99, 100, 101, 107, 114, 116, 120, 264, 293, 311, 312, 317, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 398, 402, 425, 426, 427, 428, 429, 431, 432, 435, 437, 438, 439, 440, 441, 444], "transform": [0, 1, 4, 8, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 39, 50, 55, 62, 64, 67, 68, 69, 71, 78, 79, 80, 95, 96, 103, 107, 116, 121, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 173, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 256, 257, 261, 264, 265, 270, 274, 289, 292, 293, 299, 301, 310, 313, 314, 322, 325, 326, 328, 335, 348, 382, 384, 399, 416, 418, 424, 426, 428, 429, 431, 433, 434, 435, 436, 441, 443], "them": [0, 2, 3, 7, 9, 11, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 62, 64, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 107, 118, 123, 126, 129, 130, 133, 137, 140, 141, 144, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 194, 198, 205, 208, 230, 234, 237, 238, 244, 245, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 301, 302, 310, 312, 314, 317, 322, 325, 346, 384, 425, 426, 428, 429, 430, 431, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "write": [0, 2, 3, 8, 28, 45, 46, 47, 50, 55, 61, 62, 63, 64, 67, 68, 69, 70, 78, 79, 83, 84, 105, 107, 112, 116, 123, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 181, 183, 184, 186, 187, 188, 190, 191, 192, 196, 199, 200, 201, 203, 206, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 247, 306, 318, 319, 321, 323, 332, 333, 334, 336, 337, 338, 345, 350, 352, 354, 355, 363, 368, 384, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445], "new": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 104, 105, 107, 111, 126, 129, 133, 140, 141, 148, 153, 154, 159, 160, 161, 162, 178, 179, 184, 223, 227, 236, 237, 244, 245, 247, 262, 268, 270, 274, 291, 318, 319, 324, 329, 330, 331, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 391, 421, 425, 427, 430, 432, 438, 439, 440, 444, 445], "ones": [0, 2, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 112, 113, 126, 129, 133, 140, 141, 153, 154, 155, 156, 157, 161, 162, 188, 191, 194, 196, 198, 211, 215, 220, 227, 230, 236, 237, 240, 242, 247, 252, 278, 279, 290, 302, 318, 329, 330, 332, 333, 345, 349, 350, 352, 354, 355, 370, 425, 427, 429, 438, 439, 440, 442, 444, 445], "littl": [0, 1, 3, 80, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 252, 329, 331, 346, 349, 351, 427, 428, 429, 433, 442, 444, 445], "effort": [0, 3, 440, 442, 444], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 120, 121, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 167, 175, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 211, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 297, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 362, 364, 365, 366, 367, 368, 382, 383, 391, 392, 393, 395, 397, 399, 402, 404, 405, 406, 412, 416, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "repo": [0, 6, 187, 231, 240, 419, 439, 444], "attempt": [0, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 178, 195, 247, 252, 319, 334, 337, 345, 362, 421, 432, 444], "align": [0, 268, 272, 444], "exist": [0, 1, 2, 3, 4, 23, 26, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 196, 235, 237, 247, 248, 262, 319, 332, 352, 406, 416, 438, 439, 444, 445], "ecosystem": [0, 429, 433, 444], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 107, 110, 112, 118, 120, 126, 129, 130, 133, 137, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 184, 187, 195, 209, 228, 229, 230, 231, 232, 234, 235, 236, 237, 247, 249, 268, 270, 272, 274, 280, 282, 299, 312, 314, 319, 329, 332, 346, 347, 349, 351, 384, 421, 425, 426, 427, 428, 429, 430, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "dataset": [0, 43, 45, 46, 47, 50, 61, 62, 63, 64, 69, 70, 71, 76, 78, 79, 83, 84, 94, 97, 105, 107, 110, 112, 113, 140, 150, 195, 244, 384, 418, 425, 426, 430, 441, 442, 444, 445], "pillar": [0, 444], "environ": [0, 2, 5, 8, 10, 15, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 181, 183, 184, 186, 187, 188, 192, 194, 195, 196, 197, 198, 203, 209, 210, 211, 215, 216, 217, 220, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 243, 244, 245, 248, 251, 253, 270, 274, 276, 277, 314, 336, 340, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 392, 393, 395, 397, 405, 406, 407, 408, 412, 413, 414, 415, 416, 418, 419, 420, 421, 424, 429, 431, 432, 433, 434, 436, 441, 442, 443], "model": [0, 1, 3, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 194, 215, 230, 240, 242, 246, 247, 254, 255, 256, 261, 263, 270, 274, 275, 276, 277, 281, 282, 289, 292, 301, 307, 308, 309, 313, 318, 324, 326, 329, 330, 331, 332, 334, 335, 336, 337, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 362, 402, 407, 408, 409, 418, 419, 421, 422, 424, 427, 430, 433, 436, 438, 439, 440, 442, 443, 445], "data": [0, 3, 8, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 167, 172, 179, 181, 184, 186, 187, 194, 195, 196, 198, 200, 202, 205, 207, 211, 217, 220, 227, 228, 234, 236, 237, 238, 243, 245, 247, 251, 252, 264, 267, 270, 274, 277, 280, 281, 291, 293, 302, 305, 306, 311, 314, 315, 316, 318, 319, 321, 322, 323, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 382, 384, 391, 393, 399, 402, 404, 407, 412, 414, 415, 416, 418, 420, 421, 422, 424, 428, 429, 430, 431, 432, 436, 440, 441, 442, 443, 445], "util": [0, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 32, 39, 44, 55, 65, 66, 69, 71, 72, 77, 112, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 146, 153, 154, 155, 156, 161, 162, 168, 187, 215, 220, 230, 242, 247, 250, 253, 254, 255, 261, 268, 270, 272, 274, 325, 326, 327, 328, 347, 412, 418, 423, 425, 427, 429, 431, 432, 433, 439, 440, 442, 444, 445], "e": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 100, 104, 105, 118, 120, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 167, 184, 186, 188, 191, 192, 193, 195, 202, 205, 208, 209, 211, 215, 223, 230, 232, 235, 236, 237, 240, 242, 247, 248, 268, 270, 271, 272, 274, 277, 281, 293, 299, 300, 305, 310, 312, 314, 315, 317, 318, 319, 329, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 363, 364, 365, 366, 367, 382, 393, 405, 415, 420, 421, 426, 427, 429, 431, 432, 434, 438, 439, 441, 442, 444, 445], "g": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 118, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 167, 184, 186, 188, 191, 195, 202, 205, 208, 211, 215, 223, 230, 232, 235, 236, 237, 240, 242, 247, 248, 268, 270, 271, 272, 273, 274, 277, 281, 299, 300, 310, 315, 318, 319, 332, 352, 363, 373, 374, 375, 376, 378, 379, 380, 381, 382, 415, 420, 421, 426, 427, 429, 431, 434, 438, 439, 440, 441, 442, 444, 445], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 55, 62, 67, 68, 69, 71, 75, 78, 79, 107, 112, 113, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 184, 187, 220, 228, 247, 252, 270, 274, 291, 399, 402, 404, 407, 408, 412, 414, 415, 418, 421, 422, 429, 442, 445], "contain": [0, 2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 97, 104, 105, 107, 108, 110, 112, 113, 114, 119, 122, 123, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 178, 179, 180, 187, 191, 194, 198, 205, 215, 227, 230, 235, 236, 237, 240, 242, 243, 244, 245, 247, 251, 254, 255, 268, 269, 272, 273, 275, 277, 280, 281, 306, 311, 312, 315, 317, 318, 319, 323, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 370, 388, 393, 405, 412, 413, 414, 415, 416, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445], "etc": [0, 2, 3, 7, 8, 32, 39, 44, 50, 55, 65, 66, 72, 77, 82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 227, 237, 247, 248, 275, 281, 299, 421, 426, 427, 433, 442, 444, 445], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 16, 17, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 107, 111, 114, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 167, 172, 175, 179, 180, 183, 187, 194, 195, 198, 199, 207, 210, 211, 227, 228, 230, 234, 235, 236, 237, 244, 247, 249, 252, 254, 255, 275, 280, 281, 282, 291, 302, 314, 320, 321, 329, 331, 346, 349, 351, 354, 358, 359, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 393, 402, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "few": [0, 2, 8, 113, 133, 384, 393, 427, 428, 431, 438, 439, 442, 444, 445], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 33, 61, 63, 85, 126, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 165, 166, 194, 198, 319, 323, 349, 386, 420, 425, 427, 428, 438, 439, 440, 444, 445], "possibl": [0, 1, 2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 99, 105, 112, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 191, 215, 230, 235, 236, 237, 240, 242, 247, 254, 255, 268, 269, 272, 273, 318, 382, 397, 402, 420, 425, 427, 428, 429, 431, 433, 434, 438, 439, 440, 442, 444, 445], "standard": [0, 2, 3, 57, 126, 211, 222, 244, 245, 249, 250, 251, 265, 277, 283, 284, 289, 310, 331, 346, 349, 354, 355, 364, 365, 366, 367, 425, 426, 430, 431, 439, 442, 444], "numpi": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 205, 233, 238, 248, 402, 429, 440, 442, 444, 445], "common": [0, 1, 2, 3, 4, 82, 133, 138, 181, 199, 307, 308, 309, 313, 329, 330, 331, 332, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 412, 419, 420, 421, 422, 425, 427, 431, 434, 437, 438, 439, 440, 441, 444, 445], "openai": [0, 7, 29, 132, 134, 141, 158, 427, 440, 444, 445], "gym": [0, 1, 3, 4, 8, 16, 17, 20, 22, 26, 27, 67, 126, 129, 130, 132, 133, 134, 135, 137, 140, 141, 145, 146, 148, 149, 153, 154, 158, 161, 162, 165, 166, 171, 175, 177, 183, 187, 190, 199, 206, 207, 211, 213, 218, 220, 223, 230, 236, 243, 244, 247, 248, 412, 419, 425, 426, 427, 428, 430, 434, 435, 440, 441, 442], "onli": [0, 1, 2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 104, 105, 107, 112, 113, 120, 126, 127, 128, 129, 132, 133, 134, 135, 137, 139, 140, 141, 148, 149, 153, 154, 155, 156, 158, 161, 162, 180, 183, 187, 188, 190, 191, 192, 194, 195, 197, 198, 202, 205, 209, 211, 215, 216, 220, 227, 228, 229, 230, 231, 235, 236, 237, 240, 242, 244, 245, 247, 248, 252, 272, 274, 280, 281, 306, 310, 311, 315, 316, 318, 319, 320, 321, 329, 331, 332, 333, 337, 338, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 364, 365, 366, 367, 368, 384, 391, 406, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 444, 445], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 215, 216, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 298, 299, 300, 302, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 386, 389, 391, 393, 395, 396, 397, 398, 399, 400, 402, 406, 412, 414, 415, 416, 420, 428, 430, 433, 438, 439, 440, 442, 444], "On": [0, 3, 7, 23, 24, 25, 26, 36, 269, 273, 420, 426, 438, 439], "end": [0, 2, 3, 16, 17, 22, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 96, 105, 107, 111, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 199, 205, 213, 228, 229, 235, 237, 247, 254, 255, 268, 269, 272, 273, 276, 314, 332, 352, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "come": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 50, 55, 118, 126, 129, 133, 139, 140, 141, 144, 153, 154, 161, 162, 194, 198, 305, 306, 307, 308, 309, 315, 323, 329, 331, 346, 349, 351, 384, 425, 426, 427, 428, 432, 433, 434, 435, 438, 439, 442, 444, 445], "set": [0, 1, 2, 3, 7, 9, 12, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 84, 98, 99, 100, 107, 111, 114, 120, 126, 129, 131, 133, 134, 139, 140, 141, 145, 146, 147, 153, 154, 155, 156, 161, 162, 165, 166, 167, 176, 177, 179, 181, 183, 184, 187, 188, 191, 194, 195, 198, 205, 206, 207, 208, 215, 220, 228, 229, 230, 231, 235, 236, 237, 240, 242, 244, 245, 247, 248, 268, 270, 272, 274, 276, 280, 281, 288, 290, 291, 299, 305, 310, 318, 319, 331, 332, 338, 343, 346, 347, 349, 352, 368, 384, 392, 393, 397, 399, 408, 416, 419, 420, 421, 423, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 440, 441, 442, 444, 445], "re": [0, 2, 3, 8, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 107, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 202, 247, 274, 278, 279, 282, 315, 319, 391, 422, 425, 427, 428, 430, 432, 437, 438, 440, 444, 445], "usabl": [0, 422, 428, 444], "function": [0, 2, 3, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 100, 101, 107, 114, 116, 120, 126, 129, 130, 133, 134, 140, 141, 153, 154, 161, 162, 167, 175, 177, 178, 179, 183, 184, 194, 195, 198, 205, 207, 234, 235, 237, 238, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 294, 295, 297, 300, 302, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 402, 412, 418, 420, 425, 428, 429, 430, 431, 434, 437, 440, 442, 445], "cost": [0, 2, 35, 99, 329, 331, 346, 349, 351, 421, 425, 426, 429, 438, 439, 440, 442], "return": [0, 2, 3, 7, 8, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 99, 105, 107, 108, 110, 112, 113, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 161, 162, 165, 166, 169, 170, 171, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 287, 289, 292, 294, 295, 298, 299, 300, 301, 303, 306, 307, 308, 309, 310, 314, 315, 317, 318, 319, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 388, 392, 402, 405, 407, 412, 413, 414, 415, 416, 418, 420, 422, 425, 426, 427, 429, 431, 432, 434, 437, 438, 439, 440, 441, 442, 444, 445], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 80, 83, 84, 100, 104, 105, 108, 112, 120, 126, 129, 130, 133, 137, 140, 141, 144, 148, 153, 154, 155, 156, 161, 162, 186, 187, 194, 198, 205, 230, 233, 235, 244, 245, 247, 270, 274, 280, 281, 291, 312, 317, 418, 422, 425, 426, 428, 429, 430, 438, 439, 440, 441, 442, 444, 445], "good": [0, 1, 4, 9, 153, 425, 427, 428, 429, 431, 439, 444, 445], "runtim": [0, 2, 3, 28, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 440], "perform": [0, 1, 2, 3, 4, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 153, 154, 158, 161, 162, 165, 166, 168, 194, 198, 205, 210, 232, 235, 237, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 282, 285, 286, 289, 290, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 331, 332, 341, 349, 352, 397, 402, 421, 425, 426, 427, 428, 429, 430, 433, 435, 437, 438, 439, 440, 445], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 19, 23, 24, 25, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 96, 105, 107, 112, 113, 116, 123, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 144, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 187, 192, 228, 230, 244, 247, 253, 270, 274, 291, 307, 308, 309, 319, 332, 338, 343, 347, 354, 384, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445], "read": [0, 2, 3, 7, 28, 36, 37, 41, 48, 62, 64, 67, 68, 69, 71, 74, 75, 78, 79, 98, 99, 100, 101, 104, 107, 114, 116, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 206, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 247, 253, 287, 306, 307, 308, 309, 311, 314, 315, 318, 319, 321, 323, 324, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 364, 365, 366, 367, 368, 384, 397, 402, 420, 425, 426, 427, 429, 430, 431, 437, 438, 439, 440, 441, 444, 445], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 18, 26, 28, 422, 425, 430, 433, 437, 441, 445], "beyond": [0, 50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 429], "api": [0, 1, 2, 3, 5, 28, 36, 37, 39, 48, 50, 65, 74, 77, 82, 126, 129, 155, 156, 158, 215, 242, 244, 245, 252, 420, 421, 422, 429, 430, 431, 432, 433, 434, 438, 439, 440, 442, 444, 445], "check": [0, 2, 3, 4, 5, 6, 7, 9, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 90, 92, 95, 96, 103, 112, 126, 129, 130, 132, 133, 134, 140, 141, 147, 153, 154, 161, 162, 167, 168, 187, 188, 192, 201, 207, 216, 230, 233, 237, 247, 248, 262, 270, 274, 306, 311, 312, 315, 316, 317, 318, 319, 332, 343, 354, 384, 417, 420, 421, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "paper": [0, 124, 125, 127, 128, 135, 138, 139, 145, 146, 148, 149, 158, 165, 166, 215, 240, 242, 255, 268, 292, 301, 336, 344, 354, 425, 427, 438, 439], "releas": [0, 4, 7, 10, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 332, 352], "sync": [0, 1, 16, 17, 22, 23, 24, 25, 26, 404, 412, 422, 425], "so": [0, 2, 3, 4, 6, 7, 10, 11, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 107, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 205, 230, 235, 244, 247, 252, 320, 321, 384, 425, 427, 428, 432, 435, 438, 439, 440, 445], "make": [0, 2, 3, 4, 7, 11, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 82, 84, 107, 110, 114, 116, 123, 126, 129, 133, 134, 137, 139, 140, 141, 143, 149, 153, 154, 161, 162, 167, 178, 180, 192, 200, 208, 211, 215, 216, 220, 224, 228, 232, 236, 240, 247, 250, 253, 268, 269, 270, 272, 273, 274, 280, 281, 283, 311, 319, 329, 331, 346, 349, 351, 364, 365, 366, 367, 382, 399, 408, 416, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "sure": [0, 3, 4, 7, 39, 114, 126, 133, 137, 192, 220, 311, 416, 420, 425, 427, 428, 429, 432, 438, 439, 440, 442, 444, 445], "alwai": [0, 2, 3, 16, 17, 25, 32, 33, 39, 44, 55, 65, 66, 72, 77, 82, 85, 94, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 210, 232, 244, 245, 247, 339, 347, 420, 421, 426, 427, 428, 429, 438, 439, 440, 442], "enjoi": [0, 2, 3, 433], "latest": [0, 1, 2, 3, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 148, 151, 152, 155, 156, 399, 427, 438, 439, 440, 444], "featur": [0, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 59, 65, 77, 82, 83, 105, 112, 113, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 159, 160, 161, 162, 167, 184, 187, 202, 205, 207, 213, 230, 231, 239, 244, 250, 254, 255, 265, 266, 268, 269, 270, 272, 273, 274, 275, 280, 283, 284, 319, 326, 329, 331, 346, 349, 351, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 416, 420, 421, 425, 426, 427, 428, 429, 431, 432, 433, 435, 440, 442, 444, 445], "recent": [0, 7, 243, 248, 445], "version": [0, 1, 2, 3, 6, 31, 32, 34, 37, 39, 40, 44, 48, 49, 52, 54, 55, 58, 60, 61, 63, 65, 66, 71, 72, 77, 86, 87, 88, 89, 112, 126, 129, 132, 133, 134, 135, 140, 141, 148, 149, 153, 154, 155, 158, 161, 162, 165, 166, 178, 187, 234, 243, 244, 245, 247, 248, 250, 270, 274, 282, 288, 309, 329, 331, 346, 347, 349, 351, 352, 364, 367, 419, 420, 421, 425, 427, 428, 429, 430, 432, 435, 438, 439, 440, 441, 445], "although": [0, 1, 3, 8, 26, 32, 39, 44, 65, 66, 72, 77, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 421, 422, 425, 426, 433, 442], "core": [0, 2, 3, 8, 62, 67, 68, 69, 78, 79, 107, 422, 428, 431, 444], "guarante": [0, 2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 244, 245, 247, 319, 433], "backward": [0, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247, 268, 269, 272, 273, 290, 319, 329, 330, 332, 333, 337, 338, 345, 349, 350, 351, 352, 354, 355, 425, 427, 428, 429, 432, 433, 435, 438, 439, 440], "compat": [0, 2, 3, 7, 16, 17, 20, 28, 32, 39, 44, 55, 65, 66, 72, 77, 99, 107, 110, 112, 113, 114, 118, 126, 129, 133, 135, 140, 141, 150, 153, 154, 161, 162, 187, 228, 240, 244, 245, 247, 248, 268, 269, 270, 272, 273, 274, 316, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 358, 425, 428, 442], "2": [0, 1, 2, 3, 8, 9, 10, 16, 17, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 44, 48, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 69, 72, 74, 75, 77, 78, 79, 80, 83, 84, 94, 98, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 144, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 172, 179, 183, 184, 186, 188, 191, 192, 194, 196, 197, 198, 207, 208, 211, 213, 215, 217, 220, 223, 227, 228, 229, 230, 235, 236, 237, 240, 242, 244, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 289, 290, 291, 299, 302, 310, 311, 312, 314, 318, 322, 323, 329, 330, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 363, 364, 365, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 393, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432, 437, 438, 439, 440, 442, 443, 444, 445], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 104, 105, 107, 112, 113, 120, 124, 125, 126, 129, 132, 133, 135, 136, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 158, 159, 160, 161, 162, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 306, 310, 312, 317, 318, 319, 321, 322, 325, 326, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 370, 371, 372, 393, 400, 412, 416, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 25, 39, 62, 65, 69, 77, 78, 79, 99, 133, 140, 153, 161, 208, 215, 218, 242, 332, 335, 347, 421, 422, 425, 426, 427, 428, 431, 433, 442, 444, 445], "tensordict": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 263, 264, 267, 270, 274, 276, 277, 280, 281, 291, 292, 293, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 382, 383, 393, 397, 398, 399, 401, 402, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 445], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 207, 217, 235, 236, 245, 307, 308, 309, 318, 337, 345, 354, 418, 425, 438, 440, 444], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 83, 84, 94, 96, 98, 107, 115, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 177, 215, 242, 247, 277, 386, 391, 402, 422, 426, 429, 435, 438], "root": [0, 2, 3, 36, 37, 48, 50, 62, 67, 68, 69, 74, 78, 79, 84, 95, 96, 103, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 187, 209, 231, 232, 270, 271, 274, 299, 300, 421, 428, 430, 438, 439, 440, 442, 445], "http": [0, 2, 5, 6, 7, 10, 16, 17, 23, 24, 25, 29, 62, 80, 104, 105, 124, 125, 127, 128, 135, 137, 138, 139, 145, 146, 148, 149, 150, 151, 152, 155, 156, 158, 163, 164, 165, 166, 187, 215, 240, 250, 256, 257, 258, 259, 260, 261, 264, 265, 266, 272, 277, 278, 279, 284, 285, 286, 290, 291, 292, 294, 295, 301, 312, 329, 330, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 364, 369, 377, 417, 436, 441, 444], "github": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 124, 125, 127, 128, 132, 135, 138, 139, 145, 146, 148, 149, 151, 152, 155, 156, 158, 163, 164, 165, 166, 184, 187, 240, 250, 431, 435, 438, 439, 444], "com": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 124, 125, 127, 128, 135, 137, 138, 139, 145, 146, 148, 149, 151, 152, 155, 156, 158, 163, 164, 165, 166, 187, 250, 444], "setup": [0, 1, 7, 124, 125, 137, 138, 139, 163], "py": [0, 3, 29, 132, 134, 177, 187, 262, 292, 301, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445], "develop": [0, 3, 4, 7, 50, 137, 425, 444], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 126, 129, 131, 133, 135, 136, 140, 141, 153, 154, 157, 158, 161, 162, 167, 173, 178, 180, 182, 183, 184, 186, 187, 190, 192, 195, 197, 203, 207, 209, 215, 216, 218, 225, 230, 232, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 264, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 281, 282, 284, 290, 302, 310, 311, 312, 314, 315, 316, 319, 321, 322, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 358, 362, 364, 365, 366, 367, 368, 370, 382, 385, 386, 389, 391, 392, 395, 402, 404, 412, 418, 421, 424, 425, 427, 429, 431, 432, 433, 436, 440, 443, 445], "seri": [0, 2, 3, 7, 8, 59, 97, 108, 118, 119, 122, 123, 161, 210, 236, 384, 420, 421, 425, 426, 427, 434, 435, 438, 439, 442, 445], "quick": [0, 429], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 35, 50, 71, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 186, 205, 208, 231, 236, 247, 250, 349, 419, 420, 421, 425, 426, 427, 428, 431, 435, 438, 439, 440, 442, 444, 445], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 105, 107, 108, 110, 111, 112, 113, 118, 120, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 171, 175, 178, 179, 180, 183, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 205, 207, 208, 209, 210, 211, 215, 216, 219, 220, 223, 224, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 244, 247, 248, 253, 254, 255, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 291, 302, 306, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 378, 379, 380, 381, 382, 388, 391, 392, 398, 399, 402, 404, 406, 412, 416, 419, 421, 425, 426, 427, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445], "hurri": [0, 430], "last": [0, 1, 2, 3, 4, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 111, 112, 113, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 172, 180, 183, 186, 202, 209, 211, 216, 229, 231, 233, 248, 249, 254, 255, 267, 268, 270, 272, 274, 275, 278, 279, 285, 296, 299, 302, 310, 314, 319, 332, 364, 366, 367, 426, 427, 428, 429, 430, 431, 438, 439, 440, 441, 442, 444, 445], "item": [0, 2, 3, 8, 16, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 94, 99, 105, 107, 111, 118, 140, 180, 195, 201, 236, 278, 279, 333, 334, 336, 393, 421, 422, 425, 427, 428, 432, 433, 438, 439, 440, 442], "navig": [0, 439], "previou": [0, 3, 4, 10, 55, 62, 67, 68, 69, 71, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 202, 230, 247, 268, 272, 295, 310, 427, 428, 429, 430, 431, 435, 440, 445], "whenev": [0, 1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 55, 62, 65, 69, 77, 78, 79, 84, 104, 105, 112, 113, 127, 128, 132, 134, 135, 145, 146, 158, 165, 166, 177, 195, 202, 206, 237, 243, 347, 364, 365, 366, 367, 382, 404, 420, 434, 442], "want": [0, 2, 3, 6, 7, 8, 39, 65, 77, 113, 187, 211, 290, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 420, 425, 426, 427, 428, 429, 430, 432, 433, 434, 438, 439, 440, 441, 442, 444, 445], "ted": [0, 41, 56, 75, 76, 95, 96, 103, 418, 424, 436, 443], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 107, 112, 113, 118, 124, 125, 126, 129, 133, 137, 138, 139, 140, 141, 145, 146, 148, 153, 154, 155, 156, 161, 162, 165, 166, 167, 187, 191, 195, 205, 209, 215, 228, 230, 233, 234, 235, 236, 237, 240, 242, 244, 245, 247, 249, 252, 254, 255, 262, 267, 270, 274, 279, 280, 281, 284, 290, 292, 299, 301, 307, 309, 312, 314, 315, 318, 319, 322, 330, 332, 337, 343, 345, 347, 352, 354, 364, 365, 366, 367, 368, 382, 420, 421, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "modul": [0, 2, 3, 4, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 71, 72, 77, 118, 124, 125, 126, 129, 133, 140, 141, 144, 147, 150, 153, 154, 161, 162, 177, 186, 191, 195, 197, 199, 205, 207, 215, 216, 229, 230, 235, 236, 237, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 360, 362, 364, 365, 366, 367, 368, 382, 402, 409, 412, 418, 421, 422, 424, 426, 427, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443], "optim": [0, 1, 2, 8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 251, 277, 283, 284, 290, 299, 330, 332, 347, 348, 349, 352, 359, 397, 398, 402, 412, 421, 422, 424, 427, 428, 429, 430, 431, 433, 436, 438, 439, 440, 443], "collect": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 50, 55, 62, 67, 68, 69, 78, 79, 107, 111, 126, 129, 133, 140, 141, 153, 154, 158, 161, 162, 167, 184, 187, 195, 202, 211, 215, 242, 291, 314, 330, 333, 336, 338, 350, 352, 354, 355, 384, 393, 399, 402, 404, 405, 406, 412, 422, 424, 425, 428, 429, 430, 431, 432, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445], "storag": [0, 1, 8, 32, 39, 41, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 81, 84, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 113, 115, 116, 117, 118, 120, 121, 126, 129, 131, 133, 140, 141, 153, 154, 161, 162, 186, 187, 194, 198, 220, 247, 418, 422, 424, 426, 427, 428, 429, 430, 432, 435, 436, 438, 439, 441, 443], "log": [0, 3, 4, 8, 11, 71, 262, 263, 264, 278, 279, 287, 299, 300, 311, 312, 315, 319, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 355, 362, 391, 395, 396, 397, 402, 412, 420, 421, 422, 424, 425, 426, 427, 430, 431, 435, 436, 438, 439, 440, 443, 444], "your": [0, 1, 2, 7, 8, 10, 11, 15, 16, 17, 18, 21, 23, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 137, 140, 141, 144, 153, 154, 155, 156, 161, 162, 244, 245, 247, 319, 392, 416, 418, 419, 420, 421, 424, 426, 427, 428, 430, 431, 432, 433, 434, 436, 438, 439, 442, 443, 444], "own": [0, 1, 16, 17, 22, 26, 27, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 247, 384, 418, 421, 424, 426, 427, 430, 436, 438, 439, 440, 443], "train": [0, 1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 32, 35, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 94, 126, 129, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 167, 194, 203, 215, 229, 234, 237, 240, 242, 247, 249, 250, 252, 257, 259, 267, 270, 274, 291, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 364, 402, 404, 412, 418, 420, 422, 424, 426, 430, 433, 434, 436, 441, 442, 443, 444, 445], "loop": [0, 8, 45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 267, 290, 291, 349, 402, 421, 422, 424, 425, 426, 430, 432, 433, 434, 436, 437, 442, 443, 444], "ppo": [0, 4, 8, 315, 319, 331, 346, 349, 418, 420, 424, 425, 426, 429, 431, 432, 436, 438, 443], "pendulum": [0, 3, 16, 17, 20, 22, 26, 27, 67, 118, 126, 127, 128, 129, 130, 132, 133, 134, 140, 141, 148, 153, 154, 161, 162, 187, 190, 191, 192, 200, 206, 207, 211, 218, 220, 224, 225, 228, 230, 231, 232, 235, 236, 237, 238, 244, 247, 253, 270, 274, 412, 420, 424, 426, 427, 430, 431, 432, 436, 443, 444, 445], "introduct": [0, 421, 424, 430, 436, 438, 439, 443, 445], "multi": [0, 1, 7, 9, 32, 39, 44, 55, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 95, 96, 103, 126, 129, 133, 140, 141, 145, 146, 153, 154, 159, 160, 161, 162, 208, 237, 247, 268, 270, 272, 274, 275, 280, 281, 282, 314, 319, 362, 364, 365, 366, 367, 418, 424, 425, 426, 427, 428, 430, 431, 436, 440, 443, 444], "agent": [0, 9, 68, 73, 74, 144, 145, 146, 151, 152, 155, 156, 159, 160, 163, 164, 165, 166, 168, 208, 227, 228, 229, 278, 279, 280, 281, 282, 284, 292, 301, 331, 346, 349, 362, 418, 424, 430, 436, 440, 443], "env": [0, 1, 2, 5, 6, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 36, 39, 41, 44, 50, 55, 65, 66, 67, 71, 72, 75, 77, 84, 107, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 270, 274, 276, 277, 314, 318, 347, 382, 383, 384, 392, 406, 407, 408, 412, 414, 415, 416, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 99, 103, 104, 105, 106, 107, 112, 113, 118, 120, 124, 125, 126, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 287, 289, 290, 291, 292, 293, 299, 300, 301, 302, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 377, 382, 384, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 412, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445], "pretrain": [0, 424, 436, 443], "recurr": [0, 2, 186, 268, 269, 270, 272, 274, 295, 305, 424, 426, 431, 436, 442, 443], "dqn": [0, 2, 180, 199, 255, 264, 311, 312, 329, 330, 332, 333, 334, 336, 338, 339, 340, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 362, 409, 418, 420, 424, 429, 431, 432, 435, 436, 443], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 41, 55, 67, 75, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 176, 197, 207, 209, 229, 232, 249, 252, 253, 264, 267, 270, 274, 280, 281, 284, 291, 293, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 329, 330, 331, 332, 333, 337, 338, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 397, 404, 407, 408, 412, 414, 415, 418, 420, 422, 424, 426, 430, 432, 433, 436, 441, 442, 443, 444, 445], "replai": [0, 8, 20, 26, 55, 62, 67, 68, 69, 78, 79, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 118, 119, 123, 186, 187, 197, 216, 220, 230, 236, 247, 332, 333, 334, 336, 337, 338, 345, 350, 352, 354, 355, 399, 402, 410, 412, 418, 421, 422, 424, 429, 436, 440, 441, 443], "buffer": [0, 4, 8, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 186, 187, 191, 195, 197, 205, 215, 216, 220, 230, 235, 236, 237, 240, 242, 247, 249, 291, 310, 318, 321, 332, 333, 334, 336, 337, 338, 345, 350, 352, 354, 355, 364, 365, 366, 367, 368, 399, 402, 410, 412, 418, 421, 422, 424, 429, 434, 436, 440, 441, 443, 445], "export": [0, 6, 7, 424, 436, 443], "competit": [0, 3, 145, 146, 424, 436, 439, 443], "ddpg": [0, 257, 258, 259, 260, 333, 344, 353, 418, 420, 424, 426, 432, 436, 439, 443], "task": [0, 2, 3, 9, 71, 73, 74, 83, 126, 127, 128, 129, 133, 136, 140, 141, 145, 146, 153, 154, 155, 156, 158, 161, 162, 165, 166, 215, 228, 237, 240, 242, 337, 345, 424, 425, 426, 427, 428, 430, 431, 436, 438, 439, 440, 443, 445], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 165, 175, 195, 209, 230, 245, 261, 270, 274, 310, 329, 347, 349, 351, 384, 402, 418, 421, 422, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 442, 443, 444], "object": [0, 2, 3, 4, 6, 7, 16, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 36, 39, 44, 45, 46, 47, 55, 57, 61, 63, 65, 66, 70, 72, 77, 82, 83, 84, 98, 99, 100, 101, 107, 110, 114, 116, 120, 123, 126, 129, 133, 138, 140, 141, 153, 154, 157, 161, 162, 180, 194, 198, 199, 205, 208, 211, 215, 235, 236, 237, 240, 244, 245, 247, 270, 274, 277, 280, 281, 292, 299, 301, 306, 307, 315, 318, 319, 320, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 406, 407, 408, 411, 412, 416, 418, 420, 422, 424, 426, 427, 428, 429, 433, 435, 436, 438, 439, 440, 442, 443, 445], "loss": [0, 3, 8, 63, 199, 290, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 362, 363, 364, 398, 402, 409, 412, 421, 422, 424, 429, 430, 432, 433, 434, 436, 440, 442, 443], "trainer": [0, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 424, 425, 436, 443], "exampl": [0, 1, 2, 3, 4, 9, 10, 16, 17, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 83, 84, 85, 94, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 289, 290, 291, 292, 293, 301, 302, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 356, 357, 362, 364, 365, 366, 367, 370, 382, 384, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 412, 420, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445], "packag": [0, 6, 7, 10, 177, 418, 419, 445], "batch": [0, 2, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 36, 55, 57, 59, 62, 64, 67, 68, 69, 71, 78, 79, 80, 82, 94, 98, 99, 100, 101, 105, 106, 107, 111, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 179, 184, 187, 191, 192, 195, 202, 209, 211, 213, 216, 220, 227, 230, 232, 236, 237, 239, 243, 244, 247, 250, 262, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 287, 291, 292, 298, 302, 305, 314, 318, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 393, 396, 399, 400, 401, 402, 404, 414, 415, 416, 418, 420, 421, 422, 426, 427, 428, 429, 430, 433, 435, 437, 438, 439, 441, 444, 445], "size": [0, 2, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 178, 180, 184, 186, 187, 188, 191, 193, 194, 195, 198, 199, 200, 202, 205, 208, 209, 213, 215, 217, 218, 220, 224, 226, 227, 228, 230, 232, 233, 236, 237, 238, 239, 242, 244, 245, 247, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 301, 302, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 384, 393, 399, 418, 420, 421, 426, 427, 428, 429, 430, 431, 433, 438, 439, 440, 445], "copi": [0, 2, 3, 15, 18, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 187, 205, 218, 229, 235, 236, 237, 244, 245, 247, 248, 270, 274, 282, 310, 332, 347, 352, 382, 418, 421, 425, 426, 428, 430, 438, 442, 444], "interoper": [0, 16, 17, 418], "singl": [0, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 50, 53, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 80, 84, 99, 107, 113, 118, 126, 129, 132, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 180, 187, 188, 195, 208, 215, 220, 230, 235, 237, 242, 247, 254, 255, 268, 269, 270, 272, 273, 274, 275, 281, 317, 321, 330, 331, 332, 334, 336, 338, 339, 345, 346, 349, 350, 352, 354, 355, 359, 364, 365, 366, 367, 373, 374, 375, 376, 378, 379, 380, 381, 382, 416, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 444], "node": [0, 2, 19, 23, 24, 25, 26, 27, 36, 37, 45, 46, 47, 48, 50, 61, 63, 70, 74, 84, 141, 235, 418, 433, 444], "distribut": [0, 2, 3, 4, 9, 10, 15, 18, 19, 23, 24, 25, 26, 27, 62, 67, 68, 69, 78, 79, 107, 126, 155, 156, 207, 211, 245, 249, 251, 262, 263, 264, 265, 271, 277, 278, 279, 287, 288, 289, 290, 294, 295, 298, 299, 300, 310, 311, 312, 315, 319, 320, 329, 330, 331, 332, 337, 338, 339, 345, 346, 349, 350, 351, 352, 354, 355, 418, 421, 422, 426, 427, 429, 431, 433, 438, 439, 440, 444, 445], "helper": [0, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 425, 426, 428, 438, 440], "compos": [0, 3, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 106, 107, 108, 109, 118, 119, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 192, 205, 219, 235, 236, 237, 244, 247, 313, 314, 332, 341, 352, 384, 418, 425, 426, 427, 428, 429, 433, 437, 439, 441, 442, 444, 445], "episod": [0, 3, 50, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 220, 223, 229, 251, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 418, 426, 430, 435, 438, 439, 442], "format": [0, 3, 32, 39, 41, 44, 53, 54, 55, 56, 59, 60, 65, 66, 72, 75, 76, 77, 84, 95, 96, 103, 110, 118, 126, 129, 133, 140, 141, 153, 154, 155, 161, 162, 187, 191, 215, 230, 236, 237, 240, 242, 247, 318, 384, 418, 425, 426, 429, 430, 432, 434, 444, 445], "tensorspec": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 165, 166, 179, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 267, 291, 295, 306, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 330, 332, 334, 337, 338, 350, 352, 354, 355, 362, 418, 440], "tree": [0, 1, 45, 46, 47, 50, 61, 63, 70, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 418, 438, 442], "forest": [0, 50, 84, 418], "human": [0, 29, 418, 440], "feedback": [0, 418, 435, 444], "rlhf": [0, 207, 418, 420], "spec": [0, 1, 2, 16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 124, 125, 126, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 172, 175, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 264, 267, 270, 274, 291, 293, 295, 306, 310, 311, 312, 315, 316, 317, 318, 319, 321, 322, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 435, 437, 438, 439, 444], "lock": [0, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 184, 192, 230, 244, 245, 418, 421, 440], "method": [0, 1, 2, 4, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 112, 113, 114, 115, 116, 118, 120, 126, 129, 132, 133, 134, 135, 139, 140, 141, 153, 154, 157, 158, 161, 162, 175, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 209, 211, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 262, 267, 270, 274, 280, 281, 282, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 326, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 343, 345, 347, 349, 350, 351, 352, 354, 355, 362, 368, 382, 383, 413, 418, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 442, 445], "partial": [0, 2, 126, 129, 133, 140, 141, 153, 154, 161, 162, 186, 187, 195, 229, 230, 231, 315, 402, 418, 428], "step": [0, 1, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 55, 71, 84, 95, 96, 103, 105, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 178, 179, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 202, 203, 206, 207, 209, 211, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 249, 250, 251, 265, 267, 268, 270, 272, 274, 276, 277, 290, 291, 314, 315, 319, 329, 340, 349, 363, 364, 365, 366, 367, 370, 371, 372, 383, 386, 393, 397, 402, 418, 422, 426, 428, 429, 431, 432, 434, 435, 437, 440, 441, 444], "reset": [0, 1, 2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 113, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 167, 179, 182, 183, 184, 187, 195, 199, 202, 206, 210, 215, 223, 228, 229, 230, 231, 232, 235, 236, 237, 240, 243, 244, 247, 248, 253, 268, 270, 274, 282, 291, 304, 314, 347, 383, 418, 421, 425, 426, 427, 428, 430, 433, 437, 438, 439, 444], "vector": [0, 1, 8, 30, 59, 124, 125, 134, 138, 139, 144, 155, 156, 158, 165, 166, 197, 243, 245, 257, 259, 268, 269, 272, 273, 275, 364, 367, 377, 378, 379, 380, 381, 418, 420, 421, 425, 426, 428, 437, 438, 439, 440, 441, 445], "custom": [0, 1, 2, 5, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 240, 247, 280, 281, 322, 328, 339, 349, 356, 416, 418, 420, 425, 426, 427, 428, 431, 432, 434, 438, 439], "nativ": [0, 1, 7, 9, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 384, 418, 428, 442], "auto": [0, 100, 120, 129, 182, 183, 237, 243, 291, 330, 332, 338, 348, 350, 352, 354, 355, 418, 421, 438, 439], "dynam": [0, 2, 7, 16, 17, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 172, 247, 337, 345, 418, 427, 430, 440], "mask": [0, 1, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 181, 216, 247, 252, 253, 264, 267, 278, 279, 293, 310, 311, 312, 316, 317, 338, 352, 399, 418, 426, 428, 429, 445], "action": [0, 2, 8, 9, 16, 17, 20, 22, 26, 41, 50, 59, 67, 71, 75, 77, 84, 104, 105, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 172, 178, 180, 181, 184, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 207, 209, 210, 211, 213, 217, 218, 220, 224, 228, 230, 234, 236, 237, 238, 239, 243, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 270, 274, 275, 276, 277, 278, 279, 280, 289, 291, 292, 293, 295, 298, 299, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 322, 323, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 412, 416, 418, 420, 422, 425, 426, 427, 429, 430, 431, 432, 437, 438, 439, 441, 444, 445], "record": [0, 2, 11, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 173, 180, 207, 247, 349, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 412, 418, 426, 427, 431, 435, 438], "domain": [0, 2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 197, 205, 230, 238, 306, 311, 312, 315, 316, 317, 318, 319, 320, 321, 326, 418, 427, 432, 438, 439, 440, 444, 445], "actor": [0, 3, 4, 26, 157, 207, 251, 256, 257, 259, 264, 265, 267, 277, 289, 291, 293, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 362, 418, 421, 426, 428, 430, 432, 435, 438, 441, 444], "explor": [0, 1, 246, 249, 252, 267, 284, 291, 306, 311, 312, 315, 316, 317, 318, 319, 329, 347, 397, 407, 408, 412, 418, 427, 428, 429, 430, 432, 433, 435, 438, 439, 440], "valu": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 104, 105, 107, 112, 113, 118, 126, 129, 133, 140, 141, 144, 153, 154, 161, 162, 167, 172, 177, 178, 179, 180, 183, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 205, 210, 211, 215, 216, 219, 220, 221, 223, 225, 227, 230, 231, 236, 237, 242, 244, 245, 247, 248, 249, 250, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 270, 271, 274, 275, 277, 278, 279, 280, 281, 283, 284, 287, 291, 292, 293, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 392, 393, 395, 396, 397, 398, 399, 402, 412, 418, 422, 426, 429, 432, 433, 434, 437, 438, 439, 440, 442, 444, 445], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 71, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 109, 111, 126, 129, 130, 133, 140, 141, 145, 146, 147, 150, 153, 154, 155, 156, 159, 160, 161, 162, 179, 184, 191, 192, 194, 195, 196, 200, 205, 207, 209, 211, 217, 218, 223, 224, 228, 230, 234, 236, 238, 243, 245, 247, 252, 253, 262, 270, 274, 278, 279, 287, 306, 315, 319, 323, 324, 343, 350, 357, 364, 369, 377, 387, 402, 418, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "hook": [0, 2, 32, 39, 41, 44, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 107, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 293, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 418], "planner": [0, 251, 277, 418], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 238, 240, 242, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 393, 400, 401, 412, 418, 420, 422, 425, 426, 427, 428, 429, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445], "vmap": [0, 268, 269, 272, 273, 282, 302, 318, 321, 347, 418, 420], "random": [0, 1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 71, 73, 74, 82, 85, 86, 87, 88, 89, 106, 118, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 167, 180, 195, 197, 210, 211, 230, 237, 253, 267, 268, 270, 272, 274, 315, 318, 319, 326, 330, 347, 350, 397, 406, 418, 420, 425, 426, 427, 429, 430, 431, 433, 440, 441, 442, 444, 445], "sac": [0, 338, 350, 352, 418], "redq": [0, 350, 418], "crossq": [0, 332, 418], "iql": [0, 337, 345, 418, 425, 438, 439], "cql": [0, 330, 336, 418], "gail": [0, 343, 418], "dt": [0, 154, 291, 418, 440], "td3": [0, 354, 355, 418], "bc": [0, 5, 354, 418], "a2c": [0, 329, 418], "dreamer": [0, 173, 174, 265, 340, 341, 342, 418, 420], "checkpoint": [0, 69, 96, 98, 102, 114, 115, 117, 121, 418, 442], "builder": [0, 418, 426, 445], "logger": [0, 3, 11, 382, 384, 386, 387, 388, 389, 390, 391, 396, 402, 412, 416, 418, 426, 438], "_util": [0, 3, 153, 248, 418, 429, 435], "implement_for": [0, 3, 418], "set_auto_unwrap_transformed_env": [0, 12, 237, 418], "auto_unwrap_transformed_env": [0, 392, 418], "thing": [0, 3, 7, 8, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 280, 281, 338, 352, 419, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 442, 445], "consid": [0, 1, 2, 3, 8, 15, 18, 21, 25, 32, 36, 37, 39, 44, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 98, 100, 112, 113, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 197, 244, 247, 262, 280, 281, 298, 330, 332, 345, 350, 352, 354, 355, 364, 366, 367, 419, 421, 425, 430, 431, 432, 440, 442], "when": [0, 1, 2, 3, 5, 8, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 116, 120, 126, 129, 130, 132, 133, 134, 139, 140, 141, 144, 145, 146, 148, 150, 153, 154, 155, 156, 161, 162, 165, 166, 176, 178, 181, 183, 186, 187, 191, 194, 195, 197, 198, 207, 208, 210, 211, 215, 216, 223, 230, 232, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 250, 251, 262, 264, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 290, 293, 299, 314, 315, 318, 319, 321, 325, 330, 331, 332, 334, 338, 339, 345, 346, 347, 349, 350, 352, 354, 355, 356, 362, 363, 364, 365, 366, 367, 382, 383, 384, 386, 389, 391, 399, 416, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 433, 434, 438, 439, 440, 441, 442, 444, 445], "debug": [0, 6, 8, 50, 71, 84, 232, 419, 445], "work": [0, 1, 2, 3, 4, 8, 32, 39, 44, 55, 65, 66, 69, 72, 77, 98, 105, 110, 112, 113, 116, 123, 126, 129, 132, 133, 134, 137, 140, 141, 153, 154, 158, 161, 162, 175, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 245, 247, 248, 254, 255, 275, 312, 317, 322, 331, 346, 349, 402, 419, 420, 425, 426, 427, 428, 430, 433, 437, 438, 439, 440, 441, 442, 444, 445], "habitat": [0, 3, 135, 419, 441], "lab": [0, 3, 127, 128, 135, 419], "mujoco": [0, 6, 8, 158, 419, 425, 427, 428], "error": [0, 1, 3, 7, 10, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 70, 72, 73, 77, 84, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 167, 168, 216, 235, 247, 248, 347, 419, 421, 425, 427, 438, 439, 445], "solut": [0, 2, 3, 6, 7, 9, 26, 112, 419, 420, 422, 429, 444], "resourc": [0, 1, 26, 135, 419, 425, 427, 429, 438, 439], "issu": [0, 2, 3, 4, 5, 8, 67, 96, 98, 100, 112, 120, 126, 129, 132, 133, 137, 140, 141, 153, 154, 161, 162, 178, 187, 216, 231, 306, 311, 312, 315, 316, 317, 318, 319, 419, 444], "customis": [0, 419, 426, 434], "video": [0, 4, 9, 384, 386, 389, 391, 397, 416, 418, 419, 435, 438, 439], "render": [0, 3, 8, 139, 165, 382, 384, 397, 419, 425, 426, 427, 429, 430, 434], "index": [0, 3, 7, 8, 10, 20, 30, 31, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 104, 105, 107, 108, 110, 112, 116, 118, 119, 120, 122, 123, 126, 129, 133, 140, 141, 145, 146, 151, 152, 153, 154, 161, 162, 165, 166, 178, 182, 187, 191, 197, 237, 278, 279, 314, 418, 430, 437, 438, 439, 442, 444], "search": [0, 2, 36, 37, 48, 74, 84, 150, 179, 426], "page": [0, 7, 29, 391, 432], "somewhat": [1, 2, 195, 421, 431, 445], "equival": [1, 3, 26, 30, 31, 32, 35, 36, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 83, 84, 94, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 184, 196, 199, 230, 232, 237, 247, 264, 272, 275, 293, 311, 312, 316, 317, 349, 399, 433, 444, 445], "dataload": [1, 94, 111, 113, 140, 195, 426, 433, 442], "except": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 201, 220, 229, 230, 231, 235, 237, 247, 249, 267, 268, 270, 272, 274, 287, 291, 329, 332, 347, 349, 352, 384, 420, 425, 426, 430, 438, 442, 444, 445], "1": [1, 2, 3, 4, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 211, 213, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 244, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 284, 287, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 341, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 378, 379, 381, 382, 384, 393, 397, 399, 400, 412, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445], "thei": [1, 2, 3, 4, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 105, 107, 126, 129, 132, 133, 134, 140, 141, 144, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 183, 186, 201, 207, 215, 224, 232, 236, 237, 242, 247, 274, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 399, 402, 420, 421, 422, 425, 426, 427, 428, 429, 432, 437, 438, 439, 440, 441, 442, 444, 445], "over": [1, 2, 3, 4, 8, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 93, 105, 107, 111, 112, 113, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 178, 180, 195, 197, 211, 223, 231, 247, 287, 290, 299, 302, 321, 339, 341, 347, 370, 382, 405, 420, 422, 425, 426, 427, 429, 430, 431, 432, 433, 438, 439, 440, 445], "non": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 48, 49, 55, 57, 58, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 99, 101, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 178, 184, 185, 187, 191, 195, 202, 215, 227, 230, 236, 237, 238, 239, 240, 242, 247, 253, 268, 270, 272, 274, 280, 318, 319, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 420, 425, 428, 429, 438, 439, 440, 442, 445], "static": [1, 39, 65, 71, 77, 83, 105, 112, 113, 135, 154, 244, 248, 345, 430, 440, 442], "like": [1, 2, 3, 4, 7, 11, 26, 32, 36, 37, 39, 44, 48, 50, 55, 57, 62, 65, 66, 69, 72, 74, 77, 78, 79, 83, 101, 107, 113, 126, 129, 130, 133, 135, 140, 141, 144, 153, 154, 155, 156, 161, 162, 167, 187, 195, 199, 230, 233, 247, 268, 272, 281, 313, 319, 329, 331, 346, 349, 350, 351, 420, 421, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445], "being": [1, 2, 3, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 73, 77, 94, 99, 118, 121, 126, 129, 132, 133, 134, 135, 139, 140, 141, 153, 154, 158, 161, 162, 176, 186, 194, 197, 198, 205, 210, 218, 230, 235, 236, 237, 247, 267, 270, 274, 291, 331, 332, 346, 347, 349, 352, 384, 399, 404, 414, 415, 416, 420, 421, 425, 426, 427, 428, 433, 438, 439, 440, 442], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 69, 70, 72, 77, 84, 85, 94, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 182, 187, 191, 202, 205, 215, 223, 227, 230, 235, 236, 237, 238, 239, 240, 242, 247, 275, 302, 318, 319, 320, 332, 352, 384, 422, 427, 429, 430, 434, 442, 444, 445], "two": [1, 2, 3, 4, 8, 10, 32, 39, 44, 50, 51, 52, 53, 54, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 84, 107, 111, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 211, 215, 235, 242, 247, 260, 268, 270, 272, 274, 280, 281, 296, 299, 319, 346, 354, 358, 397, 402, 421, 425, 426, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439, 440, 442, 444, 445], "main": [1, 2, 3, 5, 16, 17, 25, 27, 28, 67, 130, 187, 319, 402, 420, 421, 425, 426, 437, 444, 445], "argument": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 96, 98, 99, 100, 104, 105, 107, 110, 111, 112, 113, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 172, 178, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 267, 268, 270, 272, 274, 275, 278, 279, 280, 281, 283, 291, 302, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 357, 362, 364, 365, 366, 367, 368, 372, 382, 383, 384, 389, 391, 395, 402, 405, 412, 413, 416, 425, 426, 427, 428, 429, 430, 431, 433, 438, 439, 440, 442, 444, 445], "list": [1, 2, 3, 6, 7, 8, 9, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 99, 101, 107, 110, 111, 112, 113, 114, 116, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 168, 178, 185, 186, 190, 194, 195, 196, 198, 207, 208, 211, 213, 215, 223, 225, 233, 234, 235, 236, 237, 239, 240, 242, 244, 245, 247, 253, 254, 255, 257, 263, 266, 270, 274, 275, 278, 279, 285, 293, 312, 314, 316, 317, 319, 321, 322, 323, 330, 332, 345, 347, 350, 352, 354, 355, 361, 364, 367, 382, 383, 397, 399, 414, 415, 421, 425, 427, 430, 431, 432, 433, 437, 438, 440, 441, 442, 444, 445], "constructor": [1, 2, 3, 20, 23, 24, 25, 26, 67, 69, 78, 79, 83, 104, 118, 126, 129, 133, 140, 141, 148, 153, 154, 161, 162, 165, 183, 187, 235, 254, 255, 275, 305, 315, 319, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 413, 416, 420, 425, 426, 427, 430, 433, 438, 439, 442, 444], "iter": [1, 2, 3, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 93, 94, 101, 107, 111, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 195, 200, 211, 224, 247, 248, 250, 252, 253, 254, 255, 275, 280, 281, 297, 306, 311, 315, 316, 318, 320, 321, 323, 347, 361, 397, 401, 402, 421, 422, 425, 427, 428, 433, 435, 438, 439, 440], "execut": [1, 2, 3, 6, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 64, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 98, 99, 107, 112, 113, 124, 125, 126, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 147, 148, 153, 154, 158, 161, 162, 163, 181, 192, 209, 232, 237, 247, 267, 268, 270, 272, 274, 282, 305, 314, 320, 321, 347, 354, 406, 416, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 442, 443, 444, 445], "queri": [1, 2, 3, 16, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 215, 240, 244, 247, 321, 421, 425, 432, 440, 444], "defin": [1, 2, 3, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 216, 229, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 282, 285, 286, 289, 290, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 326, 334, 336, 347, 364, 365, 366, 367, 368, 383, 413, 420, 425, 426, 428, 432, 435, 440, 442, 445], "number": [1, 2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 110, 112, 113, 120, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 147, 148, 149, 150, 153, 154, 155, 156, 161, 162, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 197, 199, 200, 201, 203, 206, 207, 210, 211, 214, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 249, 250, 251, 254, 255, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 285, 286, 291, 292, 294, 295, 298, 299, 300, 301, 306, 310, 314, 315, 318, 319, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 389, 391, 393, 395, 397, 402, 404, 405, 406, 414, 415, 416, 420, 421, 425, 426, 427, 428, 430, 431, 433, 435, 438, 439, 440, 441, 442, 445], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 39, 40, 44, 50, 51, 52, 55, 65, 66, 72, 77, 83, 84, 111, 113, 118, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 167, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 252, 268, 270, 274, 275, 283, 284, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 365, 366, 367, 399, 425, 427, 428, 429, 433, 434, 438, 439, 440, 442, 445], "deliv": [1, 2, 3, 20, 195, 425, 426, 430, 433, 444], "stack": [1, 2, 3, 7, 8, 16, 17, 20, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 92, 99, 104, 107, 126, 129, 132, 133, 134, 140, 141, 144, 153, 154, 155, 156, 161, 162, 187, 195, 209, 244, 268, 270, 272, 273, 274, 314, 320, 321, 330, 332, 345, 350, 352, 354, 355, 383, 393, 418, 426, 429, 430, 437, 438, 440, 444], "user": [1, 2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 105, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 167, 188, 205, 229, 235, 237, 247, 261, 332, 349, 352, 354, 384, 413, 421, 422, 425, 426, 430, 432, 433, 440, 444, 445], "reach": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 71, 111, 126, 129, 133, 139, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 209, 228, 249, 267, 291, 425, 427, 435, 438, 439, 444, 445], "done": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 74, 75, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 103, 105, 107, 112, 113, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 181, 183, 184, 187, 194, 195, 196, 198, 199, 200, 205, 209, 210, 211, 213, 217, 218, 220, 222, 224, 227, 228, 230, 231, 234, 235, 236, 237, 238, 244, 247, 251, 268, 270, 274, 277, 299, 314, 329, 330, 331, 332, 333, 334, 336, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 420, 421, 425, 427, 428, 429, 430, 432, 433, 435, 437, 438, 439, 440, 442, 444, 445], "state": [1, 2, 3, 4, 16, 17, 20, 22, 32, 39, 41, 44, 50, 55, 62, 65, 66, 67, 68, 69, 71, 72, 75, 77, 78, 79, 84, 95, 96, 103, 107, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 167, 178, 179, 183, 186, 187, 188, 190, 191, 192, 195, 196, 199, 202, 205, 209, 211, 218, 228, 229, 234, 235, 236, 237, 238, 239, 244, 245, 247, 251, 256, 261, 265, 268, 269, 270, 272, 273, 274, 275, 277, 282, 285, 289, 292, 294, 295, 301, 307, 314, 318, 324, 329, 331, 332, 336, 338, 346, 347, 349, 350, 351, 352, 362, 363, 364, 365, 366, 367, 368, 402, 416, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 445], "after": [1, 2, 3, 8, 16, 17, 22, 23, 25, 26, 32, 39, 41, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 100, 107, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 250, 267, 268, 270, 274, 283, 311, 316, 332, 341, 352, 354, 426, 427, 428, 429, 430, 431, 433, 435, 438, 439, 440, 441, 442, 445], "predefin": [1, 384, 426, 428, 433, 442, 444], "becaus": [1, 2, 3, 4, 7, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 199, 207, 228, 243, 247, 260, 281, 306, 311, 312, 314, 315, 316, 317, 318, 319, 329, 349, 420, 425, 426, 428, 429, 431, 432, 433, 437, 438, 439, 440, 442, 445], "potenti": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 440, 442], "comput": [1, 3, 4, 8, 16, 18, 20, 26, 32, 35, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 179, 211, 225, 237, 241, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 287, 289, 291, 294, 295, 297, 299, 300, 302, 307, 310, 312, 314, 315, 317, 319, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 406, 421, 425, 427, 428, 429, 430, 431, 437, 438, 439, 441, 442], "heavi": [1, 8, 442], "crucial": [1, 2, 3, 249, 267, 291, 337, 345, 347, 425, 426, 427, 428, 430, 432, 434, 438, 439, 440, 444, 445], "configur": [1, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 71, 126, 207, 256, 261, 289, 347, 349, 420, 425, 426, 427, 432, 438, 439, 440], "hyperparamet": [1, 110, 247, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 425, 434, 440, 442], "appropri": [1, 3, 4, 7, 97, 108, 118, 119, 122, 123, 141, 153, 161, 199, 413, 416, 425, 434, 442], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 114, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 420, 421, 425, 428, 429, 431, 435, 438, 439, 440, 441, 444], "take": [1, 2, 3, 8, 28, 32, 39, 44, 50, 65, 66, 71, 72, 77, 115, 121, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 190, 228, 231, 232, 236, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 313, 314, 315, 317, 319, 322, 325, 328, 349, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 393, 404, 420, 422, 425, 426, 427, 429, 430, 431, 432, 438, 439, 440, 442, 445], "whether": [1, 2, 3, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 98, 100, 107, 108, 120, 126, 129, 133, 139, 140, 141, 145, 146, 147, 153, 154, 155, 156, 161, 162, 165, 166, 179, 183, 192, 194, 195, 198, 229, 235, 237, 244, 245, 247, 254, 255, 270, 274, 275, 314, 319, 323, 329, 330, 331, 332, 333, 334, 336, 338, 339, 343, 346, 347, 349, 350, 351, 352, 354, 355, 362, 364, 367, 392, 416, 425, 426, 427, 429, 430, 438, 439, 440, 444, 445], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 101, 105, 107, 112, 113, 114, 118, 121, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 144, 147, 153, 154, 155, 156, 161, 162, 165, 166, 167, 178, 179, 180, 183, 184, 187, 190, 191, 194, 196, 199, 200, 202, 207, 208, 209, 211, 216, 217, 218, 220, 223, 224, 228, 229, 231, 234, 236, 237, 238, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 281, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 315, 317, 318, 319, 322, 325, 329, 331, 332, 338, 344, 346, 347, 349, 350, 351, 352, 353, 354, 363, 364, 365, 366, 367, 368, 384, 386, 392, 397, 398, 399, 402, 412, 414, 415, 416, 420, 421, 422, 425, 426, 427, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "occur": [1, 8, 17, 39, 65, 73, 74, 77, 84, 126, 129, 133, 135, 140, 141, 153, 154, 161, 162, 179, 188, 200, 211, 216, 243, 250, 306, 311, 312, 315, 316, 317, 318, 319, 341, 429, 442, 445], "serial": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 244, 245, 247], "parallel": [1, 3, 8, 126, 129, 132, 133, 134, 140, 141, 153, 154, 155, 156, 161, 162, 167, 237, 243, 270, 274, 329, 413, 414, 415, 416, 426, 427, 438, 439, 444], "syncdatacollector": [1, 2, 3, 16, 17, 21, 22, 23, 24, 25, 26, 41, 55, 75, 184, 187, 220, 252, 270, 274, 412, 415, 418, 425, 426, 427, 428, 429, 433, 435, 438, 439, 442], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 45, 46, 47, 61, 63, 70, 82, 83, 84, 94, 130, 148, 153, 161, 235, 244, 414, 415, 416, 425, 426, 427, 444, 445], "multisyncdatacollector": [1, 17, 23, 24, 25, 26, 252, 415, 418, 427, 433, 444], "split": [1, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 43, 48, 61, 63, 74, 83, 94, 105, 112, 113, 144, 155, 156, 268, 272, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 420, 422, 427, 431, 442, 444], "workload": 1, "across": [1, 3, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 57, 62, 66, 69, 72, 78, 79, 105, 112, 113, 124, 125, 127, 128, 132, 134, 135, 137, 138, 139, 148, 149, 153, 158, 162, 235, 244, 245, 247, 270, 274, 280, 290, 291, 347, 404, 418, 420, 421, 425, 430, 434, 438, 439, 440], "aggreg": [1, 3, 32, 65, 105, 118, 155, 156, 179, 208, 254, 255, 257, 258, 321, 421, 439], "result": [1, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 33, 39, 44, 45, 46, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 84, 85, 105, 107, 111, 112, 113, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 167, 178, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 252, 267, 268, 270, 272, 274, 275, 280, 293, 299, 310, 312, 317, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 404, 421, 426, 428, 430, 431, 434, 435, 440, 441, 444, 445], "final": [1, 2, 3, 4, 26, 45, 46, 47, 50, 61, 63, 70, 71, 84, 230, 243, 249, 267, 268, 270, 272, 274, 280, 291, 313, 320, 364, 397, 420, 425, 426, 427, 429, 434, 435, 438, 439, 440, 445], "multiasyncdatacollector": [1, 22, 23, 24, 25, 26, 252, 414, 418, 425, 426, 427, 433, 444], "sever": [1, 2, 3, 8, 32, 39, 44, 51, 55, 65, 66, 72, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 190, 208, 237, 247, 349, 425, 427, 429, 434, 435, 442, 445], "gather": [1, 3, 23, 25, 26, 50, 83, 94, 98, 100, 105, 112, 120, 209, 216, 279, 282, 287, 347, 363, 406, 419, 426, 427, 428, 433, 438, 439, 440, 442, 444, 445], "continu": [1, 2, 3, 9, 33, 36, 50, 85, 86, 87, 113, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 165, 166, 172, 180, 205, 230, 238, 257, 258, 259, 260, 290, 291, 321, 326, 330, 353, 364, 369, 377, 420, 425, 427, 431, 438, 439, 442], "concomitantli": [1, 126, 129, 133, 140, 141, 153, 154, 161, 162], "network": [1, 4, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 247, 254, 255, 257, 258, 259, 260, 263, 265, 266, 272, 275, 280, 281, 282, 284, 285, 286, 288, 290, 292, 294, 295, 296, 301, 307, 308, 309, 310, 318, 322, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 360, 362, 364, 365, 366, 367, 368, 411, 412, 420, 421, 422, 429, 432, 435, 437, 440, 445], "impli": [1, 84, 445], "mai": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 96, 99, 105, 112, 126, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 167, 195, 207, 211, 224, 235, 237, 239, 244, 245, 247, 250, 270, 274, 275, 280, 319, 331, 338, 346, 349, 352, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441, 442, 445], "slightli": [1, 28, 421, 428, 429, 438, 440, 441, 442, 445], "lag": [1, 425, 426, 427], "therefor": [1, 2, 3, 7, 62, 69, 78, 79, 126, 129, 133, 140, 141, 153, 154, 161, 162, 220, 349, 362, 429, 432, 438, 445], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 187], "where": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 39, 41, 43, 44, 45, 46, 47, 50, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 94, 96, 98, 100, 105, 107, 112, 113, 118, 120, 121, 126, 129, 133, 140, 141, 144, 147, 150, 153, 154, 155, 156, 161, 162, 175, 178, 179, 180, 181, 184, 187, 195, 199, 207, 215, 220, 223, 228, 229, 230, 231, 232, 236, 237, 239, 242, 243, 247, 249, 267, 268, 269, 270, 272, 273, 274, 278, 279, 280, 288, 290, 291, 310, 315, 318, 319, 328, 329, 330, 331, 332, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 421, 422, 425, 426, 427, 429, 430, 437, 438, 439, 440, 442, 445], "asynchron": [1, 9, 17, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318, 329, 414, 425, 426, 427], "off": [1, 2, 4, 271, 300, 311, 352, 382, 397, 407, 420, 422, 425, 426, 427, 431, 432, 438, 439, 441, 444, 445], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 105, 107, 112, 120, 126, 129, 132, 133, 134, 139, 140, 141, 153, 154, 155, 156, 161, 162, 163, 165, 167, 187, 194, 198, 202, 211, 229, 236, 237, 243, 247, 264, 268, 270, 272, 274, 281, 283, 307, 309, 310, 312, 316, 329, 337, 339, 345, 349, 397, 420, 421, 422, 425, 426, 427, 428, 430, 431, 433, 434, 438, 439, 440, 441, 442, 445], "rollout": [1, 2, 3, 11, 16, 17, 20, 22, 26, 28, 50, 71, 77, 84, 118, 124, 125, 126, 129, 133, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 180, 181, 183, 184, 187, 190, 192, 194, 195, 198, 199, 200, 205, 207, 208, 213, 217, 218, 223, 224, 225, 228, 229, 231, 232, 235, 238, 244, 247, 251, 252, 253, 270, 274, 277, 291, 314, 329, 382, 384, 406, 420, 425, 427, 428, 431, 432, 433, 434, 435, 441, 442, 444], "necessari": [1, 4, 6, 8, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 195, 224, 350, 364, 365, 366, 367, 368, 421, 425, 427, 431, 432, 433], "synchronis": [1, 130, 438, 439], "either": [1, 2, 5, 27, 30, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 94, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 209, 228, 229, 245, 247, 324, 347, 354, 355, 388, 422, 425, 426, 428, 438, 441, 442, 444, 445], "update_policy_weights_": [1, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 425, 439, 444], "update_at_each_batch": [1, 16, 17, 22], "true": [1, 2, 3, 4, 8, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 113, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 197, 200, 202, 205, 206, 207, 208, 209, 210, 211, 215, 216, 218, 219, 222, 223, 224, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 266, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 290, 291, 298, 299, 300, 305, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 364, 365, 366, 367, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 391, 392, 395, 396, 397, 399, 402, 416, 420, 421, 422, 425, 426, 427, 428, 429, 431, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "second": [1, 2, 3, 8, 28, 50, 51, 52, 53, 54, 118, 153, 184, 232, 268, 270, 272, 274, 312, 331, 346, 349, 352, 384, 386, 389, 391, 401, 425, 427, 433, 438, 439, 440, 442, 444, 445], "devic": [1, 2, 3, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 112, 113, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 175, 178, 180, 184, 191, 194, 195, 196, 198, 199, 200, 205, 207, 208, 213, 214, 215, 217, 218, 220, 224, 227, 228, 230, 233, 236, 237, 238, 240, 242, 244, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 283, 284, 289, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 382, 399, 404, 410, 420, 425, 426, 427, 428, 429, 438, 439, 440, 441, 444], "oper": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 99, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 202, 207, 232, 234, 238, 245, 247, 263, 264, 269, 273, 307, 308, 309, 311, 312, 313, 318, 324, 329, 331, 333, 334, 339, 346, 349, 351, 362, 363, 364, 365, 366, 367, 402, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 440, 445], "instanc": [1, 2, 3, 4, 7, 8, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 39, 44, 45, 46, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 82, 83, 84, 85, 95, 96, 98, 99, 100, 103, 105, 107, 112, 113, 120, 126, 128, 129, 130, 132, 133, 134, 140, 141, 147, 153, 154, 161, 162, 167, 172, 179, 211, 230, 237, 244, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 280, 281, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 330, 332, 334, 337, 338, 345, 347, 350, 352, 354, 355, 362, 364, 365, 366, 367, 382, 384, 388, 392, 397, 406, 407, 408, 412, 414, 415, 420, 421, 422, 425, 427, 428, 429, 430, 431, 440, 442, 445], "cpu": [1, 2, 3, 8, 10, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 107, 112, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 184, 191, 194, 195, 196, 198, 199, 200, 205, 208, 213, 215, 217, 218, 220, 224, 227, 228, 230, 236, 237, 238, 240, 242, 247, 251, 253, 263, 268, 269, 270, 272, 273, 274, 277, 283, 284, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 382, 420, 425, 426, 427, 428, 438, 439, 440, 441, 444], "slower": [1, 438], "than": [1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 32, 65, 84, 105, 112, 113, 116, 118, 126, 129, 133, 137, 140, 141, 151, 152, 153, 154, 158, 161, 162, 195, 208, 209, 218, 249, 260, 270, 272, 274, 275, 302, 306, 311, 318, 319, 323, 347, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 419, 420, 421, 425, 426, 427, 429, 430, 432, 438, 439, 440, 442, 444, 445], "one": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 103, 104, 105, 107, 108, 112, 113, 114, 116, 118, 119, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 180, 181, 184, 187, 190, 192, 194, 196, 197, 198, 205, 208, 210, 211, 215, 220, 223, 226, 227, 229, 230, 231, 236, 237, 239, 242, 244, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 281, 282, 285, 286, 287, 288, 289, 291, 293, 294, 295, 297, 302, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 359, 362, 364, 365, 366, 367, 371, 372, 384, 386, 395, 397, 398, 402, 406, 416, 419, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 445], "cuda": [1, 2, 3, 7, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 125, 126, 129, 133, 135, 136, 137, 140, 141, 153, 154, 161, 162, 191, 207, 214, 215, 230, 236, 237, 240, 242, 247, 268, 269, 272, 273, 318, 394, 425, 426, 427, 428, 438, 439, 441, 445], "multipl": [1, 2, 3, 5, 8, 15, 16, 17, 20, 22, 23, 24, 25, 26, 53, 65, 69, 78, 79, 80, 84, 100, 107, 108, 120, 124, 125, 138, 139, 140, 153, 161, 162, 188, 190, 195, 197, 206, 209, 210, 220, 223, 227, 228, 235, 244, 268, 272, 274, 280, 283, 284, 306, 311, 315, 316, 318, 319, 322, 331, 338, 346, 349, 359, 370, 416, 420, 421, 422, 425, 426, 427, 430, 432, 433, 438, 439, 440, 442, 444], "infer": [1, 3, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 244, 270, 274, 283, 310, 315, 319, 336, 382, 425, 427, 429, 433, 435, 442, 444], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 105, 112, 113, 124, 125, 126, 127, 128, 129, 132, 133, 138, 139, 140, 141, 147, 148, 149, 153, 154, 161, 162, 167, 191, 205, 210, 211, 227, 235, 236, 237, 244, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 319, 320, 321, 322, 325, 332, 338, 352, 384, 391, 397, 414, 415, 416, 419, 420, 421, 422, 425, 426, 427, 428, 431, 432, 433, 434, 435, 438, 439, 440, 444], "dispatch": [1, 3, 23, 24, 25, 26, 39, 65, 77, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 302, 314, 384, 425, 445], "avail": [1, 2, 3, 4, 6, 13, 16, 17, 20, 22, 23, 24, 25, 26, 62, 69, 78, 79, 105, 111, 112, 113, 124, 125, 127, 128, 137, 138, 139, 145, 146, 151, 152, 153, 155, 156, 158, 163, 164, 165, 166, 180, 183, 186, 205, 207, 264, 293, 315, 319, 347, 384, 414, 415, 425, 426, 427, 428, 429, 430, 431, 438, 439, 440, 442, 445], "speed": [1, 2, 4, 8, 35, 126, 129, 133, 140, 141, 153, 154, 161, 162, 421, 425, 426, 427, 428, 438, 439, 440, 442, 444], "avoid": [1, 2, 3, 32, 39, 44, 55, 65, 66, 72, 77, 98, 100, 112, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 177, 187, 205, 235, 237, 244, 245, 247, 250, 299, 306, 318, 323, 331, 332, 346, 349, 352, 405, 427, 429, 439], "oom": [1, 3, 45, 46, 47, 61, 63, 70, 84, 98, 100, 120], "choic": [1, 2, 57, 153, 195, 420, 421, 425, 426, 432, 438, 439], "pass": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 32, 36, 37, 39, 44, 48, 55, 57, 62, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 82, 83, 96, 98, 100, 105, 107, 112, 113, 118, 120, 126, 129, 130, 131, 133, 134, 140, 141, 144, 148, 153, 154, 155, 156, 161, 162, 165, 183, 184, 187, 192, 194, 195, 198, 208, 209, 218, 235, 239, 244, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 281, 282, 283, 285, 286, 289, 291, 292, 294, 295, 297, 301, 302, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 330, 331, 332, 345, 346, 347, 349, 350, 352, 354, 355, 364, 365, 366, 367, 368, 382, 399, 402, 414, 415, 416, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 442, 444, 445], "ie": [1, 2, 3, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 89, 104, 113, 126, 129, 133, 137, 140, 141, 150, 153, 154, 161, 162, 179, 180, 187, 202, 227, 230, 239, 244, 270, 274, 310, 318, 420, 421, 426, 439], "store": [1, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 42, 43, 44, 45, 46, 47, 50, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 83, 84, 94, 96, 98, 99, 100, 101, 104, 105, 107, 112, 118, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 195, 205, 232, 243, 244, 245, 247, 249, 251, 252, 277, 291, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 391, 418, 422, 425, 427, 428, 431, 433, 435, 438, 439, 441, 445], "while": [1, 2, 3, 7, 8, 28, 32, 39, 44, 55, 65, 66, 67, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 220, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 337, 345, 346, 349, 420, 421, 425, 427, 428, 431, 433, 434, 438, 439, 440, 441, 442, 444], "wait": [1, 24, 26, 27, 67, 163, 428, 440], "also": [1, 2, 3, 8, 9, 11, 16, 17, 28, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 69, 70, 72, 77, 78, 79, 82, 84, 94, 98, 99, 100, 105, 107, 112, 113, 118, 120, 126, 129, 133, 139, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 175, 177, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 197, 199, 200, 201, 203, 205, 206, 207, 211, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 247, 248, 254, 255, 268, 272, 275, 295, 314, 315, 320, 321, 322, 329, 330, 332, 333, 334, 336, 337, 338, 343, 345, 349, 352, 354, 364, 371, 372, 382, 384, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 442, 444, 445], "impact": [1, 2, 3, 139, 194, 198, 250, 329, 331, 346, 349, 351, 426, 428, 438, 439], "memori": [1, 3, 8, 26, 32, 35, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 67, 70, 72, 77, 83, 84, 96, 98, 99, 103, 126, 129, 130, 133, 137, 140, 141, 153, 154, 161, 162, 187, 191, 215, 230, 236, 237, 240, 242, 244, 247, 262, 272, 273, 318, 416, 418, 422, 425, 426, 428, 438, 442, 444], "manag": [1, 8, 18, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 252, 270, 274, 305, 360, 361, 364, 365, 366, 367, 392, 397, 420, 428, 429, 432, 444], "kei": [1, 2, 7, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 104, 105, 107, 110, 112, 113, 118, 126, 129, 133, 138, 139, 140, 141, 153, 154, 155, 156, 161, 162, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 251, 253, 263, 264, 267, 270, 274, 276, 277, 291, 293, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 382, 384, 396, 397, 398, 400, 401, 402, 406, 421, 422, 425, 427, 428, 429, 430, 432, 437, 438, 439, 440, 442, 444, 445], "control": [1, 3, 5, 8, 20, 28, 29, 36, 37, 38, 48, 69, 74, 78, 79, 105, 107, 112, 126, 127, 128, 129, 133, 139, 140, 141, 144, 153, 154, 155, 156, 161, 162, 178, 197, 257, 258, 259, 260, 270, 274, 276, 277, 291, 295, 302, 318, 319, 320, 329, 331, 332, 346, 347, 349, 353, 364, 369, 377, 382, 392, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 440, 442, 444], "which": [1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 107, 110, 111, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 167, 187, 188, 194, 198, 203, 205, 207, 208, 210, 211, 215, 216, 218, 228, 230, 231, 234, 236, 237, 238, 240, 244, 247, 248, 263, 268, 269, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 288, 290, 300, 307, 308, 309, 310, 314, 315, 318, 319, 320, 321, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 362, 364, 365, 366, 367, 382, 384, 393, 398, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 445], "storing_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 426, 439], "dure": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 62, 63, 66, 67, 68, 69, 71, 72, 78, 79, 83, 94, 96, 101, 105, 107, 110, 112, 126, 129, 130, 133, 139, 140, 141, 153, 154, 155, 156, 161, 162, 183, 184, 187, 190, 194, 195, 198, 200, 202, 203, 205, 209, 213, 225, 227, 230, 232, 234, 235, 237, 238, 239, 244, 245, 247, 250, 252, 253, 270, 274, 281, 314, 364, 366, 367, 397, 402, 421, 425, 426, 427, 428, 431, 432, 433, 435, 438, 439, 440, 442, 445], "heurist": [1, 4, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 249, 314, 319, 425, 429, 433, 445], "usual": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 110, 118, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 235, 284, 349, 354, 363, 364, 365, 366, 367, 368, 383, 419, 420, 421, 422, 425, 426, 427, 428, 431, 433, 434, 439, 442, 445], "same": [1, 2, 3, 4, 20, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 111, 112, 113, 116, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 148, 149, 153, 154, 155, 156, 158, 161, 162, 180, 187, 194, 195, 197, 198, 203, 205, 208, 209, 210, 211, 227, 235, 236, 237, 244, 247, 248, 254, 255, 269, 270, 273, 274, 275, 278, 279, 280, 281, 291, 299, 310, 322, 330, 332, 345, 347, 350, 352, 354, 355, 359, 421, 425, 426, 427, 430, 431, 433, 437, 438, 439, 441, 442, 445], "behavior": [1, 2, 3, 4, 16, 17, 26, 32, 39, 44, 55, 65, 66, 72, 77, 82, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 188, 194, 198, 211, 216, 229, 237, 245, 247, 250, 270, 271, 274, 300, 337, 345, 354, 382, 392, 397, 420, 426, 428, 438, 439, 440, 442], "besid": 1, "those": [1, 2, 3, 5, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 194, 198, 205, 211, 230, 231, 234, 238, 274, 290, 315, 319, 320, 321, 404, 414, 415, 420, 425, 426, 430, 431, 439, 440, 445], "choos": [1, 11, 57, 126, 144, 270, 274, 349, 418, 421, 425, 426, 427, 429, 438, 439, 442, 444], "follow": [1, 2, 3, 6, 7, 8, 11, 14, 19, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 77, 82, 84, 105, 112, 113, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 147, 150, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 175, 183, 187, 207, 215, 240, 244, 245, 247, 254, 255, 268, 270, 272, 274, 275, 312, 315, 316, 317, 328, 329, 330, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 384, 402, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 437, 438, 439, 440, 442, 444, 445], "max_frames_per_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 405, 425, 427, 444], "frame": [1, 2, 11, 16, 17, 20, 22, 23, 24, 25, 26, 55, 187, 203, 247, 249, 267, 291, 314, 383, 384, 386, 389, 391, 395, 397, 402, 405, 406, 425, 426, 427, 428, 431, 438, 439, 442, 444, 445], "call": [1, 2, 3, 7, 8, 11, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 101, 105, 106, 107, 111, 112, 114, 116, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 158, 161, 162, 163, 164, 167, 176, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 281, 282, 283, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 318, 319, 321, 322, 325, 331, 332, 346, 347, 349, 352, 354, 363, 364, 365, 366, 367, 382, 383, 386, 397, 421, 422, 426, 427, 428, 429, 430, 431, 433, 434, 438, 439, 440, 442, 444, 445], "frames_per_batch": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 55, 67, 75, 184, 187, 220, 270, 274, 405, 425, 426, 427, 428, 429, 433, 435, 438, 439, 442, 444], "each": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 32, 36, 37, 39, 43, 44, 48, 50, 51, 53, 55, 56, 65, 66, 69, 71, 72, 74, 76, 77, 78, 84, 105, 107, 110, 112, 113, 115, 118, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 180, 195, 206, 208, 209, 215, 220, 223, 228, 229, 230, 231, 235, 236, 242, 244, 245, 247, 248, 249, 264, 267, 268, 269, 270, 272, 274, 280, 281, 285, 292, 293, 301, 305, 311, 312, 317, 319, 321, 370, 373, 374, 375, 376, 378, 379, 380, 381, 384, 397, 399, 414, 415, 421, 425, 426, 427, 428, 431, 432, 433, 435, 438, 439, 440, 441, 442, 444, 445], "init_random_fram": [1, 16, 17, 20, 22, 23, 24, 25, 26, 405, 425, 426, 429, 435], "rand_step": [1, 2, 3, 41, 75, 126, 127, 128, 129, 130, 132, 133, 134, 140, 141, 142, 143, 147, 148, 149, 153, 154, 161, 162, 206, 230, 244, 440, 444, 445], "reset_at_each_it": [1, 16, 17, 20, 22, 23, 24, 25, 26, 425], "split_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 425, 426, 427], "trajectori": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 42, 43, 55, 56, 76, 78, 84, 104, 105, 112, 113, 118, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 187, 216, 228, 235, 247, 251, 274, 277, 291, 349, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 393, 418, 421, 425, 426, 427, 428, 430, 433, 435, 440, 444, 445], "pad": [1, 2, 3, 28, 64, 80, 187, 195, 234, 254, 255, 257, 258, 274, 278, 279, 280, 399], "along": [1, 2, 3, 16, 17, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 100, 105, 107, 112, 113, 118, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 172, 186, 187, 188, 209, 211, 213, 216, 223, 227, 233, 247, 274, 275, 278, 279, 284, 311, 315, 318, 319, 332, 347, 354, 425, 426, 428, 430, 432, 438, 439, 440, 442, 444], "point": [1, 2, 3, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 97, 104, 105, 108, 118, 119, 122, 123, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 276, 318, 328, 339, 402, 419, 426, 427, 437, 438, 439, 440, 442, 444, 445], "boolean": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 113, 133, 179, 183, 216, 228, 278, 279, 291, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 422, 428], "repres": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 41, 48, 50, 57, 74, 75, 77, 78, 84, 99, 126, 127, 128, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 165, 166, 203, 216, 232, 244, 247, 264, 278, 279, 293, 299, 311, 312, 316, 317, 358, 364, 399, 420, 425, 427, 428, 429, 430, 431, 432, 438, 439], "valid": [1, 2, 3, 28, 61, 63, 64, 83, 84, 94, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 168, 183, 216, 235, 237, 247, 249, 254, 255, 275, 278, 279, 291, 331, 338, 346, 349, 352, 364, 365, 366, 367, 399, 422, 429, 445], "exploration_typ": [1, 16, 17, 20, 22, 23, 24, 25, 26, 397, 418, 420, 425, 426], "strategi": [1, 2, 3, 20, 110, 144, 180, 267, 279, 287, 420, 422, 425, 426, 429, 431, 438, 439, 442, 444], "reset_when_don": [1, 16, 17, 20, 22], "its": [1, 2, 3, 4, 5, 7, 9, 11, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 91, 100, 107, 112, 113, 126, 129, 133, 139, 140, 141, 147, 153, 154, 155, 156, 161, 162, 165, 168, 184, 186, 187, 192, 199, 207, 228, 229, 230, 235, 237, 243, 244, 245, 247, 248, 249, 254, 255, 270, 274, 278, 279, 280, 281, 290, 311, 315, 316, 319, 322, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 355, 362, 384, 402, 412, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445], "organ": [1, 2, 440, 442], "within": [1, 2, 3, 16, 17, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 99, 104, 105, 113, 126, 129, 132, 133, 134, 140, 141, 153, 154, 158, 161, 162, 179, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 245, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 305, 310, 312, 314, 317, 319, 322, 325, 326, 334, 339, 354, 362, 382, 384, 420, 421, 426, 429, 430, 431, 432, 433, 434, 435, 438, 440, 444], "differ": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 107, 110, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 144, 153, 154, 155, 156, 161, 162, 183, 187, 195, 196, 197, 208, 211, 218, 227, 235, 237, 239, 247, 248, 264, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 282, 293, 319, 345, 347, 349, 358, 364, 365, 366, 370, 371, 372, 397, 402, 404, 414, 415, 420, 421, 422, 425, 426, 427, 429, 430, 432, 434, 437, 438, 439, 440, 441, 442, 444, 445], "how": [1, 2, 3, 11, 14, 19, 23, 24, 25, 29, 32, 39, 44, 55, 62, 65, 66, 72, 77, 78, 104, 105, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 180, 195, 208, 247, 282, 315, 329, 331, 344, 346, 347, 349, 384, 386, 402, 419, 420, 425, 426, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "tabl": [1, 32, 420, 426, 431], "summar": [1, 3, 440], "what": [1, 3, 8, 11, 38, 39, 62, 82, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 178, 199, 230, 235, 316, 332, 343, 347, 354, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441, 442, 444, 445], "expect": [1, 2, 3, 4, 7, 32, 36, 39, 44, 50, 55, 65, 66, 69, 72, 77, 82, 83, 105, 111, 112, 126, 129, 133, 140, 141, 147, 150, 153, 154, 161, 162, 167, 180, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 268, 269, 270, 272, 273, 274, 280, 281, 291, 312, 318, 321, 329, 330, 331, 332, 333, 334, 336, 337, 338, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 359, 362, 406, 419, 420, 421, 422, 425, 427, 428, 430, 431, 432, 433, 438, 439, 440, 442, 445], "n": [1, 2, 3, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 197, 202, 239, 247, 268, 269, 272, 277, 288, 290, 291, 314, 319, 329, 330, 338, 347, 363, 399, 422, 426, 428, 429, 442, 444, 445], "b": [1, 2, 3, 7, 8, 28, 36, 37, 39, 45, 46, 47, 48, 61, 63, 65, 69, 70, 71, 72, 74, 77, 78, 79, 84, 98, 99, 118, 126, 205, 238, 268, 269, 272, 273, 280, 281, 283, 284, 292, 301, 322, 364, 365, 366, 367, 368, 370, 384, 426, 442], "cat_result": [1, 16, 17], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 104, 105, 107, 111, 112, 113, 118, 126, 129, 130, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162, 167, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 205, 206, 207, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 247, 248, 268, 270, 272, 274, 291, 311, 318, 329, 353, 364, 365, 366, 367, 368, 370, 384, 391, 402, 404, 416, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "p": [1, 2, 4, 107, 110, 130, 159, 160, 252, 253], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 39, 44, 55, 65, 66, 72, 77, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 155, 156, 161, 162, 191, 194, 196, 198, 206, 215, 220, 224, 229, 230, 233, 235, 236, 237, 240, 242, 243, 245, 247, 248, 268, 271, 272, 275, 280, 295, 299, 300, 318, 319, 321, 328, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 404, 414, 415, 416, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 445], "case": [1, 3, 4, 5, 7, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 103, 104, 105, 107, 118, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 167, 194, 195, 196, 198, 206, 211, 230, 233, 237, 238, 248, 274, 275, 281, 282, 315, 318, 319, 321, 322, 328, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 384, 393, 404, 414, 415, 416, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 434, 438, 439, 440, 442, 444, 445], "dimens": [1, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 69, 70, 71, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 100, 105, 112, 113, 118, 120, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 161, 162, 165, 166, 172, 180, 186, 187, 188, 202, 209, 211, 213, 216, 223, 226, 227, 230, 233, 239, 244, 254, 255, 256, 261, 262, 270, 272, 274, 275, 278, 279, 280, 283, 284, 289, 292, 296, 297, 298, 299, 302, 311, 314, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 416, 418, 421, 425, 426, 427, 428, 430, 438, 439, 440, 442], "time": [1, 2, 3, 4, 7, 8, 16, 17, 20, 23, 24, 25, 26, 28, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 95, 98, 107, 118, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 144, 150, 153, 154, 155, 156, 158, 161, 162, 177, 178, 186, 187, 188, 195, 209, 216, 223, 230, 231, 232, 235, 237, 244, 247, 253, 265, 268, 272, 274, 291, 305, 314, 319, 330, 331, 332, 338, 341, 345, 346, 347, 349, 350, 352, 354, 355, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 402, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 444, 445], "adapt": [1, 29, 181, 209, 228, 244, 250, 346, 425, 429, 440], "equal": [1, 16, 17, 22, 32, 84, 105, 112, 113, 126, 140, 148, 151, 152, 153, 161, 210, 211, 254, 255, 268, 270, 272, 274, 275, 278, 279, 281, 353, 358, 393, 414, 415, 425, 427, 441], "introduc": [1, 2, 153, 161, 268, 270, 272, 274, 291, 425, 438], "some": [1, 2, 3, 4, 7, 8, 9, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 107, 118, 120, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 167, 183, 215, 230, 237, 240, 247, 257, 270, 274, 297, 319, 320, 321, 384, 393, 405, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 442, 444, 445], "confus": [1, 30, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247], "otherbetter": [1, 3, 8, 9, 16, 17, 28, 139, 270, 274, 421, 427, 430, 440, 444], "consist": [1, 2, 3, 32, 36, 37, 39, 44, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 243, 247, 252, 255, 275, 425, 426, 427, 440, 441, 445], "interact": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 237, 315, 319, 425, 427, 429, 430, 431, 433, 438, 439, 440, 445], "keep": [1, 2, 3, 4, 7, 8, 17, 62, 69, 78, 79, 107, 111, 118, 126, 153, 161, 178, 211, 215, 242, 244, 245, 247, 291, 314, 384, 395, 402, 425, 426, 427, 428, 433, 434, 435, 439, 440, 442, 445], "separ": [1, 2, 4, 8, 16, 17, 22, 23, 25, 26, 28, 36, 37, 48, 69, 74, 78, 79, 187, 215, 242, 330, 333, 336, 338, 350, 352, 354, 355, 421, 425, 426, 431, 432, 438, 439, 442, 445], "interchang": [1, 280, 281, 427, 430, 434, 441, 442], "between": [1, 2, 3, 4, 5, 16, 17, 18, 22, 26, 29, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 100, 105, 107, 108, 111, 112, 113, 120, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 167, 197, 210, 221, 232, 235, 237, 244, 247, 254, 255, 263, 268, 270, 274, 275, 280, 281, 312, 315, 319, 329, 331, 332, 333, 336, 337, 338, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 364, 397, 402, 421, 425, 426, 428, 429, 433, 438, 439, 440, 442, 445], "wherea": [1, 2, 27, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 197, 235, 237, 247, 332, 347, 352, 422, 434], "correspond": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 104, 105, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 205, 215, 230, 235, 237, 242, 244, 245, 247, 252, 267, 270, 272, 274, 278, 279, 291, 315, 319, 332, 334, 337, 338, 352, 362, 364, 365, 366, 367, 368, 420, 425, 426, 427, 429, 430, 432, 433, 434, 438, 439, 440, 441], "sub": [1, 2, 3, 16, 17, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 105, 112, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 216, 235, 247, 320, 321, 393, 402, 420, 421, 425, 426, 427, 433, 437, 444, 445], "doesn": [1, 4, 32, 39, 44, 55, 65, 66, 72, 77, 118, 126, 129, 133, 140, 141, 148, 153, 154, 161, 162, 194, 198, 247, 248, 429, 430], "understood": [1, 425], "serv": [1, 23, 25, 26, 135, 442, 444, 445], "basi": [1, 118, 280, 442, 444], "we": [1, 2, 3, 5, 7, 9, 11, 28, 29, 32, 36, 39, 44, 50, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 98, 111, 113, 118, 124, 125, 126, 129, 130, 133, 137, 138, 139, 140, 141, 153, 154, 161, 162, 167, 187, 195, 207, 215, 218, 224, 235, 240, 243, 244, 245, 247, 248, 251, 274, 280, 281, 282, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 384, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "anoth": [1, 2, 3, 8, 14, 15, 18, 19, 21, 50, 77, 82, 99, 105, 112, 126, 129, 132, 133, 134, 137, 140, 141, 153, 154, 161, 162, 184, 192, 194, 196, 198, 230, 236, 275, 315, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 421, 425, 427, 428, 429, 431, 432, 437, 438, 439, 440, 445], "wise": [1, 209], "requir": [1, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 99, 104, 105, 112, 113, 126, 129, 133, 137, 140, 141, 148, 153, 154, 158, 161, 162, 184, 187, 191, 205, 215, 227, 230, 235, 236, 237, 240, 242, 245, 247, 252, 270, 274, 275, 282, 302, 318, 319, 320, 321, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 382, 384, 386, 420, 422, 425, 426, 427, 428, 430, 431, 432, 434, 438, 439, 440, 442, 444, 445], "op": [1, 15, 18, 21, 30, 31, 33, 34, 35, 40, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 210, 243, 249, 252, 267, 384, 404], "sinc": [1, 2, 3, 4, 5, 7, 11, 28, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 104, 105, 113, 118, 126, 129, 133, 140, 141, 153, 154, 155, 156, 158, 161, 162, 167, 178, 192, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 311, 312, 314, 316, 317, 322, 325, 382, 384, 421, 425, 426, 427, 428, 430, 431, 432, 438, 440, 441, 442, 444, 445], "goal": [1, 3, 4, 141, 229, 425, 426, 427, 428, 439, 440], "policy_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 426], "explicitli": [1, 2, 3, 4, 35, 83, 95, 96, 103, 107, 183, 290, 315, 392, 421, 426, 428, 433, 438, 439, 442], "do": [1, 2, 3, 4, 7, 57, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 178, 180, 216, 230, 235, 243, 244, 270, 274, 281, 283, 308, 319, 347, 364, 384, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 444, 445], "deepcopi": [1, 282, 347, 438], "structur": [1, 3, 7, 45, 46, 47, 50, 57, 61, 62, 63, 69, 70, 71, 78, 79, 82, 83, 84, 99, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 194, 198, 230, 280, 291, 329, 338, 349, 352, 364, 365, 366, 367, 368, 418, 421, 425, 427, 428, 430, 433, 438, 439, 440, 441], "place": [1, 2, 3, 29, 32, 38, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 98, 100, 107, 110, 112, 120, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 166, 179, 183, 191, 199, 215, 230, 236, 237, 240, 242, 243, 244, 247, 282, 310, 314, 318, 399, 404, 405, 421, 426, 427, 431, 434, 438, 439, 440, 442], "instanti": [1, 2, 3, 16, 17, 26, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 78, 79, 82, 84, 104, 105, 107, 137, 139, 183, 205, 230, 281, 364, 365, 366, 367, 368, 382, 425, 426, 431, 432, 434, 438, 439, 440, 442, 445], "all": [1, 2, 3, 4, 8, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 107, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 155, 156, 161, 162, 165, 166, 168, 170, 172, 176, 178, 180, 186, 187, 190, 191, 194, 195, 196, 198, 201, 207, 210, 211, 215, 223, 225, 227, 230, 231, 236, 237, 240, 242, 244, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 281, 282, 285, 286, 289, 291, 294, 295, 297, 302, 305, 310, 312, 314, 317, 318, 319, 321, 322, 325, 326, 329, 330, 332, 341, 345, 347, 349, 350, 351, 352, 354, 355, 359, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 398, 402, 405, 414, 415, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 444, 445], "graph": [1, 3, 4, 8, 39, 65, 77, 124, 125, 138, 139, 360, 361, 425, 429, 440], "reli": [1, 2, 3, 11, 28, 66, 72, 230, 268, 269, 270, 272, 273, 274, 329, 349, 421, 425, 427, 429, 431, 433, 440, 445], "third": [1, 211, 232, 312, 438, 439], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 425, 426, 427, 428, 429, 432, 433, 438, 439, 440, 444, 445], "limit": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 207, 329, 331, 346, 347, 349, 351, 421, 425, 426, 428, 438, 439, 440], "chart": 1, "show": [1, 2, 11, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 281, 384, 425, 427, 428, 429, 438, 439, 440, 442, 444], "decis": [1, 2, 3, 256, 261, 289, 310, 335, 348, 420, 428, 430, 431, 438, 439, 442, 445], "multiprocess": [1, 2, 3, 15, 16, 17, 23, 24, 25, 69, 78, 79, 99, 107, 130, 131, 153, 161, 244, 245, 425, 426, 427, 428, 433, 438, 439, 440, 441, 445], "ensur": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 72, 77, 78, 84, 104, 105, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 187, 195, 215, 228, 237, 240, 244, 245, 247, 270, 274, 311, 420, 426, 427, 440, 442], "flexibl": [1, 3, 9, 148, 356, 421, 422, 425, 429, 442, 445], "extens": [1, 2, 62, 69, 78, 79, 113, 252, 422, 442], "mechan": [1, 4, 15, 18, 21, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 426, 432, 440], "accommod": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 430, 431], "variou": [1, 2, 3, 15, 126, 236, 270, 274, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 356, 362, 384, 414, 415, 425, 426, 427, 429, 430, 431, 432, 434, 438, 439, 442, 445], "deploy": [1, 429], "scenario": [1, 2, 21, 145, 146, 153, 165, 166, 235, 382, 425, 431, 438, 439, 440], "facilit": [1, 2, 3, 7, 214, 215, 230, 240, 242, 307, 308, 309, 420, 425, 428, 431, 440], "localweightupdaterbas": [1, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26], "remoteweightupdaterbas": [1, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26], "These": [1, 2, 7, 50, 71, 121, 165, 215, 242, 245, 420, 421, 425, 427, 438, 439, 440, 442, 445], "base": [1, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 32, 50, 62, 69, 72, 78, 79, 83, 109, 115, 118, 119, 121, 122, 124, 125, 126, 129, 133, 137, 138, 139, 140, 141, 147, 148, 149, 153, 154, 161, 162, 165, 178, 196, 220, 234, 236, 240, 241, 270, 274, 280, 282, 307, 313, 329, 330, 332, 333, 334, 336, 337, 338, 340, 345, 349, 350, 351, 352, 354, 355, 391, 402, 420, 421, 422, 425, 426, 428, 430, 431, 432, 434, 438, 439, 440, 442, 445], "interfac": [1, 3, 14, 19, 136, 150, 275, 283, 420, 421, 425, 427, 429, 434, 440, 442], "logic": [1, 3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 438], "allow": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 57, 59, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 84, 99, 105, 107, 110, 112, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 178, 183, 184, 218, 245, 247, 248, 275, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 356, 358, 362, 420, 422, 425, 427, 428, 429, 430, 431, 432, 438, 439, 440, 442, 444, 445], "tailor": [1, 140, 444], "need": [1, 2, 3, 4, 7, 8, 10, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 61, 63, 65, 66, 72, 77, 82, 114, 118, 126, 129, 133, 137, 140, 141, 144, 153, 154, 155, 156, 161, 162, 187, 190, 192, 195, 202, 208, 215, 218, 231, 235, 236, 237, 242, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 283, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 315, 316, 317, 318, 322, 325, 328, 338, 351, 352, 363, 368, 384, 402, 416, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 444, 445], "respons": [1, 2, 3, 8, 14, 16, 17, 19, 20, 23, 25, 26, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 402, 432, 433, 445], "It": [1, 2, 3, 4, 7, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 71, 72, 73, 74, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 99, 107, 110, 118, 123, 126, 129, 133, 135, 140, 141, 147, 148, 153, 154, 155, 156, 161, 162, 165, 166, 167, 178, 184, 186, 187, 199, 205, 207, 211, 216, 229, 235, 237, 243, 245, 247, 249, 257, 259, 265, 267, 280, 281, 290, 291, 292, 294, 295, 301, 302, 312, 314, 317, 319, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 355, 362, 363, 364, 382, 391, 397, 419, 420, 421, 425, 426, 428, 429, 430, 438, 439, 440, 441, 442, 444, 445], "particularli": [1, 2, 429, 444, 445], "machin": [1, 2, 7, 23, 24, 25, 55, 137, 438, 439, 444], "fetch": [1, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 124, 125, 127, 128, 207, 431, 441, 442], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "appli": [1, 2, 3, 4, 15, 18, 20, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 210, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 247, 252, 268, 272, 282, 299, 311, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355, 364, 382, 398, 422, 425, 426, 427, 433, 438, 440, 444, 445], "ask": [1, 2, 3, 8, 105, 112, 113, 195, 384, 427, 428, 430, 431, 438, 439, 441, 445], "contrast": [1, 3, 268, 290, 344, 442], "situat": [1, 2, 140, 145, 146, 195], "decid": [1, 62, 69, 78, 79, 438, 444], "handl": [1, 2, 3, 15, 16, 17, 23, 25, 26, 32, 39, 44, 55, 57, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 244, 245, 247, 274, 275, 329, 347, 349, 402, 414, 415, 425, 426, 427, 428, 430, 432, 439, 442], "essenti": [1, 2, 3, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 426, 430, 438, 440, 442], "system": [1, 4, 5, 96, 427, 438, 439, 440], "kept": [1, 3, 28, 111, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 178, 197, 224, 271, 299, 300, 432, 438], "central": [1, 2, 15, 19, 280, 281, 282, 425, 426, 430, 438, 439, 442], "divers": [1, 4, 153, 161], "benefici": [1, 2], "involv": [1, 132, 134, 135, 145, 146, 158, 184, 187, 235, 270, 274, 430, 432], "complex": [1, 2, 15, 18, 21, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318, 425, 426, 430, 431], "architectur": [1, 4, 261, 432, 438, 439, 444], "special": [1, 3, 86, 88, 418, 425, 428, 429, 445], "hardwar": [1, 3, 429], "By": [1, 2, 3, 36, 37, 48, 59, 74, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 153, 154, 155, 156, 158, 161, 162, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 209, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 302, 319, 347, 392, 397, 416, 421, 425, 428, 438, 441, 442, 445], "retriev": [1, 3, 14, 15, 18, 19, 21, 45, 46, 47, 50, 61, 62, 63, 65, 67, 68, 69, 70, 78, 79, 84, 107, 110, 112, 113, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 178, 188, 196, 199, 211, 251, 254, 277, 314, 315, 319, 322, 326, 329, 330, 331, 332, 334, 346, 349, 350, 352, 354, 355, 362, 364, 365, 366, 367, 416, 422, 426, 427, 431, 440, 445], "seamless": [1, 2, 275], "integr": [1, 2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 260, 270, 274, 277, 318, 420, 430, 431, 433, 438, 439, 440, 441], "infrastructur": [1, 3, 438, 439], "vanillalocalweightupdat": [1, 20], "multiprocessedremoteweightupd": [1, 16, 17], "rayremoteweightupdat": [1, 26], "rpcremoteweightupdat": [1, 25], "distributedremoteweightupdat": [1, 23], "cover": [1, 3, 132, 134, 419, 427, 430, 433, 434, 440, 444], "rang": [1, 2, 3, 4, 8, 62, 67, 68, 69, 71, 78, 79, 98, 100, 107, 118, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 161, 162, 195, 220, 233, 244, 247, 248, 269, 273, 290, 346, 354, 355, 421, 422, 425, 427, 428, 429, 432, 433, 435, 438, 439, 440, 442, 444], "typic": [1, 2, 3, 4, 8, 15, 18, 20, 21, 23, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 195, 199, 229, 247, 288, 290, 315, 330, 332, 347, 349, 352, 420, 421, 422, 427, 429, 430, 432, 433, 438, 439, 440], "larg": [1, 3, 4, 35, 45, 46, 47, 61, 63, 70, 84, 112, 113, 194, 198, 240, 329, 331, 346, 349, 351, 426, 427, 438, 439, 442], "scale": [1, 3, 4, 29, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 207, 211, 222, 229, 233, 244, 245, 250, 265, 271, 294, 295, 299, 300, 307, 308, 309, 315, 319, 321, 329, 330, 332, 345, 349, 350, 351, 352, 400, 406, 416, 420, 425, 426, 427, 428, 431, 439, 444], "design": [1, 15, 32, 39, 44, 55, 57, 59, 65, 66, 72, 77, 110, 116, 123, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 180, 187, 205, 216, 235, 237, 245, 247, 310, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 418, 425, 426, 427, 428, 430, 431, 432, 437, 438, 439, 440, 442, 444, 445], "leverag": [1, 18, 26, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 425, 439, 445], "latenc": [1, 2], "account": [1, 2, 98, 100, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 183, 192, 278, 279, 420, 426, 428, 442, 445], "delai": [1, 27, 354, 432], "transfer": [1, 13, 16, 17, 20, 22, 23, 24, 25, 26, 319], "receiv": [1, 2, 3, 18, 32, 39, 44, 55, 65, 66, 71, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 237, 247, 275, 370, 421, 425, 427, 432, 437, 440], "manner": [1, 2, 133, 215, 240, 420, 425, 426, 427, 433, 437, 440, 442], "maintain": [1, 3, 5, 9, 38, 57, 187, 245, 440], "import": [1, 2, 3, 4, 6, 10, 11, 16, 17, 20, 22, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 171, 172, 177, 178, 179, 180, 181, 183, 184, 186, 187, 190, 192, 195, 199, 200, 205, 206, 207, 208, 211, 213, 215, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 236, 238, 242, 244, 247, 248, 251, 253, 257, 258, 259, 260, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 282, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 382, 384, 395, 397, 412, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "stale": 1, "lead": [1, 2, 3, 4, 8, 10, 28, 36, 37, 48, 55, 62, 69, 74, 84, 111, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 161, 162, 230, 248, 271, 292, 299, 300, 305, 425, 428, 429, 438, 439, 440, 442, 444], "suboptim": 1, "scalabl": 1, "As": [1, 2, 3, 4, 55, 69, 78, 79, 82, 107, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 220, 262, 319, 364, 420, 425, 426, 427, 428, 429, 430, 432, 433, 438, 439, 440, 441, 442, 444, 445], "grow": [1, 3, 99], "overhead": [1, 2, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 178, 319], "broadcast": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 262, 338, 352], "minim": [1, 126, 129, 133, 140, 141, 153, 154, 161, 162, 386, 442], "bottleneck": [1, 3, 8, 105, 112, 113], "achiev": [1, 2, 3, 4, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 179, 229, 247, 253, 315, 399, 422, 425, 426, 427, 428, 429, 438, 439, 440, 442, 444, 445], "robust": [1, 216, 250], "varieti": [1, 3, 11], "remain": [1, 111, 186, 196, 197, 207, 229, 284, 432], "date": [1, 15, 18, 126, 186, 387], "simplest": [1, 39, 65, 77, 118, 322, 425, 427, 428, 431, 438, 439, 442, 445], "transit": [1, 32, 39, 44, 55, 65, 66, 72, 77, 105, 113, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 250, 252, 324, 425, 428, 430, 431, 433, 438, 440, 442], "sampl": [1, 4, 8, 9, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 116, 118, 120, 126, 129, 133, 140, 141, 147, 150, 153, 154, 161, 162, 169, 176, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 249, 251, 262, 267, 271, 277, 278, 279, 287, 289, 290, 291, 294, 299, 300, 303, 306, 311, 312, 313, 315, 316, 317, 318, 319, 329, 330, 331, 332, 333, 334, 336, 346, 348, 349, 354, 355, 393, 399, 402, 405, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 433, 435, 438, 439, 441, 444, 445], "attent": [1, 2, 8, 140, 187, 425, 428, 445], "given": [1, 2, 3, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 105, 107, 112, 113, 126, 129, 133, 140, 141, 147, 151, 152, 153, 154, 161, 162, 163, 164, 178, 191, 195, 197, 205, 211, 215, 230, 234, 236, 237, 238, 240, 242, 244, 245, 247, 249, 251, 253, 264, 265, 267, 268, 270, 272, 274, 277, 282, 293, 297, 306, 311, 312, 314, 317, 318, 319, 320, 321, 323, 328, 333, 334, 336, 347, 363, 364, 365, 366, 367, 368, 370, 394, 397, 412, 420, 421, 422, 425, 426, 427, 430, 431, 432, 433, 434, 439, 440, 445], "built": [1, 2, 3, 5, 7, 107, 124, 125, 132, 138, 139, 150, 151, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 356, 362, 410, 412, 413, 416, 425, 426, 427, 428, 429, 432, 434, 440, 442, 445], "flatten": [1, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 118, 184, 202, 399, 418, 428, 439], "suffici": [1, 3, 4, 425], "preprocess": [1, 2, 83, 236, 426, 429], "popul": [1, 2, 3, 16, 17, 20, 26, 62, 67, 68, 69, 76, 78, 79, 107, 140, 206, 230, 262, 282, 347, 425, 427, 428, 431, 433, 440, 442], "replaybuff": [1, 2, 3, 16, 17, 20, 26, 41, 62, 67, 68, 75, 78, 79, 98, 99, 104, 105, 106, 107, 112, 113, 122, 187, 216, 220, 247, 334, 339, 362, 410, 412, 418, 427, 429, 433, 435, 438, 439, 441, 442, 444], "lazytensorstorag": [1, 2, 62, 69, 77, 78, 79, 104, 112, 113, 118, 220, 247, 427, 429, 435, 438, 439, 442], "lambda": [1, 2, 16, 17, 20, 22, 26, 27, 39, 50, 65, 69, 77, 84, 118, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 177, 184, 192, 205, 207, 230, 238, 247, 248, 253, 302, 311, 314, 315, 316, 340, 342, 343, 354, 364, 367, 375, 376, 380, 381, 382, 412, 421, 425, 426, 429, 438, 439, 441, 442, 444, 445], "reshap": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 112, 118, 184, 270, 274, 275, 290, 382, 427, 438, 439], "slice": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 105, 107, 112, 113, 180, 186, 187, 442], "recommend": [1, 2, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 112, 118, 137, 187, 282, 421, 433, 438, 439], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 101, 107, 118, 126, 129, 130, 133, 137, 140, 141, 153, 154, 155, 161, 162, 165, 166, 172, 178, 184, 187, 195, 205, 215, 235, 236, 237, 240, 243, 244, 247, 254, 255, 257, 258, 259, 260, 261, 262, 266, 270, 274, 275, 276, 280, 281, 310, 318, 319, 326, 332, 334, 339, 350, 352, 362, 384, 399, 406, 407, 408, 412, 414, 415, 420, 425, 426, 427, 428, 429, 431, 434, 438, 439, 440, 441, 442, 444, 445], "multidimension": [1, 2, 78, 104, 105, 442], "slicesampl": [1, 2, 105, 113, 187, 442], "sampler": [1, 2, 62, 67, 68, 69, 78, 79, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 118, 120, 187, 216, 290, 334, 339, 362, 425, 427, 438, 439, 442], "One": [1, 2, 4, 8, 30, 31, 35, 36, 37, 40, 48, 53, 54, 59, 60, 74, 83, 118, 124, 125, 153, 161, 187, 220, 240, 249, 287, 318, 322, 353, 358, 388, 425, 426, 442, 445], "must": [1, 2, 3, 7, 11, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 105, 107, 112, 113, 114, 115, 116, 118, 120, 124, 126, 129, 130, 133, 138, 140, 141, 151, 153, 154, 155, 156, 158, 161, 162, 163, 165, 175, 180, 183, 184, 187, 190, 192, 195, 199, 203, 205, 207, 209, 211, 213, 224, 227, 229, 230, 231, 234, 235, 237, 238, 239, 244, 247, 254, 255, 264, 270, 274, 275, 278, 279, 280, 281, 293, 306, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 353, 354, 355, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 421, 425, 426, 427, 428, 431, 437, 440, 442], "shape": [1, 2, 3, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 104, 107, 112, 118, 120, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 172, 178, 180, 184, 186, 188, 194, 195, 198, 199, 200, 205, 207, 208, 211, 213, 217, 218, 220, 224, 227, 228, 230, 233, 238, 244, 245, 246, 247, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 287, 288, 289, 290, 291, 292, 293, 298, 299, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 358, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 393, 399, 402, 412, 420, 421, 425, 426, 427, 428, 429, 431, 432, 435, 437, 438, 439, 441, 442, 444, 445], "clearli": [1, 2], "dimension": [1, 62, 66, 69, 77, 78, 79, 197, 270, 274, 364, 369, 377, 421, 439], "num_slic": [1, 2, 105, 112, 113, 442], "4": [1, 2, 3, 7, 30, 32, 36, 37, 41, 48, 50, 53, 54, 55, 59, 62, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 98, 99, 100, 107, 112, 113, 120, 124, 125, 126, 127, 128, 129, 133, 138, 139, 140, 141, 142, 143, 144, 147, 149, 153, 154, 159, 160, 161, 162, 180, 181, 183, 184, 187, 192, 199, 220, 227, 228, 229, 235, 244, 245, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 272, 273, 275, 277, 278, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321, 323, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 382, 383, 420, 424, 425, 426, 427, 428, 434, 438, 439, 440, 442, 443, 444, 445], "trajectory_kei": [1, 28, 112, 113], "traj_id": [1, 2, 3, 16, 17, 20, 28, 41, 75, 184, 220, 433, 442], "total_fram": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 55, 67, 75, 184, 187, 220, 402, 405, 412, 422, 425, 426, 427, 428, 429, 433, 435, 438, 439, 442, 444], "dim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 112, 187, 188, 209, 213, 226, 227, 230, 239, 244, 273, 297, 302, 314, 416, 421, 426, 427, 429, 438, 440, 442], "ndim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 100, 104, 105, 118, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 209, 247, 314], "parallelenv": [1, 2, 3, 16, 17, 20, 22, 25, 118, 126, 129, 133, 140, 141, 148, 154, 155, 156, 158, 161, 162, 235, 270, 274, 382, 413, 418, 425, 426, 427, 430, 437, 444, 445], "make_env": [1, 3, 153, 161, 166, 235, 244, 382, 407, 408, 425, 426, 444, 445], "regular": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 104, 110, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 250, 252, 263, 270, 274, 293, 312, 316, 317, 318, 319, 339, 349, 404, 418, 422, 425, 426, 429, 430, 431, 435, 442, 445], "behav": [1, 3, 135, 147, 268, 272, 287, 337, 345, 347, 429, 441], "accordingli": [1, 2, 3, 105, 192, 209, 228, 229, 272, 316, 428], "3": [1, 2, 3, 6, 7, 10, 11, 16, 17, 20, 22, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 84, 98, 100, 105, 107, 112, 113, 118, 120, 126, 127, 128, 129, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 172, 181, 183, 184, 187, 191, 192, 195, 197, 199, 200, 205, 207, 211, 213, 215, 217, 218, 220, 223, 224, 227, 228, 229, 230, 233, 235, 236, 237, 238, 240, 242, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 264, 266, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 287, 290, 292, 302, 306, 307, 308, 309, 311, 312, 315, 317, 318, 321, 322, 323, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 401, 420, 422, 424, 425, 426, 427, 428, 430, 431, 433, 434, 438, 439, 440, 442, 443, 444, 445], "isn": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 104, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 183, 199, 205, 311, 318, 431, 432, 434, 438, 439], "current": [1, 2, 3, 12, 14, 15, 16, 17, 18, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 102, 105, 107, 113, 126, 129, 133, 135, 140, 141, 148, 151, 152, 153, 154, 161, 162, 169, 178, 183, 184, 187, 205, 216, 229, 230, 231, 235, 236, 237, 245, 247, 265, 291, 295, 299, 303, 314, 329, 331, 332, 339, 346, 349, 351, 352, 387, 422, 425, 426, 427, 428, 432, 438, 439, 440, 442, 445], "fulli": [1, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 269, 273, 426, 429, 432, 440, 442], "ani": [1, 2, 3, 5, 8, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 107, 108, 111, 113, 114, 116, 118, 119, 120, 122, 123, 126, 129, 130, 133, 140, 141, 148, 153, 154, 155, 156, 161, 162, 163, 165, 166, 167, 179, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 247, 253, 254, 255, 261, 262, 275, 284, 290, 310, 314, 318, 319, 320, 321, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 364, 366, 367, 382, 384, 389, 402, 419, 421, 425, 426, 427, 428, 429, 431, 432, 438, 439, 440, 442, 444, 445], "consecut": [1, 3, 111, 137, 274, 291, 384, 428, 430, 433, 439, 442, 445], "won": [1, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 130, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162, 215, 242, 247, 329, 402, 416, 426, 427, 430, 431], "therebi": [1, 29, 382, 421, 425, 426], "interrupt": [1, 2, 133, 314, 370], "tool": [1, 2, 3, 5, 420, 421, 428, 430, 438, 440, 442, 445], "backend": [1, 3, 7, 23, 24, 26, 27, 84, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 171, 177, 248, 422, 425, 427, 428, 429, 430, 433, 434, 440], "gloo": [1, 23, 24, 27], "nccl": [1, 23, 24], "mpi": [1, 23, 24], "distributeddatacollector": [1, 27, 418], "rpc": [1, 25, 27, 68], "rpcdatacollector": [1, 27, 418], "launcher": [1, 23, 24, 25, 27], "rai": [1, 18, 26, 62, 67, 68, 69, 78, 79, 107], "submitit": [1, 23, 24, 25, 27], "mode": [1, 3, 6, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 148, 153, 154, 161, 162, 194, 198, 229, 237, 244, 245, 247, 252, 262, 270, 271, 274, 279, 287, 298, 299, 300, 305, 315, 319, 347, 382, 392, 397, 420, 421, 425, 426, 438, 439, 444, 445], "find": [1, 4, 6, 7, 23, 24, 25, 62, 64, 80, 112, 113, 249, 272, 291, 396, 400, 425, 426, 429, 431, 432, 438, 439], "folder": [1, 2, 45, 46, 47, 61, 63, 70, 84, 165, 187, 426], "wonder": 1, "why": [1, 2, 3, 178, 421, 438, 440, 445], "instead": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 35, 39, 44, 55, 65, 66, 67, 72, 77, 81, 84, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 187, 202, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 318, 322, 325, 329, 331, 332, 334, 337, 338, 339, 345, 346, 349, 350, 351, 352, 362, 364, 368, 372, 416, 421, 429, 430, 431, 435, 440, 442, 445], "lower": [1, 2, 3, 26, 32, 33, 190, 244, 294, 295, 322, 427, 438, 440], "io": [1, 11, 138, 139, 148, 151, 152, 163, 164, 272, 273, 429], "footprint": [1, 2, 442], "commun": [1, 2, 3, 141, 153, 161, 419, 427, 445], "yet": [1, 124, 125, 138, 441], "plai": [1, 3, 155, 156, 162, 187, 426, 427, 432, 442, 445], "role": [1, 3, 146, 426, 432, 445], "opposit": [1, 438], "direct": [1, 2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 268, 272, 347, 426, 432], "faster": [1, 2, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 148, 364, 365, 366, 367, 428, 429, 438, 439], "share": [1, 3, 6, 8, 28, 45, 46, 47, 61, 63, 69, 70, 78, 79, 82, 84, 96, 98, 99, 100, 101, 105, 107, 108, 112, 114, 116, 120, 130, 153, 161, 227, 235, 244, 245, 270, 274, 280, 281, 307, 308, 309, 329, 330, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 416, 418, 420, 421, 427, 429, 435, 437, 438, 439, 444, 445], "among": [1, 3, 57, 155, 156, 235, 338, 352, 421, 438, 439], "prohibit": [1, 3, 118], "slow": [1, 3, 4, 11, 45, 46, 47, 61, 63, 70, 84, 99, 112, 113], "compar": [1, 3, 118, 330, 332, 345, 350, 352, 354, 355, 397, 421, 425, 427, 429, 431, 432, 438, 439, 442, 445], "gpu": [1, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 98, 100, 120, 126, 129, 133, 134, 137, 140, 141, 153, 154, 161, 162, 247, 425, 427, 428, 438, 439, 445], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 78, 82, 84, 99, 104, 105, 112, 113, 118, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 211, 235, 244, 245, 249, 250, 251, 262, 265, 268, 270, 272, 274, 277, 289, 290, 298, 299, 315, 319, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 420, 421, 425, 426, 427, 429, 431, 438, 439, 440, 442, 445], "keyword": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 96, 98, 99, 100, 104, 105, 107, 110, 112, 113, 116, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 172, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 267, 270, 274, 278, 279, 280, 281, 291, 306, 310, 311, 314, 315, 316, 318, 319, 322, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 357, 362, 364, 365, 366, 367, 368, 372, 382, 384, 389, 391, 402, 413, 425, 426, 427, 429, 431, 434, 438, 439, 442, 444, 445], "build": [1, 2, 3, 7, 28, 32, 36, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 107, 124, 125, 126, 129, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 220, 244, 245, 247, 251, 270, 274, 277, 313, 315, 319, 402, 409, 410, 411, 420, 421, 422, 427, 428, 429, 431, 432, 433, 434, 438, 439, 440, 441, 444, 445], "mani": [1, 2, 3, 4, 69, 124, 125, 127, 128, 129, 132, 134, 135, 138, 139, 140, 148, 149, 158, 195, 230, 329, 331, 338, 346, 349, 420, 425, 426, 427, 429, 430, 431, 433, 435, 438, 439, 440, 442, 444, 445], "eg": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 126, 127, 128, 129, 132, 133, 134, 135, 137, 140, 141, 153, 154, 158, 161, 162, 197, 228, 237, 248, 280, 310, 384], "gymnasium": [1, 2, 3, 5, 77, 126, 129, 132, 133, 134, 140, 141, 142, 143, 153, 154, 161, 162, 171, 177, 200, 224, 228, 243, 248, 426, 427, 429, 440, 444], "warn": [1, 3, 66, 72, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 249, 267, 291, 392, 426], "quickli": [1, 3, 426, 438, 439, 445], "becom": [1, 2, 3, 4, 26, 268, 272, 438, 439, 445], "quit": [1, 3, 11, 126, 129, 133, 140, 141, 153, 154, 161, 162, 425, 426, 427, 429, 431, 438, 439, 445], "annoi": [1, 3], "filter": [1, 2, 3, 4, 83, 105, 112, 113, 329, 330, 332, 333, 337, 338, 345, 349, 350, 352, 430], "out": [1, 2, 3, 4, 5, 9, 26, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 96, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 167, 195, 227, 230, 247, 249, 268, 269, 272, 278, 279, 282, 283, 284, 306, 310, 311, 312, 315, 316, 317, 318, 319, 347, 360, 361, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 438, 439, 440, 442, 444, 445], "still": [1, 2, 3, 9, 39, 65, 77, 84, 85, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 235, 291, 346, 347, 421, 425, 426, 428, 437, 440, 442, 445], "wish": [1, 3, 11, 16, 17, 22, 177, 432, 442], "displai": [1, 3, 7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 402, 422, 425, 426, 439, 440], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 187, 188, 191, 192, 194, 195, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 291, 292, 293, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 362, 364, 365, 366, 367, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 391, 392, 395, 396, 397, 399, 400, 402, 416, 420, 421, 422, 425, 426, 427, 429, 434, 435, 437, 438, 439, 440, 441, 444, 445], "part": [2, 3, 4, 8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 84, 124, 126, 129, 133, 138, 140, 141, 151, 153, 154, 161, 162, 178, 186, 211, 220, 223, 247, 270, 274, 323, 393, 416, 421, 425, 427, 428, 429, 435, 438, 440, 445], "algorithm": [2, 3, 8, 9, 147, 180, 227, 329, 349, 350, 352, 418, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 434, 438, 439, 441, 442, 444], "implement": [2, 3, 9, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 81, 82, 85, 86, 87, 88, 89, 102, 114, 115, 126, 129, 133, 140, 141, 147, 148, 153, 154, 161, 162, 184, 191, 194, 196, 200, 203, 207, 209, 217, 218, 224, 228, 234, 236, 237, 238, 244, 245, 247, 248, 252, 254, 268, 269, 270, 271, 272, 273, 274, 298, 299, 300, 329, 330, 332, 335, 336, 337, 343, 345, 347, 348, 349, 351, 352, 354, 382, 393, 407, 418, 420, 422, 425, 426, 427, 428, 429, 438, 439, 440, 444], "wide": [2, 3, 5, 444], "give": [2, 3, 7, 78, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 187, 195, 419, 421, 425, 426, 429, 438, 439, 440, 441, 444], "abil": [2, 347, 440, 442], "panel": [2, 427], "usag": [2, 3, 5, 7, 16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 77, 96, 118, 184, 187, 199, 252, 270, 274, 332, 337, 345, 352, 356, 420, 425, 427, 428, 431, 432, 434, 438, 439, 442], "includ": [2, 3, 4, 7, 9, 26, 32, 39, 44, 55, 65, 66, 72, 77, 82, 84, 95, 96, 98, 99, 100, 101, 103, 114, 116, 120, 126, 129, 133, 140, 141, 147, 151, 152, 153, 154, 161, 162, 202, 205, 229, 235, 237, 244, 245, 247, 270, 274, 329, 332, 347, 352, 405, 420, 422, 425, 426, 427, 428, 429, 438, 439, 440, 442, 445], "almost": [2, 245, 278, 279, 428], "physic": [2, 6, 7, 96, 153, 154, 158, 422, 425, 438, 439, 440], "theori": 2, "crude": 2, "made": [2, 3, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 230, 247, 282, 291, 334, 347, 362, 425, 426, 428, 438, 439, 441, 442, 444], "liststorag": [2, 50, 62, 67, 68, 69, 77, 78, 79, 99, 107, 442], "veri": [2, 3, 138, 139, 426, 430, 433, 438, 440, 442, 444, 445], "ineffici": [2, 4], "tensor": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 112, 113, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 172, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 197, 198, 199, 200, 202, 205, 206, 208, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 341, 342, 345, 347, 349, 350, 351, 352, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 438, 439, 440, 444, 445], "contigu": [2, 3, 8, 33, 36, 44, 85, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 205, 208, 230, 238, 440, 442, 444], "tensorstorag": [2, 69, 77, 98, 104, 105, 118, 121, 433, 442], "lazymemmapstorag": [2, 41, 62, 67, 68, 69, 75, 78, 79, 105, 107, 112, 113, 186, 187, 425, 426, 428, 433, 438, 441, 442], "class": [2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 144, 147, 150, 153, 154, 155, 156, 158, 161, 162, 163, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 414, 415, 416, 418, 420, 421, 422, 425, 426, 427, 428, 430, 431, 432, 433, 434, 438, 439, 442, 445], "citizen": 2, "pytre": [2, 62, 67, 68, 69, 78, 79, 101, 107, 121], "tupl": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 101, 105, 107, 112, 116, 118, 126, 127, 128, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 187, 205, 207, 211, 247, 253, 257, 263, 264, 270, 273, 274, 275, 282, 289, 292, 293, 311, 312, 316, 317, 322, 329, 330, 331, 332, 333, 337, 338, 340, 345, 346, 347, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 396, 397, 400, 409, 442, 444], "dictionari": [2, 15, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 105, 110, 112, 113, 126, 129, 132, 133, 134, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 205, 230, 235, 237, 245, 247, 315, 319, 332, 352, 354, 397, 414, 415, 416, 422, 426, 427, 430, 432, 438, 440, 445], "nest": [2, 3, 28, 32, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 55, 56, 61, 63, 65, 66, 69, 70, 72, 74, 75, 76, 77, 84, 90, 98, 99, 100, 103, 107, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 179, 187, 228, 231, 235, 247, 314, 364, 365, 366, 367, 368, 382, 392, 422, 426, 427, 429, 439, 440, 442, 444], "construct": [2, 3, 5, 28, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 107, 126, 129, 130, 132, 133, 140, 141, 153, 154, 155, 161, 162, 167, 194, 198, 245, 247, 270, 274, 295, 319, 402, 420, 426, 427, 428, 431, 438, 440, 442, 445], "ram": [2, 132, 134, 434, 442], "prealloc": [2, 3, 153, 161, 440], "ve": [2, 71, 425, 428, 435], "been": [2, 3, 5, 7, 8, 12, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 107, 111, 126, 129, 133, 137, 140, 141, 145, 146, 153, 154, 161, 162, 207, 228, 229, 236, 237, 268, 270, 272, 274, 282, 314, 329, 347, 349, 351, 425, 426, 427, 428, 437, 438, 439, 440, 442, 444, 445], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 50, 62, 65, 67, 68, 69, 75, 78, 79, 84, 97, 98, 101, 104, 105, 107, 108, 112, 113, 116, 118, 119, 122, 123, 180, 186, 220, 236, 247, 250, 347, 399, 418, 421, 422, 425, 426, 427, 428, 429, 433, 435, 438, 439, 441, 442, 444], "here": [2, 3, 4, 7, 8, 9, 10, 16, 17, 26, 118, 126, 127, 128, 129, 133, 137, 140, 141, 153, 154, 155, 156, 161, 162, 187, 235, 282, 391, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 435, 438, 439, 440, 442, 444, 445], "start": [2, 3, 4, 5, 16, 26, 29, 50, 67, 82, 83, 84, 105, 112, 113, 126, 129, 130, 133, 140, 141, 144, 153, 154, 161, 162, 178, 193, 398, 424, 425, 426, 429, 436, 439, 440, 442, 443, 445], "replay_buff": [2, 8, 16, 17, 20, 26, 62, 67, 68, 69, 78, 79, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 187, 399, 412, 425, 426, 427, 433, 438, 439, 442], "rb": [2, 41, 62, 67, 68, 69, 75, 78, 79, 99, 104, 105, 107, 112, 113, 118, 187, 220, 247, 426, 428, 429, 433, 435, 439, 441, 442, 444], "10": [2, 3, 7, 27, 28, 30, 31, 32, 35, 39, 40, 50, 51, 55, 62, 67, 68, 69, 71, 77, 78, 79, 80, 83, 84, 98, 99, 100, 104, 107, 112, 113, 118, 120, 124, 125, 126, 129, 130, 133, 138, 139, 140, 141, 147, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 180, 181, 184, 186, 187, 192, 195, 229, 231, 232, 233, 244, 245, 247, 251, 253, 256, 257, 259, 261, 263, 267, 268, 269, 270, 272, 273, 274, 277, 278, 279, 289, 291, 302, 315, 319, 322, 326, 330, 334, 336, 343, 349, 350, 351, 355, 362, 364, 365, 366, 367, 370, 384, 393, 422, 425, 426, 427, 428, 429, 430, 431, 435, 438, 440, 442, 444, 445], "add": [2, 3, 4, 6, 26, 32, 36, 37, 39, 44, 48, 50, 55, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 97, 99, 104, 107, 108, 118, 119, 122, 123, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 205, 207, 234, 237, 247, 270, 274, 283, 313, 329, 398, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 444], "string": [2, 23, 24, 25, 32, 39, 44, 50, 55, 57, 64, 65, 66, 72, 77, 83, 84, 94, 99, 126, 129, 133, 140, 141, 145, 151, 153, 154, 161, 162, 177, 195, 205, 215, 228, 234, 242, 247, 270, 274, 311, 314, 315, 316, 328, 383, 401, 421, 425, 427, 428, 442], "element": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 45, 46, 47, 50, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 77, 78, 79, 82, 84, 98, 99, 100, 101, 104, 105, 107, 112, 113, 118, 120, 126, 129, 133, 140, 141, 150, 153, 154, 161, 162, 180, 187, 192, 195, 216, 225, 229, 230, 249, 254, 255, 268, 269, 272, 305, 306, 311, 314, 318, 319, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 393, 421, 425, 427, 431, 433, 442, 445], "30": [2, 3, 69, 77, 112, 113, 183, 210, 294, 295, 382, 386, 389, 391, 433, 439, 440, 442], "none": [2, 3, 8, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 112, 113, 114, 116, 118, 120, 126, 129, 130, 132, 133, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 202, 204, 205, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 299, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 411, 412, 414, 415, 416, 420, 422, 425, 426, 428, 429, 440, 442, 444], "int": [2, 3, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 161, 162, 165, 166, 167, 172, 180, 182, 183, 184, 186, 187, 188, 189, 191, 193, 195, 197, 202, 203, 205, 209, 210, 211, 213, 215, 216, 219, 226, 227, 228, 231, 234, 235, 237, 239, 242, 247, 249, 250, 251, 254, 255, 256, 257, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 310, 311, 312, 314, 315, 317, 319, 329, 330, 331, 338, 340, 341, 346, 347, 348, 349, 350, 354, 355, 364, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 389, 391, 393, 394, 395, 397, 399, 402, 404, 414, 415, 416, 429, 440, 442], "entri": [2, 3, 16, 17, 22, 28, 32, 36, 37, 39, 41, 44, 45, 46, 47, 48, 50, 55, 61, 63, 64, 65, 66, 70, 72, 74, 75, 77, 83, 84, 91, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 153, 154, 158, 161, 162, 165, 166, 178, 179, 183, 187, 189, 190, 192, 193, 194, 196, 198, 199, 202, 206, 208, 209, 211, 213, 215, 218, 220, 223, 225, 227, 228, 229, 230, 232, 235, 237, 239, 242, 244, 247, 270, 278, 279, 310, 311, 314, 316, 317, 330, 332, 352, 364, 365, 366, 367, 420, 425, 427, 428, 430, 431, 432, 434, 438, 439, 440, 441, 442, 444, 445], "onto": [2, 8, 45, 46, 47, 59, 61, 63, 70, 84, 172, 196, 249, 291, 306, 311, 312, 315, 316, 317, 318, 319, 428, 440], "__setitem__": 2, "indic": [2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 104, 105, 107, 108, 110, 111, 112, 113, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 165, 166, 179, 180, 187, 188, 228, 229, 230, 231, 237, 245, 247, 248, 254, 255, 275, 278, 279, 281, 291, 314, 316, 317, 325, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 406, 416, 419, 422, 427, 428, 429, 433, 434, 435, 440, 442, 445], "without": [2, 3, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 181, 183, 194, 198, 233, 236, 247, 268, 269, 272, 273, 308, 309, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 363, 364, 365, 366, 367, 368, 412, 419, 420, 425, 426, 427, 429, 430, 431, 432, 433, 438, 439, 440, 442, 445], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 70, 71, 72, 77, 78, 84, 104, 105, 126, 129, 133, 140, 141, 147, 153, 154, 155, 156, 161, 162, 163, 164, 179, 181, 183, 184, 194, 197, 198, 205, 217, 228, 229, 235, 237, 241, 244, 245, 247, 249, 251, 252, 267, 268, 270, 274, 277, 282, 291, 315, 316, 317, 318, 319, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 362, 364, 365, 366, 367, 368, 397, 402, 404, 407, 408, 411, 412, 418, 422, 426, 427, 428, 429, 432, 435, 438, 439, 440, 442, 445], "length": [2, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 71, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 112, 113, 116, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 180, 187, 195, 208, 216, 244, 251, 254, 255, 257, 259, 261, 268, 272, 275, 277, 280, 281, 306, 318, 323, 393, 399, 425, 427, 428, 433, 435, 440, 442, 445], "cursor": [2, 62, 67, 68, 69, 78, 79, 107], "afterward": [2, 32, 39, 44, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 438, 445], "tell": [2, 3, 4, 7, 155, 156, 235, 425, 428, 433, 438, 439], "our": [2, 3, 7, 8, 11, 23, 50, 69, 187, 384, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 444], "far": [2, 62, 67, 68, 69, 71, 78, 79, 107, 271, 299, 300, 435, 440, 445], "restrict": [2, 3, 421, 426, 441, 442, 445], "empti": [2, 3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 107, 126, 129, 133, 139, 140, 141, 150, 153, 154, 161, 162, 172, 194, 195, 198, 215, 217, 231, 237, 240, 242, 245, 247, 318, 388, 425, 440], "64": [2, 3, 45, 46, 47, 61, 63, 70, 84, 107, 187, 219, 257, 258, 266, 270, 274, 281, 282, 292, 362, 425, 426, 427, 428, 429, 431, 435, 437, 440, 442, 444, 445], "dtype": [2, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 112, 113, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 172, 175, 178, 179, 180, 181, 184, 185, 191, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 211, 213, 215, 217, 218, 220, 224, 227, 228, 230, 232, 233, 236, 237, 238, 240, 242, 247, 251, 253, 263, 264, 268, 269, 270, 272, 273, 274, 277, 283, 284, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 370, 420, 429, 437, 440, 442, 444, 445], "unit8": 2, "img": 2, "randint": [2, 83, 107, 195, 233, 442], "255": [2, 107, 233, 442], "uint8": [2, 3, 36, 45, 46, 47, 61, 63, 70, 84, 127, 128, 145, 146, 199, 205, 213, 233, 426, 442], "next": [2, 3, 4, 8, 16, 17, 20, 28, 36, 37, 39, 41, 43, 48, 50, 55, 62, 67, 68, 69, 71, 74, 75, 77, 78, 79, 84, 94, 95, 96, 103, 105, 107, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 145, 146, 147, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 183, 184, 186, 187, 192, 194, 195, 198, 199, 200, 205, 206, 207, 208, 209, 213, 217, 218, 220, 223, 224, 228, 230, 232, 235, 238, 243, 244, 247, 251, 269, 270, 273, 274, 277, 295, 314, 324, 326, 329, 330, 332, 333, 334, 336, 337, 338, 339, 345, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 384, 396, 397, 400, 426, 428, 429, 431, 435, 440, 441, 444, 445], "automat": [2, 3, 5, 12, 19, 33, 50, 82, 85, 98, 100, 107, 113, 120, 126, 129, 132, 133, 134, 140, 141, 153, 154, 155, 156, 161, 162, 183, 194, 198, 211, 230, 243, 245, 254, 270, 274, 306, 314, 315, 319, 382, 392, 420, 425, 427, 430, 431, 438, 439, 440, 442, 444], "hand": [2, 3, 7, 26, 36, 438, 439, 440], "look": [2, 3, 5, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 105, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 205, 215, 216, 240, 247, 252, 315, 319, 320, 321, 421, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445], "assum": [2, 3, 6, 15, 16, 17, 18, 20, 21, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 95, 96, 103, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 186, 189, 193, 195, 202, 215, 216, 223, 230, 237, 240, 242, 253, 270, 274, 302, 305, 322, 334, 338, 339, 352, 362, 373, 374, 375, 376, 378, 379, 380, 381, 384, 425, 427, 437, 440], "leav": [2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 69, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 179, 224, 421, 425, 433, 442], "match": [2, 3, 6, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 107, 116, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 153, 154, 161, 162, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 254, 255, 262, 270, 274, 275, 280, 281, 298, 306, 310, 311, 315, 316, 318, 319, 322, 323, 330, 332, 338, 346, 348, 350, 352, 399, 404, 420, 421, 425, 427, 429, 437, 439, 440, 442, 445], "don": [2, 3, 4, 6, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 187, 236, 426, 427, 429, 433, 442, 444, 445], "throw": [2, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 445], "rb_td": 2, "batch_siz": [2, 3, 8, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 50, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 83, 84, 94, 98, 99, 100, 104, 105, 106, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 178, 179, 180, 184, 186, 187, 191, 194, 195, 198, 199, 200, 205, 213, 217, 218, 220, 224, 227, 228, 230, 236, 237, 238, 247, 251, 253, 261, 262, 263, 264, 267, 270, 274, 277, 291, 292, 293, 301, 302, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 384, 393, 399, 420, 421, 425, 426, 427, 428, 433, 438, 439, 440, 442, 444, 445], "max": [2, 28, 59, 63, 78, 83, 94, 104, 105, 118, 139, 197, 231, 291, 330, 331, 332, 338, 348, 350, 352, 425, 427, 428, 429, 435], "label": [2, 63, 64, 71, 83, 84, 425, 438, 442], "100": [2, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 98, 100, 107, 112, 113, 118, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 190, 195, 199, 211, 220, 225, 228, 247, 278, 279, 280, 312, 314, 384, 394, 412, 426, 427, 429, 430, 432, 435, 437, 438, 439, 440, 442, 444, 445], "rb_pytre": 2, "randn": [2, 62, 65, 67, 68, 69, 78, 79, 98, 99, 100, 105, 107, 112, 113, 120, 172, 186, 211, 253, 256, 257, 261, 263, 264, 268, 269, 272, 273, 278, 279, 280, 287, 289, 293, 306, 307, 308, 309, 310, 311, 315, 316, 318, 321, 322, 323, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 401, 420, 429, 442, 444, 445], "c": [2, 3, 6, 7, 36, 39, 45, 46, 47, 61, 63, 65, 69, 70, 77, 78, 79, 84, 99, 211, 233, 238, 272, 273, 426, 442], "zero": [2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 107, 112, 113, 118, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 178, 184, 186, 188, 194, 195, 197, 198, 211, 217, 220, 227, 245, 247, 250, 251, 258, 259, 260, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 291, 292, 301, 317, 319, 325, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 370, 428, 429, 442, 444, 445], "assert": [2, 3, 6, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 118, 126, 129, 133, 136, 140, 141, 153, 154, 161, 162, 167, 172, 177, 180, 184, 187, 190, 194, 198, 207, 218, 225, 237, 244, 253, 281, 302, 364, 365, 366, 367, 392, 393, 401, 433, 437, 442, 445], "len": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 100, 107, 120, 195, 213, 254, 255, 275, 281, 425, 429, 433, 435, 438, 440, 441, 442, 444], "ambigu": [2, 62, 67, 68, 69, 78, 79, 107], "signatur": [2, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 107, 116, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 184, 191, 205, 215, 230, 236, 237, 240, 242, 247, 318, 421, 425, 429, 430, 440], "deal": [2, 3, 62, 67, 68, 69, 78, 79, 107, 347, 421, 425, 427, 439, 442], "interpret": [2, 3, 62, 67, 68, 69, 78, 79, 107, 426], "put": [2, 62, 67, 68, 69, 78, 79, 107, 133, 145, 146, 162, 165, 166, 195, 244, 391, 416, 420, 426, 427, 428, 430, 438, 440], "solv": [2, 4, 7, 9, 10, 62, 67, 68, 69, 78, 79, 107, 419, 425, 426, 427, 433, 435, 438, 439, 440, 442], "clear": [2, 3, 11, 32, 36, 37, 39, 44, 48, 49, 55, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 107, 126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 247, 394, 430, 433], "cut": [2, 62, 67, 68, 69, 78, 79, 107], "distinct": [2, 3, 62, 67, 68, 69, 78, 79, 107, 184, 187, 432, 437], "view": [2, 3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 247, 264, 268, 272, 275, 430, 440, 442, 444, 445], "through": [2, 3, 4, 5, 8, 16, 17, 20, 22, 23, 25, 26, 36, 37, 48, 62, 66, 67, 68, 69, 72, 74, 78, 79, 84, 107, 124, 125, 126, 129, 132, 133, 134, 137, 138, 139, 140, 141, 144, 153, 154, 155, 156, 161, 162, 183, 192, 194, 195, 198, 216, 248, 253, 275, 292, 314, 315, 319, 320, 321, 325, 328, 347, 364, 365, 366, 367, 392, 420, 421, 425, 426, 427, 430, 432, 437, 438, 439, 440, 441, 442, 445], "collate_fn": [2, 62, 67, 68, 69, 77, 78, 79, 107, 442, 444], "__init__": [2, 3, 7, 129, 147, 163, 177, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 251, 262, 264, 268, 272, 277, 323, 330, 332, 333, 338, 345, 350, 352, 354, 355, 422, 440, 445], "default": [2, 3, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 293, 294, 295, 297, 298, 299, 300, 305, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 412, 416, 418, 421, 422, 425, 426, 427, 428, 431, 438, 441, 442, 444, 445], "major": 2, "worri": [2, 80, 445], "even": [2, 3, 4, 8, 11, 17, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 112, 114, 116, 120, 126, 129, 130, 133, 137, 140, 141, 153, 154, 161, 162, 179, 183, 425, 427, 430, 438, 439, 440, 445], "though": [2, 4, 11, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 275, 427, 438, 439], "too": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 65, 71, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 210, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 271, 299, 300, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 426, 431, 434, 440, 442, 445], "latter": [2, 23, 24, 25, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 349, 414, 415], "inv": [2, 3, 180, 190, 197, 200, 205, 213, 220, 225, 227, 232, 236, 239, 247, 440], "obvious": [2, 429], "ignor": [2, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 72, 73, 74, 77, 80, 82, 85, 86, 87, 88, 89, 96, 126, 129, 133, 140, 141, 153, 154, 161, 162, 197, 200, 224, 233, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 364, 442], "multithread": [2, 3, 62, 69, 78, 79, 94, 148, 149, 433, 442], "thread": [2, 16, 17, 22, 45, 46, 47, 61, 63, 70, 84, 124, 125, 138, 139, 153, 161, 245], "prefetch": [2, 62, 69, 78, 79, 94, 425, 426, 428, 442], "advis": [2, 11, 434, 445], "benchmark": [2, 3, 9, 124, 125, 138, 139], "techniqu": [2, 8, 153, 161, 426, 429, 433, 442], "real": [2, 5, 319, 421, 428, 429, 440, 441], "life": [2, 199, 441], "adopt": [2, 3, 5, 425, 445], "throughput": [2, 9, 139, 425], "practic": [2, 3, 4, 5, 8, 57, 236, 271, 299, 300, 328, 418, 419, 425, 426, 427, 428, 429, 432, 438, 439, 441, 445], "constant": [2, 11, 38, 187, 211, 229, 422, 425, 427, 428, 445], "throughout": [2, 3, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 427, 438, 445], "further": [2, 3, 5, 29, 425, 427, 429, 430], "refin": [2, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362], "coupl": [2, 428, 431, 432, 440, 442], "get": [2, 3, 4, 6, 7, 8, 9, 12, 36, 37, 39, 45, 46, 47, 48, 50, 61, 62, 63, 65, 66, 69, 70, 72, 74, 77, 84, 98, 100, 105, 112, 113, 114, 116, 118, 120, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 181, 186, 188, 194, 197, 198, 207, 211, 216, 229, 230, 233, 237, 244, 245, 267, 306, 315, 316, 319, 326, 364, 365, 366, 367, 368, 384, 388, 420, 421, 424, 425, 426, 427, 428, 429, 436, 438, 439, 440, 442, 443, 444, 445], "first_elt": 2, "128": [2, 113, 124, 125, 138, 139, 258, 261, 426, 428, 429, 435, 438, 441, 442], "wa": [2, 3, 5, 7, 36, 37, 39, 48, 50, 62, 65, 67, 68, 69, 74, 77, 78, 79, 84, 105, 107, 111, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 179, 187, 205, 237, 272, 329, 331, 344, 346, 349, 351, 353, 370, 421, 426, 427, 430, 431, 437, 438, 442, 444], "print": [2, 3, 6, 7, 16, 17, 20, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 104, 105, 107, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 171, 172, 177, 178, 179, 180, 183, 184, 187, 188, 192, 194, 195, 196, 197, 198, 206, 211, 217, 218, 220, 223, 228, 230, 231, 232, 233, 244, 247, 254, 255, 257, 258, 259, 260, 261, 264, 266, 267, 270, 274, 275, 278, 279, 280, 281, 287, 290, 291, 293, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 321, 323, 326, 347, 382, 412, 420, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "influenti": 2, "especi": [2, 3, 7, 8, 188], "larger": [2, 4, 77, 270, 274, 337, 345, 444], "volum": 2, "due": [2, 3, 5, 28, 432, 441, 442, 445], "memorymappedtensor": [2, 41, 61, 63, 75, 83, 98, 386, 433], "well": [2, 3, 8, 26, 28, 32, 39, 44, 55, 62, 64, 65, 66, 69, 72, 77, 78, 79, 82, 105, 110, 114, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 237, 247, 248, 252, 257, 272, 294, 295, 319, 347, 349, 354, 368, 420, 425, 426, 428, 429, 430, 431, 432, 434, 441, 442, 444, 445], "specifi": [2, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 193, 194, 196, 198, 223, 226, 229, 234, 238, 239, 247, 248, 251, 272, 318, 319, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 391, 420, 425, 427, 428, 429, 433, 438], "file": [2, 6, 7, 8, 45, 46, 47, 61, 63, 70, 84, 96, 165, 383, 384, 386, 402, 422, 424, 426, 438, 442, 443], "locat": [2, 7, 45, 46, 47, 61, 63, 70, 83, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 193, 199, 211, 222, 245, 271, 299, 300, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 425, 426, 427, 434, 438, 439, 442], "improv": [2, 4, 11, 203, 329, 421, 429, 438, 439, 442], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 153, 161, 205, 427, 438, 442], "found": [2, 3, 6, 7, 10, 16, 17, 20, 22, 26, 28, 32, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 112, 113, 126, 127, 128, 129, 132, 133, 134, 137, 140, 141, 153, 154, 161, 162, 179, 181, 187, 208, 220, 223, 231, 244, 245, 247, 267, 280, 281, 315, 319, 346, 347, 349, 421, 425, 426, 428, 429, 430, 432, 434, 440, 442, 444], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 73, 74, 82, 85, 86, 87, 88, 89, 98, 105, 151, 152, 197, 235, 250, 272, 273, 337, 428, 429, 433, 442], "sharabl": [2, 153, 161], "collabor": 2, "rather": [2, 4, 116, 140, 151, 152, 195, 218, 245, 420, 421, 425, 426, 427, 430, 432, 438, 439, 442], "incur": [2, 124, 125, 138, 139], "transmiss": 2, "content": [2, 3, 8, 20, 36, 37, 45, 46, 47, 48, 61, 62, 63, 69, 70, 74, 78, 79, 84, 111, 112, 113, 126, 129, 132, 133, 134, 140, 141, 148, 153, 154, 161, 162, 217, 254, 255, 275, 280, 281, 315, 347, 427, 440, 444], "map": [2, 3, 8, 14, 15, 18, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 103, 104, 105, 126, 129, 133, 140, 141, 144, 145, 146, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 168, 172, 180, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 264, 306, 307, 308, 309, 311, 315, 316, 318, 319, 321, 322, 323, 324, 332, 352, 362, 397, 418, 420, 421, 425, 426, 427, 428, 431, 432, 441], "writer": [2, 62, 67, 68, 69, 78, 79, 97, 100, 105, 107, 108, 112, 118, 119, 120, 123, 427, 442], "tensordictroundrobinwrit": [2, 79, 107], "goe": [2, 4, 84, 155, 156, 425, 427, 438, 439, 445], "prioritizedsampl": [2, 62, 67, 68, 69, 78, 79, 105, 107, 334, 339, 362, 425, 442], "access": [2, 3, 7, 8, 11, 14, 21, 32, 39, 44, 55, 62, 65, 66, 72, 77, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 187, 215, 236, 240, 247, 416, 419, 425, 430, 438, 439, 440, 442, 444], "tensordictreplaybuff": [2, 62, 67, 68, 69, 78, 104, 105, 107, 112, 113, 118, 186, 187, 399, 412, 418, 425, 426, 428, 442], "mp": [2, 23, 24, 25, 130, 244, 245], "def": [2, 3, 27, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 126, 129, 130, 133, 140, 141, 147, 153, 154, 161, 162, 175, 177, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 248, 251, 264, 268, 269, 272, 273, 277, 282, 314, 315, 323, 330, 332, 333, 338, 345, 347, 350, 352, 354, 355, 382, 392, 421, 422, 425, 426, 429, 437, 438, 439, 440, 442, 444, 445], "td": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 39, 41, 45, 46, 47, 50, 61, 62, 63, 65, 67, 68, 69, 70, 75, 77, 78, 79, 84, 98, 107, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 142, 143, 151, 152, 153, 154, 157, 161, 162, 163, 164, 178, 181, 184, 186, 188, 192, 194, 195, 196, 197, 198, 206, 207, 208, 209, 211, 220, 223, 227, 230, 233, 237, 244, 251, 253, 263, 264, 267, 270, 274, 276, 277, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 315, 316, 318, 321, 323, 362, 365, 366, 367, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 393, 401, 420, 421, 425, 426, 428, 439, 440, 441, 444], "__name__": [2, 3, 16, 17, 27, 67, 130, 382, 426, 444], "__main__": [2, 3, 16, 17, 27, 67, 130, 382, 444], "21": [2, 50, 84, 112, 113, 153, 155, 156, 161], "proc": 2, "target": [2, 4, 8, 26, 29, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 229, 247, 290, 318, 319, 329, 330, 331, 332, 333, 334, 336, 338, 339, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 362, 363, 364, 365, 366, 367, 368, 405, 411, 412, 421, 422, 428, 429, 435, 438, 440], "arg": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 107, 112, 113, 114, 116, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 215, 216, 217, 218, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 247, 249, 251, 253, 254, 255, 262, 263, 267, 270, 274, 275, 276, 277, 291, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 391, 395, 399, 402, 416, 426, 429], "join": [2, 130, 195, 418, 426, 427, 429, 438], "now": [2, 3, 7, 62, 69, 78, 79, 107, 151, 152, 153, 187, 224, 281, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 445], "20": [2, 50, 77, 83, 84, 112, 113, 118, 126, 129, 133, 137, 140, 141, 151, 152, 153, 154, 161, 162, 229, 247, 266, 268, 269, 272, 273, 290, 310, 393, 428, 442, 445], "_data": [2, 440], "remot": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 62, 67, 68, 69, 78, 79, 107, 153, 161, 418, 445], "difficult": [2, 4, 153, 434], "pai": [2, 8, 187, 425], "word": [2, 3, 11, 71, 347, 425, 433, 440, 445], "1m": [2, 405, 425, 427, 428], "doe": [2, 3, 21, 23, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 70, 72, 77, 78, 83, 84, 95, 96, 103, 104, 105, 112, 114, 116, 123, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 245, 247, 252, 261, 262, 268, 269, 270, 272, 273, 274, 283, 290, 302, 310, 320, 321, 329, 331, 339, 346, 347, 349, 363, 402, 421, 422, 425, 426, 427, 428, 430, 433, 438, 440, 442, 445], "howev": [2, 3, 5, 7, 32, 39, 44, 55, 65, 66, 72, 77, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 329, 331, 332, 346, 349, 351, 352, 420, 425, 426, 428, 429, 432, 440, 442, 445], "capac": [2, 62, 69, 78, 79, 98, 100, 104, 112, 120, 427, 433], "There": [2, 3, 10, 107, 236, 252, 270, 274, 329, 349, 420, 421, 422, 427, 428, 429, 431, 433, 438, 439, 440, 442, 444, 445], "circumv": 2, "save": [2, 3, 8, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 84, 95, 96, 98, 99, 100, 101, 103, 107, 114, 115, 116, 120, 121, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 247, 383, 384, 386, 391, 402, 422, 429, 433, 434, 435, 438, 439], "convent": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 421, 425, 428, 438, 439, 440], "overridden": [2, 3, 32, 39, 44, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 364, 366, 367, 428, 438], "dim_extend": [2, 62, 69, 78, 79], "obtain": [2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 186, 215, 229, 242, 251, 253, 290, 292, 399, 425, 427, 430, 431, 432, 438, 439], "counterpart": [2, 3, 187], "desir": [2, 3, 11, 32, 35, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 176, 182, 184, 191, 192, 211, 213, 215, 216, 230, 236, 237, 240, 242, 247, 254, 255, 262, 275, 281, 306, 311, 312, 315, 316, 317, 318, 319, 420, 425, 429, 438, 439, 440, 442], "diversifi": 2, "offer": [2, 3, 7, 124, 125, 126, 129, 133, 138, 139, 140, 141, 145, 146, 153, 154, 161, 162, 235, 382, 420, 425, 426, 429, 430, 432, 433, 438, 440, 442, 445], "accomplish": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 430], "__especially__": 2, "offlin": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 330, 336, 337, 345, 354, 391, 422, 430, 441, 442], "docstr": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 430, 431], "detail": [2, 3, 5, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 233, 237, 247, 252, 264, 268, 272, 282, 290, 312, 329, 339, 347, 349, 419, 422, 426, 429, 433, 437, 442], "happi": [2, 429], "concaten": [2, 8, 16, 17, 26, 50, 51, 53, 84, 140, 187, 188, 211, 227, 272, 275, 321, 425, 426, 431, 438, 439, 440, 442, 445], "schedul": [2, 4, 7, 71, 397, 427, 440], "transformedenv": [2, 3, 11, 12, 55, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 180, 181, 184, 187, 190, 191, 192, 194, 198, 199, 200, 206, 207, 208, 210, 211, 213, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 235, 236, 244, 247, 270, 274, 314, 384, 392, 425, 426, 427, 428, 429, 430, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "stepcount": [2, 50, 55, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 192, 235, 236, 237, 247, 253, 425, 426, 427, 428, 429, 430, 435, 438, 439, 444], "gymenv": [2, 3, 5, 11, 16, 17, 20, 22, 26, 27, 41, 50, 55, 67, 75, 77, 118, 126, 129, 130, 133, 135, 140, 141, 153, 154, 161, 162, 180, 183, 184, 187, 190, 191, 192, 199, 205, 206, 207, 211, 213, 218, 219, 220, 223, 225, 229, 230, 231, 232, 235, 236, 237, 238, 244, 247, 253, 270, 274, 314, 382, 384, 412, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 441, 442, 444, 445], "randompolici": [2, 16, 17, 20, 22, 23, 24, 25, 26, 27, 55, 187, 220, 418, 433, 442], "cartpol": [2, 3, 11, 41, 55, 75, 77, 126, 127, 128, 129, 130, 133, 140, 141, 153, 154, 161, 162, 183, 184, 187, 223, 229, 244, 247, 314, 382, 426, 428, 431, 433, 434, 435, 442, 445], "v1": [2, 3, 11, 16, 17, 20, 22, 26, 27, 41, 55, 67, 75, 77, 118, 126, 129, 130, 132, 133, 134, 138, 139, 140, 141, 148, 153, 154, 161, 162, 183, 184, 187, 190, 192, 200, 206, 207, 211, 218, 220, 223, 224, 225, 228, 229, 230, 231, 232, 235, 236, 238, 244, 247, 253, 270, 274, 314, 358, 373, 374, 375, 376, 378, 379, 380, 381, 382, 420, 426, 428, 430, 431, 432, 433, 434, 435, 440, 442, 444, 445], "action_spec": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 55, 124, 125, 126, 129, 133, 138, 139, 140, 141, 147, 153, 154, 155, 156, 157, 161, 162, 180, 181, 184, 187, 191, 194, 196, 198, 207, 211, 217, 220, 236, 237, 238, 239, 247, 251, 264, 277, 293, 295, 306, 311, 315, 316, 330, 332, 334, 336, 350, 352, 354, 355, 412, 420, 425, 426, 427, 428, 429, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445], "8": [2, 3, 6, 7, 36, 37, 45, 46, 47, 48, 55, 61, 63, 69, 70, 74, 77, 84, 104, 105, 112, 113, 124, 125, 126, 127, 128, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 180, 183, 192, 229, 232, 238, 254, 255, 257, 258, 266, 275, 307, 308, 309, 315, 318, 321, 345, 425, 426, 440, 442, 444], "traj_kei": [2, 105, 112, 113, 442], "truncated_kei": [2, 105, 112, 113, 220, 228], "strict_length": [2, 105, 112, 113, 384], "i": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 41, 44, 48, 55, 62, 65, 66, 69, 72, 74, 75, 77, 79, 80, 84, 98, 100, 104, 105, 112, 113, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 192, 193, 195, 209, 215, 220, 223, 235, 237, 242, 247, 269, 270, 273, 274, 293, 305, 312, 314, 315, 317, 318, 319, 329, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 393, 405, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 438, 439, 440, 442, 444, 445], "enumer": [2, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 75, 77, 79, 82, 85, 86, 87, 88, 89, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 356, 421, 425, 426, 427, 428, 435, 438, 442, 444], "break": [2, 5, 16, 17, 20, 26, 32, 39, 44, 55, 65, 66, 67, 69, 72, 77, 79, 94, 105, 112, 113, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 187, 220, 244, 245, 247, 270, 274, 299, 384, 426, 429, 433, 435, 442, 444], "step_count": [2, 16, 17, 20, 55, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 192, 228, 247, 427, 428, 429, 430, 435], "32": [2, 27, 36, 62, 67, 68, 69, 78, 79, 107, 113, 139, 159, 160, 165, 166, 187, 205, 254, 255, 256, 257, 258, 260, 261, 266, 275, 280, 281, 285, 286, 289, 292, 301, 362, 382, 426, 428, 429, 431, 432, 440, 441, 442, 444, 445], "33": [2, 32, 36, 39, 44, 55, 65, 66, 72, 77, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 254, 255, 275], "34": [2, 254, 255, 275], "35": [2, 254, 255, 275], "36": 2, "37": [2, 186], "38": [2, 7, 50], "39": [2, 138, 139], "40": [2, 77, 138, 139], "41": [2, 112], "11": [2, 10, 28, 50, 59, 77, 83, 84, 98, 99, 100, 104, 113, 120, 130, 180, 233, 247, 251, 277], "12": [2, 7, 10, 50, 77, 98, 100, 113, 120, 138, 139, 153, 159, 160, 161, 247, 384, 442], "13": [2, 5, 77, 112, 113, 158, 243, 247, 248], "14": [2, 6, 77, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 211, 247, 248], "15": [2, 28, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 291, 310, 340, 442], "16": [2, 3, 32, 39, 44, 55, 65, 66, 72, 77, 105, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 187, 247, 428, 442], "17": [2, 11, 112, 113, 133, 153, 180, 247], "could": [2, 3, 4, 6, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 319, 426, 427, 434, 438, 439, 441, 445], "sai": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 280, 438, 441, 445], "interleav": 2, "cannot": [2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 36, 53, 59, 69, 78, 79, 100, 101, 105, 108, 112, 113, 120, 126, 129, 132, 133, 134, 137, 140, 141, 153, 154, 161, 162, 194, 198, 216, 223, 235, 280, 281, 316, 329, 332, 349, 426, 427, 428, 429, 438, 439, 440], "suggest": [2, 362, 425, 439], "serialenv": [2, 3, 126, 129, 133, 140, 141, 153, 154, 162, 230, 247, 253, 314, 418, 444, 445], "squeez": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 183, 184, 187, 226, 229, 254, 255, 296, 297, 425, 429, 440, 442], "6": [2, 3, 7, 16, 17, 20, 22, 28, 50, 55, 69, 72, 77, 84, 105, 113, 127, 128, 133, 153, 159, 160, 180, 183, 192, 211, 213, 229, 235, 253, 254, 255, 257, 258, 259, 262, 266, 269, 275, 280, 281, 282, 285, 298, 314, 315, 323, 426, 429, 444], "5": [2, 3, 16, 17, 28, 35, 36, 37, 48, 50, 51, 52, 53, 54, 55, 59, 62, 67, 69, 72, 74, 77, 78, 79, 107, 112, 113, 118, 126, 129, 130, 133, 138, 139, 140, 141, 145, 146, 148, 153, 154, 159, 160, 161, 162, 165, 166, 180, 183, 184, 186, 192, 208, 220, 227, 228, 229, 235, 247, 250, 251, 252, 253, 254, 255, 257, 258, 263, 264, 265, 266, 268, 271, 272, 275, 277, 280, 281, 285, 290, 293, 299, 300, 310, 311, 314, 316, 322, 346, 349, 351, 354, 355, 382, 420, 424, 425, 426, 429, 431, 435, 438, 439, 440, 442, 443, 444, 445], "7": [2, 3, 6, 10, 39, 50, 55, 59, 62, 69, 77, 78, 105, 113, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 180, 183, 192, 229, 232, 251, 253, 254, 255, 258, 275, 277, 280, 370, 425, 442, 444], "9": [2, 3, 7, 28, 32, 50, 55, 62, 69, 77, 78, 84, 105, 113, 118, 127, 128, 144, 155, 156, 162, 180, 183, 192, 229, 232, 237, 244, 247, 278, 279, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 356, 362, 392, 421, 425, 426, 438, 439], "18": [2, 50, 112, 113, 159, 160, 165, 166, 235, 247, 281], "19": [2, 112, 113, 118, 247, 424, 443], "independ": [2, 16, 17, 20, 22, 23, 24, 25, 26, 153, 161, 202, 209, 230, 239, 252, 281, 305, 329, 349, 421, 422, 425, 426, 439, 442, 444], "congruent": 2, "name": [2, 3, 6, 7, 20, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 94, 124, 126, 127, 129, 133, 138, 140, 141, 144, 145, 146, 148, 151, 153, 154, 155, 156, 158, 161, 162, 165, 166, 168, 175, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 197, 199, 200, 201, 203, 205, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 247, 248, 270, 274, 311, 316, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 364, 366, 367, 368, 382, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 422, 425, 426, 427, 428, 429, 432, 433, 434, 438, 439, 440, 441, 445], "randomcroptensordict": [2, 425], "unlik": [2, 30, 69, 78, 79, 111, 133, 145, 146, 165, 166, 250, 252, 314, 339, 349, 384, 420, 426, 429, 431, 433, 444], "stop": [2, 3, 20, 26, 71, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 427, 433, 438, 439, 444, 445], "signal": [2, 3, 16, 17, 20, 22, 28, 50, 105, 112, 113, 118, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 179, 187, 192, 199, 208, 228, 231, 421, 425, 427, 438, 439, 442, 445], "disk": [2, 3, 45, 46, 47, 50, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 98, 107, 402, 422, 425, 426, 428, 429, 433, 434, 438, 442], "dump": [2, 3, 11, 41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 84, 96, 98, 99, 100, 101, 107, 114, 116, 120, 382, 383, 384, 434, 435, 438], "load": [2, 6, 7, 16, 17, 20, 22, 32, 39, 41, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 96, 98, 99, 100, 101, 107, 114, 115, 116, 120, 121, 126, 128, 129, 133, 140, 141, 153, 154, 161, 162, 163, 177, 195, 244, 245, 247, 402, 416, 422, 425, 427, 429, 442], "json": 2, "metadata": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 332, 354, 427, 430, 432, 433, 438, 439, 445], "anticip": [2, 194, 198], "compli": [2, 252, 420], "back": [2, 29, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 234, 243, 282, 306, 311, 312, 315, 316, 317, 318, 319, 427, 429, 438, 439, 440, 442], "exact": [2, 3, 28, 153, 272], "statu": [2, 3, 129], "prioriti": [2, 4, 62, 78, 79, 98, 99, 100, 101, 104, 105, 114, 116, 120, 332, 333, 334, 336, 337, 338, 339, 345, 350, 352, 354, 355, 362, 422, 425, 426, 442], "heap": 2, "under": [2, 3, 4, 26, 32, 39, 44, 50, 55, 65, 66, 71, 72, 77, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 153, 154, 158, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 208, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 252, 306, 311, 312, 315, 316, 317, 318, 319, 347, 364, 365, 366, 367, 368, 384, 421, 425, 426, 431, 438, 440, 445], "hood": [2, 3, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 252, 440], "naiv": [2, 240, 430], "just": [2, 3, 4, 84, 116, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 179, 183, 190, 230, 248, 281, 393, 422, 425, 426, 427, 428, 429, 430, 431, 433, 438, 439, 440, 442, 444, 445], "public": [2, 68, 115, 215, 242], "serializ": 2, "consum": [2, 111, 113, 314, 426, 427, 433, 439, 442], "much": [2, 3, 8, 16, 17, 22, 62, 78, 104, 105, 153, 161, 346, 349, 427, 429, 430, 434, 438, 439, 440, 442, 445], "duplic": [2, 32, 39, 44, 55, 65, 66, 72, 77, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 330, 332, 334, 339, 345, 347, 350, 352, 354, 355, 362], "observ": [2, 3, 8, 16, 17, 20, 22, 26, 29, 41, 50, 55, 67, 75, 77, 84, 95, 96, 103, 105, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 173, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 209, 211, 212, 213, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 253, 256, 257, 258, 259, 260, 261, 264, 267, 270, 274, 280, 285, 286, 289, 290, 291, 293, 294, 306, 307, 308, 309, 310, 311, 314, 315, 316, 323, 324, 329, 330, 331, 332, 333, 334, 336, 337, 338, 341, 345, 346, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 382, 384, 412, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445], "plu": [2, 16, 17, 22, 71, 153, 161, 440], "enabl": [2, 7, 8, 98, 100, 111, 120, 184, 270, 274, 291, 314, 382, 384, 397, 427, 430, 438, 439, 440, 442], "three": [2, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 65, 94, 332, 420, 422, 427, 429, 430, 431, 438, 439, 440, 442, 445], "flatstoragecheckpoint": 2, "discard": [2, 3, 83, 133, 178, 240, 383, 442, 445], "compress": 2, "At": [2, 232, 267, 276, 426, 427, 428, 433, 437, 440, 441], "correct": [2, 4, 45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 207, 405, 427, 428], "addit": [2, 3, 4, 15, 18, 21, 32, 39, 44, 55, 57, 65, 66, 72, 77, 84, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 165, 187, 191, 215, 230, 234, 236, 237, 240, 242, 247, 249, 268, 310, 314, 318, 328, 347, 364, 382, 384, 421, 425, 426, 429, 430, 438, 439, 442], "nestedstoragecheckpoint": 2, "represent": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 99, 126, 129, 133, 140, 141, 153, 154, 161, 162, 215, 240, 242, 247, 329, 349, 425, 440, 441, 445], "appar": [2, 3, 395], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 95, 96, 103, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 172, 175, 180, 190, 197, 205, 208, 230, 238, 249, 255, 261, 264, 280, 286, 291, 293, 306, 311, 312, 315, 316, 317, 318, 319, 321, 322, 323, 326, 329, 334, 336, 337, 338, 349, 354, 355, 362, 420, 421, 426, 427, 428, 429, 430, 431, 432, 438, 439, 440, 445], "assumpt": [2, 3, 82, 440, 442], "accur": [2, 7, 426, 440, 442], "truncat": [2, 3, 16, 17, 20, 22, 41, 43, 50, 55, 56, 64, 75, 77, 80, 83, 95, 96, 103, 105, 112, 113, 126, 127, 128, 129, 132, 133, 134, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 163, 165, 166, 179, 180, 195, 199, 200, 205, 210, 217, 220, 224, 228, 230, 237, 238, 247, 270, 274, 300, 314, 370, 425, 427, 430, 438, 445], "marl": [2, 144, 168, 187, 227, 231, 280, 281, 282, 338, 352, 421, 430, 438, 439], "extra": [2, 10, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 187, 244, 245, 247, 391, 420, 427, 428, 442], "fail": [2, 7, 27, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 181], "concret": [2, 425, 427], "set_se": [2, 3, 16, 17, 20, 22, 26, 41, 50, 55, 75, 77, 124, 125, 126, 129, 133, 138, 139, 140, 141, 147, 153, 154, 161, 162, 183, 192, 211, 218, 223, 229, 231, 237, 247, 429, 433, 435, 440, 444, 445], "manual_se": [2, 3, 30, 41, 51, 52, 62, 69, 75, 77, 78, 79, 99, 112, 113, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 192, 197, 211, 220, 223, 229, 231, 247, 267, 278, 279, 287, 290, 291, 306, 312, 319, 322, 329, 330, 332, 333, 337, 345, 352, 429, 433, 435, 438, 439, 440, 444, 445], "200": [2, 16, 17, 20, 26, 32, 39, 41, 44, 55, 65, 66, 67, 72, 75, 77, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 165, 166, 220, 247, 257, 258, 265, 294, 295, 382, 384, 425, 428, 429, 433, 435, 442], "22": [2, 112, 113, 243], "rb_test": 2, "_storag": [2, 441, 442], "max_siz": [2, 50, 62, 69, 77, 78, 79, 98, 99, 100, 101, 112, 113, 114, 118, 120, 427, 433], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 35, 45, 46, 47, 61, 63, 70, 84, 148, 235, 261, 278, 279, 280, 328, 332, 382, 425, 427, 429, 438, 439], "state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 245, 247, 280, 281, 332, 352, 416, 422, 425, 426, 445], "load_state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 244, 245, 247, 332, 352, 422, 425], "drawback": 2, "struggl": 2, "big": [2, 427, 433, 442, 445], "sequenti": [2, 9, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 186, 207, 247, 305, 307, 308, 309, 315, 320, 321, 326, 329, 330, 332, 338, 345, 349, 350, 351, 352, 354, 420, 427, 428, 431, 439, 440, 441, 444, 445], "known": [2, 3, 5, 7, 8, 77, 133, 230, 371, 372, 425, 426, 430], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 250, 425, 426, 432], "understand": [2, 8, 39, 425, 426, 429, 430, 431, 438, 439], "purpos": [2, 3, 7, 11, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 268, 329, 331, 343, 346, 349, 351, 412, 425, 427, 428, 429, 432, 434, 438, 439, 441, 445], "guid": [2, 11, 155, 156, 159, 160, 229, 419, 425, 439, 444], "explan": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 252], "effect": [2, 3, 32, 36, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 105, 107, 110, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 187, 192, 237, 247, 252, 402, 420, 425, 431, 438, 442, 445], "realm": [2, 431], "practition": 2, "often": [2, 3, 8, 282, 344, 347, 402, 425, 426, 430, 432, 440, 442, 445], "encount": [2, 4, 209, 314, 419, 426, 431, 440], "sometim": [2, 3, 82, 428, 445], "variabl": [2, 3, 4, 7, 8, 14, 19, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 72, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 149, 150, 151, 152, 153, 154, 158, 161, 162, 163, 164, 165, 166, 195, 232, 236, 245, 268, 269, 270, 272, 273, 274, 277, 307, 308, 309, 347, 350, 392, 422, 426], "immedi": [2, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 363, 438, 439], "199": 2, "info": [2, 3, 16, 17, 62, 67, 68, 69, 78, 79, 84, 104, 105, 107, 110, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 205, 238, 240, 243, 246, 391, 430, 435, 438, 439, 442, 444], "glanc": [2, 430], "seem": [2, 425, 428, 430], "togeth": [2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 50, 65, 71, 73, 74, 99, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 187, 216, 227, 236, 268, 270, 272, 274, 301, 307, 308, 309, 324, 420, 426, 428, 430, 438], "less": [2, 148, 302, 414, 415, 421, 427, 428, 442, 444], "omit": [2, 141, 249, 267, 291, 398, 427, 432, 440, 442], "proper": [2, 3, 4, 6, 7, 364, 365, 366, 367, 426, 427, 438, 439, 440, 442], "imposs": [2, 3, 69, 78, 79, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 329, 331, 346, 349, 351], "determin": [2, 18, 50, 62, 78, 84, 104, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 167, 215, 242, 280, 291, 332, 426, 431, 438, 439], "complic": [2, 39, 65, 77, 440, 442, 445], "matter": [2, 38, 433], "inconsist": [2, 445], "miss": [2, 3, 4, 6, 7, 32, 36, 39, 44, 50, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 205, 235, 237, 247, 248, 320, 321, 329, 332, 352, 419, 425, 428], "primari": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 141, 433], "elimin": [2, 3, 430], "upon": [2, 3, 8, 19, 438, 440], "canon": 2, "definit": [2, 59, 114, 280], "markov": [2, 3, 430, 445], "mdp": [2, 178, 430, 440], "context": [2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 113, 126, 129, 130, 133, 140, 141, 150, 153, 154, 161, 162, 230, 239, 247, 252, 270, 274, 281, 283, 305, 310, 360, 361, 364, 365, 366, 367, 369, 377, 384, 392, 397, 420, 421, 425, 426, 427, 428, 429, 438, 439, 440, 441, 442, 444], "condit": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 140, 192, 229, 244, 311, 312, 314, 316, 317, 328, 421, 425, 438, 440, 442], "complet": [2, 7, 9, 111, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 187, 228, 419, 421, 425, 427, 430, 437], "termin": [2, 3, 7, 16, 17, 20, 22, 41, 43, 50, 55, 56, 71, 75, 77, 95, 96, 103, 112, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 179, 180, 183, 184, 195, 199, 205, 217, 230, 238, 247, 251, 270, 274, 277, 314, 320, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 425, 426, 427, 438, 439, 440, 444, 445], "reward": [2, 3, 16, 17, 20, 38, 39, 41, 43, 50, 55, 56, 61, 70, 71, 75, 77, 83, 84, 94, 104, 105, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 181, 184, 185, 190, 191, 194, 196, 198, 199, 200, 205, 207, 208, 209, 213, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 236, 237, 238, 239, 241, 242, 244, 245, 247, 251, 270, 277, 310, 314, 324, 329, 330, 332, 333, 334, 336, 337, 338, 341, 345, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 395, 396, 397, 400, 416, 421, 422, 425, 426, 427, 428, 429, 430, 434, 438, 439, 440, 444, 445], "imit": [2, 3, 343], "inform": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 126, 129, 130, 133, 136, 139, 140, 141, 153, 154, 161, 162, 247, 253, 254, 255, 275, 281, 420, 421, 422, 425, 426, 427, 428, 429, 430, 438, 439, 440, 442, 444], "stateless": [2, 3, 50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 192, 245, 347, 382, 425, 430, 440, 445], "simul": [2, 3, 5, 7, 8, 82, 124, 125, 126, 135, 138, 139, 158, 165, 166, 174, 251, 277, 420, 425, 427, 429, 430, 434, 438, 439], "furthermor": [2, 438, 439], "certain": [2, 4, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 177, 192, 203, 228, 237, 247, 267, 269, 273, 346, 425, 426, 427, 429, 435, 438, 439, 445], "composit": [2, 3, 30, 31, 33, 34, 35, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 91, 110, 116, 123, 126, 129, 131, 133, 140, 141, 147, 153, 154, 161, 162, 172, 179, 181, 184, 194, 195, 196, 197, 198, 200, 205, 207, 209, 217, 218, 224, 228, 230, 234, 235, 236, 238, 245, 247, 249, 251, 277, 306, 315, 319, 321, 322, 326, 329, 349, 418, 425, 427, 431, 440], "uniform": [2, 62, 78, 104, 105, 438], "unambigu": 2, "distinguish": [2, 3, 69, 78, 79, 145, 146, 165, 166], "happen": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 248, 291, 426, 429, 432, 433, 434, 441, 445], "everyth": [2, 426, 427, 428, 434, 435], "belong": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 243, 244, 319, 425, 433, 439], "rule": [2, 77, 153, 194, 198, 319, 420, 427], "field": [2, 3, 16, 17, 20, 22, 28, 32, 36, 39, 41, 44, 45, 46, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 98, 99, 100, 104, 112, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 178, 180, 184, 194, 195, 198, 199, 200, 205, 213, 217, 218, 220, 224, 227, 228, 230, 235, 237, 238, 247, 251, 253, 263, 264, 270, 274, 277, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321, 323, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 406, 419, 420, 426, 440], "taken": [2, 3, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 219, 278, 279, 421, 425, 427, 428, 431, 438, 439, 440], "is_shar": [2, 3, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 50, 61, 63, 64, 65, 70, 71, 75, 77, 78, 79, 80, 83, 84, 94, 98, 99, 100, 104, 112, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 178, 180, 184, 194, 195, 198, 199, 200, 205, 213, 217, 218, 220, 224, 227, 228, 230, 238, 244, 251, 253, 263, 264, 270, 274, 277, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 321, 323, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 420, 440], "envbas": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 50, 84, 126, 130, 133, 140, 141, 153, 154, 161, 162, 167, 178, 181, 184, 194, 198, 210, 217, 218, 236, 237, 244, 247, 251, 270, 274, 276, 277, 314, 397, 406, 407, 408, 412, 414, 415, 416, 418, 430], "brought": [2, 427, 428, 431], "step_mdp": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 270, 274, 418, 428, 430, 440, 444, 445], "count": [2, 3, 50, 55, 84, 129, 130, 228, 235, 245, 291, 397, 402, 405, 425, 426, 427, 428, 442, 445], "trigger": [2, 7, 39, 65, 77, 140, 245], "turn": [2, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 61, 63, 66, 70, 72, 74, 84, 126, 139, 153, 162, 204, 236, 239, 243, 311, 382, 397, 421, 425, 426, 428, 431, 440, 441], "retain": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162], "consider": [2, 3, 8, 132, 134, 236, 418, 426, 438, 439, 442], "regard": [2, 264, 312, 329, 339, 349, 425, 427, 440], "expand": [2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 112, 113, 184, 230, 262, 318, 321, 330, 332, 345, 347, 350, 352, 354, 355, 438, 439, 440, 442, 444], "recur": [2, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 368, 431], "anyth": [2, 4, 16, 17, 20, 22, 23, 24, 25, 26, 421], "els": [2, 124, 125, 184, 195, 268, 269, 272, 273, 285, 420, 422, 425, 426, 427, 428, 438, 439, 440, 441], "repetit": [2, 427, 430, 433], "embed": [2, 215, 240, 241, 242, 257, 292, 306, 307, 308, 309, 318, 319, 323, 441], "strictli": [2, 3, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 208, 235, 237, 247, 332, 352, 425, 427], "enforc": [2, 32, 36, 39, 44, 55, 65, 66, 72, 77, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 320, 332, 352, 440], "n_action": [2, 314, 330, 332, 334, 336, 348, 352], "rightmost": [2, 421], "n_ob": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 314, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 432], "estim": [2, 4, 105, 112, 113, 140, 195, 199, 207, 257, 299, 307, 308, 309, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 421, 426, 427, 431, 432, 438, 439], "subsequ": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 247, 428, 438], "proce": [2, 438], "state_valu": [2, 308, 309, 323, 331, 337, 345, 346, 349, 350, 352, 364, 365, 366, 367, 369, 371, 373, 375, 377, 378, 380, 420, 425, 439], "f": [2, 124, 125, 133, 138, 139, 232, 248, 273, 328, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 425, 426, 427, 428, 435, 438, 439, 440, 442, 445], "next_state_valu": [2, 354, 355, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 418], "left": [2, 16, 17, 57, 105, 112, 140, 184, 191, 193, 194, 195, 196, 200, 207, 209, 215, 217, 218, 224, 228, 231, 234, 236, 238, 240, 242, 245, 247, 267, 280, 426, 427, 429, 433, 434], "would": [2, 3, 32, 39, 44, 55, 65, 66, 71, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 268, 270, 272, 274, 275, 280, 319, 421, 422, 426, 427, 428, 430, 432, 433, 440, 442, 444, 445], "best": [2, 5, 9, 137, 270, 274, 438, 439, 442, 444], "bug": [2, 4], "worst": [2, 426], "twice": [2, 8, 113], "feasibl": 2, "mostli": [2, 3, 22, 290, 384, 421, 434, 442, 445], "eas": [2, 3, 438, 439], "flat": [2, 118], "ted2flat": [2, 41, 418], "flat2t": [2, 418], "unflatten": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 184, 314], "deseri": [2, 3, 41], "posit": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 202, 203, 205, 226, 227, 228, 231, 235, 237, 239, 247, 332, 352, 421, 427, 438, 439, 440, 442], "both": [2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 126, 129, 130, 132, 133, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 163, 167, 179, 180, 187, 205, 218, 234, 235, 237, 247, 254, 255, 270, 273, 274, 275, 280, 281, 307, 308, 309, 312, 317, 329, 331, 332, 333, 337, 338, 345, 346, 347, 349, 350, 351, 352, 354, 355, 397, 420, 425, 427, 429, 430, 432, 438, 439, 440, 441, 442, 445], "mark": [2, 3, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162, 232, 270, 274, 364, 366, 367, 433, 442], "identifi": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 64, 126, 129, 133, 140, 141, 153, 154, 161, 162], "abov": [2, 3, 7, 32, 39, 44, 55, 65, 66, 72, 77, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 236, 247, 271, 299, 300, 328, 421, 422, 425, 427, 429, 430, 431, 438, 439, 440, 445], "output": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 84, 105, 112, 113, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 179, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 205, 207, 209, 211, 215, 217, 218, 223, 224, 227, 228, 231, 232, 234, 236, 237, 238, 240, 242, 243, 245, 247, 249, 254, 255, 256, 257, 258, 261, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 280, 281, 288, 290, 291, 293, 302, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 382, 384, 393, 420, 421, 425, 426, 427, 428, 429, 430, 431, 434, 437, 438, 439, 440, 441, 444, 445], "adjust": [2, 11, 230, 425, 438, 439, 440], "grumodul": [2, 186, 230, 305, 326, 428], "lstmmodul": [2, 270, 305, 428, 429], "skip": [2, 3, 18, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 192, 203, 205, 209, 235, 237, 247, 315, 319, 332, 347, 352, 364, 365, 366, 367, 383, 384, 395, 397, 425, 426, 440], "accumul": [2, 8, 247], "upcom": [2, 347, 373, 374, 375, 376, 378, 379, 380, 381, 425], "popular": [2, 3, 420, 428, 432, 439], "rainbow": 2, "multistep": [2, 16, 17, 20, 22, 23, 24, 25, 26, 247, 418, 426], "shift": [2, 41, 43, 55, 56, 75, 95, 96, 103, 325, 364, 365, 366, 367, 427], "approxim": [2, 439, 445], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 16, 22, 187, 261, 289, 329, 335, 348, 349, 393, 416, 427, 428, 439, 442], "2x": 2, "small": [2, 113, 240, 245, 250, 425, 427, 429, 438, 439, 445], "clearer": [2, 429, 431], "lazi": [2, 73, 74, 91, 92, 126, 129, 133, 140, 141, 153, 154, 161, 162, 165, 166, 215, 240, 254, 280, 283, 320, 321, 425, 426, 431, 433, 437, 442, 445], "certainli": 2, "welcom": [2, 430], "wrapper": [2, 3, 22, 45, 46, 47, 61, 63, 70, 71, 78, 79, 84, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 195, 243, 248, 252, 253, 302, 310, 314, 319, 324, 364, 389, 390, 391, 416, 418, 427, 428, 430, 438, 439, 441, 444, 445], "around": [2, 5, 7, 22, 78, 79, 126, 129, 133, 140, 141, 147, 153, 154, 157, 161, 162, 195, 252, 290, 314, 319, 364, 425, 426, 439, 445], "selecttransform": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162], "excludetransform": [2, 224, 442], "promptli": 2, "virtual": [2, 3, 132], "instal": [2, 3, 5, 10, 23, 24, 25, 66, 77, 126, 129, 133, 140, 141, 153, 154, 155, 156, 159, 160, 161, 162, 386, 402, 419, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 445], "d4rl": 2, "repositori": [2, 7, 165, 166, 438, 439], "wheel": [2, 427], "publish": 2, "openml": [2, 150], "scikit": [2, 150], "panda": 2, "raw": [2, 3, 4, 71, 205, 234, 238, 271, 299, 300, 426, 429, 433, 440], "go": [2, 3, 7, 99, 144, 153, 192, 216, 220, 310, 370, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "natur": [2, 3, 425, 431, 432, 433, 442], "modifi": [2, 3, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 187, 191, 192, 202, 205, 207, 215, 230, 236, 237, 240, 242, 245, 247, 282, 291, 310, 318, 319, 405, 421, 425, 426, 427, 429, 430, 438, 439, 440], "fly": [2, 187, 244, 346, 421, 427, 440, 442, 445], "least": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 190, 434, 445], "pre": [2, 7, 27, 32, 39, 44, 55, 65, 66, 72, 77, 83, 100, 126, 129, 133, 140, 141, 153, 154, 161, 162, 215, 234, 240, 242, 247, 445], "conisder": 2, "per": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 118, 137, 138, 139, 153, 155, 156, 190, 209, 223, 254, 255, 265, 267, 280, 281, 314, 384, 386, 389, 391, 402, 414, 415, 425, 426, 427, 428, 429, 431, 432, 435, 438, 439, 442, 444], "pipelin": [2, 3, 7, 420, 421, 427], "replac": [2, 3, 6, 7, 32, 39, 44, 55, 65, 66, 72, 77, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 197, 199, 206, 244, 245, 247, 267, 420, 438, 442, 444], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 209, 220, 230, 237, 247, 249, 291, 314, 400, 420, 422, 426, 427, 428, 431, 434, 440, 442, 445], "produc": [2, 3, 36, 37, 48, 50, 74, 112, 180, 183, 184, 254, 255, 275, 281, 287, 307, 309, 310, 319, 384, 427, 428, 429, 430, 431, 433, 442, 445], "unless": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 95, 111, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 235, 237, 245, 247, 252, 329, 330, 332, 345, 347, 349, 350, 351, 352, 354, 355, 427], "download": [2, 7, 10, 13, 14, 16, 17, 20, 22, 23, 24, 25, 26, 137, 215, 242, 384, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "forc": [2, 3, 6, 7, 16, 17, 22, 23, 24, 25, 26, 154, 426, 438, 439, 440], "robosetexperiencereplai": [2, 112, 113], "fk1": 2, "v4": [2, 133, 153, 180, 219, 373, 374, 375, 376, 378, 379, 380, 381, 425, 427, 441, 444], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 246], "obs_norm": 2, "norm": [2, 4, 8, 124, 125, 250, 402, 425, 426, 427, 438, 439, 440], "num_work": [2, 61, 63, 83, 94, 148, 153, 161, 425, 426], "os": [2, 63, 83, 94, 426], "cpu_count": [2, 63, 83, 94], "num_chunk": 2, "1000": [2, 4, 50, 69, 77, 98, 99, 104, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 244, 249, 267, 290, 291, 315, 319, 344, 425, 426, 427, 428, 429, 431, 433, 435, 440, 441, 442], "mp_start_method": [2, 153, 161, 235, 426, 444], "fork": [2, 5, 425, 426, 427, 428, 438, 439, 441, 444], "recreat": [2, 440], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 29, 69, 78, 79, 105, 107, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 207, 429, 433, 441], "grain": [2, 3, 69, 78, 79, 105, 107, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184], "nomenclatur": 2, "compact": [2, 50, 75, 95, 96, 103], "propos": [2, 187, 199, 252, 276, 344, 353, 420, 428, 442], "replaybufferensembl": [2, 110, 116, 123], "primit": [2, 3, 4, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355], "individu": [2, 4, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 83, 105, 107, 118, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 247, 425, 439], "dummi": [2, 3, 162, 195, 382, 425, 429, 433, 445], "semant": [2, 73, 74, 132, 134, 441], "ident": [2, 3, 16, 17, 20, 45, 46, 47, 55, 61, 63, 69, 70, 77, 78, 79, 84, 98, 107, 112, 126, 129, 132, 133, 134, 140, 141, 148, 153, 154, 161, 162, 199, 227, 236, 250, 280, 281, 330, 332, 345, 350, 352, 354, 355, 364, 365, 366, 367, 414, 415, 426, 430, 438, 439], "another_kei": [2, 107], "renam": [2, 3, 45, 46, 47, 61, 63, 70, 84, 107, 178, 218, 220, 425], "resiz": [2, 3, 107, 187, 426, 428, 429, 430, 442, 445], "imag": [2, 3, 4, 7, 11, 187, 189, 193, 215, 233, 242, 275, 382, 384, 425, 426, 429, 430, 434, 439, 441, 445], "comops": 2, "totensorimag": [2, 3, 107, 187, 219, 426, 428, 429, 442, 444, 445], "renametransform": [2, 3, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187], "rb0": [2, 107], "in_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 65, 67, 77, 107, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 173, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 253, 263, 270, 274, 277, 292, 301, 302, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 343, 345, 346, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 383, 384, 412, 420, 425, 426, 427, 428, 429, 431, 432, 435, 437, 438, 439, 440, 441, 442, 444, 445], "pixel": [2, 3, 7, 36, 107, 126, 127, 128, 132, 134, 135, 158, 187, 189, 193, 199, 202, 204, 211, 213, 215, 219, 233, 240, 242, 257, 285, 286, 382, 384, 425, 426, 428, 429, 434, 438, 441, 442, 444, 445], "rb1": [2, 107], "out_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 65, 67, 77, 107, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 173, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 253, 263, 264, 270, 274, 277, 292, 293, 301, 302, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 329, 330, 331, 332, 337, 338, 343, 345, 346, 349, 350, 351, 352, 354, 362, 364, 365, 366, 367, 382, 384, 397, 412, 420, 425, 426, 427, 428, 429, 431, 435, 437, 438, 439, 440, 441, 442, 444, 445], "pixels33": [2, 107], "data0": [2, 99, 107], "244": [2, 107, 215, 242], "data1": [2, 99, 107, 444], "_": [2, 8, 62, 67, 68, 69, 78, 79, 99, 107, 126, 130, 137, 165, 166, 188, 194, 195, 197, 198, 207, 211, 218, 233, 244, 247, 290, 306, 318, 319, 323, 328, 329, 330, 332, 333, 337, 338, 345, 349, 350, 352, 354, 355, 364, 365, 366, 367, 386, 425, 426, 427, 428, 429, 435, 438, 439, 440, 442, 444], "parent": [2, 3, 26, 32, 39, 43, 44, 55, 57, 65, 66, 72, 77, 82, 84, 107, 116, 123, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 184, 187, 188, 191, 192, 195, 196, 199, 202, 203, 209, 211, 215, 223, 228, 229, 230, 231, 235, 236, 239, 240, 247, 270, 274, 307, 326, 347, 349, 368, 382, 384, 425, 433, 440, 444, 445], "basic": [2, 3, 21, 147, 420, 427, 432, 433, 435, 438, 444, 445], "properti": [2, 3, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 183, 235, 236, 237, 244, 245, 247, 262, 271, 279, 283, 287, 298, 299, 300, 314, 329, 332, 347, 349, 351, 352, 431, 433, 440, 442], "input": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 115, 121, 126, 129, 133, 140, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 267, 268, 269, 270, 272, 273, 274, 275, 280, 281, 282, 283, 284, 291, 293, 294, 295, 296, 297, 299, 302, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 396, 400, 405, 412, 420, 421, 422, 425, 426, 427, 428, 429, 430, 438, 439, 440, 444, 445], "send": [2, 3, 8, 391, 444], "spawn": [2, 3, 4, 23, 27, 137, 148, 153, 161, 235, 426, 438, 439], "check_env_spec": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 205, 217, 238, 382, 418, 427, 438, 439, 440], "saniti": [2, 3, 7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 427], "make_composite_from_td": [2, 82, 418, 440], "fall": [2, 4], "categori": [2, 36, 420, 422], "bound": [2, 3, 4, 26, 32, 34, 36, 39, 44, 55, 65, 66, 72, 77, 85, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 190, 210, 244, 247, 249, 267, 291, 294, 295, 306, 311, 312, 315, 316, 317, 318, 319, 322, 329, 330, 332, 333, 345, 349, 350, 352, 354, 355, 418, 420, 425, 426, 427, 429, 438, 440, 444, 445], "unbound": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 172, 181, 184, 194, 195, 198, 217, 230, 251, 277, 306, 318, 321, 323, 351, 418, 440, 442], "boundeddiscret": [2, 33, 36], "boundedcontinu": [2, 27, 33, 36, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 208, 238], "unboundeddiscret": [2, 85, 154, 205, 418], "unboundedcontinu": [2, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 217, 230, 321, 326, 418], "implicitli": 2, "onehot": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164, 264, 293, 311, 316, 334, 336, 337, 338, 362, 418, 420], "multionehot": [2, 51, 52, 54, 334, 337, 338, 362, 418], "multicategor": [2, 52, 53, 54, 418], "binari": [2, 3, 7, 31, 32, 59, 163, 181, 185, 264, 293, 311, 312, 316, 317, 334, 337, 338, 362, 418], "concept": [2, 3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 290, 426, 442], "arbitrari": [2, 3, 30, 59, 69, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 183, 421, 425, 426, 440, 442], "combin": [2, 4, 42, 66, 354, 426, 429, 434, 442, 444], "relat": [2, 3, 4, 10, 62, 153, 202, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 426, 435, 440], "nevertheless": [2, 3, 427, 430, 442], "otherwis": [2, 3, 12, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 107, 112, 113, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 187, 188, 192, 197, 205, 211, 229, 230, 231, 235, 236, 237, 244, 247, 248, 250, 252, 268, 271, 272, 280, 281, 299, 300, 305, 311, 316, 319, 322, 330, 332, 341, 347, 348, 352, 364, 366, 367, 397, 399, 421, 422, 425, 426, 427, 428, 440, 445], "similarli": [2, 3, 26, 32, 39, 44, 55, 65, 66, 72, 77, 111, 116, 126, 129, 133, 140, 141, 153, 154, 161, 162, 209, 247, 280, 320, 321, 337, 345, 445], "possess": [2, 82], "unsqueez": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 105, 172, 181, 184, 187, 188, 233, 239, 425, 428, 429, 438, 439, 440], "move": [2, 4, 32, 39, 44, 55, 65, 66, 72, 77, 82, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 178, 180, 191, 196, 215, 230, 236, 237, 240, 242, 244, 247, 275, 318, 400, 425, 426, 428, 430, 445], "unbind": [2, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 209, 270, 274, 314], "said": [2, 427], "neg": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 62, 65, 78, 82, 104, 105, 187, 202, 216, 227, 239, 331, 340, 346, 349, 364, 366, 367, 421, 427, 438, 439, 440], "seen": [2, 3, 23, 24, 25, 26, 36, 37, 48, 74, 126, 129, 133, 140, 141, 153, 154, 161, 162, 196, 421, 425, 426, 428, 432, 438, 439, 442], "predict": [2, 3, 55, 71, 263, 265, 276, 277, 310, 324, 329, 331, 336, 339, 341, 342, 346, 349, 351, 363, 425, 426, 432], "deprec": [2, 28, 31, 32, 34, 37, 39, 40, 44, 48, 49, 52, 54, 55, 58, 60, 65, 66, 72, 77, 87, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 247, 270, 274, 329, 331, 332, 334, 337, 338, 339, 345, 346, 349, 350, 351, 352, 362, 364, 365, 366, 367, 372, 445], "mont": [2, 140, 195, 329, 331, 346, 349, 425], "carlo": [2, 140, 195, 329, 331, 346, 349, 425], "mct": [2, 50], "act": [2, 3, 4, 112, 113, 155, 156, 237, 263, 281, 330, 332, 333, 345, 350, 352, 354, 355, 428, 429, 438, 439, 442, 444], "tradit": [2, 432, 438], "integ": [2, 16, 17, 20, 22, 28, 44, 51, 53, 55, 59, 65, 66, 71, 72, 84, 105, 112, 113, 114, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 183, 199, 203, 211, 228, 245, 254, 255, 275, 280, 281, 332, 337, 345, 352, 421, 429, 442], "advanc": [2, 3, 26, 62, 69, 78, 79, 126, 129, 133, 140, 141, 153, 154, 161, 162, 430, 433, 442], "rebuild": [2, 50], "initi": [2, 4, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 107, 118, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 186, 195, 205, 211, 215, 230, 237, 240, 245, 246, 247, 248, 249, 250, 251, 267, 268, 269, 272, 273, 277, 280, 281, 282, 283, 284, 291, 314, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 416, 420, 421, 425, 426, 428, 430, 431, 433, 438, 440, 445], "pair": [2, 3, 45, 46, 47, 55, 61, 63, 65, 70, 77, 84, 126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 220, 230, 235, 270, 307, 315, 319, 347, 364, 365, 366, 367, 368, 420, 421, 425, 426, 427, 431, 432, 437, 440, 445], "term": [2, 71, 99, 207, 272, 273, 283, 284, 328, 329, 338, 404, 426, 427, 430, 431, 439], "pseudocod": [2, 3], "next_stat": [2, 421], "associ": [2, 3, 32, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 247, 294, 416, 425, 442], "sens": [2, 4, 45, 46, 47, 61, 63, 70, 84, 187, 195, 433, 440], "hard": [2, 3, 7, 118, 127, 128, 153, 344, 426, 445], "let": [2, 3, 6, 7, 11, 28, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 80, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 187, 247, 270, 274, 280, 281, 311, 397, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445], "know": [2, 3, 4, 9, 62, 69, 78, 79, 132, 134, 249, 347, 350, 397, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 442], "next_td": 2, "Of": [2, 3, 7, 419, 440, 445], "cours": [2, 3, 4, 419, 440, 445], "handi": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 434], "undertaken": [2, 84, 421, 440], "link": [2, 6, 7, 129, 426, 435], "hash": [2, 44, 50, 65, 66, 72, 77, 84, 126, 141], "past": [2, 4, 140, 187, 314, 426, 442], "node_map": [2, 50], "_index": [2, 65, 77], "Then": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 243, 427, 437], "track": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 79, 104, 105, 111, 126, 140, 223, 232, 244, 245, 247, 291, 314, 389, 395, 426, 428, 430, 433, 439, 440, 442], "next_data": [2, 126, 129, 133, 140, 141, 153, 154, 161, 162], "data_map": [2, 50], "form": [2, 16, 17, 22, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247, 268, 270, 272, 274, 319, 328, 329, 331, 346, 349, 402, 420, 431, 439], "figur": [2, 3, 84, 141, 195, 425, 427, 428, 439, 440, 445], "flowchart": 2, "o": [2, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 273], "get_tre": [2, 50, 84], "vertex": [2, 84], "longer": [2, 84, 248, 426, 435, 438, 439, 442], "vertic": [2, 84], "branch": [2, 50, 84], "repeat": [2, 84, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 195, 235, 251, 262, 427, 438, 439, 440], "depth": [2, 69, 82, 126, 129, 133, 140, 141, 147, 153, 154, 158, 161, 162, 251, 254, 255, 257, 258, 259, 260, 265, 266, 275, 277, 280, 281, 282, 285, 286, 311, 420, 426, 430, 432, 433, 437, 438, 439, 442], "until": [2, 3, 7, 26, 139, 231, 236, 247, 392, 427, 428, 435, 438, 439], "anymor": [2, 45, 46, 47, 61, 63, 70, 84, 237, 318], "utmost": 2, "commonli": [2, 105, 112, 113, 445], "emploi": [2, 284], "languag": [2, 29, 71, 140], "scarc": 2, "address": [2, 442], "subdomain": 2, "extern": [2, 3, 194, 198, 245, 438, 445], "token": [2, 45, 46, 47, 63, 64, 71, 80, 83, 94, 140, 141], "dm": [3, 425, 445], "abl": [3, 50, 144, 155, 156, 270, 274, 425, 427, 428, 431, 437, 438, 439, 440, 442], "experi": [3, 62, 69, 78, 79, 104, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 386, 387, 388, 389, 390, 391, 419, 426, 427, 429, 433, 434, 438, 439, 442], "box": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 132, 134, 282, 347], "lib": [3, 5, 6, 7, 9, 10, 16, 17, 20, 22, 26, 27, 67, 126, 129, 130, 133, 140, 141, 145, 146, 153, 154, 155, 156, 159, 160, 161, 162, 187, 190, 199, 206, 207, 211, 213, 218, 220, 223, 230, 236, 243, 244, 247, 382, 412, 425, 426, 427, 428, 437, 439, 441, 442, 444, 445], "hope": [3, 11], "nn": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 67, 71, 72, 77, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 191, 197, 199, 207, 215, 230, 236, 237, 240, 242, 247, 251, 253, 254, 255, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 279, 280, 281, 282, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 326, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 412, 420, 421, 425, 426, 427, 428, 429, 431, 432, 435, 437, 438, 439, 440, 441, 444], "organis": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 426], "attribut": [3, 4, 7, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 126, 129, 132, 133, 134, 139, 140, 141, 153, 154, 161, 162, 180, 195, 199, 209, 215, 237, 240, 244, 245, 247, 270, 274, 319, 329, 330, 332, 333, 334, 336, 338, 339, 340, 343, 345, 347, 349, 350, 351, 352, 354, 355, 362, 425, 428, 440], "live": [3, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 199, 247], "actual": [3, 4, 7, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 405, 421, 425, 427, 429, 438, 439, 440], "care": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 384, 425, 427, 429, 438, 439, 440, 442], "parametr": [3, 284, 319, 330, 332, 337, 345, 352, 425, 427], "observation_spec": [3, 50, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 184, 187, 188, 189, 190, 191, 193, 194, 196, 198, 199, 202, 204, 205, 206, 207, 211, 213, 215, 217, 219, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 247, 251, 270, 274, 277, 406, 412, 425, 427, 432, 437, 438, 439, 440, 445], "state_spec": [3, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 191, 196, 211, 236, 238, 239, 247, 251, 277, 440, 445], "reward_spec": [3, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 184, 185, 190, 191, 194, 196, 198, 208, 217, 221, 222, 223, 225, 227, 234, 236, 238, 239, 245, 247, 251, 277, 427, 438, 439, 440, 445], "done_spec": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 194, 196, 198, 199, 217, 227, 234, 236, 238, 247, 438, 439, 440, 445], "flag": [3, 8, 39, 62, 67, 68, 69, 78, 79, 107, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166, 206, 291, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 420, 438, 439, 440, 441], "input_spec": [3, 84, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 180, 184, 191, 194, 196, 197, 209, 213, 217, 218, 223, 224, 227, 228, 229, 230, 234, 236, 237, 238, 241, 247, 427, 440], "full_action_spec": [3, 84, 126, 129, 133, 140, 141, 151, 152, 153, 154, 161, 162, 163, 164, 180, 196, 251, 277, 438, 439], "full_state_spec": [3, 50, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 196, 251, 277], "output_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 237, 238, 245, 247, 440], "full_observation_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 251, 277], "full_reward_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 196, 217, 438, 439], "full_done_spec": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 184, 196, 217, 438, 439], "carri": [3, 26, 53, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 230, 347, 426, 428, 438, 439, 440, 442], "nontensor": [3, 58, 205, 238, 418], "spec_lock": [3, 129], "modif": [3, 5, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 202, 205, 247, 347, 421, 427, 440], "children": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "unlock": [3, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162], "set_spec_lock_": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162], "reason": [3, 4, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 215, 240, 247, 274, 421, 425, 426, 427, 432, 433, 438, 440, 442], "easi": [3, 5, 11, 126, 127, 128, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 249, 267, 291, 420, 421, 425, 426, 427, 439, 441, 442, 444, 445], "cach": [3, 14, 61, 63, 83, 94, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 194, 198, 215, 236, 237, 242, 252, 394], "principl": 3, "new_spec": 3, "eras": [3, 30, 31, 33, 34, 35, 40, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "relock": 3, "previous": [3, 4, 50, 427, 445], "importantli": [3, 315, 319], "action_s": 3, "help": [3, 4, 32, 39, 44, 55, 65, 66, 72, 77, 82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 199, 247, 329, 331, 346, 349, 351, 419, 421, 425, 426, 427, 428, 438, 439], "With": [3, 138, 139, 144, 229, 422, 426, 437, 438, 439, 442, 445], "necessarili": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 445], "present": [3, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 104, 105, 107, 111, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 178, 179, 195, 200, 220, 224, 230, 235, 237, 247, 255, 256, 257, 258, 259, 260, 266, 270, 272, 274, 284, 289, 291, 314, 318, 319, 320, 321, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 416, 422, 425, 435, 437, 438, 439, 442, 444], "0s": [3, 230, 428], "step_and_maybe_reset": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 430], "done_kei": [3, 28, 39, 41, 43, 50, 56, 75, 95, 96, 103, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 187, 199, 220, 228, 247, 438, 439], "assign": [3, 4, 16, 17, 22, 32, 33, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 333, 334, 336, 352, 427, 431, 438, 439, 442], "_reset": [3, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 179, 181, 183, 184, 187, 194, 198, 206, 217, 232, 251, 277, 438], "data_": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162], "append": [3, 8, 11, 50, 62, 67, 68, 69, 78, 79, 107, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 183, 190, 191, 195, 209, 220, 230, 237, 243, 269, 270, 273, 274, 311, 316, 425, 426, 427, 428, 429, 438, 439, 440, 441, 442, 444], "seed": [3, 16, 17, 20, 22, 26, 69, 78, 79, 107, 126, 129, 133, 140, 141, 147, 153, 154, 155, 156, 161, 162, 165, 166, 167, 181, 184, 194, 198, 205, 217, 237, 382, 402, 438], "determinist": [3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 176, 191, 215, 230, 236, 237, 240, 242, 247, 256, 265, 285, 295, 306, 315, 318, 319, 322, 330, 347, 397, 420, 425, 426, 427, 428, 429, 431, 432, 435, 438, 440, 444, 445], "preced": [3, 55, 126, 187, 428], "risk": [3, 216], "overlap": [3, 78, 118], "reproduc": [3, 66, 72, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 187, 205, 425, 427, 429, 439], "maximum": [3, 4, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 55, 61, 63, 64, 71, 77, 80, 83, 84, 85, 94, 98, 99, 100, 101, 104, 105, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 195, 197, 221, 228, 229, 231, 250, 298, 299, 300, 322, 330, 332, 337, 338, 345, 347, 348, 352, 384, 399, 420, 425, 426, 427, 428, 431, 438, 439, 442], "max_step": [3, 11, 118, 126, 129, 133, 140, 141, 145, 146, 147, 153, 154, 161, 162, 165, 166, 228, 235, 247, 382, 430, 431, 432, 434, 435, 438, 439, 444, 445], "tensordictmodul": [3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 67, 71, 77, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 186, 207, 253, 264, 270, 274, 277, 292, 293, 301, 302, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 320, 321, 322, 324, 326, 330, 332, 333, 337, 338, 340, 341, 342, 343, 345, 347, 350, 352, 354, 355, 362, 363, 364, 365, 366, 367, 397, 412, 418, 425, 427, 428, 432, 435, 437, 438, 439, 440, 441, 445], "trail": [3, 244], "treat": [3, 55, 421, 431, 432], "brief": [3, 427, 430, 432, 442], "deliveri": 3, "metaclass": [3, 129], "everi": [3, 8, 18, 32, 36, 37, 39, 44, 48, 55, 59, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 84, 107, 114, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 228, 229, 244, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 280, 281, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 347, 402, 422, 425, 426, 427, 428, 430, 431, 438, 439, 440], "flank": [3, 421, 428], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 187, 205, 235, 237, 244, 247, 251, 264, 265, 277, 278, 279, 280, 281, 282, 285, 286, 294, 295, 309, 312, 329, 332, 339, 340, 341, 342, 349, 352, 364, 369, 377, 424, 425, 427, 429, 431, 432, 433, 434, 438, 439, 442], "union": [3, 25, 32, 36, 37, 39, 44, 48, 49, 53, 54, 55, 57, 59, 60, 65, 66, 72, 73, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 280, 301, 336, 338, 350, 413, 416], "assess": [3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 48, 74, 145, 146, 168, 425], "split_trajectori": [3, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 113, 418], "adjac": [3, 28, 202, 314], "junction": 3, "inittrack": [3, 270, 274, 314, 425, 428], "tutori": [3, 154, 417, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 445], "scratch": [3, 8, 426, 440], "mere": [3, 22, 429], "batch_lock": [3, 126, 129, 131, 133, 140, 141, 153, 161, 184, 230, 237, 440], "notabl": 3, "braxenv": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 218, 418, 430], "jumanjienv": [3, 418], "straightforward": [3, 21, 425, 426, 430, 431, 432, 433, 442], "merg": [3, 62, 69, 78, 79, 440], "correctli": [3, 7, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "silent": [3, 32, 39, 44, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325], "_step": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247], "temporari": [3, 425], "hold": [3, 236, 360, 361, 440, 442], "arm": 3, "unbatch": [3, 268, 272], "captur": [3, 249, 267, 291, 429], "base_env": [3, 125, 126, 129, 133, 134, 139, 140, 141, 152, 153, 154, 161, 162, 164, 180, 181, 184, 190, 192, 194, 197, 198, 207, 213, 217, 219, 225, 228, 230, 231, 235, 237, 247, 384, 392, 425, 426, 427, 429, 438, 441, 444, 445], "break_when_all_don": [3, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162], "conditionalskip": 3, "programmat": 3, "pretti": [3, 425, 430, 434, 442], "likewis": 3, "break_when_any_don": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 183, 235, 247, 253, 314, 439], "te": 3, "paragraph": 3, "deep": [3, 9, 187, 208, 257, 258, 259, 260, 263, 291, 329, 332, 344, 352, 353, 425, 438], "dive": 3, "gym3": 3, "envpool": [3, 148, 149], "simultan": [3, 25, 139, 148, 149, 153, 161, 440], "advantag": [3, 8, 140, 195, 266, 329, 331, 346, 349, 351, 364, 365, 366, 367, 368, 369, 371, 373, 375, 377, 378, 380, 421, 422, 425, 426, 427, 428, 439, 440, 445], "inherit": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 276, 280, 281, 347, 422, 427, 438, 439], "from_pixel": [3, 11, 124, 125, 127, 128, 132, 134, 135, 138, 139, 158, 187, 219, 382, 384, 425, 426, 428, 430, 434, 435, 441, 442, 444, 445], "81": [3, 112], "simpli": [3, 6, 45, 46, 47, 61, 63, 70, 83, 84, 116, 118, 123, 200, 224, 243, 347, 364, 420, 421, 425, 427, 432, 438, 439, 445], "d": [3, 39, 62, 65, 69, 77, 78, 79, 94, 104, 105, 250, 268, 272, 315, 319, 444], "privat": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 243, 440, 445], "absenc": 3, "total": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 45, 46, 47, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 107, 113, 118, 331, 346, 349, 393, 395, 397, 402, 405, 406, 424, 425, 426, 427, 428, 432, 438, 439, 441, 442, 443, 444], "accord": [3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 50, 61, 63, 70, 71, 84, 107, 110, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 164, 211, 222, 271, 283, 294, 299, 300, 362, 420, 421, 431, 432, 438, 440, 442], "inner": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 197, 237, 422, 426, 427, 439, 445], "mind": [3, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 438, 439], "wherev": 3, "lost": [3, 8, 243], "intern": [3, 50, 81, 126, 129, 133, 140, 141, 153, 154, 161, 162, 245, 423], "face": [3, 5, 8, 9, 430, 445], "NOT": [3, 95, 96, 103, 113, 216], "right": [3, 6, 7, 28, 71, 105, 112, 426, 427, 429, 439, 440, 445], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 192, 237, 245, 247, 364, 365, 366, 367, 438], "preclud": 3, "presenc": [3, 39, 65, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 432], "annihil": 3, "supersed": [3, 28], "pettingzoowrapp": [3, 418], "group": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 144, 145, 146, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 195, 208, 227, 359, 420, 426, 431, 433, 439, 442], "__not__": [3, 315, 330, 332, 345, 350, 352, 354, 355], "constrain": [3, 207, 270, 274, 349, 445], "li": 3, "fact": [3, 7, 8, 425, 427, 430, 438, 439, 440, 441, 442, 445], "meaning": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "perfectli": [3, 422, 425, 429, 440], "meaningless": 3, "val": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 392, 432, 444], "agent0": [3, 429], "agent1": 3, "overrid": [3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 247, 262, 384, 416, 420], "bool": [3, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 179, 180, 181, 183, 184, 187, 188, 192, 194, 195, 197, 198, 199, 200, 202, 205, 207, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 227, 228, 230, 233, 234, 235, 237, 238, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 284, 298, 299, 300, 305, 306, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 362, 364, 365, 366, 367, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 391, 392, 395, 396, 397, 399, 400, 402, 416, 426, 427, 429, 440, 444, 445], "500": [3, 425, 426], "note": [3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 175, 179, 194, 198, 235, 244, 245, 247, 252, 268, 270, 272, 274, 291, 315, 319, 339, 418, 421, 426, 429, 431, 437, 438, 439, 445], "launch": [3, 16, 17, 22, 23, 24, 25, 27, 153, 161], "great": [3, 7, 8, 429, 438, 444], "speedup": [3, 8, 438, 445], "precis": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 178, 194, 198, 269, 273, 425, 427], "misspecifi": 3, "caus": [3, 7, 8, 16, 17, 20, 98, 100, 120, 126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 216, 445], "breakag": 3, "rais": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 163, 167, 168, 187, 201, 210, 220, 229, 230, 231, 235, 237, 244, 247, 249, 267, 291, 332, 347, 352, 392, 425, 427, 438, 439, 442], "mismatch": [3, 65, 426], "subprocess": [3, 16, 17, 22, 130, 153, 161], "multithreadedenv": [3, 418], "underneath": 3, "higher": [3, 4, 105, 190, 322, 425, 426, 427, 438, 442, 445], "type": [3, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 57, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 83, 84, 85, 94, 107, 126, 129, 133, 140, 141, 144, 147, 150, 153, 154, 155, 156, 161, 162, 169, 175, 176, 178, 184, 187, 191, 194, 196, 199, 200, 205, 207, 209, 215, 217, 218, 224, 228, 230, 234, 235, 236, 237, 238, 240, 242, 244, 245, 247, 249, 254, 255, 275, 280, 281, 284, 292, 301, 303, 311, 315, 318, 319, 326, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 357, 359, 362, 370, 382, 414, 418, 420, 425, 426, 427, 429, 433, 438, 439, 440, 442, 445], "atari": [3, 4, 187, 255, 384, 429, 434, 445], "classic": [3, 147, 156, 426], "benchmark_batched_env": 3, "seamlessli": [3, 440], "paradigm": [3, 22, 439], "decpodp": 3, "game": [3, 4, 5, 126, 145, 146, 151, 152, 255, 384, 429, 434], "thank": [3, 425, 429, 430, 444], "carrier": [3, 427, 428, 430, 442], "particular": [3, 32, 39, 44, 55, 65, 66, 72, 77, 83, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 237, 247, 421, 422, 426, 428, 430, 437, 439, 442], "thu": [3, 346, 439], "vma": [3, 165, 166, 382, 438, 439], "robot": [3, 5, 7, 215, 240, 242, 429, 439], "vmasenv": [3, 382, 418, 438, 439], "balanc": [3, 127, 128, 425, 426], "num_env": [3, 26, 132, 136, 149, 165, 166, 382, 438, 439], "n_agent": [3, 165, 166, 280, 281, 282, 292, 301, 362, 382, 421, 438, 439], "ground_rew": 3, "pos_rew": 3, "style": [3, 62, 69, 78, 79], "vari": [3, 132, 134, 135, 155, 156, 158, 165, 216, 421, 429, 439], "creation": [3, 153, 161, 445], "info_spec": [3, 153], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 30, 31, 33, 34, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 179, 180, 181, 199, 217, 264, 287, 290, 293, 311, 312, 315, 316, 317, 334, 337, 338, 362, 418, 428], "simpl": [3, 9, 21, 32, 39, 44, 55, 59, 65, 66, 72, 77, 82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 257, 314, 319, 334, 336, 347, 351, 421, 425, 426, 427, 430, 431, 432, 438, 439, 442, 445], "prefix": [3, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 232, 235, 237, 247, 315, 332, 347, 352, 383, 428, 432, 445], "exactli": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 135, 140, 141, 153, 154, 161, 162, 235, 237, 247, 268, 272, 287, 332, 352, 425, 428, 433, 438, 439], "action_kei": [3, 16, 17, 20, 22, 23, 24, 25, 26, 50, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 178, 180, 181, 197, 207, 209, 249, 251, 267, 276, 277, 291, 314, 421, 438, 439], "reward_kei": [3, 39, 41, 43, 50, 56, 75, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 247, 251, 277, 396, 400, 438, 439], "set_kei": [3, 199, 329, 331, 332, 334, 337, 338, 339, 345, 346, 347, 349, 350, 351, 352, 362, 368, 425, 438, 439], "awai": [3, 427, 430, 438, 439, 444], "leaf": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 206, 228, 230, 236, 319], "full": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 252, 270, 274, 312, 319, 393, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "autoresettransform": 3, "invalid": [3, 32, 39, 44, 55, 65, 66, 72, 77, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 168, 247, 278, 279], "nan": [3, 183, 243], "auto_reset": [3, 50, 126, 129, 133, 139, 140, 141, 153, 154, 161, 162, 183, 195, 247, 440], "auto_reset_replac": [3, 183], "placehold": [3, 135, 199, 237], "set_gym_backend": [3, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 171, 183, 418, 430, 444], "autoresettinggymenv": [3, 183], "self": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 248, 249, 251, 264, 267, 270, 274, 277, 280, 281, 292, 301, 315, 318, 323, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 422, 425, 440, 444], "super": [3, 147, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 251, 264, 277, 323, 330, 332, 333, 338, 345, 350, 352, 354, 355, 425, 440, 444], "td_reset": [3, 183], "exclud": [3, 8, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 183, 187, 200, 292, 331, 346, 349, 438, 439, 442], "r": [3, 4, 50, 55, 126, 180, 181, 183, 190, 192, 211, 225, 232, 235, 244, 250, 253, 269, 319, 328, 363, 382, 426, 440, 445], "3633e": [3, 183], "02": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 426, 435], "4877e": [3, 183], "01": [3, 183, 211, 250, 291, 325, 329, 331, 346, 349], "2849e": [3, 183], "7584e": [3, 183], "6609e": [3, 183], "6166e": [3, 183], "8366e": [3, 183], "2761e": [3, 183], "5685e": [3, 183], "4102e": [3, 183], "8111e": [3, 183], "9959e": [3, 183], "0865e": [3, 183], "5644e": [3, 183], "2119e": [3, 183], "2542e": [3, 183], "03": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 183, 211, 232], "9952e": [3, 183], "4059e": [3, 183], "2094e": [3, 183], "9009e": [3, 183], "5140e": [3, 183], "3554e": [3, 183], "2920e": [3, 183], "7893e": [3, 183], "6429e": [3, 183], "3057e": [3, 183], "2867e": [3, 183], "6963e": [3, 183], "3818e": [3, 183], "2576e": [3, 183], "2679e": [3, 183], "1640e": [3, 183], "00": [3, 124, 125, 183, 424, 443], "6972e": [3, 183], "0212e": [3, 183], "5959e": [3, 183], "4637e": [3, 183], "3121e": [3, 183], "2168e": [3, 183], "5232e": [3, 183], "7704e": [3, 183], "7457e": [3, 183], "4127e": [3, 183], "1064e": [3, 183], "0854e": [3, 183], "5712e": [3, 183], "2189e": [3, 183], "5235e": [3, 183], "8289e": [3, 183], "0009e": [3, 183], "0257e": [3, 183], "8893e": [3, 183], "5872e": [3, 183], "9405e": [3, 183], "7766e": [3, 183], "0403e": [3, 183], "0626e": [3, 183], "2959e": [3, 183], "7263e": [3, 183], "2775e": [3, 183], "9564e": [3, 183], "0411e": [3, 183], "6769e": [3, 183], "6354e": [3, 183], "8698e": [3, 183], "1765e": [3, 183], "6292e": [3, 183], "5375e": [3, 183], "1820e": [3, 183], "7023e": [3, 183], "5836e": [3, 183], "9016e": [3, 183], "4826e": [3, 183], "6191e": [3, 183], "6387e": [3, 183], "8667e": [3, 183], "2056e": [3, 183], "1147e": [3, 183], "5991e": [3, 183], "0278e": [3, 183], "5219e": [3, 183], "3067e": [3, 183], "6617e": [3, 183], "3322e": [3, 183], "2629e": [3, 183], "4599e": [3, 183], "7298e": [3, 183], "5848e": [3, 183], "0148e": [3, 183], "5745e": [3, 183], "6982e": [3, 183], "7877e": [3, 183], "3527e": [3, 183], "7285e": [3, 183], "6668e": [3, 183], "0583e": [3, 183], "6956e": [3, 183], "3962e": [3, 183], "9845e": [3, 183], "5015e": [3, 183], "5903e": [3, 183], "9993e": [3, 183], "9418e": [3, 183], "0196e": [3, 183], "6557e": [3, 183], "2109e": [3, 183], "8997e": [3, 183], "1507e": [3, 183], "7363e": [3, 183], "0310e": [3, 183], "9574e": [3, 183], "8980e": [3, 183], "0090e": [3, 183], "forecast": 3, "awar": [3, 7, 98, 99, 100, 101, 114, 116, 120, 270, 274, 426, 428], "detect": [3, 347, 421], "return_contigu": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 437], "tensordictbas": [3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 68, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 118, 126, 129, 131, 133, 140, 141, 153, 154, 161, 162, 167, 178, 179, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 199, 200, 201, 202, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 247, 249, 251, 267, 270, 274, 276, 277, 291, 310, 312, 314, 317, 318, 319, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 402, 425, 438, 440], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 16, 17, 22, 29, 32, 33, 36, 38, 39, 44, 55, 59, 62, 65, 66, 71, 72, 77, 78, 85, 104, 105, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 180, 183, 187, 191, 194, 198, 207, 208, 211, 215, 220, 221, 222, 229, 230, 233, 236, 237, 240, 242, 245, 247, 249, 250, 252, 253, 262, 265, 268, 271, 272, 275, 278, 279, 283, 284, 290, 294, 295, 298, 300, 318, 322, 325, 327, 328, 329, 330, 331, 332, 336, 337, 338, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 400, 425, 426, 442, 445], "_set_se": [3, 181, 184, 194, 198, 217, 440], "lazystackedtensordict": [3, 50, 74, 99, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 195, 437], "float32": [3, 16, 17, 20, 33, 36, 39, 41, 45, 46, 47, 50, 61, 62, 63, 65, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 98, 99, 100, 104, 105, 112, 120, 124, 125, 126, 129, 132, 133, 134, 138, 139, 140, 141, 147, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 166, 172, 178, 180, 184, 194, 198, 199, 200, 205, 208, 211, 213, 217, 218, 220, 224, 227, 228, 230, 233, 238, 251, 253, 263, 264, 270, 274, 277, 291, 292, 293, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 321, 323, 326, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 362, 420, 440], "exclusive_field": [3, 50, 99, 195], "stack_dim": [3, 50, 99, 195], "dramat": 3, "carefulli": [3, 438, 439, 445], "against": [3, 5, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 247, 306, 311, 312, 315, 316, 317, 318, 319, 330, 332, 345, 350, 352, 354, 355, 427, 438, 439], "plain": [3, 8, 140, 430], "expens": [3, 105, 112, 113, 382, 442], "absent": [3, 36, 37, 48, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 224, 237], "torchvis": [3, 11, 215, 242, 386, 438, 444, 445], "callabl": [3, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 107, 126, 129, 130, 133, 140, 141, 147, 153, 154, 161, 162, 177, 182, 184, 191, 192, 195, 199, 205, 230, 237, 238, 247, 248, 254, 255, 275, 282, 319, 328, 347, 382, 407, 408, 414, 415, 416, 426, 442], "bring": [3, 427, 430, 445], "signific": [3, 5, 8, 427, 444, 445], "kind": [3, 69, 82, 432, 438, 442], "consult": 3, "interest": [3, 315, 319, 420, 426, 427, 430, 439, 440, 445], "resize_par": 3, "revers": [3, 272], "order": [3, 11, 20, 32, 39, 44, 55, 59, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 111, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 194, 195, 198, 205, 213, 227, 235, 237, 247, 290, 306, 311, 318, 320, 321, 323, 329, 330, 332, 333, 337, 338, 345, 349, 350, 351, 352, 354, 355, 426, 438, 439], "chain": [3, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 140, 141, 191, 197, 254, 255, 321, 445], "in_keys_inv": [3, 173, 190, 194, 196, 198, 205, 211, 212, 213, 217, 218, 220, 225, 234, 236, 238, 239, 425, 437, 440, 445], "append_transform": [3, 50, 62, 67, 68, 69, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 173, 180, 181, 183, 184, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 203, 205, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 247, 253, 270, 274, 382, 425, 428, 438, 440, 442, 444, 445], "doubletofloat": [3, 425, 427, 437], "float64": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 127, 128, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 180, 191, 194, 198, 215, 230, 236, 237, 240, 242, 247, 318], "think": [3, 419, 427, 438, 439, 445], "in_": 3, "out_": 3, "perspect": [3, 264, 312, 339, 427, 429], "outer": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 422, 425, 426, 445], "ob": [3, 4, 8, 28, 36, 37, 48, 50, 62, 67, 68, 69, 74, 77, 78, 79, 84, 104, 107, 112, 113, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 178, 181, 183, 194, 196, 198, 211, 225, 227, 233, 257, 258, 259, 260, 280, 281, 282, 316, 323, 330, 332, 333, 338, 345, 350, 352, 354, 355, 364, 365, 366, 367, 426, 429, 437, 438, 440, 442, 444, 445], "obs_standard": 3, "out_keys_inv": [3, 173, 190, 194, 196, 198, 205, 211, 212, 213, 217, 218, 225, 227, 234, 236, 238, 239, 440], "illustr": [3, 425, 426, 431, 442], "chang": [3, 5, 7, 11, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 111, 112, 114, 116, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 184, 191, 194, 196, 198, 200, 207, 209, 217, 218, 224, 228, 234, 236, 237, 238, 244, 245, 247, 272, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 421, 425, 428, 438, 439, 440, 441, 442, 445], "schemat": [3, 421], "outermost": 3, "innermost": 3, "similar": [3, 32, 39, 44, 45, 46, 47, 55, 57, 61, 63, 65, 66, 69, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 191, 195, 215, 230, 236, 237, 240, 241, 242, 244, 245, 247, 307, 309, 315, 318, 319, 421, 425, 426, 427, 428, 429, 431, 432, 433, 434, 440, 442, 444, 445], "transform_action_spec": [3, 191, 196, 211, 236, 238, 239, 247], "spec_from_random_valu": 3, "_apply_transform": [3, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 440, 445], "rand": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 99, 107, 124, 125, 138, 139, 147, 151, 152, 157, 163, 164, 181, 184, 194, 198, 217, 227, 251, 277, 315, 329, 330, 332, 333, 334, 336, 337, 338, 345, 347, 349, 350, 352, 354, 355, 440, 444, 445], "approach": [3, 62, 69, 78, 79, 187, 211, 250, 280, 281, 354, 425, 427, 432, 433, 438, 445], "insid": [3, 45, 46, 47, 61, 63, 70, 84, 153, 445], "did": [3, 69, 243, 370, 426, 427, 433, 442, 445], "_inv_apply_transform": [3, 180, 236, 247, 440, 445], "actiondiscret": 3, "rand_act": [3, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 184, 195, 237, 430], "action_discret": 3, "addonetoob": 3, "Is": [3, 236], "rewrit": [3, 236], "_call": [3, 181, 183, 184, 186, 187, 188, 191, 192, 196, 197, 199, 200, 201, 202, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 440], "_inv_cal": [3, 180, 236, 247], "overwrit": [3, 236], "till": [3, 236, 243], "encapsul": [3, 236, 430, 431, 432], "forget": [3, 236, 272], "edit": [3, 236, 247, 433], "top": [3, 4, 118, 124, 125, 138, 139, 193, 236, 251, 277, 431], "transform_output_spec": [3, 184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 245, 247], "transform_input_spec": [3, 180, 184, 191, 194, 196, 197, 209, 213, 217, 218, 223, 227, 228, 229, 230, 234, 236, 238, 241, 247], "transform_observation_spec": [3, 184, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 202, 204, 206, 207, 209, 211, 213, 217, 218, 219, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 247, 440], "transform_state_spec": [3, 191, 196, 211, 236, 238, 239, 247], "transform_reward_spec": [3, 184, 185, 190, 191, 194, 196, 200, 207, 208, 209, 217, 218, 221, 222, 223, 224, 225, 227, 228, 234, 236, 238, 239, 245, 247], "rewardsum": [3, 178, 236, 247, 438, 439], "undo": 3, "addonetoact": 3, "subtract": [3, 229], "regist": [3, 14, 15, 18, 19, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162, 163, 164, 175, 178, 194, 198, 199, 223, 235, 237, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 382, 384, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 422, 425, 427, 430, 442], "manipul": [3, 4, 8, 127, 128, 215, 236, 240], "third_transform": 3, "unexpect": [3, 16, 17, 20, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 445], "behviour": 3, "fortun": [3, 428, 429, 430, 431, 434], "alreadi": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 230, 247, 248, 319, 364, 365, 366, 367, 425, 427, 434, 438, 439], "catfram": [3, 314, 426], "notic": [3, 118, 187, 421, 427, 435, 440], "parenthood": 3, "henc": [3, 62, 179, 216, 280, 425, 427, 438, 439, 440], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 153, 161, 237, 382, 392, 440], "discret": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 132, 133, 134, 140, 141, 145, 146, 153, 154, 155, 156, 161, 162, 165, 166, 180, 197, 205, 287, 290, 293, 336, 337, 338, 339, 420, 426, 431, 439], "might": [3, 45, 46, 47, 61, 63, 64, 70, 84, 388, 419, 425, 430, 445], "action_mask": [3, 126, 138, 139, 155, 156, 159, 160, 181], "unavail": [3, 155, 156], "probabl": [3, 4, 8, 71, 107, 110, 252, 253, 262, 264, 267, 268, 270, 272, 274, 275, 278, 279, 287, 299, 300, 315, 319, 332, 349, 420, 421, 426, 429, 431, 444], "probabilistictensordictmodul": [3, 207, 319, 320, 421, 444], "tensordictsequenti": [3, 39, 65, 77, 253, 267, 270, 274, 291, 311, 314, 320, 321, 326, 420, 425, 426, 428, 429, 431, 435, 437, 438, 441, 444], "maskedcategor": [3, 279, 418], "linear": [3, 16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 124, 125, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 191, 207, 215, 230, 236, 237, 240, 242, 247, 251, 253, 254, 255, 257, 258, 259, 260, 264, 266, 267, 275, 277, 280, 281, 283, 284, 291, 293, 294, 295, 306, 307, 308, 309, 313, 314, 315, 316, 318, 321, 323, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 412, 420, 426, 437, 441, 444], "in_feat": 3, "out_feat": 3, "logit": [3, 45, 47, 63, 71, 263, 278, 279, 287, 290, 312, 315, 337, 338, 420], "dist": [3, 10, 278, 279, 287, 319, 421, 431], "distribution_class": [3, 207, 307, 308, 309, 310, 315, 319, 321, 329, 330, 332, 337, 338, 345, 349, 350, 351, 352, 420, 425, 427, 431, 438, 439, 444], "wrap": [3, 5, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 129, 133, 134, 138, 139, 140, 141, 146, 149, 151, 152, 153, 154, 155, 156, 161, 162, 164, 166, 167, 175, 192, 235, 237, 247, 248, 270, 274, 302, 307, 308, 309, 314, 316, 319, 324, 347, 362, 420, 425, 426, 427, 428, 432, 435, 438, 439, 445], "actionmask": [3, 126], "your_base_env": 3, "mask_kei": [3, 28, 181, 216, 247], "itself": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 171, 183, 247, 347, 354, 427, 430], "ey": 3, "report": [3, 124, 125, 138, 139, 434], "foremost": 3, "callback": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162, 439], "ad": [3, 4, 20, 28, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 91, 104, 105, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 205, 223, 235, 237, 247, 250, 283, 284, 291, 328, 329, 331, 332, 334, 339, 346, 349, 352, 362, 426, 428, 429, 431, 438, 442, 444, 445], "tensordictrecord": [3, 418], "videorecord": [3, 11, 382, 418, 427, 434, 435, 438], "csvlogger": [3, 11, 382, 384, 418, 426, 434, 435, 438], "wandblogg": [3, 418, 434], "tensorboardlogg": [3, 412, 418, 434], "tag": [3, 7, 11, 382, 384, 386, 389, 416, 434, 435, 438], "mp4": [3, 382, 384, 386, 435, 438], "video_format": [3, 382, 384, 386, 435, 438], "whc": 3, "cwh": 3, "exp": [3, 328, 421], "al": [3, 29, 132, 134, 199, 213, 251, 429, 445], "pong": [3, 149, 213, 429, 445], "v5": [3, 132, 134, 149, 199, 213, 429, 445], "tediou": [3, 430], "workspac": [3, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205], "pixelrendertransform": [3, 418, 438], "stream": 3, "alik": [3, 382], "envcreat": [3, 20, 27, 153, 161, 235, 382, 412, 413, 416, 418, 425, 426, 444, 445], "render_mod": [3, 382, 440], "rgb_arrai": [3, 382, 438, 439, 440], "uncom": [3, 434], "line": [3, 7, 32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 426, 434, 438, 439], "comment": [3, 422, 426, 444], "pixels_record": [3, 382], "close": [3, 20, 133, 148, 207, 329, 331, 346, 349, 382, 425, 426, 430, 437, 438, 440, 444], "mission": 3, "irrespect": [3, 318, 319], "dmcontrol": [3, 126, 129, 133, 140, 141, 153, 154, 161, 162], "jumanji": [3, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162], "framework": [3, 4, 9, 27, 124, 125, 126, 129, 133, 138, 139, 140, 141, 147, 153, 154, 161, 162, 268, 444, 445], "Its": [3, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 244, 247, 318, 368], "success": [3, 140, 187, 195, 232, 267, 332, 354, 426, 433, 435, 440, 442, 444], "foundat": [3, 5, 155, 156, 427, 439], "inspir": [3, 429, 440], "gone": [3, 4, 5, 314], "prefer": [3, 16, 17, 22, 25, 28, 29, 62, 69, 78, 79, 112, 113, 216, 224, 349, 354, 399, 420, 427, 438, 439, 442, 444], "concomittantli": 3, "problem": [3, 7, 8, 9, 20, 426, 427, 428, 433, 438, 439, 440, 442, 445], "decor": [3, 8, 175, 177, 248, 270, 274, 305, 347, 364, 365, 366, 367, 392, 428, 444], "relev": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 71, 126, 129, 133, 140, 141, 153, 154, 161, 162, 364, 365, 366, 367, 368, 391, 429, 440], "gym_backend": [3, 177, 418], "env1": [3, 253, 437], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 126, 177], "env2": [3, 437], "_env": [3, 6, 132, 445], "classic_control": 3, "pendulumenv": [3, 50, 418, 440], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 143, 171, 208], "side": [3, 4, 445], "v0": [3, 16, 17, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 126, 129, 133, 135, 138, 139, 140, 141, 142, 143, 153, 154, 161, 162, 191, 208, 237, 244, 245, 392, 412], "26": [3, 113, 126, 129, 133, 140, 141, 153, 154, 161, 162], "fun": [3, 177, 248, 427, 438, 439], "reveal": 4, "curv": 4, "exploit": [4, 431], "cv": 4, "flip": [4, 139], "correspondingli": 4, "invers": [4, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 107, 180, 187, 194, 198, 200, 205, 211, 218, 220, 232, 234, 236, 238, 247, 327, 337, 345, 418, 440], "prescript": 4, "tune": [4, 29, 207, 438, 439, 441], "coeffici": [4, 29, 38, 71, 207, 439], "bonu": [4, 329, 331, 346, 349], "beta": [4, 62, 78, 104, 105, 337, 345, 346, 425, 426, 442, 444], "reduc": [4, 6, 35, 118, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 187, 192, 229, 250, 252, 299, 418, 426, 438], "downstream": [4, 421, 425], "formul": [4, 438, 439], "rate": [4, 11, 244, 245, 363, 426, 427, 438, 439], "gradient": [4, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 252, 271, 279, 284, 287, 299, 300, 319, 329, 331, 332, 333, 337, 338, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 363, 364, 365, 366, 367, 402, 425, 427, 438, 439, 440], "easier": [4, 66, 420, 425, 444], "local": [4, 7, 10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 68, 72, 77, 105, 112, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 280, 281, 292, 301, 362, 389, 391, 418, 429, 434, 435, 438, 439], "optima": 4, "product": [4, 9, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 268, 269, 272, 273, 414, 415], "sum": [4, 26, 32, 39, 53, 59, 77, 118, 124, 125, 127, 128, 132, 134, 135, 138, 139, 148, 149, 158, 186, 208, 223, 278, 279, 299, 301, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355, 363, 370, 421, 425, 426, 427, 428, 429, 432, 435, 438, 439, 440, 445], "stat": [4, 211, 244, 245, 406, 416, 426, 427], "w": [4, 107, 126, 151, 152, 187, 189, 193, 219, 233, 268, 291, 384, 426, 442], "yield": [4, 16, 17, 20, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 195, 247, 347, 425, 432], "insight": [4, 429], "auxiliari": [4, 432], "weight": [4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 71, 72, 77, 105, 107, 110, 124, 125, 126, 129, 133, 140, 141, 153, 154, 159, 160, 161, 162, 191, 205, 208, 215, 230, 235, 236, 237, 240, 242, 247, 268, 269, 270, 272, 273, 274, 280, 282, 284, 318, 329, 330, 331, 332, 338, 341, 352, 354, 404, 411, 418, 420, 422, 425, 426, 427, 437, 440, 442, 444], "credit": 4, "futur": [4, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 103, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 215, 235, 237, 242, 247, 275, 329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 419], "spars": [4, 39, 428], "intermedi": [4, 16, 17, 39, 50, 65, 77, 186, 253, 270, 274, 312, 425, 429, 441], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 425], "discov": 4, "score": [4, 71, 288, 290], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 39, 62, 65, 67, 68, 69, 77, 78, 79, 84, 107, 126, 145, 146, 155, 156, 157, 165, 166, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 206, 207, 209, 210, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 251, 270, 274, 311, 316, 401, 420, 421, 425, 429, 430, 438, 442], "explicit": [4, 16, 17, 20, 248, 442], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 29, 126, 129, 133, 140, 141, 153, 154, 161, 162, 272, 337, 345, 427, 439], "addition": [4, 262], "timestep": [4, 71, 220, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 438, 439], "realli": 4, "huge": [4, 281, 428], "std": [4, 211, 244, 249, 289, 425, 445], "torchrlunseen": [4, 140], "extrins": 4, "wrong": [4, 105, 112], "bonus": 4, "denser": 4, "prior": [4, 72, 295, 341, 439], "freshli": 4, "drop": [4, 111, 113, 178, 245], "meant": [4, 55, 140, 147], "encourag": [4, 153, 290, 425, 426, 442], "measur": [4, 98, 100, 120, 124, 125, 138, 139, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 427, 433], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 29, 431], "ideal": [4, 211, 440], "down": [4, 16, 17, 20, 22, 421, 428, 430], "distil": 4, "nois": [4, 246, 284, 291, 304, 350, 354, 355, 397, 416, 425, 438], "exploratori": [4, 329, 331, 346, 349], "misalign": 4, "trade": [4, 431], "unavoid": 4, "bootstrap": [4, 339, 365, 371, 372, 425, 428], "noisi": [4, 283, 284, 304, 420], "unstabl": [4, 271, 299, 300], "inher": [4, 329, 349], "stochast": [4, 207, 265, 284, 285, 295, 330, 332, 335, 337, 338, 343, 345, 348, 350, 352, 420, 427, 431, 439], "enemi": 4, "pomdp": [4, 442], "loos": [4, 319, 420, 426, 427], "nonexist": 4, "sequenc": [4, 16, 17, 20, 22, 29, 36, 37, 39, 48, 51, 53, 61, 62, 63, 64, 65, 69, 71, 74, 77, 80, 83, 84, 94, 97, 107, 108, 110, 116, 119, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 173, 185, 186, 187, 188, 189, 193, 194, 197, 198, 202, 204, 205, 208, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 231, 232, 233, 234, 236, 238, 244, 245, 254, 255, 262, 264, 268, 272, 275, 278, 279, 280, 281, 287, 293, 297, 310, 320, 321, 335, 383, 384, 397, 398, 399, 401, 402, 420, 425, 427, 428, 429, 437, 438, 439, 445], "lstm": [4, 230, 273, 274, 429], "rel": [4, 107, 230, 262, 298, 425, 426, 438, 439, 442], "tend": 4, "stabl": [4, 9, 10, 150], "compens": 4, "descent": [4, 284], "minimum": [4, 85, 153, 161, 221, 265, 298, 299, 300, 322, 325, 328, 330, 332, 338, 347, 348, 352, 393, 421, 425, 427, 435, 438, 439], "manual": [4, 11, 23, 25, 26, 50, 62, 67, 68, 69, 78, 79, 107, 133, 134, 425, 428, 442], "deviat": [4, 211, 244, 245, 249, 251, 265, 277, 283, 284, 289, 290, 349, 354, 355, 425, 431, 439], "radic": 4, "begin": [4, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 183, 268, 269, 272, 273, 328, 392, 421, 429, 430, 431, 432, 433, 434, 435], "stabil": [4, 203, 252, 329, 331, 346, 349, 351], "stage": [4, 425, 440], "never": [4, 16, 17, 22, 33, 85, 105, 232, 433, 444], "prevent": [4, 30, 31, 35, 36, 37, 40, 48, 51, 52, 53, 54, 59, 60, 67, 74, 96, 244, 245, 271, 299, 300, 329, 331, 346, 349, 351, 400, 434, 442], "entir": [4, 126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 280, 427, 430, 440, 442], "submit": [4, 132, 184, 419, 444], "adequ": [4, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 427, 438, 439], "infeas": 4, "allevi": [4, 420], "prune": [4, 141], "fire": [4, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "illeg": 4, "chess": [4, 126, 151, 152], "grasp": 4, "wherein": 4, "cumul": [4, 39, 223, 229, 251, 370, 427], "q": [4, 9, 126, 129, 133, 140, 141, 153, 154, 161, 162, 257, 258, 259, 260, 263, 264, 266, 292, 293, 301, 309, 312, 316, 317, 330, 332, 333, 334, 336, 337, 338, 339, 344, 345, 350, 352, 354, 355, 362, 418, 425, 432], "flow": [4, 425, 427, 438, 439, 440, 442], "reparameter": [4, 262, 279, 287], "soft": [4, 344, 352, 353, 438], "critic": [4, 8, 307, 313, 329, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 425, 432], "clip": [4, 71, 190, 221, 329, 331, 346, 349, 351, 354, 355, 402, 427, 439, 440], "oppos": [4, 83], "incorrect": [4, 112], "thought": [4, 126, 129, 133, 140, 141, 153, 154, 161, 162], "region": 4, "squash": [4, 428, 444], "tanh": [4, 254, 255, 268, 269, 271, 272, 273, 275, 281, 298, 299, 300, 322, 427, 431, 438, 439, 440, 441], "prob": [4, 278, 279, 287, 290, 427, 439], "rememb": [4, 438], "remap": 4, "origin": [4, 8, 39, 45, 46, 47, 61, 63, 64, 65, 70, 71, 77, 80, 84, 137, 196, 197, 207, 215, 237, 242, 247, 268, 315, 318, 319, 330, 332, 344, 345, 347, 349, 350, 352, 354, 355, 425, 429, 437, 440, 445], "world": [5, 147, 324, 341, 429, 434, 438, 439, 440, 445], "histor": 5, "ceas": 5, "farama": [5, 142, 143, 155, 156, 427, 440], "gymwrapp": [5, 126, 129, 133, 140, 141, 153, 154, 161, 162, 200, 224, 228, 243, 418, 427, 444], "feel": [5, 419, 435, 444], "free": [5, 7, 178, 194, 198, 329, 341, 349, 422, 427, 435, 439, 444], "gladli": 5, "prepar": [6, 43, 427], "conda": [6, 7, 419], "cmake": 6, "activ": [6, 7, 9, 50, 254, 255, 261, 265, 275, 280, 281, 331, 346, 349, 420, 440, 444], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 23, 26, 419], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 135], "y": [6, 7, 39, 65, 69, 77, 150, 266, 280, 302, 425, 439, 442], "facebookresearch": [6, 135], "subdirectori": 6, "verbos": [6, 435], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 91, 126, 129, 133, 140, 141, 153, 154, 161, 162, 217, 226, 247, 347, 438, 439, 444, 445], "command": [6, 7, 10, 162, 427, 438, 439, 440, 445], "readm": [6, 7, 165, 444], "md": [6, 7], "habitatenv": [6, 418], "_has_habitat": 6, "available_env": [6, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 445], "startswith": [6, 253, 421, 425, 432], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 130, 347, 425], "env_nam": [6, 124, 126, 127, 129, 130, 132, 133, 135, 138, 140, 141, 142, 148, 153, 154, 158, 161, 162, 425, 427, 445], "llvmlite": 6, "config": [6, 7, 215, 242, 256, 261, 289, 406, 407, 408, 410, 413], "var": [6, 7, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 245, 247, 332, 347, 352], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 311, 347], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 35, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 332, 347, 352, 429, 442], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 429], "stand": [7, 42, 127, 128, 153, 161, 437, 440], "joint": [7, 426], "contact": [7, 64, 438], "engin": [7, 158, 440], "biomechan": 7, "graphic": 7, "anim": [7, 439], "area": 7, "demand": [7, 434, 445], "fast": [7, 9, 99, 124, 125, 178, 218, 350, 425, 426, 427, 444], "articul": 7, "acquir": [7, 427], "deepmind": [7, 8, 9, 126, 127, 128, 129, 133, 140, 141, 145, 146, 151, 152, 153, 154, 161, 162, 199, 427, 430], "whomev": 7, "licenc": 7, "incorpor": [7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 267, 291, 354, 428, 431, 440], "relianc": 7, "obsolet": 7, "legaci": [7, 28], "pro": [7, 419], "tip": [7, 419], "glfw": [7, 425], "osmesa": 7, "egl": 7, "advic": [7, 445], "sudo": [7, 419], "apt": [7, 439], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 141, 307, 308, 309], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 421, 425, 427, 428, 438, 439, 442], "roboti": 7, "html": [7, 16, 17, 148, 150, 151, 152], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 16, 17, 22, 153, 161], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 61, 63, 83, 94], "bin": [7, 264, 290, 312, 420], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 260, 315, 319, 425, 427, 429, 442], "nvidia": [7, 137, 429], "older": [7, 248], "hack": [7, 425], "adatp": 7, "script": [7, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 392, 412, 416, 420, 421, 422, 425, 426, 429, 434, 438, 439, 440, 442], "unnot": [7, 216], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 96, 426, 442], "troubleshoot": 7, "gl": 7, "h": [7, 107, 187, 189, 193, 219, 233, 268, 269, 270, 272, 273, 274, 277, 384, 426, 442], "eglshim": 7, "fatal": 7, "No": [7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 53, 54, 59, 60], "directori": [7, 45, 46, 47, 61, 63, 70, 83, 84, 98, 389, 391, 421, 422, 425, 431, 434, 438], "devel": 7, "ubuntu": [7, 137], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 426, 428, 437], "libstdc": 7, "glibcxx_3": 7, "29": [7, 112, 113], "compil": [7, 16, 17, 20, 28, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 97, 98, 99, 100, 101, 105, 108, 112, 113, 114, 119, 120, 122, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 248, 268, 269, 272, 273, 299, 364], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 32, 35, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 210, 235, 237, 247, 332, 352, 421, 445], "job": [7, 23, 24, 25, 27, 69, 78, 79, 107, 442, 444], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 112, 124, 125], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 438, 439], "global": [7, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 235, 247, 292, 301, 315, 319, 362, 422, 425, 438, 439], "cuda_visible_devic": 7, "id": [7, 28, 71, 84, 105, 107, 112, 113, 126, 129, 132, 133, 140, 141, 153, 154, 161, 162, 163, 164, 291, 332, 350, 387, 391, 433, 442], "slurm_step_gpu": 7, "black": [7, 126, 438], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 439], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 422], "n_training_step": 8, "datapoint": [8, 83, 442], "n_data_per_train": 8, "no_grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 247, 252, 268, 269, 272, 273, 364, 365, 366, 367, 427, 428, 429, 439], "loss_fn": [8, 428, 432, 433, 444], "zero_grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 290, 422, 425, 427, 428, 429, 432, 435, 438, 439, 440], "backpropag": [8, 124, 125, 138, 139, 153, 329, 330, 331, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 355, 362, 432, 439, 440], "differenti": [8, 83, 124, 125, 207, 332, 354, 364, 365, 366, 367, 428, 431, 432, 438, 439, 440], "denomin": 8, "artifact": 8, "numer": [8, 69, 133, 244, 271, 299, 300, 306, 311, 312, 315, 316, 317, 318, 319, 400, 427, 442, 445], "misconcept": 8, "freed": 8, "appear": [8, 11, 33, 59, 84, 85, 105, 112, 113, 129, 140, 195, 421, 440, 442], "compuat": 8, "fix": [8, 38, 153, 230, 330, 332, 348, 352, 426, 435, 440, 445], "retain_graph": [8, 124, 125], "discuss": [8, 9, 433, 438, 439], "inplac": [8, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 318, 425], "forward": [8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 280, 281, 282, 283, 285, 286, 289, 291, 292, 294, 295, 297, 301, 302, 310, 312, 314, 315, 317, 318, 319, 322, 323, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 418, 421, 428, 440, 444], "submodul": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 171, 230, 247, 270, 274, 326, 347], "param": [8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 245, 247, 262, 264, 280, 281, 282, 298, 310, 315, 318, 321, 347, 357, 361, 364, 365, 366, 367, 368, 425, 429, 435, 438, 439, 440, 441, 444], "grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 319, 425, 427], "whose": [8, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 292, 318], "factor": [8, 11, 29, 39, 55, 220, 247, 249, 250, 267, 271, 284, 291, 299, 300, 330, 336, 339, 340, 342, 353, 370, 425, 426, 429, 431, 435, 438, 439, 442, 445], "fit": [8, 66, 211, 230, 248, 421, 422, 425], "brax": [8, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 218, 430, 445], "jax": [8, 124, 125, 138, 139, 248], "improperli": 8, "underli": [8, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 347, 428, 430, 432, 434, 440], "tedeiou": 8, "priorit": [8, 62, 78, 104, 105, 332, 333, 334, 336, 337, 338, 345, 350, 352, 354, 355, 425, 426, 433, 444], "amount": [8, 153, 291, 426, 442], "costli": [8, 440], "constitut": [8, 426, 439, 440], "profil": 8, "frequent": [8, 50, 442], "program": [8, 337, 345, 429, 445], "functorch": [8, 10], "incl": 8, "suit": [8, 128, 427, 430, 444, 445], "mujoco_instal": 8, "valueerror": [8, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 111, 213, 233, 429, 444, 445], "idea": [9, 350, 422, 428, 431, 438, 439], "introductori": 9, "intro": [9, 427, 428], "dai": [9, 444], "2022": [9, 10, 252, 444], "spin": [9, 127, 128], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 431], "summari": [9, 211, 244, 425, 426, 427, 428], "reddit": 9, "reagent": 9, "orient": [9, 445], "baselines3": 9, "tf": 9, "bandit": [9, 150], "tensorflow": [9, 278, 279], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 429, 435], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 444], "grade": 9, "factori": [9, 16, 17, 20, 22, 23, 24, 25, 26, 67, 69, 78, 79, 80, 425], "cherri": 9, "jaxrl": 9, "mbrl": [9, 147, 420], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 427, 428, 438, 439], "notebook": [10, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "24": [10, 113, 132, 148, 149, 290, 314, 384, 438], "pip3": [10, 425, 427, 428, 438, 439], "url": [10, 135], "org": [10, 16, 17, 29, 62, 104, 105, 124, 125, 127, 128, 135, 138, 139, 145, 146, 148, 149, 150, 158, 165, 166, 187, 215, 240, 250, 256, 257, 258, 259, 260, 261, 264, 265, 266, 272, 277, 278, 279, 284, 285, 286, 290, 291, 292, 294, 295, 301, 312, 329, 330, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 353, 354, 364, 369, 377, 417, 436, 441], "whl": 10, "u": [10, 268, 269, 272, 273, 440], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 187, 427, 438, 439, 440, 442], "power": [11, 426], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 224, 418], "ultim": [11, 271, 299, 300], "ffmpeg": 11, "whatev": [11, 421, 425], "fed": [11, 439, 442], "feed": [11, 215, 242, 347, 420, 425, 438, 439, 442], "suppos": [11, 153, 397, 422, 445], "snippet": [11, 215, 240, 425], "gave": 11, "extrem": [11, 153, 161, 329, 331, 346, 349, 351], "blurri": [11, 429], "stitch": 11, "exp_nam": [11, 384, 385, 386, 389, 390, 391, 412, 426, 434, 435], "my_exp": [11, 434], "pixels_onli": [11, 127, 128, 132, 134, 135, 158, 425, 426, 434, 435, 444, 445], "my_video": [11, 434], "record_env": [11, 434, 435], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 309, 420], "allow_non": 12, "unwrap": [12, 199, 237, 392], "seealso": 12, "policy_weight": [13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], "worker_id": [13, 16, 17, 20, 22, 23, 24, 25, 26], "kwarg": [13, 16, 17, 20, 22, 23, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 52, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 96, 98, 99, 100, 101, 103, 104, 105, 107, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 181, 182, 184, 191, 215, 217, 226, 230, 235, 236, 237, 239, 241, 242, 244, 246, 247, 249, 251, 253, 254, 255, 257, 258, 259, 260, 263, 266, 267, 270, 271, 274, 275, 276, 277, 280, 281, 282, 287, 291, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 362, 363, 364, 365, 366, 367, 368, 382, 384, 388, 389, 391, 395, 402, 407, 408, 413, 414, 415, 421, 427, 429, 439], "synchron": [13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 148, 414, 415, 418, 426, 427, 438], "upload": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "typeerror": [13, 16, 17, 20, 22, 23, 24, 25, 26], "remote_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "local_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "overwritten": [13, 16, 17, 20, 22, 23, 24, 25, 26, 50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 202], "localweightsupdaterbas": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "remoteweightsupdaterbas": [13, 14, 16, 17, 20, 22, 23, 24, 25, 26], "decentr": [14, 280], "_get_server_weight": [14, 15, 18, 19, 21], "_get_local_weight": [14, 21], "_maybe_map_weight": [14, 15, 18, 19, 21], "get_weights_from_polici": 14, "extract": [14, 36, 37, 48, 74, 183, 205, 234, 238, 313, 425, 427, 444], "get_weights_from_serv": 14, "weight_map_fn": 14, "cache_policy_weight": 14, "update_weight": [14, 19, 404], "register_collector": [14, 15, 18, 19, 21], "datacollectorbas": [14, 15, 18, 19, 21, 315, 319, 404, 407, 408, 412, 418], "get_server_weight": 15, "dict": [15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 105, 107, 112, 113, 126, 129, 130, 131, 132, 133, 134, 140, 141, 145, 146, 148, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 205, 207, 230, 235, 237, 243, 244, 245, 247, 248, 254, 255, 256, 257, 258, 259, 260, 261, 266, 275, 289, 315, 319, 332, 352, 354, 384, 388, 389, 397, 402, 407, 408, 414, 415, 416, 420, 425, 426, 427, 442, 444, 445], "all_worker_id": [15, 18, 19], "_sync_weights_with_work": [15, 18, 19], "create_env_fn": [16, 17, 20, 22, 23, 24, 25, 26, 130, 153, 161, 425, 444], "policy_factori": [16, 17, 20, 22, 23, 24, 25, 26], "device_typ": [16, 20, 22, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 215, 240, 242, 254, 255, 256, 257, 258, 259, 260, 266, 275, 280, 281, 283, 284, 289, 292, 318, 399, 410], "env_devic": [16, 17, 20, 22, 23, 24, 25, 26, 426], "create_env_kwarg": [16, 17, 20, 22, 26, 130, 148, 153, 161, 235, 425, 445], "postproc": [16, 17, 20, 22, 23, 24, 25, 26, 55, 220, 426, 442], "explorationtyp": [16, 17, 20, 22, 23, 24, 25, 26, 315, 347, 397, 420, 425, 426, 427, 428, 431, 438, 444], "interactiontyp": [16, 20, 22, 23, 24, 25, 26, 169, 176, 315, 319, 397], "preemptive_threshold": [16, 17, 22], "num_thread": [16, 17, 22, 45, 46, 47, 61, 63, 70, 84, 153, 161], "num_sub_thread": [16, 17, 22, 153, 161], "str": [16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 104, 105, 107, 118, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 176, 179, 183, 187, 195, 199, 205, 206, 207, 215, 219, 228, 229, 232, 234, 235, 237, 238, 240, 242, 243, 244, 247, 248, 251, 263, 264, 270, 274, 276, 277, 280, 281, 282, 292, 293, 301, 306, 311, 312, 315, 316, 317, 318, 319, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 362, 363, 364, 365, 366, 367, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 416, 426, 427, 429], "set_trunc": [16, 17, 20, 22, 126, 129, 133, 140, 141, 153, 154, 161, 162], "use_buff": [16, 17, 20, 153, 161, 195], "replay_buffer_chunk": 16, "trust_polici": [16, 17, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162], "compile_polici": [16, 17, 20], "cudagraph_polici": [16, 17, 20], "no_cuda_sync": [16, 17, 20], "datacollector": [16, 17, 20, 22, 26, 55, 349, 427, 433, 442], "recept": 16, "safe": [16, 17, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 105, 112, 249, 291, 298, 299, 306, 311, 312, 315, 316, 317, 318, 319, 321, 420, 444], "sota": [16, 17, 147, 203, 351, 393, 407, 425, 426, 444], "guard": [16, 17], "doc": [16, 17, 80, 135, 138, 139, 150, 158, 391, 421, 426, 438, 439, 442], "env_mak": [16, 17, 20, 26, 67, 412, 445], "2000": [16, 17, 20, 55, 83, 136, 290, 384, 442], "50": [16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 71, 73, 74, 82, 85, 86, 87, 88, 89, 112, 113, 145, 146, 247, 428, 442], "shutdown": [16, 17, 20, 22, 26, 184, 425, 426, 442, 444], "del": [16, 17, 20, 425, 426, 427, 437, 438, 442, 444, 445], "int64": [16, 17, 20, 28, 30, 31, 35, 40, 41, 45, 46, 47, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 70, 71, 75, 78, 80, 83, 84, 94, 104, 112, 126, 129, 133, 140, 141, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 180, 184, 195, 199, 213, 220, 228, 264, 291, 293, 311, 312, 315, 316, 317, 420, 440], "subclass": [16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 39, 44, 65, 66, 72, 77, 85, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 182, 183, 236, 243, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 318, 319, 320, 322, 325, 347, 349, 426, 428, 433, 440, 442], "tensordictmodulebas": [16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 77, 186, 302, 311, 314, 316, 428], "undergon": [16, 17, 20, 22, 23, 24, 25, 26, 83], "env_obs_kei": [16, 17, 20, 22, 23, 24, 25, 26], "mustn": [16, 17, 20, 22, 23, 24, 25, 26], "pickl": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247], "exclus": [16, 17, 20, 22, 23, 24, 25, 26, 69, 78, 79, 90, 91, 105, 112, 113, 184, 200, 202, 268, 270, 272, 274, 278, 279, 311, 312, 316, 317, 353, 354, 355, 364, 365, 366, 367, 368, 391, 416, 420], "lifespan": [16, 17, 20, 22, 23, 24, 25, 426], "divis": [16, 17, 20, 22, 23, 24, 25, 32, 105, 112, 113, 245, 250, 439], "endless": [16, 17, 20, 22, 23, 24, 25, 195], "fill": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 133, 183, 230, 243, 274, 428, 440, 441], "sit": [16, 17, 20, 22, 23, 24, 25, 26, 404, 426], "cast": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 94, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 180, 181, 183, 184, 186, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 203, 206, 207, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 247, 318, 438, 445], "span": [16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 113], "n_step": [16, 17, 20, 22, 23, 24, 25, 26, 55, 247, 314, 426, 427, 438, 439], "mainli": [16, 17, 20, 22, 23, 24, 25, 26, 71, 391, 420, 438, 439, 440], "round": [16, 17, 20, 22, 23, 24, 25, 26, 126], "closest": [16, 17, 20, 22, 23, 24, 25, 26], "post": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "boolm": [16, 17, 22], "update_policy_weight_": [16, 17, 22], "async": [16, 17, 22, 23, 24, 25, 26, 67, 243], "ratio": [16, 17, 22, 71, 425, 427], "finish": [16, 17, 22, 26, 133, 220, 445], "rest": [16, 17, 22, 39, 252, 420, 427, 428, 438, 440, 444], "earli": [16, 17, 22, 55, 133, 228, 444], "safeti": [16, 17, 22, 147, 153, 161, 245], "harm": [16, 17, 22, 153, 161], "add_truncated_kei": [16, 17, 20, 22, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "trust": [16, 17, 20, 126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 192, 274], "cudagraphmodul": [16, 17, 20, 126, 129, 133, 140, 141, 153, 154, 161, 162], "behaviour": [16, 17, 20, 39, 65, 77, 428, 429, 444], "bypass": [16, 17, 20, 431], "isaaclab": [16, 17, 20, 134], "maniskil": [16, 17, 20], "crash": [16, 17, 20, 220], "unus": [16, 17, 175], "ordereddict": [16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 245, 247, 332, 352], "worker0": [16, 17, 22], "state_dict0": [16, 17, 22], "worker1": [16, 17, 22], "state_dict1": [16, 17, 22], "reset_idx": [16, 17, 22], "static_se": [16, 17, 20, 22, 26, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "increment": [16, 17, 20, 22, 126, 129, 133, 140, 141, 153, 154, 161, 162, 211, 346], "env_fn": [16, 17, 20, 22, 130, 414, 415], "env_fn_parallel": [16, 17, 20, 22], "300": [16, 17, 20, 22, 112, 113, 259, 260], "out_se": [16, 17, 20, 22, 445], "shut": [16, 17, 20, 22], "irrevers": [16, 17, 22], "remote_collector": [18, 26], "max_interv": 18, "_skip_upd": 18, "interv": [18, 180, 232, 383, 384, 394, 404, 426, 440], "raycollector": [18, 67, 418], "registr": [19, 426], "return_same_td": 20, "interruptor": 20, "cautious": [20, 349], "whole": [20, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 315, 332, 352, 393, 425, 427], "_interruptor": 20, "outsid": [20, 196, 235, 421, 434, 438, 439, 440], "start_collect": 20, "stop_collect": 20, "preeptiv": 20, "chunk": [20, 431], "policy_state_dict": 20, "env_state_dict": 20, "weight_gett": 21, "_map_weight": 21, "_update_local_weight": 21, "exporationtyp": [23, 24, 25], "collector_class": [23, 24, 25, 26], "collector_kwarg": [23, 24, 25, 26], "num_workers_per_collector": [23, 24, 25, 26], "slurm_kwarg": [23, 24, 25], "update_after_each_batch": [23, 24, 25, 26], "max_weight_update_interv": [23, 24, 25, 26], "tcp_port": [23, 24, 25, 27], "deriv": [23, 24, 25, 26, 81, 262, 402], "respect": [23, 24, 25, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 185, 191, 194, 198, 209, 215, 216, 225, 230, 236, 237, 240, 242, 247, 268, 272, 280, 295, 318, 323, 329, 331, 346, 349, 351, 364, 366, 367, 398, 421, 427, 428, 438, 439], "subnod": [23, 24, 25, 26], "readi": [23, 25, 26, 419, 426, 427, 429, 431, 434, 442, 444], "fashion": [23, 25, 26, 45, 46, 47, 61, 63, 70, 84, 113], "executor": [23, 24, 25], "distributed_back": [23, 24], "ucc": [23, 24], "submitit_delai": [23, 27], "former": [23, 24, 25, 28, 32, 39, 44, 62, 65, 66, 69, 72, 77, 78, 79, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325, 425], "whilst": [23, 24, 25], "homonym": [23, 24, 25, 440], "visit": [23, 24, 25, 84], "facebookincub": [23, 24, 25], "tcp": [23, 24, 25, 27], "port": [23, 24, 25, 27, 163], "10003": [23, 24, 25, 27], "focus": [23, 25, 26, 425, 432], "update_interv": 24, "frequenc": [24, 290, 425], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 28, 59, 315, 319], "tensorpiperpcbackendopt": 25, "ray_init_config": [26, 67], "remote_config": [26, 62, 67, 68, 69, 78, 79, 107], "num_collector": [26, 414, 415, 425, 426], "coordin": [26, 193], "init": [26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 236, 244, 247, 280, 281, 282, 391, 426, 427], "autodetect": 26, "num_cpu": [26, 67], "num_gpu": [26, 67], "1024": [26, 67, 261, 442], "equat": [26, 65, 84, 133, 195, 244, 245, 291, 328, 331, 353, 427, 430, 440], "exce": [26, 442], "indefinit": [26, 93], "rayreplaybuff": [26, 418], "enfoc": 26, "distributed_collector": [26, 67], "10000": [26, 153, 250, 402, 428], "add_collector": 26, "async_shutdown": [26, 67], "local_polici": 26, "stop_remote_collector": 26, "num_job": 27, "tcpport": 27, "submitit_main_conf": 27, "slurm_cpus_per_task": 27, "slurm_gpus_per_nod": 27, "slurm_partit": 27, "timeout_min": 27, "submitit_collection_conf": 27, "jump": [27, 430], "host": [27, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "satellit": 27, "rendezv": 27, "hang": 27, "forev": 27, "default_config": [27, 256, 261, 289, 310], "default_slurm_conf_main": 27, "default_slurm_conf": 27, "rollout_tensordict": 28, "nestedkei": [28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 70, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 105, 112, 113, 126, 129, 133, 140, 141, 153, 154, 157, 161, 162, 173, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 249, 253, 264, 267, 291, 293, 310, 314, 319, 334, 362, 382, 384], "as_nest": 28, "x": [28, 39, 55, 65, 66, 69, 71, 72, 77, 113, 141, 205, 207, 233, 238, 248, 250, 252, 253, 255, 264, 266, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 302, 311, 315, 316, 325, 328, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 402, 425, 429, 438, 440, 442, 444], "durat": [28, 439], "meta": [28, 45, 46, 47, 61, 63, 70, 82, 84, 131, 135, 329, 331, 346, 349, 351, 422, 427, 438, 439, 442], "aren": [28, 229, 428], "eventu": [28, 292, 428, 440], "recov": [28, 112, 113, 320, 337, 345, 437], "layout": 28, "to_padded_tensor": 28, "nested_tensor": [28, 132, 134], "stride": [28, 32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 254, 255, 257, 258, 266, 280, 426, 438, 444], "jag": 28, "focu": [28, 425, 426, 427, 429, 431, 432, 433, 438], "team": [28, 438, 439, 444], "cat": [28, 50, 195, 323, 330, 332, 333, 345, 350, 352, 354, 355, 438, 442, 444], "arang": [28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 113, 180, 264, 278, 279, 311, 393, 420, 442], "obs_": 28, "trajectory_id": 28, "int32": [28, 32, 33, 50, 79, 85, 112, 138, 139, 151, 152, 162, 172, 314], "data_split": 28, "got": [28, 433], "init_kl_coef": 29, "horizon": [29, 145, 146, 165, 166, 251, 277, 427], "kl": [29, 38, 71, 207, 341, 346], "describ": [29, 45, 46, 47, 61, 63, 70, 82, 84, 157, 188, 298, 299, 334, 387, 421, 425, 427, 438, 439, 440, 445], "ziegler": 29, "et": [29, 251], "relax": [29, 382], "penalti": [29, 71, 343, 346], "strai": [29, 71], "greater": [29, 105, 112, 113, 195, 208, 209, 270, 274, 332, 425, 426], "increas": [29, 96, 187, 231, 252, 291, 438, 439], "pull": [29, 50, 84, 442], "toward": [29, 242], "aggress": 29, "kl_coef": [29, 38, 71], "arxiv": [29, 62, 104, 105, 124, 125, 127, 128, 138, 139, 145, 146, 148, 149, 158, 165, 166, 187, 215, 240, 250, 256, 257, 258, 259, 260, 261, 264, 265, 266, 272, 277, 284, 285, 286, 290, 291, 292, 294, 295, 301, 312, 329, 330, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 352, 353, 354, 364, 369, 377, 441], "pdf": [29, 187, 256, 257, 258, 259, 260, 264, 290, 291, 312, 332, 339, 343, 350, 353, 354, 364, 369, 377], "1909": 29, "08593": 29, "lm": 29, "blob": 29, "master": [29, 438, 439], "lm_human_prefer": 29, "train_polici": 29, "kl_valu": 29, "coef": [29, 207], "newest": 29, "int8": [30, 129, 144, 155, 156, 185], "encod": [30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 129, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164, 180, 197, 286, 287, 290, 294, 328, 426, 427, 428, 431, 440, 442], "null": [30, 33, 34, 36, 37, 39, 48, 49, 57, 58, 62, 73, 74, 78, 82, 85, 86, 87, 88, 89, 104, 105, 185, 205], "denot": [30, 439], "clariti": [30, 50], "assert_is_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "cardin": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 264, 293, 311, 312, 317, 427], "outcom": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 262, 278, 279, 298, 347, 438], "cartesian": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "clear_device_": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "is_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 445], "np": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 133, 322, 382, 429, 438, 440], "ndarrai": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 133, 291, 322, 382, 429, 438], "ignore_devic": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "arrai": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 71, 73, 74, 82, 85, 86, 87, 88, 89, 104, 126, 129, 133, 134, 140, 141, 153, 154, 161, 162, 195, 199, 268, 269, 272, 273, 425, 438], "use_mask": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 155, 156], "compliant": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "singleton": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 254, 255, 275, 296, 297, 418, 421], "start_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "end_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "classmethod": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 240, 248, 255, 256, 289], "implements_for_spec": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "torch_funct": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "index_typ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 57, 58, 73, 74, 82, 85, 86, 87, 88, 89], "tensor_to_index": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "exanpl": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 264, 279, 293], "categ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 315], "to_categorical_spec": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_categ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_categor": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "make_neg_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "convert": [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 151, 152, 153, 154, 158, 161, 162, 163, 164, 191, 194, 195, 198, 215, 230, 236, 237, 240, 242, 244, 245, 247, 318, 328, 347, 425, 426, 427, 440, 442], "shortcut": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 440, 445], "ndimens": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 425], "violat": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 420], "proxi": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 279, 287, 315, 421], "project": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 73, 74, 82, 85, 86, 87, 88, 89, 197, 249, 272, 291, 306, 311, 312, 315, 316, 317, 318, 319, 391, 420, 444, 445], "uniformli": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 106, 347, 445], "normal": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 68, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162, 211, 244, 245, 249, 250, 254, 255, 271, 275, 278, 279, 299, 300, 315, 319, 331, 332, 346, 349, 397, 400, 416, 420, 422, 428, 431, 439, 445], "drawn": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 230, 267, 315, 319, 427, 438, 439], "set_provisional_n": [30, 31, 35, 40, 51, 52], "temporarili": [30, 31, 35, 40, 51, 52, 96, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 433, 442], "dest": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 215, 240, 242, 318], "to_numpi": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 126, 129, 133, 140, 141, 153, 154, 161, 162], "transformed_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 237, 298, 416], "check_spec_encod": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_one_hot": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "hot": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 124, 125, 132, 134, 135, 138, 139, 145, 146, 148, 149, 151, 152, 155, 156, 158, 163, 164, 165, 166, 180, 181, 197, 264, 287, 288, 293, 311, 312, 316, 317, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 428], "categ_sampl": [30, 31, 35, 40, 53, 54, 59, 60], "onehot_sampl": [30, 31, 35, 40, 53, 54], "to_one_hot_spec": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "categoricalbox": [30, 31, 35, 40, 53, 54, 59, 60, 154], "type_check": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "update_mask": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "disabl": [30, 31, 32, 35, 39, 40, 44, 51, 52, 53, 54, 55, 59, 60, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 271, 300, 382, 425, 438, 439], "unmask": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "ts": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "num_bit": 32, "convert_to_binari": 32, "decim": 32, "1001": 32, "bit": [32, 205, 427, 428, 430, 438, 439, 442], "heavysid": 32, "binary_to_decim": 32, "add_modul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "child": [32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 426], "fn": [32, 39, 44, 55, 64, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 238, 247, 414, 415], "recurs": [32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 90, 91, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347, 429], "init_weight": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "m": [32, 39, 44, 51, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 197, 247, 253, 319, 426, 440], "fill_": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 426, 428], "net": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 258, 260, 263, 266, 281, 329, 330, 332, 338, 345, 349, 350, 351, 352, 412, 426, 440, 441, 444], "in_featur": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 254, 255, 257, 258, 259, 260, 266, 275, 280, 281, 283, 284, 307, 318, 326, 334, 336, 429, 431, 432], "out_featur": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 147, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 251, 254, 255, 257, 258, 259, 260, 265, 266, 270, 274, 275, 277, 280, 281, 283, 284, 307, 311, 318, 326, 334, 336, 420, 425, 428, 429, 431, 432, 435, 444], "bia": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 205, 215, 230, 235, 236, 237, 240, 242, 247, 250, 254, 255, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 281, 283, 284, 291, 318, 325, 327, 328, 332, 347, 352, 421, 425, 426, 427, 428, 439], "requires_grad": [32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 235, 237, 247, 290, 319, 332, 352], "bfloat16": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "datatyp": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 442], "member": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347, 384], "xdoctest": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 205, 215, 230, 235, 236, 237, 240, 242, 247, 318, 332, 347, 352], "buf": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "20l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347], "1l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347], "5l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347], "__call__": [32, 39, 44, 55, 64, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 319, 422], "doubl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 194, 196, 198, 215, 230, 236, 237, 240, 242, 247, 318, 334, 339, 344, 350, 353, 362, 425, 426, 427, 428, 445], "eval": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 244, 247, 252, 420, 425, 426, 427], "evalu": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 134, 140, 141, 145, 146, 153, 154, 161, 162, 237, 247, 252, 262, 278, 279, 287, 300, 350, 407, 408, 426, 427, 435], "dropout": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 252, 253, 268, 270, 272, 274, 275, 420, 428], "batchnorm": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 250], "comparison": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 237, 247, 347, 425, 426], "extra_repr": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "recip": [32, 39, 44, 64, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 282, 285, 286, 289, 291, 294, 295, 297, 302, 310, 312, 314, 317, 322, 325], "get_buff": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "get_submodul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "qualifi": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "referenc": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "resolv": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "someth": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 144, 153, 154, 161, 162, 247, 419, 426, 427, 440, 445], "get_extra_st": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247], "set_extra_st": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247], "picklabl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247], "get_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "net_b": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "net_c": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "conv": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 254, 255, 426], "conv2d": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 255, 257, 258, 266, 280], "kernel_s": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 254, 255, 257, 258, 266, 280, 285, 426, 444], "diagram": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "degre": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 192, 247], "named_modul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "half": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318, 425], "ipu": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "strict": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 352, 429], "descend": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 352], "get_swap_module_params_on_convers": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 352], "persist": [32, 39, 42, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 205, 235, 237, 247, 332, 352], "preserv": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 318, 332, 352], "missing_kei": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 352], "unexpected_kei": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 352], "namedtupl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 235, 237, 247, 332, 352], "l": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 268, 272, 363, 427, 440], "idx": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "mtia": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "named_buff": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "remove_dupl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347], "prepend": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 347, 429], "running_var": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "named_children": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "conv4": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "conv5": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "memo": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "named_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 247, 347], "register_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "removablehandl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "favor": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 247, 427], "register_full_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_buff": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "running_mean": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "alongsid": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 434], "num_featur": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 250], "register_forward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 264, 293], "with_kwarg": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "always_cal": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_module_forward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "regardless": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 331, 346, 349], "register_forward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "invok": [32, 39, 44, 55, 65, 66, 68, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "And": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 432], "forward_pr": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_module_forward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "grad_input": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "grad_output": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "technic": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 426, 428, 429, 431], "caller": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_module_full_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_full_backward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "backward_pr": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_module_full_backward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_load_state_dict_post_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "incompatible_kei": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "thrown": [32, 39, 44, 55, 65, 66, 72, 73, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 442], "register_load_state_dict_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "local_metadata": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "error_msg": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "noqa": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "b950": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_modul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 422], "alia": [32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 98, 99, 100, 101, 107, 114, 116, 120, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 362, 368], "register_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_state_dict_post_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "register_state_dict_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "keep_var": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 332, 352], "requires_grad_": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 429], "autograd": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 332, 352], "freez": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 244, 245, 247], "finetun": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "gan": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "set_submodul": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "share_memori": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 130, 133, 140, 141, 153, 154, 161, 162, 247, 425], "share_memory_": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247, 444], "destin": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 186, 194, 196, 198, 205, 235, 237, 240, 244, 247, 332, 352, 384], "averag": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 244, 247, 291, 332, 340, 341, 352, 400, 425, 427], "shallow": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 332, 352, 428], "pleas": [32, 39, 44, 55, 65, 66, 72, 77, 81, 126, 129, 132, 133, 140, 141, 153, 154, 155, 156, 161, 162, 184, 187, 205, 231, 235, 237, 247, 280, 281, 282, 332, 352, 419], "detach": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 205, 235, 237, 247, 332, 343, 347, 352, 354, 364, 365, 366, 367, 425], "non_block": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318, 428], "memory_format": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "channels_last": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "unchang": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 197, 215, 230, 236, 237, 240, 242, 247, 267, 318, 384, 399, 425, 442], "tri": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318, 434], "pin": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "4d": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "ignore_w": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "1913": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "3420": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "5113": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "2325": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "torch_doctest_cuda1": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "gpu1": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "1914": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "5112": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "2324": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "float16": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 269, 273, 318], "cdoubl": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "3741": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "j": [32, 39, 44, 55, 62, 65, 66, 72, 77, 104, 105, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318, 422, 432], "2382": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "5593": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "4443": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "complex128": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "6122": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "1150": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 191, 215, 230, 236, 237, 240, 242, 247, 318], "to_empti": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "dst_type": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "xpu": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "set_to_non": [32, 39, 44, 55, 65, 66, 72, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 247], "upper": [33, 110, 210], "continuousbox": [33, 36, 85, 126, 129, 133, 140, 141, 153, 154, 161, 162, 172, 205, 208, 230, 238], "provision": 35, "descript": [36, 165, 183, 426, 427], "akin": 36, "unnam": 36, "compositespec": [36, 418, 440, 445], "constraint": [36, 147, 299, 427, 438, 439], "data_cl": 36, "tensorclass": [36, 45, 46, 47, 61, 63, 70, 84, 94, 98, 100, 120], "pixels_spec": 36, "observation_vector_spec": 36, "composite_spec": 36, "observation_vector": [36, 188, 425], "_nodefault": [36, 37, 48, 74], "is_empti": [36, 37, 48, 74, 440], "include_nest": [36, 37, 48, 74], "leaves_onli": [36, 37, 48, 74], "is_leaf": [36, 37, 48, 74], "_compositespecitemsview": [36, 37, 48, 74], "_compositespeckeysview": [36, 37, 48, 74], "reflect": [36, 37, 48, 74, 134, 155, 156, 178, 205, 243, 347, 405, 426, 427, 428, 439], "lock_": [36, 37, 48, 74], "propag": [36, 37, 48, 74, 329, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367, 427, 438, 439], "succeed": [36, 37, 48, 74, 205, 238], "pop": [36, 37, 48, 74], "keyerror": [36, 37, 48, 74, 237], "selected_kei": [36, 37, 48, 74, 224, 425], "unlock_": [36, 37, 48, 74], "_compositespecvaluesview": [36, 37, 48, 74], "multipli": [38, 140, 195, 252, 268, 272, 329, 330, 331, 332, 338, 346, 348, 349, 350, 352, 400, 425, 438], "calcul": [38, 71, 220, 268, 329, 331, 336, 346, 349, 351, 354], "reassign": 39, "reward2go": [39, 418], "reward_key_out": 39, "time_dim": [39, 364, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381], "unrol": [39, 340, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381], "discount": [39, 55, 130, 220, 247, 330, 336, 339, 340, 342, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 421, 426, 427, 438, 439], "lastrewardtotraj": 39, "last_reward_to_traj": 39, "new_tensordict": 39, "is_tdmodule_compat": [39, 65, 77], "reset_out_kei": [39, 65, 77], "orign": [39, 65, 77], "mod": [39, 65, 77, 207, 253, 270, 274, 314, 319, 322, 428, 429, 435], "select_out_kei": [39, 65, 77, 329, 330, 332, 333, 337, 338, 345, 349, 350, 352, 354, 355, 429], "reset_parameters_recurs": [39, 65, 77, 347], "relu": [39, 65, 77, 147, 251, 261, 277, 328], "old_param": [39, 65, 77], "bork": [39, 65, 77], "dork": [39, 65, 77], "reset_paramet": [39, 65, 77, 282], "from_modul": [39, 65, 77, 264, 318, 321, 444], "rid": [39, 65, 77], "out_keys_sourc": [39, 65, 77], "rubric": [39, 65, 77, 211, 321], "revert": [39, 65, 77, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 431, 442], "seq": [39, 65, 77, 253, 268, 270, 272, 274, 314, 428, 429, 435, 437], "z": [39, 65, 77, 269], "shift_kei": [41, 43, 56, 75], "is_full_kei": [41, 43, 56, 75], "is_ful": [41, 43, 56, 75], "tempfil": [41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 98, 107, 412, 425, 426, 428, 429, 433, 438, 441, 442], "register_save_hook": [41, 62, 67, 68, 69, 75, 78, 79, 107], "temporarydirectori": [41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 107, 425, 426, 428, 429, 433, 438, 441, 442], "tmpdir": [41, 62, 67, 68, 69, 75, 78, 79, 83, 107, 425, 426, 429, 438], "rb_load": [41, 62, 67, 68, 69, 78, 79, 107], "register_load_hook": [41, 62, 67, 68, 69, 78, 79, 107], "filesystem": [42, 442], "ted2nest": [43, 418], "tokens_respons": [45, 47, 140], "attention_mask": [45, 46, 61, 63, 64, 70, 71, 80, 83, 94, 140], "token_list": [45, 46, 47], "tokens_response_list": [45, 47], "log_prob": [45, 47, 71, 262, 278, 279, 287, 290, 300, 319, 332, 421], "text": [45, 46, 47, 64, 71, 80, 140, 141, 268, 269, 272, 273, 291, 427], "text_respons": [45, 140], "copy_exist": [45, 46, 47, 61, 63, 70, 84], "return_earli": [45, 46, 47, 61, 63, 70, 84], "share_non_tensor": [45, 46, 47, 61, 63, 70, 84], "memmap": [45, 46, 47, 61, 63, 70, 84, 98, 153, 161, 244, 384, 386, 399], "dataclass": [45, 46, 47, 61, 63, 70, 82, 84, 347], "from_tensordict": [45, 46, 47, 61, 63, 70, 84], "non_tensordict": [45, 46, 47, 61, 63, 70, 84], "getattr": [45, 46, 47, 61, 63, 70, 84], "load_memmap": [45, 46, 47, 61, 63, 70, 84], "load_": [45, 46, 47, 61, 63, 70, 84], "load_memmap_": [45, 46, 47, 61, 63, 70, 84], "fromkei": [45, 46, 47, 61, 63, 70, 84], "saved_td": [45, 46, 47, 61, 63, 70, 84], "td_load": [45, 46, 47, 61, 63, 70, 84], "fake": [45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 425, 426, 429], "_subclass": [45, 46, 47, 61, 63, 70, 84], "faketensormod": [45, 46, 47, 61, 63, 70, 84], "faketensor": [45, 46, 47, 61, 63, 70, 84], "from_flatten": [45, 46, 47, 61, 63, 70, 84], "attemptedli": [45, 46, 47, 61, 63, 70, 84], "existsok": [45, 46, 47, 61, 63, 70, 84, 98], "mimic": [45, 46, 47, 61, 63, 70, 84, 126, 129, 133, 140, 141, 153, 154, 161, 162], "cross": [45, 46, 47, 61, 63, 70, 84, 251], "tensordictfutur": [45, 46, 47, 61, 63, 70, 84], "serialis": [45, 46, 47, 61, 63, 70, 84], "deepli": [45, 46, 47, 61, 63, 70, 84], "memmap_": [45, 46, 47, 61, 63, 70, 84, 244], "memmap_lik": [45, 46, 47, 61, 63, 70, 84], "contentless": [45, 46, 47, 61, 63, 70, 84], "1_000_000": [45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 107, 112, 425, 428, 438], "alloc": [45, 46, 47, 61, 63, 70, 84, 100, 262, 278, 279, 425], "memmap_refresh_": [45, 46, 47, 61, 63, 70, 84], "refresh": [45, 46, 47, 61, 63, 70, 84, 435, 438, 439], "saved_path": [45, 46, 47, 61, 63, 70, 84], "setattr": [45, 46, 47, 61, 63, 70, 84], "tent": [45, 46, 47, 61, 63, 70, 83, 84], "to_tensordict": [45, 46, 47, 61, 63, 70, 84, 428], "retain_non": [45, 46, 47, 61, 63, 70, 84], "discrard": [45, 46, 47, 61, 63, 70, 84], "switch": [45, 46, 47, 61, 63, 70, 84, 237, 245, 271, 300, 382], "stackedcomposit": [48, 418], "tensordictmap": [50, 418], "observation_kei": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162], "excluded_kei": [50, 200], "consolid": [50, 77, 91, 100], "lazili": [50, 99, 281, 440], "from_tensordict_pair": [50, 77], "querymodul": [50, 77], "get_keys_from_env": 50, "cattensor": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162, 425, 437, 440, 445], "unsqueezetransform": [50, 187, 440, 442], "oracl": 50, "obs_kei": 50, "state_kei": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162], "reset_st": 50, "rollout0": 50, "rollout1": 50, "rollout1b": 50, "collaps": 50, "max_length": [50, 61, 63, 64, 80, 83, 84, 94, 195, 234, 429, 435], "valid_path": [50, 84], "assert_clos": [50, 270, 274], "subtre": [50, 84], "intersect": [50, 248], "Or": [50, 159, 160, 280], "rollout_from_path": [50, 84], "plot": [50, 84, 425, 427, 428, 438, 439, 440], "_nestedkei": [50, 126, 129, 133, 140, 141, 153, 154, 161, 162], "return_nod": 50, "diverg": [50, 207, 270, 274, 315, 319, 341, 346], "endpoint": 50, "noth": [50, 141, 425, 427], "r0": [50, 425], "123": [50, 84], "392": [50, 84], "989": [50, 84], "809": [50, 84], "847": [50, 84], "r1": 50, "235": 50, "td_root": [50, 84], "node_data": [50, 84], "node_id": [50, 84], "nontensordata": [50, 57, 126, 151, 152, 195, 205, 234, 238, 382], "_parent": [50, 84], "nontensorstack": [50, 57, 99, 126, 141, 195, 205, 234, 238], "weakref": [50, 84], "0x716eeb78fbf0": 50, "0x": 50, "4341220243998689835": 50, "6745467818783115365": 50, "win": [50, 84], "to_str": [50, 84], "node_format_fn": [50, 84], "indent": [50, 84], "rollouts_data": [50, 84], "456": [50, 84], "359": [50, 84], "3094": [50, 84], "75": [50, 84, 112], "948": [50, 84], "68": [50, 84, 112], "9045": [50, 84], "rollout_data": [50, 84], "nvec": [51, 53], "remove_singleton": 51, "ax": [51, 283, 284, 438], "Not": [51, 52, 69, 124, 125, 138, 235, 270, 274], "neither": [51, 52, 53, 54, 163, 440], "use_regist": [53, 59], "mone_hot": [53, 54], "boxlist": [53, 54], "gamma": [55, 220, 247, 277, 329, 330, 332, 333, 334, 336, 338, 339, 340, 342, 345, 347, 349, 350, 351, 352, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 412, 421, 425, 426, 427, 438, 439, 444], "sutton": [55, 421, 438, 439], "1988": 55, "tempor": [55, 270, 274, 277, 365, 366, 371, 372], "44": [55, 112], "ahead": [55, 247, 445], "bias": [55, 268, 269, 272, 273, 325, 421, 425], "mitig": [55, 187], "multisteptransform": [55, 418], "99": [55, 220, 244, 277, 342, 357, 363, 370, 412, 425, 426, 427, 429, 432, 435, 438, 439, 444], "nontermin": 55, "original_reward": 55, "newli": [55, 126, 129, 133, 140, 141, 153, 154, 161, 162], "OR": 55, "row": [56, 76, 138, 139, 208], "example_data": [57, 140, 195], "conform": 57, "templat": [57, 385], "randomli": [57, 111, 162, 210, 211, 230, 267, 315, 319, 431, 438, 439, 440, 442], "unidimension": 59, "action_valu": [59, 263, 264, 293, 311, 312, 316, 317, 332, 338, 347, 362, 420, 428, 429, 431, 435], "keepdim": 59, "chosen_action_valu": [59, 292, 293, 301, 316, 317, 362, 420, 428, 431], "priori": 59, "uniqu": [59, 84, 112, 113, 141, 145, 146, 187, 199, 229, 230, 231, 235, 314, 391, 433, 442], "tensor_spec": [59, 157, 179, 181, 337, 338, 349, 351], "one_hot_sampl": [59, 60], "chosen_data": [61, 94], "rewarddata": [61, 94, 418], "rejected_data": [61, 94], "from_dataset": [61, 63, 94], "dataset_nam": [61, 63, 71, 83, 94, 150], "550": [61, 63, 71, 83, 94, 112, 113], "root_dir": [61, 63, 83, 94], "from_disk": [61, 63, 83, 94], "carperai": [61, 63, 71, 83], "openai_summarize_comparison": [61, 63, 83], "load_from_disk": [61, 63, 83, 94], "load_dataset": [61, 63, 83, 94], "92534": 61, "input_id": [61, 63, 64, 70, 71, 80, 83, 94, 140, 141], "end_scor": [61, 70, 71, 94], "sub_data": [61, 63], "alpha": [62, 78, 104, 105, 254, 255, 257, 258, 259, 260, 266, 280, 330, 332, 338, 348, 350, 352, 354, 425, 442, 444], "ep": [62, 78, 104, 105, 211, 244, 245, 250, 291, 331, 353, 400, 421, 425, 426, 428, 429, 432, 435], "1e": [62, 78, 104, 105, 211, 244, 245, 250, 262, 265, 298, 425, 426, 427, 439], "08": [62, 78, 104, 105], "pin_memori": [62, 69, 78, 79, 214, 425, 444], "schaul": [62, 104, 105], "quan": [62, 104, 105], "antonogl": [62, 104, 105], "silver": [62, 104, 105], "2015": [62, 104, 105], "ab": [62, 104, 105, 124, 125, 127, 128, 138, 139, 145, 146, 148, 149, 158, 165, 166, 186, 215, 240, 244, 250, 256, 261, 265, 266, 272, 277, 284, 285, 286, 292, 294, 295, 301, 329, 330, 334, 335, 336, 337, 340, 341, 342, 344, 345, 348, 349, 352, 441], "1511": [62, 104, 105, 266], "05952": [62, 104, 105], "expon": [62, 78, 104, 105], "\u03b1": [62, 78, 104, 105], "delta": [62, 78, 104, 105, 268, 272, 298, 315, 319, 418, 421, 438], "1_000": [62, 69, 78, 79, 438, 442], "mini": [62, 69, 78, 79, 439], "incompat": [62, 69, 78, 79, 351, 442], "drop_last": [62, 69, 78, 79, 111, 113], "notion": [62, 69, 78, 79, 290], "caution": [62, 69, 78, 79, 111, 126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 445], "codebas": [62, 69, 78, 79, 440], "return_info": [62, 67, 68, 69, 78, 79, 104, 105, 107, 442], "tensordictprioritizedreplaybuff": [62, 418, 444], "simplifi": [62, 175, 431, 440, 442], "_weight": [62, 78, 104, 105], "update_prior": [62, 104, 105, 399, 422, 426, 442, 444], "36278465": 62, "invert": [62, 67, 68, 69, 78, 79, 107, 327, 427], "as_remot": [62, 67, 68, 69, 78, 79, 107], "cl": [62, 67, 68, 69, 78, 79, 107, 426], "quantiti": [62, 67, 68, 69, 78, 79, 107], "reserv": [62, 67, 68, 69, 78, 79, 107, 422], "default_remote_class_config": [62, 67, 68, 69, 78, 79, 107], "tqdm": [62, 67, 68, 69, 78, 79, 107, 402, 425, 427, 428, 438, 439, 440], "randomsampl": [62, 67, 68, 69, 78, 79, 107, 425, 438], "td_error": [62, 67, 68, 69, 78, 79, 107, 332, 333, 334, 336, 337, 338, 339, 345, 347, 350, 352, 354, 355, 362, 425, 442, 444], "update_tensordict_prior": [62, 67, 68, 69, 78, 79, 107, 425, 442, 444], "insert_transform": [62, 67, 68, 69, 78, 79, 107, 182, 237], "insert": [62, 67, 68, 69, 78, 79, 97, 107, 108, 118, 119, 122, 123, 182, 187, 191, 227, 237, 239], "set_sampl": [62, 67, 68, 69, 78, 79, 107], "set_storag": [62, 67, 68, 69, 78, 79, 107], "set_writ": [62, 67, 68, 69, 78, 79, 107], "write_count": [62, 67, 68, 69, 78, 79, 107], "prompt_rindex": [63, 64, 71], "promptdatatldr": 63, "116722": 63, "prompt": [64, 71, 140, 195], "return_tensordict": [64, 80], "tensodict": [64, 80], "valid_sampl": 64, "eough": 64, "toknen": 64, "meet": 64, "criterion": 64, "autotoken": [64, 80, 83], "from_pretrain": [64, 71, 80, 141], "gpt2": [64, 71, 80, 83, 141, 256, 261, 289], "pad_token": [64, 80], "eos_token": 64, "enough": [64, 442], "inde": [64, 197, 427, 429, 440], "index_kei": [65, 77], "hash_kei": 65, "_hash": 65, "hash_modul": [65, 72, 77], "siphash": [65, 66, 77, 141], "hash_to_int": 65, "hashtoint": 65, "query_modul": [65, 77], "key1": [65, 77, 188, 227, 393, 401, 444], "key2": [65, 77, 188, 227, 393, 401, 444], "write_hash": 65, "n_compon": 66, "dtype_cast": 66, "as_tensor": [66, 72, 429], "init_method": 66, "emb": [66, 428], "sklearn": [66, 150], "byte": [66, 72, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247], "builtin": [66, 72], "pythonhashse": [66, 72], "todo": 66, "optiona": 67, "transform_factori": [67, 69, 78, 79], "asyncio": 67, "ray_buff": 67, "object_store_memori": 67, "600": [67, 71], "await": 67, "sleep": [67, 130, 445], "invoc": 68, "friendli": [68, 425], "include_info": [68, 78, 79], "storagecheckpointerbas": [69, 114], "roundrobinwrit": 69, "_pytre": [69, 442], "tree_map": [69, 442], "assert0": [69, 442], "ref_model": 71, "reward_model": [71, 324], "max_new_token": 71, "score_clip": 71, "kl_schedul": 71, "klcontrollerbas": 71, "num_step": [71, 429], "causal": 71, "sentenc": 71, "frozen": [71, 207, 244, 245], "llm": [71, 83, 94, 140, 195], "gpt2rewardmodel": 71, "get_dataload": [71, 418], "promptdata": [71, 418], "gpt2lmheadmodel": 71, "dl": [71, 195], "block_siz": [71, 94], "tensorclass_typ": [71, 94], "openai_summarize_tldr": 71, "config_class": 71, "model_path": 71, "rollout_from_model": 71, "rollout_from_data": 71, "reward_kl": [71, 207], "reward_raw": 71, "sample_log_prob": [71, 207, 307, 308, 309, 315, 319, 321, 349], "create_rollout_td": 71, "log_ratio": 71, "replic": [71, 421], "rindex": 71, "eo": 71, "generation_config": 71, "generationconfig": 71, "ti": [71, 373, 374, 375, 376, 378, 379, 380, 381, 426], "log_probs_gen": 71, "logprobs_of_label": 71, "hash_a": 72, "4669941682990263259": 72, "3778166555168484291": 72, "9122128731510687521": 72, "hash_b": 72, "heterogen": [73, 74, 99, 126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 167, 280, 281, 425, 426], "220": 75, "resembl": 77, "tensormap": 77, "collat": [77, 107], "subtyp": 77, "embedding_storag": 77, "tensor_dict_storag": 77, "new_index": 77, "key3": 77, "retrieve_valu": 77, "storage_constructor": 77, "write_fn": 77, "tensordictstorag": 77, "thumb": [77, 153, 427], "lazydynamicstorag": 77, "fixedstorag": 77, "randomprojectionhash": 77, "priority_kei": [78, 79, 104, 332, 334, 337, 338, 339, 345, 347, 350, 352, 354, 355, 362, 442, 444], "reduct": [78, 104, 105, 118, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355], "prioritizedreplaybuff": [78, 418, 444], "min": [78, 104, 105, 118, 291, 330, 331, 332, 338, 348, 350, 352, 426, 427], "median": [78, 104, 105, 118, 138, 139, 180, 315, 319], "huggingfac": [80, 313], "co": [80, 199, 440], "pad_trunc": 80, "am": 80, "me": 80, "reassur": 80, "ok": 80, "primarili": [82, 216, 431], "educ": 82, "guess": 82, "knowledg": [82, 126, 129, 133, 140, 141, 153, 154, 161, 162, 432, 434], "tokenizer_fn": 83, "tensordicttoken": [83, 418], "pre_tokenization_hook": 83, "valid_s": 83, "tokenizer_class": 83, "tokenizer_model_nam": 83, "tokein": 83, "elementwis": 83, "vocabulari": [83, 140, 141, 234], "loader": [83, 427], "185068": 83, "dataset_to_tensordict": 83, "data_dir": 83, "batch_dim": [83, 126, 129, 133, 140, 141, 153, 154, 161, 162, 416], "valid_mask_kei": 83, "batch_dimens": 83, "filder": 83, "from_dict": [83, 195], "data_memmap": 83, "ref": 84, "branching_act": 84, "prev_act": 84, "edg": [84, 429], "travers": 84, "breadth": 84, "bf": 84, "fully_expand": 84, "get_vertex_by_hash": 84, "get_vertex_by_id": 84, "is_termin": 84, "make_nod": 84, "node_observ": 84, "bag": 84, "num_children": 84, "num_vertic": 84, "count_repeat": 84, "recustruct": 84, "scope": [84, 126, 129, 133, 140, 141, 153, 154, 161, 162, 429, 445], "plotli": 84, "make_label": 84, "visual": [84, 215, 240, 242, 384, 427, 438, 440], "notimplementederror": [84, 425], "unsupport": 84, "selected_act": 84, "mctsforest": [84, 141, 418], "key_typ": 84, "liter": [84, 140, 195, 305], "recurse_through_entri": 91, "recurse_through_stack": 91, "infinit": [94, 145, 146, 165, 166, 433, 442], "block": [94, 97, 123, 420, 425, 428, 429, 432, 433, 438, 442], "pairwisedataset": [94, 418], "256": [94, 145, 146, 205, 261, 426, 427, 429, 438, 439], "checkpoint_fil": 96, "h5": 96, "h5_kwarg": 96, "iff": 96, "suffix": [96, 397], "h5py": 96, "create_dataset": 96, "consequ": [96, 272, 433], "immut": [97, 126, 129, 133, 140, 141, 153, 161, 218, 237], "piec": [97, 108, 119, 122, 123, 425, 426, 427, 434, 438, 439, 440, 442], "scratch_dir": [98, 425, 426, 428, 433, 438, 441, 442], "sent": [98, 100, 120, 244], "mistak": [98, 100, 120], "overewritten": 98, "tensorstoragecheckpoint": 98, "pathlib": [98, 402, 429], "main_ckpt_dir": 98, "rb_memmap": 98, "10_000_000": 98, "myclass": [98, 100, 120], "foo": [98, 100, 120, 310, 442, 445], "bar": [98, 100, 120, 310, 395, 396, 397, 402, 422, 426], "attach": [98, 99, 100, 101, 114, 116, 120, 426], "entiti": [98, 99, 100, 101, 114, 116, 120], "lazystacktensordict": 99, "heterougen": 99, "linearli": 99, "densifi": 99, "unlimit": [99, 101], "st": 99, "expans": [100, 347], "zero_": [100, 120, 172], "liststoag": 102, "max_capac": [104, 105, 425, 442], "max_priority_within_buff": [104, 105], "data_0": 104, "data_1": 104, "smoothen": 104, "tdrb": 104, "pack": [104, 268, 272, 427, 430, 445], "nd": [104, 105], "1d": [104, 105, 112, 113, 118], "sum_tre": [104, 105], "min_tre": [104, 105], "slice_len": [105, 112, 113, 384], "end_kei": [105, 112, 113], "cache_valu": [105, 112, 113], "closer": [105, 444], "readili": [105, 112, 113, 319], "conjunct": [105, 112, 113, 426], "Will": [105, 112, 148, 384], "buffer0": [105, 112], "immutablewrit": [105, 112], "buffer1": [105, 112], "other_sampl": [105, 112], "shorter": [105, 112, 113], "short": [105, 112, 113, 124, 125, 126, 129, 133, 138, 139, 140, 141, 153, 154, 161, 162, 167, 272, 273, 426, 427, 430, 431, 439, 442], "Be": [105, 112, 113], "fewer": [105, 112], "tolist": 105, "120110917137936e": 105, "06": [105, 262, 298], "storageensembl": [107, 110], "samplerensembl": 107, "writerensembl": [107, 116], "sample_from_al": [107, 110], "num_buffer_sampl": [107, 110], "ensembl": [107, 110, 116, 117, 123, 318, 350], "forbidden": 107, "0x13a2ef430": 107, "0x13a2f9310": 107, "interpol": [107, 219, 426, 429], "interpolationmod": 107, "bilinear": [107, 219], "0x13a2f9220": 107, "0x13a2f9f70": 107, "0x13a2d9b50": 107, "0x13a2f95b0": 107, "0x128648260": 107, "roundrobin": [108, 119], "buffer_id": [110, 116], "shuffl": [111, 113, 439], "incomplet": [111, 113], "fresh": 111, "haven": [111, 441], "draw": [111, 267], "use_gpu": [112, 113], "slicesamplerwithoutreplac": [112, 442], "acceler": [112, 113, 438, 439], "significantli": [112, 113, 187, 421, 425, 426, 432, 439], "reconstruct": [112, 113, 341, 425, 445], "ep_1": [112, 113], "ep_2": [112, 113], "73": 112, "74": 112, "76": 112, "77": 112, "42": [112, 275, 290, 329, 330, 332, 333, 337, 345, 352], "43": 112, "45": 112, "67": [112, 437], "69": 112, "70": 112, "71": 112, "27": [112, 113, 124, 125, 153, 161], "28": [112, 113, 280], "31": [112, 138, 139], "80": [112, 124, 125], "82": 112, "83": 112, "84": [112, 219, 428, 429], "78": 112, "79": 112, "320": [112, 113, 127, 128], "700": [112, 113], "dataid": [112, 113], "available_dataset": [112, 113], "counter": [113, 235, 314, 395, 422, 429], "23": [113, 248], "request": [113, 184, 216], "51": 113, "__len__": 114, "rank_kei": 118, "rank": [118, 251], "samplerwithoutreplac": [118, 427, 439, 442], "get_insert_index": 118, "googl": [124, 125, 145, 146, 151, 152, 250, 427, 428, 438, 439], "convers": [124, 125, 138, 139, 140, 175, 421], "2106": [124, 125, 335, 354], "13281": [124, 125], "categorical_action_encod": [124, 125, 126, 129, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149, 153, 154, 158, 161, 162, 175, 429], "frame_skip": [124, 125, 127, 128, 132, 133, 134, 135, 138, 139, 142, 143, 148, 149, 158, 203, 395, 397, 405, 422, 425, 426, 427, 444], "allow_done_after_reset": [124, 125, 127, 128, 129, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164], "toler": [124, 125, 127, 128, 132, 134, 135, 138, 139, 148, 149, 151, 152, 158, 163, 164, 262, 298], "is_avail": [124, 125, 425, 426, 427, 428, 438, 439, 441], "ant": [124, 125, 126, 129, 133, 136, 140, 141, 153, 154, 161, 162, 441], "87": [124, 125], "acrobot": [124, 125, 127, 128, 445], "advant": [124, 125, 138, 139], "timer": [124, 125, 138, 139], "timeit": [124, 125, 138, 139, 429], "310": [124, 125], "ms": [124, 125, 138, 139], "268": [124, 125], "433": [124, 125], "213": [124, 125], "8605": [124, 125], "pipelineenv": 125, "get_environ": 125, "san": 126, "fen": [126, 151, 152], "pgn": 126, "legal": 126, "board": [126, 162], "include_san": 126, "algebra": [126, 440], "notat": 126, "include_fen": 126, "forsyth": 126, "edward": 126, "include_pgn": 126, "portabl": [126, 434], "include_legal_mov": 126, "include_hash": 126, "mask_act": 126, "subset": [126, 440, 441], "29275": 126, "rnbqkbnr": [126, 151, 152], "pppppppp": [126, 151, 152], "kqkq": [126, 151, 152], "legal_mov": 126, "219": 126, "5p2": 126, "ppppp1pp": 126, "event": [126, 278, 279, 287, 373, 374, 375, 376, 378, 379, 380, 381, 442], "white": 126, "f4": 126, "96": 126, "kq": 126, "5n2": 126, "rnbqkb1r": 126, "nf3": 126, "na6": 126, "c4": 126, "f6": 126, "h4": 126, "rb8": 126, "na3": 126, "ra": 126, "sort": [126, 129, 133, 140, 141, 153, 154, 161, 162, 188, 291], "another_act": [126, 129, 133, 140, 141, 153, 154, 161, 162], "discretebox": [126, 129, 133, 140, 141, 153, 154, 161, 162], "mutabl": [126, 129, 133, 140, 141, 153, 154, 161, 162], "action_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162, 427, 439], "had": [126, 129, 133, 140, 141, 153, 154, 161, 162, 431, 433], "all_act": [126, 129, 133, 140, 141, 153, 154, 161, 162], "any_don": [126, 129, 133, 140, 141, 153, 154, 161, 162], "loc": [126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 211, 222, 244, 245, 271, 299, 300, 307, 308, 309, 315, 319, 321, 329, 330, 332, 345, 349, 350, 351, 352, 406, 416, 420, 425, 426, 427, 428, 431, 439, 444], "_callabletransform": [126, 129, 133, 140, 141, 153, 154, 161, 162], "auto_specs_": [126, 129, 133, 140, 141, 153, 154, 161, 162], "action_spac": [126, 129, 133, 140, 141, 153, 154, 161, 162, 199, 264, 293, 311, 312, 316, 317, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 428, 429, 431, 435], "check_dtyp": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167], "discrep": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 329, 331, 333, 334, 346, 349, 351, 362], "broken": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167], "rng": [126, 129, 133, 140, 141, 153, 154, 161, 162, 167, 440], "done_keys_group": [126, 129, 133, 140, 141, 153, 154, 161, 162], "another_don": [126, 129, 133, 140, 141, 153, 154, 161, 162], "done_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "empty_cach": [126, 129, 133, 140, 141, 153, 154, 161, 162, 237], "fake_tensordict": [126, 129, 133, 140, 141, 153, 154, 161, 162, 426, 429], "envnam": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_action_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162, 438, 439], "full_done_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_observation_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_reward_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "pipeline_st": [126, 129, 133, 140, 141, 153, 154, 161, 162], "full_state_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "get_legal_mov": 126, "uci": 126, "input_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "is_spec_lock": [126, 129, 133, 140, 141, 153, 154, 161, 162], "maybe_reset": [126, 129, 133, 140, 141, 153, 154, 161, 162], "speak": [126, 129, 133, 140, 141, 153, 154, 161, 162, 192, 319, 425], "observation_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "output_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "register_gym": [126, 129, 133, 140, 141, 153, 154, 161, 162, 430], "entry_point": [126, 129, 133, 140, 141, 153, 154, 161, 162], "info_kei": [126, 129, 133, 140, 141, 153, 154, 161, 162], "reward_threshold": [126, 129, 133, 140, 141, 153, 154, 161, 162], "nondeterminist": [126, 129, 133, 140, 141, 153, 154, 161, 162], "max_episode_step": [126, 129, 132, 133, 134, 140, 141, 153, 154, 161, 162], "order_enforc": [126, 129, 133, 140, 141, 153, 154, 161, 162], "autoreset": [126, 129, 133, 140, 141, 153, 154, 161, 162], "disable_env_check": [126, 129, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162], "apply_api_compat": [126, 129, 133, 140, 141, 153, 154, 161, 162], "nasium": [126, 129, 133, 140, 141, 153, 154, 161, 162, 175], "dmcontrolenv": [126, 129, 133, 140, 141, 153, 154, 161, 162, 384, 418, 425, 430, 437, 445], "dmc": [126, 129, 133, 140, 141, 153, 154, 161, 162], "cheetah": [126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 384, 425], "removeemptyspec": [126, 129, 133, 140, 141, 153, 154, 161, 162], "threshold": [126, 129, 133, 140, 141, 153, 154, 161, 162, 267, 330, 331, 427], "learnt": [126, 129, 133, 140, 141, 153, 154, 161, 162, 412], "checker": [126, 129, 132, 133, 140, 141, 148, 149, 153, 154, 161, 162], "stepapicompat": [126, 129, 133, 140, 141, 153, 154, 161, 162], "deem": [126, 129, 133, 140, 141, 145, 146, 153, 154, 161, 162, 165, 166], "task_nam": [126, 127, 129, 133, 140, 141, 153, 154, 161, 162], "envgym": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0855": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0215": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0881": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0412": [126, 129, 133, 140, 141, 153, 154, 161, 162], "1101": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0080": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0254": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0424": [126, 129, 133, 140, 141, 153, 154, 161, 162], "veloc": [126, 127, 128, 129, 133, 140, 141, 153, 154, 161, 162, 187, 438, 439, 440, 445], "9609e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "9776e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "04": [126, 129, 133, 137, 140, 141, 153, 154, 161, 162, 232], "6347e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "3842e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5338e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "3064e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0381e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "6656e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05": [126, 129, 133, 140, 141, 153, 154, 161, 162, 232, 250, 440], "0204e": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0833": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0275": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0612": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0770": [126, 129, 133, 140, 141, 153, 154, 161, 162], "1256": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0082": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0186": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0476": [126, 129, 133, 140, 141, 153, 154, 161, 162], "2221": [126, 129, 133, 140, 141, 153, 154, 161, 162], "2256": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5930": [126, 129, 133, 140, 141, 153, 154, 161, 162], "6937": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5865": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5479": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0187": [126, 129, 133, 140, 141, 153, 154, 161, 162], "6825": [126, 129, 133, 140, 141, 153, 154, 161, 162], "5224": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0018": [126, 129, 133, 140, 141, 153, 154, 161, 162], "1005": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0335": [126, 129, 133, 140, 141, 153, 154, 161, 162, 192], "0268": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0133": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0627": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0074": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0488": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0353": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0075": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0069": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0098": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0058": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0033": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0157": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0004": [126, 129, 133, 140, 141, 153, 154, 161, 162, 232], "0381": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0452": [126, 129, 133, 140, 141, 153, 154, 161, 162], "11355747": [126, 129, 133, 140, 141, 153, 154, 161, 162], "04257728": [126, 129, 133, 140, 141, 153, 154, 161, 162], "00408397": [126, 129, 133, 140, 141, 153, 154, 161, 162], "04155852": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0389733": [126, 129, 133, 140, 141, 153, 154, 161, 162], "01409826": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0978704": [126, 129, 133, 140, 141, 153, 154, 161, 162], "08808327": [126, 129, 133, 140, 141, 153, 154, 161, 162], "03970837": [126, 129, 133, 140, 141, 153, 154, 161, 162], "00535434": [126, 129, 133, 140, 141, 153, 154, 161, 162], "02353762": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05116226": [126, 129, 133, 140, 141, 153, 154, 161, 162], "02788907": [126, 129, 133, 140, 141, 153, 154, 161, 162], "06848346": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05154399": [126, 129, 133, 140, 141, 153, 154, 161, 162], "0371798": [126, 129, 133, 140, 141, 153, 154, 161, 162], "05128025": [126, 129, 133, 140, 141, 153, 154, 161, 162], "dydact": [126, 129, 133, 140, 141, 153, 154, 161, 162], "gym_env": [126, 129, 133, 140, 141, 153, 154, 161, 162, 444], "reset_kei": [126, 129, 133, 140, 141, 153, 154, 161, 162, 187, 223, 229, 230, 231, 438], "multitask": [126, 129, 133, 140, 141, 153, 154, 161, 162], "multiag": [126, 129, 133, 140, 141, 144, 153, 154, 155, 156, 161, 162, 179, 281, 292, 301, 331, 346, 349, 362], "another_reward": [126, 129, 133, 140, 141, 153, 154, 161, 162], "reward_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "auto_cast_to_devic": [126, 129, 133, 140, 141, 153, 154, 161, 162, 439], "soon": [126, 129, 133, 140, 141, 153, 154, 155, 156, 161, 162], "__sort": [126, 129, 133, 140, 141, 153, 154, 161, 162], "as__": [126, 129, 133, 140, 141, 153, 154, 161, 162], "argmaxmodul": [126, 129, 133, 140, 141, 153, 154, 161, 162], "argmax": [126, 129, 133, 140, 141, 153, 154, 161, 162, 264, 293, 312, 317, 429, 431], "n_act": [126, 129, 133, 140, 141, 153, 154, 161, 162, 207, 329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 432], "ourselv": [126, 129, 133, 140, 141, 153, 154, 161, 162, 427, 445], "emul": [126, 129, 133, 140, 141, 153, 154, 161, 162], "epoch": [126, 129, 133, 140, 141, 153, 154, 161, 162, 402, 427, 438, 439], "input_td": [126, 129, 133, 140, 141, 153, 154, 161, 162], "rollout_td": [126, 129, 133, 140, 141, 153, 154, 161, 162], "state_spec_unbatch": [126, 129, 133, 140, 141, 153, 154, 161, 162], "prevail": [126, 129, 133, 140, 141, 153, 154, 161, 162, 179, 188, 223], "next_tensordict": [126, 129, 133, 140, 141, 153, 154, 161, 162, 178, 184, 188, 200, 201, 202, 207, 214, 217, 218, 224, 227, 240, 244], "precomput": [126, 129, 133, 140, 141, 153, 154, 161, 162], "_stepmdp": [126, 129, 133, 140, 141, 153, 154, 161, 162, 178], "exclude_act": [126, 129, 133, 140, 141, 153, 154, 161, 162, 178], "reset_data": [126, 129, 133, 140, 141, 153, 154, 161, 162, 445], "dm_control": [127, 128, 425, 437, 445], "2006": [127, 128, 330, 336], "12983": [127, 128], "240": [127, 128, 444], "swingup": [127, 128, 445], "swingup_spars": [127, 128], "ball_in_cup": [127, 128], "catch": [127, 128, 429], "balance_spars": [127, 128], "three_pol": [127, 128], "two_pol": [127, 128], "finger": [127, 128], "turn_easi": [127, 128], "turn_hard": [127, 128], "fish": [127, 128], "upright": [127, 128, 426], "swim": [127, 128], "hopper": [127, 128], "hop": [127, 128], "humanoid": [127, 128, 153, 161, 437], "walk": [127, 128, 153, 161, 426, 437], "run_pure_st": [127, 128], "bring_bal": [127, 128], "bring_peg": [127, 128], "insert_bal": [127, 128], "insert_peg": [127, 128], "point_mass": [127, 128], "reacher": [127, 128], "swimmer": [127, 128], "swimmer6": [127, 128], "swimmer15": [127, 128], "walker": [127, 128], "dog": [127, 128], "trot": [127, 128], "humanoid_cmu": [127, 128], "lqr": [127, 128], "lqr_2_1": [127, 128], "lqr_6_2": [127, 128], "quadrup": [127, 128], "escap": [127, 128], "stacker": [127, 128], "stack_2": [127, 128], "stack_4": [127, 128], "deviceless": 129, "run_type_check": [129, 147], "hint": 129, "counterenv": 129, "creator": [130, 407, 408, 414, 415, 416], "substitut": [130, 229, 244, 431], "vecnorm": [130, 245, 416], "env_creat": [130, 425], "test_env1": 130, "_td": [130, 340], "observation_count": [130, 445], "test_env2": 130, "ps": 130, "p1": 130, "p2": 130, "9934": 130, "make_vari": [130, 235], "variant": [130, 235, 252, 420], "trajcount": 130, "env_creator_pendulum": 130, "env_creator_cartpol": 130, "env_str": 131, "device_map": 131, "registri": [132, 163], "asyncvectorenv": 132, "pixel_observ": [132, 134, 135, 158], "pixelobservationwrapp": [132, 134, 135, 158], "adventur": [132, 134], "airraid": [132, 134, 445], "alien": [132, 134], "time_limit": 132, "timelimit": [132, 145, 146, 165, 166], "default_info_dict_read": [132, 133, 134, 153], "reader": [132, 133, 134, 153, 426], "set_info_dict_read": [132, 133, 134, 153, 430], "info_dict": [132, 133, 134, 153], "gymlikeenv": [132, 134, 418], "auto_register_info_dict": [132, 133, 134, 153], "multibinari": [132, 134], "multidiscret": [132, 134], "rag": [132, 134], "gym_conversion_exampl": [132, 134], "info_dict_read": [133, 153], "ignore_priv": 133, "baseinfodictread": 133, "tensordictprim": [133, 153, 253, 270, 274, 326, 420, 428], "succe": [133, 153], "underscor": 133, "primer": [133, 140, 195, 230, 253, 270, 274, 326, 428], "halfcheetah": [133, 153, 180, 219, 425, 444], "reward_ctrl": [133, 153], "reward_run": [133, 153], "x_posit": [133, 153], "x_veloc": [133, 153], "raise_if_clos": 133, "read_act": 133, "read_don": 133, "nonsens": 133, "fallback": 133, "read_ob": 133, "dictat": [133, 208, 315, 319, 349, 425, 440], "read_reward": 133, "hoc": [133, 153, 431], "dict_read": 133, "my_info_kei": 133, "some_env": 133, "vecenv": 134, "vectorenv": 134, "convert_actions_to_numpi": 134, "secur": 135, "habitat3": 135, "ai": [135, 441], "habitatrenderpick": 135, "isaacgym": [136, 137], "isaacgymwrapp": [136, 418], "isaacgymenv": [137, 418], "webpag": 137, "isaac": 137, "essenc": [137, 430], "instadeepai": [138, 139], "2306": [138, 139], "09884": [138, 139], "snake": [138, 139], "grid": [138, 139, 384], "bodi": [138, 139], "body_st": [138, 139], "fruit_posit": [138, 139], "col": [138, 139], "head_posit": [138, 139], "tail": [138, 139], "game2048": [138, 139], "maze": [138, 139], "cleaner": [138, 139], "cvrp": [138, 139], "multicvrp": [138, 139], "minesweep": [138, 139], "rubikscub": [138, 139], "knapsack": [138, 139], "sudoku": [138, 139], "tsp": [138, 139], "connector": [138, 139], "v2": [138, 139, 159, 160, 358, 373, 374, 375, 376, 378, 379, 380, 381, 428], "mmst": [138, 139], "graphcolor": [138, 139], "partli": [138, 139], "scrambl": [138, 139], "robotwarehous": [138, 139], "tetri": [138, 139], "binpack": [138, 139], "jobshop": [138, 139], "0x1fca91910": 138, "122": [138, 139, 445], "0x1ff9baee0": 138, "134": [138, 139], "0x1ff9ba7c0": 138, "172": [138, 139], "jit": 139, "eager": 139, "tdreset": [139, 247, 437], "whichev": 139, "drastic": [139, 153, 442], "histori": 140, "cot": 140, "from_dataload": [140, 195], "token_kei": 140, "str2str": [140, 195], "str_kei": 140, "attention_kei": 140, "assign_reward": 140, "vocab_s": [140, 141], "no_stack": 140, "has_attent": 140, "assign_don": 140, "batchless": 140, "dataloadingprim": [140, 230], "pretrainedtokenizerbas": [140, 234], "as_llm_data": 140, "data_kei": [140, 195], "data_spec": [140, 195], "stack_method": [140, 195], "as_nested_tensor": [140, 195], "as_padded_tensor": [140, 195], "group_repeat": [140, 195], "bert": [140, 234], "uncas": [140, 234], "tokens_in": 140, "tokens_out": 140, "grpo": [140, 195], "overview": [141, 427, 429, 432, 438, 439, 444], "hashing_modul": 141, "text_output": 141, "decod": [141, 173, 285], "batch_decod": 141, "text_kei": 141, "gpt2token": 141, "make_tensordict": 141, "mo": [142, 143], "minecart": [142, 143], "mo_gym": [143, 208], "qualnam": 144, "neural": [144, 155, 156, 254, 255, 288, 290, 296, 318, 420, 426, 427, 428, 431, 438, 439, 440, 445], "group_map": [144, 145, 146, 151, 152, 155, 156, 163, 164, 165, 166, 168, 438], "constructiuon": [144, 155, 156], "premad": [144, 145, 146, 155, 156, 165, 166, 362], "all_in_one_group": [144, 151, 152, 168], "agent_0": [144, 155, 156, 163, 168, 227], "agent_1": [144, 155, 156, 163, 168, 227], "agent_2": [144, 155, 156, 163, 168], "agent_3": [144, 163], "one_group_per_ag": [144, 155, 156], "meltingpot": [145, 146], "2211": [145, 146], "13746": [145, 146], "melt": [145, 146], "pot": [145, 146], "novel": [145, 146, 432], "social": [145, 146], "familiar": [145, 146, 426, 439, 445], "unfamiliar": [145, 146], "broad": [145, 146], "cooper": [145, 146, 438, 439], "decept": [145, 146], "reciproc": [145, 146], "stubborn": [145, 146], "substrat": [145, 146], "ml_collect": 145, "config_dict": 145, "configdict": 145, "categorical_act": [145, 146, 151, 152, 155, 156, 159, 160, 163, 164, 165, 166], "marlgroupmaptyp": [145, 146, 151, 152, 155, 156, 163, 164, 165, 166, 168, 418, 438], "agent_nam": [145, 146, 165, 166, 168], "agent_names_to_indices_map": [145, 146, 165, 166], "env_torchrl": [145, 146], "commons_harvest__open": [145, 146], "rgb": [145, 146], "144": [145, 146], "192": [145, 146], "collective_reward": [145, 146], "ready_to_shoot": [145, 146], "88": [145, 146, 159, 160], "substrate_config": 146, "get_config": 146, "mp_env": 146, "build_from_config": 146, "default_player_rol": 146, "mymbenv": [147, 251, 277], "world_model": [147, 251, 277, 341], "hidden_observ": [147, 251, 277], "mlp": [147, 251, 254, 255, 257, 258, 259, 260, 266, 270, 274, 277, 281, 282, 307, 311, 326, 334, 336, 420, 426, 429, 431, 432, 435, 437, 441, 444], "worldmodelwrapp": [147, 251, 277], "activation_class": [147, 251, 254, 255, 257, 258, 259, 260, 265, 266, 275, 277, 280, 281, 426, 431, 438, 439, 444], "activate_last_lay": [147, 251, 260, 275, 277], "sail": [148, 149], "sg": [148, 149], "2206": [148, 149], "10558": [148, 149], "readthedoc": [148, 151, 152], "en": [148, 151, 152], "python_interfac": 148, "envpoolmixin": 149, "env_bas": 149, "task_id": 149, "env_typ": 149, "gym_reset_return_info": 149, "envpool_env": 149, "www": [150, 278, 279], "fetch_openml": 150, "adult_num": 150, "adult_onehot": 150, "mushroom_num": 150, "mushroom_onehot": 150, "covertyp": 150, "shuttl": 150, "magic": [150, 429, 430], "106": 150, "openspiel": [151, 152], "open_spiel": [151, 152], "game_str": 151, "return_st": [151, 152, 155, 156], "4672": [151, 152], "current_play": [151, 152], "674": 151, "2048": [151, 152], "add_nois": [151, 152], "amazon": [151, 152], "backgammon": [151, 152], "restor": [151, 152], "td_restor": [151, 152], "pyspiel": 152, "load_gam": 152, "new_initial_st": 152, "3009": 152, "my_env_fun": [153, 161], "custom_attribute_list": [153, 161], "custom_attribut": [153, 161], "custom_method_list": [153, 161], "custom_method": [153, 161], "deploi": [153, 161, 184, 429], "slight": [153, 161, 426], "share_individual_td": [153, 161], "shared_memori": [153, 161], "policy_proof": [153, 161], "ll": [153, 161, 268, 269, 272, 273, 425, 426, 427, 428, 430, 431, 432, 433, 435, 439, 445], "hidden": [153, 161, 186, 257, 265, 268, 269, 270, 272, 273, 274, 285, 286, 294, 295, 307, 308, 309, 310, 318, 321, 331, 346, 349, 420, 428, 437, 444], "serial_for_singl": [153, 161, 426], "circular": [153, 161, 425], "list_of_kwarg": [153, 161], "com_veloc": [153, 161], "head_height": [153, 161], "joint_angl": [153, 161], "torso_vert": [153, 161], "timeout": 153, "idl": 153, "batched_pipe_timeout": 153, "stringent": [153, 427, 438, 439], "inter": 153, "penv": [153, 235], "env_fix": 153, "influenc": 153, "myenv": [153, 184, 194, 198], "pipe": 153, "update_kwarg": [153, 161], "th": [154, 202, 239, 268, 272, 440], "thdot": [154, 440], "max_spe": [154, 440], "max_torqu": [154, 440], "gen_param": [154, 440], "gravit": [154, 440], "torqu": [154, 440], "pettingzoo": [155, 156, 438, 439], "pet": [155, 156], "zoo": [155, 156], "__": [155, 156], "aecenv": [155, 156], "dead": [155, 156], "done_on_ani": [155, 156, 438], "compulsori": [155, 156], "adversary_0": [155, 156], "adversari": [155, 156, 343, 438], "sisl": 155, "multiwalker_v9": 155, "aec": [155, 156], "n_piston": [155, 156], "pistonball_v6": [155, 156], "piston": [155, 156], "piston_0": [155, 156], "piston_1": [155, 156], "piston_20": [155, 156], "tictactoe_v3": [155, 156], "player": [155, 156, 162], "player_1": [155, 156], "player_2": [155, 156], "butterfli": 156, "parallel_env": [156, 425, 444, 445], "cube": 157, "roboh": 158, "expos": [158, 194, 198, 320, 426], "vikashplu": 158, "wiki": 158, "2310": 158, "06828": 158, "from_depth": 158, "smacv2": [159, 160], "starcraft": [159, 160], "challeng": [159, 160, 430, 440, 441], "10gen_terran": [159, 160], "10gen_zerg": [159, 160], "10gen_protoss": [159, 160], "3m": [159, 160], "8m": [159, 160], "25m": [159, 160], "5m_vs_6m": [159, 160], "8m_vs_9m": [159, 160], "10m_vs_11m": [159, 160], "27m_vs_30m": [159, 160], "mmm": [159, 160], "mmm2": [159, 160], "2s3z": [159, 160], "3s5z": [159, 160], "3s5z_vs_3s6z": [159, 160], "3s_vs_3z": [159, 160], "3s_vs_4z": [159, 160], "3s_vs_5z": [159, 160], "1c3s5z": [159, 160], "2m_vs_1z": [159, 160], "corridor": [159, 160], "6h_vs_8z": [159, 160], "2s_vs_1sc": [159, 160], "so_many_banel": [159, 160], "bane_vs_ban": [159, 160], "2c_vs_64zg": [159, 160], "old": [159, 160, 346, 445], "smac": [159, 160], "map_nam": [159, 160], "176": [159, 160], "battle_won": [159, 160], "dead_al": [159, 160], "dead_enemi": [159, 160], "episode_limit": [159, 160], "322": [159, 160], "procedur": [159, 160], "distribution_config": [159, 160], "n_unit": [159, 160], "n_enemi": [159, 160], "team_gen": [159, 160], "dist_typ": [159, 160], "weighted_team": [159, 160], "unit_typ": [159, 160], "marin": [159, 160], "maraud": [159, 160], "medivac": [159, 160], "exception_unit_typ": [159, 160], "start_posit": [159, 160], "surrounded_and_reflect": [159, 160], "map_x": [159, 160], "map_i": [159, 160], "capability_config": [159, 160], "131": [159, 160], "starcraft2env": 160, "tic": 162, "tac": 162, "toe": 162, "single_play": 162, "player1": 162, "desired_batch_s": 162, "player0": 162, "uniti": [163, 164], "ml": [163, 164], "technolog": [163, 164], "llapi": [163, 164], "mlagents_env": [163, 164], "unityenviron": [163, 164], "file_nam": 163, "registered_nam": 163, "nor": 163, "localhost": 163, "connect": 163, "3dball": 163, "group_0": 163, "vectorsensor_size8": 163, "continuous_act": [163, 165, 166, 382, 438, 439], "agent_10": 163, "agent_11": 163, "agent_4": 163, "agent_5": 163, "agent_6": 163, "agent_7": 163, "agent_8": 163, "agent_9": 163, "group_reward": 163, "proroklab": [165, 166], "vectorizedmultiagentsimul": [165, 166], "2207": [165, 166], "03530": [165, 166], "basescenario": 165, "defaultt": 165, "chosen": [165, 166, 229, 230, 292, 293, 301, 317, 384, 420, 434], "sparsiti": 165, "unbatched_action_spec": [165, 166], "unbatched_observation_spec": [165, 166], "unbatched_reward_spec": [165, 166], "het_spec": [165, 166], "het_specs_map": [165, 166], "flock": [165, 166, 382], "agent_collision_rew": [165, 166], "agent_distance_rew": [165, 166], "ca": 168, "environment4": 168, "get_group_map": 168, "sumbodul": 171, "unsqueeze_null_shap": 172, "dynamic_shap": 172, "model_bas": [173, 174, 251, 277], "model_based_env": [173, 340], "dreamerenv": [173, 340, 418], "model_based_env_ev": 173, "spec_typ": 175, "convert_specnam": 175, "remap_state_to_observ": 175, "spectyp": 175, "probabilistictdmodul": [176, 275, 315, 319, 363, 397], "keep_oth": [178, 440], "exclude_reward": 178, "exclude_don": 178, "next_": 178, "write_full_fals": 179, "_terminated_or_trunc": 179, "num_interv": 180, "out_action_kei": 180, "samplingstrategi": 180, "optino": 180, "intenum": 180, "action_disc": 180, "masker": 181, "maskedenv": 181, "ones_lik": [181, 278], "scatter": 181, "transformthatmeasuresbyt": [181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247], "bytes_in_td": [181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 203, 206, 207, 214, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 244, 247], "fill_float": 183, "fill_int": 183, "fill_bool": 183, "someenvclass": 183, "autoresetenv": 183, "fooenv": 183, "sign": [183, 225, 364, 438], "envtyp": 183, "reshape_fn": [184, 429], "reset_func": 184, "env_kwarg": [184, 414, 415, 425], "accompani": [184, 228], "tensordict_batch_s": 184, "tensordict_reset": [184, 440], "transform_env_batch_s": [184, 191, 236, 247], "untouch": [184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 245, 247], "transform_full_done_spec": [184, 191, 194, 196, 200, 207, 209, 217, 218, 224, 228, 234, 236, 238, 245, 247], "biner": 185, "burn_in": 186, "burn": 186, "burnt": 186, "gru_modul": [186, 270, 326], "input_s": [186, 230, 268, 269, 270, 272, 273, 274, 326, 428, 429], "hidden_s": [186, 230, 268, 269, 270, 272, 273, 274, 326, 428, 429], "default_recurrent_mod": [186, 270, 274], "burn_in_transform": 186, "gru": [186, 230, 269, 270, 326, 429], "num_lay": [186, 268, 270, 272, 274, 285, 286, 326, 429], "is_init": [186, 206, 270, 274, 291, 314, 326, 428, 429], "86": 186, "3008": 186, "0344": 186, "padding_valu": [187, 278, 279], "as_invers": 187, "movement": 187, "1312": 187, "5602": 187, "consumpt": [187, 418], "pictur": 187, "pixels_trsf": [187, 442], "grayscal": [187, 426, 428, 429, 442, 445], "data_exclud": [187, 442], "make_rb_transform_and_sampl": 187, "sampler_kwarg": 187, "redund": [187, 428], "del_kei": [188, 227, 240, 437, 440], "unsqueeze_if_oor": 188, "observation_posit": 188, "observation_veloc": 188, "delet": [188, 227, 391], "crop": [189, 216, 384], "center": [189, 290, 384], "width": [189, 193, 219], "height": [189, 193, 219], "squar": [189, 193, 271, 299, 300, 384], "scalar": [190, 221, 249, 258, 260, 267, 283, 284, 291, 325, 329, 330, 331, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 420, 426, 432, 440], "permit": [190, 202, 227, 239, 329, 331, 346, 349, 351], "rewardsc": [191, 237, 425, 426, 428], "rewardclip": 191, "transformed_env": [191, 237, 430], "transform_env_devic": [191, 196, 236, 247], "cond": 192, "met": [192, 328, 438, 440], "altogeth": 192, "exectu": 192, "palliat": [192, 431], "step_count_kei": [192, 228], "inner_count": 192, "middle_env": 192, "middle_count": 192, "auto_unwrap": [192, 237, 392], "9670": 192, "2546": 192, "9669": 192, "9802": 192, "1981": 192, "1601": 192, "9926": 192, "1214": 192, "5556": 192, "9994": 192, "7622": 192, "9984": 192, "0561": 192, "7933": 192, "9895": 192, "1445": 192, "7779": 192, "dtype_in": 194, "dtype_out": 194, "scan": [194, 198, 320, 321], "resp": [194, 198], "not_transform": [194, 198], "auto_batch_s": 195, "queue": [195, 244, 442, 444], "progress": [195, 395, 396, 397, 402, 422, 426, 428, 445], "maybe_dense_stack": 195, "unrel": 195, "llmenv": [195, 418], "endless_dataload": 195, "set_capture_non_tensor_stack": 195, "dummydataload": 195, "generate_random_str": 195, "ascii_lowercas": 195, "__iter__": 195, "__next__": 195, "zxwvupirska": 195, "stringa": 195, "zxwvupirsk": 195, "roll": 195, "init_st": 195, "nngcmflsana": 195, "vrrbnhzpmga": 195, "nngcmflsan": 195, "vrrb": 195, "dummytensordataload": 195, "generate_random_tensor": 195, "pad_tensor": 195, "padding_length": 195, "orig_devic": 196, "unspecifi": 196, "transform_done_spec": [196, 227, 234, 236, 238, 247], "num_actions_effect": 197, "max_act": 197, "include_forward": 197, "num_act": [197, 255, 338, 429, 431], "action_out": 197, "eol_kei": 199, "lives_kei": 199, "eol_attribut": 199, "breakout": 199, "210": [199, 213], "160": [199, 213], "eol_transform": 199, "eol": 199, "dqnloss": [199, 329, 330, 332, 333, 336, 338, 339, 340, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 362, 409, 418, 421, 426, 428, 429, 435], "register_kei": 199, "loss_or_advantag": 199, "lossmodul": [199, 402, 411, 412, 418, 421], "valueestimatorbas": [199, 347, 418], "finit": [201, 290, 431, 442], "first_dim": 202, "last_dim": 202, "allow_positive_dim": [202, 227, 239], "frameskip": 202, "repeatedli": [203, 427, 439], "hash_fn": 205, "use_raw_nontensor": [205, 234, 238], "repertoir": 205, "reproducible_hash": 205, "unarytransform": 205, "observation_str": 205, "tobyt": [205, 238], "observation_hash": 205, "x08": 205, "x8b": 205, "xbexav": 205, "xbf": 205, "x00": 205, "xee": 205, "xb5": 205, "x17": 205, "x8f": 205, "xbe": [205, 238], "x88": 205, "xccu": 205, "xc0vr": 205, "get_input_from_hash": 205, "hash_tensor": 205, "init_kei": [206, 314], "tracker": 206, "log_prob_kei": [207, 319, 421], "pi_curr": 207, "pi_0": 207, "overfit": 207, "probabilist": [207, 315, 329, 349, 418, 427, 444], "get_dist": [207, 319, 320], "normalparamextractor": [207, 307, 308, 309, 315, 321, 329, 330, 332, 338, 345, 349, 350, 351, 352, 354, 355, 420, 427, 431, 439, 444], "probabilisticactor": [207, 307, 308, 309, 310, 329, 330, 332, 335, 337, 338, 345, 348, 349, 350, 351, 352, 354, 355, 420, 425, 427, 431, 438, 439], "tanhnorm": [207, 307, 308, 309, 315, 321, 329, 330, 332, 345, 349, 350, 351, 352, 354, 355, 418, 427, 439, 444], "return_log_prob": [207, 307, 308, 309, 315, 319, 321, 351, 420, 427, 431, 438, 439, 444], "apply_": 207, "copy_": [207, 425], "formula": [207, 271, 299, 300, 329, 331, 346, 349, 421, 427], "mogymwrapp": [208, 418], "mo_env": 208, "sea": 208, "treasur": 208, "so_env": 208, "stack_reward": 209, "stack_observ": 209, "auto_batch_size_": 209, "macro": [209, 314], "noop": 210, "trial": 210, "standard_norm": [211, 222, 244, 245, 425, 426, 428], "affin": [211, 222, 244, 245], "layer": [211, 244, 250, 254, 255, 257, 258, 263, 265, 268, 269, 270, 272, 273, 274, 275, 280, 281, 283, 284, 285, 286, 296, 297, 304, 313, 322, 420, 426, 427, 428, 429, 431, 438, 441], "epsilon": [211, 249, 267, 291, 353, 400, 426, 427, 428, 431], "recover": 211, "set_default_tensor_typ": 211, "doubletensor": 211, "isclos": 211, "next_ob": [211, 364, 365, 366, 367, 444], "init_stat": [211, 425, 426, 427, 428], "3752e": 211, "5087e": 211, "9294e": 211, "9636": 211, "5608": 211, "6408": 211, "num_it": [211, 426, 427], "reduce_dim": [211, 425, 426, 427, 428], "cat_dim": [211, 425, 426, 427, 428], "keep_dim": [211, 314, 426, 428], "statist": [211, 244, 245, 250, 351, 416, 425, 426, 427, 445], "gaussian": [211, 230, 249, 251, 277, 283, 284, 289, 427, 429, 438], "empir": [211, 251, 277, 315, 319, 425, 427, 439], "3d": [211, 254], "reorder": 213, "in_keys_in": [213, 239], "channel": [213, 233, 280, 285, 286, 426], "r3m": [215, 441], "resnet": [215, 240, 242], "ego4d": [215, 240, 242], "univers": [215, 240, 242, 430], "suraj": [215, 240], "nair": [215, 240], "aravind": [215, 240], "rajeswaran": [215, 240], "vikash": [215, 240, 242], "kumar": [215, 240, 242], "chelsea": [215, 240], "finn": [215, 240], "abhinav": [215, 240], "gupta": [215, 240], "2203": [215, 240, 277, 441], "12601": [215, 240, 441], "_init": [215, 240, 425], "resnet50": [215, 242, 441], "model_nam": [215, 240, 242, 387], "resnet34": 215, "resnet18": 215, "r3m_vec": [215, 441], "stack_imag": [215, 242], "tread": [215, 242], "hub": [215, 242, 430], "resnet50_weight": [215, 242], "imagenet1k_v1": [215, 242], "download_path": [215, 242], "tensor_pixels_kei": [215, 242], "sub_seq_len": 216, "sample_dim": [216, 425], "hesit": 216, "mix": [216, 292, 301, 362, 425, 438, 439], "improp": 216, "dummyenv": 217, "another_oth": 217, "other_reward": 217, "create_copi": 218, "stuff": [218, 433], "newnam": 218, "r2g": 220, "reward_to_go": 220, "bernoulli_": 220, "9010": 220, "9404": [220, 370], "9701": [220, 370], "9900": [220, 370], "0000": [220, 231, 232, 267, 290, 322, 370], "clamp_min": 221, "clamp_max": 221, "clip_min": 221, "clip_max": 221, "episode_": 223, "reward1": 223, "reward2": 223, "episode_reward": [223, 438, 439], "keep_reward": 224, "keep_don": 224, "logical_or": 225, "in_key_inv": 227, "unstack": 227, "update_don": 228, "disjunct": 228, "recognis": 228, "target_return": 229, "default_valu": [230, 326], "expand_spec": 230, "single_default_valu": 230, "call_before_env_reset": 230, "unit": [230, 251, 265, 268, 269, 285, 286, 294, 295, 427], "scala": 230, "mykei": 230, "__unless": 230, "exists__": 230, "get_primers_from_modul": [230, 253, 270, 274, 418], "recurrent_st": [230, 270, 274, 326, 428], "pool": 231, "10th": 231, "0216": 231, "1149": 231, "1990": 231, "2749": 231, "3281": 231, "9290": 231, "3702": 231, "8978": 231, "time_kei": 232, "elaps": [232, 434], "monitor": [232, 430], "expend": 232, "_polici": 232, "time_reset": 232, "time_polici": 232, "time_step": [232, 273, 314], "0882": 232, "0002": 232, "5797e": 232, "6289e": 232, "7990e": 232, "0824e": 232, "0837e": 232, "6056e": 232, "2016e": 232, "1062e": 232, "7009e": 232, "from_int": 233, "shape_toler": 233, "ri": 233, "additional_token": 234, "skip_special_token": 234, "add_special_token": 234, "return_attention_mask": 234, "missing_toler": 234, "call_before_reset": 234, "traj_count": 235, "traj": 235, "countingenv": 235, "mocking_class": 235, "make_env_c0": 235, "make_env_c1": 235, "set_contain": 236, "reset_par": 236, "smoothli": [237, 250], "add_1": 237, "cache_spec": 237, "set_missing_toler": 237, "inv_fn": 238, "unari": 238, "durin": 238, "ommit": 238, "observation_trsf": 238, "xbc": 238, "x7f": 238, "x859": 238, "x81": 238, "x9a": 238, "xbd": 238, "xb8t8": 238, "test_input_spec": 238, "test_output_spec": 238, "danger": 239, "vc1": 240, "vc1_vec": 240, "untrain": 240, "make_noload_model": 240, "vip": [241, 242, 441], "implicit": [242, 337, 345, 442], "jason": 242, "ma": 242, "shagun": 242, "sodhani": 242, "dinesh": 242, "jayaraman": 242, "osbert": 242, "bastani": 242, "ami": 242, "zhang": 242, "vip_vec": 242, "final_nam": 243, "sb3": 243, "terminal_obs_read": 243, "truli": [243, 444], "vecnormv2": 244, "new_api": [244, 245], "to_observation_norm": [244, 245], "frozen_copi": [244, 245], "shared_td": 244, "race": 244, "decai": [244, 245, 249, 267, 353, 400, 425, 426, 428, 445], "underflow": [244, 400], "build_td_for_shared_vecnorm": 244, "memmori": 244, "td_share": 244, "v": [244, 268, 269, 272, 273, 307, 337, 345, 352, 425, 426], "unfreez": [244, 245], "observationnorm": [244, 245, 416, 425, 426, 427, 428, 444], "train_env": 244, "eval_env": 244, "9999": 245, "0001": [245, 265], "shared_data": 245, "varianc": [245, 250, 251, 252, 271, 299, 300, 421, 425, 427, 439], "vs": [245, 248, 270, 274], "_cast_int_to_float": 245, "state_dim": [246, 256, 261, 289, 294, 295, 310], "action_dim": [246, 256, 257, 259, 261, 289, 310, 425, 437], "gsde": [246, 350, 416], "gsdemodul": 246, "rb_transform": 247, "resist": 247, "insensit": 247, "sensit": [247, 426, 428], "_orig": 247, "95": [247, 277, 357, 427, 428], "window": [247, 314, 438, 442, 444], "module_nam": [248, 347], "from_vers": 248, "to_vers": 248, "class_method": 248, "import_modul": 248, "get_class_that_defined_method": 248, "module_set": 248, "setters_dict": 248, "setter": 248, "setter_dict": 248, "po": 249, "sigma_init": [249, 438], "sigma_end": [249, 438], "annealing_num_step": [249, 267, 291, 425, 426, 428, 429, 431, 435, 438], "sigma": [249, 268, 269, 271, 272, 273, 291, 299, 300, 427, 438], "omiss": [249, 267, 291], "momentum": 250, "max_r": 250, "max_d": 250, "warmup_step": 250, "batchrenorm": 250, "1702": 250, "03275": 250, "corenet": 250, "enhanc": 250, "warmup": 250, "phase": [250, 252, 439, 442], "outlier": 250, "period": 250, "warm": 250, "renorm": 250, "entropi": [251, 287, 329, 330, 331, 332, 337, 338, 345, 346, 348, 349, 350, 352, 354, 355, 439], "botev": 251, "2013": 251, "cem": 251, "plan": [251, 276, 277], "k": [251, 253, 268, 269, 272, 273], "maximis": [251, 257, 259, 277, 426, 427, 439], "modelbasedenv": [251, 277], "planning_horizon": [251, 277], "optim_step": [251, 277, 429, 435], "mpc": [251, 276, 277], "num_candid": [251, 277], "candid": [251, 277], "top_k": [251, 277], "modelbasedenvbas": [251, 276, 277, 418], "safemodul": [251, 276, 307, 309, 319, 329, 330, 332, 337, 338, 345, 349, 350, 351, 352, 354, 355, 407, 408, 412, 418, 444], "hausknecht": 252, "wagen": 252, "reus": [252, 257, 391], "consistentdropoutmodul": [252, 420], "capit": 252, "themselv": [252, 426], "conceptu": 252, "devianc": 252, "set_exploration_typ": [252, 347, 397, 418, 420, 427, 428, 429, 431, 438, 444], "_main_async_collector": 252, "asyncdatacollector": [252, 418], "ditto": 252, "consistentdropout": 253, "input_shap": 253, "batcht": 253, "make_tensordict_prim": [253, 270, 274, 428], "input_dtyp": 253, "get_default_dtyp": [253, 400], "mask_6127171760": 253, "env0": [253, 445], "num_cel": [254, 255, 257, 258, 259, 260, 265, 266, 270, 274, 275, 280, 281, 307, 326, 426, 427, 428, 429, 431, 432, 435, 438, 439, 444], "elu": [254, 255, 257, 258, 259, 260, 265, 266, 280, 426, 444], "activation_kwarg": [254, 255, 275], "norm_class": [254, 255, 257, 258, 275], "norm_kwarg": [254, 255, 275], "bias_last_lay": [254, 255, 257, 258, 259, 260, 266, 275], "aggregator_class": [254, 255, 257, 258, 426, 428, 444], "squashdim": [254, 255, 257, 266, 280, 444], "aggregator_kwarg": [254, 255, 257, 258, 426, 428], "squeeze_output": [254, 255, 257, 258, 426, 428], "convolut": [254, 255, 257, 258, 280, 296, 429, 431], "cell": [254, 255, 268, 269, 270, 272, 273, 274, 275, 280, 281, 427, 429, 430, 431, 432, 433, 434, 435], "kernel": [254, 255, 280], "cnet": [254, 255], "conv3d": 254, "rectangular": [254, 255], "lazyconv2d": [255, 257, 258, 266, 280], "default_atari_dqn": [255, 429], "semin": 255, "transformer_config": [256, 289, 310], "decisiontransform": [256, 289], "dtconfig": [256, 261, 289], "2202": [256, 261, 348], "05607": [256, 261, 348], "return_to_go": [256, 261, 289, 310], "conv_net_kwarg": [257, 258], "mlp_net_kwarg": [257, 258, 259], "use_avg_pool": [257, 258], "WITH": [257, 258, 259, 260, 291, 353], "1509": [257, 258, 259, 260, 277, 291, 334, 344, 353], "02971": [257, 258, 259, 260, 291, 353], "convnet": [257, 258, 266, 280, 428, 429, 431, 444], "ndims_in": 257, "avgpool": [257, 258], "lazylinear": [257, 258, 259, 260, 266, 275, 420, 427, 431, 440, 441], "2304": 257, "adaptiveavgpool2d": [258, 426, 428], "output_s": [258, 426, 428], "squeeze2dlay": 258, "400": [259, 260, 439], "mlp_net_kwargs_net1": 260, "mlp_net_kwargs_net2": 260, "mlp1": 260, "mlp2": 260, "desdescrib": 261, "n_embd": 261, "n_layer": [261, 268, 272], "n_head": 261, "n_inner": 261, "n_posit": 261, "resid_pdrop": 261, "attn_pdrop": 261, "gpt2config": 261, "atol": [262, 298], "rtol": [262, 298], "batch_shap": [262, 287, 298], "event_shap": [262, 298], "absolut": [262, 298, 425], "_instanc": 262, "densiti": [262, 278, 279, 287, 300], "mass": [262, 278, 279, 287, 300, 440], "rsampl": [262, 279, 287, 319], "sample_shap": [262, 278, 279, 287], "softmax": [263, 279, 287, 311, 312], "var_num": [264, 293, 311, 312, 317], "action_value_kei": [264, 293, 311, 312, 316, 317, 332, 347, 362], "action_mask_kei": [264, 267, 293, 311, 312, 316, 317], "1707": [264, 312, 339, 349], "06887": [264, 312, 339], "mult": [264, 281, 293, 311, 312, 316, 317], "tensordict_modul": [264, 268, 269, 272, 273, 293, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 332, 333, 337, 338, 345, 349, 350, 351, 352, 354, 355, 420], "nbin": [264, 311, 420], "customdistributionalqv": 264, "log_softmax": [264, 311], "qvalue_actor": [264, 293, 311, 316, 420], "to_modul": [264, 318, 321, 425, 444], "std_bia": 265, "std_min_val": 265, "belief": [265, 285, 294, 295], "1912": [265, 340, 341, 342], "01603": [265, 340, 341, 342], "softplu": [265, 325, 327, 328], "out_features_valu": 266, "cnn_kwarg": [266, 426], "mlp_kwarg": [266, 426], "duel": 266, "cnn": [266, 280, 426, 429, 431, 444], "06581": 266, "512": 266, "greedi": [267, 293, 312, 317, 426, 428, 429, 431], "eps_init": [267, 291, 426, 428, 429, 431, 435], "eps_end": [267, 291, 426], "explorative_polici": [267, 291], "9055": 267, "9277": 267, "6295": 267, "2532": 267, "grad_fn": [267, 306, 319], "addbackward0": 267, "batch_first": [268, 270, 272, 274, 428], "bidirect": [268, 272, 428], "cudnn": [268, 269, 270, 272, 273, 274, 428, 429], "rnn": [268, 269, 270, 272, 273, 274, 305, 338, 352, 428, 429, 431], "device_count": [268, 269, 272, 273, 445], "n_in": [268, 269, 272, 273], "n_out": [268, 269, 272, 273], "h0": [268, 269, 272, 273], "h1": [268, 269, 272, 273], "vectoris": [268, 269, 272, 273], "call_gru": [268, 269], "h_out": [268, 269, 272, 273], "batched_cal": [268, 269, 272, 273], "gate": [268, 269, 272], "r_t": 268, "w_": [268, 269, 272, 273], "ir": [268, 269], "x_t": [268, 272], "b_": [268, 269, 272, 273], "hr": [268, 269, 272], "h_": [268, 269, 272], "z_t": 268, "iz": [268, 269], "hz": [268, 269], "n_t": 268, "odot": [268, 269, 272, 273], "hn": [268, 269, 272], "h_t": [268, 272], "sigmoid": [268, 269, 272, 273], "hadamard": [268, 269, 272, 273], "multilay": [268, 272], "_t": [268, 272, 439, 440], "ge": [268, 272], "bernoulli": [268, 272], "b_ih": [268, 269, 272, 273, 274], "b_hh": [268, 269, 272, 273, 274], "h_0": [268, 272, 273], "pack_padded_sequ": [268, 272], "pack_sequ": [268, 272], "num": [268, 272, 435], "_layer": [268, 272], "_size": [268, 269, 272, 273], "h_n": [268, 272], "packedsequ": [268, 272], "weight_ih_l": [268, 272], "learnabl": [268, 269, 272, 273], "w_ir": 268, "w_iz": 268, "w_in": 268, "num_direct": [268, 272], "weight_hh_l": [268, 272], "w_hr": 268, "w_hz": 268, "w_hn": 268, "bias_ih_l": [268, 272], "b_ir": 268, "b_iz": 268, "b_in": 268, "bias_hh_l": [268, 272], "b_hr": 268, "b_hz": 268, "b_hn": 268, "mathcal": [268, 269, 272, 273], "sqrt": [268, 269, 272, 273, 291], "frac": [268, 269, 272, 273, 427], "seq_len": [268, 272], "subtli": 268, "matrix": [268, 272, 283, 284], "hx": [268, 269, 272, 273], "lstmcell": [269, 274, 429], "gru_cel": 269, "weight_ih": [269, 273], "weight_hh": [269, 273], "bias_ih": [269, 273], "bias_hh": [269, 273], "rocm": [269, 273], "embedd": [270, 274], "grucel": [270, 318], "python_bas": [270, 274], "custom_kei": [270, 274], "hasn": [270, 274], "set_recurrent_mod": [270, 274, 428], "recurrent_mod": [270, 274, 305], "rs": [270, 425], "gru_module_train": 270, "policy_train": [270, 274], "traj_td": [270, 274], "make_cudnn_bas": [270, 274], "make_python_bas": [270, 274, 429], "supplementari": [270, 274, 427, 445], "That": [270, 274, 427, 438], "dealt": [270, 274], "poorli": [270, 274], "meth": [270, 274, 347, 440], "data_collector": [270, 274, 426], "policy_infer": [270, 274], "td_inf": [270, 274], "upscal": [271, 299, 300], "tanh_loc": [271, 299, 300], "event_dim": [271, 298, 299], "poor": [271, 299, 300], "explos": [271, 299, 300], "proj_siz": 272, "c0": [272, 273], "c1": [272, 273], "call_lstm": [272, 273], "c_out": [272, 273], "i_t": 272, "ii": [272, 273], "hi": [272, 273], "f_t": 272, "hf": [272, 273], "g_t": 272, "ig": [272, 273], "hg": [272, 273], "o_t": 272, "ho": [272, 273], "c_t": 272, "c_": 272, "1402": 272, "1128": 272, "c_0": [272, 273], "proj": 272, "c_n": 272, "w_ii": 272, "w_if": 272, "w_ig": 272, "w_io": 272, "w_hi": 272, "w_hf": 272, "w_hg": 272, "w_ho": 272, "b_ii": 272, "b_if": 272, "b_ig": 272, "b_io": 272, "b_hi": 272, "b_hf": 272, "b_hg": 272, "b_ho": 272, "weight_hr_l": 272, "_revers": 272, "analog": [272, 431], "cn": 272, "lstm_cell": 273, "h_1": 273, "c_1": 273, "cx": 273, "recurrent_state_h": 274, "recurrent_state_c": 274, "triplet": [274, 316, 317], "lstm_modul": 274, "rs_h": 274, "rs_c": 274, "hidden0": [274, 429], "hidden1": [274, 429], "single_bias_last_lay": 275, "layer_class": 275, "layer_kwarg": 275, "perceptron": [275, 431], "noisylinear": [275, 283, 418, 426], "noisylazylinear": [275, 418], "mpcplanner": 276, "tensordict_out": [276, 445], "mppi": 277, "covari": 277, "william": [277, 351], "aldrich": 277, "theodor": 277, "01149": 277, "hansen": 277, "wang": 277, "su": 277, "04955": 277, "valueoper": [277, 307, 308, 309, 329, 330, 331, 332, 333, 338, 345, 346, 349, 350, 351, 352, 354, 355, 412, 420, 425, 427, 432], "tdlambdaestim": [277, 418, 425], "value_net": [277, 334, 336, 351, 364, 365, 366, 367, 427, 429, 431, 432, 435], "adv": 277, "lmbda": [277, 357, 364, 367, 369, 375, 376, 377, 380, 381, 421, 425, 427, 439], "value_network": [277, 333, 334, 336, 337, 339, 345, 352, 364, 365, 366, 367, 421, 425, 427, 429, 432, 435, 438], "temperatur": [277, 330, 337, 345], "neg_inf": [278, 279], "inf": [278, 279], "api_doc": [278, 279], "tf_agent": [278, 279], "unnorm": [278, 279, 287], "sparse_mask": [278, 279], "dens": [278, 279], "1203": [278, 279], "0928": [278, 279], "0831": [278, 279], "1972": [278, 279], "grad_method": [279, 287], "reparamgradientstrategi": [279, 287], "passthrough": [279, 287], "relaxedonehot": [279, 287], "sample_non_valid": 279, "zeros_lik": [279, 440], "share_param": [280, 281, 282, 438, 439], "use_td_param": [280, 281, 282], "get_stateful_net": [280, 281, 282, 347, 420, 421], "from_stateful_net": [280, 281, 282, 347, 421], "homogen": [280, 281, 438, 439], "tensordictparam": [280, 281, 319], "_empty_net": [280, 281], "roughli": [280, 281, 444], "agent_network": [280, 281], "modulelist": [280, 281], "2592": 280, "n_agent_input": [281, 282, 438, 439], "n_agent_output": [281, 282, 438, 439], "toech": 281, "centalis": 281, "shown": [281, 420, 429, 437, 438, 439, 442], "agent_dim": 282, "vmap_random": [282, 347, 421], "stateful_net": [282, 347], "Such": [282, 347], "multiagentmlp": [282, 438, 439], "snet": 282, "hasattr": [282, 425], "kaiming_normal_": 282, "std_init": [283, 284], "initialize_paramet": 283, "isol": [283, 347, 429], "1706": [284, 301], "10295v3": 284, "induc": [284, 319], "aid": 284, "1803": [285, 286, 292], "10122": [285, 286], "rnn_hidden": 285, "latent": 286, "ordin": [288, 418], "parametris": [288, 290], "inres": 289, "mu": [289, 291, 427], "impos": [290, 420], "proxim": [290, 349, 427, 439], "atom": 290, "tang": 290, "agraw": 290, "2020": 290, "1901": 290, "10500": 290, "discretis": 290, "num_atom": 290, "num_sampl": 290, "middl": 290, "adam": [290, 299, 425, 426, 427, 428, 429, 432, 435, 438, 439, 440], "lr": [290, 425, 426, 427, 428, 435, 438, 439, 440], "optimis": [290, 438, 439], "minimis": 290, "penalis": 290, "0308": 290, "1586": 290, "4727": 290, "2260": 290, "1120": 290, "histogram": 290, "return_typ": 290, "hist": [290, 442], "158": 290, "478": 290, "228": 290, "112": 290, "bin_edg": 290, "8000": 290, "6000": 290, "4000": 290, "ornstein": [291, 425, 429], "uhlenbeck": [291, 425, 429], "ou": [291, 425], "correl": 291, "noise_t": 291, "noise_": 291, "theta": [291, 427, 440], "sigma_t": 291, "sigma_": 291, "anneal": [291, 426, 431, 438], "ou_prev_nois": 291, "ou_step": 291, "x0": 291, "sigma_min": 291, "n_steps_ann": 291, "is_init_kei": 291, "_ou_prev_nois": 291, "_ou_step": 291, "state_shap": [292, 362], "mixing_embed_dim": [292, 362], "qmix": [292, 438, 439], "mixer": [292, 301, 362], "monoton": 292, "hyper": 292, "11485": 292, "qmixerloss": [292, 301], "qmix_vdn": [292, 301], "vdn": [292, 301], "hidden_dim": [294, 295], "scale_lb": [294, 295], "posterior": [294, 341], "rssm": [294, 295, 341], "1811": [294, 295], "04551": [294, 295], "obs_embed": 294, "rnn_hidden_dim": 295, "dream": 295, "safe_tanh": 299, "tanhtransform": 299, "overflow": [299, 306, 311, 312, 315, 316, 317, 318, 319], "get_mod": [299, 319], "decomposit": 301, "05296": 301, "hide": [302, 427, 438, 439], "satisfi": [302, 420], "vmap_dim": 302, "lam": 302, "sample_in": 302, "sample_in_td": 302, "vm": 302, "translat": [306, 315], "character": [306, 311, 315, 316, 318, 442], "td_modul": [306, 307, 308, 309, 315, 318, 319, 321, 323, 431, 444], "3635": 306, "0340": 306, "1476": 306, "3911": 306, "1664": 306, "5455": 306, "2247": 306, "4583": 306, "2916": 306, "2160": 306, "5337": 306, "5193": 306, "addmmbackward0": 306, "actorvalueoper": [307, 331, 346, 349, 420, 431], "get_policy_oper": [307, 308, 309, 331, 346, 349, 420], "standalon": [307, 308, 309, 429, 431], "tdmodul": [307, 308, 309, 412], "get_critic_oper": 307, "common_oper": [307, 309], "policy_oper": [307, 308, 309], "value_oper": [307, 308, 309], "module_hidden": [307, 309], "td_module_hidden": [307, 309], "module_act": [307, 309], "td_module_act": [307, 308, 309], "module_valu": [307, 308, 309], "td_module_valu": [307, 308, 309], "state_action_valu": [307, 323, 330, 332, 337, 345, 352, 363, 412, 420, 425, 438, 444], "td_clone": [307, 308, 309], "tensordictmodulewrapp": [307, 407, 408, 412], "get_policy_head": [307, 308, 309], "safesequenti": [307, 308, 309, 362], "head": [307, 309, 319, 326, 331, 346, 349, 418], "get_value_head": [307, 308, 309], "get_value_oper": [307, 308, 309, 331, 346, 349], "action_modul": 308, "actorcriticoper": [309, 420, 431], "actorcriticwrapp": [309, 420, 425], "inferec": 310, "set_tensor_kei": 310, "dt_inference_wrapp": 310, "baz": 310, "inference_context": 310, "obs_dim": 310, "tanhdelta": [310, 418, 425, 438], "dtactor": 310, "actor_modul": [310, 444], "dist_class": 310, "dist_kwarg": 310, "distribution_kwarg": [310, 315, 319, 427, 438, 439], "inference_actor": 310, "sequence_length": 310, "mask_context": 310, "out_act": 310, "qvaluemodul": [311, 316, 362, 428, 429, 431, 435], "distributionaldqnnet": 311, "make_log_softmax": 311, "my_action_valu": [312, 317], "chanc": 312, "lmheadmodel": 313, "actor_head": [313, 331, 346, 349], "base_model": 313, "lm_head": 313, "lookahead": 314, "reshape_cat": 314, "actor_bas": 314, "obs_cat": 314, "obs_cat_reshap": 314, "action_orig": 314, "multistepenvwrapp": 314, "alter": [314, 347, 420], "ego": 314, "default_interaction_typ": [315, 319, 431], "interaction_typ": [315, 319], "set_interaction_typ": [315, 319], "compositedistribut": [315, 319, 329, 349, 421, 431], "distribution_map": [315, 319], "name_map": [315, 319], "cache_dist": [315, 319], "n_empirical_estim": [315, 319], "compound": [315, 431], "chose": 317, "functionalmodul": 318, "functionalmodulewithbuff": 318, "td_fmodul": 318, "td_function": 318, "td_state": 318, "params_repeat": 318, "td_vmap": [318, 321], "random_sampl": [318, 319], "suppli": 319, "paliat": 319, "get_median": 319, "get_mean": 319, "sample_key_nam": 319, "_log_prob": 319, "composite_lp_aggreg": 319, "clampbackward0": 319, "clamp": [319, 322, 341, 402, 421, 438, 440], "anihil": 319, "probabilistictensordictsequenti": [320, 329, 331, 346, 349, 351, 407, 408, 421, 444], "partial_toler": [320, 321, 437], "AND": [320, 321, 332], "tensordictsequ": 321, "safeprobabilisticmodul": [321, 420], "spec1": 321, "net1": 321, "module1": 321, "td_module1": 321, "spec2": 321, "module2": 321, "td_module2": 321, "boundari": [322, 427, 429, 438, 439], "resolut": 322, "9944": 322, "9991": 322, "3020": 322, "2299": 322, "5418": 322, "2989": 322, "6849": 322, "3169": 322, "2690": 322, "9649": 322, "5686": 322, "8602": 322, "0315": 322, "8455": 322, "6027": 322, "4746": 322, "7843": 322, "7782": 322, "2111": 322, "5115": 322, "4687": 322, "5760": 322, "custommodul": 323, "imaginari": 324, "imagin": 324, "transition_model": 324, "get_reward_oper": 324, "get_transition_model_oper": 324, "min_val": [325, 328], "_bia": 325, "surject": 328, "expln": 328, "biased_softplu": [328, 418], "biased_softplus_": 328, "syntax": [328, 425], "add_custom_map": 328, "1602": 329, "01783v2": 329, "actor_network": [329, 330, 331, 332, 333, 335, 337, 338, 345, 346, 348, 349, 350, 351, 352, 354, 355, 421, 425, 427, 432, 438, 439], "critic_network": [329, 331, 346, 349, 351, 427, 439], "entropy_bonu": [329, 331, 346, 349, 427], "favour": [329, 331, 346, 349], "samples_mc_entropi": [329, 331, 346, 348, 349], "entropy_coef": [329, 331, 346, 349, 427, 439], "critic_coef": [329, 331, 346, 349, 427], "loss_critic_typ": [329, 331, 346, 349, 351, 427], "l1": [329, 331, 333, 334, 338, 346, 349, 350, 351, 354, 355, 358, 362, 420, 425], "l2": [329, 331, 333, 334, 335, 336, 338, 341, 342, 346, 349, 350, 351, 354, 355, 358, 362, 425, 438], "smooth_l1": [329, 330, 331, 332, 333, 334, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355, 358, 362, 427], "separate_loss": [329, 331, 332, 333, 337, 338, 345, 346, 349, 350, 351, 352, 354, 355], "advantage_kei": [329, 331, 346, 349, 351, 364, 365, 366, 367], "value_target_kei": [329, 331, 346, 349, 351, 364, 365, 366, 367], "value_target": [329, 331, 346, 349, 351, 364, 365, 366, 367, 427, 439], "ddp": [329, 331, 346, 349, 351], "fsdp": [329, 331, 346, 349, 351], "divid": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355, 405, 425, 438, 439, 440], "clip_valu": [329, 331, 346, 349, 351], "loss_crit": [329, 349, 427, 439], "loss_entropi": [329, 349, 427, 439], "loss_object": [329, 349, 427, 439], "next_reward": [329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367], "next_don": [329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367], "next_termin": [329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 364, 365, 366, 367], "loss_obj": 329, "next_observ": [329, 330, 332, 333, 334, 336, 337, 338, 345, 349, 350, 351, 352, 354, 355, 437], "sacloss": [329, 344, 353, 418], "default_kei": [329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 362, 368], "_acceptedkei": [329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 354, 355, 362, 368], "fraction": 329, "make_value_estim": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 356, 362, 421, 425, 426, 438, 439, 444], "value_typ": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 357, 362, 425], "valueestim": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 357, 362, 418, 421, 425, 438, 439], "hyperparam": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 425], "enum": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 357, 362, 425], "default_value_estim": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 425, 444], "default_value_kwarg": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 418, 425], "dqn_loss": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 356, 362], "td1": [329, 330, 332, 333, 334, 336, 338, 339, 340, 345, 347, 349, 350, 351, 352, 354, 355, 362, 425], "conserv": [330, 336], "04779": [330, 336], "qvalue_network": [330, 332, 337, 338, 345, 350, 352, 354, 355], "unti": [330, 332, 345, 350, 352, 354, 355], "loss_funct": [330, 332, 333, 334, 335, 336, 337, 338, 345, 350, 352, 354, 355, 358, 362, 425, 438], "alpha_init": [330, 332, 338, 348, 350, 352], "min_alpha": [330, 332, 338, 348, 350, 352], "max_alpha": [330, 332, 338, 348, 350, 352], "fixed_alpha": [330, 332, 338, 348, 350, 352], "target_entropi": [330, 332, 338, 348, 350, 352], "prod": [330, 332, 348, 352], "delay_actor": [330, 333, 352, 354, 355], "delay_qvalu": [330, 338, 350, 352, 354, 355], "min_q_weight": 330, "max_q_backup": 330, "backup": 330, "deterministic_backup": 330, "num_random": 330, "with_lagrang": 330, "lagrang": 330, "lagrange_thresh": 330, "valueclass": [330, 332, 333, 338, 350, 352, 354, 355], "qvalu": [330, 332, 337, 338, 345, 350, 352, 354, 355], "loss_actor": [330, 332, 333, 337, 338, 345, 350, 351, 352, 354, 355, 398, 425, 438], "loss_actor_bc": 330, "loss_alpha": [330, 332, 338, 350, 352], "loss_cql": [330, 336], "loss_qvalu": [330, 332, 336, 337, 338, 345, 350, 352, 354, 355], "loss_alpha_prim": 330, "clip_epsilon": [331, 427, 439], "normalize_advantag": [331, 346, 349, 439], "normalize_advantage_exclude_dim": [331, 346, 349], "multiobject": [331, 346, 349], "value_kei": [331, 346, 349, 364, 365, 366, 367, 425], "somemodul": [331, 346, 349], "someactor": [331, 346, 349], "value_head": [331, 346, 349], "somevalu": [331, 346, 349], "loss_modul": [331, 344, 346, 347, 349, 353, 402, 411, 412, 421, 422, 425, 426, 427, 438, 439, 442], "IN": 332, "FOR": 332, "simplic": [332, 426, 427, 433, 441, 442, 444], "openreview": [332, 350], "pczqttstix": 332, "qvalue_loss": [332, 354], "actor_loss": [332, 354], "alpha_loss": 332, "num_qvalue_net": [332, 337, 338, 345, 350, 352, 354, 355], "maybe_init_target_entropi": 332, "fault_toler": 332, "target_entropy_buff": 332, "delay_valu": [333, 334, 336, 339, 351, 352, 362, 426, 428, 429, 435, 438], "loss_valu": [333, 337, 345, 351, 352, 425, 427, 438, 439], "pred_valu": [333, 336, 354, 355, 425], "pred_value_max": [333, 425], "target_valu": [333, 336, 350, 354, 355, 363, 421, 425], "target_value_max": [333, 425], "qvalueactor": [334, 336, 362, 426, 428], "double_dqn": 334, "06461": [334, 344], "mult_one_hot": [334, 337, 338, 362], "loss_val": [334, 336, 421, 425, 427, 428, 429, 432, 433, 435, 438, 439, 442], "01345": 335, "distanc": [336, 346, 358, 363, 364, 439], "dcql_loss": 336, "2110": [337, 345], "06169": [337, 345], "expectil": [337, 345], "tau": [337, 345, 353, 425, 426, 438], "antmaz": [337, 345], "sticht": [337, 345], "onehotcategor": [337, 338, 418], "target_entropy_weight": 338, "skip_done_st": [338, 352], "disctount": 339, "distributionalqvalueactor": [339, 420], "input_tensordict": [339, 425], "actor_model": 340, "value_model": [340, 342], "imagination_horizon": 340, "discount_loss": [340, 342], "lambda_kl": 341, "lambda_reco": 341, "lambda_reward": 341, "reco_loss": 341, "reward_loss": 341, "free_nat": 341, "nat": 341, "delayed_clamp": 341, "global_averag": 341, "value_loss": 342, "fake_data": 342, "1606": 343, "03476": 343, "discriminator_network": 343, "use_grad_penalti": 343, "gp_lambda": 343, "discrimin": 343, "ddpgloss": [344, 353, 412, 418, 425, 432, 438, 444], "td3loss": [344, 353, 418], "value_network_update_interv": 344, "qvalueclass": 345, "loss_value_diff": 345, "diff": 345, "old_polici": 346, "new_polici": 346, "apart": [346, 439], "dtarg": 346, "samples_mc_kl": 346, "analyt": 346, "decrement": 346, "loss_": [347, 398, 421, 425, 432], "equip": [347, 428, 429, 431], "gh": 347, "_forward_value_estimator_kei": 347, "value_estim": [347, 364, 365, 366, 367, 368, 421, 425, 439], "myloss": 347, "action2": 347, "augment": [347, 433, 435, 442], "deterministic_sampling_mod": 347, "convert_to_funct": [347, 425], "expand_dim": 347, "create_target_param": [347, 425], "compare_against": [347, 425], "_param": 347, "resampl": 347, "_target_param": 347, "network_nam": 347, "blend": 347, "add_random_modul": [347, 421], "flavor": [349, 425, 438, 439, 444], "clipppoloss": [349, 418, 427, 439], "klpenppoloss": [349, 418], "06347": 349, "gae": [349, 418, 421, 425, 427, 439], "ppo_loss": 349, "tdlambda": [349, 357, 421, 425], "base_lay": 349, "randn_lik": 349, "samplelogprob": 349, "ay8zfzm0tdd": 350, "sub_sample_len": 350, "subsampl": [350, 393, 422], "action_log_prob_actor": 350, "state_action_value_actor": [350, 354, 355], "connectionist": 351, "1992": 351, "doi": 351, "1007": 351, "bf00992696": 351, "actor_net": [351, 425, 427], "1801": 352, "01290": 352, "applic": [352, 362, 430, 431, 440], "1812": 352, "05905": 352, "redqloss": [353, 418], "math": 353, "theta_t": [353, 440], "theta_": [353, 440], "polyak": 353, "minimalist": 354, "06860": 354, "policy_nois": [354, 355], "noise_clip": [354, 355], "td3_bc": 354, "bc_loss": 354, "lmbd": 354, "td0": [356, 425, 438], "strict_shap": 358, "view_a": 358, "qmixer": [362, 418], "local_valu": 362, "visibl": [362, 439], "acceptedkei": 362, "global_valu": 362, "penultim": 362, "local_value_network": 362, "mixer_network": 362, "value_modul": [362, 427, 444], "qnet": [362, 425], "next_val_kei": 363, "pred_next_v": 363, "mse": 363, "q_valu": 363, "n_steps_to_next": 363, "value_next_st": 363, "1506": [364, 369, 377], "02438": [364, 369, 377], "exponenti": [364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 400], "average_ga": [364, 427], "skip_exist": [364, 365, 366, 367], "get_default_devic": [364, 365, 366, 367, 368], "gradient_mod": 364, "value_error": [364, 365, 366, 367, 368], "target_param": [364, 365, 366, 367, 368, 425, 439], "98": [364, 365, 366, 367], "94": [364, 367], "unpack": [364, 365, 366, 367], "tensor_kei": [364, 365, 366, 367, 368], "next_valu": [364, 365, 366, 367, 368], "aka": [365, 426, 438], "average_reward": [365, 366, 367], "tdestim": [365, 366, 368], "infti": 366, "valuefunctionbas": 368, "old_stat": [369, 371, 373, 375, 377, 378, 380], "new_stat": [369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381], "rolling_gamma": [373, 374, 375, 376, 378, 379, 380, 381], "g1": [373, 374, 375, 376, 378, 379, 380, 381], "g2": [373, 374, 375, 376, 378, 379, 380, 381], "g3": [373, 374, 375, 376, 378, 379, 380, 381], "g4": [373, 374, 375, 376, 378, 379, 380, 381], "v3": [373, 374, 375, 376, 378, 379, 380, 381], "preproc": [382, 429, 438], "as_non_tensor": [382, 438], "render_method": 382, "pass_tensordict": 382, "syntact": 382, "sugar": 382, "out_file_bas": 383, "skip_reset": 383, "center_crop": 384, "make_grid": 384, "fp": [384, 389, 391], "log_video": 384, "csv": [384, 386, 388, 426, 434, 435], "wandb": [384, 388, 391, 434, 444], "tensorboard": [384, 388, 390, 434, 444], "log_dir": [384, 385, 386, 388, 390, 391, 426, 435], "cheetah_video": 384, "run_video": 384, "openxexperiencereplai": 384, "sec": [384, 440], "video_fp": [384, 386, 389], "cmu_stretch": 384, "run_video_0": 384, "pt": [386, 422], "cur_dir": 386, "csv_log": 386, "add_video": 386, "video_": 386, "experiment_nam": [387, 388], "uuid": [387, 426, 445], "logger_typ": 388, "logger_nam": 388, "mlflow": [388, 389], "wandb_kwarg": 388, "mlflow_kwarg": 388, "tracking_uri": 389, "uri": 389, "datastor": 389, "tb_log": 390, "tensoarboard": 390, "td_log": 390, "save_dir": 391, "resum": 391, "uncategor": 391, "my_funct": 392, "sub_traj_len": 393, "min_sub_traj_len": 393, "register_op": [393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 422, 426], "process_optim_batch": [393, 399, 400, 422], "td_out": [393, 401], "_process_optim_batch_hook": [393, 422], "batch_subsampl": 393, "clear_cuda": 394, "pre_optim_step": [394, 422], "log_pbar": [395, 396, 397, 400, 422, 426], "count_fram": 395, "pre_steps_log": [395, 396, 422], "count_frames_log": 395, "lognam": 396, "r_train": 396, "log_reward": [396, 426], "record_interv": [397, 425, 426], "record_fram": [397, 405, 425, 426], "policy_explor": [397, 412, 425, 426, 429, 431, 435], "log_kei": [397, 426], "underestim": 397, "r_evalu": [397, 425], "loss_compon": 398, "appl": 398, "optimizer_hook": 398, "flatten_tensordict": [399, 426], "max_dim": 399, "rb_trainer": 399, "batch_process": [399, 400, 401, 422], "post_loss": [399, 422], "999": [400, 426], "jitter": 400, "finfo": 400, "default_dtyp": 400, "reward_norm": 400, "update_reward_stat": 400, "normalize_reward": 400, "make_train": [401, 418], "_process_batch_hook": [401, 422], "select_kei": [401, 422], "versatil": [402, 430], "optim_steps_per_batch": [402, 422, 426], "clip_grad_norm": 402, "clip_norm": 402, "progress_bar": 402, "save_trainer_interv": 402, "log_interv": [402, 426], "save_trainer_fil": [402, 422], "load_from_fil": [402, 422], "update_weights_interv": [404, 426], "post_step": [404, 422, 426], "cfg": [405, 406, 407, 408, 409, 410, 411, 412, 413, 416], "dictconfig": [405, 406, 407, 408, 410, 411, 412, 413, 416], "unknowingli": 405, "annealing_fram": [405, 425], "init_env_step": [405, 406, 425], "proof_environ": [406, 425], "sta": 406, "ot": 406, "actor_model_explor": [407, 408, 425], "make_env_kwarg": [407, 408], "targetnetupdat": [409, 411, 412], "replayargsconfig": 410, "target_net_updat": [412, 425, 426], "constitu": 412, "egreedywrapp": 412, "env_proof": 412, "obs_spec": 412, "net_valu": 412, "dir": [412, 422, 426], "gettempdir": 412, "argpars": [413, 416], "namespac": [413, 416], "parser": [413, 416], "transformed_env_constructor": [413, 418], "num_env_per_collector": [414, 415], "video_tag": 416, "norm_obs_onli": 416, "use_env_cr": 416, "custom_env_mak": 416, "custom_env": 416, "return_transformed_env": 416, "action_dim_gsd": 416, "state_dim_gsd": 416, "obs_norm_state_dict": 416, "maker": [416, 426], "distributedsyncdatacollector": 418, "submitit_delayed_launch": 418, "remotetensordictreplaybuff": 418, "rational": 418, "footnot": 418, "binarydiscretetensorspec": 418, "boundedtensorspec": 418, "discretetensorspec": 418, "lazystackedcompositespec": 418, "lazystackedtensorspec": 418, "multidiscretetensorspec": 418, "multionehotdiscretetensorspec": 418, "nontensorspec": 418, "onehotdiscretetensorspec": 418, "unboundedcontinuoustensorspec": 418, "unboundeddiscretetensorspec": 418, "prompttensordicttoken": 418, "rolloutfrommodel": 418, "tokenizeddatasetload": 418, "create_infinite_iter": 418, "constantklcontrol": 418, "adaptiveklcontrol": 418, "llmdata": 418, "llminput": 418, "llmoutput": 418, "densifyreward": 418, "h5combin": 418, "h5split": 418, "nested2t": 418, "check_no_exclusive_kei": 418, "consolidate_spec": 418, "contains_lazy_spec": 418, "envmetadata": 418, "chessenv": 418, "tictactoeenv": 418, "llmhashingenv": 418, "check_marl_group": 418, "get_available_librari": 418, "terminated_or_trunc": 418, "dreamerdecod": 418, "braxwrapp": 418, "dmcontrolwrapp": 418, "jumanjiwrapp": 418, "meltingpotenv": 418, "meltingpotwrapp": 418, "mogymenv": 418, "multithreadedenvwrapp": 418, "openmlenv": 418, "openspielwrapp": 418, "openspielenv": 418, "pettingzooenv": [418, 438], "robohiveenv": 418, "smacv2env": 418, "smacv2wrapp": 418, "unitymlagentsenv": 418, "unitymlagentswrapp": 418, "vmaswrapp": 418, "register_gym_spec_convers": 418, "qvaluehook": 418, "distributionalqvaluehook": 418, "reset_nois": 418, "cemplann": 418, "mpcplannerbas": 418, "mppiplann": 418, "independentnorm": 418, "truncatednorm": 418, "maskedonehotcategor": 418, "onehotordin": 418, "inv_softplu": 418, "vmapmodul": 418, "distributionaldqnloss": [418, 426], "discretesacloss": 418, "crossqloss": 418, "iqlloss": 418, "discreteiqlloss": 418, "cqlloss": 418, "discretecqlloss": 418, "gailloss": 418, "dtloss": 418, "onlinedtloss": 418, "td3bcloss": 418, "ppoloss": 418, "a2closs": 418, "reinforceloss": 418, "dreameractorloss": 418, "dreamermodelloss": 418, "dreamervalueloss": 418, "td0estim": [418, 425], "td1estim": [418, 425], "td0_return_estim": 418, "td0_advantage_estim": 418, "td1_return_estim": 418, "vec_td1_return_estim": 418, "td1_advantage_estim": 418, "vec_td1_advantage_estim": 418, "td_lambda_return_estim": 418, "vec_td_lambda_return_estim": 418, "td_lambda_advantage_estim": 418, "vec_td_lambda_advantage_estim": 418, "generalized_advantage_estim": 418, "vec_generalized_advantage_estim": 418, "hardupd": [418, 425, 432], "softupd": [418, 425, 426, 428, 429, 432, 435, 438], "distance_loss": [418, 425], "group_optim": 418, "hold_out_net": 418, "hold_out_param": [418, 425], "batchsubsampl": [418, 422], "clearcudacach": 418, "countframeslog": 418, "logscalar": [418, 422, 426], "optimizerhook": [418, 426], "logvalidationreward": [418, 422, 425, 426], "replaybuffertrain": [418, 422, 426], "rewardnorm": 418, "selectkei": [418, 422], "trainerhookbas": [418, 422, 426], "updateweight": [418, 422, 426], "make_collector_offpolici": 418, "make_collector_onpolici": 418, "make_dqn_loss": 418, "make_replay_buff": [418, 425], "make_target_updat": 418, "parallel_env_constructor": [418, 425], "sync_async_collector": 418, "sync_sync_collector": 418, "correct_for_frame_skip": 418, "get_stats_random_rollout": 418, "mlflowlogg": 418, "get_logg": 418, "generate_exp_nam": 418, "journei": 419, "textbook": 419, "highlight": [419, 438], "ever": [419, 439], "bump": 419, "benefit": [419, 430, 438, 439, 442], "pr": 419, "ground": [420, 425, 440], "recycl": [420, 442], "noisier": 420, "Their": [420, 438, 439], "sd": [420, 445], "prob_modul": 420, "uncertainti": 420, "soften": 420, "backbon": [420, 428, 431, 437, 444], "make_actor": 420, "make_valu": 420, "shared_param": 420, "make_common": 420, "reusabl": [421, 425, 442], "swappabl": [421, 425], "characterist": [421, 425, 440], "trainabl": [421, 425, 432, 441], "smth": [421, 425], "metric": [421, 425], "plenti": [421, 429], "amort": [421, 426, 427], "told": [421, 427], "pseudo": [421, 433, 440], "buri": 421, "str_valu": 421, "nutshel": [421, 425], "barto": [421, 438, 439], "chapter": [421, 434], "value_net_loss": 421, "pow": [421, 425], "room": 421, "signifi": [421, 438, 439], "underperform": 421, "thin": 421, "intric": [421, 431], "set_composite_lp_aggreg": [421, 439], "action_td": 421, "action0": 421, "f0": 421, "action1": 421, "f1": 421, "f2": 421, "legitim": [421, 445], "f3": 421, "action0_log_prob": 421, "action1_log_prob": 421, "inferior": 421, "multivari": 421, "dirichlet": 421, "contrari": 421, "prev_log_prob": 421, "new_log_prob": 421, "log_weight": 421, "appreci": [421, 430], "multihead": 421, "believ": 422, "scheme": [422, 445], "substanti": 422, "_pre_steps_log_hook": 422, "_pre_optim_hook": 422, "sub_batch": 422, "_post_loss_hook": 422, "_post_optim_hook": 422, "post_optim": [422, 426], "_post_optim_log": 422, "post_optim_log": 422, "_post_steps_hook": 422, "_post_steps_log_hook": 422, "post_steps_log": 422, "logginghook": 422, "logging_hook": 422, "save_dict": 422, "some_valu": 422, "torchsnapshot": 422, "ckpt_backend": 422, "filepath": 422, "save_train": 422, "000": [424, 443], "galleri": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "mem": [424, 443], "mb": [424, 443], "coding_ddpg": [424, 425, 443], "coding_dqn": [424, 426, 443], "coding_ppo": [424, 427, 443], "dqn_with_rnn": [424, 428, 443], "multi_task": [424, 437, 443], "multiagent_competitive_ddpg": [424, 438, 443], "multiagent_ppo": [424, 439, 443], "pretrained_model": [424, 441, 443], "rb_tutori": [424, 442, 443], "torchrl_demo": [424, 443, 444], "torchrl_env": [424, 443, 445], "author": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 445], "vincent": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 442, 445], "moen": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 442, 445], "assembl": 425, "maxim": [425, 432, 440], "transpar": [425, 428], "bash": 425, "is_fork": [425, 426, 427, 428, 438, 439, 441], "get_start_method": [425, 426, 427, 428, 438, 439, 441], "collector_devic": 425, "loss_dict": 425, "modal": 425, "oblivi": [425, 427, 442], "elementari": 425, "didact": [425, 429], "dilut": 425, "pessimist": [425, 426, 427], "target_actor_network_param": 425, "actor_in_kei": 425, "actor_crit": 425, "compromis": 425, "hp": 425, "_value_estim": 425, "elif": [425, 426], "unknown": 425, "_loss_actor": 425, "td_copi": 425, "actor_network_param": [425, 438], "value_network_param": [425, 438], "_loss_valu": 425, "pred_val": 425, "target_value_network_param": 425, "glue": 425, "_forward": 425, "remaind": 425, "env_librari": 425, "env_task": 425, "env_arg": [425, 426], "torchr": 425, "rescal": 425, "presum": 425, "make_transformed_env": 425, "reward_sc": 425, "marker": 425, "env_per_collector": 425, "transform_state_dict": 425, "make_t_env": 425, "cheat": 425, "10m": 425, "cautiou": 425, "magnitud": [425, 438], "thousand": [425, 428], "get_env_stat": 425, "proof_env": 425, "5000": [425, 429, 435], "recal": [425, 427, 442], "ddpgmlpactor": 425, "ddpgmlpqnet": 425, "materi": 425, "ornsteinuhlenbeckprocessmodul": [425, 431], "make_ddpg_actor": 425, "q_net": 425, "tight": 425, "decoupl": [425, 432, 444], "10_000": [425, 427], "traj_len": [425, 428], "make_record": 425, "recorder_obj": 425, "pick": [425, 426, 431], "buffer_s": [425, 426], "random_crop_len": 425, "prb": 425, "buffer_scratch_dir": [425, 426, 428, 433, 441], "25": 425, "dataflow": 425, "ceil_div": 425, "utd": [425, 428], "update_to_data": 425, "realiz": 425, "_must_": 425, "001": [425, 440], "outdat": 425, "trick": [425, 426], "despit": 425, "optimizer_actor": 425, "weight_decai": [425, 426], "optimizer_valu": 425, "total_collection_step": 425, "rewards_ev": 425, "collected_fram": 425, "pbar": [425, 427, 428, 438, 439, 440], "numel": [425, 427, 428, 429, 435, 438, 441, 442], "current_fram": [425, 438], "sampled_tensordict": 425, "gn1": 425, "clip_grad_norm_": [425, 427, 438, 439, 440], "gn2": 425, "gn": [425, 440], "td_record": 425, "rn": 425, "set_descript": [425, 427, 428, 438, 439, 440], "2f": 425, "mention": [425, 428, 442, 445], "matplotlib": [425, 427, 428, 429, 438, 439, 440, 442, 445], "pyplot": [425, 427, 428, 429, 438, 439, 440, 442, 445], "plt": [425, 427, 428, 429, 438, 439, 440, 442, 445], "zip": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "legend": [425, 438], "xlabel": [425, 428, 439, 440], "ylabel": [425, 439], "tight_layout": 425, "takeawai": [425, 426, 429], "distpatch": 425, "jupyt": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "ipynb": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445], "sphinx": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445], "road": 426, "aspect": [426, 432], "highest": [426, 431], "prerequisit": [426, 428], "lookup": 426, "cart": 426, "pole": 426, "un": 426, "actuat": 426, "frictionless": 426, "duelingcnndqnet": 426, "egreedymodul": [426, 428, 429, 431, 435], "is_notebook": 426, "shell": 426, "get_ipython": 426, "__class__": 426, "zmqinteractiveshel": 426, "qtconsol": 426, "terminalinteractiveshel": 426, "ipython": [426, 439, 440], "nameerror": [426, 438], "umbrella": 426, "misplac": 426, "misus": 426, "orchestr": [426, 432, 434], "five": 426, "64x64": 426, "motion": [426, 440], "obs_norm_sd": 426, "mp_context": 426, "simpler": [426, 430], "get_norm_stat": 426, "test_env": 426, "mathbb": 426, "rightarrow": 426, "make_model": 426, "dummy_env": 426, "init_bia": 426, "exploration_modul": [426, 428, 429, 431, 435], "eps_greedy_v": 426, "eps_greedy_val_env": 426, "actor_explor": 426, "get_replay_buff": 426, "n_optim": [426, 432, 433], "parametriz": 426, "get_collector": 426, "bunch": 426, "ubiquit": [426, 430], "get_loss_modul": 426, "target_updat": [426, 438], "995": 426, "hopefulli": 426, "variat": 426, "2e": [426, 440], "wd": 426, "upd": 426, "harder": [426, 444], "5_000": 426, "500000": 426, "100000": 426, "005": [426, 438], "mandatori": [426, 427, 439, 440], "fairer": 426, "budget": 426, "dqn_exp_": 426, "uuid1": [426, 445], "cumbersom": 426, "buffer_hook": 426, "weight_updat": 426, "aliv": 426, "total_reward": 426, "print_csv_files_in_fold": 426, "folder_path": 426, "csv_file": 426, "output_str": 426, "dirpath": 426, "endswith": 426, "strip": 426, "qvaluenetwork": 426, "accuraci": 426, "fanci": [426, 433], "demonstr": [427, 429, 433, 438, 439, 440, 442, 445], "talk": 427, "six": 427, "sophist": [427, 439], "invent": 427, "theta_k": 427, "pi_": 427, "exceed": 427, "discourag": [427, 440], "indispens": 427, "analyz": 427, "lingua": 427, "franca": 427, "defaultdict": [427, 440], "3e": [427, 428, 438, 439], "max_grad_norm": [427, 438, 439], "sub_batch_s": 427, "num_epoch": [427, 439], "entropy_ep": [427, 439], "charact": [427, 429], "inverteddoublependulum": 427, "transmit": 427, "stai": 427, "confid": [427, 438, 439], "ran": 427, "f_": 427, "mu_": 427, "difficulti": [427, 445], "d_ob": 427, "d_action": 427, "policy_modul": [427, 438, 439], "briefli": [427, 438, 439], "refil": [427, 439], "easiest": [427, 432, 438, 439], "mathemat": [427, 438, 439], "tradeoff": [427, 439], "advantage_modul": 427, "lr_schedul": [427, 440], "cosineannealinglr": [427, 440], "eval_str": 427, "tensordict_data": [427, 439], "data_view": [427, 439], "subdata": [427, 438, 439], "cum_reward_str": 427, "4f": [427, 428, 440], "stepcount_str": 427, "param_group": [427, 438], "lr_str": 427, "eval_rollout": 427, "nice": [427, 430, 433], "cap": [427, 442], "figsiz": [427, 440], "subplot": [427, 438, 440, 445], "titl": [427, 428, 429, 439, 440], "84x84": [428, 429], "accessori": 428, "stamp": 428, "assist": 428, "n_cell": 428, "customiz": 428, "wouldn": 428, "qval": 428, "stoch_polici": 428, "opportun": [428, 438], "uniniti": 428, "again": [428, 429, 430, 431, 433, 439, 441, 442, 445], "strongli": 428, "million": 428, "sake": [428, 441, 442], "20_000": [428, 440], "longest": 428, "npai": 428, "action_spread": 428, "rom": 429, "licens": 429, "strong": 429, "impress": 429, "arduino": 429, "raspberri": 429, "pi": [429, 438, 439, 440], "alon": 429, "examplifi": 429, "ship": 429, "stick": 429, "nearest": 429, "value_mlp": [429, 435], "100_000": [429, 435], "init_rand_step": [429, 435], "total_count": [429, 435], "total_episod": [429, 435], "t0": [429, 435], "screen": [429, 438], "color": [429, 438], "unblock": 429, "policy_transform": 429, "fake_td": 429, "exported_polici": 429, "div": 429, "graph_modul": 429, "print_read": 429, "group0": 429, "group0_agent0_ob": 429, "collid": [429, 439], "group0_agent0": 429, "agent0_ob": 429, "comma": 429, "digress": 429, "exported_stochastic_polici": 429, "trace": 429, "batchsizetransform": 429, "recurrent_polici": 429, "fake_ob": 429, "fake_hidden0": 429, "fake_hidden1": 429, "fake_is_init": 429, "exported_recurrent_polici": 429, "platform": [429, 444], "aoti": 429, "_inductor": 429, "aoti_compile_and_packag": 429, "aoti_load_packag": 429, "pt2": 429, "pkg_path": 429, "package_path": 429, "compiled_modul": 429, "onnxruntim": 429, "showcas": [429, 440], "web": 429, "explain": [429, 441], "tensorrt": 429, "android": 429, "ale_pi": 429, "aleinterfac": 429, "loadrom": 429, "reset_gam": 429, "screen_ob": 429, "getscreenrgb": 429, "tick_param": 429, "bottom": 429, "labelleft": 429, "labelbottom": 429, "imshow": [429, 445], "dynamo_export": 429, "onnx_policy_export": 429, "onnx_file_path": 429, "ort_sess": 429, "inferencesess": 429, "cpuexecutionprovid": 429, "onnxruntime_input": 429, "get_input": 429, "onnx_polici": 429, "lightweight": [429, 434], "onnxruntime_output": 429, "topic": [430, 431, 432], "straight": 430, "backtrack": 430, "reset_with_act": 430, "stepped_data": 430, "spatial": 430, "useless": 430, "policyless": 430, "examin": [430, 438], "tackl": 431, "delv": 431, "extractor": 431, "additivegaussianmodul": [431, 438], "exploration_polici": [431, 438], "greedili": 431, "2d": [431, 438, 439], "innov": [431, 432], "rollout_explor": 431, "sole": 432, "supervis": [432, 433, 442, 445], "n_collect": 432, "get_next_batch": 432, "concis": 432, "ddpg_loss": 432, "total_loss": 432, "prove": 432, "reliev": 432, "concern": 432, "accustom": 433, "surprisingli": 433, "fundament": 433, "art": [433, 438, 439], "countless": 433, "yourself": [433, 438, 439], "everywher": 434, "log_scalar": 434, "my_scalar": 434, "saw": [434, 440, 442], "excess": 434, "lesson": 435, "voluntarili": 435, "torchrl_logg": 435, "training_loop": 435, "video_record": 435, "arbitrarili": 435, "t1": 435, "conclud": [435, 441], "tutorials_python": 436, "tutorials_jupyt": 436, "env1_obs_kei": 437, "observation_stand": 437, "env2_obs_kei": 437, "observation_walk": 437, "tdreset1": 437, "tdreset2": 437, "lazy_stack": 437, "policy_common": 437, "policy_stand": 437, "policy_walk": 437, "But": 437, "env1_mak": 437, "env2_mak": 437, "_single_task": 437, "td_rollout": 437, "matteo": [438, 439], "bettini": [438, 439], "benchmarl": [438, 439], "simple_tag": 438, "maddpg": [438, 439], "multiagentparticleenviron": 438, "mpe": 438, "centralis": [438, 439], "tie": [438, 439], "iddpg": [438, 439], "richard": 438, "andrew": 438, "mit": 438, "press": 438, "2018": 438, "mathbf": [438, 439], "decentralis": [438, 439], "literatur": [438, 439], "overcom": [438, 439], "stationari": [438, 439], "concurr": [438, 439], "establish": 438, "gui": [438, 439], "is_sphinx": 438, "__sphinx_build__": 438, "n_iter": [438, 439, 440], "evad": 438, "iteration_when_stop_training_evad": 438, "memory_s": 438, "n_optimiser_step": 438, "train_batch_s": 438, "polyak_tau": 438, "chaser": 438, "red": 438, "circl": [438, 439], "green": 438, "touch": [438, 440], "penal": [438, 439], "obstacl": 438, "drag": [438, 439], "elast": [438, 439], "collis": [438, 439], "imped": 438, "n_chaser": 438, "n_evad": 438, "n_obstacl": 438, "use_vma": 438, "simple_tag_v3": 438, "num_good": 438, "num_adversari": 438, "num_obstacl": 438, "max_cycl": 438, "num_vmas_env": [438, 439], "num_good_ag": 438, "num_landmark": 438, "four": [438, 439, 440], "n_agents_in_that_group": 438, "stress": [438, 439], "paramount": [438, 439], "n_rollout_step": [438, 439], "evolut": [438, 439], "group_nam": 438, "n_agents_in_group": 438, "minor": 438, "agents_exploration_polici": 438, "utilis": [438, 439], "n_obs_per_ag": [438, 439], "n_actions_per_ag": [438, 439], "share_parameters_polici": [438, 439], "policy_net": [438, 439], "_agent": 438, "grant": [438, 439], "converg": [438, 439], "share_parameters_crit": [438, 439], "obs_act": 438, "cat_modul": 438, "critic_modul": 438, "fantast": [438, 439], "reset_td": 438, "interfer": 438, "subject": [438, 440], "flatten_kei": 438, "process_batch": 438, "group_shap": 438, "get_item_shap": [438, 439], "nested_done_kei": 438, "nested_terminated_kei": 438, "desc": [438, 439], "episode_reward_mean_": 438, "episode_reward_mean_map": 438, "train_group_map": 438, "group_batch": 438, "_group": 438, "loss_nam": 438, "episode_reward_mean": [438, 439], "fig": [438, 442], "set_ylabel": 438, "axvlin": 438, "orang": 438, "set_xlabel": 438, "video_logg": 438, "vmas_log": 438, "env_with_rend": 438, "vmas_rend": 438, "print_log_dir": 438, "profici": [438, 439], "lidar": 439, "sensor": 439, "mappo": 439, "ippo": 439, "analys": 439, "visualis": 439, "vmas_devic": 439, "6_000": 439, "minibatch_s": 439, "generalis": 439, "simd": 439, "warp": 439, "todai": 439, "surround": 439, "dot": [439, 440], "scenario_nam": 439, "critic_net": 439, "minibatch": 439, "episode_reward_mean_list": 439, "critic_network_param": 439, "target_critic_network_param": 439, "xvfb": 439, "pyvirtualdisplai": 439, "1400": 439, "900": 439, "pil": 439, "rendering_callback": 439, "fromarrai": 439, "gif": 439, "save_al": 439, "append_imag": 439, "freeli": 440, "broader": 440, "wider": 440, "acquaint": 440, "avenu": 440, "_apply_to_composit": 440, "default_x": 440, "default_i": 440, "upward": 440, "angular": 440, "sin": 440, "rad": 440, "angl": 440, "deleg": 440, "new_th": 440, "new_thdot": 440, "g_forc": 440, "angle_norm": 440, "albeit": 440, "high_th": 440, "high_thdot": 440, "low_th": 440, "low_thdot": 440, "trivial": 440, "irrelev": 440, "_make_spec": 440, "td_param": 440, "render_fp": 440, "random_": 440, "_make_step": 440, "staticmethod": 440, "skeleton": 440, "unitari": 440, "sine": 440, "cosin": 440, "sintransform": 440, "costransform": 440, "t_sin": 440, "t_co": 440, "cat_transform": 440, "simple_rollout": 440, "unexplor": 440, "init_td": 440, "traj_return": 440, "last_reward": 440, "is_ipython": 440, "inlin": 440, "get_backend": 440, "ion": 440, "gcf": 440, "clear_output": 440, "r3mtransform": 441, "embodi": 441, "env_transform": [441, 445], "wiser": 441, "batteri": 442, "gc": 442, "buffer_list": 442, "lowest": 442, "medium": 442, "buffer_lazytensor": 442, "tempdir": 442, "buffer_lazymemmap": 442, "fullest": 442, "mydata": 442, "buffer_lazi": 442, "background": 442, "question": [442, 444], "_i": 442, "artifici": 442, "hamper": 442, "she": 442, "pars": 442, "proport": 442, "reappear": 442, "unfold": 442, "problemat": 442, "4th": 442, "prioritizedslicesampl": 442, "tensordictmaxvaluewrit": 442, "demo": 444, "icml": 444, "vmoen": 444, "fb": 444, "invest": 444, "media": 444, "predominantli": 444, "data2": 444, "sub_key1": 444, "scturctur": 444, "data_stack": 444, "data_sampl": 444, "_sampler": 444, "_sum_tre": 444, "modulenotfounderror": 444, "noopresetenv": [444, 445], "backbone_modul": 444, "params_expand": 444, "exec_sequ": 444, "tensordict_exp": 444, "base_modul": 444, "tensordicts_prealloc": 444, "tensordicts_stack": 444, "tensordict_rollout": [444, 445], "automatical": 444, "60": 444, "particularili": 444, "concatmodul": 444, "loss_td": 444, "contributor": 444, "curiou": 444, "nascent": 444, "unsupervis": 445, "unifi": 445, "_build_env": 445, "deserv": 445, "__episode__": 445, "__trajectory__": 445, "void": 445, "reproduct": 445, "tensordict_tprim": 445, "wrapper1": 445, "wrapper2": 445, "obviou": 445, "truth": 445, "env_transformed_bi": 445, "stanc": 445, "transformeddistribut": 445, "base_dist": 445, "concat": 445, "mofidi": 445, "transformedenviron": 445, "moderet": 445, "computation": 445, "incom": 445, "amongst": 445, "has_cuda": 445, "convention": 445, "markovian": 445, "bar_": 445, "get_someth": 445, "aargh": 445, "is_clos": 445, "foo_list": 445, "121": 445, "evolv": 445, "steadi": 445, "approx": 445, "absor": 445, "_extra_st": 445}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [248, 0, 1, "", "implement_for"], [392, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "LocalWeightUpdaterBase"], [15, 0, 1, "", "MultiProcessedRemoteWeightUpdate"], [16, 0, 1, "", "MultiSyncDataCollector"], [17, 0, 1, "", "MultiaSyncDataCollector"], [18, 0, 1, "", "RayRemoteWeightUpdater"], [19, 0, 1, "", "RemoteWeightUpdaterBase"], [20, 0, 1, "", "SyncDataCollector"], [21, 0, 1, "", "VanillaLocalWeightUpdater"], [22, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.LocalWeightUpdaterBase": [[14, 1, 1, "", "register_collector"], [14, 1, 1, "", "update_weights"]], "torchrl.collectors.MultiProcessedRemoteWeightUpdate": [[15, 1, 1, "", "_get_server_weights"], [15, 1, 1, "", "_maybe_map_weights"], [15, 1, 1, "", "_sync_weights_with_worker"], [15, 1, 1, "", "all_worker_ids"], [15, 1, 1, "", "register_collector"]], "torchrl.collectors.MultiSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayRemoteWeightUpdater": [[18, 1, 1, "", "_get_server_weights"], [18, 1, 1, "", "_maybe_map_weights"], [18, 1, 1, "", "_skip_update"], [18, 1, 1, "", "_sync_weights_with_worker"], [18, 1, 1, "", "all_worker_ids"], [18, 1, 1, "", "register_collector"]], "torchrl.collectors.RemoteWeightUpdaterBase": [[19, 1, 1, "id0", "register_collector"], [19, 1, 1, "", "update_weights"]], "torchrl.collectors.SyncDataCollector": [[20, 1, 1, "", "iterator"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "rollout"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaLocalWeightUpdater": [[21, 1, 1, "", "_get_local_weights"], [21, 1, 1, "", "_get_server_weights"], [21, 1, 1, "", "_map_weights"], [21, 1, 1, "", "_maybe_map_weights"], [21, 1, 1, "", "_update_local_weights"], [21, 1, 1, "", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "reset"], [22, 1, 1, "", "set_seed"], [22, 1, 1, "", "shutdown"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[23, 0, 1, "", "DistributedDataCollector"], [24, 0, 1, "", "DistributedSyncDataCollector"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RayCollector"], [27, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[26, 1, 1, "", "add_collectors"], [26, 1, 1, "", "async_shutdown"], [26, 1, 1, "", "load_state_dict"], [26, 1, 1, "", "local_policy"], [26, 2, 1, "", "remote_collectors"], [26, 1, 1, "", "set_seed"], [26, 1, 1, "", "shutdown"], [26, 1, 1, "", "start"], [26, 1, 1, "", "state_dict"], [26, 1, 1, "", "stop_remote_collectors"], [26, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[28, 3, 1, "", "split_trajectories"]], "torchrl.data": [[29, 0, 1, "", "AdaptiveKLController"], [30, 0, 1, "", "Binary"], [31, 0, 1, "", "BinaryDiscreteTensorSpec"], [32, 0, 1, "", "BinaryToDecimal"], [33, 0, 1, "", "Bounded"], [34, 0, 1, "", "BoundedTensorSpec"], [35, 0, 1, "", "Categorical"], [36, 0, 1, "", "Composite"], [37, 0, 1, "", "CompositeSpec"], [38, 0, 1, "", "ConstantKLController"], [39, 0, 1, "", "DensifyReward"], [40, 0, 1, "", "DiscreteTensorSpec"], [41, 0, 1, "", "Flat2TED"], [42, 0, 1, "", "H5Combine"], [43, 0, 1, "", "H5Split"], [44, 0, 1, "", "HashToInt"], [45, 0, 1, "", "LLMData"], [46, 0, 1, "", "LLMInput"], [47, 0, 1, "", "LLMOutput"], [48, 0, 1, "", "LazyStackedCompositeSpec"], [49, 0, 1, "", "LazyStackedTensorSpec"], [50, 0, 1, "", "MCTSForest"], [51, 0, 1, "", "MultiCategorical"], [52, 0, 1, "", "MultiDiscreteTensorSpec"], [53, 0, 1, "", "MultiOneHot"], [54, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [55, 0, 1, "", "MultiStep"], [56, 0, 1, "", "Nested2TED"], [57, 0, 1, "", "NonTensor"], [58, 0, 1, "", "NonTensorSpec"], [59, 0, 1, "", "OneHot"], [60, 0, 1, "", "OneHotDiscreteTensorSpec"], [61, 0, 1, "", "PairwiseDataset"], [62, 0, 1, "", "PrioritizedReplayBuffer"], [63, 0, 1, "", "PromptData"], [64, 0, 1, "", "PromptTensorDictTokenizer"], [65, 0, 1, "", "QueryModule"], [66, 0, 1, "", "RandomProjectionHash"], [67, 0, 1, "", "RayReplayBuffer"], [68, 0, 1, "", "RemoteTensorDictReplayBuffer"], [69, 0, 1, "", "ReplayBuffer"], [70, 0, 1, "", "RewardData"], [71, 0, 1, "", "RolloutFromModel"], [72, 0, 1, "", "SipHash"], [73, 0, 1, "", "Stacked"], [74, 0, 1, "", "StackedComposite"], [75, 0, 1, "", "TED2Flat"], [76, 0, 1, "", "TED2Nested"], [77, 0, 1, "", "TensorDictMap"], [78, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [79, 0, 1, "", "TensorDictReplayBuffer"], [80, 0, 1, "", "TensorDictTokenizer"], [81, 0, 1, "", "TensorMap"], [82, 0, 1, "", "TensorSpec"], [83, 0, 1, "", "TokenizedDatasetLoader"], [84, 0, 1, "", "Tree"], [85, 0, 1, "", "Unbounded"], [86, 0, 1, "", "UnboundedContinuous"], [87, 0, 1, "", "UnboundedContinuousTensorSpec"], [88, 0, 1, "", "UnboundedDiscrete"], [89, 0, 1, "", "UnboundedDiscreteTensorSpec"], [90, 0, 1, "", "check_no_exclusive_keys"], [91, 0, 1, "", "consolidate_spec"], [92, 0, 1, "", "contains_lazy_spec"], [93, 0, 1, "", "create_infinite_iterator"], [94, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[29, 1, 1, "", "update"]], "torchrl.data.Binary": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 2, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "set_provisional_n"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "to_one_hot"], [31, 1, 1, "", "to_one_hot_spec"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "update_mask"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "mtia"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_load_state_dict_pre_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_post_hook"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "set_submodule"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 2, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 2, 1, "", "device"], [36, 1, 1, "", "empty"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "get"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_empty"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "items"], [36, 1, 1, "", "keys"], [36, 1, 1, "", "lock_"], [36, 1, 1, "", "make_neg_dim"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "pop"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "separates"], [36, 1, 1, "", "set"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unlock_"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "values"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "pop"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "separates"], [37, 1, 1, "", "set"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "compile"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "is_tdmodule_compatible"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "mtia"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_full_backward_pre_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_load_state_dict_pre_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "register_state_dict_post_hook"], [39, 1, 1, "", "register_state_dict_pre_hook"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "", "reset_out_keys"], [39, 1, 1, "", "reset_parameters_recursive"], [39, 1, 1, "", "select_out_keys"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "", "set_submodule"], [39, 1, 1, "", "share_memory"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "set_provisional_n"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "compile"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "mtia"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_load_state_dict_pre_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "register_state_dict_post_hook"], [44, 1, 1, "", "register_state_dict_pre_hook"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_submodule"], [44, 1, 1, "", "share_memory"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.data.LLMData": [[45, 2, 1, "", "device"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "fields"], [45, 1, 1, "", "from_tensordict"], [45, 1, 1, "", "get"], [45, 1, 1, "", "load"], [45, 1, 1, "", "load_"], [45, 1, 1, "", "load_memmap"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "memmap"], [45, 1, 1, "", "memmap_"], [45, 1, 1, "", "memmap_like"], [45, 1, 1, "", "memmap_refresh_"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to_tensordict"], [45, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[46, 2, 1, "", "device"], [46, 1, 1, "", "dumps"], [46, 1, 1, "", "fields"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[47, 2, 1, "", "device"], [47, 1, 1, "", "dumps"], [47, 1, 1, "", "fields"], [47, 1, 1, "", "from_tensordict"], [47, 1, 1, "", "get"], [47, 1, 1, "", "load"], [47, 1, 1, "", "load_"], [47, 1, 1, "", "load_memmap"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "memmap"], [47, 1, 1, "", "memmap_"], [47, 1, 1, "", "memmap_like"], [47, 1, 1, "", "memmap_refresh_"], [47, 1, 1, "", "save"], [47, 1, 1, "", "set"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "to_tensordict"], [47, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 2, 1, "", "device"], [48, 1, 1, "", "empty"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "get"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_empty"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "items"], [48, 1, 1, "", "keys"], [48, 1, 1, "", "lock_"], [48, 1, 1, "", "make_neg_dim"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "pop"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "separates"], [48, 1, 1, "", "set"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unlock_"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "values"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[50, 2, 1, "", "action_keys"], [50, 2, 1, "", "done_keys"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "get_keys_from_env"], [50, 2, 1, "", "observation_keys"], [50, 2, 1, "", "reward_keys"], [50, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 4, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "set_provisional_n"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 2, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 4, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_categorical"], [59, 1, 1, "", "to_categorical_spec"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "to_one_hot"], [59, 1, 1, "", "to_one_hot_spec"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "update_mask"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[61, 2, 1, "", "device"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "fields"], [61, 1, 1, "", "from_dataset"], [61, 1, 1, "", "from_tensordict"], [61, 1, 1, "", "get"], [61, 1, 1, "", "load"], [61, 1, 1, "", "load_"], [61, 1, 1, "", "load_memmap"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "memmap"], [61, 1, 1, "", "memmap_"], [61, 1, 1, "", "memmap_like"], [61, 1, 1, "", "memmap_refresh_"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to_tensordict"], [61, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[63, 2, 1, "", "device"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "fields"], [63, 1, 1, "", "from_dataset"], [63, 1, 1, "", "from_tensordict"], [63, 1, 1, "", "get"], [63, 1, 1, "", "load"], [63, 1, 1, "", "load_"], [63, 1, 1, "", "load_memmap"], [63, 1, 1, "", "load_state_dict"], [63, 1, 1, "", "memmap"], [63, 1, 1, "", "memmap_"], [63, 1, 1, "", "memmap_like"], [63, 1, 1, "", "memmap_refresh_"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set"], [63, 1, 1, "", "state_dict"], [63, 1, 1, "", "to_tensordict"], [63, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[65, 1, 1, "", "add_module"], [65, 1, 1, "", "apply"], [65, 1, 1, "", "bfloat16"], [65, 1, 1, "", "buffers"], [65, 1, 1, "", "children"], [65, 1, 1, "", "compile"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 1, 1, "", "double"], [65, 1, 1, "", "eval"], [65, 1, 1, "", "extra_repr"], [65, 1, 1, "", "float"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_buffer"], [65, 1, 1, "", "get_extra_state"], [65, 1, 1, "", "get_parameter"], [65, 1, 1, "", "get_submodule"], [65, 1, 1, "", "half"], [65, 1, 1, "", "ipu"], [65, 1, 1, "", "is_tdmodule_compatible"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "modules"], [65, 1, 1, "", "mtia"], [65, 1, 1, "", "named_buffers"], [65, 1, 1, "", "named_children"], [65, 1, 1, "", "named_modules"], [65, 1, 1, "", "named_parameters"], [65, 1, 1, "", "parameters"], [65, 1, 1, "", "register_backward_hook"], [65, 1, 1, "", "register_buffer"], [65, 1, 1, "", "register_forward_hook"], [65, 1, 1, "", "register_forward_pre_hook"], [65, 1, 1, "", "register_full_backward_hook"], [65, 1, 1, "", "register_full_backward_pre_hook"], [65, 1, 1, "", "register_load_state_dict_post_hook"], [65, 1, 1, "", "register_load_state_dict_pre_hook"], [65, 1, 1, "", "register_module"], [65, 1, 1, "", "register_parameter"], [65, 1, 1, "", "register_state_dict_post_hook"], [65, 1, 1, "", "register_state_dict_pre_hook"], [65, 1, 1, "", "requires_grad_"], [65, 1, 1, "", "reset_out_keys"], [65, 1, 1, "", "reset_parameters_recursive"], [65, 1, 1, "", "select_out_keys"], [65, 1, 1, "", "set_extra_state"], [65, 1, 1, "", "set_submodule"], [65, 1, 1, "", "share_memory"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_empty"], [65, 1, 1, "", "train"], [65, 1, 1, "", "type"], [65, 1, 1, "", "xpu"], [65, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "as_remote"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 2, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 2, 1, "", "storage"], [67, 2, 1, "", "write_count"], [67, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[70, 2, 1, "", "device"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "fields"], [70, 1, 1, "", "from_tensordict"], [70, 1, 1, "", "get"], [70, 1, 1, "", "load"], [70, 1, 1, "", "load_"], [70, 1, 1, "", "load_memmap"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "memmap"], [70, 1, 1, "", "memmap_"], [70, 1, 1, "", "memmap_like"], [70, 1, 1, "", "memmap_refresh_"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "to_tensordict"], [70, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[71, 1, 1, "", "create_rollout_td"], [71, 1, 1, "", "generate"], [71, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "cardinality"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 2, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "enumerate"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 2, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "get"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_empty"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "items"], [74, 1, 1, "", "keys"], [74, 1, 1, "", "lock_"], [74, 1, 1, "", "make_neg_dim"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "pop"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "separates"], [74, 1, 1, "", "set"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unlock_"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "values"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[77, 1, 1, "", "add_module"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "bfloat16"], [77, 1, 1, "", "buffers"], [77, 1, 1, "", "children"], [77, 1, 1, "", "compile"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 1, 1, "", "double"], [77, 1, 1, "", "eval"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "float"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "from_tensordict_pair"], [77, 1, 1, "", "get_buffer"], [77, 1, 1, "", "get_extra_state"], [77, 1, 1, "", "get_parameter"], [77, 1, 1, "", "get_submodule"], [77, 1, 1, "", "half"], [77, 1, 1, "", "ipu"], [77, 1, 1, "", "is_tdmodule_compatible"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "modules"], [77, 1, 1, "", "mtia"], [77, 1, 1, "", "named_buffers"], [77, 1, 1, "", "named_children"], [77, 1, 1, "", "named_modules"], [77, 1, 1, "", "named_parameters"], [77, 1, 1, "", "parameters"], [77, 1, 1, "", "register_backward_hook"], [77, 1, 1, "", "register_buffer"], [77, 1, 1, "", "register_forward_hook"], [77, 1, 1, "", "register_forward_pre_hook"], [77, 1, 1, "", "register_full_backward_hook"], [77, 1, 1, "", "register_full_backward_pre_hook"], [77, 1, 1, "", "register_load_state_dict_post_hook"], [77, 1, 1, "", "register_load_state_dict_pre_hook"], [77, 1, 1, "", "register_module"], [77, 1, 1, "", "register_parameter"], [77, 1, 1, "", "register_state_dict_post_hook"], [77, 1, 1, "", "register_state_dict_pre_hook"], [77, 1, 1, "", "requires_grad_"], [77, 1, 1, "", "reset_out_keys"], [77, 1, 1, "", "reset_parameters_recursive"], [77, 1, 1, "", "select_out_keys"], [77, 1, 1, "", "set_extra_state"], [77, 1, 1, "", "set_submodule"], [77, 1, 1, "", "share_memory"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_empty"], [77, 1, 1, "", "train"], [77, 1, 1, "", "type"], [77, 1, 1, "", "xpu"], [77, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 1, 1, "", "as_remote"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 2, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 2, 1, "", "storage"], [78, 2, 1, "", "write_count"], [78, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[83, 1, 1, "", "dataset_to_tensordict"], [83, 1, 1, "", "load"]], "torchrl.data.Tree": [[84, 2, 1, "", "branching_action"], [84, 2, 1, "", "device"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "edges"], [84, 1, 1, "", "fields"], [84, 1, 1, "", "from_tensordict"], [84, 2, 1, "", "full_action_spec"], [84, 2, 1, "", "full_done_spec"], [84, 2, 1, "", "full_observation_spec"], [84, 2, 1, "", "full_reward_spec"], [84, 2, 1, "", "full_state_spec"], [84, 1, 1, "", "fully_expanded"], [84, 1, 1, "", "get"], [84, 1, 1, "", "get_vertex_by_hash"], [84, 1, 1, "", "get_vertex_by_id"], [84, 2, 1, "", "is_terminal"], [84, 1, 1, "", "load"], [84, 1, 1, "", "load_"], [84, 1, 1, "", "load_memmap"], [84, 1, 1, "", "load_state_dict"], [84, 1, 1, "", "make_node"], [84, 1, 1, "", "max_length"], [84, 1, 1, "", "memmap"], [84, 1, 1, "", "memmap_"], [84, 1, 1, "", "memmap_like"], [84, 1, 1, "", "memmap_refresh_"], [84, 2, 1, "", "node_observation"], [84, 2, 1, "", "node_observations"], [84, 2, 1, "", "num_children"], [84, 1, 1, "", "num_vertices"], [84, 2, 1, "", "parent"], [84, 1, 1, "", "plot"], [84, 2, 1, "", "prev_action"], [84, 1, 1, "", "rollout_from_path"], [84, 1, 1, "", "save"], [84, 2, 1, "", "selected_actions"], [84, 1, 1, "", "set"], [84, 1, 1, "", "state_dict"], [84, 1, 1, "", "to_string"], [84, 1, 1, "", "to_tensordict"], [84, 1, 1, "", "unbind"], [84, 1, 1, "", "valid_paths"], [84, 1, 1, "", "vertices"], [84, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[95, 0, 1, "", "FlatStorageCheckpointer"], [96, 0, 1, "", "H5StorageCheckpointer"], [97, 0, 1, "", "ImmutableDatasetWriter"], [98, 0, 1, "", "LazyMemmapStorage"], [99, 0, 1, "", "LazyStackStorage"], [100, 0, 1, "", "LazyTensorStorage"], [101, 0, 1, "", "ListStorage"], [102, 0, 1, "", "ListStorageCheckpointer"], [103, 0, 1, "", "NestedStorageCheckpointer"], [104, 0, 1, "", "PrioritizedSampler"], [105, 0, 1, "", "PrioritizedSliceSampler"], [106, 0, 1, "", "RandomSampler"], [107, 0, 1, "", "ReplayBufferEnsemble"], [108, 0, 1, "", "RoundRobinWriter"], [109, 0, 1, "", "Sampler"], [110, 0, 1, "", "SamplerEnsemble"], [111, 0, 1, "", "SamplerWithoutReplacement"], [112, 0, 1, "", "SliceSampler"], [113, 0, 1, "", "SliceSamplerWithoutReplacement"], [114, 0, 1, "", "Storage"], [115, 0, 1, "", "StorageCheckpointerBase"], [116, 0, 1, "", "StorageEnsemble"], [117, 0, 1, "", "StorageEnsembleCheckpointer"], [118, 0, 1, "", "TensorDictMaxValueWriter"], [119, 0, 1, "", "TensorDictRoundRobinWriter"], [120, 0, 1, "", "TensorStorage"], [121, 0, 1, "", "TensorStorageCheckpointer"], [122, 0, 1, "", "Writer"], [123, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[99, 1, 1, "", "attach"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "load"], [99, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[100, 1, 1, "", "attach"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "load"], [100, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[104, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[105, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[107, 1, 1, "", "add"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "as_remote"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "dumps"], [107, 1, 1, "", "empty"], [107, 1, 1, "", "extend"], [107, 1, 1, "", "insert_transform"], [107, 1, 1, "", "load"], [107, 1, 1, "", "loads"], [107, 1, 1, "", "register_load_hook"], [107, 1, 1, "", "register_save_hook"], [107, 1, 1, "", "sample"], [107, 2, 1, "", "sampler"], [107, 1, 1, "", "save"], [107, 1, 1, "", "set_sampler"], [107, 1, 1, "", "set_storage"], [107, 1, 1, "", "set_writer"], [107, 2, 1, "", "storage"], [107, 2, 1, "", "write_count"], [107, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[108, 1, 1, "", "add"], [108, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[116, 1, 1, "", "attach"], [116, 1, 1, "", "dump"], [116, 1, 1, "", "load"], [116, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"], [118, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[120, 1, 1, "", "attach"], [120, 1, 1, "", "dump"], [120, 1, 1, "", "load"], [120, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[122, 1, 1, "", "add"], [122, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[123, 1, 1, "", "add"], [123, 1, 1, "", "extend"]], "torchrl.envs": [[124, 3, 1, "", "BraxEnv"], [125, 3, 1, "", "BraxWrapper"], [126, 0, 1, "", "ChessEnv"], [127, 3, 1, "", "DMControlEnv"], [128, 3, 1, "", "DMControlWrapper"], [129, 0, 1, "", "EnvBase"], [130, 0, 1, "", "EnvCreator"], [131, 0, 1, "", "EnvMetaData"], [132, 3, 1, "", "GymEnv"], [133, 0, 1, "", "GymLikeEnv"], [134, 3, 1, "", "GymWrapper"], [135, 3, 1, "", "HabitatEnv"], [136, 3, 1, "", "IsaacGymEnv"], [137, 3, 1, "", "IsaacGymWrapper"], [138, 3, 1, "", "JumanjiEnv"], [139, 3, 1, "", "JumanjiWrapper"], [140, 0, 1, "", "LLMEnv"], [141, 0, 1, "", "LLMHashingEnv"], [142, 3, 1, "", "MOGymEnv"], [143, 3, 1, "", "MOGymWrapper"], [144, 3, 1, "", "MarlGroupMapType"], [145, 3, 1, "", "MeltingpotEnv"], [146, 3, 1, "", "MeltingpotWrapper"], [147, 3, 1, "", "ModelBasedEnvBase"], [148, 3, 1, "", "MultiThreadedEnv"], [149, 3, 1, "", "MultiThreadedEnvWrapper"], [150, 3, 1, "", "OpenMLEnv"], [151, 3, 1, "", "OpenSpielEnv"], [152, 3, 1, "", "OpenSpielWrapper"], [153, 0, 1, "", "ParallelEnv"], [154, 0, 1, "", "PendulumEnv"], [155, 3, 1, "", "PettingZooEnv"], [156, 3, 1, "", "PettingZooWrapper"], [157, 3, 1, "", "RandomPolicy"], [158, 3, 1, "", "RoboHiveEnv"], [159, 3, 1, "", "SMACv2Env"], [160, 3, 1, "", "SMACv2Wrapper"], [161, 0, 1, "", "SerialEnv"], [162, 0, 1, "", "TicTacToeEnv"], [163, 3, 1, "", "UnityMLAgentsEnv"], [164, 3, 1, "", "UnityMLAgentsWrapper"], [165, 3, 1, "", "VmasEnv"], [166, 3, 1, "", "VmasWrapper"], [167, 3, 1, "", "check_env_specs"], [168, 3, 1, "", "check_marl_grouping"], [169, 3, 1, "", "exploration_type"], [170, 3, 1, "", "get_available_libraries"], [171, 3, 1, "", "gym_backend"], [172, 3, 1, "", "make_composite_from_td"], [147, 1, 1, "", "rand_step"], [175, 3, 1, "", "register_gym_spec_conversion"], [147, 1, 1, "", "reset"], [147, 1, 1, "", "rollout"], [176, 3, 1, "", "set_exploration_type"], [177, 3, 1, "", "set_gym_backend"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "step"], [178, 3, 1, "", "step_mdp"], [179, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.ChessEnv": [[126, 2, 1, "", "action_key"], [126, 2, 1, "", "action_keys"], [126, 2, 1, "", "action_spec"], [126, 2, 1, "", "action_spec_unbatched"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "all_actions"], [126, 1, 1, "", "any_done"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_specs_"], [126, 2, 1, "", "batch_dims"], [126, 2, 1, "", "batch_locked"], [126, 2, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "cardinality"], [126, 1, 1, "", "check_env_specs"], [126, 1, 1, "", "children"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 2, 1, "", "done_key"], [126, 2, 1, "", "done_keys"], [126, 2, 1, "", "done_keys_groups"], [126, 2, 1, "", "done_spec"], [126, 2, 1, "", "done_spec_unbatched"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 2, 1, "", "full_action_spec"], [126, 2, 1, "", "full_action_spec_unbatched"], [126, 2, 1, "", "full_done_spec"], [126, 2, 1, "", "full_done_spec_unbatched"], [126, 2, 1, "", "full_observation_spec_unbatched"], [126, 2, 1, "", "full_reward_spec"], [126, 2, 1, "", "full_reward_spec_unbatched"], [126, 2, 1, "", "full_state_spec"], [126, 2, 1, "", "full_state_spec_unbatched"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_legal_moves"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 2, 1, "", "input_spec"], [126, 2, 1, "", "input_spec_unbatched"], [126, 1, 1, "", "ipu"], [126, 2, 1, "", "is_spec_locked"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 2, 1, "", "observation_keys"], [126, 2, 1, "", "observation_spec"], [126, 2, 1, "", "observation_spec_unbatched"], [126, 2, 1, "", "output_spec"], [126, 2, 1, "", "output_spec_unbatched"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "", "rand_step"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "", "reset"], [126, 2, 1, "", "reset_keys"], [126, 2, 1, "", "reward_key"], [126, 2, 1, "", "reward_keys"], [126, 2, 1, "", "reward_spec"], [126, 2, 1, "", "reward_spec_unbatched"], [126, 1, 1, "", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "set_spec_lock_"], [126, 1, 1, "", "set_submodule"], [126, 2, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 2, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 2, 1, "", "state_keys"], [126, 2, 1, "", "state_spec"], [126, 2, 1, "", "state_spec_unbatched"], [126, 1, 1, "", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "step_mdp"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[129, 2, 1, "", "action_key"], [129, 2, 1, "", "action_keys"], [129, 2, 1, "", "action_spec"], [129, 2, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "all_actions"], [129, 1, 1, "", "any_done"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_specs_"], [129, 2, 1, "", "batch_dims"], [129, 2, 1, "", "batch_locked"], [129, 2, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 2, 1, "", "done_key"], [129, 2, 1, "", "done_keys"], [129, 2, 1, "", "done_keys_groups"], [129, 2, 1, "", "done_spec"], [129, 2, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 2, 1, "", "full_action_spec"], [129, 2, 1, "", "full_action_spec_unbatched"], [129, 2, 1, "", "full_done_spec"], [129, 2, 1, "", "full_done_spec_unbatched"], [129, 2, 1, "", "full_observation_spec_unbatched"], [129, 2, 1, "", "full_reward_spec"], [129, 2, 1, "", "full_reward_spec_unbatched"], [129, 2, 1, "", "full_state_spec"], [129, 2, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 2, 1, "", "input_spec"], [129, 2, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 2, 1, "", "is_spec_locked"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 2, 1, "", "observation_keys"], [129, 2, 1, "", "observation_spec"], [129, 2, 1, "", "observation_spec_unbatched"], [129, 2, 1, "", "output_spec"], [129, 2, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "id0", "rand_step"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "id1", "reset"], [129, 2, 1, "", "reset_keys"], [129, 2, 1, "", "reward_key"], [129, 2, 1, "", "reward_keys"], [129, 2, 1, "", "reward_spec"], [129, 2, 1, "", "reward_spec_unbatched"], [129, 1, 1, "id2", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "id3", "set_seed"], [129, 1, 1, "", "set_spec_lock_"], [129, 1, 1, "", "set_submodule"], [129, 2, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 2, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 2, 1, "", "state_keys"], [129, 2, 1, "", "state_spec"], [129, 2, 1, "", "state_spec_unbatched"], [129, 1, 1, "id4", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[130, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[133, 2, 1, "", "action_key"], [133, 2, 1, "", "action_keys"], [133, 2, 1, "", "action_spec"], [133, 2, 1, "", "action_spec_unbatched"], [133, 1, 1, "", "add_module"], [133, 1, 1, "", "add_truncated_keys"], [133, 1, 1, "", "all_actions"], [133, 1, 1, "", "any_done"], [133, 1, 1, "", "append_transform"], [133, 1, 1, "", "apply"], [133, 1, 1, "", "auto_register_info_dict"], [133, 1, 1, "", "auto_specs_"], [133, 2, 1, "", "batch_dims"], [133, 2, 1, "", "batch_locked"], [133, 2, 1, "", "batch_size"], [133, 1, 1, "", "bfloat16"], [133, 1, 1, "", "buffers"], [133, 1, 1, "", "cardinality"], [133, 1, 1, "", "check_env_specs"], [133, 1, 1, "", "children"], [133, 1, 1, "", "close"], [133, 1, 1, "", "compile"], [133, 1, 1, "", "cpu"], [133, 1, 1, "", "cuda"], [133, 2, 1, "", "done_key"], [133, 2, 1, "", "done_keys"], [133, 2, 1, "", "done_keys_groups"], [133, 2, 1, "", "done_spec"], [133, 2, 1, "", "done_spec_unbatched"], [133, 1, 1, "", "double"], [133, 1, 1, "", "empty_cache"], [133, 1, 1, "", "eval"], [133, 1, 1, "", "extra_repr"], [133, 1, 1, "", "fake_tensordict"], [133, 1, 1, "", "float"], [133, 1, 1, "", "forward"], [133, 2, 1, "", "full_action_spec"], [133, 2, 1, "", "full_action_spec_unbatched"], [133, 2, 1, "", "full_done_spec"], [133, 2, 1, "", "full_done_spec_unbatched"], [133, 2, 1, "", "full_observation_spec_unbatched"], [133, 2, 1, "", "full_reward_spec"], [133, 2, 1, "", "full_reward_spec_unbatched"], [133, 2, 1, "", "full_state_spec"], [133, 2, 1, "", "full_state_spec_unbatched"], [133, 1, 1, "", "get_buffer"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "get_parameter"], [133, 1, 1, "", "get_submodule"], [133, 1, 1, "", "half"], [133, 2, 1, "", "input_spec"], [133, 2, 1, "", "input_spec_unbatched"], [133, 1, 1, "", "ipu"], [133, 2, 1, "", "is_spec_locked"], [133, 1, 1, "", "load_state_dict"], [133, 1, 1, "", "maybe_reset"], [133, 1, 1, "", "modules"], [133, 1, 1, "", "mtia"], [133, 1, 1, "", "named_buffers"], [133, 1, 1, "", "named_children"], [133, 1, 1, "", "named_modules"], [133, 1, 1, "", "named_parameters"], [133, 2, 1, "", "observation_keys"], [133, 2, 1, "", "observation_spec"], [133, 2, 1, "", "observation_spec_unbatched"], [133, 2, 1, "", "output_spec"], [133, 2, 1, "", "output_spec_unbatched"], [133, 1, 1, "", "parameters"], [133, 1, 1, "", "rand_action"], [133, 1, 1, "", "rand_step"], [133, 1, 1, "", "read_action"], [133, 1, 1, "", "read_done"], [133, 1, 1, "", "read_obs"], [133, 1, 1, "", "read_reward"], [133, 1, 1, "", "register_backward_hook"], [133, 1, 1, "", "register_buffer"], [133, 1, 1, "", "register_forward_hook"], [133, 1, 1, "", "register_forward_pre_hook"], [133, 1, 1, "", "register_full_backward_hook"], [133, 1, 1, "", "register_full_backward_pre_hook"], [133, 1, 1, "", "register_gym"], [133, 1, 1, "", "register_load_state_dict_post_hook"], [133, 1, 1, "", "register_load_state_dict_pre_hook"], [133, 1, 1, "", "register_module"], [133, 1, 1, "", "register_parameter"], [133, 1, 1, "", "register_state_dict_post_hook"], [133, 1, 1, "", "register_state_dict_pre_hook"], [133, 1, 1, "", "requires_grad_"], [133, 1, 1, "", "reset"], [133, 2, 1, "", "reset_keys"], [133, 2, 1, "", "reward_key"], [133, 2, 1, "", "reward_keys"], [133, 2, 1, "", "reward_spec"], [133, 2, 1, "", "reward_spec_unbatched"], [133, 1, 1, "", "rollout"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "", "set_info_dict_reader"], [133, 1, 1, "", "set_seed"], [133, 1, 1, "", "set_spec_lock_"], [133, 1, 1, "", "set_submodule"], [133, 2, 1, "", "shape"], [133, 1, 1, "", "share_memory"], [133, 2, 1, "", "specs"], [133, 1, 1, "", "state_dict"], [133, 2, 1, "", "state_keys"], [133, 2, 1, "", "state_spec"], [133, 2, 1, "", "state_spec_unbatched"], [133, 1, 1, "", "step"], [133, 1, 1, "", "step_and_maybe_reset"], [133, 1, 1, "", "step_mdp"], [133, 1, 1, "", "to"], [133, 1, 1, "", "to_empty"], [133, 1, 1, "", "train"], [133, 1, 1, "", "type"], [133, 1, 1, "", "xpu"], [133, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[140, 2, 1, "", "action_key"], [140, 2, 1, "", "action_keys"], [140, 2, 1, "", "action_spec"], [140, 2, 1, "", "action_spec_unbatched"], [140, 1, 1, "", "add_module"], [140, 1, 1, "", "add_truncated_keys"], [140, 1, 1, "", "all_actions"], [140, 1, 1, "", "any_done"], [140, 1, 1, "", "append_transform"], [140, 1, 1, "", "apply"], [140, 1, 1, "", "auto_specs_"], [140, 2, 1, "", "batch_dims"], [140, 2, 1, "", "batch_locked"], [140, 2, 1, "", "batch_size"], [140, 1, 1, "", "bfloat16"], [140, 1, 1, "", "buffers"], [140, 1, 1, "", "cardinality"], [140, 1, 1, "", "check_env_specs"], [140, 1, 1, "", "children"], [140, 1, 1, "", "compile"], [140, 1, 1, "", "cpu"], [140, 1, 1, "", "cuda"], [140, 2, 1, "", "done_key"], [140, 2, 1, "", "done_keys"], [140, 2, 1, "", "done_keys_groups"], [140, 2, 1, "", "done_spec"], [140, 2, 1, "", "done_spec_unbatched"], [140, 1, 1, "", "double"], [140, 1, 1, "", "empty_cache"], [140, 1, 1, "", "eval"], [140, 1, 1, "", "extra_repr"], [140, 1, 1, "", "fake_tensordict"], [140, 1, 1, "", "float"], [140, 1, 1, "", "forward"], [140, 1, 1, "id0", "from_dataloader"], [140, 2, 1, "", "full_action_spec"], [140, 2, 1, "", "full_action_spec_unbatched"], [140, 2, 1, "", "full_done_spec"], [140, 2, 1, "", "full_done_spec_unbatched"], [140, 2, 1, "", "full_observation_spec_unbatched"], [140, 2, 1, "", "full_reward_spec"], [140, 2, 1, "", "full_reward_spec_unbatched"], [140, 2, 1, "", "full_state_spec"], [140, 2, 1, "", "full_state_spec_unbatched"], [140, 1, 1, "", "get_buffer"], [140, 1, 1, "", "get_extra_state"], [140, 1, 1, "", "get_parameter"], [140, 1, 1, "", "get_submodule"], [140, 1, 1, "", "half"], [140, 2, 1, "", "input_spec"], [140, 2, 1, "", "input_spec_unbatched"], [140, 1, 1, "", "ipu"], [140, 2, 1, "", "is_spec_locked"], [140, 1, 1, "", "load_state_dict"], [140, 1, 1, "", "maybe_reset"], [140, 1, 1, "", "modules"], [140, 1, 1, "", "mtia"], [140, 1, 1, "", "named_buffers"], [140, 1, 1, "", "named_children"], [140, 1, 1, "", "named_modules"], [140, 1, 1, "", "named_parameters"], [140, 2, 1, "", "observation_keys"], [140, 2, 1, "", "observation_spec"], [140, 2, 1, "", "observation_spec_unbatched"], [140, 2, 1, "", "output_spec"], [140, 2, 1, "", "output_spec_unbatched"], [140, 1, 1, "", "parameters"], [140, 1, 1, "", "rand_action"], [140, 1, 1, "", "rand_step"], [140, 1, 1, "", "register_backward_hook"], [140, 1, 1, "", "register_buffer"], [140, 1, 1, "", "register_forward_hook"], [140, 1, 1, "", "register_forward_pre_hook"], [140, 1, 1, "", "register_full_backward_hook"], [140, 1, 1, "", "register_full_backward_pre_hook"], [140, 1, 1, "", "register_gym"], [140, 1, 1, "", "register_load_state_dict_post_hook"], [140, 1, 1, "", "register_load_state_dict_pre_hook"], [140, 1, 1, "", "register_module"], [140, 1, 1, "", "register_parameter"], [140, 1, 1, "", "register_state_dict_post_hook"], [140, 1, 1, "", "register_state_dict_pre_hook"], [140, 1, 1, "", "requires_grad_"], [140, 1, 1, "", "reset"], [140, 2, 1, "", "reset_keys"], [140, 2, 1, "", "reward_key"], [140, 2, 1, "", "reward_keys"], [140, 2, 1, "", "reward_spec"], [140, 2, 1, "", "reward_spec_unbatched"], [140, 1, 1, "", "rollout"], [140, 1, 1, "", "set_extra_state"], [140, 1, 1, "", "set_seed"], [140, 1, 1, "", "set_spec_lock_"], [140, 1, 1, "", "set_submodule"], [140, 2, 1, "", "shape"], [140, 1, 1, "", "share_memory"], [140, 2, 1, "", "specs"], [140, 1, 1, "", "state_dict"], [140, 2, 1, "", "state_keys"], [140, 2, 1, "", "state_spec"], [140, 2, 1, "", "state_spec_unbatched"], [140, 1, 1, "", "step"], [140, 1, 1, "", "step_and_maybe_reset"], [140, 1, 1, "", "step_mdp"], [140, 1, 1, "", "to"], [140, 1, 1, "", "to_empty"], [140, 1, 1, "", "train"], [140, 1, 1, "", "type"], [140, 1, 1, "", "xpu"], [140, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[141, 2, 1, "", "action_key"], [141, 2, 1, "", "action_keys"], [141, 2, 1, "", "action_spec"], [141, 2, 1, "", "action_spec_unbatched"], [141, 1, 1, "", "add_module"], [141, 1, 1, "", "add_truncated_keys"], [141, 1, 1, "", "all_actions"], [141, 1, 1, "", "any_done"], [141, 1, 1, "", "append_transform"], [141, 1, 1, "", "apply"], [141, 1, 1, "", "auto_specs_"], [141, 2, 1, "", "batch_dims"], [141, 2, 1, "", "batch_locked"], [141, 2, 1, "", "batch_size"], [141, 1, 1, "", "bfloat16"], [141, 1, 1, "", "buffers"], [141, 1, 1, "", "cardinality"], [141, 1, 1, "", "check_env_specs"], [141, 1, 1, "", "children"], [141, 1, 1, "", "compile"], [141, 1, 1, "", "cpu"], [141, 1, 1, "", "cuda"], [141, 2, 1, "", "done_key"], [141, 2, 1, "", "done_keys"], [141, 2, 1, "", "done_keys_groups"], [141, 2, 1, "", "done_spec"], [141, 2, 1, "", "done_spec_unbatched"], [141, 1, 1, "", "double"], [141, 1, 1, "", "empty_cache"], [141, 1, 1, "", "eval"], [141, 1, 1, "", "extra_repr"], [141, 1, 1, "", "fake_tensordict"], [141, 1, 1, "", "float"], [141, 1, 1, "", "forward"], [141, 2, 1, "", "full_action_spec"], [141, 2, 1, "", "full_action_spec_unbatched"], [141, 2, 1, "", "full_done_spec"], [141, 2, 1, "", "full_done_spec_unbatched"], [141, 2, 1, "", "full_observation_spec_unbatched"], [141, 2, 1, "", "full_reward_spec"], [141, 2, 1, "", "full_reward_spec_unbatched"], [141, 2, 1, "", "full_state_spec"], [141, 2, 1, "", "full_state_spec_unbatched"], [141, 1, 1, "", "get_buffer"], [141, 1, 1, "", "get_extra_state"], [141, 1, 1, "", "get_parameter"], [141, 1, 1, "", "get_submodule"], [141, 1, 1, "", "half"], [141, 2, 1, "", "input_spec"], [141, 2, 1, "", "input_spec_unbatched"], [141, 1, 1, "", "ipu"], [141, 2, 1, "", "is_spec_locked"], [141, 1, 1, "", "load_state_dict"], [141, 1, 1, "", "make_tensordict"], [141, 1, 1, "", "maybe_reset"], [141, 1, 1, "", "modules"], [141, 1, 1, "", "mtia"], [141, 1, 1, "", "named_buffers"], [141, 1, 1, "", "named_children"], [141, 1, 1, "", "named_modules"], [141, 1, 1, "", "named_parameters"], [141, 2, 1, "", "observation_keys"], [141, 2, 1, "", "observation_spec"], [141, 2, 1, "", "observation_spec_unbatched"], [141, 2, 1, "", "output_spec"], [141, 2, 1, "", "output_spec_unbatched"], [141, 1, 1, "", "parameters"], [141, 1, 1, "", "rand_action"], [141, 1, 1, "", "rand_step"], [141, 1, 1, "", "register_backward_hook"], [141, 1, 1, "", "register_buffer"], [141, 1, 1, "", "register_forward_hook"], [141, 1, 1, "", "register_forward_pre_hook"], [141, 1, 1, "", "register_full_backward_hook"], [141, 1, 1, "", "register_full_backward_pre_hook"], [141, 1, 1, "", "register_gym"], [141, 1, 1, "", "register_load_state_dict_post_hook"], [141, 1, 1, "", "register_load_state_dict_pre_hook"], [141, 1, 1, "", "register_module"], [141, 1, 1, "", "register_parameter"], [141, 1, 1, "", "register_state_dict_post_hook"], [141, 1, 1, "", "register_state_dict_pre_hook"], [141, 1, 1, "", "requires_grad_"], [141, 1, 1, "", "reset"], [141, 2, 1, "", "reset_keys"], [141, 2, 1, "", "reward_key"], [141, 2, 1, "", "reward_keys"], [141, 2, 1, "", "reward_spec"], [141, 2, 1, "", "reward_spec_unbatched"], [141, 1, 1, "", "rollout"], [141, 1, 1, "", "set_extra_state"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "set_spec_lock_"], [141, 1, 1, "", "set_submodule"], [141, 2, 1, "", "shape"], [141, 1, 1, "", "share_memory"], [141, 2, 1, "", "specs"], [141, 1, 1, "", "state_dict"], [141, 2, 1, "", "state_keys"], [141, 2, 1, "", "state_spec"], [141, 2, 1, "", "state_spec_unbatched"], [141, 1, 1, "", "step"], [141, 1, 1, "", "step_and_maybe_reset"], [141, 1, 1, "", "step_mdp"], [141, 1, 1, "", "to"], [141, 1, 1, "", "to_empty"], [141, 1, 1, "", "train"], [141, 1, 1, "", "type"], [141, 1, 1, "", "xpu"], [141, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[153, 2, 1, "", "action_key"], [153, 2, 1, "", "action_keys"], [153, 2, 1, "", "action_spec"], [153, 2, 1, "", "action_spec_unbatched"], [153, 1, 1, "", "add_module"], [153, 1, 1, "", "add_truncated_keys"], [153, 1, 1, "", "all_actions"], [153, 1, 1, "", "any_done"], [153, 1, 1, "", "append_transform"], [153, 1, 1, "", "apply"], [153, 1, 1, "", "auto_specs_"], [153, 2, 1, "", "batch_dims"], [153, 2, 1, "", "batch_locked"], [153, 2, 1, "", "batch_size"], [153, 1, 1, "", "bfloat16"], [153, 1, 1, "", "buffers"], [153, 1, 1, "", "cardinality"], [153, 1, 1, "", "check_env_specs"], [153, 1, 1, "", "children"], [153, 1, 1, "", "compile"], [153, 1, 1, "", "cpu"], [153, 1, 1, "", "cuda"], [153, 2, 1, "", "done_key"], [153, 2, 1, "", "done_keys"], [153, 2, 1, "", "done_keys_groups"], [153, 2, 1, "", "done_spec"], [153, 2, 1, "", "done_spec_unbatched"], [153, 1, 1, "", "double"], [153, 1, 1, "", "empty_cache"], [153, 1, 1, "", "eval"], [153, 1, 1, "", "extra_repr"], [153, 1, 1, "", "fake_tensordict"], [153, 1, 1, "", "float"], [153, 1, 1, "", "forward"], [153, 2, 1, "", "full_action_spec"], [153, 2, 1, "", "full_action_spec_unbatched"], [153, 2, 1, "", "full_done_spec"], [153, 2, 1, "", "full_done_spec_unbatched"], [153, 2, 1, "", "full_observation_spec_unbatched"], [153, 2, 1, "", "full_reward_spec"], [153, 2, 1, "", "full_reward_spec_unbatched"], [153, 2, 1, "", "full_state_spec"], [153, 2, 1, "", "full_state_spec_unbatched"], [153, 1, 1, "", "get_buffer"], [153, 1, 1, "", "get_extra_state"], [153, 1, 1, "", "get_parameter"], [153, 1, 1, "", "get_submodule"], [153, 1, 1, "", "half"], [153, 2, 1, "", "input_spec"], [153, 2, 1, "", "input_spec_unbatched"], [153, 1, 1, "", "ipu"], [153, 2, 1, "", "is_spec_locked"], [153, 1, 1, "", "load_state_dict"], [153, 1, 1, "", "maybe_reset"], [153, 1, 1, "", "modules"], [153, 1, 1, "", "mtia"], [153, 1, 1, "", "named_buffers"], [153, 1, 1, "", "named_children"], [153, 1, 1, "", "named_modules"], [153, 1, 1, "", "named_parameters"], [153, 2, 1, "", "observation_keys"], [153, 2, 1, "", "observation_spec"], [153, 2, 1, "", "observation_spec_unbatched"], [153, 2, 1, "", "output_spec"], [153, 2, 1, "", "output_spec_unbatched"], [153, 1, 1, "", "parameters"], [153, 1, 1, "", "rand_action"], [153, 1, 1, "", "rand_step"], [153, 1, 1, "", "register_backward_hook"], [153, 1, 1, "", "register_buffer"], [153, 1, 1, "", "register_forward_hook"], [153, 1, 1, "", "register_forward_pre_hook"], [153, 1, 1, "", "register_full_backward_hook"], [153, 1, 1, "", "register_full_backward_pre_hook"], [153, 1, 1, "", "register_gym"], [153, 1, 1, "", "register_load_state_dict_post_hook"], [153, 1, 1, "", "register_load_state_dict_pre_hook"], [153, 1, 1, "", "register_module"], [153, 1, 1, "", "register_parameter"], [153, 1, 1, "", "register_state_dict_post_hook"], [153, 1, 1, "", "register_state_dict_pre_hook"], [153, 1, 1, "", "requires_grad_"], [153, 1, 1, "", "reset"], [153, 2, 1, "", "reset_keys"], [153, 2, 1, "", "reward_key"], [153, 2, 1, "", "reward_keys"], [153, 2, 1, "", "reward_spec"], [153, 2, 1, "", "reward_spec_unbatched"], [153, 1, 1, "", "rollout"], [153, 1, 1, "", "set_extra_state"], [153, 1, 1, "", "set_seed"], [153, 1, 1, "", "set_spec_lock_"], [153, 1, 1, "", "set_submodule"], [153, 2, 1, "", "shape"], [153, 1, 1, "", "share_memory"], [153, 2, 1, "", "specs"], [153, 1, 1, "", "state_dict"], [153, 2, 1, "", "state_keys"], [153, 2, 1, "", "state_spec"], [153, 2, 1, "", "state_spec_unbatched"], [153, 1, 1, "", "step"], [153, 1, 1, "", "step_and_maybe_reset"], [153, 1, 1, "", "step_mdp"], [153, 1, 1, "", "to"], [153, 1, 1, "", "to_empty"], [153, 1, 1, "", "train"], [153, 1, 1, "", "type"], [153, 1, 1, "", "update_kwargs"], [153, 1, 1, "", "xpu"], [153, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[154, 2, 1, "", "action_key"], [154, 2, 1, "", "action_keys"], [154, 2, 1, "", "action_spec"], [154, 2, 1, "", "action_spec_unbatched"], [154, 1, 1, "", "add_module"], [154, 1, 1, "", "add_truncated_keys"], [154, 1, 1, "", "all_actions"], [154, 1, 1, "", "any_done"], [154, 1, 1, "", "append_transform"], [154, 1, 1, "", "apply"], [154, 1, 1, "", "auto_specs_"], [154, 2, 1, "", "batch_dims"], [154, 2, 1, "", "batch_size"], [154, 1, 1, "", "bfloat16"], [154, 1, 1, "", "buffers"], [154, 1, 1, "", "cardinality"], [154, 1, 1, "", "check_env_specs"], [154, 1, 1, "", "children"], [154, 1, 1, "", "compile"], [154, 1, 1, "", "cpu"], [154, 1, 1, "", "cuda"], [154, 2, 1, "", "done_key"], [154, 2, 1, "", "done_keys"], [154, 2, 1, "", "done_keys_groups"], [154, 2, 1, "", "done_spec"], [154, 2, 1, "", "done_spec_unbatched"], [154, 1, 1, "", "double"], [154, 1, 1, "", "empty_cache"], [154, 1, 1, "", "eval"], [154, 1, 1, "", "extra_repr"], [154, 1, 1, "", "fake_tensordict"], [154, 1, 1, "", "float"], [154, 1, 1, "", "forward"], [154, 2, 1, "", "full_action_spec"], [154, 2, 1, "", "full_action_spec_unbatched"], [154, 2, 1, "", "full_done_spec"], [154, 2, 1, "", "full_done_spec_unbatched"], [154, 2, 1, "", "full_observation_spec_unbatched"], [154, 2, 1, "", "full_reward_spec"], [154, 2, 1, "", "full_reward_spec_unbatched"], [154, 2, 1, "", "full_state_spec"], [154, 2, 1, "", "full_state_spec_unbatched"], [154, 1, 1, "", "gen_params"], [154, 1, 1, "", "get_buffer"], [154, 1, 1, "", "get_extra_state"], [154, 1, 1, "", "get_parameter"], [154, 1, 1, "", "get_submodule"], [154, 1, 1, "", "half"], [154, 2, 1, "", "input_spec"], [154, 2, 1, "", "input_spec_unbatched"], [154, 1, 1, "", "ipu"], [154, 2, 1, "", "is_spec_locked"], [154, 1, 1, "", "load_state_dict"], [154, 1, 1, "", "maybe_reset"], [154, 1, 1, "", "modules"], [154, 1, 1, "", "mtia"], [154, 1, 1, "", "named_buffers"], [154, 1, 1, "", "named_children"], [154, 1, 1, "", "named_modules"], [154, 1, 1, "", "named_parameters"], [154, 2, 1, "", "observation_keys"], [154, 2, 1, "", "observation_spec"], [154, 2, 1, "", "observation_spec_unbatched"], [154, 2, 1, "", "output_spec"], [154, 2, 1, "", "output_spec_unbatched"], [154, 1, 1, "", "parameters"], [154, 1, 1, "", "rand_action"], [154, 1, 1, "", "rand_step"], [154, 1, 1, "", "register_backward_hook"], [154, 1, 1, "", "register_buffer"], [154, 1, 1, "", "register_forward_hook"], [154, 1, 1, "", "register_forward_pre_hook"], [154, 1, 1, "", "register_full_backward_hook"], [154, 1, 1, "", "register_full_backward_pre_hook"], [154, 1, 1, "", "register_gym"], [154, 1, 1, "", "register_load_state_dict_post_hook"], [154, 1, 1, "", "register_load_state_dict_pre_hook"], [154, 1, 1, "", "register_module"], [154, 1, 1, "", "register_parameter"], [154, 1, 1, "", "register_state_dict_post_hook"], [154, 1, 1, "", "register_state_dict_pre_hook"], [154, 1, 1, "", "requires_grad_"], [154, 1, 1, "", "reset"], [154, 2, 1, "", "reset_keys"], [154, 2, 1, "", "reward_key"], [154, 2, 1, "", "reward_keys"], [154, 2, 1, "", "reward_spec"], [154, 2, 1, "", "reward_spec_unbatched"], [154, 1, 1, "", "rollout"], [154, 1, 1, "", "set_extra_state"], [154, 1, 1, "", "set_seed"], [154, 1, 1, "", "set_spec_lock_"], [154, 1, 1, "", "set_submodule"], [154, 2, 1, "", "shape"], [154, 1, 1, "", "share_memory"], [154, 2, 1, "", "specs"], [154, 1, 1, "", "state_dict"], [154, 2, 1, "", "state_keys"], [154, 2, 1, "", "state_spec"], [154, 2, 1, "", "state_spec_unbatched"], [154, 1, 1, "", "step"], [154, 1, 1, "", "step_and_maybe_reset"], [154, 1, 1, "", "step_mdp"], [154, 1, 1, "", "to"], [154, 1, 1, "", "to_empty"], [154, 1, 1, "", "train"], [154, 1, 1, "", "type"], [154, 1, 1, "", "xpu"], [154, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[161, 2, 1, "", "action_key"], [161, 2, 1, "", "action_keys"], [161, 2, 1, "", "action_spec"], [161, 2, 1, "", "action_spec_unbatched"], [161, 1, 1, "", "add_module"], [161, 1, 1, "", "add_truncated_keys"], [161, 1, 1, "", "all_actions"], [161, 1, 1, "", "any_done"], [161, 1, 1, "", "append_transform"], [161, 1, 1, "", "apply"], [161, 1, 1, "", "auto_specs_"], [161, 2, 1, "", "batch_dims"], [161, 2, 1, "", "batch_locked"], [161, 2, 1, "", "batch_size"], [161, 1, 1, "", "bfloat16"], [161, 1, 1, "", "buffers"], [161, 1, 1, "", "cardinality"], [161, 1, 1, "", "check_env_specs"], [161, 1, 1, "", "children"], [161, 1, 1, "", "compile"], [161, 1, 1, "", "cpu"], [161, 1, 1, "", "cuda"], [161, 2, 1, "", "done_key"], [161, 2, 1, "", "done_keys"], [161, 2, 1, "", "done_keys_groups"], [161, 2, 1, "", "done_spec"], [161, 2, 1, "", "done_spec_unbatched"], [161, 1, 1, "", "double"], [161, 1, 1, "", "empty_cache"], [161, 1, 1, "", "eval"], [161, 1, 1, "", "extra_repr"], [161, 1, 1, "", "fake_tensordict"], [161, 1, 1, "", "float"], [161, 1, 1, "", "forward"], [161, 2, 1, "", "full_action_spec"], [161, 2, 1, "", "full_action_spec_unbatched"], [161, 2, 1, "", "full_done_spec"], [161, 2, 1, "", "full_done_spec_unbatched"], [161, 2, 1, "", "full_observation_spec_unbatched"], [161, 2, 1, "", "full_reward_spec"], [161, 2, 1, "", "full_reward_spec_unbatched"], [161, 2, 1, "", "full_state_spec"], [161, 2, 1, "", "full_state_spec_unbatched"], [161, 1, 1, "", "get_buffer"], [161, 1, 1, "", "get_extra_state"], [161, 1, 1, "", "get_parameter"], [161, 1, 1, "", "get_submodule"], [161, 1, 1, "", "half"], [161, 2, 1, "", "input_spec"], [161, 2, 1, "", "input_spec_unbatched"], [161, 1, 1, "", "ipu"], [161, 2, 1, "", "is_spec_locked"], [161, 1, 1, "", "load_state_dict"], [161, 1, 1, "", "maybe_reset"], [161, 1, 1, "", "modules"], [161, 1, 1, "", "mtia"], [161, 1, 1, "", "named_buffers"], [161, 1, 1, "", "named_children"], [161, 1, 1, "", "named_modules"], [161, 1, 1, "", "named_parameters"], [161, 2, 1, "", "observation_keys"], [161, 2, 1, "", "observation_spec"], [161, 2, 1, "", "observation_spec_unbatched"], [161, 2, 1, "", "output_spec"], [161, 2, 1, "", "output_spec_unbatched"], [161, 1, 1, "", "parameters"], [161, 1, 1, "", "rand_action"], [161, 1, 1, "", "rand_step"], [161, 1, 1, "", "register_backward_hook"], [161, 1, 1, "", "register_buffer"], [161, 1, 1, "", "register_forward_hook"], [161, 1, 1, "", "register_forward_pre_hook"], [161, 1, 1, "", "register_full_backward_hook"], [161, 1, 1, "", "register_full_backward_pre_hook"], [161, 1, 1, "", "register_gym"], [161, 1, 1, "", "register_load_state_dict_post_hook"], [161, 1, 1, "", "register_load_state_dict_pre_hook"], [161, 1, 1, "", "register_module"], [161, 1, 1, "", "register_parameter"], [161, 1, 1, "", "register_state_dict_post_hook"], [161, 1, 1, "", "register_state_dict_pre_hook"], [161, 1, 1, "", "requires_grad_"], [161, 1, 1, "", "reset"], [161, 2, 1, "", "reset_keys"], [161, 2, 1, "", "reward_key"], [161, 2, 1, "", "reward_keys"], [161, 2, 1, "", "reward_spec"], [161, 2, 1, "", "reward_spec_unbatched"], [161, 1, 1, "", "rollout"], [161, 1, 1, "", "set_extra_state"], [161, 1, 1, "", "set_seed"], [161, 1, 1, "", "set_spec_lock_"], [161, 1, 1, "", "set_submodule"], [161, 2, 1, "", "shape"], [161, 1, 1, "", "share_memory"], [161, 2, 1, "", "specs"], [161, 1, 1, "", "state_dict"], [161, 2, 1, "", "state_keys"], [161, 2, 1, "", "state_spec"], [161, 2, 1, "", "state_spec_unbatched"], [161, 1, 1, "", "step"], [161, 1, 1, "", "step_and_maybe_reset"], [161, 1, 1, "", "step_mdp"], [161, 1, 1, "", "to"], [161, 1, 1, "", "to_empty"], [161, 1, 1, "", "train"], [161, 1, 1, "", "type"], [161, 1, 1, "", "update_kwargs"], [161, 1, 1, "", "xpu"], [161, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[162, 2, 1, "", "action_key"], [162, 2, 1, "", "action_keys"], [162, 2, 1, "", "action_spec"], [162, 2, 1, "", "action_spec_unbatched"], [162, 1, 1, "", "add_module"], [162, 1, 1, "", "add_truncated_keys"], [162, 1, 1, "", "all_actions"], [162, 1, 1, "", "any_done"], [162, 1, 1, "", "append_transform"], [162, 1, 1, "", "apply"], [162, 1, 1, "", "auto_specs_"], [162, 2, 1, "", "batch_dims"], [162, 2, 1, "", "batch_size"], [162, 1, 1, "", "bfloat16"], [162, 1, 1, "", "buffers"], [162, 1, 1, "", "cardinality"], [162, 1, 1, "", "check_env_specs"], [162, 1, 1, "", "children"], [162, 1, 1, "", "compile"], [162, 1, 1, "", "cpu"], [162, 1, 1, "", "cuda"], [162, 2, 1, "", "done_key"], [162, 2, 1, "", "done_keys"], [162, 2, 1, "", "done_keys_groups"], [162, 2, 1, "", "done_spec"], [162, 2, 1, "", "done_spec_unbatched"], [162, 1, 1, "", "double"], [162, 1, 1, "", "empty_cache"], [162, 1, 1, "", "eval"], [162, 1, 1, "", "extra_repr"], [162, 1, 1, "", "fake_tensordict"], [162, 1, 1, "", "float"], [162, 1, 1, "", "forward"], [162, 2, 1, "", "full_action_spec"], [162, 2, 1, "", "full_action_spec_unbatched"], [162, 2, 1, "", "full_done_spec"], [162, 2, 1, "", "full_done_spec_unbatched"], [162, 2, 1, "", "full_observation_spec_unbatched"], [162, 2, 1, "", "full_reward_spec"], [162, 2, 1, "", "full_reward_spec_unbatched"], [162, 2, 1, "", "full_state_spec"], [162, 2, 1, "", "full_state_spec_unbatched"], [162, 1, 1, "", "get_buffer"], [162, 1, 1, "", "get_extra_state"], [162, 1, 1, "", "get_parameter"], [162, 1, 1, "", "get_submodule"], [162, 1, 1, "", "half"], [162, 2, 1, "", "input_spec"], [162, 2, 1, "", "input_spec_unbatched"], [162, 1, 1, "", "ipu"], [162, 2, 1, "", "is_spec_locked"], [162, 1, 1, "", "load_state_dict"], [162, 1, 1, "", "maybe_reset"], [162, 1, 1, "", "modules"], [162, 1, 1, "", "mtia"], [162, 1, 1, "", "named_buffers"], [162, 1, 1, "", "named_children"], [162, 1, 1, "", "named_modules"], [162, 1, 1, "", "named_parameters"], [162, 2, 1, "", "observation_keys"], [162, 2, 1, "", "observation_spec"], [162, 2, 1, "", "observation_spec_unbatched"], [162, 2, 1, "", "output_spec"], [162, 2, 1, "", "output_spec_unbatched"], [162, 1, 1, "", "parameters"], [162, 1, 1, "", "rand_action"], [162, 1, 1, "", "rand_step"], [162, 1, 1, "", "register_backward_hook"], [162, 1, 1, "", "register_buffer"], [162, 1, 1, "", "register_forward_hook"], [162, 1, 1, "", "register_forward_pre_hook"], [162, 1, 1, "", "register_full_backward_hook"], [162, 1, 1, "", "register_full_backward_pre_hook"], [162, 1, 1, "", "register_gym"], [162, 1, 1, "", "register_load_state_dict_post_hook"], [162, 1, 1, "", "register_load_state_dict_pre_hook"], [162, 1, 1, "", "register_module"], [162, 1, 1, "", "register_parameter"], [162, 1, 1, "", "register_state_dict_post_hook"], [162, 1, 1, "", "register_state_dict_pre_hook"], [162, 1, 1, "", "requires_grad_"], [162, 1, 1, "", "reset"], [162, 2, 1, "", "reset_keys"], [162, 2, 1, "", "reward_key"], [162, 2, 1, "", "reward_keys"], [162, 2, 1, "", "reward_spec"], [162, 2, 1, "", "reward_spec_unbatched"], [162, 1, 1, "", "rollout"], [162, 1, 1, "", "set_extra_state"], [162, 1, 1, "", "set_seed"], [162, 1, 1, "", "set_spec_lock_"], [162, 1, 1, "", "set_submodule"], [162, 2, 1, "", "shape"], [162, 1, 1, "", "share_memory"], [162, 2, 1, "", "specs"], [162, 1, 1, "", "state_dict"], [162, 2, 1, "", "state_keys"], [162, 2, 1, "", "state_spec"], [162, 2, 1, "", "state_spec_unbatched"], [162, 1, 1, "", "step"], [162, 1, 1, "", "step_and_maybe_reset"], [162, 1, 1, "", "step_mdp"], [162, 1, 1, "", "to"], [162, 1, 1, "", "to_empty"], [162, 1, 1, "", "train"], [162, 1, 1, "", "type"], [162, 1, 1, "", "xpu"], [162, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[173, 3, 1, "", "DreamerDecoder"], [174, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[180, 0, 1, "", "ActionDiscretizer"], [181, 0, 1, "", "ActionMask"], [182, 0, 1, "", "AutoResetEnv"], [183, 0, 1, "", "AutoResetTransform"], [184, 0, 1, "", "BatchSizeTransform"], [185, 0, 1, "", "BinarizeReward"], [186, 0, 1, "", "BurnInTransform"], [187, 0, 1, "", "CatFrames"], [188, 0, 1, "", "CatTensors"], [189, 0, 1, "", "CenterCrop"], [190, 0, 1, "", "ClipTransform"], [191, 0, 1, "", "Compose"], [192, 0, 1, "", "ConditionalSkip"], [193, 0, 1, "", "Crop"], [194, 0, 1, "", "DTypeCastTransform"], [195, 0, 1, "", "DataLoadingPrimer"], [196, 0, 1, "", "DeviceCastTransform"], [197, 0, 1, "", "DiscreteActionProjection"], [198, 0, 1, "", "DoubleToFloat"], [199, 0, 1, "", "EndOfLifeTransform"], [200, 0, 1, "", "ExcludeTransform"], [201, 0, 1, "", "FiniteTensorDictCheck"], [202, 0, 1, "", "FlattenObservation"], [203, 0, 1, "", "FrameSkipTransform"], [204, 0, 1, "", "GrayScale"], [205, 0, 1, "", "Hash"], [206, 0, 1, "", "InitTracker"], [207, 0, 1, "", "KLRewardTransform"], [208, 0, 1, "", "LineariseRewards"], [209, 0, 1, "", "MultiAction"], [210, 0, 1, "", "NoopResetEnv"], [211, 0, 1, "", "ObservationNorm"], [212, 0, 1, "", "ObservationTransform"], [213, 0, 1, "", "PermuteTransform"], [214, 0, 1, "", "PinMemoryTransform"], [215, 0, 1, "", "R3MTransform"], [216, 0, 1, "", "RandomCropTensorDict"], [217, 0, 1, "", "RemoveEmptySpecs"], [218, 0, 1, "", "RenameTransform"], [219, 0, 1, "", "Resize"], [220, 0, 1, "", "Reward2GoTransform"], [221, 0, 1, "", "RewardClipping"], [222, 0, 1, "", "RewardScaling"], [223, 0, 1, "", "RewardSum"], [224, 0, 1, "", "SelectTransform"], [225, 0, 1, "", "SignTransform"], [226, 0, 1, "", "SqueezeTransform"], [227, 0, 1, "", "Stack"], [228, 0, 1, "", "StepCounter"], [229, 0, 1, "", "TargetReturn"], [230, 0, 1, "", "TensorDictPrimer"], [231, 0, 1, "", "TimeMaxPool"], [232, 0, 1, "", "Timer"], [233, 0, 1, "", "ToTensorImage"], [234, 0, 1, "", "Tokenizer"], [235, 0, 1, "", "TrajCounter"], [236, 0, 1, "", "Transform"], [237, 0, 1, "", "TransformedEnv"], [238, 0, 1, "", "UnaryTransform"], [239, 0, 1, "", "UnsqueezeTransform"], [240, 0, 1, "", "VC1Transform"], [241, 0, 1, "", "VIPRewardTransform"], [242, 0, 1, "", "VIPTransform"], [243, 0, 1, "", "VecGymEnvTransform"], [244, 0, 1, "", "VecNorm"], [245, 0, 1, "", "VecNormV2"], [246, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[180, 0, 1, "", "SamplingStrategy"], [180, 1, 1, "", "inv"], [180, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[182, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[183, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_env_batch_size"], [184, 1, 1, "", "transform_input_spec"], [184, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[186, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "make_rb_transform_and_sampler"], [187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[191, 1, 1, "", "append"], [191, 1, 1, "", "forward"], [191, 1, 1, "", "init"], [191, 1, 1, "", "insert"], [191, 1, 1, "", "to"], [191, 1, 1, "", "transform_action_spec"], [191, 1, 1, "", "transform_env_batch_size"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[192, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[197, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "register_keys"], [199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[201, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[203, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[204, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[205, 1, 1, "", "get_input_from_hash"], [205, 1, 1, "", "reproducible_hash"], [205, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[208, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[211, 1, 1, "", "init_stats"], [211, 1, 1, "", "transform_action_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[214, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[215, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[216, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[219, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[220, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[221, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[222, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[225, 1, 1, "", "transform_observation_spec"], [225, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_done_spec"], [227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_observation_spec"], [227, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_input_spec"], [228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "transform_input_spec"], [229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "to"], [230, 1, 1, "", "transform_input_spec"], [230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[233, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_done_spec"], [234, 1, 1, "", "transform_input_spec"], [234, 1, 1, "", "transform_observation_spec"], [234, 1, 1, "", "transform_output_spec"], [234, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "load_state_dict"], [235, 1, 1, "", "state_dict"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[236, 1, 1, "", "clone"], [236, 2, 1, "", "container"], [236, 1, 1, "", "forward"], [236, 1, 1, "", "init"], [236, 1, 1, "", "inv"], [236, 2, 1, "", "parent"], [236, 1, 1, "", "reset_parent"], [236, 1, 1, "", "set_container"], [236, 1, 1, "", "to"], [236, 1, 1, "", "transform_action_spec"], [236, 1, 1, "", "transform_done_spec"], [236, 1, 1, "", "transform_env_batch_size"], [236, 1, 1, "", "transform_env_device"], [236, 1, 1, "", "transform_input_spec"], [236, 1, 1, "", "transform_observation_spec"], [236, 1, 1, "", "transform_output_spec"], [236, 1, 1, "", "transform_reward_spec"], [236, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[237, 1, 1, "", "add_truncated_keys"], [237, 1, 1, "", "append_transform"], [237, 2, 1, "", "batch_locked"], [237, 2, 1, "", "batch_size"], [237, 1, 1, "", "empty_cache"], [237, 1, 1, "", "eval"], [237, 2, 1, "", "input_spec"], [237, 1, 1, "", "insert_transform"], [237, 1, 1, "", "load_state_dict"], [237, 2, 1, "", "output_spec"], [237, 1, 1, "", "rand_action"], [237, 1, 1, "", "set_missing_tolerance"], [237, 1, 1, "", "set_seed"], [237, 1, 1, "", "state_dict"], [237, 1, 1, "", "to"], [237, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[238, 1, 1, "", "transform_action_spec"], [238, 1, 1, "", "transform_done_spec"], [238, 1, 1, "", "transform_input_spec"], [238, 1, 1, "", "transform_observation_spec"], [238, 1, 1, "", "transform_output_spec"], [238, 1, 1, "", "transform_reward_spec"], [238, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_reward_spec"], [239, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_noload_model"], [240, 1, 1, "", "to"], [240, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[242, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[244, 1, 1, "", "build_td_for_shared_vecnorm"], [244, 1, 1, "", "forward"], [244, 1, 1, "", "freeze"], [244, 1, 1, "", "frozen_copy"], [244, 1, 1, "", "get_extra_state"], [244, 2, 1, "", "loc"], [244, 2, 1, "", "scale"], [244, 1, 1, "", "set_extra_state"], [244, 2, 1, "", "standard_normal"], [244, 1, 1, "", "to_observation_norm"], [244, 1, 1, "", "transform_observation_spec"], [244, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[245, 1, 1, "", "clone"], [245, 1, 1, "id0", "freeze"], [245, 1, 1, "id1", "frozen_copy"], [245, 1, 1, "id2", "get_extra_state"], [245, 2, 1, "id3", "loc"], [245, 2, 1, "id4", "scale"], [245, 1, 1, "id5", "set_extra_state"], [245, 2, 1, "id6", "standard_normal"], [245, 1, 1, "", "to_observation_norm"], [245, 1, 1, "id7", "transform_observation_spec"], [245, 1, 1, "id8", "transform_output_spec"], [245, 1, 1, "id9", "transform_reward_spec"], [245, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[247, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[247, 1, 1, "", "add_module"], [247, 1, 1, "", "apply"], [247, 1, 1, "", "bfloat16"], [247, 1, 1, "", "buffers"], [247, 1, 1, "", "children"], [247, 1, 1, "", "compile"], [247, 2, 1, "", "container"], [247, 1, 1, "", "cpu"], [247, 1, 1, "", "cuda"], [247, 1, 1, "", "double"], [247, 1, 1, "", "eval"], [247, 1, 1, "", "extra_repr"], [247, 1, 1, "", "float"], [247, 1, 1, "", "forward"], [247, 1, 1, "", "get_buffer"], [247, 1, 1, "", "get_extra_state"], [247, 1, 1, "", "get_parameter"], [247, 1, 1, "", "get_submodule"], [247, 1, 1, "", "half"], [247, 1, 1, "", "init"], [247, 1, 1, "", "inv"], [247, 1, 1, "", "ipu"], [247, 1, 1, "", "load_state_dict"], [247, 1, 1, "", "modules"], [247, 1, 1, "", "mtia"], [247, 2, 1, "", "n_steps"], [247, 1, 1, "", "named_buffers"], [247, 1, 1, "", "named_children"], [247, 1, 1, "", "named_modules"], [247, 1, 1, "", "named_parameters"], [247, 1, 1, "", "parameters"], [247, 2, 1, "", "parent"], [247, 1, 1, "", "register_backward_hook"], [247, 1, 1, "", "register_buffer"], [247, 1, 1, "", "register_forward_hook"], [247, 1, 1, "", "register_forward_pre_hook"], [247, 1, 1, "", "register_full_backward_hook"], [247, 1, 1, "", "register_full_backward_pre_hook"], [247, 1, 1, "", "register_load_state_dict_post_hook"], [247, 1, 1, "", "register_load_state_dict_pre_hook"], [247, 1, 1, "", "register_module"], [247, 1, 1, "", "register_parameter"], [247, 1, 1, "", "register_state_dict_post_hook"], [247, 1, 1, "", "register_state_dict_pre_hook"], [247, 1, 1, "", "requires_grad_"], [247, 1, 1, "", "set_extra_state"], [247, 1, 1, "", "set_submodule"], [247, 1, 1, "", "share_memory"], [247, 1, 1, "", "state_dict"], [247, 1, 1, "", "to"], [247, 1, 1, "", "to_empty"], [247, 1, 1, "", "train"], [247, 1, 1, "", "transform_action_spec"], [247, 1, 1, "", "transform_done_spec"], [247, 1, 1, "", "transform_env_batch_size"], [247, 1, 1, "", "transform_env_device"], [247, 1, 1, "", "transform_input_spec"], [247, 1, 1, "", "transform_observation_spec"], [247, 1, 1, "", "transform_output_spec"], [247, 1, 1, "", "transform_reward_spec"], [247, 1, 1, "", "transform_state_spec"], [247, 1, 1, "", "type"], [247, 1, 1, "", "xpu"], [247, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[248, 1, 1, "", "get_class_that_defined_method"], [248, 1, 1, "", "import_module"], [248, 1, 1, "", "module_set"], [248, 1, 1, "", "reset"]], "torchrl.modules": [[249, 0, 1, "", "AdditiveGaussianModule"], [250, 0, 1, "", "BatchRenorm1d"], [251, 0, 1, "", "CEMPlanner"], [252, 0, 1, "", "ConsistentDropout"], [253, 0, 1, "", "ConsistentDropoutModule"], [254, 0, 1, "", "Conv3dNet"], [255, 0, 1, "", "ConvNet"], [256, 0, 1, "", "DTActor"], [257, 0, 1, "", "DdpgCnnActor"], [258, 0, 1, "", "DdpgCnnQNet"], [259, 0, 1, "", "DdpgMlpActor"], [260, 0, 1, "", "DdpgMlpQNet"], [261, 0, 1, "", "DecisionTransformer"], [262, 0, 1, "", "Delta"], [263, 0, 1, "", "DistributionalDQNnet"], [264, 0, 1, "", "DistributionalQValueHook"], [265, 0, 1, "", "DreamerActor"], [266, 0, 1, "", "DuelingCnnDQNet"], [267, 0, 1, "", "EGreedyModule"], [268, 0, 1, "", "GRU"], [269, 0, 1, "", "GRUCell"], [270, 0, 1, "", "GRUModule"], [271, 0, 1, "", "IndependentNormal"], [272, 0, 1, "", "LSTM"], [273, 0, 1, "", "LSTMCell"], [274, 0, 1, "", "LSTMModule"], [275, 0, 1, "", "MLP"], [276, 0, 1, "", "MPCPlannerBase"], [277, 0, 1, "", "MPPIPlanner"], [278, 0, 1, "", "MaskedCategorical"], [279, 0, 1, "", "MaskedOneHotCategorical"], [280, 0, 1, "", "MultiAgentConvNet"], [281, 0, 1, "", "MultiAgentMLP"], [282, 0, 1, "", "MultiAgentNetBase"], [283, 0, 1, "", "NoisyLazyLinear"], [284, 0, 1, "", "NoisyLinear"], [285, 0, 1, "", "ObsDecoder"], [286, 0, 1, "", "ObsEncoder"], [287, 0, 1, "", "OneHotCategorical"], [288, 0, 1, "", "OneHotOrdinal"], [289, 0, 1, "", "OnlineDTActor"], [290, 0, 1, "", "Ordinal"], [291, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [292, 0, 1, "", "QMixer"], [293, 0, 1, "", "QValueHook"], [294, 0, 1, "", "RSSMPosterior"], [295, 0, 1, "", "RSSMPrior"], [296, 0, 1, "", "Squeeze2dLayer"], [297, 0, 1, "", "SqueezeLayer"], [298, 0, 1, "", "TanhDelta"], [299, 0, 1, "", "TanhNormal"], [300, 0, 1, "", "TruncatedNormal"], [301, 0, 1, "", "VDNMixer"], [302, 0, 1, "", "VmapModule"], [303, 0, 1, "", "recurrent_mode"], [304, 0, 1, "", "reset_noise"], [305, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[250, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[251, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[252, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[254, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[255, 1, 1, "", "default_atari_dqn"], [255, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[256, 1, 1, "", "default_config"], [256, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[257, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[258, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[259, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[260, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[261, 0, 1, "", "DTConfig"], [261, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[262, 1, 1, "", "expand"], [262, 1, 1, "", "log_prob"], [262, 2, 1, "", "mean"], [262, 2, 1, "", "mode"], [262, 1, 1, "", "rsample"], [262, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[263, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[265, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[266, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "step"]], "torchrl.modules.GRU": [[268, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[269, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_cudnn_based"], [270, 1, 1, "", "make_python_based"], [270, 1, 1, "id0", "make_tensordict_primer"], [270, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[271, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[272, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[273, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "make_cudnn_based"], [274, 1, 1, "", "make_python_based"], [274, 1, 1, "id0", "make_tensordict_primer"], [274, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[275, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[277, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[278, 1, 1, "", "log_prob"], [278, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[279, 1, 1, "", "log_prob"], [279, 2, 1, "", "mode"], [279, 1, 1, "", "rsample"], [279, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "from_stateful_net"], [282, 1, 1, "", "get_stateful_net"], [282, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[283, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[285, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[286, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[287, 1, 1, "", "entropy"], [287, 1, 1, "", "log_prob"], [287, 2, 1, "", "mode"], [287, 1, 1, "", "rsample"], [287, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[289, 1, 1, "", "default_config"], [289, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[292, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[294, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[295, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[297, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[298, 2, 1, "", "mean"], [298, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[299, 1, 1, "", "get_mode"], [299, 2, 1, "", "mean"], [299, 2, 1, "", "mode"], [299, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[300, 1, 1, "", "log_prob"], [300, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[301, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[302, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[306, 0, 1, "", "Actor"], [307, 0, 1, "", "ActorCriticOperator"], [308, 0, 1, "", "ActorCriticWrapper"], [309, 0, 1, "", "ActorValueOperator"], [310, 0, 1, "", "DecisionTransformerInferenceWrapper"], [311, 0, 1, "", "DistributionalQValueActor"], [312, 0, 1, "", "DistributionalQValueModule"], [313, 0, 1, "", "LMHeadActorValueOperator"], [314, 0, 1, "", "MultiStepActorWrapper"], [315, 0, 1, "", "ProbabilisticActor"], [316, 0, 1, "", "QValueActor"], [317, 0, 1, "", "QValueModule"], [318, 0, 1, "", "SafeModule"], [319, 0, 1, "", "SafeProbabilisticModule"], [320, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [321, 0, 1, "", "SafeSequential"], [322, 0, 1, "", "TanhModule"], [323, 0, 1, "", "ValueOperator"], [324, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[307, 1, 1, "", "get_critic_operator"], [307, 1, 1, "", "get_policy_head"], [307, 1, 1, "", "get_value_head"], [307, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[308, 1, 1, "", "get_policy_head"], [308, 1, 1, "", "get_policy_operator"], [308, 1, 1, "", "get_value_head"], [308, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[309, 1, 1, "", "get_policy_head"], [309, 1, 1, "", "get_policy_operator"], [309, 1, 1, "", "get_value_head"], [309, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "mask_context"], [310, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[312, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[314, 1, 1, "", "forward"], [314, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[317, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[318, 1, 1, "", "random"], [318, 1, 1, "", "random_sample"], [318, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[319, 1, 1, "", "random"], [319, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[322, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[324, 1, 1, "", "get_reward_operator"], [324, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[325, 0, 1, "", "biased_softplus"], [326, 0, 1, "", "get_primers_from_module"], [327, 0, 1, "", "inv_softplus"], [328, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[325, 1, 1, "", "forward"]], "torchrl.objectives": [[329, 0, 1, "", "A2CLoss"], [330, 0, 1, "", "CQLLoss"], [331, 0, 1, "", "ClipPPOLoss"], [332, 0, 1, "", "CrossQLoss"], [333, 0, 1, "", "DDPGLoss"], [334, 0, 1, "", "DQNLoss"], [335, 0, 1, "", "DTLoss"], [336, 0, 1, "", "DiscreteCQLLoss"], [337, 0, 1, "", "DiscreteIQLLoss"], [338, 0, 1, "", "DiscreteSACLoss"], [339, 0, 1, "", "DistributionalDQNLoss"], [340, 0, 1, "", "DreamerActorLoss"], [341, 0, 1, "", "DreamerModelLoss"], [342, 0, 1, "", "DreamerValueLoss"], [343, 0, 1, "", "GAILLoss"], [344, 0, 1, "", "HardUpdate"], [345, 0, 1, "", "IQLLoss"], [346, 0, 1, "", "KLPENPPOLoss"], [347, 0, 1, "", "LossModule"], [348, 0, 1, "", "OnlineDTLoss"], [349, 0, 1, "", "PPOLoss"], [350, 0, 1, "", "REDQLoss"], [351, 0, 1, "", "ReinforceLoss"], [352, 0, 1, "", "SACLoss"], [353, 0, 1, "", "SoftUpdate"], [354, 0, 1, "", "TD3BCLoss"], [355, 0, 1, "", "TD3Loss"], [356, 0, 1, "", "ValueEstimators"], [357, 0, 1, "", "default_value_kwargs"], [358, 0, 1, "", "distance_loss"], [359, 0, 1, "", "group_optimizers"], [360, 0, 1, "", "hold_out_net"], [361, 0, 1, "", "hold_out_params"], [363, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[329, 4, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 2, 1, "", "functional"], [329, 1, 1, "", "loss_critic"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[330, 4, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[331, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[332, 1, 1, "", "actor_loss"], [332, 1, 1, "", "alpha_loss"], [332, 4, 1, "", "default_keys"], [332, 1, 1, "", "forward"], [332, 1, 1, "", "load_state_dict"], [332, 1, 1, "", "make_value_estimator"], [332, 1, 1, "", "maybe_init_target_entropy"], [332, 1, 1, "", "qvalue_loss"], [332, 1, 1, "", "set_keys"], [332, 1, 1, "", "state_dict"], [332, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[334, 4, 1, "", "default_keys"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[335, 4, 1, "", "default_keys"], [335, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[339, 4, 1, "", "default_keys"], [339, 1, 1, "", "forward"], [339, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[340, 4, 1, "", "default_keys"], [340, 1, 1, "", "forward"], [340, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[341, 4, 1, "", "default_keys"], [341, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[342, 4, 1, "", "default_keys"], [342, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[343, 4, 1, "", "default_keys"], [343, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[345, 4, 1, "", "default_keys"], [345, 1, 1, "", "forward"], [345, 1, 1, "", "loss_value_diff"], [345, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[346, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[347, 1, 1, "", "convert_to_functional"], [347, 1, 1, "", "forward"], [347, 1, 1, "", "from_stateful_net"], [347, 2, 1, "", "functional"], [347, 1, 1, "", "get_stateful_net"], [347, 1, 1, "", "make_value_estimator"], [347, 1, 1, "", "named_parameters"], [347, 1, 1, "", "parameters"], [347, 1, 1, "", "reset_parameters_recursive"], [347, 1, 1, "", "set_keys"], [347, 2, 1, "", "value_estimator"], [347, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[348, 4, 1, "", "default_keys"], [348, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[349, 4, 1, "", "default_keys"], [349, 1, 1, "", "forward"], [349, 2, 1, "", "functional"], [349, 1, 1, "", "loss_critic"], [349, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[350, 4, 1, "", "default_keys"], [350, 1, 1, "", "forward"], [350, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[351, 4, 1, "", "default_keys"], [351, 1, 1, "", "forward"], [351, 2, 1, "", "functional"], [351, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[352, 4, 1, "", "default_keys"], [352, 1, 1, "", "forward"], [352, 1, 1, "", "load_state_dict"], [352, 1, 1, "", "make_value_estimator"], [352, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[354, 1, 1, "", "actor_loss"], [354, 4, 1, "", "default_keys"], [354, 1, 1, "", "forward"], [354, 1, 1, "", "make_value_estimator"], [354, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[355, 4, 1, "", "default_keys"], [355, 1, 1, "", "forward"], [355, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[362, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[362, 4, 1, "", "default_keys"], [362, 1, 1, "", "forward"], [362, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[364, 0, 1, "", "GAE"], [365, 0, 1, "", "TD0Estimator"], [366, 0, 1, "", "TD1Estimator"], [367, 0, 1, "", "TDLambdaEstimator"], [368, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[364, 1, 1, "", "forward"], [364, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[365, 1, 1, "", "forward"], [365, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[366, 1, 1, "", "forward"], [366, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[367, 1, 1, "", "forward"], [367, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[368, 4, 1, "", "default_keys"], [368, 1, 1, "", "forward"], [368, 1, 1, "", "set_keys"], [368, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[369, 0, 1, "", "generalized_advantage_estimate"], [370, 0, 1, "", "reward2go"], [371, 0, 1, "", "td0_advantage_estimate"], [372, 0, 1, "", "td0_return_estimate"], [373, 0, 1, "", "td1_advantage_estimate"], [374, 0, 1, "", "td1_return_estimate"], [375, 0, 1, "", "td_lambda_advantage_estimate"], [376, 0, 1, "", "td_lambda_return_estimate"], [377, 0, 1, "", "vec_generalized_advantage_estimate"], [378, 0, 1, "", "vec_td1_advantage_estimate"], [379, 0, 1, "", "vec_td1_return_estimate"], [380, 0, 1, "", "vec_td_lambda_advantage_estimate"], [381, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[382, 3, 1, "", "PixelRenderTransform"], [383, 3, 1, "", "TensorDictRecorder"], [384, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[385, 3, 1, "", "Logger"], [387, 3, 1, "", "generate_exp_name"], [388, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[386, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[389, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[390, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[391, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[393, 0, 1, "", "BatchSubSampler"], [394, 0, 1, "", "ClearCudaCache"], [395, 0, 1, "", "CountFramesLog"], [396, 0, 1, "", "LogScalar"], [397, 0, 1, "", "LogValidationReward"], [398, 0, 1, "", "OptimizerHook"], [399, 0, 1, "", "ReplayBufferTrainer"], [400, 0, 1, "", "RewardNormalizer"], [401, 0, 1, "", "SelectKeys"], [402, 0, 1, "", "Trainer"], [403, 0, 1, "", "TrainerHookBase"], [404, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[393, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[394, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[395, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[396, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[397, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[398, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[399, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[400, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[401, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[402, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[403, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[404, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[405, 3, 1, "", "correct_for_frame_skip"], [406, 3, 1, "", "get_stats_random_rollout"], [407, 3, 1, "", "make_collector_offpolicy"], [408, 3, 1, "", "make_collector_onpolicy"], [409, 3, 1, "", "make_dqn_loss"], [410, 3, 1, "", "make_replay_buffer"], [411, 3, 1, "", "make_target_updater"], [412, 3, 1, "", "make_trainer"], [413, 3, 1, "", "parallel_env_constructor"], [414, 3, 1, "", "sync_async_collector"], [415, 3, 1, "", "sync_sync_collector"], [416, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 420, 421, 422, 423, 425, 426, 427, 429, 431, 438, 439, 440, 444, 445], "instal": [0, 6, 7, 444], "get": [0, 430, 431, 432, 433, 434, 435], "start": [0, 430, 431, 432, 433, 434, 435], "tutori": [0, 427, 438, 439], "basic": [0, 442], "intermedi": [0, 8], "advanc": 0, "refer": [0, 418], "knowledg": [0, 419], "base": [0, 2, 7, 419, 429], "indic": 0, "tabl": 0, "collector": [1, 425, 426, 427, 428, 433, 435, 438, 439, 444], "packag": [1, 2, 3, 420, 421, 422, 423], "batch": [1, 3, 425, 440, 442], "size": [1, 3, 425, 442], "polici": [1, 2, 4, 421, 425, 427, 428, 429, 431, 435, 437, 438, 439, 440], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 420], "environ": [1, 3, 4, 6, 7, 425, 426, 427, 428, 430, 435, 437, 438, 439, 440, 444, 445], "local": 1, "remot": 1, "updat": [1, 425], "extend": 1, "class": [1, 440, 444], "default": 1, "implement": [1, 4], "practic": 1, "consider": [1, 432], "replai": [1, 2, 3, 425, 426, 427, 428, 433, 435, 438, 439, 442, 444], "buffer": [1, 2, 3, 425, 426, 427, 428, 433, 435, 438, 439, 442, 444], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 425, 426, 427, 433, 435, 438, 439, 444], "helper": [1, 3], "function": [1, 4, 421, 426, 427, 432, 438, 439, 444], "compos": [2, 191], "support": 2, "type": 2, "choos": 2, "storag": [2, 114, 425, 433, 442], "sampl": [2, 442], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 426, 442], "trajectori": [2, 442], "checkpoint": [2, 422], "episod": [2, 4], "format": 2, "ted": [2, 430], "The": [2, 425], "rational": 2, "behind": 2, "structur": [2, 442], "A": [2, 426, 442], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 420, 442, 444], "special": [2, 431, 444], "case": 2, "footnot": 2, "multi": [2, 3, 420, 421, 437, 438, 439], "agent": [2, 3, 4, 420, 421, 438, 439], "present": 2, "rnn": 2, "transform": [2, 3, 236, 425, 427, 430, 438, 439, 440, 442, 444, 445], "step": [2, 3, 425, 427, 430, 433, 438, 439, 442, 445], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 82], "numer": 2, "subclass": [2, 3], "categor": [2, 35], "tree": [2, 84], "forest": 2, "tensordictmap": [2, 77], "mctsforest": [2, 50], "reinforc": [2, 421, 427, 438, 439], "learn": [2, 4, 420, 427, 438, 439], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 420, 421, 422, 438], "env": [3, 440, 444, 445], "spec": [3, 440, 445], "lock": 3, "method": [3, 425], "partial": 3, "reset": [3, 440, 445], "vector": [3, 444], "custom": [3, 11, 440, 442], "nativ": 3, "auto": 3, "dynam": [3, 4, 442], "forward": [3, 4, 425], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 442], "expos": 3, "outsid": 3, "world": 3, "design": [3, 435], "your": [3, 4, 6, 425, 429, 435, 440], "own": [3, 435], "tip": 3, "us": [3, 4, 6, 9, 421, 428, 441, 442, 444], "clone": [3, 7], "mask": 3, "action": [3, 4, 421, 428, 440], "record": [3, 422, 425, 434], "video": [3, 11, 434], "domain": [3, 420], "specif": [3, 420, 437], "librari": [3, 444], "thing": [4, 425, 440], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 430, 432, 444], "gener": [4, 11, 420], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 420], "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 425, 426, 432, 435], "return": [4, 421], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 444], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 437], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 425, 426, 427], "standard": 4, "explor": [4, 420, 425, 426, 431], "valu": [4, 420, 421, 425, 427, 428, 431], "loss": [4, 425, 426, 427, 428, 435, 438, 439], "earli": 4, "train": [4, 8, 421, 425, 427, 428, 429, 432, 435, 438, 439, 440], "roughli": 4, "uniformli": 4, "random": [4, 421, 438, 439], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 426], "increas": 4, "an": [4, 427, 428, 430, 440], "can": 4, "low": 4, "model": [4, 420, 425, 426, 428, 429, 432, 441, 444], "also": 4, "offlin": 4, "observ": [4, 425], "space": 4, "effect": [4, 440], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 429], "gym": [5, 444, 445], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 425], "render": [7, 11, 435, 438, 439, 445], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 425], "pytorch": [8, 9, 10, 429], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 440], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 426, 442], "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "localweightupdaterbas": 14, "multiprocessedremoteweightupd": 15, "multisyncdatacollector": 16, "multiasyncdatacollector": 17, "rayremoteweightupdat": 18, "remoteweightupdaterbas": 19, "syncdatacollector": 20, "vanillalocalweightupdat": 21, "asyncdatacollector": 22, "distributeddatacollector": 23, "distributedsyncdatacollector": 24, "rpcdatacollector": 25, "raycollector": 26, "submitit_delayed_launch": 27, "split_trajectori": 28, "adaptiveklcontrol": 29, "binari": [30, 429], "binarydiscretetensorspec": 31, "binarytodecim": 32, "bound": 33, "boundedtensorspec": 34, "composit": 36, "compositespec": 37, "constantklcontrol": 38, "densifyreward": 39, "discretetensorspec": 40, "flat2t": 41, "h5combin": 42, "h5split": 43, "hashtoint": 44, "llmdata": 45, "llminput": 46, "llmoutput": 47, "lazystackedcompositespec": 48, "lazystackedtensorspec": 49, "multicategor": 51, "multidiscretetensorspec": 52, "multionehot": 53, "multionehotdiscretetensorspec": 54, "multistep": 55, "nested2t": 56, "nontensor": 57, "nontensorspec": 58, "onehot": 59, "onehotdiscretetensorspec": 60, "pairwisedataset": 61, "prioritizedreplaybuff": 62, "promptdata": 63, "prompttensordicttoken": 64, "querymodul": 65, "randomprojectionhash": 66, "rayreplaybuff": 67, "remotetensordictreplaybuff": 68, "replaybuff": 69, "rewarddata": 70, "rolloutfrommodel": 71, "siphash": 72, "stack": [73, 227], "stackedcomposit": 74, "ted2flat": 75, "ted2nest": 76, "tensordictprioritizedreplaybuff": 78, "tensordictreplaybuff": 79, "tensordicttoken": 80, "tensormap": 81, "tokenizeddatasetload": 83, "unbound": 85, "unboundedcontinu": 86, "unboundedcontinuoustensorspec": 87, "unboundeddiscret": 88, "unboundeddiscretetensorspec": 89, "check_no_exclusive_kei": 90, "consolidate_spec": 91, "contains_lazy_spec": 92, "create_infinite_iter": 93, "get_dataload": 94, "flatstoragecheckpoint": 95, "h5storagecheckpoint": 96, "immutabledatasetwrit": 97, "lazymemmapstorag": 98, "lazystackstorag": 99, "lazytensorstorag": 100, "liststorag": 101, "liststoragecheckpoint": 102, "nestedstoragecheckpoint": 103, "prioritizedsampl": 104, "prioritizedslicesampl": 105, "randomsampl": 106, "replaybufferensembl": 107, "roundrobinwrit": 108, "sampler": 109, "samplerensembl": 110, "samplerwithoutreplac": 111, "slicesampl": 112, "slicesamplerwithoutreplac": 113, "storagecheckpointerbas": 115, "storageensembl": 116, "storageensemblecheckpoint": 117, "tensordictmaxvaluewrit": 118, "tensordictroundrobinwrit": 119, "tensorstorag": 120, "tensorstoragecheckpoint": 121, "writer": 122, "writerensembl": 123, "braxenv": 124, "braxwrapp": 125, "chessenv": 126, "dmcontrolenv": 127, "dmcontrolwrapp": 128, "envbas": [129, 440], "envcreat": 130, "envmetadata": 131, "gymenv": 132, "gymlikeenv": 133, "gymwrapp": 134, "habitatenv": 135, "isaacgymenv": 136, "isaacgymwrapp": 137, "jumanjienv": 138, "jumanjiwrapp": 139, "llmenv": 140, "llmhashingenv": 141, "mogymenv": 142, "mogymwrapp": 143, "marlgroupmaptyp": 144, "meltingpotenv": 145, "meltingpotwrapp": 146, "modelbasedenvbas": 147, "multithreadedenv": 148, "multithreadedenvwrapp": 149, "openmlenv": 150, "openspielenv": 151, "openspielwrapp": 152, "parallelenv": 153, "pendulumenv": 154, "pettingzooenv": 155, "pettingzoowrapp": 156, "randompolici": 157, "robohiveenv": 158, "smacv2env": 159, "smacv2wrapp": 160, "serialenv": 161, "tictactoeenv": 162, "unitymlagentsenv": 163, "unitymlagentswrapp": 164, "vmasenv": 165, "vmaswrapp": 166, "check_env_spec": 167, "check_marl_group": 168, "exploration_typ": 169, "get_available_librari": 170, "gym_backend": 171, "make_composite_from_td": 172, "dreamerdecod": 173, "dreamerenv": 174, "register_gym_spec_convers": 175, "set_exploration_typ": 176, "set_gym_backend": 177, "step_mdp": 178, "terminated_or_trunc": 179, "actiondiscret": 180, "actionmask": 181, "autoresetenv": 182, "autoresettransform": 183, "batchsizetransform": 184, "binarizereward": 185, "burnintransform": 186, "catfram": [187, 442], "cattensor": 188, "centercrop": 189, "cliptransform": 190, "conditionalskip": 192, "crop": 193, "dtypecasttransform": 194, "dataloadingprim": 195, "devicecasttransform": 196, "discreteactionproject": 197, "doubletofloat": 198, "endoflifetransform": 199, "excludetransform": 200, "finitetensordictcheck": 201, "flattenobserv": 202, "frameskiptransform": 203, "grayscal": 204, "hash": 205, "inittrack": 206, "klrewardtransform": 207, "linearisereward": 208, "multiact": 209, "noopresetenv": 210, "observationnorm": 211, "observationtransform": 212, "permutetransform": 213, "pinmemorytransform": 214, "r3mtransform": 215, "randomcroptensordict": 216, "removeemptyspec": 217, "renametransform": 218, "resiz": 219, "reward2gotransform": 220, "rewardclip": 221, "rewardsc": 222, "rewardsum": 223, "selecttransform": 224, "signtransform": 225, "squeezetransform": 226, "stepcount": 228, "targetreturn": 229, "tensordictprim": 230, "timemaxpool": 231, "timer": 232, "totensorimag": 233, "token": 234, "trajcount": 235, "transformedenv": 237, "unarytransform": 238, "unsqueezetransform": 239, "vc1transform": 240, "viprewardtransform": 241, "viptransform": 242, "vecgymenvtransform": 243, "vecnorm": [244, 445], "vecnormv2": 245, "gsdenois": 246, "multisteptransform": 247, "implement_for": 248, "additivegaussianmodul": 249, "batchrenorm1d": 250, "cemplann": 251, "consistentdropout": 252, "consistentdropoutmodul": 253, "conv3dnet": 254, "convnet": 255, "dtactor": 256, "ddpgcnnactor": 257, "ddpgcnnqnet": 258, "ddpgmlpactor": 259, "ddpgmlpqnet": 260, "decisiontransform": 261, "delta": 262, "distributionaldqnnet": 263, "distributionalqvaluehook": 264, "dreameractor": 265, "duelingcnndqnet": 266, "egreedymodul": 267, "gru": 268, "grucel": 269, "grumodul": 270, "independentnorm": 271, "lstm": [272, 428], "lstmcell": 273, "lstmmodul": 274, "mlp": [275, 428], "mpcplannerbas": 276, "mppiplann": 277, "maskedcategor": 278, "maskedonehotcategor": 279, "multiagentconvnet": 280, "multiagentmlp": 281, "multiagentnetbas": 282, "noisylazylinear": 283, "noisylinear": 284, "obsdecod": 285, "obsencod": 286, "onehotcategor": 287, "onehotordin": 288, "onlinedtactor": 289, "ordin": 290, "ornsteinuhlenbeckprocessmodul": 291, "qmixer": [292, 421], "qvaluehook": 293, "rssmposterior": 294, "rssmprior": 295, "squeeze2dlay": 296, "squeezelay": 297, "tanhdelta": 298, "tanhnorm": 299, "truncatednorm": 300, "vdnmixer": 301, "vmapmodul": 302, "recurrent_mod": 303, "reset_nois": 304, "set_recurrent_mod": 305, "actor": [306, 420, 425, 431], "actorcriticoper": 307, "actorcriticwrapp": 308, "actorvalueoper": 309, "decisiontransformerinferencewrapp": 310, "distributionalqvalueactor": 311, "distributionalqvaluemodul": 312, "lmheadactorvalueoper": 313, "multistepactorwrapp": 314, "probabilisticactor": 315, "qvalueactor": [316, 420], "qvaluemodul": 317, "safemodul": [318, 420], "safeprobabilisticmodul": 319, "safeprobabilistictensordictsequenti": 320, "safesequenti": 321, "tanhmodul": 322, "valueoper": 323, "worldmodelwrapp": 324, "biased_softplu": 325, "get_primers_from_modul": 326, "inv_softplu": 327, "map": [328, 438], "a2closs": 329, "cqlloss": 330, "clipppoloss": 331, "crossqloss": 332, "ddpgloss": 333, "dqnloss": 334, "dtloss": 335, "discretecqlloss": 336, "discreteiqlloss": 337, "discretesacloss": 338, "distributionaldqnloss": 339, "dreameractorloss": 340, "dreamermodelloss": 341, "dreamervalueloss": 342, "gailloss": 343, "hardupd": 344, "iqlloss": 345, "klpenppoloss": 346, "lossmodul": [347, 425, 432], "onlinedtloss": 348, "ppoloss": 349, "redqloss": 350, "reinforceloss": 351, "sacloss": 352, "softupd": 353, "td3bcloss": 354, "td3loss": 355, "valueestim": 356, "default_value_kwarg": 357, "distance_loss": 358, "group_optim": 359, "hold_out_net": 360, "hold_out_param": 361, "qmixerloss": 362, "next_state_valu": 363, "gae": 364, "td0estim": 365, "td1estim": 366, "tdlambdaestim": 367, "valueestimatorbas": 368, "generalized_advantage_estim": 369, "reward2go": 370, "td0_advantage_estim": 371, "td0_return_estim": 372, "td1_advantage_estim": 373, "td1_return_estim": 374, "td_lambda_advantage_estim": 375, "td_lambda_return_estim": 376, "vec_generalized_advantage_estim": 377, "vec_td1_advantage_estim": 378, "vec_td1_return_estim": 379, "vec_td_lambda_advantage_estim": 380, "vec_td_lambda_return_estim": 381, "pixelrendertransform": 382, "tensordictrecord": 383, "videorecord": 384, "logger": [385, 422, 434, 435], "csvlogger": 386, "generate_exp_nam": 387, "get_logg": 388, "mlflowlogg": 389, "tensorboardlogg": 390, "wandblogg": 391, "set_auto_unwrap_transformed_env": 392, "batchsubsampl": 393, "clearcudacach": 394, "countframeslog": 395, "logscalar": 396, "logvalidationreward": 397, "optimizerhook": 398, "replaybuffertrain": 399, "rewardnorm": 400, "selectkei": 401, "trainer": [402, 422, 426], "trainerhookbas": 403, "updateweight": 404, "correct_for_frame_skip": 405, "get_stats_random_rollout": 406, "make_collector_offpolici": 407, "make_collector_onpolici": 408, "make_dqn_loss": 409, "make_replay_buff": 410, "make_target_updat": 411, "make_train": 412, "parallel_env_constructor": 413, "sync_async_collector": 414, "sync_sync_collector": 415, "transformed_env_constructor": 416, "readm": [417, 436], "tuto": [417, 436], "api": 418, "contribut": [419, 444], "content": 419, "modul": [420, 425, 428, 429, 431, 435, 444], "tensordictmodul": [420, 429, 431, 444], "wrapper": [420, 431], "probabilist": [420, 431], "q": [420, 426, 428, 431], "oper": 420, "join": 420, "hook": [420, 422, 426], "regular": 420, "planner": 420, "object": [421, 425, 432, 444], "torch": 421, "vmap": [421, 444], "dqn": [421, 426, 428], "ddpg": [421, 425, 438], "sac": 421, "redq": 421, "crossq": 421, "iql": 421, "cql": 421, "gail": 421, "dt": 421, "td3": 421, "bc": 421, "ppo": [421, 427, 439], "head": 421, "a2c": 421, "dreamer": 421, "builder": 422, "_util": 423, "comput": [424, 426, 440, 443], "time": [424, 425, 443], "code": [425, 440], "overview": [425, 428], "setup": [425, 428], "__init__": 425, "estim": 425, "put": 425, "togeth": [425, 440], "call": 425, "parallel": [425, 437, 445], "execut": [425, 437, 440], "stat": 425, "build": [425, 426, 435, 442], "evalu": 425, "construct": 425, "target": [425, 426, 432], "network": [425, 426, 427, 428, 431, 438, 439], "experi": [425, 440], "result": [425, 427, 438, 439], "conclus": [425, 426, 427, 428, 429, 438, 439, 440, 442], "next": [425, 427, 430, 433, 438, 439, 442], "deep": 426, "collect": [426, 427, 433], "paramet": [426, 427, 432], "hyperparamet": [426, 427, 438, 439], "regist": 426, "possibl": 426, "improv": 426, "defin": [427, 438, 439], "loop": [427, 428, 429, 435, 438, 439, 440], "recurr": [428, 429], "convolut": 428, "select": 428, "further": [428, 432], "read": 428, "export": 429, "introduct": [429, 444], "fast": 429, "recap": 429, "simpl": [429, 440], "stochast": 429, "aotinductor": 429, "free": 429, "c": 429, "onnx": 429, "run": [429, 430, 445], "rollout": [429, 430, 437, 438, 439, 440, 445], "creat": 430, "s": [431, 432], "output": 432, "log": 434, "first": 435, "divers": 437, "competit": 438, "group": 438, "critic": [438, 439], "pendulum": 440, "write": 440, "_step": 440, "simul": 440, "_reset": 440, "metadata": 440, "_spec": 440, "shape": 440, "seed": [440, 445], "wrap": 440, "test": 440, "our": 440, "pretrain": 441, "vanilla": 442, "integr": 442, "tensorclass": 442, "other": 442, "pytre": 442, "iter": 442, "over": 442, "fix": 442, "priorit": 442, "save": 442, "raw": 442, "imag": 442, "more": 442, "complex": 442, "config": 444, "sequenc": 444, "program": 444, "ensembl": 444, "meta": 444, "sync": 444, "multiprocess": 444, "async": 444, "frame_skip": 445, "deepmind": 445, "control": 445, "devic": 445, "close": 445, "access": 445, "attribut": 445, "kwarg": 445}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})