Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 86, 90, 91, 92, 93, 94, 98, 100, 101, 103, 105, 106, 107, 109, 111, 112, 113, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 140, 141, 143, 146, 147, 148, 149, 151, 154, 155, 156, 160, 161, 173, 174, 176, 177, 179, 180, 182, 187, 188, 190, 191, 194, 198, 203, 204, 208, 209, 210, 211, 213, 222, 223, 224, 225, 226, 228, 229, 230, 233, 236, 237, 239, 242, 246, 247, 249, 250, 251, 252, 254, 259, 260, 262, 264, 266, 267, 268, 272, 273, 275, 283, 288, 289, 291, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 316, 320, 321, 322, 323, 324, 326, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 356, 357, 358, 359, 360, 374, 376, 379, 383, 389, 390, 394, 395, 398, 405, 406, 407, 408, 411, 412, 413, 417, 418, 421, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 436, 437], "open": [0, 5, 7, 40, 41, 42, 56, 58, 63, 77, 91, 240, 418, 430, 431, 436], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "reinforc": [0, 3, 9, 138, 139, 180, 244, 249, 250, 251, 252, 256, 283, 304, 321, 322, 324, 327, 328, 329, 331, 336, 337, 343, 344, 345, 346, 410, 416, 418, 422, 423, 428, 432, 435, 436], "learn": [0, 3, 7, 8, 9, 18, 50, 122, 138, 139, 143, 146, 154, 180, 244, 249, 250, 251, 252, 256, 269, 276, 282, 283, 304, 321, 322, 324, 327, 328, 329, 331, 335, 336, 337, 342, 343, 344, 345, 346, 410, 413, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 436, 437], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 140, 180, 222, 276, 298, 307, 315, 321, 323, 338, 339, 341, 343, 385, 409, 411, 412, 413, 414, 417, 418, 419, 425, 428, 430, 431, 433, 434, 437], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 59, 73, 119, 120, 121, 130, 141, 163, 410, 411, 412, 413, 415, 417, 418, 419, 421, 422, 423, 425, 430, 431, 432, 437], "pytorch": [0, 1, 2, 3, 23, 119, 122, 126, 133, 134, 146, 147, 154, 155, 158, 159, 160, 180, 225, 226, 244, 260, 264, 275, 276, 394, 409, 411, 412, 414, 417, 419, 420, 424, 428, 430, 431, 432, 436, 437], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 34, 39, 50, 60, 61, 65, 70, 73, 119, 122, 126, 130, 133, 134, 137, 138, 139, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 170, 180, 201, 229, 237, 239, 244, 264, 282, 311, 383, 384, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 97, 98, 100, 104, 105, 106, 111, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 160, 168, 170, 172, 173, 174, 176, 177, 179, 180, 183, 184, 185, 187, 188, 190, 191, 192, 195, 198, 202, 203, 204, 208, 209, 213, 216, 220, 221, 222, 223, 227, 228, 229, 230, 231, 233, 235, 237, 239, 240, 243, 245, 246, 247, 249, 259, 260, 262, 263, 264, 266, 268, 269, 272, 273, 274, 276, 283, 292, 294, 298, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 374, 376, 383, 384, 389, 406, 407, 408, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "directli": [0, 4, 8, 14, 15, 16, 23, 100, 117, 118, 119, 122, 125, 126, 133, 134, 140, 146, 147, 154, 155, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 198, 199, 200, 204, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 233, 234, 236, 237, 239, 311, 339, 346, 408, 418, 419, 421, 422, 430, 431, 432, 434], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 97, 98, 100, 103, 104, 105, 106, 107, 109, 111, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 165, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 279, 281, 282, 283, 284, 285, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 337, 338, 339, 341, 342, 343, 344, 346, 347, 349, 354, 355, 356, 357, 358, 359, 362, 374, 375, 376, 385, 391, 394, 397, 398, 402, 404, 405, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437], "pypi": [0, 2, 436], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 87, 92, 98, 100, 105, 106, 119, 122, 126, 129, 132, 133, 134, 138, 139, 141, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 180, 184, 185, 202, 208, 223, 226, 228, 229, 230, 233, 235, 237, 238, 239, 244, 245, 246, 247, 260, 262, 263, 264, 266, 267, 273, 274, 275, 282, 284, 292, 293, 297, 299, 301, 307, 310, 311, 324, 335, 339, 346, 376, 383, 391, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 434, 436, 437], "more": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 98, 100, 111, 119, 122, 125, 126, 127, 129, 130, 132, 133, 134, 138, 139, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 180, 226, 229, 233, 238, 239, 240, 241, 242, 245, 256, 264, 267, 275, 298, 303, 304, 310, 311, 315, 321, 331, 339, 341, 356, 361, 369, 383, 390, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 436, 437], "about": [0, 3, 5, 7, 9, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 73, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 412, 413, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 436, 437], "instruct": [0, 6, 7, 10, 22, 190, 192, 413, 417, 418, 419, 420, 430, 431, 434], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 45, 62, 71, 72, 100, 146, 154, 299, 300, 301, 412, 417, 422, 424, 425, 427, 429, 431], "section": [0, 2, 3, 4, 24, 122, 260, 264, 418, 421, 422, 427, 430, 431], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 62, 65, 70, 78, 87, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 185, 202, 208, 223, 228, 229, 230, 233, 235, 239, 246, 247, 260, 263, 264, 267, 273, 292, 307, 310, 391, 417, 418, 419, 420, 421, 422, 430, 432], "pip": [0, 10, 421, 422, 423, 424, 425, 426, 427, 431, 436, 437], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 50, 54, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 72, 76, 77, 84, 87, 91, 92, 94, 98, 99, 100, 103, 105, 106, 114, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 171, 172, 173, 177, 179, 180, 181, 182, 183, 186, 187, 191, 195, 198, 203, 204, 206, 208, 209, 212, 213, 216, 217, 222, 223, 224, 227, 228, 230, 232, 233, 235, 236, 237, 239, 240, 246, 247, 253, 254, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 294, 298, 302, 304, 306, 307, 308, 309, 311, 314, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 385, 391, 398, 404, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 65, 70, 77, 142, 156, 157, 170, 260, 261, 262, 264, 265, 266, 270, 271, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 66, 67, 75, 77, 78, 79, 80, 81, 82, 91, 93, 98, 105, 106, 111, 113, 119, 122, 125, 126, 127, 132, 133, 134, 146, 147, 154, 155, 176, 177, 180, 181, 185, 195, 202, 204, 208, 209, 225, 226, 230, 233, 240, 247, 254, 260, 262, 264, 266, 267, 271, 273, 275, 278, 298, 302, 303, 304, 307, 308, 310, 311, 323, 333, 338, 339, 341, 375, 376, 393, 412, 416, 417, 418, 419, 420, 421, 422, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "low": [0, 3, 28, 31, 61, 70, 75, 78, 98, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 173, 183, 190, 198, 201, 223, 231, 290, 291, 292, 302, 304, 307, 311, 314, 417, 418, 419, 421, 430, 431, 432, 436], "high": [0, 3, 9, 28, 31, 40, 41, 42, 56, 58, 63, 71, 77, 78, 98, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 173, 183, 190, 198, 201, 203, 223, 231, 290, 291, 292, 302, 304, 307, 311, 314, 356, 361, 369, 417, 418, 419, 430, 431, 432, 434, 436], "level": [0, 2, 3, 4, 22, 31, 32, 43, 57, 62, 67, 71, 72, 100, 125, 127, 180, 221, 229, 262, 266, 338, 417, 418, 421, 425, 436], "abstract": [0, 3, 8, 74, 75, 115, 122, 205, 268, 360, 386, 395, 414, 419, 421, 432, 436], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 96, 100, 103, 104, 105, 106, 107, 109, 111, 113, 119, 122, 123, 125, 126, 127, 132, 133, 134, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 165, 171, 172, 173, 175, 176, 177, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 198, 200, 201, 202, 203, 206, 208, 213, 216, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 243, 244, 252, 254, 259, 260, 261, 262, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 279, 284, 287, 297, 302, 303, 306, 307, 308, 310, 311, 312, 313, 314, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 350, 351, 354, 355, 356, 357, 358, 359, 360, 374, 383, 384, 391, 394, 404, 408, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 76, 78, 79, 80, 81, 82, 179, 190, 294, 339, 412, 436], "effici": [0, 1, 2, 4, 8, 119, 122, 126, 133, 134, 146, 147, 154, 155, 260, 276, 324, 412, 417, 418, 419, 420, 421, 424, 425, 427, 429, 430, 431, 433, 434, 436], "modular": [0, 313, 421, 434, 436], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 144, 145, 146, 147, 154, 155, 156, 157, 230, 239, 409, 418, 420, 421, 422, 425, 428, 436], "properli": [0, 1, 3, 78, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 185, 262, 266, 419, 426, 430, 431, 432, 436], "test": [0, 3, 5, 117, 118, 119, 122, 126, 131, 132, 133, 134, 138, 139, 146, 147, 154, 155, 160, 188, 228, 233, 262, 266, 389, 404, 419, 420, 421, 433, 436], "The": [0, 1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 97, 98, 100, 103, 105, 106, 107, 111, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 158, 159, 160, 168, 171, 172, 173, 176, 177, 179, 180, 184, 185, 187, 188, 191, 192, 193, 198, 201, 202, 204, 206, 208, 213, 215, 216, 217, 220, 221, 222, 223, 225, 228, 229, 230, 233, 235, 236, 237, 239, 241, 242, 243, 244, 249, 250, 251, 252, 253, 256, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 276, 280, 282, 283, 285, 286, 287, 297, 298, 299, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 362, 374, 376, 378, 381, 382, 383, 384, 385, 390, 404, 406, 407, 410, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437], "code": [0, 3, 5, 7, 8, 14, 15, 61, 65, 119, 122, 126, 132, 133, 134, 146, 147, 154, 155, 208, 230, 233, 242, 260, 261, 262, 264, 265, 266, 307, 311, 313, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437], "aim": [0, 2, 3, 7, 45, 66, 67, 208, 233, 235, 267, 397, 411, 412, 413, 417, 418, 436], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 40, 41, 42, 56, 58, 60, 63, 70, 77, 87, 91, 93, 107, 109, 113, 114, 116, 117, 118, 119, 125, 127, 131, 141, 143, 146, 148, 151, 163, 177, 180, 192, 198, 204, 223, 224, 227, 231, 256, 280, 282, 291, 294, 303, 304, 307, 310, 313, 331, 339, 356, 357, 358, 359, 381, 410, 412, 414, 419, 420, 422, 423, 431, 432, 434, 436], "research": [0, 7, 9, 138, 139, 242, 436], "most": [0, 1, 2, 3, 7, 8, 14, 15, 50, 52, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 190, 236, 417, 419, 421, 422, 423, 424, 425, 426, 427, 432, 436, 437], "written": [0, 1, 2, 3, 36, 40, 41, 42, 56, 57, 58, 60, 62, 63, 68, 71, 72, 76, 77, 89, 91, 98, 100, 105, 106, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 146, 147, 151, 154, 155, 171, 172, 173, 180, 192, 195, 200, 201, 216, 221, 224, 225, 230, 236, 239, 240, 245, 283, 298, 307, 310, 311, 315, 321, 323, 338, 341, 343, 355, 374, 375, 376, 412, 413, 414, 417, 420, 421, 423, 429, 432, 436], "highli": [0, 2, 422, 436, 437], "wai": [0, 1, 2, 3, 4, 100, 111, 130, 180, 208, 211, 228, 229, 235, 236, 262, 264, 266, 341, 356, 357, 358, 359, 412, 417, 418, 419, 421, 422, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 413, 417, 418, 419, 422, 423, 424, 427, 430, 431, 436, 437], "swap": [0, 1, 3, 125, 236, 419, 421, 433, 436], "compon": [0, 1, 2, 3, 57, 61, 62, 71, 72, 91, 92, 93, 94, 100, 107, 109, 113, 256, 285, 303, 304, 309, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 390, 394, 417, 418, 419, 420, 421, 423, 424, 427, 429, 430, 431, 432, 433, 436], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 50, 57, 59, 62, 64, 71, 72, 73, 88, 89, 96, 100, 109, 114, 119, 122, 123, 126, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 166, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 248, 249, 253, 256, 257, 262, 266, 281, 284, 285, 291, 293, 302, 305, 306, 314, 317, 318, 320, 327, 340, 374, 376, 391, 408, 410, 416, 418, 420, 421, 423, 425, 426, 427, 428, 433, 435], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 34, 39, 43, 57, 59, 60, 61, 62, 65, 67, 70, 71, 72, 100, 111, 116, 119, 122, 123, 126, 130, 133, 134, 137, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 187, 191, 198, 201, 223, 227, 230, 231, 237, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 293, 294, 302, 304, 306, 309, 314, 317, 338, 376, 417, 418, 420, 421, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "write": [0, 2, 3, 8, 23, 40, 41, 42, 45, 50, 56, 57, 58, 59, 62, 63, 71, 72, 76, 77, 98, 100, 105, 109, 116, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 174, 176, 177, 179, 180, 181, 183, 184, 185, 189, 192, 193, 194, 196, 199, 200, 206, 207, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 232, 233, 234, 236, 237, 239, 298, 310, 311, 313, 315, 324, 325, 326, 328, 329, 330, 337, 342, 344, 346, 347, 355, 360, 376, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 97, 98, 100, 104, 119, 122, 126, 133, 134, 141, 146, 147, 152, 153, 154, 155, 171, 172, 177, 216, 220, 229, 230, 237, 239, 254, 260, 262, 266, 283, 310, 311, 316, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 383, 413, 417, 419, 422, 424, 430, 431, 432, 436, 437], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 105, 106, 119, 122, 126, 133, 134, 146, 147, 148, 149, 150, 154, 155, 181, 184, 187, 189, 191, 204, 208, 213, 220, 223, 229, 230, 233, 235, 239, 244, 270, 271, 282, 294, 310, 321, 322, 324, 325, 337, 341, 342, 344, 346, 347, 362, 417, 419, 421, 430, 431, 432, 434, 436, 437], "littl": [0, 1, 3, 73, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 244, 321, 323, 338, 341, 343, 419, 420, 421, 425, 434, 436, 437], "effort": [0, 3, 432, 434, 436], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 103, 104, 105, 106, 107, 109, 111, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 143, 146, 147, 148, 149, 150, 154, 155, 156, 158, 159, 160, 168, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 204, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 354, 356, 357, 358, 359, 360, 374, 375, 383, 384, 385, 387, 389, 391, 394, 396, 397, 398, 404, 408, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "repo": [0, 6, 180, 224, 233, 411, 431, 436], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 105, 106, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 146, 147, 151, 154, 155, 171, 239, 244, 311, 326, 329, 337, 354, 413, 424, 436], "align": [0, 260, 264, 436], "exist": [0, 2, 3, 4, 18, 21, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 63, 65, 70, 76, 77, 91, 119, 122, 126, 133, 134, 146, 147, 154, 155, 181, 189, 228, 230, 239, 240, 254, 311, 324, 344, 398, 408, 430, 431, 436, 437], "ecosystem": [0, 421, 425, 436], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 91, 93, 100, 103, 105, 111, 113, 119, 122, 123, 126, 130, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 177, 180, 188, 202, 221, 222, 223, 224, 225, 227, 228, 229, 230, 239, 241, 260, 262, 264, 266, 272, 274, 291, 304, 306, 311, 321, 324, 338, 339, 341, 343, 376, 413, 417, 418, 419, 420, 421, 422, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "dataset": [0, 38, 40, 41, 42, 45, 56, 57, 58, 59, 62, 63, 64, 69, 71, 72, 76, 77, 87, 90, 98, 100, 103, 105, 106, 143, 188, 237, 376, 410, 417, 418, 422, 433, 434, 436, 437], "pillar": [0, 436], "environ": [0, 1, 2, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 65, 66, 67, 75, 77, 78, 79, 80, 81, 82, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 174, 176, 177, 179, 180, 181, 185, 187, 188, 189, 190, 191, 196, 202, 203, 204, 208, 209, 210, 213, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 236, 237, 240, 243, 245, 262, 266, 268, 269, 306, 328, 332, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 384, 385, 387, 389, 397, 398, 399, 400, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 421, 423, 424, 425, 426, 428, 433, 434, 435], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 64, 65, 70, 76, 77, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 180, 187, 208, 223, 233, 235, 238, 239, 246, 247, 248, 253, 255, 262, 266, 267, 268, 269, 273, 274, 281, 284, 293, 299, 300, 301, 305, 310, 316, 318, 321, 322, 323, 324, 326, 327, 328, 329, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 354, 394, 399, 400, 401, 410, 411, 413, 414, 416, 419, 422, 425, 428, 430, 431, 432, 434, 435, 437], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 165, 172, 174, 177, 179, 180, 187, 188, 189, 191, 193, 195, 198, 200, 204, 210, 213, 220, 221, 227, 229, 230, 231, 236, 239, 243, 244, 256, 259, 262, 266, 269, 272, 273, 283, 285, 294, 297, 298, 303, 306, 307, 308, 310, 311, 313, 314, 315, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 374, 376, 383, 385, 391, 394, 396, 399, 404, 406, 407, 408, 410, 412, 413, 414, 416, 420, 421, 422, 423, 424, 428, 432, 433, 434, 435, 437], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 34, 39, 50, 60, 61, 62, 64, 65, 70, 105, 106, 117, 118, 119, 122, 126, 131, 132, 133, 134, 139, 146, 147, 148, 149, 154, 155, 161, 180, 208, 213, 223, 235, 239, 242, 245, 246, 247, 253, 260, 262, 264, 266, 317, 318, 319, 320, 339, 404, 410, 415, 417, 419, 421, 423, 424, 425, 431, 432, 434, 436, 437], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 91, 93, 97, 98, 111, 113, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 158, 160, 177, 179, 181, 184, 185, 186, 195, 198, 201, 202, 204, 208, 216, 223, 225, 228, 229, 230, 233, 235, 239, 240, 260, 262, 263, 264, 266, 269, 273, 285, 291, 292, 297, 302, 304, 306, 307, 309, 310, 311, 321, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 355, 356, 357, 358, 359, 374, 385, 397, 407, 412, 413, 418, 419, 421, 423, 424, 426, 430, 431, 433, 434, 436, 437], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 111, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 158, 160, 177, 179, 181, 184, 195, 198, 201, 204, 208, 216, 223, 225, 228, 229, 230, 233, 235, 239, 240, 260, 262, 263, 264, 265, 266, 269, 273, 291, 292, 302, 307, 310, 311, 324, 344, 355, 365, 366, 367, 368, 370, 371, 372, 373, 374, 407, 412, 413, 418, 419, 421, 423, 426, 430, 431, 432, 433, 434, 436, 437], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 50, 64, 68, 105, 106, 119, 122, 126, 133, 134, 146, 147, 150, 154, 155, 177, 180, 213, 221, 239, 244, 262, 266, 283, 391, 394, 396, 399, 400, 404, 406, 407, 410, 413, 414, 421, 434, 437], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 90, 97, 98, 100, 101, 103, 105, 106, 107, 112, 115, 116, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 171, 172, 173, 180, 184, 187, 191, 198, 208, 220, 223, 228, 229, 230, 233, 235, 236, 237, 239, 243, 246, 247, 260, 261, 264, 265, 267, 269, 272, 273, 298, 303, 304, 307, 309, 310, 311, 315, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 362, 380, 385, 397, 404, 405, 406, 407, 408, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437], "etc": [0, 2, 3, 7, 8, 27, 34, 39, 45, 50, 60, 61, 65, 70, 75, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 220, 230, 239, 240, 267, 273, 291, 413, 418, 419, 425, 434, 436, 437], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 100, 104, 107, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 160, 165, 168, 172, 173, 176, 180, 187, 191, 192, 200, 203, 204, 220, 221, 223, 227, 228, 229, 230, 237, 239, 241, 244, 246, 247, 267, 272, 273, 274, 283, 294, 306, 312, 313, 321, 323, 338, 341, 343, 346, 350, 351, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 385, 394, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "few": [0, 2, 8, 106, 126, 376, 385, 419, 420, 423, 430, 431, 434, 436, 437], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 56, 58, 78, 119, 122, 125, 126, 127, 128, 133, 134, 146, 147, 151, 154, 155, 158, 159, 187, 191, 311, 315, 341, 378, 412, 417, 419, 420, 430, 431, 432, 436, 437], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 92, 98, 105, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 184, 208, 223, 228, 229, 230, 233, 235, 239, 246, 247, 260, 261, 264, 265, 310, 374, 389, 394, 412, 417, 419, 420, 421, 423, 425, 426, 430, 431, 432, 434, 436, 437], "standard": [0, 2, 3, 52, 119, 204, 215, 237, 241, 242, 243, 257, 269, 275, 276, 281, 302, 323, 338, 341, 346, 347, 356, 357, 358, 359, 417, 418, 422, 423, 431, 434, 436], "numpi": [0, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 127, 133, 134, 146, 147, 154, 155, 198, 226, 231, 240, 394, 421, 432, 434, 436, 437], "common": [0, 2, 3, 4, 75, 126, 131, 174, 192, 299, 300, 301, 305, 321, 322, 323, 324, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 404, 411, 412, 413, 414, 417, 419, 423, 426, 429, 430, 431, 432, 433, 436, 437], "openai": [0, 7, 24, 125, 127, 134, 151, 419, 432, 436, 437], "gym": [0, 1, 3, 4, 8, 14, 15, 16, 17, 21, 22, 119, 122, 123, 125, 126, 127, 128, 130, 133, 134, 138, 139, 141, 142, 146, 147, 151, 154, 155, 158, 159, 164, 168, 170, 176, 180, 183, 192, 199, 200, 204, 206, 211, 213, 216, 223, 229, 236, 237, 239, 240, 404, 411, 417, 418, 419, 420, 422, 426, 427, 432, 433, 434], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 91, 93, 97, 98, 100, 105, 106, 113, 119, 120, 121, 122, 125, 126, 127, 128, 130, 132, 133, 134, 141, 142, 146, 147, 148, 149, 151, 154, 155, 173, 176, 180, 181, 183, 184, 185, 187, 188, 190, 191, 195, 198, 202, 204, 208, 209, 213, 220, 221, 222, 223, 224, 228, 229, 230, 233, 235, 237, 239, 240, 244, 264, 266, 272, 273, 298, 302, 303, 307, 308, 310, 311, 312, 313, 321, 323, 324, 325, 329, 330, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 356, 357, 358, 359, 360, 376, 383, 398, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 436, 437], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 208, 209, 211, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 285, 286, 287, 290, 291, 292, 294, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 378, 381, 383, 385, 387, 388, 389, 390, 391, 392, 394, 398, 404, 406, 407, 408, 412, 420, 422, 425, 430, 431, 432, 434, 436], "On": [0, 3, 7, 18, 19, 20, 21, 31, 261, 265, 412, 418, 430, 431], "end": [0, 2, 3, 14, 15, 17, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 77, 89, 98, 100, 104, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 192, 198, 206, 221, 222, 228, 230, 239, 246, 247, 260, 261, 264, 265, 268, 306, 324, 344, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "come": [0, 1, 2, 3, 8, 45, 50, 111, 119, 122, 126, 132, 133, 134, 137, 146, 147, 154, 155, 187, 191, 297, 298, 299, 300, 301, 307, 315, 321, 323, 338, 341, 343, 376, 417, 418, 419, 420, 424, 425, 426, 427, 430, 431, 434, 436, 437], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 77, 91, 92, 93, 100, 104, 107, 113, 119, 122, 124, 126, 127, 132, 133, 134, 138, 139, 140, 146, 147, 148, 149, 154, 155, 158, 159, 160, 169, 170, 172, 174, 176, 177, 180, 181, 184, 187, 188, 191, 198, 199, 200, 201, 208, 213, 221, 222, 223, 224, 228, 229, 230, 233, 235, 237, 239, 240, 260, 262, 264, 266, 268, 272, 273, 280, 282, 283, 291, 297, 302, 310, 311, 323, 324, 330, 335, 338, 339, 341, 344, 360, 376, 384, 385, 389, 391, 400, 408, 411, 412, 413, 415, 417, 418, 419, 420, 421, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437], "re": [0, 2, 3, 8, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 77, 100, 104, 119, 122, 126, 133, 134, 146, 147, 154, 155, 195, 239, 266, 270, 271, 274, 307, 311, 383, 414, 417, 419, 420, 422, 424, 429, 430, 432, 436, 437], "usabl": [0, 414, 420, 436], "function": [0, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 93, 94, 100, 107, 109, 113, 119, 122, 123, 126, 127, 133, 134, 146, 147, 154, 155, 160, 168, 170, 171, 172, 176, 177, 187, 191, 198, 227, 228, 230, 231, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 277, 278, 279, 281, 283, 286, 287, 289, 292, 294, 299, 300, 301, 302, 304, 306, 307, 309, 310, 311, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 394, 404, 410, 412, 417, 420, 421, 422, 423, 426, 429, 432, 434, 437], "cost": [0, 2, 30, 92, 321, 323, 338, 341, 343, 413, 417, 418, 421, 430, 431, 432, 434], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 90, 92, 98, 100, 101, 103, 105, 106, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 154, 155, 158, 159, 162, 163, 164, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 279, 281, 284, 286, 287, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 306, 307, 309, 310, 311, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 380, 384, 394, 397, 399, 404, 405, 406, 407, 408, 410, 412, 414, 417, 418, 419, 421, 423, 424, 426, 429, 430, 431, 432, 433, 434, 436, 437], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 65, 70, 71, 72, 73, 76, 77, 93, 97, 98, 101, 105, 113, 119, 122, 123, 126, 130, 133, 134, 137, 141, 146, 147, 148, 149, 154, 155, 179, 180, 187, 191, 198, 223, 226, 228, 237, 239, 262, 266, 272, 273, 283, 304, 309, 410, 414, 417, 418, 420, 421, 422, 430, 431, 432, 433, 434, 436, 437], "good": [0, 1, 4, 9, 146, 417, 419, 420, 421, 423, 431, 436, 437], "runtim": [0, 2, 3, 23, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 432], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 65, 66, 67, 70, 75, 76, 78, 79, 80, 81, 82, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 134, 146, 147, 151, 154, 155, 158, 159, 161, 187, 191, 198, 203, 225, 228, 230, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 274, 277, 278, 281, 282, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 323, 324, 333, 341, 344, 389, 394, 413, 417, 418, 419, 420, 421, 422, 425, 427, 429, 430, 431, 432, 437], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 34, 39, 50, 57, 60, 61, 62, 64, 65, 70, 71, 72, 89, 98, 100, 105, 106, 109, 116, 117, 118, 119, 122, 125, 126, 127, 131, 132, 133, 134, 137, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 180, 185, 221, 223, 237, 239, 245, 262, 266, 283, 299, 300, 301, 311, 324, 330, 335, 339, 346, 376, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437], "read": [0, 2, 3, 7, 23, 31, 32, 36, 43, 57, 59, 62, 64, 67, 68, 71, 72, 91, 92, 93, 94, 97, 100, 107, 109, 113, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 189, 190, 192, 193, 194, 195, 196, 199, 200, 206, 207, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 232, 233, 234, 236, 237, 239, 245, 279, 298, 299, 300, 301, 303, 306, 307, 310, 311, 313, 315, 316, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 356, 357, 358, 359, 360, 376, 389, 394, 412, 417, 418, 419, 421, 422, 423, 429, 430, 431, 432, 433, 436, 437], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 414, 417, 422, 425, 429, 433, 437], "beyond": [0, 45, 119, 122, 126, 133, 134, 146, 147, 154, 155, 421], "api": [0, 2, 3, 5, 23, 31, 32, 34, 43, 45, 60, 67, 70, 75, 119, 122, 148, 149, 151, 208, 235, 237, 244, 412, 413, 414, 421, 422, 423, 424, 425, 426, 430, 431, 432, 434, 436, 437], "check": [0, 2, 3, 4, 5, 6, 7, 9, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 83, 85, 88, 89, 96, 105, 119, 122, 123, 125, 126, 127, 133, 134, 140, 146, 147, 154, 155, 160, 161, 180, 181, 185, 194, 200, 209, 223, 226, 230, 239, 240, 254, 262, 266, 298, 303, 304, 307, 308, 309, 310, 311, 324, 335, 346, 376, 409, 412, 413, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "paper": [0, 117, 118, 120, 121, 128, 131, 132, 138, 139, 141, 142, 151, 158, 159, 208, 233, 235, 247, 260, 284, 293, 328, 336, 346, 417, 419, 430, 431], "releas": [0, 4, 7, 10, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 344], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 396, 404, 414, 417], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 70, 71, 72, 77, 100, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 198, 223, 228, 237, 239, 244, 312, 313, 376, 417, 419, 420, 424, 427, 430, 431, 432, 437], "make": [0, 2, 3, 4, 7, 11, 27, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 70, 71, 72, 75, 77, 100, 103, 107, 109, 116, 119, 122, 126, 127, 130, 132, 133, 134, 136, 142, 146, 147, 154, 155, 160, 171, 173, 185, 193, 201, 204, 208, 209, 213, 217, 221, 225, 229, 233, 239, 242, 245, 260, 261, 262, 264, 265, 266, 272, 273, 275, 303, 311, 321, 323, 338, 341, 343, 356, 357, 358, 359, 374, 391, 400, 408, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "sure": [0, 3, 4, 7, 34, 107, 119, 126, 130, 185, 213, 303, 408, 412, 417, 419, 420, 421, 424, 430, 431, 432, 434, 436, 437], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 34, 39, 50, 60, 61, 65, 70, 75, 78, 87, 88, 89, 96, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 203, 225, 237, 239, 331, 339, 412, 413, 418, 419, 420, 421, 430, 431, 432, 434], "enjoi": [0, 2, 3, 425], "latest": [0, 2, 3, 10, 141, 144, 145, 148, 149, 391, 419, 430, 431, 432, 436], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 34, 54, 60, 70, 75, 76, 98, 105, 106, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 152, 153, 154, 155, 160, 177, 180, 195, 198, 200, 206, 223, 224, 232, 237, 242, 246, 247, 257, 258, 260, 261, 262, 264, 265, 266, 267, 272, 275, 276, 311, 318, 321, 323, 338, 341, 343, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 408, 412, 413, 417, 418, 419, 420, 421, 423, 424, 425, 427, 432, 434, 436, 437], "recent": [0, 7, 236, 240, 437], "version": [0, 1, 2, 3, 6, 26, 27, 29, 32, 34, 35, 39, 43, 44, 47, 49, 50, 53, 55, 56, 58, 60, 61, 64, 65, 70, 79, 80, 81, 82, 105, 119, 122, 125, 126, 127, 128, 133, 134, 141, 142, 146, 147, 148, 151, 154, 155, 158, 159, 171, 180, 227, 236, 237, 239, 240, 242, 262, 266, 274, 280, 301, 321, 323, 338, 339, 341, 343, 344, 356, 359, 411, 412, 413, 417, 419, 420, 421, 422, 424, 427, 430, 431, 432, 433, 437], "although": [0, 1, 3, 8, 27, 34, 39, 60, 61, 65, 70, 78, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 413, 414, 417, 418, 425, 434], "core": [0, 2, 3, 8, 414, 420, 423, 436], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 107, 109, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 237, 239, 311, 425], "backward": [0, 8, 27, 34, 39, 50, 60, 61, 65, 70, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239, 260, 261, 264, 265, 282, 311, 321, 322, 324, 325, 329, 330, 337, 341, 342, 343, 344, 346, 347, 417, 419, 420, 421, 424, 425, 427, 430, 431, 432], "compat": [0, 2, 3, 7, 14, 15, 16, 23, 27, 34, 39, 50, 60, 61, 65, 70, 92, 100, 103, 105, 106, 107, 111, 119, 122, 126, 128, 133, 134, 143, 146, 147, 154, 155, 180, 221, 233, 237, 239, 240, 260, 261, 262, 264, 265, 266, 308, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 350, 417, 420, 434], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 39, 43, 45, 46, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 70, 71, 72, 73, 76, 77, 87, 91, 93, 97, 98, 100, 105, 106, 111, 113, 117, 118, 119, 122, 123, 126, 131, 132, 133, 134, 137, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 165, 172, 176, 177, 179, 181, 184, 185, 187, 189, 190, 191, 200, 201, 204, 206, 208, 210, 213, 216, 220, 221, 222, 223, 228, 229, 230, 233, 235, 237, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 281, 282, 283, 291, 294, 302, 303, 304, 306, 310, 314, 315, 321, 322, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 355, 356, 357, 358, 359, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 385, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424, 429, 430, 431, 432, 434, 435, 436, 437], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 93, 97, 98, 100, 105, 106, 113, 117, 118, 119, 122, 125, 126, 128, 129, 131, 132, 133, 134, 140, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 279, 282, 283, 286, 287, 290, 291, 292, 294, 298, 302, 304, 309, 310, 311, 313, 314, 317, 318, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 362, 363, 364, 385, 392, 404, 408, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 34, 57, 60, 62, 70, 71, 72, 92, 126, 133, 146, 154, 201, 208, 211, 235, 324, 327, 339, 413, 414, 417, 418, 419, 420, 423, 425, 434, 436, 437], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 103, 105, 106, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 244, 245, 255, 256, 259, 262, 266, 268, 269, 272, 273, 283, 284, 285, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 374, 375, 385, 389, 390, 391, 393, 394, 410, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 437], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 91, 200, 210, 228, 229, 299, 300, 301, 310, 329, 337, 346, 410, 417, 430, 432, 436], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 87, 89, 91, 100, 108, 114, 119, 122, 126, 133, 134, 146, 147, 154, 155, 156, 170, 208, 235, 239, 269, 378, 383, 394, 414, 418, 421, 427, 430], "root": [0, 2, 3, 31, 32, 43, 45, 57, 62, 67, 71, 72, 77, 88, 89, 96, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 180, 202, 224, 225, 262, 263, 266, 291, 292, 413, 420, 422, 430, 431, 432, 434, 437], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 57, 73, 97, 98, 117, 118, 120, 121, 128, 130, 131, 132, 138, 139, 141, 142, 143, 144, 145, 148, 149, 151, 156, 157, 158, 159, 180, 208, 233, 242, 248, 249, 250, 251, 252, 253, 256, 257, 258, 264, 269, 270, 271, 276, 277, 278, 282, 283, 284, 286, 287, 293, 304, 321, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 356, 361, 369, 409, 428, 433, 436], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 117, 118, 120, 121, 125, 128, 131, 132, 138, 139, 141, 142, 144, 145, 148, 149, 151, 156, 157, 158, 159, 177, 180, 233, 242, 423, 427, 430, 431, 436], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 117, 118, 120, 121, 128, 130, 131, 132, 138, 139, 141, 142, 144, 145, 148, 149, 151, 156, 157, 158, 159, 180, 242, 436], "setup": [0, 7, 117, 118, 130, 131, 132, 156], "py": [0, 3, 24, 125, 127, 170, 180, 254, 284, 293, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437], "develop": [0, 3, 4, 7, 45, 130, 417, 436], "A": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 107, 111, 112, 113, 114, 115, 119, 122, 124, 126, 128, 129, 133, 134, 146, 147, 150, 151, 154, 155, 160, 166, 171, 173, 175, 176, 177, 179, 180, 183, 185, 188, 190, 196, 200, 202, 208, 209, 211, 218, 223, 225, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 256, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 282, 294, 302, 303, 304, 306, 307, 308, 311, 313, 314, 317, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 354, 356, 357, 358, 359, 360, 362, 374, 377, 378, 381, 383, 384, 387, 394, 396, 404, 410, 413, 416, 417, 419, 421, 423, 424, 425, 428, 432, 435, 437], "seri": [0, 2, 3, 7, 8, 54, 90, 101, 111, 112, 115, 116, 154, 203, 229, 376, 412, 413, 417, 418, 419, 426, 427, 430, 431, 434, 437], "quick": [0, 421], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 45, 64, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 179, 198, 201, 224, 229, 239, 242, 341, 411, 412, 413, 417, 418, 419, 420, 423, 427, 430, 431, 432, 434, 436, 437], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 98, 100, 101, 103, 104, 105, 106, 111, 113, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 134, 138, 139, 140, 141, 142, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 164, 168, 171, 172, 173, 176, 177, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 198, 200, 201, 202, 203, 204, 208, 209, 212, 213, 216, 217, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 237, 239, 240, 245, 246, 247, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 283, 294, 298, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 370, 371, 372, 373, 374, 380, 383, 384, 390, 391, 394, 396, 398, 404, 408, 411, 413, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 431, 432, 434, 436, 437], "hurri": [0, 422], "last": [0, 1, 2, 3, 4, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 66, 67, 75, 77, 78, 79, 80, 81, 82, 104, 105, 106, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 155, 165, 173, 176, 179, 195, 202, 204, 209, 222, 224, 226, 240, 241, 246, 247, 259, 260, 262, 264, 266, 267, 270, 271, 277, 288, 291, 294, 302, 306, 311, 324, 356, 358, 359, 418, 419, 420, 421, 422, 423, 430, 431, 432, 433, 434, 436, 437], "item": [0, 2, 3, 8, 14, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 66, 67, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 87, 92, 98, 100, 104, 111, 133, 173, 188, 194, 229, 270, 271, 325, 326, 328, 385, 413, 414, 417, 419, 420, 424, 425, 430, 431, 432, 434], "navig": [0, 431], "previou": [0, 3, 4, 10, 50, 57, 62, 64, 71, 72, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 195, 223, 239, 260, 264, 287, 302, 419, 420, 421, 422, 423, 427, 432, 437], "whenev": [0, 1, 2, 3, 23, 34, 50, 57, 60, 62, 70, 71, 72, 77, 97, 98, 105, 106, 120, 121, 125, 127, 128, 138, 139, 151, 158, 159, 170, 188, 195, 199, 230, 236, 339, 356, 357, 358, 359, 374, 396, 412, 426, 434], "want": [0, 2, 3, 6, 7, 8, 34, 60, 70, 106, 180, 204, 282, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 412, 417, 418, 419, 420, 421, 422, 424, 425, 426, 430, 431, 432, 433, 434, 436, 437], "ted": [0, 36, 51, 68, 69, 88, 89, 96, 410, 416, 428, 435], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 65, 70, 71, 72, 75, 77, 100, 105, 106, 111, 117, 118, 119, 122, 126, 130, 131, 132, 133, 134, 138, 139, 141, 146, 147, 148, 149, 154, 155, 158, 159, 160, 180, 184, 188, 198, 202, 208, 221, 223, 226, 227, 228, 229, 230, 233, 235, 237, 239, 241, 244, 246, 247, 254, 259, 262, 266, 271, 272, 273, 276, 282, 284, 291, 293, 299, 301, 304, 306, 307, 310, 311, 314, 322, 324, 329, 335, 337, 339, 344, 346, 356, 357, 358, 359, 360, 374, 412, 413, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "modul": [0, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 60, 61, 64, 65, 70, 111, 117, 118, 119, 122, 126, 133, 134, 137, 140, 143, 146, 147, 154, 155, 170, 179, 184, 188, 190, 192, 198, 200, 208, 209, 222, 223, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 352, 354, 356, 357, 358, 359, 360, 374, 394, 401, 404, 410, 413, 414, 416, 418, 419, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435], "optim": [0, 1, 2, 8, 27, 34, 39, 50, 60, 61, 64, 65, 70, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 243, 269, 275, 276, 282, 291, 322, 324, 339, 340, 341, 344, 351, 389, 390, 394, 404, 413, 414, 416, 419, 420, 421, 422, 423, 425, 428, 430, 431, 432, 435], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 50, 57, 62, 71, 72, 100, 104, 119, 122, 126, 133, 134, 146, 147, 151, 154, 155, 160, 177, 180, 195, 204, 208, 235, 283, 306, 322, 325, 328, 330, 342, 344, 346, 347, 376, 385, 391, 394, 396, 397, 398, 404, 414, 416, 417, 420, 421, 422, 423, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437], "storag": [0, 1, 8, 27, 34, 36, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 65, 68, 70, 71, 72, 74, 77, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 104, 105, 106, 108, 109, 110, 111, 113, 114, 119, 122, 124, 126, 133, 134, 146, 147, 154, 155, 179, 180, 187, 191, 213, 239, 410, 414, 416, 418, 419, 420, 421, 422, 424, 427, 428, 430, 431, 433, 435], "log": [0, 3, 4, 8, 11, 64, 254, 255, 256, 270, 271, 279, 291, 292, 303, 304, 307, 311, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 347, 354, 383, 387, 388, 389, 394, 404, 412, 413, 414, 416, 417, 418, 419, 422, 423, 427, 428, 430, 431, 432, 435, 436], "your": [0, 2, 7, 8, 10, 11, 14, 15, 18, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 130, 133, 134, 137, 146, 147, 148, 149, 154, 155, 237, 239, 311, 384, 408, 410, 411, 412, 413, 416, 418, 419, 420, 422, 423, 424, 425, 426, 428, 430, 431, 434, 435, 436], "own": [0, 1, 14, 15, 17, 22, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 239, 376, 410, 413, 416, 418, 419, 422, 428, 430, 431, 432, 435], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 64, 65, 70, 76, 77, 87, 119, 122, 126, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 160, 187, 196, 208, 222, 227, 230, 233, 235, 239, 241, 242, 244, 249, 251, 259, 262, 266, 283, 321, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 356, 394, 396, 404, 410, 412, 414, 416, 418, 422, 425, 426, 428, 433, 434, 435, 436, 437], "loop": [0, 8, 40, 41, 42, 56, 58, 63, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 259, 282, 283, 341, 394, 413, 414, 416, 417, 418, 422, 424, 425, 426, 428, 429, 434, 435, 436], "ppo": [0, 4, 8, 307, 311, 323, 338, 341, 410, 412, 416, 417, 418, 421, 423, 424, 428, 430, 435], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 111, 119, 120, 121, 122, 123, 125, 126, 127, 133, 134, 141, 146, 147, 154, 155, 180, 183, 184, 185, 193, 199, 200, 204, 211, 213, 217, 218, 221, 223, 224, 225, 228, 229, 230, 231, 237, 239, 245, 262, 266, 404, 412, 416, 418, 419, 422, 423, 424, 428, 435, 436, 437], "introduct": [0, 413, 416, 422, 428, 430, 431, 435, 437], "multi": [0, 1, 7, 9, 27, 34, 39, 50, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 88, 89, 96, 119, 122, 126, 133, 134, 138, 139, 146, 147, 152, 153, 154, 155, 201, 230, 239, 260, 262, 264, 266, 267, 272, 273, 274, 306, 311, 354, 356, 357, 358, 359, 410, 416, 417, 418, 419, 420, 422, 423, 428, 432, 435, 436], "agent": [0, 9, 66, 67, 137, 138, 139, 144, 145, 148, 149, 152, 153, 156, 157, 158, 159, 161, 201, 220, 221, 222, 270, 271, 272, 273, 274, 276, 284, 293, 323, 338, 341, 354, 410, 416, 422, 428, 432, 435], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 31, 34, 36, 39, 45, 50, 60, 61, 64, 65, 68, 70, 77, 100, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 262, 266, 268, 269, 306, 310, 339, 374, 375, 376, 384, 398, 399, 400, 404, 406, 407, 408, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 105, 106, 111, 113, 117, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 281, 282, 283, 284, 285, 291, 292, 293, 294, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 369, 374, 376, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 404, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437], "pretrain": [0, 416, 428, 435], "recurr": [0, 2, 179, 260, 261, 262, 264, 266, 287, 297, 416, 418, 423, 428, 434, 435], "dqn": [0, 2, 173, 192, 247, 256, 303, 304, 321, 322, 324, 325, 326, 328, 330, 331, 332, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 354, 401, 410, 412, 416, 421, 423, 424, 427, 428, 435], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 36, 50, 68, 117, 118, 119, 122, 126, 133, 134, 140, 146, 147, 150, 154, 155, 169, 190, 200, 202, 222, 225, 241, 244, 245, 256, 259, 262, 266, 272, 273, 276, 283, 285, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 321, 322, 323, 324, 325, 329, 330, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 389, 396, 399, 400, 404, 406, 407, 410, 412, 414, 416, 418, 422, 424, 425, 428, 433, 434, 435, 436, 437], "replai": [0, 8, 16, 50, 57, 62, 71, 72, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 111, 112, 116, 179, 180, 190, 209, 213, 223, 229, 239, 324, 325, 326, 328, 329, 330, 337, 342, 344, 346, 347, 391, 394, 402, 404, 410, 413, 414, 416, 421, 428, 432, 433, 435], "buffer": [0, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 116, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 179, 180, 184, 188, 190, 198, 208, 209, 213, 223, 228, 229, 230, 233, 235, 239, 241, 283, 302, 310, 313, 324, 325, 326, 328, 329, 330, 337, 342, 344, 346, 347, 356, 357, 358, 359, 360, 391, 394, 402, 404, 410, 413, 414, 416, 421, 426, 428, 432, 433, 435, 437], "export": [0, 6, 7, 416, 428, 435], "competit": [0, 3, 138, 139, 416, 428, 431, 435], "ddpg": [0, 249, 250, 251, 252, 325, 336, 345, 410, 412, 416, 418, 424, 428, 431, 435], "task": [0, 2, 3, 9, 64, 66, 67, 76, 119, 120, 121, 122, 126, 129, 133, 134, 138, 139, 146, 147, 148, 149, 151, 154, 155, 158, 159, 208, 221, 230, 233, 235, 329, 337, 416, 417, 418, 419, 420, 422, 423, 428, 430, 431, 432, 435, 437], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 144, 145, 146, 147, 154, 155, 158, 168, 188, 202, 223, 253, 262, 266, 302, 321, 339, 341, 343, 376, 394, 410, 413, 414, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 34, 39, 40, 41, 42, 50, 52, 56, 58, 60, 61, 63, 65, 70, 75, 76, 77, 91, 92, 93, 94, 100, 103, 107, 109, 113, 116, 119, 122, 126, 131, 133, 134, 146, 147, 150, 154, 155, 173, 187, 191, 192, 198, 201, 204, 208, 228, 229, 230, 233, 237, 239, 262, 266, 269, 272, 273, 284, 291, 293, 298, 299, 307, 310, 311, 312, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 398, 399, 400, 403, 404, 408, 410, 412, 414, 416, 418, 419, 420, 421, 425, 427, 428, 430, 431, 432, 434, 435, 437], "loss": [0, 3, 8, 58, 192, 282, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 354, 355, 356, 390, 394, 401, 404, 413, 414, 416, 421, 422, 424, 425, 426, 428, 432, 434, 435], "trainer": [0, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 416, 417, 428, 435], "exampl": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 76, 77, 78, 87, 91, 92, 93, 97, 98, 100, 105, 106, 111, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 279, 281, 282, 283, 284, 285, 293, 294, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 348, 349, 354, 356, 357, 358, 359, 362, 374, 376, 384, 385, 386, 387, 388, 390, 391, 392, 393, 396, 404, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437], "packag": [0, 6, 7, 10, 170, 410, 411, 437], "batch": [0, 2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 50, 52, 54, 57, 59, 62, 64, 71, 72, 73, 75, 87, 91, 92, 93, 94, 98, 99, 100, 104, 105, 106, 111, 113, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 140, 141, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 172, 177, 180, 184, 185, 188, 195, 202, 204, 206, 209, 213, 220, 223, 225, 229, 230, 232, 236, 237, 239, 242, 254, 260, 261, 262, 264, 265, 266, 270, 271, 272, 273, 274, 275, 279, 283, 284, 290, 294, 297, 306, 310, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 385, 388, 391, 392, 393, 394, 396, 406, 407, 408, 410, 412, 413, 414, 418, 419, 420, 421, 422, 425, 427, 429, 430, 431, 433, 436, 437], "size": [0, 2, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 97, 98, 99, 100, 104, 105, 106, 107, 113, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 171, 173, 177, 179, 180, 181, 184, 186, 187, 188, 191, 192, 193, 195, 198, 201, 202, 206, 208, 210, 211, 213, 217, 219, 220, 221, 223, 225, 226, 229, 230, 231, 232, 235, 237, 239, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 293, 294, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 376, 385, 391, 410, 412, 413, 418, 419, 420, 421, 422, 423, 425, 430, 431, 432, 437], "copi": [0, 2, 3, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 70, 75, 76, 77, 78, 79, 80, 81, 82, 91, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 176, 180, 198, 211, 222, 228, 229, 230, 237, 239, 240, 262, 266, 274, 302, 324, 339, 344, 374, 410, 413, 417, 418, 420, 422, 430, 434, 436], "interoper": [0, 14, 15, 410], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 34, 37, 39, 40, 41, 42, 43, 45, 48, 50, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 72, 73, 77, 92, 100, 106, 111, 119, 122, 125, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 173, 180, 181, 188, 201, 208, 213, 223, 228, 230, 235, 239, 246, 247, 260, 261, 262, 264, 265, 266, 267, 273, 309, 313, 322, 323, 324, 326, 328, 330, 331, 337, 338, 341, 342, 344, 346, 347, 351, 356, 357, 358, 359, 365, 366, 367, 368, 370, 371, 372, 373, 374, 408, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 40, 41, 42, 43, 45, 56, 58, 63, 67, 77, 134, 228, 410, 425, 436], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 62, 71, 72, 100, 119, 148, 149, 200, 204, 241, 243, 254, 255, 256, 257, 263, 269, 270, 271, 279, 280, 281, 282, 286, 287, 290, 291, 292, 302, 303, 304, 307, 311, 312, 321, 322, 323, 324, 329, 330, 331, 337, 338, 341, 342, 343, 344, 346, 347, 410, 413, 414, 418, 419, 421, 423, 425, 430, 431, 432, 436, 437], "helper": [0, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 417, 418, 420, 430, 432], "compos": [0, 3, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 99, 100, 101, 102, 111, 112, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 185, 198, 212, 228, 229, 230, 237, 239, 305, 306, 324, 333, 344, 376, 410, 417, 418, 419, 420, 421, 425, 429, 431, 433, 434, 436, 437], "episod": [0, 3, 45, 98, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 176, 213, 216, 222, 243, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 410, 418, 422, 427, 430, 431, 434], "format": [0, 3, 27, 34, 36, 39, 48, 49, 50, 51, 54, 55, 60, 61, 65, 68, 69, 70, 77, 88, 89, 96, 103, 111, 119, 122, 126, 133, 134, 146, 147, 148, 154, 155, 180, 184, 208, 223, 229, 230, 233, 235, 239, 310, 376, 410, 417, 418, 421, 422, 424, 426, 436, 437], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 78, 79, 80, 81, 82, 83, 84, 85, 119, 122, 126, 133, 134, 140, 146, 147, 150, 154, 155, 158, 159, 172, 173, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 197, 199, 200, 201, 202, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 259, 283, 287, 298, 302, 303, 304, 307, 308, 309, 310, 311, 312, 314, 322, 324, 326, 329, 330, 342, 344, 346, 347, 354, 410, 432], "tree": [0, 1, 40, 41, 42, 45, 56, 58, 63, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 410, 430, 434], "forest": [0, 45, 77, 410], "human": [0, 24, 410, 432], "feedback": [0, 410, 427, 436], "rlhf": [0, 200, 410, 412], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 117, 118, 119, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 140, 141, 142, 144, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 165, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 199, 200, 201, 202, 204, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 256, 259, 262, 266, 283, 285, 287, 298, 302, 303, 304, 307, 308, 309, 310, 311, 313, 314, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 427, 429, 430, 431, 436], "lock": [0, 31, 32, 40, 41, 42, 43, 56, 58, 63, 67, 77, 119, 122, 126, 132, 133, 134, 146, 147, 154, 155, 177, 185, 223, 237, 410, 413, 432], "method": [0, 1, 2, 4, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 97, 98, 100, 105, 106, 107, 108, 109, 111, 113, 119, 122, 125, 126, 127, 128, 132, 133, 134, 146, 147, 150, 151, 154, 155, 168, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 254, 259, 262, 266, 272, 273, 274, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 318, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 335, 337, 339, 341, 342, 343, 344, 346, 347, 354, 360, 374, 375, 405, 410, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 432, 434, 437], "partial": [0, 2, 119, 122, 126, 133, 134, 146, 147, 154, 155, 179, 180, 188, 222, 223, 224, 307, 394, 410, 420], "step": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 50, 64, 77, 88, 89, 96, 98, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 171, 172, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 195, 196, 199, 200, 202, 204, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 236, 237, 239, 241, 242, 243, 257, 259, 260, 262, 264, 266, 268, 269, 282, 283, 306, 307, 311, 321, 332, 341, 355, 356, 357, 358, 359, 362, 363, 364, 375, 378, 385, 389, 394, 410, 414, 418, 420, 421, 423, 424, 426, 427, 429, 432, 433, 436], "reset": [0, 1, 2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 100, 106, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 160, 172, 175, 176, 177, 180, 188, 192, 195, 199, 203, 208, 216, 221, 222, 223, 224, 225, 228, 229, 230, 233, 236, 237, 239, 240, 245, 260, 262, 266, 274, 283, 296, 306, 339, 375, 410, 413, 417, 418, 419, 420, 422, 425, 429, 430, 431, 436], "vector": [0, 1, 8, 25, 54, 117, 118, 127, 131, 132, 137, 148, 149, 151, 158, 159, 190, 236, 249, 251, 260, 261, 264, 265, 267, 356, 359, 369, 370, 371, 372, 373, 410, 412, 413, 417, 418, 420, 429, 430, 431, 432, 433, 437], "custom": [0, 2, 5, 27, 34, 39, 50, 60, 61, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 233, 239, 272, 273, 314, 320, 331, 341, 348, 408, 410, 412, 417, 418, 419, 420, 423, 424, 426, 430, 431], "nativ": [0, 1, 7, 9, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 376, 410, 420, 434], "auto": [0, 93, 113, 122, 175, 176, 230, 236, 283, 322, 324, 330, 340, 342, 344, 346, 347, 410, 413, 430, 431], "dynam": [0, 2, 7, 14, 15, 16, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 165, 239, 329, 337, 410, 419, 422, 432], "mask": [0, 1, 4, 23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 174, 209, 239, 244, 245, 256, 259, 270, 271, 285, 302, 303, 304, 308, 309, 330, 344, 391, 410, 418, 420, 421, 437], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 36, 45, 54, 64, 68, 70, 77, 97, 98, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 165, 171, 173, 174, 177, 183, 184, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 200, 202, 203, 204, 206, 210, 211, 213, 217, 221, 223, 227, 229, 230, 231, 232, 236, 239, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 262, 266, 267, 268, 269, 270, 271, 272, 281, 283, 284, 285, 287, 290, 291, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 314, 315, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 404, 408, 410, 412, 414, 417, 418, 419, 421, 422, 423, 424, 429, 430, 431, 433, 436, 437], "record": [0, 2, 11, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 166, 173, 200, 239, 341, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 404, 410, 418, 419, 423, 427, 430], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 190, 198, 223, 231, 298, 303, 304, 307, 308, 309, 310, 311, 312, 313, 318, 410, 419, 424, 430, 431, 432, 436, 437], "actor": [0, 3, 4, 21, 150, 200, 243, 248, 249, 251, 256, 257, 259, 269, 281, 283, 285, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 354, 410, 413, 418, 420, 422, 424, 427, 430, 433, 436], "explor": [0, 1, 238, 241, 244, 259, 276, 283, 298, 303, 304, 307, 308, 309, 310, 311, 321, 339, 389, 399, 400, 404, 410, 419, 420, 421, 422, 424, 425, 427, 430, 431, 432], "valu": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 97, 98, 100, 105, 106, 111, 119, 122, 126, 133, 134, 137, 146, 147, 154, 155, 160, 165, 170, 171, 172, 173, 176, 178, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 198, 203, 204, 208, 209, 212, 213, 214, 216, 218, 220, 223, 224, 229, 230, 235, 237, 239, 240, 241, 242, 245, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 262, 263, 266, 267, 269, 270, 271, 272, 273, 275, 276, 279, 283, 284, 285, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 384, 385, 387, 388, 389, 390, 391, 394, 404, 410, 414, 418, 421, 424, 425, 426, 429, 430, 431, 432, 434, 436, 437], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 62, 64, 66, 67, 71, 72, 75, 77, 78, 79, 80, 81, 82, 100, 102, 104, 119, 122, 123, 126, 133, 134, 138, 139, 140, 143, 146, 147, 148, 149, 152, 153, 154, 155, 172, 177, 184, 185, 187, 188, 189, 193, 198, 200, 202, 204, 210, 211, 216, 217, 221, 223, 227, 229, 231, 236, 239, 244, 245, 254, 262, 266, 270, 271, 279, 298, 307, 311, 315, 316, 335, 342, 349, 356, 361, 369, 379, 394, 410, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "hook": [0, 2, 27, 34, 36, 39, 50, 57, 60, 61, 62, 65, 68, 70, 71, 72, 100, 114, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 285, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 410], "planner": [0, 243, 269, 410], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 97, 98, 100, 101, 104, 105, 106, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 171, 172, 173, 174, 176, 177, 178, 179, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 200, 201, 204, 206, 208, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 233, 235, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 319, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 393, 404, 410, 412, 414, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437], "vmap": [0, 260, 261, 264, 265, 274, 294, 310, 313, 339, 410, 412], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 64, 66, 67, 75, 78, 79, 80, 81, 82, 99, 111, 119, 122, 126, 133, 134, 140, 146, 147, 150, 154, 155, 160, 173, 188, 190, 203, 204, 223, 230, 245, 259, 260, 262, 264, 266, 307, 310, 311, 318, 322, 339, 342, 389, 398, 410, 412, 417, 418, 419, 421, 422, 423, 425, 432, 433, 434, 436, 437], "sac": [0, 330, 342, 344, 410], "redq": [0, 342, 410], "crossq": [0, 324, 410], "iql": [0, 329, 337, 410, 417, 430, 431], "cql": [0, 322, 328, 410], "gail": [0, 335, 410], "dt": [0, 147, 283, 410, 432], "td3": [0, 346, 347, 410], "bc": [0, 5, 346, 410], "a2c": [0, 321, 410], "dreamer": [0, 166, 167, 257, 332, 333, 334, 410, 412], "checkpoint": [0, 62, 89, 91, 95, 107, 108, 110, 114, 410, 434], "builder": [0, 410, 418, 437], "logger": [0, 3, 11, 374, 376, 378, 379, 380, 381, 382, 383, 388, 394, 404, 408, 410, 418, 430], "_util": [0, 3, 146, 240, 410, 421, 427], "implement_for": [0, 3, 410], "set_auto_unwrap_transformed_env": [0, 12, 230, 410], "auto_unwrap_transformed_env": [0, 384, 410], "thing": [0, 3, 7, 8, 119, 122, 126, 133, 134, 146, 147, 154, 155, 229, 272, 273, 330, 344, 411, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 434, 437], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 34, 39, 43, 50, 57, 60, 61, 62, 65, 67, 70, 71, 72, 91, 93, 105, 106, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 190, 237, 239, 254, 272, 273, 290, 322, 324, 337, 342, 344, 346, 347, 356, 358, 359, 411, 413, 417, 422, 423, 424, 432, 434], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 109, 113, 119, 122, 123, 125, 126, 127, 132, 133, 134, 137, 138, 139, 141, 143, 146, 147, 148, 149, 154, 155, 158, 159, 169, 171, 174, 176, 179, 180, 184, 187, 188, 190, 191, 200, 201, 203, 204, 208, 209, 216, 223, 225, 228, 229, 230, 233, 235, 236, 237, 239, 240, 242, 243, 254, 256, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 282, 285, 291, 306, 307, 310, 311, 313, 317, 322, 323, 324, 326, 330, 331, 337, 338, 339, 341, 342, 344, 346, 347, 348, 354, 355, 356, 357, 358, 359, 374, 375, 376, 378, 381, 383, 391, 408, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 425, 426, 430, 431, 432, 433, 434, 436, 437], "debug": [0, 6, 8, 45, 64, 77, 225, 411, 437], "work": [0, 1, 2, 3, 4, 8, 27, 34, 39, 50, 60, 61, 62, 65, 70, 91, 98, 103, 105, 106, 109, 116, 119, 122, 125, 126, 127, 130, 133, 134, 146, 147, 151, 154, 155, 168, 171, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 240, 246, 247, 267, 304, 309, 314, 323, 338, 341, 394, 411, 412, 417, 418, 419, 420, 422, 425, 429, 430, 431, 432, 433, 434, 436, 437], "habitat": [0, 3, 128, 411, 433], "lab": [0, 3, 120, 121, 128, 411], "mujoco": [0, 6, 8, 151, 411, 417, 419, 420], "error": [0, 1, 3, 7, 10, 25, 26, 27, 30, 34, 35, 39, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 63, 65, 66, 70, 77, 91, 119, 122, 126, 133, 134, 146, 147, 154, 155, 156, 160, 161, 209, 228, 239, 240, 339, 411, 413, 417, 419, 430, 431, 437], "solut": [0, 2, 3, 6, 7, 9, 21, 105, 411, 412, 414, 421, 436], "resourc": [0, 1, 21, 128, 411, 417, 419, 421, 430, 431], "issu": [0, 2, 3, 4, 5, 8, 89, 91, 93, 105, 113, 119, 122, 125, 126, 130, 133, 134, 146, 147, 154, 155, 171, 180, 209, 224, 298, 303, 304, 307, 308, 309, 310, 311, 411, 436], "customis": [0, 411, 418, 426], "video": [0, 4, 9, 376, 378, 381, 383, 389, 408, 410, 411, 427, 430, 431], "render": [0, 3, 8, 132, 158, 374, 376, 389, 411, 417, 418, 419, 421, 422, 426], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 90, 91, 92, 93, 97, 98, 100, 101, 103, 105, 109, 111, 112, 113, 115, 116, 119, 122, 126, 133, 134, 138, 139, 144, 145, 146, 147, 154, 155, 158, 159, 171, 175, 180, 184, 190, 230, 270, 271, 306, 410, 422, 429, 430, 431, 434, 436], "search": [0, 2, 31, 32, 43, 67, 77, 143, 172, 418], "page": [0, 7, 24, 383, 424], "somewhat": [1, 2, 413, 423, 437], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 35, 39, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 70, 71, 72, 76, 77, 87, 117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 177, 189, 192, 223, 225, 230, 239, 256, 264, 267, 285, 303, 304, 308, 309, 341, 391, 425, 436, 437], "dataload": [1, 87, 104, 106, 133, 188, 418, 425, 434], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 194, 213, 222, 223, 224, 228, 230, 239, 241, 259, 260, 262, 264, 266, 279, 283, 321, 324, 339, 341, 344, 376, 412, 417, 418, 422, 430, 434, 436, 437], "1": [1, 2, 3, 4, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 97, 98, 100, 105, 106, 111, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 202, 204, 206, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 235, 237, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 279, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 358, 359, 362, 364, 365, 366, 370, 371, 373, 374, 376, 385, 389, 391, 392, 404, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 98, 100, 119, 122, 125, 126, 127, 133, 134, 137, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 176, 179, 194, 200, 208, 217, 225, 229, 230, 235, 239, 266, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 391, 394, 412, 413, 414, 417, 418, 419, 420, 421, 424, 429, 430, 431, 432, 433, 434, 436, 437], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 86, 98, 100, 104, 105, 106, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 171, 173, 188, 190, 204, 216, 224, 239, 279, 282, 291, 294, 313, 331, 333, 339, 362, 374, 397, 412, 414, 417, 418, 419, 421, 422, 423, 424, 425, 430, 431, 432, 437], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 34, 39, 40, 41, 42, 43, 44, 50, 52, 53, 56, 57, 58, 60, 61, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 92, 94, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 171, 177, 178, 180, 184, 188, 195, 208, 220, 223, 229, 230, 231, 232, 233, 235, 239, 245, 260, 262, 264, 266, 272, 310, 311, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 412, 417, 420, 421, 430, 431, 432, 434, 437], "static": [1, 34, 60, 64, 70, 76, 98, 105, 106, 128, 147, 237, 240, 337, 422, 432, 434], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 34, 39, 43, 45, 50, 52, 57, 60, 61, 62, 65, 67, 70, 71, 72, 76, 94, 100, 106, 119, 122, 123, 126, 128, 133, 134, 137, 146, 147, 148, 149, 154, 155, 160, 180, 188, 192, 223, 226, 239, 260, 264, 273, 305, 311, 321, 323, 338, 341, 342, 343, 412, 413, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 66, 70, 87, 92, 111, 114, 119, 122, 125, 126, 127, 128, 132, 133, 134, 146, 147, 151, 154, 155, 169, 179, 187, 190, 191, 198, 203, 211, 223, 228, 229, 230, 239, 259, 262, 266, 283, 323, 324, 338, 339, 341, 344, 376, 391, 396, 406, 407, 408, 412, 413, 417, 418, 419, 420, 425, 430, 431, 432, 434], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 62, 63, 65, 70, 77, 78, 87, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 175, 180, 184, 195, 198, 208, 216, 220, 223, 228, 229, 230, 231, 232, 233, 235, 239, 267, 294, 310, 311, 312, 324, 344, 376, 414, 419, 421, 422, 426, 434, 436, 437], "two": [1, 2, 3, 4, 8, 10, 27, 34, 39, 45, 46, 47, 48, 49, 50, 57, 60, 61, 62, 64, 65, 70, 71, 72, 77, 100, 104, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 204, 208, 228, 235, 239, 252, 260, 262, 264, 266, 272, 273, 288, 291, 311, 338, 346, 350, 389, 394, 413, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 432, 434, 436, 437], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 123, 180, 311, 394, 412, 413, 417, 418, 429, 436, 437], "argument": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 97, 98, 100, 103, 104, 105, 106, 109, 111, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 142, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 165, 171, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 188, 189, 192, 193, 194, 196, 198, 199, 200, 202, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 259, 260, 262, 264, 266, 267, 270, 271, 272, 273, 275, 283, 294, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 349, 354, 356, 357, 358, 359, 360, 364, 374, 375, 376, 381, 383, 387, 394, 397, 404, 405, 408, 417, 418, 419, 420, 421, 422, 423, 425, 430, 431, 432, 434, 436, 437], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 92, 94, 100, 103, 104, 105, 106, 107, 109, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 161, 171, 178, 179, 183, 187, 188, 189, 191, 200, 201, 204, 206, 208, 216, 218, 226, 227, 228, 229, 230, 232, 233, 235, 237, 239, 245, 246, 247, 249, 255, 258, 262, 266, 267, 270, 271, 277, 285, 304, 306, 308, 309, 311, 313, 314, 315, 322, 324, 337, 339, 342, 344, 346, 347, 353, 356, 359, 374, 375, 389, 391, 406, 407, 413, 417, 419, 422, 423, 424, 425, 429, 430, 432, 433, 434, 436, 437], "constructor": [1, 2, 3, 16, 18, 19, 20, 21, 62, 76, 97, 111, 119, 122, 126, 133, 134, 141, 146, 147, 154, 155, 158, 176, 180, 228, 246, 247, 267, 297, 307, 311, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 405, 408, 412, 417, 418, 419, 422, 425, 430, 431, 434, 436], "iter": [1, 2, 3, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 86, 87, 94, 100, 104, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 188, 193, 204, 217, 239, 240, 242, 244, 245, 246, 247, 267, 272, 273, 289, 298, 303, 307, 308, 310, 312, 313, 315, 339, 353, 389, 393, 394, 413, 414, 417, 419, 420, 425, 427, 430, 431, 432], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 59, 60, 61, 62, 65, 70, 71, 72, 75, 91, 92, 100, 105, 106, 117, 118, 119, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 140, 141, 146, 147, 151, 154, 155, 156, 174, 185, 202, 225, 230, 239, 259, 260, 262, 264, 266, 274, 297, 306, 312, 313, 339, 346, 398, 408, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 434, 435, 436, 437], "queri": [1, 2, 3, 14, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 63, 65, 70, 77, 92, 119, 122, 126, 133, 134, 146, 147, 154, 155, 208, 233, 237, 239, 313, 413, 417, 424, 432, 436], "defin": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 209, 222, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 274, 277, 278, 281, 282, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 318, 326, 328, 339, 356, 357, 358, 359, 360, 375, 405, 412, 417, 418, 420, 424, 427, 432, 434, 437], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 97, 98, 100, 103, 105, 106, 113, 117, 118, 119, 122, 125, 126, 127, 131, 132, 133, 134, 140, 141, 142, 143, 146, 147, 148, 149, 154, 155, 158, 159, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 190, 192, 193, 194, 196, 199, 200, 203, 204, 207, 209, 210, 211, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 236, 237, 239, 241, 242, 243, 246, 247, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 277, 278, 283, 284, 286, 287, 290, 291, 292, 293, 298, 302, 306, 307, 310, 311, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 381, 383, 385, 387, 389, 394, 396, 397, 398, 406, 407, 408, 412, 413, 417, 418, 419, 420, 422, 423, 425, 427, 430, 431, 432, 433, 434, 437], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 35, 39, 45, 46, 47, 50, 60, 61, 65, 70, 76, 77, 104, 106, 111, 119, 122, 126, 127, 133, 134, 146, 147, 154, 155, 160, 173, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 244, 260, 262, 266, 267, 275, 276, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 357, 358, 359, 391, 417, 419, 420, 421, 425, 426, 430, 431, 432, 434, 437], "deliv": [1, 2, 3, 16, 417, 418, 422, 425, 436], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 85, 92, 97, 100, 119, 122, 125, 126, 127, 133, 134, 137, 146, 147, 148, 149, 154, 155, 180, 188, 202, 237, 260, 262, 264, 265, 266, 306, 312, 313, 322, 324, 337, 342, 344, 346, 347, 375, 385, 410, 418, 421, 422, 429, 430, 432, 436], "user": [1, 2, 3, 5, 8, 23, 27, 34, 39, 45, 50, 60, 61, 65, 70, 77, 98, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 156, 160, 181, 198, 222, 228, 230, 239, 253, 324, 341, 344, 346, 376, 405, 413, 414, 417, 418, 422, 424, 425, 432, 436, 437], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 64, 104, 119, 122, 126, 132, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 202, 221, 241, 259, 283, 417, 419, 427, 430, 431, 436, 437], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 66, 67, 68, 70, 75, 77, 78, 79, 80, 81, 82, 88, 89, 96, 98, 100, 105, 106, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 176, 177, 180, 187, 188, 189, 191, 192, 193, 198, 202, 203, 204, 206, 210, 211, 213, 215, 217, 220, 221, 223, 224, 228, 229, 230, 231, 237, 239, 243, 260, 262, 266, 269, 291, 306, 321, 322, 323, 324, 325, 326, 328, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 412, 413, 417, 419, 420, 421, 422, 424, 425, 427, 429, 430, 431, 432, 434, 436, 437], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 34, 36, 39, 45, 50, 57, 60, 61, 62, 64, 65, 68, 70, 71, 72, 77, 88, 89, 96, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 160, 171, 172, 176, 179, 180, 181, 183, 184, 185, 188, 189, 192, 195, 198, 202, 204, 211, 221, 222, 227, 228, 229, 230, 231, 232, 237, 239, 243, 248, 253, 257, 260, 261, 262, 264, 265, 266, 267, 269, 274, 277, 281, 284, 286, 287, 293, 299, 306, 310, 316, 321, 323, 324, 328, 330, 338, 339, 341, 342, 343, 344, 354, 355, 356, 357, 358, 359, 360, 394, 408, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 432, 437], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 34, 36, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 64, 65, 70, 77, 93, 100, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 171, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 259, 260, 262, 266, 275, 303, 308, 324, 333, 344, 346, 418, 419, 420, 421, 422, 423, 425, 427, 430, 431, 432, 433, 434, 437], "predefin": [1, 376, 418, 420, 425, 434, 436], "becaus": [1, 2, 3, 4, 7, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 64, 65, 70, 77, 92, 119, 122, 126, 133, 134, 146, 147, 154, 155, 192, 200, 221, 236, 239, 252, 273, 298, 303, 304, 306, 307, 308, 309, 310, 311, 321, 341, 412, 417, 418, 420, 421, 423, 424, 425, 429, 430, 431, 432, 434, 437], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 432, 434], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 34, 39, 50, 60, 61, 64, 65, 70, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 172, 204, 218, 230, 234, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 277, 278, 279, 281, 283, 286, 287, 289, 291, 292, 294, 299, 302, 304, 306, 307, 309, 311, 314, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 398, 413, 417, 419, 420, 421, 422, 423, 429, 430, 431, 433, 434], "heavi": [1, 8, 434], "crucial": [1, 2, 3, 241, 259, 283, 329, 337, 339, 417, 418, 419, 420, 422, 424, 426, 430, 431, 432, 436, 437], "configur": [1, 8, 21, 22, 64, 119, 200, 248, 253, 281, 339, 341, 412, 417, 418, 419, 424, 430, 431, 432], "hyperparamet": [1, 103, 239, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 417, 426, 432, 434], "appropri": [1, 3, 4, 7, 90, 101, 111, 112, 115, 116, 134, 146, 154, 192, 405, 408, 417, 426, 434], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 107, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 412, 413, 417, 420, 421, 423, 427, 430, 431, 432, 433, 436], "take": [1, 2, 3, 8, 23, 27, 34, 39, 45, 60, 61, 64, 65, 70, 108, 114, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 183, 221, 224, 225, 229, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 305, 306, 307, 309, 311, 314, 317, 320, 341, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 385, 396, 412, 414, 417, 418, 419, 421, 422, 423, 424, 430, 431, 432, 434, 437], "consider": [1, 2, 3, 8, 125, 127, 229, 418, 430, 431, 434], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 91, 93, 100, 101, 113, 119, 122, 126, 132, 133, 134, 138, 139, 140, 146, 147, 148, 149, 154, 155, 158, 159, 172, 176, 185, 187, 188, 191, 222, 228, 230, 237, 239, 246, 247, 262, 266, 267, 306, 311, 315, 321, 322, 323, 324, 325, 326, 328, 330, 331, 335, 338, 339, 341, 342, 343, 344, 346, 347, 354, 356, 359, 384, 408, 417, 418, 419, 421, 422, 430, 431, 432, 436, 437], "should": [1, 2, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 94, 98, 100, 105, 106, 107, 111, 114, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 134, 137, 140, 146, 147, 148, 149, 154, 155, 158, 159, 160, 171, 172, 173, 176, 177, 180, 183, 184, 187, 189, 192, 193, 195, 200, 201, 202, 204, 209, 210, 211, 213, 216, 217, 221, 222, 224, 227, 229, 230, 231, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 273, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 307, 309, 310, 311, 314, 317, 321, 323, 324, 330, 336, 338, 339, 341, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 360, 376, 378, 384, 389, 390, 391, 394, 404, 406, 407, 408, 412, 413, 414, 417, 418, 419, 420, 421, 423, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "occur": [1, 8, 15, 34, 60, 66, 67, 70, 77, 119, 122, 126, 128, 133, 134, 146, 147, 154, 155, 172, 181, 193, 204, 209, 236, 242, 298, 303, 304, 307, 308, 309, 310, 311, 333, 421, 434, 437], "serial": [1, 2, 3, 27, 34, 39, 50, 57, 60, 61, 62, 65, 68, 70, 71, 72, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 237, 239], "parallel": [1, 3, 8, 119, 122, 125, 126, 127, 133, 134, 146, 147, 148, 149, 154, 155, 160, 230, 236, 262, 266, 321, 405, 406, 407, 408, 418, 419, 430, 431, 436], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 36, 50, 68, 177, 180, 213, 244, 262, 266, 404, 407, 410, 417, 418, 419, 420, 421, 425, 427, 430, 431, 434], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 137, 140, 143, 146, 147, 148, 149, 151, 154, 155, 156, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 406, 407, 408, 412, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 430, 431, 434, 437], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 40, 41, 42, 56, 58, 63, 75, 76, 77, 87, 123, 141, 146, 154, 228, 237, 406, 407, 408, 417, 418, 419, 436, 437], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 244, 407, 410, 419, 425, 436], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 38, 43, 56, 58, 67, 76, 87, 98, 105, 106, 137, 148, 149, 260, 264, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 412, 414, 419, 423, 434, 436], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 57, 61, 62, 65, 71, 72, 98, 105, 106, 117, 118, 120, 121, 125, 127, 128, 130, 131, 132, 141, 142, 146, 151, 155, 228, 237, 239, 262, 266, 272, 282, 283, 339, 396, 410, 412, 413, 417, 422, 426, 430, 431, 432], "aggreg": [1, 3, 27, 60, 98, 111, 148, 149, 172, 201, 246, 247, 249, 250, 313, 413, 431], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 34, 39, 40, 41, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 72, 77, 78, 98, 100, 104, 105, 106, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 160, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 244, 259, 260, 262, 264, 266, 267, 272, 285, 291, 302, 304, 309, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 396, 413, 418, 420, 422, 423, 426, 427, 432, 433, 436, 437], "final": [1, 2, 3, 4, 21, 40, 41, 42, 45, 56, 58, 63, 64, 77, 223, 236, 241, 259, 260, 262, 264, 266, 272, 283, 305, 312, 356, 389, 412, 417, 418, 419, 421, 426, 427, 430, 431, 432, 437], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 244, 406, 410, 417, 418, 419, 425, 436], "sever": [1, 2, 3, 8, 27, 34, 39, 46, 50, 60, 61, 65, 70, 76, 119, 122, 126, 133, 134, 146, 147, 154, 155, 181, 183, 201, 230, 239, 341, 417, 419, 421, 426, 427, 434, 437], "gather": [1, 3, 18, 20, 21, 45, 76, 87, 91, 93, 98, 105, 113, 202, 209, 271, 274, 279, 339, 355, 398, 411, 418, 419, 420, 425, 430, 431, 432, 434, 436, 437], "continu": [1, 2, 3, 9, 28, 31, 45, 78, 79, 80, 106, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 158, 159, 165, 173, 198, 223, 231, 249, 250, 251, 252, 282, 283, 313, 318, 322, 345, 356, 361, 369, 412, 417, 419, 423, 430, 431, 434], "concomitantli": [1, 119, 122, 126, 133, 134, 146, 147, 154, 155], "network": [1, 4, 8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 239, 246, 247, 249, 250, 251, 252, 255, 257, 258, 264, 267, 272, 273, 274, 276, 277, 278, 280, 282, 284, 286, 287, 288, 293, 299, 300, 301, 302, 310, 314, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 354, 356, 357, 358, 359, 360, 403, 404, 412, 413, 414, 421, 424, 427, 429, 432, 437], "impli": [1, 77, 437], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 60, 61, 64, 65, 70, 98, 100, 103, 117, 118, 119, 122, 126, 133, 134, 146, 147, 152, 153, 154, 155, 184, 198, 201, 208, 223, 228, 229, 230, 233, 235, 239, 260, 261, 262, 264, 265, 266, 272, 274, 276, 310, 321, 322, 323, 324, 330, 333, 344, 346, 396, 403, 412, 414, 417, 418, 419, 429, 432, 434, 436], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 89, 92, 98, 105, 119, 122, 125, 126, 127, 128, 133, 134, 146, 147, 151, 154, 155, 160, 200, 204, 217, 228, 230, 232, 237, 239, 242, 262, 266, 267, 272, 311, 323, 330, 338, 341, 344, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 432, 433, 434, 437], "slightli": [1, 23, 413, 420, 421, 430, 432, 433, 434, 437], "lag": [1, 417, 418, 419], "therefor": [1, 2, 3, 7, 57, 62, 71, 72, 119, 122, 126, 133, 134, 146, 147, 154, 155, 213, 341, 354, 421, 424, 430, 437], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 180], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 34, 36, 38, 39, 40, 41, 42, 45, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 87, 89, 91, 93, 98, 100, 105, 106, 111, 113, 114, 119, 122, 126, 133, 134, 137, 140, 143, 146, 147, 148, 149, 154, 155, 168, 171, 172, 173, 174, 177, 180, 188, 192, 200, 208, 213, 216, 221, 222, 223, 224, 225, 229, 230, 232, 235, 236, 239, 241, 259, 260, 261, 262, 264, 265, 266, 270, 271, 272, 280, 282, 283, 302, 307, 310, 311, 320, 321, 322, 323, 324, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 413, 414, 417, 418, 419, 421, 422, 429, 430, 431, 432, 434, 437], "asynchron": [1, 9, 15, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310, 321, 406, 417, 418, 419], "off": [1, 2, 4, 263, 292, 303, 344, 374, 389, 399, 412, 414, 417, 418, 419, 423, 424, 430, 431, 433, 436, 437], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 35, 39, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 91, 93, 98, 100, 105, 113, 119, 122, 125, 126, 127, 132, 133, 134, 146, 147, 148, 149, 154, 155, 156, 158, 160, 180, 187, 191, 195, 204, 222, 229, 230, 236, 239, 256, 260, 262, 264, 266, 273, 275, 299, 301, 302, 304, 308, 321, 329, 331, 337, 341, 389, 412, 413, 414, 417, 418, 419, 420, 422, 423, 425, 426, 430, 431, 432, 433, 434, 437], "remot": [1, 2, 18, 19, 20, 21, 146, 154, 437], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 45, 64, 70, 77, 111, 117, 118, 119, 122, 126, 128, 129, 131, 132, 133, 134, 138, 139, 140, 141, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 160, 173, 174, 176, 177, 180, 183, 185, 187, 188, 191, 192, 193, 198, 200, 201, 206, 210, 211, 216, 217, 218, 221, 222, 224, 225, 228, 231, 237, 239, 243, 244, 245, 262, 266, 269, 283, 306, 321, 374, 376, 398, 412, 417, 419, 420, 423, 424, 425, 426, 427, 433, 434, 436], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 188, 217, 342, 356, 357, 358, 359, 360, 413, 417, 419, 423, 424, 425], "synchronis": [1, 123, 430, 431], "either": [1, 2, 5, 22, 25, 27, 34, 39, 50, 57, 60, 61, 62, 64, 65, 70, 71, 72, 77, 87, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 202, 221, 222, 239, 316, 339, 346, 347, 380, 414, 417, 418, 420, 430, 433, 434, 436, 437], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 417, 431, 436], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 97, 98, 100, 101, 103, 104, 105, 106, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 174, 176, 177, 179, 180, 181, 184, 185, 188, 190, 193, 195, 198, 199, 200, 201, 202, 203, 204, 208, 209, 211, 212, 215, 216, 217, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 246, 247, 249, 250, 251, 252, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 290, 291, 292, 297, 298, 299, 300, 301, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 350, 356, 357, 358, 359, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 383, 384, 387, 388, 389, 391, 394, 408, 412, 413, 414, 417, 418, 419, 420, 421, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "second": [1, 2, 3, 8, 23, 45, 46, 47, 48, 49, 111, 146, 177, 225, 260, 262, 264, 266, 304, 323, 338, 341, 344, 376, 378, 381, 383, 393, 417, 419, 425, 430, 431, 432, 434, 436, 437], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 97, 105, 106, 113, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 168, 171, 173, 177, 184, 187, 188, 189, 191, 192, 193, 198, 200, 201, 206, 207, 208, 210, 211, 213, 217, 220, 221, 223, 226, 229, 230, 231, 233, 235, 237, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 272, 273, 275, 276, 281, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 374, 391, 396, 402, 412, 417, 418, 419, 420, 421, 430, 431, 432, 433, 436], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 70, 75, 76, 77, 78, 79, 80, 81, 82, 92, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 195, 200, 225, 227, 231, 239, 255, 256, 261, 265, 299, 300, 301, 303, 304, 305, 310, 316, 321, 323, 325, 326, 331, 338, 341, 343, 354, 355, 356, 357, 358, 359, 394, 410, 413, 414, 417, 418, 419, 420, 421, 422, 423, 429, 430, 431, 432, 437], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 34, 39, 40, 41, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 72, 73, 75, 76, 77, 78, 88, 89, 91, 92, 93, 96, 98, 100, 105, 106, 113, 119, 121, 122, 123, 125, 126, 127, 133, 134, 140, 146, 147, 154, 155, 160, 165, 172, 204, 223, 230, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 273, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 317, 322, 324, 326, 329, 330, 337, 339, 342, 344, 346, 347, 354, 356, 357, 358, 359, 374, 376, 380, 384, 389, 398, 399, 400, 404, 406, 407, 412, 413, 414, 417, 419, 420, 421, 422, 423, 432, 434, 437], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 97, 105, 113, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 165, 171, 173, 177, 184, 187, 188, 189, 191, 192, 193, 198, 201, 206, 208, 210, 211, 213, 217, 220, 221, 223, 229, 230, 231, 233, 235, 239, 243, 245, 255, 260, 261, 262, 264, 265, 266, 269, 275, 276, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 374, 412, 417, 418, 419, 420, 430, 431, 432, 433, 436], "slower": [1, 430], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 60, 77, 98, 105, 106, 109, 111, 119, 122, 126, 130, 133, 134, 144, 145, 146, 147, 151, 154, 155, 188, 201, 202, 211, 241, 252, 262, 264, 266, 267, 294, 298, 303, 310, 311, 315, 339, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 411, 412, 413, 417, 418, 419, 421, 422, 424, 430, 431, 432, 434, 436, 437], "one": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 88, 89, 90, 91, 96, 97, 98, 100, 101, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 173, 174, 177, 180, 183, 185, 187, 189, 190, 191, 198, 201, 203, 204, 208, 213, 216, 219, 220, 222, 223, 224, 229, 230, 232, 235, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 273, 274, 277, 278, 279, 280, 281, 283, 285, 286, 287, 289, 294, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 354, 356, 357, 358, 359, 363, 364, 376, 378, 387, 389, 390, 394, 398, 408, 411, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 437], "cuda": [1, 2, 3, 7, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 117, 118, 119, 122, 126, 128, 129, 130, 133, 134, 146, 147, 154, 155, 184, 200, 207, 208, 223, 229, 230, 233, 235, 239, 260, 261, 264, 265, 310, 386, 417, 418, 419, 420, 430, 431, 433, 437], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 60, 62, 71, 72, 73, 77, 93, 100, 101, 113, 117, 118, 131, 132, 133, 146, 154, 155, 181, 183, 188, 190, 199, 202, 203, 213, 216, 220, 221, 228, 237, 260, 264, 266, 272, 275, 276, 298, 303, 307, 308, 310, 311, 314, 323, 330, 338, 341, 351, 362, 408, 412, 413, 414, 417, 418, 419, 422, 424, 425, 430, 431, 432, 434, 436], "infer": [1, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 237, 262, 266, 275, 302, 307, 311, 328, 374, 417, 419, 421, 425, 427, 434, 436], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 21, 27, 34, 39, 50, 60, 61, 65, 70, 98, 105, 106, 117, 118, 119, 120, 121, 122, 125, 126, 131, 132, 133, 134, 140, 141, 142, 146, 147, 154, 155, 160, 184, 198, 203, 204, 220, 228, 229, 230, 237, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 311, 312, 313, 314, 317, 324, 330, 344, 376, 383, 389, 406, 407, 408, 411, 412, 413, 414, 417, 418, 419, 420, 423, 424, 425, 426, 427, 430, 431, 432, 436], "dispatch": [1, 3, 18, 19, 20, 21, 34, 60, 70, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 294, 306, 376, 417, 437], "avail": [1, 2, 3, 4, 6, 21, 57, 62, 71, 72, 98, 104, 105, 106, 117, 118, 120, 121, 130, 131, 132, 138, 139, 144, 145, 146, 148, 149, 151, 156, 157, 158, 159, 173, 176, 179, 198, 200, 256, 285, 307, 311, 339, 376, 406, 407, 417, 418, 419, 420, 421, 422, 423, 430, 431, 432, 434, 437], "speed": [1, 2, 4, 8, 30, 119, 122, 126, 133, 134, 146, 147, 154, 155, 413, 417, 418, 419, 420, 430, 431, 432, 434, 436], "avoid": [1, 2, 3, 27, 34, 39, 50, 60, 61, 65, 70, 91, 93, 105, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 170, 180, 198, 228, 230, 237, 239, 242, 291, 298, 310, 315, 323, 324, 338, 341, 344, 397, 419, 421, 431], "oom": [1, 3, 40, 41, 42, 56, 58, 63, 77, 91, 93, 113], "choic": [1, 2, 52, 146, 188, 412, 413, 417, 418, 424, 430, 431], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 34, 39, 43, 50, 52, 57, 60, 61, 62, 64, 65, 67, 70, 71, 72, 75, 76, 89, 91, 93, 98, 100, 105, 106, 111, 113, 119, 122, 123, 124, 126, 127, 133, 134, 137, 141, 146, 147, 148, 149, 154, 155, 158, 176, 177, 180, 185, 187, 191, 201, 202, 211, 228, 232, 237, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 273, 274, 275, 277, 278, 281, 283, 284, 286, 287, 289, 293, 294, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 322, 323, 324, 337, 338, 339, 341, 342, 344, 346, 347, 356, 357, 358, 359, 360, 374, 391, 394, 406, 407, 408, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 434, 436, 437], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 66, 67, 70, 71, 75, 76, 78, 79, 80, 81, 82, 97, 106, 119, 122, 126, 130, 133, 134, 143, 146, 147, 154, 155, 172, 173, 180, 195, 220, 223, 232, 237, 262, 266, 302, 412, 413, 418, 431], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 34, 37, 38, 39, 40, 41, 42, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 72, 73, 76, 77, 87, 89, 91, 92, 93, 94, 97, 98, 100, 105, 111, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 188, 198, 225, 236, 237, 239, 241, 243, 244, 269, 283, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 383, 410, 414, 417, 419, 420, 423, 425, 427, 430, 431, 433, 437], "while": [1, 2, 3, 7, 8, 23, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 213, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 329, 337, 338, 341, 412, 413, 417, 419, 420, 423, 425, 426, 430, 431, 432, 433, 434, 436], "wait": [1, 20, 21, 22, 156, 420, 432], "also": [1, 2, 3, 8, 9, 11, 14, 15, 23, 25, 26, 27, 30, 34, 35, 39, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 62, 63, 65, 70, 71, 75, 77, 87, 91, 92, 93, 98, 100, 105, 106, 111, 113, 119, 122, 126, 132, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 168, 170, 171, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 190, 192, 193, 194, 196, 198, 199, 200, 204, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 246, 247, 260, 264, 267, 287, 306, 307, 312, 313, 314, 321, 322, 324, 325, 326, 328, 329, 330, 335, 337, 341, 344, 346, 356, 363, 364, 374, 376, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 434, 436, 437], "impact": [1, 2, 3, 132, 187, 191, 242, 321, 323, 338, 341, 343, 418, 420, 430, 431], "memori": [1, 3, 8, 21, 27, 30, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 76, 77, 89, 91, 92, 96, 119, 122, 123, 126, 130, 133, 134, 146, 147, 154, 155, 180, 184, 208, 223, 229, 230, 233, 235, 237, 239, 254, 264, 265, 310, 408, 410, 414, 417, 418, 420, 430, 434, 436], "manag": [1, 8, 119, 122, 126, 133, 134, 146, 147, 154, 155, 244, 262, 266, 297, 352, 353, 356, 357, 358, 359, 384, 389, 412, 420, 421, 424, 436], "kei": [1, 2, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 97, 98, 100, 103, 105, 106, 111, 119, 122, 126, 131, 132, 133, 134, 146, 147, 148, 149, 154, 155, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 241, 243, 245, 255, 256, 259, 262, 266, 268, 269, 283, 285, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 374, 376, 388, 389, 390, 392, 393, 394, 398, 413, 414, 417, 419, 420, 421, 422, 424, 429, 430, 431, 432, 434, 436, 437], "control": [1, 3, 5, 8, 16, 23, 24, 31, 32, 33, 43, 62, 67, 71, 72, 98, 100, 105, 119, 120, 121, 122, 126, 132, 133, 134, 137, 146, 147, 148, 149, 154, 155, 171, 190, 249, 250, 251, 252, 262, 266, 268, 269, 283, 287, 294, 310, 311, 312, 321, 323, 324, 338, 339, 341, 345, 356, 361, 369, 374, 384, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 434, 436], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 92, 100, 103, 104, 111, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 158, 159, 160, 180, 181, 187, 191, 196, 198, 200, 201, 203, 204, 208, 209, 211, 221, 223, 224, 227, 229, 230, 231, 233, 237, 239, 240, 255, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 280, 282, 292, 299, 300, 301, 302, 306, 307, 310, 311, 312, 313, 321, 322, 323, 324, 326, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 350, 354, 356, 357, 358, 359, 374, 376, 385, 390, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 437], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 418, 431], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 57, 58, 61, 62, 64, 65, 71, 72, 76, 87, 89, 94, 98, 100, 103, 105, 119, 122, 123, 126, 132, 133, 134, 146, 147, 148, 149, 154, 155, 176, 177, 180, 183, 187, 191, 193, 195, 196, 198, 202, 206, 218, 220, 223, 225, 227, 228, 230, 231, 232, 237, 239, 242, 244, 245, 262, 266, 273, 306, 356, 358, 359, 389, 394, 413, 417, 418, 419, 420, 423, 424, 425, 427, 430, 431, 432, 434, 437], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 241, 306, 311, 417, 421, 425, 437], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 103, 111, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 228, 276, 341, 346, 355, 356, 357, 358, 359, 360, 375, 411, 412, 413, 414, 417, 418, 419, 420, 423, 425, 426, 431, 434, 437], "same": [1, 2, 3, 4, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 104, 105, 106, 109, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 141, 142, 146, 147, 148, 149, 151, 154, 155, 173, 180, 187, 188, 190, 191, 196, 198, 201, 202, 203, 204, 220, 228, 229, 230, 237, 239, 240, 246, 247, 261, 262, 265, 266, 267, 270, 271, 272, 273, 283, 291, 302, 314, 322, 324, 337, 339, 342, 344, 346, 347, 351, 413, 417, 418, 419, 422, 423, 425, 429, 430, 431, 433, 434, 437], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 89, 91, 92, 93, 97, 98, 100, 101, 103, 104, 105, 106, 111, 113, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 285, 286, 287, 289, 290, 291, 292, 297, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 408, 413, 414, 417, 418, 419, 420, 423, 430, 433, 434, 436, 437], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 34, 39, 50, 60, 61, 65, 70, 75, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 181, 187, 191, 204, 209, 222, 230, 239, 242, 262, 263, 266, 292, 329, 337, 346, 374, 384, 389, 412, 418, 420, 430, 431, 432, 434], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 187, 191, 198, 204, 223, 224, 227, 231, 266, 282, 307, 311, 312, 313, 396, 406, 407, 412, 417, 418, 422, 423, 431, 432, 437], "choos": [1, 11, 52, 119, 137, 262, 266, 341, 410, 413, 417, 418, 419, 421, 430, 431, 434, 436], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 59, 60, 61, 63, 64, 65, 70, 75, 77, 98, 105, 106, 117, 118, 119, 122, 125, 126, 127, 131, 132, 133, 134, 140, 143, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 168, 176, 180, 200, 208, 233, 237, 239, 246, 247, 260, 262, 264, 266, 267, 304, 307, 308, 309, 320, 321, 322, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 376, 394, 412, 413, 414, 417, 418, 419, 420, 421, 424, 425, 429, 430, 431, 432, 434, 436, 437], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 397, 417, 419, 436], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 50, 180, 196, 239, 241, 259, 283, 306, 375, 376, 378, 381, 383, 387, 389, 394, 397, 398, 417, 418, 419, 420, 423, 430, 431, 434, 436, 437], "call": [1, 2, 3, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 93, 94, 98, 99, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 156, 157, 160, 169, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 273, 274, 275, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 310, 311, 313, 314, 317, 323, 324, 338, 339, 341, 344, 346, 355, 356, 357, 358, 359, 374, 375, 378, 389, 413, 414, 418, 419, 420, 421, 422, 423, 425, 426, 430, 431, 432, 434, 436, 437], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 36, 50, 68, 177, 180, 213, 262, 266, 397, 417, 418, 419, 420, 421, 425, 427, 430, 431, 434, 436], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 34, 38, 39, 43, 45, 46, 48, 50, 51, 60, 61, 62, 64, 65, 67, 69, 70, 71, 77, 98, 100, 103, 105, 106, 108, 111, 119, 122, 123, 126, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 173, 188, 199, 201, 202, 208, 213, 216, 221, 222, 223, 224, 228, 229, 235, 237, 239, 240, 241, 256, 259, 260, 261, 262, 264, 266, 272, 273, 277, 284, 285, 293, 297, 303, 304, 309, 311, 313, 362, 365, 366, 367, 368, 370, 371, 372, 373, 376, 389, 391, 406, 407, 413, 417, 418, 419, 420, 423, 424, 425, 427, 430, 431, 432, 433, 434, 436, 437], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 397, 417, 418, 421, 427], "rand_step": [1, 2, 3, 36, 68, 119, 120, 121, 122, 123, 125, 126, 127, 133, 134, 135, 136, 140, 141, 142, 146, 147, 154, 155, 199, 223, 237, 432, 436, 437], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 417], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 417, 418, 419], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 34, 37, 38, 50, 51, 69, 71, 77, 97, 98, 105, 106, 111, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 180, 209, 221, 228, 239, 243, 266, 269, 283, 341, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 385, 410, 413, 417, 418, 419, 420, 422, 425, 427, 432, 436, 437], "pad": [1, 2, 3, 23, 59, 73, 180, 188, 227, 246, 247, 249, 250, 266, 270, 271, 272, 391], "along": [1, 2, 3, 14, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 70, 75, 76, 77, 78, 79, 80, 81, 82, 93, 98, 100, 105, 106, 111, 113, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 165, 179, 180, 181, 202, 204, 206, 209, 216, 220, 226, 239, 266, 267, 270, 271, 276, 303, 307, 310, 311, 324, 339, 346, 417, 418, 420, 422, 424, 430, 431, 432, 434, 436], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 90, 97, 98, 101, 111, 112, 115, 116, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 239, 268, 310, 320, 331, 394, 411, 418, 419, 429, 430, 431, 432, 434, 436, 437], "boolean": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 64, 66, 67, 75, 78, 79, 80, 81, 82, 98, 105, 106, 126, 172, 176, 209, 221, 270, 271, 283, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 414, 420], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 36, 43, 45, 52, 67, 68, 70, 71, 77, 92, 119, 120, 121, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 158, 159, 196, 209, 225, 237, 239, 256, 270, 271, 285, 291, 303, 304, 308, 309, 350, 356, 391, 412, 417, 419, 420, 421, 422, 423, 424, 430, 431], "valid": [1, 2, 3, 23, 56, 58, 59, 76, 77, 87, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 161, 176, 209, 228, 230, 239, 241, 246, 247, 267, 270, 271, 283, 323, 330, 338, 341, 344, 356, 357, 358, 359, 391, 414, 421, 437], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 389, 410, 412, 417, 418], "strategi": [1, 2, 3, 16, 103, 137, 173, 259, 271, 279, 412, 414, 417, 418, 421, 423, 430, 431, 434, 436], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 75, 77, 78, 79, 80, 81, 82, 84, 93, 100, 105, 106, 119, 122, 126, 132, 133, 134, 140, 146, 147, 148, 149, 154, 155, 158, 161, 177, 179, 180, 185, 192, 200, 221, 222, 223, 228, 230, 236, 237, 239, 240, 241, 246, 247, 262, 266, 270, 271, 272, 273, 282, 303, 307, 308, 311, 314, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 354, 376, 394, 404, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437], "organ": [1, 2, 432, 434], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 92, 97, 98, 106, 119, 122, 125, 126, 127, 133, 134, 146, 147, 151, 154, 155, 172, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 191, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 297, 302, 304, 306, 309, 311, 314, 317, 318, 326, 331, 346, 354, 374, 376, 412, 413, 418, 421, 422, 423, 424, 425, 426, 427, 430, 432, 436], "differ": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 100, 103, 117, 118, 119, 122, 123, 126, 131, 132, 133, 134, 137, 146, 147, 148, 149, 154, 155, 176, 180, 188, 189, 190, 201, 204, 211, 220, 228, 230, 232, 239, 240, 256, 260, 261, 262, 264, 265, 266, 267, 269, 272, 273, 274, 285, 311, 337, 339, 341, 350, 356, 357, 358, 362, 363, 364, 389, 394, 396, 406, 407, 412, 413, 414, 417, 418, 419, 421, 422, 424, 426, 429, 430, 431, 432, 433, 434, 436, 437], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 34, 39, 50, 57, 60, 61, 65, 70, 71, 97, 98, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 173, 188, 201, 239, 274, 307, 321, 323, 336, 338, 339, 341, 376, 378, 394, 411, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "tabl": [1, 27, 412, 418, 423], "summar": [1, 3, 432], "what": [1, 3, 8, 11, 33, 34, 57, 75, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 171, 192, 223, 228, 308, 324, 335, 339, 346, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 436, 437], "expect": [1, 2, 3, 4, 7, 27, 31, 34, 39, 45, 50, 60, 61, 62, 65, 70, 75, 76, 98, 104, 105, 119, 122, 126, 133, 134, 140, 143, 146, 147, 154, 155, 160, 173, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 197, 199, 200, 201, 202, 204, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 260, 261, 262, 264, 265, 266, 272, 273, 283, 304, 310, 313, 321, 322, 323, 324, 325, 326, 328, 329, 330, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 351, 354, 398, 411, 412, 413, 414, 417, 419, 420, 422, 423, 424, 425, 430, 431, 432, 434, 437], "n": [1, 2, 3, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 190, 195, 232, 239, 260, 261, 264, 269, 280, 282, 283, 306, 311, 321, 322, 330, 339, 355, 391, 414, 418, 420, 421, 434, 436, 437], "b": [1, 2, 3, 7, 8, 23, 31, 32, 34, 40, 41, 42, 43, 56, 58, 60, 62, 63, 64, 65, 67, 70, 71, 72, 77, 91, 92, 111, 119, 198, 231, 260, 261, 264, 265, 272, 273, 275, 276, 284, 293, 314, 356, 357, 358, 359, 360, 362, 376, 418, 434], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 88, 97, 98, 100, 104, 105, 106, 111, 119, 122, 123, 125, 126, 133, 134, 141, 142, 146, 147, 154, 155, 160, 171, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 191, 192, 193, 194, 196, 198, 199, 200, 207, 208, 209, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 235, 236, 237, 239, 240, 260, 262, 264, 266, 283, 303, 310, 321, 345, 356, 357, 358, 359, 360, 362, 376, 383, 394, 396, 408, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "p": [1, 2, 4, 100, 103, 123, 152, 153, 244, 245], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 34, 39, 50, 60, 61, 65, 70, 106, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 148, 149, 154, 155, 184, 187, 189, 191, 199, 208, 213, 217, 222, 223, 226, 228, 229, 230, 233, 235, 236, 239, 240, 260, 263, 264, 267, 272, 287, 291, 292, 310, 311, 313, 320, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 396, 406, 407, 408, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 437], "case": [1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 67, 71, 72, 75, 77, 78, 79, 80, 81, 82, 88, 89, 96, 97, 98, 100, 111, 119, 122, 125, 126, 133, 134, 146, 147, 154, 155, 160, 187, 189, 191, 199, 204, 223, 226, 230, 231, 240, 266, 267, 273, 274, 307, 310, 311, 313, 314, 320, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 376, 385, 396, 406, 407, 408, 410, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 426, 430, 431, 432, 434, 436, 437], "dimens": [1, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 62, 63, 64, 66, 67, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 93, 98, 105, 106, 111, 113, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 146, 147, 154, 155, 158, 159, 165, 173, 179, 180, 181, 188, 195, 202, 204, 206, 209, 216, 219, 220, 223, 226, 232, 237, 246, 247, 248, 253, 254, 262, 264, 266, 267, 270, 271, 272, 275, 276, 281, 284, 288, 289, 290, 291, 294, 303, 306, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 408, 410, 413, 417, 418, 419, 420, 422, 430, 431, 432, 434], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 34, 39, 50, 57, 60, 61, 62, 64, 65, 70, 71, 72, 77, 88, 91, 100, 111, 117, 118, 119, 122, 123, 126, 131, 132, 133, 134, 137, 143, 146, 147, 148, 149, 151, 154, 155, 170, 171, 179, 180, 181, 188, 202, 209, 216, 223, 224, 225, 228, 230, 237, 239, 245, 257, 260, 264, 266, 283, 297, 306, 311, 322, 323, 324, 330, 333, 337, 338, 339, 341, 342, 344, 346, 347, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 394, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 436, 437], "adapt": [1, 24, 174, 202, 221, 242, 338, 417, 421, 432], "equal": [1, 14, 15, 17, 27, 77, 98, 105, 106, 119, 133, 141, 144, 145, 146, 154, 203, 204, 246, 247, 260, 262, 264, 266, 267, 271, 273, 345, 350, 385, 406, 407, 417, 419, 433], "introduc": [1, 2, 146, 154, 260, 262, 264, 266, 283, 417, 430], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 65, 66, 67, 70, 75, 76, 77, 78, 79, 80, 81, 82, 91, 93, 100, 111, 113, 117, 118, 119, 122, 125, 126, 127, 131, 132, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 160, 176, 208, 223, 230, 233, 239, 249, 262, 266, 289, 311, 312, 313, 376, 385, 397, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 434, 436, 437], "confus": [1, 25, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 100, 103, 104, 105, 106, 107, 109, 113, 119, 122, 125, 126, 127, 133, 134, 140, 146, 147, 154, 155, 183, 189, 190, 210, 217, 223, 226, 233, 237, 239, 244, 259, 260, 262, 266, 276, 297, 302, 304, 309, 311, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 356, 374, 391, 406, 407, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 436, 437], "better": [1, 3, 8, 9, 14, 15, 23, 132, 262, 266, 413, 419, 422, 432, 436], "consist": [1, 2, 3, 27, 31, 32, 34, 39, 43, 50, 57, 60, 61, 62, 65, 67, 70, 71, 72, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 236, 239, 244, 247, 267, 417, 418, 419, 432, 433, 437], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 230, 307, 311, 417, 419, 421, 422, 423, 425, 430, 431, 432, 437], "keep": [1, 2, 3, 4, 7, 8, 15, 57, 62, 71, 72, 100, 104, 111, 119, 146, 154, 171, 204, 208, 235, 237, 239, 283, 306, 376, 387, 394, 417, 418, 419, 420, 425, 426, 427, 431, 432, 434, 437], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 43, 67, 180, 208, 235, 322, 325, 328, 330, 342, 344, 346, 347, 413, 417, 418, 423, 424, 430, 431, 434, 437], "interchang": [1, 272, 273, 419, 422, 426, 433, 434], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 70, 71, 72, 77, 93, 98, 100, 101, 104, 105, 106, 113, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 160, 190, 203, 214, 225, 228, 230, 237, 239, 246, 247, 255, 260, 262, 266, 267, 272, 273, 304, 307, 311, 321, 323, 324, 325, 328, 329, 330, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 350, 356, 389, 394, 413, 417, 418, 420, 421, 425, 430, 431, 432, 434, 437], "wherea": [1, 2, 22, 27, 34, 39, 50, 60, 61, 65, 70, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 155, 190, 228, 230, 239, 324, 339, 344, 414, 426], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 70, 71, 75, 77, 78, 79, 80, 81, 82, 97, 98, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 180, 198, 208, 223, 228, 230, 235, 237, 239, 244, 259, 262, 264, 266, 270, 271, 283, 307, 311, 324, 326, 329, 330, 344, 354, 356, 357, 358, 359, 360, 412, 417, 418, 419, 421, 422, 424, 425, 426, 430, 431, 432, 433], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 27, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 98, 105, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 209, 228, 239, 312, 313, 385, 394, 412, 413, 417, 418, 419, 425, 429, 436, 437], "doesn": [1, 4, 27, 34, 39, 50, 60, 61, 65, 70, 111, 119, 122, 126, 133, 134, 141, 146, 147, 154, 155, 187, 191, 239, 240, 421, 422], "understood": [1, 417], "serv": [1, 18, 20, 21, 128, 434, 436, 437], "basi": [1, 111, 272, 434, 436], "we": [1, 2, 3, 5, 7, 9, 11, 23, 24, 27, 31, 34, 39, 45, 50, 57, 60, 61, 62, 64, 65, 70, 71, 72, 91, 104, 106, 111, 117, 118, 119, 122, 123, 126, 130, 131, 132, 133, 134, 146, 147, 154, 155, 160, 180, 200, 208, 211, 217, 228, 233, 236, 237, 239, 240, 243, 266, 272, 273, 274, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 376, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "anoth": [1, 2, 3, 8, 45, 70, 75, 92, 98, 105, 119, 122, 125, 126, 127, 130, 133, 134, 146, 147, 154, 155, 177, 185, 187, 189, 191, 223, 229, 267, 307, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 413, 417, 419, 420, 421, 423, 424, 429, 430, 431, 432, 437], "wise": [1, 202], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 92, 97, 98, 105, 106, 119, 122, 126, 130, 133, 134, 141, 146, 147, 151, 154, 155, 177, 180, 184, 198, 208, 220, 223, 228, 229, 230, 233, 235, 239, 244, 262, 266, 267, 274, 294, 310, 311, 312, 313, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 374, 376, 378, 412, 414, 417, 418, 419, 420, 422, 423, 424, 426, 430, 431, 432, 434, 436, 437], "op": [1, 25, 26, 28, 29, 30, 35, 46, 47, 48, 49, 52, 53, 54, 55, 75, 78, 79, 80, 81, 82, 203, 236, 241, 244, 259, 376, 396], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 97, 98, 106, 111, 119, 122, 126, 133, 134, 146, 147, 148, 149, 151, 154, 155, 160, 171, 185, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 303, 304, 306, 308, 309, 314, 317, 374, 376, 413, 417, 418, 419, 420, 422, 423, 424, 430, 432, 433, 434, 436, 437], "goal": [1, 3, 4, 134, 222, 417, 418, 419, 420, 431, 432], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 418], "explicitli": [1, 2, 3, 4, 30, 76, 88, 89, 96, 100, 176, 282, 307, 384, 413, 418, 420, 425, 430, 431, 434], "do": [1, 2, 3, 4, 7, 52, 119, 122, 126, 133, 134, 146, 147, 154, 155, 158, 159, 171, 173, 209, 223, 228, 236, 237, 262, 266, 273, 275, 300, 311, 339, 356, 376, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 436, 437], "deepcopi": [1, 274, 339, 430], "structur": [1, 3, 7, 40, 41, 42, 45, 52, 56, 57, 58, 62, 63, 64, 71, 72, 75, 76, 77, 92, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 187, 191, 223, 272, 283, 321, 330, 341, 344, 356, 357, 358, 359, 360, 410, 413, 417, 419, 420, 422, 425, 430, 431, 432, 433], "place": [1, 2, 3, 24, 27, 33, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 91, 93, 100, 103, 105, 113, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 158, 159, 172, 176, 184, 192, 208, 223, 229, 230, 233, 235, 236, 237, 239, 274, 302, 306, 310, 391, 396, 397, 413, 418, 419, 423, 426, 430, 431, 432, 434], "instanti": [1, 2, 3, 14, 15, 21, 40, 41, 42, 56, 57, 58, 62, 63, 71, 72, 75, 77, 97, 98, 130, 132, 176, 198, 223, 273, 356, 357, 358, 359, 360, 374, 417, 418, 423, 424, 426, 430, 431, 432, 434, 437], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 100, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 138, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 158, 159, 161, 163, 165, 169, 171, 173, 179, 180, 183, 184, 187, 189, 191, 194, 200, 203, 204, 208, 216, 218, 220, 223, 224, 229, 230, 233, 235, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 273, 274, 277, 278, 281, 283, 286, 287, 289, 294, 297, 302, 304, 306, 309, 310, 311, 313, 314, 317, 318, 321, 322, 324, 333, 337, 339, 341, 342, 343, 344, 346, 347, 351, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 390, 394, 397, 406, 407, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 436, 437], "graph": [1, 3, 4, 8, 34, 60, 70, 117, 118, 131, 132, 352, 353, 417, 421, 432], "reli": [1, 2, 3, 11, 23, 61, 65, 223, 260, 261, 262, 264, 265, 266, 321, 341, 413, 417, 419, 421, 423, 425, 432, 437], "third": [1, 204, 225, 304, 430, 431], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 40, 41, 42, 43, 56, 58, 63, 67, 77, 417, 418, 419, 420, 421, 424, 425, 430, 431, 432, 436, 437], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 64, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 180, 200, 321, 323, 338, 339, 341, 343, 413, 417, 418, 420, 430, 431, 432], "chart": 1, "show": [1, 2, 11, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 273, 376, 417, 419, 420, 421, 430, 431, 432, 434, 436], "decis": [1, 2, 3, 248, 253, 281, 302, 327, 340, 412, 420, 422, 423, 430, 431, 434, 437], "simplest": [1, 34, 60, 70, 111, 314, 417, 419, 420, 423, 430, 431, 434, 437], "scenario": [1, 2, 138, 139, 146, 158, 159, 228, 374, 417, 423, 430, 431, 432], "transit": [1, 27, 34, 39, 50, 60, 61, 65, 70, 98, 106, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 242, 244, 316, 417, 420, 422, 423, 425, 430, 432, 434], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 87, 91, 92, 93, 97, 98, 99, 100, 103, 104, 105, 106, 109, 111, 113, 119, 122, 126, 133, 134, 140, 143, 146, 147, 154, 155, 162, 169, 173, 174, 176, 177, 179, 180, 181, 184, 185, 188, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 236, 237, 239, 241, 243, 254, 259, 263, 269, 270, 271, 279, 281, 282, 283, 286, 291, 292, 295, 298, 303, 304, 305, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 328, 338, 340, 341, 346, 347, 385, 391, 394, 397, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 425, 427, 430, 431, 433, 436, 437], "attent": [1, 2, 8, 133, 180, 417, 420, 437], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 98, 100, 105, 106, 119, 122, 126, 133, 134, 140, 144, 145, 146, 147, 154, 155, 156, 157, 171, 184, 188, 190, 198, 204, 208, 223, 227, 229, 230, 231, 233, 235, 237, 239, 241, 243, 245, 256, 257, 259, 260, 262, 264, 266, 269, 274, 285, 289, 298, 303, 304, 306, 309, 310, 311, 312, 313, 315, 320, 325, 326, 328, 339, 355, 356, 357, 358, 359, 360, 362, 386, 389, 404, 412, 413, 414, 417, 418, 419, 422, 423, 424, 425, 426, 431, 432, 437], "built": [1, 2, 3, 5, 7, 100, 117, 118, 125, 131, 132, 143, 144, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 348, 354, 402, 404, 405, 408, 417, 418, 419, 420, 421, 424, 426, 432, 434, 437], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 111, 177, 195, 391, 410, 420, 431], "suffici": [1, 3, 4, 417], "preprocess": [1, 2, 76, 229, 418, 421], "popul": [1, 2, 3, 14, 15, 16, 57, 62, 69, 71, 72, 100, 133, 199, 223, 254, 274, 339, 417, 419, 420, 423, 425, 432, 434], "replaybuff": [1, 2, 3, 14, 15, 16, 36, 57, 68, 71, 72, 91, 92, 97, 98, 99, 100, 105, 106, 115, 180, 209, 213, 239, 326, 331, 354, 402, 404, 410, 419, 421, 425, 427, 430, 431, 433, 434, 436], "lazytensorstorag": [1, 2, 57, 62, 70, 71, 72, 97, 105, 106, 111, 213, 239, 419, 421, 427, 430, 431, 434], "lambda": [1, 2, 14, 15, 16, 17, 21, 22, 34, 45, 60, 62, 70, 77, 111, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 170, 177, 185, 198, 200, 223, 231, 239, 240, 245, 294, 303, 306, 307, 308, 332, 334, 335, 346, 356, 359, 367, 368, 372, 373, 374, 404, 413, 417, 418, 421, 430, 431, 433, 434, 436, 437], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 105, 111, 177, 262, 266, 267, 282, 374, 419, 430, 431], "extend": [1, 2, 8, 36, 45, 57, 60, 62, 68, 71, 72, 77, 90, 91, 94, 97, 98, 100, 101, 105, 106, 109, 111, 112, 115, 116, 173, 179, 213, 229, 239, 242, 339, 391, 413, 414, 417, 418, 419, 420, 421, 425, 427, 430, 431, 433, 434, 436], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 98, 100, 105, 106, 173, 179, 180, 434], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 57, 58, 62, 63, 71, 72, 77, 105, 111, 130, 180, 274, 413, 425, 430, 431], "achiev": [1, 2, 3, 4, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 130, 133, 134, 146, 147, 154, 155, 172, 222, 239, 245, 307, 391, 414, 417, 418, 419, 420, 421, 430, 431, 432, 434, 436, 437], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 92, 94, 100, 111, 119, 122, 123, 126, 130, 133, 134, 146, 147, 148, 154, 155, 158, 159, 165, 171, 177, 180, 188, 198, 208, 228, 229, 230, 233, 236, 237, 239, 246, 247, 249, 250, 251, 252, 253, 254, 258, 262, 266, 267, 268, 272, 273, 302, 311, 318, 324, 326, 331, 342, 344, 354, 376, 391, 398, 399, 400, 404, 406, 407, 412, 417, 418, 419, 420, 421, 423, 426, 430, 431, 432, 433, 434, 436, 437], "multidimension": [1, 2, 71, 97, 98, 434], "slicesampl": [1, 2, 98, 106, 180, 434], "sampler": [1, 2, 57, 62, 71, 72, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 111, 113, 180, 209, 282, 326, 331, 354, 417, 419, 430, 431, 434], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 35, 43, 48, 49, 54, 55, 67, 76, 111, 117, 118, 146, 154, 180, 213, 233, 241, 279, 310, 314, 345, 350, 380, 417, 418, 434, 437], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 94, 98, 100, 105, 106, 107, 108, 109, 111, 113, 117, 119, 122, 123, 126, 131, 133, 134, 144, 146, 147, 148, 149, 151, 154, 155, 156, 158, 168, 173, 176, 177, 180, 183, 185, 192, 196, 198, 200, 202, 204, 206, 217, 220, 222, 223, 224, 227, 228, 230, 231, 232, 237, 239, 246, 247, 256, 262, 266, 267, 270, 271, 272, 273, 285, 298, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 345, 346, 347, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 413, 417, 418, 419, 420, 423, 429, 432, 434], "ensur": [1, 2, 3, 27, 34, 39, 50, 57, 60, 61, 65, 70, 71, 77, 97, 98, 104, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 180, 188, 208, 221, 230, 233, 237, 239, 262, 266, 303, 412, 418, 419, 432, 434], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 93, 97, 100, 105, 111, 113, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 160, 165, 171, 173, 177, 179, 181, 187, 188, 191, 192, 193, 198, 200, 201, 204, 206, 210, 211, 213, 217, 220, 221, 223, 226, 231, 237, 238, 239, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 279, 280, 281, 282, 283, 284, 285, 290, 291, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 385, 391, 394, 404, 412, 413, 417, 418, 419, 420, 421, 423, 424, 427, 429, 430, 431, 433, 434, 436, 437], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 52, 229, 263, 291, 292, 320, 411, 417, 418, 419, 420, 421, 424, 430, 431, 433, 437], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 56, 58, 60, 61, 65, 70, 75, 107, 111, 119, 122, 126, 130, 133, 134, 137, 146, 147, 148, 149, 154, 155, 180, 183, 185, 188, 195, 201, 208, 211, 224, 228, 229, 230, 235, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 275, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 307, 308, 309, 310, 314, 317, 320, 330, 343, 344, 355, 360, 376, 394, 408, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 436, 437], "dimension": [1, 57, 61, 62, 70, 71, 72, 190, 262, 266, 356, 361, 369, 413, 431], "num_slic": [1, 2, 98, 105, 106, 434], "4": [1, 2, 3, 7, 25, 27, 31, 32, 36, 43, 45, 48, 49, 50, 54, 57, 60, 62, 64, 65, 67, 68, 70, 71, 72, 91, 92, 93, 100, 105, 106, 113, 117, 118, 119, 120, 121, 122, 126, 131, 132, 133, 134, 135, 136, 137, 140, 142, 146, 147, 152, 153, 154, 155, 173, 174, 176, 177, 180, 185, 192, 213, 220, 221, 222, 228, 237, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 267, 269, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 315, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 374, 375, 412, 416, 417, 418, 419, 420, 426, 430, 431, 432, 434, 435, 436, 437], "trajectory_kei": [1, 23, 105, 106], "traj_id": [1, 2, 3, 14, 15, 16, 23, 36, 68, 177, 213, 425, 434], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 36, 50, 68, 177, 180, 213, 394, 397, 404, 414, 417, 418, 419, 420, 421, 425, 427, 430, 431, 434, 436], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 67, 71, 72, 75, 77, 78, 79, 80, 81, 82, 105, 180, 181, 202, 206, 219, 220, 223, 232, 237, 265, 289, 294, 306, 408, 413, 418, 419, 421, 430, 432, 434], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 91, 93, 97, 98, 111, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 202, 239, 306], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 111, 119, 122, 126, 133, 134, 141, 147, 148, 149, 151, 154, 155, 228, 262, 266, 374, 405, 410, 417, 418, 419, 422, 429, 436, 437], "make_env": [1, 3, 146, 154, 159, 228, 237, 374, 399, 400, 417, 418, 436, 437], "regular": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 58, 63, 77, 97, 103, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 236, 237, 239, 242, 244, 255, 262, 266, 285, 304, 308, 309, 310, 311, 331, 341, 396, 410, 414, 417, 418, 421, 422, 423, 427, 434, 437], "behav": [1, 3, 128, 140, 260, 264, 279, 329, 337, 339, 421, 433], "accordingli": [1, 2, 3, 98, 185, 202, 221, 222, 264, 308, 420], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 72, 77, 91, 93, 98, 100, 105, 106, 111, 113, 119, 120, 121, 122, 125, 126, 127, 128, 129, 133, 134, 137, 138, 139, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 174, 176, 177, 180, 184, 185, 188, 190, 192, 193, 198, 200, 204, 206, 208, 210, 211, 213, 216, 217, 220, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 253, 256, 258, 260, 261, 262, 264, 265, 266, 267, 269, 272, 273, 274, 279, 282, 284, 294, 298, 299, 300, 301, 303, 304, 307, 309, 310, 313, 314, 315, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 393, 412, 414, 416, 417, 418, 419, 420, 422, 423, 425, 426, 430, 431, 432, 434, 435, 436, 437], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 58, 63, 77, 97, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 176, 192, 198, 303, 310, 423, 424, 426, 430, 431], "current": [1, 2, 3, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 95, 98, 100, 106, 119, 122, 126, 128, 133, 134, 141, 144, 145, 146, 147, 154, 155, 162, 171, 176, 177, 180, 198, 209, 222, 223, 224, 228, 229, 230, 239, 257, 283, 287, 291, 295, 306, 321, 323, 324, 331, 338, 341, 343, 344, 379, 414, 417, 418, 419, 420, 424, 430, 431, 432, 434, 437], "fulli": [1, 8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 261, 265, 418, 421, 424, 432, 434], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 89, 90, 91, 92, 93, 94, 100, 101, 104, 106, 107, 109, 111, 112, 113, 115, 116, 119, 122, 123, 126, 133, 134, 141, 146, 147, 148, 149, 154, 155, 156, 158, 159, 160, 172, 174, 176, 177, 179, 180, 181, 184, 185, 188, 189, 192, 193, 194, 195, 196, 198, 199, 200, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 245, 246, 247, 253, 254, 267, 276, 282, 302, 306, 310, 311, 312, 313, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 356, 358, 359, 374, 376, 381, 394, 411, 413, 417, 418, 419, 420, 421, 423, 424, 430, 431, 432, 434, 436, 437], "consecut": [1, 3, 104, 130, 266, 283, 376, 420, 422, 425, 431, 434, 437], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 123, 125, 126, 133, 134, 141, 142, 146, 147, 154, 155, 208, 235, 239, 321, 394, 408, 418, 419, 422, 423], "therebi": [1, 24, 374, 413, 417, 418], "interrupt": [1, 2, 126, 306, 362], "These": [1, 2, 7, 45, 64, 114, 158, 208, 235, 412, 413, 417, 419, 430, 431, 432, 434, 437], "tool": [1, 2, 3, 5, 412, 413, 420, 422, 430, 432, 434, 437], "backend": [1, 3, 7, 18, 19, 21, 22, 77, 119, 122, 125, 126, 133, 134, 146, 147, 154, 155, 164, 170, 240, 414, 417, 419, 420, 421, 422, 425, 426, 432], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 410], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 410], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 62, 71, 72, 92, 100, 123, 124, 146, 154, 237, 417, 418, 419, 420, 425, 430, 431, 432, 433, 437], "synchron": [1, 14, 15, 16, 19, 21, 40, 41, 42, 56, 58, 63, 77, 141, 406, 407, 418, 419, 430], "mode": [1, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 141, 146, 147, 154, 155, 187, 191, 222, 230, 237, 239, 244, 254, 262, 263, 266, 271, 279, 290, 291, 292, 297, 307, 311, 339, 374, 384, 389, 412, 413, 417, 418, 430, 431, 436, 437], "find": [1, 4, 6, 7, 18, 19, 20, 57, 59, 73, 105, 106, 241, 264, 283, 388, 392, 417, 418, 421, 423, 424, 430, 431], "folder": [1, 2, 40, 41, 42, 56, 58, 63, 77, 158, 180, 418], "variou": [1, 2, 3, 119, 229, 262, 266, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 348, 354, 376, 406, 407, 417, 418, 419, 421, 422, 423, 424, 426, 430, 431, 434, 437], "machin": [1, 2, 7, 18, 19, 20, 50, 130, 430, 431, 436], "wonder": 1, "why": [1, 2, 3, 171, 413, 430, 432, 437], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 16, 25, 27, 30, 34, 39, 50, 60, 61, 65, 70, 74, 77, 119, 122, 126, 132, 133, 134, 146, 147, 154, 155, 180, 195, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 321, 323, 324, 326, 329, 330, 331, 337, 338, 341, 342, 343, 344, 354, 356, 360, 364, 408, 413, 421, 422, 423, 427, 432, 434, 437], "lower": [1, 2, 3, 21, 27, 28, 183, 237, 286, 287, 314, 419, 430, 432], "io": [1, 11, 131, 132, 141, 144, 145, 156, 157, 264, 265, 421], "footprint": [1, 2, 434], "commun": [1, 2, 3, 134, 146, 154, 411, 419, 437], "yet": [1, 117, 118, 131, 433], "plai": [1, 3, 148, 149, 155, 180, 418, 419, 424, 434, 437], "role": [1, 3, 139, 418, 424, 437], "opposit": [1, 430], "direct": [1, 2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 260, 264, 339, 418, 424], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 141, 356, 357, 358, 359, 420, 421, 430, 431], "share": [1, 3, 6, 8, 23, 40, 41, 42, 56, 58, 62, 63, 71, 72, 75, 77, 89, 91, 92, 93, 94, 98, 100, 101, 105, 107, 109, 113, 123, 146, 154, 220, 228, 237, 262, 266, 272, 273, 299, 300, 301, 321, 322, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 408, 410, 412, 413, 419, 421, 427, 429, 430, 431, 436, 437], "among": [1, 3, 52, 148, 149, 228, 330, 344, 413, 430, 431], "prohibit": [1, 3, 111], "slow": [1, 3, 4, 11, 40, 41, 42, 56, 58, 63, 77, 92, 105, 106], "compar": [1, 3, 111, 322, 324, 337, 342, 344, 346, 347, 389, 413, 417, 419, 421, 423, 424, 430, 431, 434, 437], "gpu": [1, 7, 8, 27, 34, 39, 50, 60, 61, 65, 70, 91, 93, 113, 119, 122, 126, 127, 130, 133, 134, 146, 147, 154, 155, 239, 417, 419, 420, 430, 431, 437], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 58, 63, 71, 75, 77, 92, 97, 98, 105, 106, 111, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 204, 228, 237, 241, 242, 243, 254, 257, 260, 262, 264, 266, 269, 281, 282, 290, 291, 307, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 412, 413, 417, 418, 419, 421, 423, 430, 431, 432, 434, 437], "keyword": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 97, 98, 100, 103, 105, 106, 109, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 158, 159, 165, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 188, 189, 192, 193, 194, 196, 198, 199, 200, 202, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 259, 262, 266, 270, 271, 272, 273, 283, 298, 302, 303, 306, 307, 308, 310, 311, 314, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 349, 354, 356, 357, 358, 359, 360, 364, 374, 376, 381, 383, 394, 405, 417, 418, 419, 421, 423, 426, 430, 431, 434, 436, 437], "build": [1, 2, 3, 7, 23, 27, 31, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 75, 100, 117, 118, 119, 122, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 144, 145, 146, 147, 151, 154, 155, 156, 157, 158, 159, 213, 237, 239, 243, 262, 266, 269, 305, 307, 311, 394, 401, 402, 403, 412, 413, 414, 419, 420, 421, 423, 424, 425, 426, 430, 431, 432, 433, 436, 437], "mani": [1, 2, 3, 4, 62, 117, 118, 120, 121, 122, 125, 127, 128, 131, 132, 133, 141, 142, 151, 188, 223, 321, 323, 330, 338, 341, 412, 417, 418, 419, 421, 422, 423, 425, 427, 430, 431, 432, 434, 436, 437], "eg": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 107, 109, 113, 119, 120, 121, 122, 125, 126, 127, 128, 130, 133, 134, 146, 147, 151, 154, 155, 190, 221, 230, 240, 272, 302, 376], "gymnasium": [1, 2, 3, 5, 70, 119, 122, 125, 126, 127, 133, 134, 135, 136, 146, 147, 154, 155, 164, 170, 193, 217, 221, 236, 240, 418, 419, 421, 432, 436], "warn": [1, 3, 61, 65, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 259, 283, 384, 418], "quickli": [1, 3, 418, 430, 431, 437], "becom": [1, 2, 3, 4, 21, 260, 264, 430, 431, 437], "quit": [1, 3, 11, 119, 122, 126, 133, 134, 146, 147, 154, 155, 417, 418, 419, 421, 423, 430, 431, 437], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 43, 54, 67, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 138, 139, 146, 147, 148, 149, 151, 154, 155, 158, 159, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 202, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 294, 311, 339, 384, 389, 408, 413, 417, 420, 430, 433, 434, 437], "filter": [1, 2, 3, 4, 76, 98, 105, 106, 321, 322, 324, 325, 329, 330, 337, 341, 342, 344, 422], "out": [1, 2, 3, 4, 5, 9, 21, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 63, 65, 70, 76, 77, 89, 98, 105, 106, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 160, 188, 220, 223, 239, 241, 260, 261, 264, 270, 271, 274, 275, 276, 298, 302, 303, 304, 307, 308, 309, 310, 311, 339, 352, 353, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 430, 431, 432, 434, 436, 437], "still": [1, 2, 3, 9, 34, 60, 70, 77, 78, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 228, 283, 338, 339, 413, 417, 418, 420, 429, 432, 434, 437], "wish": [1, 3, 11, 14, 15, 17, 170, 424, 434], "displai": [1, 3, 7, 119, 122, 126, 133, 134, 146, 147, 154, 155, 394, 414, 417, 418, 431, 432], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 174, 176, 177, 180, 181, 184, 185, 187, 188, 191, 192, 193, 195, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 283, 284, 285, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 321, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 350, 354, 356, 357, 358, 359, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 383, 384, 387, 388, 389, 391, 392, 394, 408, 412, 413, 414, 417, 418, 419, 421, 426, 427, 429, 430, 431, 432, 433, 436, 437], "central": [2, 272, 273, 274, 417, 418, 422, 430, 431, 434], "part": [2, 3, 4, 8, 27, 34, 39, 50, 60, 61, 64, 65, 70, 77, 117, 119, 122, 126, 131, 133, 134, 144, 146, 147, 154, 155, 171, 179, 204, 213, 216, 239, 262, 266, 315, 385, 408, 413, 417, 419, 420, 421, 427, 430, 432, 437], "algorithm": [2, 3, 8, 9, 140, 173, 220, 321, 341, 342, 344, 410, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 430, 431, 433, 434, 436], "implement": [2, 3, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 74, 75, 78, 79, 80, 81, 82, 95, 107, 108, 119, 122, 126, 133, 134, 140, 141, 146, 147, 154, 155, 177, 184, 187, 189, 193, 196, 200, 202, 210, 211, 217, 221, 227, 229, 230, 231, 237, 239, 240, 244, 246, 260, 261, 262, 263, 264, 265, 266, 290, 291, 292, 321, 322, 324, 327, 328, 329, 335, 337, 339, 340, 341, 343, 344, 346, 374, 385, 399, 412, 414, 417, 418, 419, 420, 421, 430, 431, 432, 436], "wide": [2, 3, 5, 436], "give": [2, 3, 7, 71, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 180, 411, 413, 417, 418, 421, 430, 431, 432, 433, 436], "abil": [2, 339, 432, 434], "panel": [2, 419], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 34, 60, 70, 89, 111, 177, 180, 192, 244, 262, 266, 324, 329, 337, 344, 348, 412, 417, 419, 420, 423, 424, 426, 430, 431, 434], "includ": [2, 3, 4, 7, 9, 21, 27, 34, 39, 50, 60, 61, 65, 70, 75, 77, 88, 89, 91, 92, 93, 94, 96, 107, 109, 113, 119, 122, 126, 133, 134, 140, 144, 145, 146, 147, 154, 155, 195, 198, 222, 228, 230, 237, 239, 262, 266, 321, 324, 339, 344, 397, 412, 414, 417, 418, 419, 420, 421, 430, 431, 432, 434, 437], "almost": [2, 271, 420], "physic": [2, 6, 7, 89, 146, 147, 151, 414, 417, 430, 431, 432], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 91, 92, 93, 94, 107, 109, 113, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 223, 239, 274, 283, 326, 339, 354, 417, 418, 420, 430, 431, 433, 434, 436], "liststorag": [2, 45, 57, 62, 70, 71, 72, 92, 100, 434], "veri": [2, 3, 131, 132, 418, 422, 425, 430, 432, 434, 436, 437], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 34, 39, 40, 41, 42, 43, 50, 52, 54, 56, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 77, 92, 98, 100, 103, 105, 106, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 171, 176, 177, 211, 239, 240, 267, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 348, 350, 354, 412, 414, 417, 419, 420, 421, 422, 423, 424, 430, 431, 432, 434, 436, 437], "complex": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310, 417, 418, 422, 423], "tensor": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 165, 171, 172, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 188, 190, 191, 192, 193, 195, 198, 199, 201, 204, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 319, 321, 322, 324, 325, 326, 328, 329, 330, 333, 334, 337, 339, 341, 342, 343, 344, 346, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 430, 431, 432, 436, 437], "contigu": [2, 3, 8, 28, 31, 39, 78, 92, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 198, 201, 223, 231, 432, 434, 436], "tensorstorag": [2, 62, 70, 91, 97, 98, 111, 114, 425, 434], "lazymemmapstorag": [2, 36, 57, 62, 68, 71, 72, 98, 100, 105, 106, 179, 180, 417, 418, 420, 425, 430, 433, 434], "citizen": 2, "pytre": [2, 57, 62, 71, 72, 94, 100, 114], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 89, 94, 98, 100, 105, 109, 111, 119, 120, 121, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 180, 198, 200, 204, 239, 245, 249, 255, 256, 262, 265, 266, 267, 274, 281, 284, 285, 303, 304, 308, 309, 314, 321, 322, 323, 324, 325, 329, 330, 332, 337, 338, 339, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 388, 389, 392, 401, 434, 436], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 76, 77, 98, 103, 105, 106, 119, 122, 125, 126, 127, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 198, 223, 228, 230, 239, 307, 311, 324, 344, 346, 389, 406, 407, 408, 414, 418, 419, 422, 424, 430, 432, 437], "nest": [2, 3, 23, 27, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 77, 83, 91, 92, 93, 96, 100, 113, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 172, 180, 221, 224, 228, 239, 306, 356, 357, 358, 359, 360, 374, 384, 414, 418, 419, 421, 431, 432, 434, 436], "construct": [2, 3, 5, 23, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 75, 100, 119, 122, 123, 125, 126, 133, 134, 146, 147, 148, 154, 155, 160, 187, 191, 239, 262, 266, 287, 311, 394, 412, 418, 419, 420, 423, 430, 432, 434, 437], "ram": [2, 125, 127, 426, 434], "prealloc": [2, 3, 146, 154, 432], "ve": [2, 64, 417, 420, 427], "been": [2, 3, 5, 7, 8, 12, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 64, 66, 67, 75, 78, 79, 80, 81, 82, 100, 104, 119, 122, 126, 130, 133, 134, 138, 139, 146, 147, 154, 155, 200, 221, 222, 229, 230, 260, 262, 264, 266, 274, 306, 321, 339, 341, 343, 417, 418, 419, 420, 429, 430, 431, 432, 434, 436, 437], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 111, 119, 120, 121, 122, 126, 130, 133, 134, 146, 147, 148, 149, 154, 155, 180, 228, 274, 383, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 427, 430, 431, 432, 434, 436, 437], "start": [2, 3, 4, 5, 14, 21, 24, 45, 75, 76, 77, 98, 105, 106, 119, 122, 123, 126, 133, 134, 137, 146, 147, 154, 155, 171, 186, 390, 416, 417, 418, 421, 428, 431, 432, 434, 435, 437], "replay_buff": [2, 8, 14, 15, 16, 57, 62, 71, 72, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 180, 391, 404, 417, 418, 419, 425, 430, 431, 434], "import": [2, 3, 4, 6, 10, 11, 14, 15, 16, 17, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 97, 98, 100, 105, 106, 111, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 164, 165, 170, 171, 172, 173, 174, 176, 177, 179, 180, 183, 185, 188, 192, 193, 198, 199, 200, 201, 204, 206, 208, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 235, 237, 239, 240, 243, 245, 249, 250, 251, 252, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 272, 273, 274, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 374, 376, 387, 389, 404, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "rb": [2, 36, 57, 62, 68, 71, 72, 92, 97, 98, 100, 105, 106, 111, 180, 213, 239, 418, 420, 421, 425, 427, 431, 433, 434, 436], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 35, 45, 46, 50, 57, 62, 64, 70, 71, 72, 73, 76, 77, 91, 92, 93, 97, 100, 105, 106, 111, 113, 117, 118, 119, 122, 123, 126, 131, 132, 133, 134, 140, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 173, 174, 177, 179, 180, 185, 188, 222, 224, 225, 226, 239, 243, 245, 248, 249, 251, 253, 255, 259, 260, 261, 262, 264, 265, 266, 269, 271, 281, 283, 294, 307, 311, 314, 318, 322, 326, 328, 335, 341, 342, 343, 347, 354, 356, 357, 358, 359, 362, 376, 385, 414, 417, 418, 419, 420, 421, 422, 423, 427, 430, 432, 434, 436, 437], "add": [2, 3, 4, 6, 21, 27, 31, 32, 34, 39, 43, 45, 50, 57, 60, 61, 62, 65, 67, 70, 71, 72, 90, 92, 97, 100, 101, 111, 112, 115, 116, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 198, 200, 227, 230, 239, 262, 266, 275, 305, 321, 390, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 436], "string": [2, 18, 19, 20, 27, 34, 39, 45, 50, 52, 59, 60, 61, 65, 70, 76, 77, 87, 92, 119, 122, 126, 133, 134, 138, 144, 146, 147, 154, 155, 170, 188, 198, 208, 221, 227, 235, 239, 262, 266, 303, 306, 307, 308, 320, 375, 393, 413, 417, 419, 420, 434], "element": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 40, 41, 42, 45, 46, 48, 54, 56, 57, 58, 62, 63, 70, 71, 72, 75, 77, 91, 92, 93, 94, 97, 98, 100, 105, 106, 111, 113, 119, 122, 126, 133, 134, 143, 146, 147, 154, 155, 173, 180, 185, 188, 209, 218, 222, 223, 241, 246, 247, 260, 261, 264, 297, 298, 303, 306, 310, 311, 315, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 385, 413, 417, 419, 423, 425, 434, 437], "30": [2, 3, 62, 70, 105, 106, 176, 203, 286, 287, 374, 378, 381, 383, 425, 431, 432, 434], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 103, 105, 106, 107, 109, 111, 113, 119, 122, 123, 125, 126, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 195, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 403, 404, 406, 407, 408, 412, 414, 417, 418, 420, 421, 432, 434, 436], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 105, 106, 107, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 146, 147, 148, 149, 151, 154, 155, 158, 159, 160, 165, 173, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 190, 195, 196, 198, 202, 203, 204, 206, 208, 209, 212, 219, 220, 221, 224, 227, 228, 230, 232, 235, 239, 241, 242, 243, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 302, 303, 304, 306, 307, 309, 311, 321, 322, 323, 330, 332, 333, 338, 339, 340, 341, 342, 346, 347, 356, 358, 359, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 381, 383, 385, 386, 387, 389, 391, 394, 396, 406, 407, 408, 421, 432, 434], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 34, 36, 39, 40, 41, 42, 43, 45, 50, 56, 58, 59, 60, 61, 63, 65, 67, 68, 70, 76, 77, 84, 105, 106, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 138, 139, 146, 147, 151, 154, 155, 158, 159, 171, 172, 176, 180, 182, 183, 185, 186, 187, 189, 191, 192, 195, 199, 201, 202, 204, 206, 208, 211, 213, 216, 218, 220, 221, 222, 223, 225, 228, 230, 232, 235, 237, 239, 262, 270, 271, 302, 303, 306, 308, 309, 322, 324, 344, 356, 357, 358, 359, 412, 417, 419, 420, 422, 423, 424, 426, 430, 431, 432, 433, 434, 436, 437], "onto": [2, 8, 40, 41, 42, 54, 56, 58, 63, 77, 165, 189, 241, 283, 298, 303, 304, 307, 308, 309, 310, 311, 420, 432], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 90, 97, 98, 100, 101, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 155, 158, 159, 172, 173, 180, 181, 221, 222, 223, 224, 230, 239, 240, 246, 247, 267, 270, 271, 273, 283, 306, 308, 309, 317, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 398, 408, 411, 414, 419, 420, 421, 425, 426, 427, 432, 434, 437], "without": [2, 3, 7, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 158, 159, 174, 176, 187, 191, 226, 229, 239, 260, 261, 264, 265, 300, 301, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 355, 356, 357, 358, 359, 360, 404, 411, 412, 417, 418, 419, 421, 422, 423, 424, 425, 430, 431, 432, 434, 437], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 63, 64, 65, 70, 71, 77, 97, 98, 119, 122, 126, 133, 134, 140, 146, 147, 148, 149, 154, 155, 156, 157, 172, 174, 176, 177, 187, 190, 191, 198, 210, 221, 222, 228, 230, 234, 237, 239, 241, 243, 244, 259, 260, 262, 266, 269, 274, 283, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 354, 356, 357, 358, 359, 360, 389, 394, 396, 399, 400, 403, 404, 414, 418, 419, 420, 421, 424, 427, 430, 431, 432, 434, 437], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 60, 64, 66, 67, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 98, 105, 106, 109, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 173, 180, 188, 201, 209, 237, 243, 246, 247, 249, 251, 253, 260, 264, 267, 269, 272, 273, 298, 310, 315, 385, 391, 417, 419, 420, 425, 427, 432, 434, 437], "cursor": [2, 57, 62, 71, 72, 100], "afterward": [2, 27, 34, 39, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 430, 437], "tell": [2, 3, 4, 7, 148, 149, 228, 417, 420, 425, 430, 431], "our": [2, 3, 7, 8, 11, 18, 45, 62, 180, 376, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 436], "far": [2, 57, 62, 64, 71, 72, 100, 263, 291, 292, 427, 432, 437], "restrict": [2, 3, 413, 418, 433, 434, 437], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 94, 100, 119, 122, 126, 132, 133, 134, 143, 146, 147, 154, 155, 165, 187, 191, 208, 210, 224, 230, 233, 235, 239, 380, 417, 432], "64": [2, 3, 40, 41, 42, 56, 58, 63, 77, 100, 180, 212, 249, 250, 258, 262, 266, 273, 274, 284, 354, 417, 418, 419, 420, 421, 423, 427, 429, 432, 434, 436, 437], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 91, 92, 93, 97, 98, 105, 106, 113, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 160, 165, 168, 171, 172, 173, 174, 177, 178, 184, 187, 188, 189, 190, 191, 192, 193, 198, 200, 201, 204, 206, 208, 210, 211, 213, 217, 220, 221, 223, 225, 226, 229, 230, 231, 233, 235, 239, 243, 245, 255, 256, 260, 261, 262, 264, 265, 266, 269, 275, 276, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 362, 412, 421, 429, 432, 434, 436, 437], "unit8": 2, "img": 2, "randint": [2, 76, 100, 188, 226, 434], "255": [2, 100, 226, 434], "uint8": [2, 3, 31, 40, 41, 42, 56, 58, 63, 77, 120, 121, 138, 139, 192, 198, 206, 226, 418, 434], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 34, 36, 38, 43, 45, 50, 57, 62, 64, 67, 68, 70, 71, 72, 77, 87, 88, 89, 96, 98, 100, 105, 106, 111, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 138, 139, 140, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 159, 165, 171, 173, 176, 177, 179, 180, 185, 187, 188, 191, 192, 193, 198, 199, 200, 201, 202, 206, 210, 211, 213, 216, 217, 221, 223, 225, 228, 231, 236, 237, 239, 243, 261, 262, 265, 266, 269, 287, 306, 316, 318, 321, 322, 324, 325, 326, 328, 329, 330, 331, 337, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 376, 388, 389, 392, 418, 420, 421, 423, 427, 432, 433, 436, 437], "ask": [2, 3, 8, 98, 105, 106, 376, 419, 420, 422, 423, 430, 431, 433, 437], "automat": [2, 3, 5, 12, 28, 45, 75, 78, 91, 93, 100, 106, 113, 119, 122, 125, 126, 127, 133, 134, 146, 147, 148, 149, 154, 155, 176, 187, 188, 191, 204, 223, 236, 246, 262, 266, 298, 306, 307, 311, 374, 384, 412, 417, 419, 422, 423, 430, 431, 432, 434, 436], "hand": [2, 3, 7, 21, 31, 430, 431, 432], "look": [2, 3, 5, 7, 8, 27, 34, 39, 50, 60, 61, 65, 70, 98, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 198, 208, 209, 233, 239, 244, 307, 311, 312, 313, 413, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 64, 65, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 88, 89, 96, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 179, 182, 186, 188, 195, 208, 209, 216, 223, 230, 233, 235, 245, 262, 266, 294, 297, 314, 326, 330, 331, 344, 354, 365, 366, 367, 368, 370, 371, 372, 373, 376, 417, 419, 429, 432], "lead": [2, 3, 4, 8, 10, 23, 31, 32, 43, 50, 57, 62, 67, 71, 72, 77, 104, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 146, 147, 154, 155, 223, 240, 263, 284, 291, 292, 297, 417, 420, 421, 430, 431, 432, 434, 436], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 62, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 172, 217, 413, 417, 425, 434], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 88, 100, 109, 119, 120, 121, 122, 123, 125, 126, 127, 128, 133, 134, 146, 147, 154, 155, 173, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 193, 195, 197, 199, 200, 201, 202, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 246, 247, 254, 262, 266, 267, 272, 273, 290, 298, 302, 303, 307, 308, 310, 311, 314, 315, 322, 324, 330, 338, 340, 342, 344, 391, 396, 412, 413, 417, 419, 421, 429, 431, 432, 434, 437], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 180, 229, 418, 419, 421, 425, 434, 436, 437], "throw": [2, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 437], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 34, 36, 40, 41, 42, 45, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 70, 71, 72, 73, 76, 77, 87, 91, 92, 93, 97, 98, 99, 100, 105, 106, 111, 113, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 171, 172, 173, 177, 179, 180, 184, 187, 188, 191, 192, 193, 198, 206, 210, 211, 213, 217, 220, 221, 223, 229, 230, 231, 239, 243, 245, 253, 254, 255, 256, 259, 262, 266, 269, 283, 284, 285, 293, 294, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 376, 385, 391, 412, 413, 417, 418, 419, 420, 425, 430, 431, 432, 434, 436, 437], "max": [2, 23, 54, 58, 71, 76, 87, 97, 98, 111, 132, 190, 224, 283, 322, 323, 324, 330, 340, 342, 344, 417, 419, 420, 421, 427], "label": [2, 58, 59, 64, 76, 77, 417, 430, 434], "100": [2, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 91, 93, 100, 105, 106, 111, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 183, 188, 192, 204, 213, 218, 221, 239, 271, 272, 304, 306, 376, 386, 404, 418, 419, 421, 422, 424, 427, 429, 430, 431, 432, 434, 436, 437], "rb_pytre": 2, "randn": [2, 57, 60, 62, 71, 72, 91, 92, 93, 98, 100, 105, 106, 113, 165, 179, 204, 245, 248, 249, 253, 255, 256, 260, 261, 264, 265, 270, 271, 272, 279, 281, 285, 298, 299, 300, 301, 302, 303, 307, 308, 310, 313, 314, 315, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 393, 412, 421, 434, 436, 437], "c": [2, 3, 6, 7, 31, 34, 40, 41, 42, 56, 58, 60, 62, 63, 70, 71, 72, 77, 92, 204, 226, 231, 264, 265, 418, 434], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 91, 93, 100, 105, 106, 111, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 171, 177, 179, 181, 187, 188, 190, 191, 204, 210, 213, 220, 239, 242, 243, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 283, 284, 293, 309, 311, 317, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 362, 420, 421, 434, 436, 437], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 100, 111, 119, 122, 126, 129, 133, 134, 146, 147, 154, 155, 160, 165, 170, 173, 177, 180, 183, 187, 191, 200, 211, 218, 230, 237, 245, 273, 294, 356, 357, 358, 359, 384, 385, 393, 425, 429, 434, 437], "len": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 91, 93, 100, 113, 188, 206, 246, 247, 267, 273, 417, 421, 425, 427, 430, 432, 433, 434, 436], "ambigu": [2, 57, 62, 71, 72, 100], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 77, 100, 109, 119, 122, 126, 133, 134, 146, 147, 154, 155, 168, 177, 184, 198, 208, 223, 229, 230, 233, 235, 239, 310, 413, 417, 421, 422, 432], "deal": [2, 3, 57, 62, 71, 72, 100, 339, 413, 417, 419, 431, 434], "interpret": [2, 3, 57, 62, 71, 72, 100, 418], "put": [2, 57, 62, 71, 72, 100, 126, 138, 139, 155, 158, 159, 237, 383, 408, 412, 418, 419, 420, 422, 430, 432], "solv": [2, 4, 7, 9, 10, 57, 62, 71, 72, 100, 411, 417, 418, 419, 425, 427, 430, 431, 432, 434], "clear": [2, 3, 11, 27, 31, 32, 34, 39, 43, 44, 50, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 100, 119, 122, 126, 130, 133, 134, 146, 147, 154, 155, 239, 386, 422, 425], "cut": [2, 57, 62, 71, 72, 100], "distinct": [2, 3, 57, 62, 71, 72, 100, 177, 180, 424, 429], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 174, 239, 256, 260, 264, 267, 422, 432, 434, 436, 437], "through": [2, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 31, 32, 43, 57, 61, 62, 65, 67, 71, 72, 77, 100, 117, 118, 119, 122, 125, 126, 127, 130, 131, 132, 133, 134, 137, 146, 147, 148, 149, 154, 155, 176, 185, 187, 191, 209, 240, 245, 267, 284, 306, 307, 311, 312, 313, 317, 320, 339, 356, 357, 358, 359, 384, 412, 413, 417, 418, 419, 422, 424, 429, 430, 431, 432, 433, 434, 437], "collate_fn": [2, 57, 62, 70, 71, 72, 100, 434, 436], "__init__": [2, 3, 7, 122, 140, 156, 170, 174, 176, 177, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 243, 254, 256, 260, 264, 269, 315, 322, 324, 325, 330, 337, 342, 344, 346, 347, 414, 432, 437], "major": 2, "worri": [2, 73, 437], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 70, 75, 78, 79, 80, 81, 82, 91, 92, 93, 94, 98, 105, 107, 109, 113, 119, 122, 123, 126, 130, 133, 134, 146, 147, 154, 155, 172, 176, 417, 419, 422, 430, 431, 432, 437], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 267, 419, 430, 431], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 60, 64, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 203, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 263, 291, 292, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 418, 423, 426, 432, 434, 437], "latter": [2, 18, 19, 20, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 341, 406, 407], "inv": [2, 3, 173, 183, 190, 193, 198, 206, 213, 218, 220, 225, 229, 232, 239, 432], "obvious": [2, 421], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 65, 66, 67, 70, 73, 75, 78, 79, 80, 81, 82, 89, 119, 122, 126, 133, 134, 146, 147, 154, 155, 190, 193, 217, 226, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 356, 434], "multithread": [2, 3, 57, 62, 71, 72, 87, 141, 142, 425, 434], "thread": [2, 14, 15, 17, 40, 41, 42, 56, 58, 63, 77, 117, 118, 131, 132, 146, 154], "prefetch": [2, 57, 62, 71, 72, 87, 417, 418, 420, 434], "advis": [2, 11, 426, 437], "benchmark": [2, 3, 9, 117, 118, 131, 132], "techniqu": [2, 8, 146, 154, 418, 421, 425, 434], "real": [2, 5, 311, 413, 420, 421, 432, 433], "life": [2, 192, 433], "adopt": [2, 3, 5, 417, 437], "throughput": [2, 9, 132, 417], "constant": [2, 11, 33, 180, 204, 222, 414, 417, 419, 420, 437], "throughout": [2, 3, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 419, 430, 437], "further": [2, 3, 5, 24, 417, 419, 421, 422], "refin": [2, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354], "coupl": [2, 420, 423, 424, 432, 434], "get": [2, 3, 4, 6, 7, 8, 9, 12, 31, 32, 34, 40, 41, 42, 43, 45, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 77, 91, 93, 98, 105, 106, 107, 109, 111, 113, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 174, 179, 181, 187, 190, 191, 200, 204, 209, 222, 223, 226, 230, 237, 259, 298, 307, 308, 311, 318, 356, 357, 358, 359, 360, 376, 380, 412, 413, 416, 417, 418, 419, 420, 421, 428, 430, 431, 432, 434, 435, 436, 437], "first_elt": 2, "128": [2, 106, 117, 118, 131, 132, 250, 253, 418, 420, 421, 427, 430, 433, 434], "wa": [2, 3, 5, 7, 31, 32, 34, 43, 45, 57, 60, 62, 67, 70, 71, 72, 77, 98, 100, 104, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 172, 180, 198, 230, 264, 321, 323, 336, 338, 341, 343, 345, 362, 413, 418, 419, 422, 423, 429, 430, 434, 436], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 97, 98, 100, 105, 106, 111, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 164, 165, 170, 171, 172, 173, 176, 177, 180, 181, 185, 187, 188, 189, 190, 191, 199, 204, 210, 211, 213, 216, 221, 223, 224, 225, 226, 237, 239, 246, 247, 249, 250, 251, 252, 253, 256, 258, 259, 262, 266, 267, 270, 271, 272, 273, 279, 282, 283, 285, 298, 299, 300, 301, 302, 303, 306, 307, 308, 310, 311, 313, 315, 318, 339, 374, 404, 412, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 181], "larger": [2, 4, 70, 262, 266, 329, 337, 436], "volum": 2, "due": [2, 3, 5, 23, 424, 433, 434, 437], "memorymappedtensor": [2, 36, 56, 58, 68, 76, 91, 378, 425], "well": [2, 3, 8, 21, 23, 27, 34, 39, 50, 57, 59, 60, 61, 62, 65, 70, 71, 72, 75, 98, 103, 107, 114, 119, 122, 126, 133, 134, 146, 147, 154, 155, 229, 230, 239, 240, 244, 249, 264, 286, 287, 311, 339, 341, 346, 360, 412, 417, 418, 420, 421, 422, 423, 424, 426, 433, 434, 436, 437], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 100, 119, 122, 126, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 186, 187, 189, 191, 216, 219, 222, 227, 231, 232, 239, 240, 243, 264, 310, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 383, 412, 417, 419, 420, 421, 425, 430], "file": [2, 6, 7, 8, 40, 41, 42, 56, 58, 63, 77, 89, 158, 375, 376, 378, 394, 414, 416, 418, 430, 434, 435], "locat": [2, 7, 40, 41, 42, 56, 58, 63, 76, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 168, 186, 192, 204, 215, 263, 291, 292, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 417, 418, 419, 426, 430, 431, 434], "improv": [2, 4, 11, 196, 321, 413, 421, 430, 431, 434], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 146, 154, 198, 419, 430, 434], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 34, 39, 40, 41, 42, 43, 45, 50, 56, 58, 60, 61, 63, 65, 67, 70, 76, 77, 105, 106, 119, 120, 121, 122, 125, 126, 127, 130, 133, 134, 146, 147, 154, 155, 172, 174, 180, 201, 213, 216, 224, 237, 239, 259, 272, 273, 307, 311, 338, 339, 341, 413, 417, 418, 420, 421, 422, 424, 426, 432, 434, 436], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 66, 67, 75, 78, 79, 80, 81, 82, 91, 98, 144, 145, 190, 228, 242, 264, 265, 329, 420, 421, 425, 434], "sharabl": [2, 146, 154], "collabor": 2, "rather": [2, 4, 109, 133, 144, 145, 188, 211, 412, 413, 417, 418, 419, 422, 424, 430, 431, 434], "incur": [2, 117, 118, 131, 132], "transmiss": 2, "overhead": [2, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 171, 311], "content": [2, 3, 8, 16, 31, 32, 40, 41, 42, 43, 56, 57, 58, 62, 63, 67, 71, 72, 77, 104, 105, 106, 119, 122, 125, 126, 127, 133, 134, 141, 146, 147, 154, 155, 210, 246, 247, 267, 272, 273, 307, 339, 419, 432, 436], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 96, 97, 98, 119, 122, 126, 133, 134, 137, 138, 139, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 161, 165, 173, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 256, 298, 299, 300, 301, 303, 307, 308, 310, 311, 313, 314, 315, 316, 324, 344, 354, 389, 410, 412, 413, 417, 418, 419, 420, 423, 424, 433], "writer": [2, 57, 62, 71, 72, 90, 93, 98, 100, 101, 105, 111, 112, 113, 116, 419, 434], "tensordictroundrobinwrit": [2, 100], "goe": [2, 4, 77, 148, 149, 417, 419, 430, 431, 437], "prioritizedsampl": [2, 57, 62, 71, 72, 98, 100, 326, 331, 354, 417, 434], "access": [2, 3, 7, 8, 11, 27, 34, 39, 50, 57, 60, 61, 65, 70, 92, 119, 122, 126, 133, 134, 146, 147, 154, 155, 168, 180, 208, 229, 233, 239, 408, 411, 417, 422, 430, 431, 432, 434, 436], "tensordictreplaybuff": [2, 57, 62, 71, 97, 98, 100, 105, 106, 111, 179, 180, 391, 404, 410, 417, 418, 420, 434], "mp": [2, 18, 19, 20, 123, 237], "def": [2, 3, 22, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 100, 119, 122, 123, 126, 133, 134, 140, 146, 147, 154, 155, 168, 170, 174, 176, 177, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 236, 237, 239, 240, 243, 256, 260, 261, 264, 265, 269, 274, 306, 307, 315, 322, 324, 325, 330, 337, 339, 342, 344, 346, 347, 374, 384, 413, 414, 417, 418, 421, 429, 430, 431, 432, 434, 436, 437], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 36, 40, 41, 42, 45, 56, 57, 58, 60, 62, 63, 68, 70, 71, 72, 77, 91, 100, 111, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 135, 136, 144, 145, 146, 147, 150, 154, 155, 156, 157, 171, 174, 177, 179, 181, 185, 187, 188, 189, 190, 191, 199, 200, 201, 202, 204, 213, 216, 220, 223, 226, 230, 237, 243, 245, 255, 256, 259, 262, 266, 268, 269, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 307, 308, 310, 313, 315, 354, 357, 358, 359, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 375, 385, 393, 412, 413, 417, 418, 420, 431, 432, 433, 436], "__name__": [2, 3, 14, 15, 22, 123, 374, 418, 436], "__main__": [2, 3, 14, 15, 22, 123, 374, 436], "21": [2, 45, 77, 105, 106, 146, 148, 149, 154], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 222, 239, 282, 310, 311, 321, 322, 323, 324, 325, 326, 328, 330, 331, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 358, 359, 360, 397, 403, 404, 413, 414, 420, 421, 427, 430, 432], "arg": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 98, 100, 105, 106, 107, 109, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 167, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 188, 189, 192, 193, 194, 196, 198, 199, 200, 202, 207, 208, 209, 210, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 241, 243, 245, 246, 247, 254, 255, 259, 262, 266, 267, 268, 269, 283, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 383, 387, 391, 394, 408, 418, 421], "join": [2, 123, 188, 410, 418, 419, 421, 430], "now": [2, 3, 7, 57, 62, 71, 72, 100, 144, 145, 146, 180, 217, 273, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 433, 434, 437], "20": [2, 45, 70, 76, 77, 105, 106, 111, 119, 122, 126, 130, 133, 134, 144, 145, 146, 147, 154, 155, 222, 239, 258, 260, 261, 264, 265, 282, 302, 385, 420, 434, 437], "_data": [2, 432], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 64, 65, 66, 67, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 92, 100, 103, 111, 116, 119, 122, 126, 128, 133, 134, 140, 141, 146, 147, 148, 149, 154, 155, 158, 159, 160, 171, 177, 179, 180, 192, 198, 200, 204, 209, 222, 228, 230, 236, 239, 241, 249, 251, 257, 259, 272, 273, 282, 283, 284, 286, 287, 293, 294, 304, 306, 309, 311, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 345, 347, 354, 355, 356, 374, 383, 389, 411, 412, 413, 417, 418, 420, 421, 422, 430, 431, 432, 433, 434, 436, 437], "difficult": [2, 4, 146, 426], "pai": [2, 8, 180, 417], "word": [2, 3, 11, 64, 339, 417, 425, 432, 437], "1m": [2, 397, 417, 419, 420], "doe": [2, 3, 18, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 63, 65, 70, 71, 76, 77, 88, 89, 96, 97, 98, 105, 107, 109, 116, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 244, 253, 254, 260, 261, 262, 264, 265, 266, 275, 282, 294, 302, 312, 313, 321, 323, 331, 338, 339, 341, 355, 394, 413, 414, 417, 418, 419, 420, 422, 425, 430, 432, 434, 437], "howev": [2, 3, 5, 7, 27, 34, 39, 50, 60, 61, 65, 70, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 198, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 236, 237, 239, 321, 323, 324, 338, 341, 343, 344, 412, 417, 418, 420, 421, 424, 432, 434, 437], "capac": [2, 57, 62, 71, 72, 91, 93, 97, 105, 113, 419, 425], "There": [2, 3, 10, 100, 229, 244, 262, 266, 321, 341, 412, 413, 414, 419, 420, 421, 423, 425, 430, 431, 432, 434, 436, 437], "circumv": 2, "account": [2, 91, 93, 113, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 176, 185, 270, 271, 412, 418, 420, 434, 437], "save": [2, 3, 8, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 65, 68, 70, 71, 72, 77, 88, 89, 91, 92, 93, 94, 96, 100, 107, 108, 109, 113, 114, 119, 122, 126, 133, 134, 146, 147, 154, 155, 236, 239, 375, 376, 378, 383, 394, 414, 421, 425, 426, 427, 430, 431], "convent": [2, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 158, 159, 413, 417, 420, 430, 431, 432], "overridden": [2, 3, 27, 34, 39, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 356, 358, 359, 420, 430], "dim_extend": [2, 57, 62, 71, 72], "obtain": [2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 64, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 179, 208, 222, 235, 243, 245, 282, 284, 391, 417, 419, 422, 423, 424, 430, 431], "counterpart": [2, 3, 180], "desir": [2, 3, 11, 27, 30, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 169, 175, 177, 184, 185, 204, 206, 208, 209, 223, 229, 230, 233, 235, 239, 246, 247, 254, 267, 273, 298, 303, 304, 307, 308, 309, 310, 311, 412, 417, 421, 430, 431, 432, 434], "diversifi": 2, "offer": [2, 3, 7, 117, 118, 119, 122, 126, 131, 132, 133, 134, 138, 139, 146, 147, 154, 155, 228, 374, 412, 417, 418, 421, 422, 424, 425, 430, 432, 434, 437], "accomplish": [2, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 422], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 322, 328, 329, 337, 346, 383, 414, 422, 433, 434], "docstr": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 422, 423], "extens": [2, 57, 62, 71, 72, 106, 244, 414, 434], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 226, 230, 239, 244, 256, 260, 264, 274, 282, 304, 321, 331, 339, 341, 411, 414, 418, 421, 425, 429, 434], "happi": [2, 421], "concaten": [2, 8, 14, 15, 21, 45, 46, 48, 77, 133, 180, 181, 204, 220, 264, 267, 313, 417, 418, 423, 430, 431, 432, 434, 437], "schedul": [2, 4, 7, 64, 389, 419, 432], "transformedenv": [2, 3, 11, 12, 50, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 173, 174, 177, 180, 183, 184, 185, 187, 191, 192, 193, 199, 200, 201, 203, 204, 206, 210, 211, 212, 213, 216, 217, 218, 221, 222, 223, 224, 228, 229, 237, 239, 262, 266, 306, 376, 384, 417, 418, 419, 420, 421, 422, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "stepcount": [2, 45, 50, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 185, 228, 229, 230, 239, 245, 417, 418, 419, 420, 421, 422, 427, 430, 431, 436], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 36, 45, 50, 68, 70, 111, 119, 122, 123, 126, 128, 133, 134, 146, 147, 154, 155, 173, 176, 177, 180, 183, 184, 185, 192, 198, 199, 200, 204, 206, 211, 212, 213, 216, 218, 222, 223, 224, 225, 228, 229, 230, 231, 237, 239, 245, 262, 266, 306, 374, 376, 404, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 436, 437], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 180, 213, 410, 425, 434], "cartpol": [2, 3, 11, 36, 50, 68, 70, 119, 120, 121, 122, 123, 126, 133, 134, 146, 147, 154, 155, 176, 177, 180, 216, 222, 237, 239, 306, 374, 418, 420, 423, 425, 426, 427, 434, 437], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 36, 50, 68, 70, 111, 119, 122, 123, 125, 126, 127, 131, 132, 133, 134, 141, 146, 147, 154, 155, 176, 177, 180, 183, 185, 193, 199, 200, 204, 211, 213, 216, 217, 218, 221, 222, 223, 224, 225, 228, 229, 231, 237, 239, 245, 262, 266, 306, 350, 365, 366, 367, 368, 370, 371, 372, 373, 374, 412, 418, 420, 422, 423, 424, 425, 426, 427, 432, 434, 436, 437], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 117, 118, 119, 122, 126, 131, 132, 133, 134, 140, 146, 147, 148, 149, 150, 154, 155, 173, 174, 177, 180, 184, 187, 189, 191, 200, 204, 210, 213, 229, 230, 231, 232, 239, 243, 256, 269, 285, 287, 298, 303, 307, 308, 322, 324, 326, 328, 342, 344, 346, 347, 404, 412, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437], "8": [2, 3, 6, 7, 31, 32, 40, 41, 42, 43, 50, 56, 58, 62, 63, 67, 70, 77, 97, 98, 105, 106, 117, 118, 119, 120, 121, 122, 126, 133, 134, 144, 145, 146, 147, 154, 155, 156, 173, 176, 185, 222, 225, 231, 246, 247, 249, 250, 258, 267, 299, 300, 301, 307, 310, 313, 337, 417, 418, 432, 434, 436], "traj_kei": [2, 98, 105, 106, 434], "truncated_kei": [2, 98, 105, 106, 213, 221], "strict_length": [2, 98, 105, 106, 376], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 34, 36, 39, 43, 50, 57, 60, 61, 62, 65, 67, 68, 70, 72, 73, 77, 91, 93, 97, 98, 105, 106, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 185, 186, 202, 208, 213, 216, 228, 230, 235, 239, 261, 262, 265, 266, 285, 297, 304, 306, 307, 309, 310, 311, 321, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 385, 397, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 430, 431, 432, 434, 436, 437], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 65, 66, 67, 68, 70, 72, 75, 78, 79, 80, 81, 82, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 348, 413, 417, 418, 419, 420, 427, 430, 434, 436], "break": [2, 5, 14, 15, 16, 21, 27, 34, 39, 50, 60, 61, 62, 65, 70, 72, 87, 98, 105, 106, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 180, 213, 237, 239, 262, 266, 291, 376, 418, 421, 425, 427, 434, 436], "step_count": [2, 14, 15, 16, 50, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 185, 221, 239, 419, 420, 421, 422, 427], "32": [2, 22, 31, 57, 62, 71, 72, 100, 106, 132, 152, 153, 158, 159, 180, 198, 246, 247, 248, 249, 250, 252, 253, 258, 267, 272, 273, 277, 278, 281, 284, 293, 354, 374, 418, 420, 421, 423, 424, 432, 433, 434, 436, 437], "33": [2, 27, 31, 34, 39, 50, 60, 61, 65, 70, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 246, 247, 267], "34": [2, 246, 247, 267], "35": [2, 246, 247, 267], "36": 2, "37": [2, 179], "38": [2, 7, 45], "39": [2, 131, 132], "40": [2, 70, 131, 132], "41": [2, 105], "11": [2, 10, 23, 45, 54, 70, 76, 77, 91, 92, 93, 97, 106, 113, 123, 173, 226, 239, 243, 269], "12": [2, 7, 10, 45, 70, 91, 93, 106, 113, 131, 132, 146, 152, 153, 154, 239, 376, 434], "13": [2, 5, 70, 105, 106, 151, 236, 239, 240], "14": [2, 6, 70, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 204, 239, 240], "15": [2, 23, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 283, 302, 332, 434], "16": [2, 3, 27, 34, 39, 50, 60, 61, 65, 70, 98, 106, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 180, 239, 420, 434], "17": [2, 11, 105, 106, 126, 146, 173, 239], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 311, 418, 419, 426, 430, 431, 433, 437], "sai": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 272, 430, 433, 437], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 48, 54, 62, 71, 72, 93, 94, 98, 101, 105, 106, 113, 119, 122, 125, 126, 127, 130, 133, 134, 146, 147, 154, 155, 187, 191, 209, 216, 228, 272, 273, 308, 321, 324, 341, 418, 419, 420, 421, 430, 431, 432], "handl": [2, 3, 21, 27, 34, 39, 50, 52, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 236, 237, 239, 266, 267, 321, 339, 341, 394, 406, 407, 417, 418, 419, 420, 422, 424, 431, 434], "suggest": [2, 354, 417, 431], "serialenv": [2, 3, 119, 122, 126, 133, 134, 146, 147, 155, 223, 239, 245, 306, 410, 436, 437], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 176, 177, 180, 219, 222, 246, 247, 288, 289, 417, 421, 432, 434], "6": [2, 3, 7, 14, 15, 16, 17, 23, 45, 50, 62, 65, 70, 77, 98, 106, 120, 121, 126, 146, 152, 153, 173, 176, 185, 204, 206, 222, 228, 245, 246, 247, 249, 250, 251, 254, 258, 261, 267, 272, 273, 274, 277, 290, 306, 307, 315, 418, 421, 436], "5": [2, 3, 14, 15, 23, 30, 31, 32, 43, 45, 46, 47, 48, 49, 50, 54, 57, 62, 65, 67, 70, 71, 72, 100, 105, 106, 111, 119, 122, 123, 126, 131, 132, 133, 134, 138, 139, 141, 146, 147, 152, 153, 154, 155, 158, 159, 173, 176, 177, 179, 185, 201, 213, 220, 221, 222, 228, 239, 242, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 258, 260, 263, 264, 267, 269, 272, 273, 277, 282, 285, 291, 292, 302, 303, 306, 308, 314, 338, 341, 343, 346, 347, 374, 412, 416, 417, 418, 421, 423, 427, 430, 431, 432, 434, 435, 436, 437], "7": [2, 3, 6, 10, 34, 45, 50, 54, 57, 62, 70, 71, 98, 106, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 173, 176, 185, 222, 225, 243, 245, 246, 247, 250, 267, 269, 272, 362, 417, 434, 436], "9": [2, 3, 7, 23, 27, 45, 50, 57, 62, 70, 71, 77, 98, 106, 111, 120, 121, 137, 148, 149, 155, 173, 176, 185, 222, 225, 230, 237, 239, 271, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 348, 354, 384, 413, 417, 418, 430, 431], "18": [2, 45, 105, 106, 152, 153, 158, 159, 228, 239, 273], "19": [2, 105, 106, 111, 239, 416, 435], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 146, 154, 195, 202, 223, 232, 244, 273, 297, 321, 341, 413, 414, 417, 418, 431, 434, 436], "congruent": 2, "name": [2, 3, 6, 7, 16, 27, 31, 32, 34, 39, 40, 41, 42, 43, 50, 56, 58, 60, 61, 63, 65, 67, 70, 76, 77, 87, 117, 119, 120, 122, 126, 131, 133, 134, 137, 138, 139, 141, 144, 146, 147, 148, 149, 151, 154, 155, 158, 159, 161, 168, 172, 173, 174, 176, 177, 179, 180, 181, 184, 185, 189, 190, 192, 193, 194, 196, 198, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 236, 237, 239, 240, 262, 266, 303, 308, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 356, 358, 359, 360, 374, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 414, 417, 418, 419, 420, 421, 424, 425, 426, 430, 431, 432, 433, 437], "randomcroptensordict": [2, 417], "unlik": [2, 25, 104, 126, 138, 139, 158, 159, 242, 244, 306, 331, 341, 376, 412, 418, 421, 423, 425, 436], "stop": [2, 3, 16, 21, 64, 98, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 419, 425, 430, 431, 436, 437], "signal": [2, 3, 14, 15, 16, 17, 23, 45, 98, 105, 106, 111, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 172, 180, 185, 192, 201, 221, 224, 413, 417, 419, 430, 431, 434, 437], "disk": [2, 3, 40, 41, 42, 45, 56, 57, 58, 62, 63, 71, 72, 77, 91, 100, 394, 414, 417, 418, 420, 421, 425, 426, 430, 434], "dump": [2, 3, 11, 36, 40, 41, 42, 56, 57, 58, 62, 63, 68, 71, 72, 77, 89, 91, 92, 93, 94, 100, 107, 109, 113, 374, 375, 376, 426, 427, 430], "load": [2, 6, 7, 14, 15, 16, 17, 27, 34, 36, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 76, 77, 89, 91, 92, 93, 94, 100, 107, 108, 109, 113, 114, 119, 121, 122, 126, 133, 134, 146, 147, 154, 155, 156, 170, 188, 237, 239, 394, 408, 414, 417, 419, 421, 434], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 324, 346, 419, 422, 424, 425, 430, 431, 437], "anticip": [2, 187, 191], "compli": [2, 244, 412], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 227, 236, 274, 298, 303, 304, 307, 308, 309, 310, 311, 419, 421, 430, 431, 432, 434], "exact": [2, 3, 23, 146, 264], "statu": [2, 3, 122], "prioriti": [2, 4, 57, 71, 72, 91, 92, 93, 94, 97, 98, 107, 109, 113, 324, 325, 326, 328, 329, 330, 331, 337, 342, 344, 346, 347, 354, 414, 417, 418, 434], "heap": 2, "under": [2, 3, 4, 21, 27, 34, 39, 45, 50, 60, 61, 64, 65, 70, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 146, 147, 151, 154, 155, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 201, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 244, 298, 303, 304, 307, 308, 309, 310, 311, 339, 356, 357, 358, 359, 360, 376, 413, 417, 418, 423, 430, 432, 437], "hood": [2, 3, 21, 119, 122, 126, 133, 134, 146, 147, 154, 155, 244, 432], "naiv": [2, 233, 422], "just": [2, 3, 4, 77, 109, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 172, 176, 183, 223, 240, 273, 385, 414, 417, 418, 419, 420, 421, 422, 423, 425, 430, 431, 432, 434, 436, 437], "public": [2, 108, 208, 235], "serializ": 2, "consum": [2, 104, 106, 306, 418, 419, 425, 431, 434], "much": [2, 3, 8, 14, 15, 17, 57, 71, 97, 98, 146, 154, 338, 341, 419, 421, 422, 426, 430, 431, 432, 434, 437], "duplic": [2, 27, 34, 39, 50, 60, 61, 65, 70, 104, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 322, 324, 326, 331, 337, 339, 342, 344, 346, 347, 354], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 36, 45, 50, 68, 70, 77, 88, 89, 96, 98, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 166, 171, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 197, 198, 199, 200, 202, 204, 205, 206, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 239, 245, 248, 249, 250, 251, 252, 253, 256, 259, 262, 266, 272, 277, 278, 281, 282, 283, 285, 286, 298, 299, 300, 301, 302, 303, 306, 307, 308, 315, 316, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 337, 338, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 374, 376, 404, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 434, 436, 437], "plu": [2, 14, 15, 17, 64, 146, 154, 432], "enabl": [2, 7, 8, 91, 93, 104, 113, 177, 262, 266, 283, 306, 374, 376, 389, 419, 422, 430, 431, 432, 434], "three": [2, 25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 60, 87, 324, 412, 414, 419, 421, 422, 423, 430, 431, 432, 434, 437], "flatstoragecheckpoint": 2, "discard": [2, 3, 76, 126, 171, 233, 375, 434, 437], "compress": 2, "At": [2, 225, 259, 268, 418, 419, 420, 425, 429, 432, 433], "correct": [2, 4, 40, 41, 42, 56, 58, 63, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 200, 397, 419, 420], "addit": [2, 3, 4, 27, 34, 39, 50, 52, 60, 61, 65, 70, 77, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 158, 180, 184, 208, 223, 227, 229, 230, 233, 235, 239, 241, 260, 302, 306, 310, 320, 339, 356, 374, 376, 413, 417, 418, 421, 422, 430, 431, 434], "nestedstoragecheckpoint": 2, "represent": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 92, 119, 122, 126, 133, 134, 146, 147, 154, 155, 208, 233, 235, 239, 321, 341, 417, 432, 433, 437], "appar": [2, 3, 387], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 88, 89, 96, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 165, 168, 173, 183, 190, 198, 201, 223, 231, 241, 247, 253, 256, 272, 278, 283, 285, 298, 303, 304, 307, 308, 309, 310, 311, 313, 314, 315, 318, 321, 326, 328, 329, 330, 341, 346, 347, 354, 412, 413, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 437], "assumpt": [2, 3, 75, 432, 434], "accur": [2, 7, 418, 432, 434], "truncat": [2, 3, 14, 15, 16, 17, 36, 38, 45, 50, 51, 59, 68, 70, 73, 76, 88, 89, 96, 98, 105, 106, 119, 120, 121, 122, 125, 126, 127, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 156, 158, 159, 172, 173, 188, 192, 193, 198, 203, 210, 213, 217, 221, 223, 230, 231, 239, 262, 266, 292, 306, 362, 417, 419, 422, 430, 437], "marl": [2, 137, 161, 180, 220, 224, 272, 273, 274, 330, 344, 413, 422, 430, 431], "extra": [2, 10, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 180, 237, 239, 383, 412, 419, 420, 434], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 174], "concret": [2, 417, 419], "set_se": [2, 3, 14, 15, 16, 17, 21, 36, 45, 50, 68, 70, 117, 118, 119, 122, 126, 131, 132, 133, 134, 140, 146, 147, 154, 155, 176, 185, 204, 211, 216, 222, 224, 230, 239, 421, 425, 427, 432, 436, 437], "manual_se": [2, 3, 25, 36, 46, 47, 57, 62, 68, 70, 71, 72, 92, 105, 106, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 174, 176, 185, 190, 204, 213, 216, 222, 224, 239, 259, 270, 271, 279, 282, 283, 298, 304, 311, 314, 321, 322, 324, 325, 329, 337, 344, 421, 425, 427, 430, 431, 432, 436, 437], "200": [2, 14, 15, 16, 21, 27, 34, 36, 39, 50, 60, 61, 65, 68, 70, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 158, 159, 213, 239, 249, 250, 257, 286, 287, 374, 376, 417, 420, 421, 425, 427, 434], "22": [2, 105, 106, 236], "rb_test": 2, "_storag": [2, 433, 434], "max_siz": [2, 45, 57, 62, 70, 71, 72, 91, 92, 93, 94, 105, 106, 107, 111, 113, 419, 425], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 40, 41, 42, 56, 58, 63, 77, 141, 228, 253, 270, 271, 272, 320, 324, 374, 417, 419, 421, 430, 431], "state_dict": [2, 14, 15, 16, 17, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 237, 239, 272, 273, 324, 344, 408, 414, 417, 418, 437], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 237, 239, 324, 344, 414, 417], "drawback": 2, "struggl": 2, "big": [2, 419, 425, 434, 437], "sequenti": [2, 9, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 179, 200, 239, 297, 299, 300, 301, 307, 312, 313, 318, 321, 322, 324, 330, 337, 341, 342, 343, 344, 346, 412, 419, 420, 423, 431, 432, 433, 436, 437], "known": [2, 3, 5, 7, 8, 70, 126, 223, 363, 364, 417, 418, 422], "seamless": [2, 267], "integr": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 252, 262, 266, 269, 310, 412, 422, 423, 425, 430, 431, 432, 433], "indiffer": 2, "particularli": [2, 421, 436, 437], "heavili": [2, 11], "smooth": [2, 242, 417, 418, 424], "essenti": [2, 3, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 418, 422, 430, 432, 434], "understand": [2, 8, 34, 417, 418, 421, 422, 423, 430, 431], "purpos": [2, 3, 7, 11, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 260, 321, 323, 335, 338, 341, 343, 404, 417, 419, 420, 421, 424, 426, 430, 431, 433, 437], "guid": [2, 11, 148, 149, 152, 153, 222, 411, 417, 431, 436], "explan": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 244], "effect": [2, 3, 27, 31, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 98, 100, 103, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 180, 185, 230, 239, 244, 394, 412, 417, 423, 430, 434, 437], "realm": [2, 423], "As": [2, 3, 4, 50, 62, 71, 72, 75, 100, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 213, 254, 311, 356, 412, 417, 418, 419, 420, 421, 422, 424, 425, 430, 431, 432, 433, 434, 436, 437], "practition": 2, "often": [2, 3, 8, 274, 336, 339, 394, 417, 418, 422, 424, 432, 434, 437], "encount": [2, 4, 202, 306, 411, 418, 423, 432], "situat": [2, 133, 138, 139, 188], "sometim": [2, 3, 75, 420, 437], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 65, 66, 67, 75, 78, 79, 80, 81, 82, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 142, 143, 144, 145, 146, 147, 151, 154, 155, 156, 157, 158, 159, 188, 225, 229, 260, 261, 262, 264, 265, 266, 269, 299, 300, 301, 339, 342, 384, 414, 418], "immedi": [2, 27, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 355, 430, 431], "199": 2, "info": [2, 3, 14, 15, 57, 62, 71, 72, 77, 97, 98, 100, 103, 105, 106, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 198, 231, 233, 236, 238, 383, 422, 427, 430, 431, 434, 436], "glanc": [2, 422], "seem": [2, 417, 420, 422], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 45, 60, 64, 66, 67, 92, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 180, 209, 220, 229, 260, 262, 264, 266, 293, 299, 300, 301, 316, 412, 418, 420, 422, 430], "less": [2, 141, 294, 406, 407, 413, 419, 420, 434, 436], "omit": [2, 134, 241, 259, 283, 390, 419, 424, 432, 434], "proper": [2, 3, 4, 6, 7, 356, 357, 358, 359, 418, 419, 430, 431, 432, 434], "imposs": [2, 3, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 321, 323, 338, 341, 343], "determin": [2, 45, 57, 71, 77, 97, 98, 119, 122, 126, 133, 134, 146, 147, 154, 155, 158, 159, 160, 188, 208, 235, 272, 283, 324, 418, 423, 430, 431], "complic": [2, 34, 60, 70, 432, 434, 437], "matter": [2, 33, 425], "inconsist": [2, 437], "miss": [2, 3, 4, 6, 7, 27, 31, 34, 39, 45, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 198, 228, 230, 239, 240, 312, 313, 321, 324, 344, 411, 417, 420], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 134, 425], "elimin": [2, 3, 422], "upon": [2, 3, 8, 430, 432], "canon": 2, "definit": [2, 54, 107, 272], "markov": [2, 3, 422, 437], "mdp": [2, 171, 422, 432], "context": [2, 3, 5, 8, 27, 34, 39, 50, 60, 61, 65, 70, 106, 119, 122, 123, 126, 133, 134, 143, 146, 147, 154, 155, 223, 232, 239, 244, 262, 266, 273, 275, 297, 302, 352, 353, 356, 357, 358, 359, 361, 369, 376, 384, 389, 412, 413, 417, 418, 419, 420, 421, 430, 431, 432, 433, 434, 436], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 76, 78, 79, 80, 81, 82, 133, 185, 222, 237, 303, 304, 306, 308, 309, 320, 413, 417, 430, 432, 434], "complet": [2, 7, 9, 104, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 180, 221, 411, 413, 417, 419, 422, 429], "termin": [2, 3, 7, 14, 15, 16, 17, 36, 38, 45, 50, 51, 64, 68, 70, 88, 89, 96, 105, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 172, 173, 176, 177, 188, 192, 198, 210, 223, 231, 239, 243, 262, 266, 269, 306, 312, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 417, 418, 419, 430, 431, 432, 436, 437], "reward": [2, 3, 14, 15, 16, 33, 34, 36, 38, 45, 50, 51, 56, 63, 64, 68, 70, 76, 77, 87, 97, 98, 111, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 165, 171, 173, 174, 177, 178, 183, 184, 187, 189, 191, 192, 193, 198, 200, 201, 202, 206, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 229, 230, 231, 232, 234, 235, 237, 239, 243, 262, 269, 302, 306, 316, 321, 322, 324, 325, 326, 328, 329, 330, 333, 337, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 387, 388, 389, 392, 408, 413, 414, 417, 418, 419, 420, 421, 422, 426, 430, 431, 432, 436, 437], "imit": [2, 3, 335], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 73, 75, 77, 78, 79, 80, 81, 82, 119, 122, 123, 126, 129, 132, 133, 134, 146, 147, 154, 155, 239, 245, 246, 247, 267, 273, 412, 413, 414, 417, 418, 419, 420, 421, 422, 430, 431, 432, 434, 436], "stateless": [2, 3, 45, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 185, 339, 374, 417, 422, 432, 437], "simul": [2, 3, 5, 7, 8, 75, 117, 118, 119, 128, 131, 132, 151, 158, 159, 167, 243, 269, 412, 417, 419, 421, 422, 426, 430, 431], "furthermor": [2, 430, 431], "certain": [2, 4, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 76, 119, 122, 126, 133, 134, 146, 147, 154, 155, 170, 185, 196, 221, 230, 239, 259, 261, 265, 338, 417, 418, 419, 421, 427, 430, 431, 437], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 77, 78, 79, 80, 81, 82, 84, 103, 109, 116, 119, 122, 124, 126, 133, 134, 140, 146, 147, 154, 155, 165, 172, 174, 177, 187, 188, 189, 190, 191, 193, 198, 200, 202, 210, 211, 217, 221, 223, 227, 228, 229, 231, 239, 241, 243, 269, 298, 307, 311, 313, 314, 318, 321, 341, 410, 417, 419, 423, 432], "accommod": [2, 3, 422, 423], "uniform": [2, 57, 71, 97, 98, 430], "unambigu": 2, "distinguish": [2, 3, 138, 139, 158, 159], "happen": [2, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 240, 283, 418, 421, 424, 425, 426, 433, 437], "everyth": [2, 418, 419, 420, 426, 427], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 236, 237, 311, 417, 425, 431], "rule": [2, 70, 146, 187, 191, 311, 412, 419], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 34, 36, 39, 40, 41, 42, 45, 50, 56, 58, 59, 60, 61, 63, 64, 65, 68, 70, 71, 72, 73, 75, 76, 77, 91, 92, 93, 97, 105, 113, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 171, 173, 177, 187, 188, 191, 192, 193, 198, 206, 210, 211, 213, 217, 220, 221, 223, 228, 230, 231, 239, 243, 245, 255, 256, 262, 266, 269, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 315, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 398, 411, 412, 418, 432], "taken": [2, 3, 25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 212, 270, 271, 413, 417, 419, 420, 423, 430, 431, 432], "is_shar": [2, 3, 14, 15, 16, 23, 31, 34, 36, 40, 41, 42, 45, 56, 58, 59, 60, 63, 64, 68, 70, 71, 72, 73, 76, 77, 87, 91, 92, 93, 97, 105, 113, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 171, 173, 177, 187, 188, 191, 192, 193, 198, 206, 210, 211, 213, 217, 220, 221, 223, 231, 237, 243, 245, 255, 256, 262, 266, 269, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 315, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 412, 432], "envbas": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 77, 119, 123, 126, 133, 134, 146, 147, 154, 155, 160, 171, 174, 177, 187, 191, 203, 210, 211, 229, 230, 237, 239, 243, 262, 266, 268, 269, 306, 389, 398, 399, 400, 404, 406, 407, 408, 410, 422], "brought": [2, 419, 420, 423], "step_mdp": [2, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 262, 266, 410, 420, 422, 432, 436, 437], "count": [2, 3, 45, 50, 77, 122, 123, 221, 228, 283, 389, 394, 397, 417, 418, 419, 420, 434, 437], "trigger": [2, 7, 34, 60, 70, 133], "turn": [2, 18, 19, 20, 21, 31, 32, 40, 41, 42, 43, 56, 58, 61, 63, 65, 67, 77, 119, 132, 146, 155, 197, 229, 232, 236, 303, 374, 389, 413, 417, 418, 420, 423, 432, 433], "retain": [2, 119, 122, 126, 133, 134, 146, 147, 154, 155], "regard": [2, 256, 304, 321, 331, 341, 417, 419, 432], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 91, 105, 106, 177, 223, 254, 310, 313, 322, 324, 337, 339, 342, 344, 346, 347, 430, 431, 432, 434, 436], "recur": [2, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 360, 423], "anyth": [2, 4, 14, 15, 16, 17, 18, 19, 20, 21, 413], "els": [2, 117, 118, 177, 188, 260, 261, 264, 265, 277, 412, 414, 417, 418, 419, 420, 430, 431, 432, 433], "repetit": [2, 419, 422, 425], "embed": [2, 208, 233, 234, 235, 249, 284, 298, 299, 300, 301, 310, 311, 315, 433], "strictli": [2, 3, 8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 201, 228, 230, 239, 324, 344, 417, 419], "enforc": [2, 27, 31, 34, 39, 50, 60, 61, 65, 70, 104, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 312, 324, 344, 432], "n_action": [2, 306, 322, 324, 326, 328, 340, 344], "rightmost": [2, 413], "n_ob": [2, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 306, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 424], "estim": [2, 4, 98, 105, 106, 133, 188, 192, 200, 249, 291, 299, 300, 301, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 413, 418, 419, 423, 424, 430, 431], "subsequ": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 239, 420, 430], "proce": [2, 430], "state_valu": [2, 300, 301, 315, 323, 329, 337, 338, 341, 342, 344, 356, 357, 358, 359, 361, 363, 365, 367, 369, 370, 372, 412, 417, 431], "f": [2, 117, 118, 126, 131, 132, 225, 240, 265, 320, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 417, 418, 419, 420, 427, 430, 431, 432, 434, 437], "next_state_valu": [2, 346, 347, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 410], "broadcast": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 254, 330, 344], "left": [2, 52, 98, 105, 133, 177, 184, 186, 187, 189, 193, 200, 202, 208, 210, 211, 217, 221, 224, 227, 229, 231, 233, 235, 239, 259, 272, 418, 419, 421, 425, 426], "would": [2, 3, 27, 34, 39, 50, 60, 61, 64, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 260, 262, 264, 266, 267, 272, 311, 413, 414, 418, 419, 420, 422, 424, 425, 432, 434, 436, 437], "best": [2, 5, 9, 130, 262, 266, 430, 431, 434, 436], "bug": [2, 4], "worst": [2, 418], "twice": [2, 8, 106], "feasibl": 2, "mostli": [2, 3, 17, 282, 376, 413, 426, 434, 437], "eas": [2, 3, 430, 431], "flat": [2, 111], "manner": [2, 126, 208, 233, 412, 417, 418, 419, 425, 429, 432, 434], "ted2flat": [2, 36, 410], "flat2t": [2, 410], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 177, 306], "deseri": [2, 3, 36], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 100, 119, 120, 121, 122, 126, 133, 134, 146, 147, 154, 155, 195, 196, 198, 219, 220, 221, 224, 228, 230, 232, 239, 324, 344, 413, 419, 430, 431, 432, 434], "both": [2, 3, 7, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 119, 122, 123, 125, 126, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 156, 160, 172, 173, 180, 198, 211, 227, 228, 230, 239, 246, 247, 262, 265, 266, 267, 272, 273, 299, 300, 301, 304, 309, 321, 323, 324, 325, 329, 330, 337, 338, 339, 341, 342, 343, 344, 346, 347, 389, 412, 417, 419, 421, 422, 424, 430, 431, 432, 433, 434, 437], "mark": [2, 3, 16, 119, 122, 126, 133, 134, 146, 147, 154, 155, 225, 262, 266, 356, 358, 359, 425, 434], "identifi": [2, 59, 119, 122, 126, 133, 134, 146, 147, 154, 155], "abov": [2, 3, 7, 27, 34, 39, 50, 60, 61, 65, 70, 78, 119, 122, 126, 133, 134, 146, 147, 154, 155, 229, 239, 263, 291, 292, 320, 413, 414, 417, 419, 421, 422, 423, 430, 431, 432, 437], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 75, 77, 98, 105, 106, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 134, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 172, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 191, 193, 195, 198, 200, 202, 204, 208, 210, 211, 216, 217, 220, 221, 224, 225, 227, 229, 230, 231, 233, 235, 236, 239, 241, 246, 247, 248, 249, 250, 253, 255, 256, 257, 260, 261, 262, 264, 265, 266, 267, 272, 273, 280, 282, 283, 285, 294, 298, 299, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 374, 376, 385, 412, 413, 417, 418, 419, 420, 421, 422, 423, 426, 429, 430, 431, 432, 433, 436, 437], "typic": [2, 3, 4, 8, 27, 34, 39, 50, 60, 61, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 192, 222, 239, 280, 282, 307, 322, 324, 339, 341, 344, 412, 413, 414, 419, 421, 422, 424, 425, 430, 431, 432], "adjust": [2, 11, 223, 417, 430, 431, 432], "grumodul": [2, 179, 223, 297, 318, 420], "lstmmodul": [2, 262, 297, 420, 421], "skip": [2, 3, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 185, 196, 198, 202, 228, 230, 239, 307, 311, 324, 339, 344, 356, 357, 358, 359, 375, 376, 387, 389, 417, 418, 432], "accumul": [2, 8, 239], "upcom": [2, 339, 365, 366, 367, 368, 370, 371, 372, 373, 417], "popular": [2, 3, 412, 420, 424, 431], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 239, 410, 418], "shift": [2, 36, 38, 50, 51, 68, 88, 89, 96, 317, 356, 357, 358, 359, 419], "approxim": [2, 431, 437], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 180, 253, 281, 321, 327, 340, 341, 385, 408, 419, 420, 431, 434], "2x": 2, "small": [2, 106, 233, 242, 417, 419, 421, 430, 431, 437], "clearer": [2, 421, 423], "lazi": [2, 66, 67, 84, 85, 119, 122, 126, 133, 134, 146, 147, 154, 155, 158, 159, 208, 233, 246, 272, 275, 312, 313, 417, 418, 423, 425, 429, 434, 437], "certainli": 2, "benefici": 2, "welcom": [2, 422], "wrapper": [2, 3, 17, 40, 41, 42, 56, 58, 63, 64, 71, 72, 77, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 236, 240, 244, 245, 294, 302, 306, 311, 316, 356, 381, 382, 383, 408, 410, 419, 420, 422, 430, 431, 433, 436, 437], "around": [2, 5, 7, 17, 71, 72, 119, 122, 126, 133, 134, 140, 146, 147, 150, 154, 155, 244, 282, 306, 311, 356, 417, 418, 431, 437], "selecttransform": [2, 119, 122, 126, 133, 134, 146, 147, 154, 155], "excludetransform": [2, 217, 434], "promptli": 2, "virtual": [2, 3, 125], "instal": [2, 3, 5, 10, 18, 19, 20, 61, 70, 119, 122, 126, 133, 134, 146, 147, 148, 149, 152, 153, 154, 155, 378, 394, 411, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 437], "respons": [2, 3, 8, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 394, 424, 425, 437], "d4rl": 2, "repositori": [2, 7, 158, 159, 430, 431], "wheel": [2, 419], "publish": 2, "openml": [2, 143], "scikit": [2, 143], "panda": 2, "raw": [2, 3, 4, 64, 198, 227, 231, 263, 291, 292, 418, 421, 425, 432], "go": [2, 3, 7, 92, 137, 146, 185, 209, 213, 302, 362, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "natur": [2, 3, 417, 423, 424, 425, 434], "modifi": [2, 3, 7, 8, 27, 34, 39, 50, 60, 61, 65, 70, 76, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 180, 184, 185, 195, 198, 200, 208, 223, 229, 230, 233, 235, 239, 274, 283, 302, 310, 311, 397, 413, 417, 418, 419, 421, 422, 430, 431, 432], "fly": [2, 180, 237, 338, 413, 419, 432, 434, 437], "least": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 66, 67, 75, 78, 79, 80, 81, 82, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 183, 426, 437], "pre": [2, 7, 22, 27, 34, 39, 50, 60, 61, 65, 70, 76, 93, 119, 122, 126, 133, 134, 146, 147, 154, 155, 208, 227, 233, 235, 239, 437], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 244, 260, 264, 274, 291, 303, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 340, 341, 342, 343, 344, 346, 347, 356, 374, 390, 414, 417, 418, 419, 425, 430, 432, 436, 437], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 98, 105, 111, 130, 131, 132, 146, 148, 149, 183, 202, 216, 246, 247, 257, 259, 272, 273, 306, 376, 378, 381, 383, 394, 406, 407, 417, 418, 419, 420, 421, 423, 424, 427, 430, 431, 434, 436], "pipelin": [2, 3, 7, 412, 413, 419], "replac": [2, 3, 6, 7, 27, 34, 39, 50, 60, 61, 65, 70, 98, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 176, 190, 192, 199, 239, 259, 412, 430, 434, 436], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 202, 213, 223, 230, 239, 241, 283, 306, 392, 412, 414, 418, 419, 420, 423, 426, 432, 434, 437], "produc": [2, 3, 31, 32, 43, 45, 67, 105, 173, 176, 177, 246, 247, 267, 273, 279, 299, 301, 302, 311, 376, 419, 420, 421, 422, 423, 425, 434, 437], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 88, 104, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 228, 230, 239, 244, 321, 322, 324, 337, 339, 341, 342, 343, 344, 346, 347, 419], "download": [2, 7, 10, 130, 208, 235, 376, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 147, 418, 430, 431, 432], "robosetexperiencereplai": [2, 105, 106], "fk1": 2, "v4": [2, 126, 146, 173, 212, 365, 366, 367, 368, 370, 371, 372, 373, 417, 419, 433, 436], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 238], "obs_norm": 2, "norm": [2, 4, 8, 117, 118, 242, 394, 417, 418, 419, 430, 431, 432], "num_work": [2, 56, 58, 76, 87, 141, 146, 154, 417, 418], "os": [2, 58, 76, 87, 418], "cpu_count": [2, 58, 76, 87], "num_chunk": 2, "1000": [2, 4, 45, 62, 70, 91, 92, 97, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 237, 241, 259, 282, 283, 307, 311, 336, 417, 418, 419, 420, 421, 423, 425, 427, 432, 433, 434], "mp_start_method": [2, 146, 154, 228, 418, 436], "fork": [2, 5, 417, 418, 419, 420, 430, 431, 433, 436], "recreat": [2, 432], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 62, 71, 72, 98, 100, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 200, 421, 425, 433], "grain": [2, 3, 62, 71, 72, 98, 100, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177], "nomenclatur": 2, "compact": [2, 45, 68, 88, 89, 96], "propos": [2, 180, 192, 244, 268, 336, 345, 412, 420, 434], "replaybufferensembl": [2, 103, 109, 116], "primit": [2, 3, 4, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347], "individu": [2, 4, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 76, 98, 100, 111, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 239, 417, 431], "dummi": [2, 3, 155, 188, 374, 417, 421, 425, 437], "semant": [2, 66, 67, 125, 127, 433], "ident": [2, 3, 14, 15, 16, 40, 41, 42, 50, 56, 58, 62, 63, 70, 71, 72, 77, 91, 100, 105, 119, 122, 125, 126, 127, 133, 134, 141, 146, 147, 154, 155, 192, 220, 229, 242, 272, 273, 322, 324, 337, 342, 344, 346, 347, 356, 357, 358, 359, 406, 407, 418, 422, 430, 431], "another_kei": [2, 100], "renam": [2, 3, 40, 41, 42, 56, 58, 63, 77, 100, 171, 211, 213, 417], "resiz": [2, 3, 100, 180, 418, 420, 421, 422, 434, 437], "imag": [2, 3, 4, 7, 11, 180, 182, 186, 208, 226, 235, 267, 374, 376, 417, 418, 421, 422, 426, 431, 433, 437], "comops": 2, "totensorimag": [2, 3, 100, 180, 212, 418, 420, 421, 434, 436, 437], "renametransform": [2, 3, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180], "rb0": [2, 100], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 60, 70, 100, 117, 118, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 166, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 255, 262, 266, 269, 284, 293, 294, 298, 299, 300, 301, 302, 303, 306, 307, 308, 310, 311, 313, 314, 315, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 335, 337, 338, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 375, 376, 404, 412, 417, 418, 419, 420, 421, 423, 424, 427, 429, 430, 431, 432, 433, 434, 436, 437], "pixel": [2, 3, 7, 31, 100, 119, 120, 121, 125, 127, 128, 151, 180, 182, 186, 192, 195, 197, 204, 206, 208, 212, 226, 233, 235, 249, 277, 278, 374, 376, 417, 418, 420, 421, 426, 430, 433, 434, 436, 437], "rb1": [2, 100], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 60, 70, 100, 117, 118, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 166, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 255, 256, 262, 266, 269, 284, 285, 293, 294, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 321, 322, 323, 324, 329, 330, 335, 337, 338, 341, 342, 343, 344, 346, 354, 356, 357, 358, 359, 374, 376, 389, 404, 412, 417, 418, 419, 420, 421, 423, 427, 429, 430, 431, 432, 433, 434, 436, 437], "pixels33": [2, 100], "data0": [2, 92, 100], "244": [2, 100, 208, 235], "data1": [2, 92, 100, 436], "_": [2, 8, 57, 62, 71, 72, 92, 100, 119, 123, 130, 158, 159, 181, 187, 188, 190, 191, 200, 204, 211, 226, 237, 239, 282, 298, 310, 311, 315, 320, 321, 322, 324, 325, 329, 330, 337, 341, 342, 344, 346, 347, 356, 357, 358, 359, 378, 417, 418, 419, 420, 421, 427, 430, 431, 432, 434, 436], "rang": [2, 3, 4, 8, 57, 62, 64, 71, 72, 91, 93, 100, 111, 119, 122, 123, 126, 133, 134, 138, 139, 146, 147, 154, 155, 188, 213, 226, 237, 239, 240, 261, 265, 282, 338, 346, 347, 413, 414, 417, 419, 420, 421, 424, 425, 427, 430, 431, 432, 434, 436], "parent": [2, 3, 21, 27, 34, 38, 39, 50, 52, 60, 61, 65, 70, 75, 77, 100, 109, 116, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 177, 180, 181, 184, 185, 189, 192, 195, 196, 202, 204, 208, 216, 221, 222, 223, 224, 228, 229, 232, 233, 239, 262, 266, 299, 318, 339, 341, 360, 374, 376, 417, 425, 432, 436, 437], "basic": [2, 3, 140, 412, 419, 424, 425, 427, 430, 436, 437], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 100, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 176, 228, 229, 230, 237, 239, 254, 263, 271, 275, 279, 290, 291, 292, 306, 321, 324, 339, 341, 343, 344, 423, 425, 432, 434], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 73, 75, 77, 78, 79, 80, 81, 82, 108, 114, 119, 122, 126, 133, 134, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 256, 259, 260, 261, 262, 264, 265, 266, 267, 272, 273, 274, 275, 276, 283, 285, 286, 287, 288, 289, 291, 294, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 388, 392, 397, 404, 412, 413, 414, 417, 418, 419, 420, 421, 422, 430, 431, 432, 436, 437], "send": [2, 3, 8, 383, 436], "receiv": [2, 3, 27, 34, 39, 50, 60, 61, 64, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 229, 230, 239, 267, 362, 413, 417, 419, 424, 429, 432], "spawn": [2, 3, 4, 18, 22, 130, 141, 146, 154, 228, 418, 430, 431], "check_env_spec": [2, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 198, 210, 231, 374, 410, 419, 430, 431, 432], "saniti": [2, 3, 7, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 419], "make_composite_from_td": [2, 75, 410, 432], "fall": [2, 4], "categori": [2, 31, 412, 414], "bound": [2, 3, 4, 21, 27, 29, 31, 34, 39, 50, 60, 61, 65, 70, 78, 119, 122, 126, 133, 134, 146, 147, 150, 154, 155, 183, 203, 237, 239, 241, 259, 283, 286, 287, 298, 303, 304, 307, 308, 309, 310, 311, 314, 321, 322, 324, 325, 337, 341, 342, 344, 346, 347, 410, 412, 417, 418, 419, 421, 430, 432, 436, 437], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 67, 71, 72, 75, 77, 79, 80, 81, 82, 100, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 165, 174, 177, 187, 188, 191, 210, 223, 243, 269, 298, 310, 313, 315, 343, 410, 432, 434], "boundeddiscret": [2, 28, 31], "boundedcontinu": [2, 22, 28, 31, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 201, 231], "unboundeddiscret": [2, 78, 147, 198, 410], "unboundedcontinu": [2, 78, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 210, 223, 313, 318, 410], "implicitli": 2, "onehot": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 55, 66, 67, 75, 78, 79, 80, 81, 82, 117, 118, 125, 127, 128, 131, 132, 141, 142, 144, 145, 151, 156, 157, 256, 285, 303, 308, 326, 328, 329, 330, 354, 410, 412], "multionehot": [2, 46, 47, 49, 326, 329, 330, 354, 410], "multicategor": [2, 47, 48, 49, 410], "binari": [2, 3, 7, 26, 27, 54, 156, 174, 178, 256, 285, 303, 304, 308, 309, 326, 329, 330, 354, 410], "concept": [2, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 282, 418, 434], "arbitrari": [2, 3, 25, 54, 62, 119, 122, 126, 132, 133, 134, 146, 147, 154, 155, 176, 413, 417, 418, 432, 434], "combin": [2, 4, 37, 61, 346, 418, 421, 426, 434, 436], "relat": [2, 3, 4, 10, 57, 146, 195, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 418, 427, 432], "nevertheless": [2, 3, 419, 422, 434], "otherwis": [2, 3, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 98, 100, 105, 106, 117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 180, 181, 185, 190, 198, 204, 222, 223, 224, 228, 229, 230, 237, 239, 240, 242, 244, 260, 263, 264, 272, 273, 291, 292, 297, 303, 308, 311, 314, 322, 324, 333, 339, 340, 344, 356, 358, 359, 389, 391, 413, 414, 417, 418, 419, 420, 432, 437], "similarli": [2, 3, 21, 27, 34, 39, 50, 60, 61, 65, 70, 104, 109, 119, 122, 126, 133, 134, 146, 147, 154, 155, 202, 239, 272, 312, 313, 329, 337, 437], "possess": [2, 75], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 77, 78, 79, 80, 81, 82, 98, 165, 174, 177, 180, 181, 226, 232, 417, 420, 421, 430, 431, 432], "move": [2, 4, 27, 34, 39, 50, 60, 61, 65, 70, 75, 119, 122, 126, 127, 133, 134, 146, 147, 154, 155, 171, 173, 184, 189, 208, 223, 229, 230, 233, 235, 237, 239, 267, 310, 392, 417, 418, 420, 422, 437], "unbind": [2, 40, 41, 42, 56, 57, 58, 62, 63, 71, 72, 77, 202, 262, 266, 306], "said": [2, 419], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 57, 60, 71, 75, 97, 98, 180, 195, 209, 220, 232, 323, 332, 338, 341, 356, 358, 359, 413, 419, 430, 431, 432], "seen": [2, 3, 18, 19, 20, 21, 31, 32, 43, 67, 119, 122, 126, 133, 134, 146, 147, 154, 155, 189, 413, 417, 418, 420, 424, 430, 431, 434], "predict": [2, 3, 50, 64, 255, 257, 268, 269, 302, 316, 321, 323, 328, 331, 333, 334, 338, 341, 343, 355, 417, 418, 424], "deprec": [2, 23, 26, 27, 29, 32, 34, 35, 39, 43, 44, 47, 49, 50, 53, 55, 60, 61, 65, 70, 80, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 262, 266, 321, 323, 324, 326, 329, 330, 331, 337, 338, 341, 342, 343, 344, 354, 356, 357, 358, 359, 364, 437], "mont": [2, 133, 188, 321, 323, 338, 341, 417], "carlo": [2, 133, 188, 321, 323, 338, 341, 417], "mct": [2, 45], "act": [2, 3, 4, 105, 106, 148, 149, 230, 255, 273, 322, 324, 325, 337, 342, 344, 346, 347, 420, 421, 430, 431, 434, 436], "tradit": [2, 424, 430], "integ": [2, 14, 15, 16, 17, 23, 39, 46, 48, 50, 54, 60, 61, 64, 65, 77, 98, 105, 106, 107, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 176, 192, 196, 204, 221, 246, 247, 267, 272, 273, 324, 329, 337, 344, 413, 421, 434], "advanc": [2, 3, 21, 57, 62, 71, 72, 119, 122, 126, 133, 134, 146, 147, 154, 155, 422, 425, 434], "rebuild": [2, 45], "initi": [2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 35, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 70, 71, 72, 77, 100, 111, 119, 122, 126, 133, 134, 144, 145, 146, 147, 154, 155, 156, 179, 188, 198, 204, 208, 223, 230, 233, 238, 239, 240, 241, 242, 243, 259, 260, 261, 264, 265, 269, 272, 273, 274, 275, 276, 283, 306, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 408, 412, 413, 417, 418, 420, 422, 423, 425, 430, 432, 437], "pair": [2, 3, 40, 41, 42, 50, 56, 58, 60, 63, 70, 77, 119, 120, 121, 122, 126, 133, 134, 146, 147, 154, 155, 213, 223, 228, 262, 299, 307, 311, 339, 356, 357, 358, 359, 360, 412, 413, 417, 418, 419, 423, 424, 429, 432, 437], "term": [2, 64, 92, 200, 264, 265, 275, 276, 320, 321, 330, 396, 418, 419, 422, 423, 431], "pseudocod": [2, 3], "next_stat": [2, 413], "associ": [2, 3, 27, 31, 32, 34, 39, 40, 41, 42, 43, 45, 50, 56, 58, 60, 61, 63, 65, 67, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 239, 286, 408, 417, 434], "sens": [2, 4, 40, 41, 42, 56, 58, 63, 77, 180, 425, 432], "hard": [2, 3, 7, 111, 120, 121, 146, 336, 418, 437], "let": [2, 3, 6, 7, 11, 23, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 73, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 180, 239, 262, 266, 272, 273, 303, 389, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437], "know": [2, 3, 4, 9, 57, 62, 71, 72, 125, 127, 241, 339, 342, 389, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 434], "next_td": 2, "Of": [2, 3, 7, 411, 432, 437], "cours": [2, 3, 4, 411, 432, 437], "handi": [2, 3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 426], "undertaken": [2, 77, 413, 432], "link": [2, 6, 7, 122, 418, 427], "hash": [2, 39, 45, 60, 61, 65, 70, 77, 119, 134], "past": [2, 4, 133, 180, 306, 418, 434], "node_map": [2, 45], "_index": [2, 60, 70], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 236, 419, 429], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 72, 97, 98, 104, 119, 133, 216, 225, 237, 239, 283, 306, 381, 387, 418, 420, 422, 425, 431, 432, 434], "next_data": [2, 119, 122, 126, 133, 134, 146, 147, 154, 155], "data_map": [2, 45], "form": [2, 14, 15, 17, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 88, 89, 96, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239, 260, 262, 264, 266, 311, 320, 321, 323, 338, 341, 394, 412, 423, 431], "figur": [2, 3, 77, 134, 417, 419, 420, 431, 432, 437], "flowchart": 2, "o": [2, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 265], "get_tre": [2, 45, 77], "vertex": [2, 77], "longer": [2, 77, 240, 418, 427, 430, 431, 434], "vertic": [2, 77], "branch": [2, 45, 77], "repeat": [2, 77, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 155, 188, 228, 243, 254, 419, 430, 431, 432], "depth": [2, 62, 75, 119, 122, 126, 133, 134, 140, 146, 147, 151, 154, 155, 243, 246, 247, 249, 250, 251, 252, 257, 258, 267, 269, 272, 273, 274, 277, 278, 303, 412, 418, 422, 424, 425, 429, 430, 431, 434], "until": [2, 3, 7, 21, 132, 224, 229, 239, 384, 419, 420, 427, 430, 431], "anymor": [2, 40, 41, 42, 56, 58, 63, 77, 230, 310], "utmost": 2, "commonli": [2, 98, 105, 106, 437], "emploi": [2, 276], "languag": [2, 24, 64, 133], "scarc": 2, "address": [2, 434], "subdomain": 2, "facilit": [2, 3, 7, 207, 208, 223, 233, 235, 299, 300, 301, 412, 417, 420, 423, 432], "extern": [2, 3, 187, 191, 430, 437], "token": [2, 40, 41, 42, 58, 59, 64, 73, 76, 87, 133, 134], "dm": [3, 417, 437], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 45, 57, 62, 65, 71, 72, 76, 102, 108, 111, 112, 114, 115, 117, 118, 119, 122, 126, 130, 131, 132, 133, 134, 140, 141, 142, 146, 147, 154, 155, 158, 171, 189, 213, 227, 229, 233, 234, 262, 266, 272, 274, 299, 305, 321, 322, 324, 325, 326, 328, 329, 330, 332, 337, 341, 342, 343, 344, 346, 347, 383, 394, 412, 413, 414, 417, 418, 420, 422, 423, 424, 426, 430, 431, 432, 434, 437], "abl": [3, 45, 137, 148, 149, 262, 266, 417, 419, 420, 423, 429, 430, 431, 432, 434], "experi": [3, 57, 62, 71, 72, 97, 98, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 378, 379, 380, 381, 382, 383, 411, 418, 419, 421, 425, 426, 430, 431, 434], "box": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 77, 78, 79, 80, 81, 82, 125, 127, 274, 339], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 119, 122, 123, 126, 133, 134, 138, 139, 146, 147, 148, 149, 152, 153, 154, 155, 180, 183, 192, 199, 200, 204, 206, 211, 213, 216, 223, 229, 236, 237, 239, 374, 404, 417, 418, 419, 420, 429, 431, 433, 434, 436, 437], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 60, 61, 64, 65, 70, 117, 118, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 184, 190, 192, 200, 208, 223, 229, 230, 233, 235, 239, 243, 245, 246, 247, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 306, 307, 308, 310, 311, 312, 313, 315, 318, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 404, 412, 413, 417, 418, 419, 420, 421, 423, 424, 427, 429, 430, 431, 432, 433, 436], "organis": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 418], "attribut": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 82, 119, 122, 125, 126, 127, 132, 133, 134, 146, 147, 154, 155, 173, 192, 202, 208, 230, 233, 237, 239, 262, 266, 311, 321, 322, 324, 325, 326, 328, 330, 331, 332, 335, 337, 339, 341, 342, 343, 344, 346, 347, 354, 417, 420, 432], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 100, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 192, 239], "actual": [3, 4, 7, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 236, 397, 413, 417, 419, 421, 430, 431, 432], "retriev": [3, 40, 41, 42, 45, 56, 57, 58, 60, 62, 63, 71, 72, 77, 100, 103, 105, 106, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 171, 181, 189, 192, 204, 243, 246, 269, 306, 307, 311, 314, 318, 321, 322, 323, 324, 326, 338, 341, 342, 344, 346, 347, 354, 356, 357, 358, 359, 408, 414, 418, 419, 423, 432, 437], "care": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 376, 417, 419, 421, 430, 431, 432, 434], "parametr": [3, 276, 311, 322, 324, 329, 337, 344, 417, 419], "hardwar": [3, 421], "observation_spec": [3, 45, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 174, 177, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 195, 197, 198, 199, 200, 204, 206, 208, 210, 212, 216, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 236, 237, 239, 243, 262, 266, 269, 398, 404, 417, 419, 424, 429, 430, 431, 432, 437], "state_spec": [3, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 174, 184, 189, 204, 229, 231, 232, 239, 243, 269, 432, 437], "reward_spec": [3, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 174, 177, 178, 183, 184, 187, 189, 191, 201, 210, 214, 215, 216, 218, 220, 229, 231, 232, 239, 243, 269, 419, 430, 431, 432, 437], "done_spec": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 187, 189, 191, 192, 210, 220, 229, 231, 239, 430, 431, 432, 437], "flag": [3, 8, 34, 57, 62, 71, 72, 100, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159, 199, 283, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 412, 430, 431, 432, 433], "input_spec": [3, 77, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 173, 177, 184, 187, 189, 190, 202, 206, 210, 211, 216, 217, 220, 221, 222, 223, 227, 229, 230, 231, 234, 239, 419, 432], "full_action_spec": [3, 77, 119, 122, 126, 133, 134, 144, 145, 146, 147, 154, 155, 156, 157, 173, 189, 243, 269, 430, 431], "full_state_spec": [3, 45, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 189, 243, 269], "output_spec": [3, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 184, 187, 189, 193, 200, 202, 210, 211, 217, 221, 227, 229, 230, 231, 239, 432], "full_observation_spec": [3, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 243, 269], "full_reward_spec": [3, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 189, 210, 430, 431], "full_done_spec": [3, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 177, 189, 210, 430, 431], "carri": [3, 21, 48, 76, 119, 122, 126, 133, 134, 146, 147, 154, 155, 223, 339, 418, 420, 430, 431, 432, 434], "nontensor": [3, 53, 198, 231, 410], "spec_lock": [3, 122], "modif": [3, 5, 27, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 195, 198, 239, 339, 413, 419, 432], "children": [3, 27, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "unlock": [3, 31, 32, 40, 41, 42, 43, 56, 58, 63, 67, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155], "set_spec_lock_": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155], "reason": [3, 4, 8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 208, 233, 239, 266, 413, 417, 418, 419, 424, 425, 430, 432, 434], "easi": [3, 5, 11, 119, 120, 121, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 241, 259, 283, 412, 413, 417, 418, 419, 431, 433, 434, 436, 437], "cach": [3, 56, 58, 76, 87, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 176, 187, 191, 208, 229, 230, 235, 244, 386], "principl": 3, "new_spec": 3, "eras": [3, 25, 26, 28, 29, 30, 35, 46, 47, 48, 49, 52, 53, 54, 55, 75, 78, 79, 80, 81, 82, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230], "relock": 3, "previous": [3, 4, 45, 419, 437], "importantli": [3, 307, 311], "action_s": 3, "help": [3, 4, 27, 34, 39, 50, 60, 61, 65, 70, 75, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 192, 239, 321, 323, 338, 341, 343, 411, 413, 417, 418, 419, 420, 430, 431], "With": [3, 131, 132, 137, 222, 414, 418, 429, 430, 431, 434, 437], "necessarili": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 437], "present": [3, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 65, 70, 71, 72, 75, 77, 97, 98, 100, 104, 119, 122, 125, 126, 133, 134, 146, 147, 154, 155, 171, 172, 193, 213, 217, 223, 228, 230, 239, 247, 248, 249, 250, 251, 252, 258, 262, 264, 266, 276, 281, 283, 306, 310, 311, 312, 313, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 408, 414, 417, 427, 429, 430, 431, 434, 436], "0s": [3, 223, 420], "step_and_maybe_reset": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 422], "done_kei": [3, 23, 34, 36, 38, 45, 51, 68, 88, 89, 96, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 176, 180, 192, 213, 221, 239, 430, 431], "assign": [3, 4, 14, 15, 17, 27, 28, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 78, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 325, 326, 328, 344, 419, 423, 430, 431, 434], "_reset": [3, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 172, 174, 176, 177, 180, 187, 191, 199, 210, 225, 243, 269, 430], "data_": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155], "append": [3, 8, 11, 45, 57, 62, 71, 72, 100, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 176, 183, 184, 188, 202, 213, 223, 230, 236, 261, 262, 265, 266, 303, 308, 417, 418, 419, 420, 421, 430, 431, 432, 433, 434, 436], "seed": [3, 14, 15, 16, 17, 21, 62, 71, 72, 100, 119, 122, 126, 133, 134, 140, 146, 147, 148, 149, 154, 155, 158, 159, 160, 174, 177, 187, 191, 198, 210, 230, 374, 394, 430], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 169, 184, 208, 223, 229, 230, 233, 235, 239, 248, 257, 277, 287, 298, 307, 310, 311, 314, 322, 339, 389, 412, 417, 418, 419, 420, 421, 423, 424, 427, 430, 432, 436, 437], "preced": [3, 50, 119, 180, 420], "risk": [3, 209], "overlap": [3, 71, 111], "reproduc": [3, 61, 65, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 180, 198, 417, 419, 421, 431], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 50, 56, 58, 59, 64, 70, 73, 76, 77, 78, 87, 91, 92, 93, 94, 97, 98, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 188, 190, 214, 221, 222, 224, 242, 290, 291, 292, 314, 322, 324, 329, 330, 337, 339, 340, 344, 376, 391, 412, 417, 418, 419, 420, 423, 430, 431, 434], "max_step": [3, 11, 111, 119, 122, 126, 133, 134, 138, 139, 140, 146, 147, 154, 155, 158, 159, 221, 228, 239, 374, 422, 423, 424, 426, 427, 430, 431, 436, 437], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 60, 64, 70, 117, 118, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 179, 200, 245, 256, 262, 266, 269, 284, 285, 293, 294, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 322, 324, 325, 329, 330, 332, 333, 334, 335, 337, 339, 342, 344, 346, 347, 354, 355, 356, 357, 358, 359, 389, 404, 410, 417, 419, 420, 424, 427, 429, 430, 431, 432, 433, 437], "trail": [3, 237], "treat": [3, 50, 413, 423, 424], "brief": [3, 419, 422, 424, 434], "deliveri": 3, "metaclass": [3, 122], "everi": [3, 8, 27, 31, 32, 34, 39, 43, 50, 54, 57, 60, 61, 62, 65, 67, 70, 71, 72, 77, 100, 107, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 221, 222, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 272, 273, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 339, 394, 414, 417, 418, 419, 420, 422, 423, 430, 431, 432], "flank": [3, 413, 420], "dual": 3, "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 180, 198, 228, 230, 237, 239, 243, 256, 257, 269, 270, 271, 272, 273, 274, 277, 278, 286, 287, 301, 304, 321, 324, 331, 332, 333, 334, 341, 344, 356, 361, 369, 416, 417, 419, 421, 423, 424, 425, 426, 430, 431, 434], "union": [3, 20, 27, 31, 32, 34, 39, 43, 44, 48, 49, 50, 52, 54, 55, 60, 61, 65, 66, 67, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 272, 293, 328, 330, 342, 405, 408], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 43, 67, 138, 139, 161, 417], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 98, 105, 106, 410], "adjac": [3, 23, 195, 306], "junction": 3, "inittrack": [3, 262, 266, 306, 417, 420], "tutori": [3, 147, 409, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 437], "scratch": [3, 8, 418, 432], "mere": [3, 17, 421], "batch_lock": [3, 119, 122, 124, 126, 133, 134, 146, 154, 177, 223, 230, 432], "contrast": [3, 260, 282, 336, 434], "notabl": 3, "braxenv": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 211, 410, 422], "jumanjienv": [3, 410], "straightforward": [3, 417, 418, 422, 423, 424, 425, 434], "merg": [3, 57, 62, 71, 72, 432], "correctli": [3, 7, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "silent": [3, 27, 34, 39, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317], "_step": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 191, 192, 193, 194, 195, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239], "temporari": [3, 417], "hold": [3, 229, 352, 353, 432, 434], "arm": 3, "unbatch": [3, 260, 264], "captur": [3, 241, 259, 283, 421], "base_env": [3, 118, 119, 122, 126, 127, 132, 133, 134, 145, 146, 147, 154, 155, 157, 173, 174, 177, 183, 185, 187, 190, 191, 200, 206, 210, 212, 218, 221, 223, 224, 228, 230, 239, 376, 384, 417, 418, 419, 421, 430, 433, 436, 437], "break_when_all_don": [3, 119, 122, 126, 132, 133, 134, 146, 147, 154, 155], "conditionalskip": 3, "programmat": 3, "pretti": [3, 417, 422, 426, 434], "likewis": 3, "break_when_any_don": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 176, 228, 239, 245, 306, 431], "te": 3, "paragraph": 3, "deep": [3, 9, 180, 201, 249, 250, 251, 252, 255, 283, 321, 324, 336, 344, 345, 417, 430], "dive": 3, "gym3": 3, "envpool": [3, 141, 142], "interfac": [3, 129, 143, 267, 275, 412, 413, 417, 419, 421, 426, 432, 434], "simultan": [3, 20, 132, 141, 142, 146, 154, 432], "advantag": [3, 8, 133, 188, 258, 321, 323, 338, 341, 343, 356, 357, 358, 359, 360, 361, 363, 365, 367, 369, 370, 372, 413, 414, 417, 418, 419, 420, 431, 432, 437], "scale": [3, 4, 24, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 200, 204, 215, 222, 226, 237, 242, 257, 263, 286, 287, 291, 292, 299, 300, 301, 307, 311, 313, 321, 322, 324, 337, 341, 342, 343, 344, 392, 398, 408, 412, 417, 418, 419, 420, 423, 431, 436], "varieti": [3, 11], "inherit": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 268, 272, 273, 339, 414, 419, 430, 431], "from_pixel": [3, 11, 117, 118, 120, 121, 125, 127, 128, 131, 132, 151, 180, 212, 374, 376, 417, 418, 420, 422, 426, 427, 433, 434, 436, 437], "81": [3, 105], "simpli": [3, 6, 40, 41, 42, 56, 58, 63, 76, 77, 109, 111, 116, 193, 217, 236, 339, 356, 412, 413, 417, 419, 424, 430, 431, 437], "d": [3, 34, 57, 60, 62, 70, 71, 72, 87, 97, 98, 242, 260, 264, 307, 311, 436], "privat": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 236, 432, 437], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 40, 41, 42, 46, 48, 54, 56, 57, 58, 62, 63, 71, 72, 77, 100, 106, 111, 323, 338, 341, 385, 387, 389, 394, 397, 398, 416, 417, 418, 419, 420, 424, 430, 431, 433, 434, 435, 436], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 45, 56, 58, 63, 64, 77, 100, 103, 119, 122, 126, 133, 134, 146, 147, 154, 155, 156, 157, 204, 215, 263, 275, 286, 291, 292, 354, 412, 413, 423, 424, 430, 432, 434], "inner": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 190, 230, 414, 418, 419, 431, 437], "logic": [3, 430], "kept": [3, 23, 104, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 171, 190, 217, 263, 291, 292, 424, 430], "mind": [3, 98, 105, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 430, 431], "wherev": 3, "lost": [3, 8, 236], "intern": [3, 45, 74, 119, 122, 126, 133, 134, 146, 147, 154, 155, 415], "face": [3, 5, 8, 9, 422, 437], "NOT": [3, 88, 89, 96, 106, 209], "right": [3, 6, 7, 23, 64, 98, 105, 418, 419, 421, 431, 432, 437], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 185, 230, 239, 356, 357, 358, 359, 430], "preclud": 3, "presenc": [3, 34, 60, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 424], "annihil": 3, "supersed": [3, 23], "pettingzoowrapp": [3, 410], "group": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 137, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 201, 220, 351, 412, 418, 423, 425, 431, 434], "__not__": [3, 307, 322, 324, 337, 342, 344, 346, 347], "constrain": [3, 200, 262, 266, 341, 437], "li": 3, "fact": [3, 7, 8, 417, 419, 422, 430, 431, 432, 433, 434, 437], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "perfectli": [3, 414, 417, 421, 432], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 384, 424, 436], "agent0": [3, 421], "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 239, 254, 376, 408, 412], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 97, 98, 100, 101, 103, 104, 105, 106, 107, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 174, 176, 177, 180, 181, 185, 187, 188, 190, 191, 192, 193, 195, 198, 200, 202, 203, 204, 206, 208, 210, 211, 213, 215, 216, 217, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 275, 276, 290, 291, 292, 297, 298, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 350, 354, 356, 357, 358, 359, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 383, 384, 387, 388, 389, 391, 392, 394, 408, 418, 419, 421, 432, 436, 437], "500": [3, 417, 418], "note": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 168, 172, 187, 191, 228, 237, 239, 244, 260, 262, 264, 266, 283, 307, 311, 331, 410, 413, 418, 421, 423, 429, 430, 431, 437], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 146, 154], "bottleneck": [3, 8, 98, 105, 106], "great": [3, 7, 8, 421, 430, 436], "speedup": [3, 8, 430, 437], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 171, 187, 191, 261, 265, 417, 419], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 16, 91, 93, 113, 119, 122, 126, 130, 133, 134, 146, 147, 154, 155, 209, 437], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 91, 119, 122, 126, 133, 134, 146, 147, 154, 155, 156, 160, 161, 180, 194, 203, 213, 222, 223, 224, 228, 230, 239, 241, 259, 283, 324, 339, 344, 384, 417, 419, 430, 431, 434], "mismatch": [3, 60, 418], "subprocess": [3, 14, 15, 17, 123, 146, 154], "multithreadedenv": [3, 410], "underneath": 3, "higher": [3, 4, 98, 183, 314, 417, 418, 419, 430, 434, 437], "flexibl": [3, 9, 141, 348, 413, 414, 417, 421, 434, 437], "cover": [3, 125, 127, 411, 419, 422, 425, 426, 432, 436], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 34, 39, 40, 41, 42, 43, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 76, 77, 78, 87, 100, 119, 122, 126, 133, 134, 137, 140, 143, 146, 147, 148, 149, 154, 155, 162, 168, 169, 171, 177, 180, 184, 187, 189, 192, 193, 198, 200, 202, 208, 210, 211, 217, 221, 223, 227, 228, 229, 230, 231, 233, 235, 237, 239, 241, 246, 247, 267, 272, 273, 276, 284, 293, 295, 303, 307, 310, 311, 318, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 349, 351, 354, 362, 374, 406, 410, 412, 417, 418, 419, 421, 425, 430, 431, 432, 434, 437], "atari": [3, 4, 180, 247, 376, 421, 426, 437], "classic": [3, 140, 149, 418], "benchmark_batched_env": 3, "seamlessli": [3, 432], "infrastructur": [3, 430, 431], "paradigm": [3, 17, 431], "decpodp": 3, "game": [3, 4, 5, 119, 138, 139, 144, 145, 247, 376, 421, 426], "thank": [3, 417, 421, 422, 436], "carrier": [3, 419, 420, 422, 434], "particular": [3, 27, 34, 39, 50, 60, 61, 65, 70, 76, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 230, 239, 413, 414, 418, 420, 422, 429, 431, 434], "thu": [3, 338, 431], "vma": [3, 158, 159, 374, 430, 431], "robot": [3, 5, 7, 208, 233, 235, 421, 431], "vmasenv": [3, 374, 410, 430, 431], "balanc": [3, 120, 121, 417, 418], "num_env": [3, 21, 125, 129, 142, 158, 159, 374, 430, 431], "n_agent": [3, 158, 159, 272, 273, 274, 284, 293, 354, 374, 413, 430, 431], "ground_rew": 3, "pos_rew": 3, "style": [3, 57, 62, 71, 72], "vari": [3, 125, 127, 128, 148, 149, 151, 158, 209, 413, 421, 431], "creation": [3, 146, 154, 437], "info_spec": [3, 146], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 28, 29, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 172, 173, 174, 192, 210, 256, 279, 282, 285, 303, 304, 307, 308, 309, 326, 329, 330, 354, 410, 420], "simpl": [3, 9, 27, 34, 39, 50, 54, 60, 61, 65, 70, 75, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 249, 306, 311, 326, 328, 339, 343, 413, 417, 418, 419, 422, 423, 424, 430, 431, 434, 437], "prefix": [3, 23, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 76, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 225, 228, 230, 239, 307, 324, 339, 344, 375, 420, 424, 437], "exactli": [3, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 128, 133, 134, 146, 147, 154, 155, 228, 230, 239, 260, 264, 279, 324, 344, 417, 420, 425, 430, 431], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 119, 122, 126, 133, 134, 146, 147, 150, 154, 155, 171, 173, 174, 190, 202, 241, 243, 259, 268, 269, 283, 306, 413, 430, 431], "reward_kei": [3, 34, 36, 38, 45, 51, 68, 88, 89, 96, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 239, 243, 269, 388, 392, 430, 431], "set_kei": [3, 192, 321, 323, 324, 326, 329, 330, 331, 337, 338, 339, 341, 342, 343, 344, 354, 360, 417, 430, 431], "awai": [3, 419, 422, 430, 431, 436], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 67, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 199, 221, 223, 229, 311], "full": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 244, 262, 266, 304, 311, 385, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "autoresettransform": 3, "invalid": [3, 27, 34, 39, 50, 60, 61, 65, 70, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 161, 239, 270, 271], "nan": [3, 176, 236], "auto_reset": [3, 45, 119, 122, 126, 132, 133, 134, 146, 147, 154, 155, 176, 188, 239, 432], "auto_reset_replac": [3, 176], "placehold": [3, 128, 192, 230], "set_gym_backend": [3, 119, 122, 125, 126, 133, 134, 146, 147, 154, 155, 164, 176, 410, 422, 436], "autoresettinggymenv": [3, 176], "self": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 34, 39, 40, 41, 42, 43, 50, 56, 58, 60, 61, 63, 65, 67, 70, 77, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 174, 176, 177, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 199, 200, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 256, 259, 262, 266, 269, 272, 273, 284, 293, 307, 310, 315, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 414, 417, 432, 436], "super": [3, 140, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 191, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 243, 256, 269, 315, 322, 324, 325, 330, 337, 342, 344, 346, 347, 417, 432, 436], "td_reset": [3, 176], "exclud": [3, 8, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 176, 180, 193, 284, 323, 338, 341, 430, 431, 434], "r": [3, 4, 45, 50, 119, 173, 174, 176, 183, 185, 204, 218, 225, 228, 237, 242, 245, 261, 311, 320, 355, 374, 418, 432, 437], "3633e": [3, 176], "02": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 418, 427], "4877e": [3, 176], "01": [3, 176, 204, 242, 283, 317, 321, 323, 338, 341], "2849e": [3, 176], "7584e": [3, 176], "6609e": [3, 176], "6166e": [3, 176], "8366e": [3, 176], "2761e": [3, 176], "5685e": [3, 176], "4102e": [3, 176], "8111e": [3, 176], "9959e": [3, 176], "0865e": [3, 176], "5644e": [3, 176], "2119e": [3, 176], "2542e": [3, 176], "03": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 176, 204, 225], "9952e": [3, 176], "4059e": [3, 176], "2094e": [3, 176], "9009e": [3, 176], "5140e": [3, 176], "3554e": [3, 176], "2920e": [3, 176], "7893e": [3, 176], "6429e": [3, 176], "3057e": [3, 176], "2867e": [3, 176], "6963e": [3, 176], "3818e": [3, 176], "2576e": [3, 176], "2679e": [3, 176], "1640e": [3, 176], "00": [3, 117, 118, 176, 416, 435], "6972e": [3, 176], "0212e": [3, 176], "5959e": [3, 176], "4637e": [3, 176], "3121e": [3, 176], "2168e": [3, 176], "5232e": [3, 176], "7704e": [3, 176], "7457e": [3, 176], "4127e": [3, 176], "1064e": [3, 176], "0854e": [3, 176], "5712e": [3, 176], "2189e": [3, 176], "5235e": [3, 176], "8289e": [3, 176], "0009e": [3, 176], "0257e": [3, 176], "8893e": [3, 176], "5872e": [3, 176], "9405e": [3, 176], "7766e": [3, 176], "0403e": [3, 176], "0626e": [3, 176], "2959e": [3, 176], "7263e": [3, 176], "2775e": [3, 176], "9564e": [3, 176], "0411e": [3, 176], "6769e": [3, 176], "6354e": [3, 176], "8698e": [3, 176], "1765e": [3, 176], "6292e": [3, 176], "5375e": [3, 176], "1820e": [3, 176], "7023e": [3, 176], "5836e": [3, 176], "9016e": [3, 176], "4826e": [3, 176], "6191e": [3, 176], "6387e": [3, 176], "8667e": [3, 176], "2056e": [3, 176], "1147e": [3, 176], "5991e": [3, 176], "0278e": [3, 176], "5219e": [3, 176], "3067e": [3, 176], "6617e": [3, 176], "3322e": [3, 176], "2629e": [3, 176], "4599e": [3, 176], "7298e": [3, 176], "5848e": [3, 176], "0148e": [3, 176], "5745e": [3, 176], "6982e": [3, 176], "7877e": [3, 176], "3527e": [3, 176], "7285e": [3, 176], "6668e": [3, 176], "0583e": [3, 176], "6956e": [3, 176], "3962e": [3, 176], "9845e": [3, 176], "5015e": [3, 176], "5903e": [3, 176], "9993e": [3, 176], "9418e": [3, 176], "0196e": [3, 176], "6557e": [3, 176], "2109e": [3, 176], "8997e": [3, 176], "1507e": [3, 176], "7363e": [3, 176], "0310e": [3, 176], "9574e": [3, 176], "8980e": [3, 176], "0090e": [3, 176], "forecast": 3, "awar": [3, 7, 91, 92, 93, 94, 107, 109, 113, 262, 266, 418, 420], "detect": [3, 339, 413], "return_contigu": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 429], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 63, 66, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 111, 119, 122, 124, 126, 133, 134, 146, 147, 154, 155, 160, 171, 172, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 192, 193, 194, 195, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 241, 243, 259, 262, 266, 268, 269, 283, 302, 304, 306, 309, 310, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 355, 356, 357, 358, 359, 360, 394, 417, 430, 432], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 34, 39, 50, 54, 57, 60, 61, 64, 65, 70, 71, 78, 97, 98, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 173, 176, 180, 184, 187, 191, 200, 201, 204, 208, 213, 214, 215, 222, 223, 226, 229, 230, 233, 235, 237, 239, 241, 242, 244, 245, 254, 257, 260, 263, 264, 267, 270, 271, 275, 276, 282, 286, 287, 290, 292, 310, 314, 317, 319, 320, 321, 322, 323, 324, 328, 329, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 355, 361, 362, 363, 364, 365, 366, 367, 368, 369, 392, 417, 418, 434, 437], "_set_se": [3, 174, 177, 187, 191, 210, 432], "lazystackedtensordict": [3, 45, 67, 92, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 188, 429], "float32": [3, 14, 15, 16, 28, 31, 34, 36, 40, 41, 42, 45, 56, 57, 58, 60, 63, 64, 68, 70, 71, 72, 75, 76, 77, 78, 91, 92, 93, 97, 98, 105, 113, 117, 118, 119, 122, 125, 126, 127, 131, 132, 133, 134, 140, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 159, 165, 171, 173, 177, 187, 191, 192, 193, 198, 201, 204, 206, 210, 211, 213, 217, 220, 221, 223, 226, 231, 243, 245, 255, 256, 262, 266, 269, 283, 284, 285, 293, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 313, 315, 318, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 354, 412, 432], "exclusive_field": [3, 45, 92, 188], "stack_dim": [3, 45, 92, 188], "dramat": 3, "carefulli": [3, 430, 431, 437], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 239, 298, 303, 304, 307, 308, 309, 310, 311, 322, 324, 337, 342, 344, 346, 347, 419, 430, 431], "plain": [3, 8, 133, 422], "larg": [3, 4, 30, 40, 41, 42, 56, 58, 63, 77, 105, 106, 187, 191, 233, 321, 323, 338, 341, 343, 418, 419, 430, 431, 434], "expens": [3, 98, 105, 106, 374, 434], "absent": [3, 31, 32, 43, 67, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 217, 230], "torchvis": [3, 11, 208, 235, 378, 430, 436, 437], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 100, 119, 122, 123, 126, 133, 134, 140, 146, 147, 154, 155, 170, 175, 177, 184, 185, 188, 192, 198, 223, 230, 231, 239, 240, 246, 247, 267, 274, 311, 320, 339, 374, 399, 400, 406, 407, 408, 418, 434], "bring": [3, 419, 422, 437], "signific": [3, 5, 8, 419, 436, 437], "kind": [3, 62, 75, 424, 430, 434], "consult": 3, "interest": [3, 307, 311, 412, 418, 419, 422, 431, 432, 437], "resize_par": 3, "revers": [3, 264], "order": [3, 11, 16, 27, 34, 39, 50, 54, 57, 60, 61, 62, 65, 70, 71, 72, 100, 104, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155, 181, 187, 188, 191, 198, 206, 220, 228, 230, 239, 282, 298, 303, 310, 312, 313, 315, 321, 322, 324, 325, 329, 330, 337, 341, 342, 343, 344, 346, 347, 418, 430, 431], "chain": [3, 40, 41, 42, 56, 57, 58, 62, 63, 71, 72, 77, 133, 134, 184, 190, 246, 247, 313, 437], "in_keys_inv": [3, 166, 183, 187, 189, 191, 198, 204, 205, 206, 210, 211, 213, 218, 227, 229, 231, 232, 417, 429, 432, 437], "append_transform": [3, 45, 57, 62, 71, 72, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 166, 173, 174, 176, 177, 179, 180, 181, 184, 185, 188, 189, 192, 193, 194, 196, 198, 199, 200, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 245, 262, 266, 374, 417, 420, 430, 432, 434, 436, 437], "doubletofloat": [3, 417, 419, 429], "float64": [3, 27, 34, 39, 50, 60, 61, 65, 70, 119, 120, 121, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 173, 184, 187, 191, 208, 223, 229, 230, 233, 235, 239, 310], "think": [3, 411, 419, 430, 431, 437], "in_": 3, "out_": 3, "perspect": [3, 256, 304, 331, 419, 421], "outer": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 414, 417, 418, 437], "ob": [3, 4, 8, 23, 31, 32, 43, 45, 57, 62, 67, 70, 71, 72, 77, 97, 100, 105, 106, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 171, 174, 176, 187, 189, 191, 204, 218, 220, 226, 249, 250, 251, 252, 272, 273, 274, 308, 315, 322, 324, 325, 330, 337, 342, 344, 346, 347, 356, 357, 358, 359, 418, 421, 429, 430, 432, 434, 436, 437], "obs_standard": 3, "out_keys_inv": [3, 166, 183, 187, 189, 191, 198, 204, 205, 206, 210, 211, 218, 220, 227, 229, 231, 232, 432], "illustr": [3, 417, 418, 423, 434], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 91, 92, 93, 94, 98, 104, 105, 107, 109, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 177, 184, 187, 189, 191, 193, 200, 202, 210, 211, 217, 221, 227, 229, 230, 231, 237, 239, 264, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 413, 417, 420, 430, 431, 432, 433, 434, 437], "schemat": [3, 413], "outermost": 3, "innermost": 3, "similar": [3, 27, 34, 39, 40, 41, 42, 50, 52, 56, 58, 60, 61, 62, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 184, 208, 223, 229, 230, 233, 234, 235, 237, 239, 299, 301, 307, 310, 311, 413, 417, 418, 419, 420, 421, 423, 424, 425, 426, 432, 434, 436, 437], "transform_action_spec": [3, 184, 189, 204, 229, 231, 232, 239], "spec_from_random_valu": 3, "_apply_transform": [3, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 432, 437], "rand": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 92, 100, 117, 118, 131, 132, 140, 144, 145, 150, 156, 157, 174, 177, 187, 191, 210, 220, 243, 269, 307, 321, 322, 324, 325, 326, 328, 329, 330, 337, 339, 341, 342, 344, 346, 347, 432, 436, 437], "approach": [3, 57, 62, 71, 72, 180, 204, 242, 272, 273, 346, 417, 419, 424, 425, 430, 437], "insid": [3, 40, 41, 42, 56, 58, 63, 77, 146, 437], "did": [3, 62, 236, 362, 418, 419, 425, 434, 437], "_inv_apply_transform": [3, 173, 229, 239, 432, 437], "actiondiscret": 3, "rand_act": [3, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 177, 188, 230, 422], "action_discret": 3, "addonetoob": 3, "Is": [3, 229], "rewrit": [3, 229], "_call": [3, 174, 176, 177, 179, 180, 181, 184, 185, 189, 190, 192, 193, 194, 195, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 432], "_inv_cal": [3, 173, 229, 239], "overwrit": [3, 229], "till": [3, 229, 236], "encapsul": [3, 229, 422, 423, 424], "forget": [3, 229, 264], "edit": [3, 229, 239, 425], "top": [3, 4, 111, 117, 118, 131, 132, 186, 229, 243, 269, 423], "transform_output_spec": [3, 177, 184, 187, 189, 193, 200, 202, 210, 211, 217, 221, 227, 229, 231, 239], "transform_input_spec": [3, 173, 177, 184, 187, 189, 190, 202, 206, 210, 211, 216, 220, 221, 222, 223, 227, 229, 231, 234, 239], "transform_observation_spec": [3, 177, 180, 181, 182, 183, 184, 186, 187, 189, 192, 193, 195, 197, 199, 200, 202, 204, 206, 210, 211, 212, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 239, 432], "transform_state_spec": [3, 184, 189, 204, 229, 231, 232, 239], "transform_reward_spec": [3, 177, 178, 183, 184, 187, 189, 193, 200, 201, 202, 210, 211, 214, 215, 216, 217, 218, 220, 221, 227, 229, 231, 232, 239], "rewardsum": [3, 171, 229, 239, 430, 431], "undo": 3, "addonetoact": 3, "subtract": [3, 222], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 82, 100, 119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155, 156, 157, 168, 171, 187, 191, 192, 216, 228, 230, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 374, 376, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 414, 417, 419, 422, 434], "manipul": [3, 4, 8, 120, 121, 208, 229, 233], "third_transform": 3, "unexpect": [3, 14, 15, 16, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 437], "behviour": 3, "fortun": [3, 420, 421, 422, 423, 426], "alreadi": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 76, 77, 78, 79, 80, 81, 82, 91, 119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 223, 239, 240, 311, 356, 357, 358, 359, 417, 419, 426, 430, 431], "catfram": [3, 306, 418], "notic": [3, 111, 180, 413, 419, 427, 432], "parenthood": 3, "henc": [3, 57, 172, 209, 272, 417, 419, 430, 431, 432], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 146, 154, 230, 374, 384, 432], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 125, 126, 127, 133, 134, 138, 139, 146, 147, 148, 149, 154, 155, 158, 159, 173, 190, 198, 279, 282, 285, 328, 329, 330, 331, 412, 418, 423, 431], "might": [3, 40, 41, 42, 56, 58, 59, 63, 77, 380, 411, 417, 422, 437], "action_mask": [3, 119, 131, 132, 148, 149, 152, 153, 174], "unavail": [3, 148, 149], "probabl": [3, 4, 8, 64, 100, 103, 244, 245, 254, 256, 259, 260, 262, 264, 266, 267, 270, 271, 279, 291, 292, 307, 311, 324, 341, 412, 413, 418, 421, 423, 436], "probabilistictensordictmodul": [3, 200, 311, 312, 413, 436], "tensordictsequenti": [3, 34, 60, 70, 245, 259, 262, 266, 283, 303, 306, 312, 313, 318, 412, 417, 418, 420, 421, 423, 427, 429, 430, 433, 436], "maskedcategor": [3, 271, 410], "linear": [3, 14, 15, 16, 17, 21, 27, 34, 39, 50, 60, 61, 65, 70, 117, 118, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 184, 200, 208, 223, 229, 230, 233, 235, 239, 243, 245, 246, 247, 249, 250, 251, 252, 256, 258, 259, 267, 269, 272, 273, 275, 276, 283, 285, 286, 287, 298, 299, 300, 301, 305, 306, 307, 308, 310, 313, 315, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 404, 412, 418, 429, 433, 436], "in_feat": 3, "out_feat": 3, "logit": [3, 40, 42, 58, 64, 255, 270, 271, 279, 282, 304, 307, 329, 330, 412], "dist": [3, 10, 270, 271, 279, 311, 413, 423], "distribution_class": [3, 200, 299, 300, 301, 302, 307, 311, 313, 321, 322, 324, 329, 330, 337, 341, 342, 343, 344, 412, 417, 419, 423, 430, 431, 436], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 60, 61, 64, 65, 70, 117, 118, 119, 122, 126, 127, 131, 132, 133, 134, 139, 142, 144, 145, 146, 147, 148, 149, 154, 155, 157, 159, 160, 168, 185, 228, 230, 239, 240, 262, 266, 294, 299, 300, 301, 306, 308, 311, 316, 339, 354, 412, 417, 418, 419, 420, 424, 427, 430, 431, 437], "actionmask": [3, 119], "your_base_env": 3, "mask_kei": [3, 23, 174, 209, 239], "itself": [3, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 164, 176, 239, 339, 346, 419, 422], "ey": 3, "report": [3, 117, 118, 131, 132, 426], "foremost": 3, "callback": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155, 431], "ad": [3, 4, 16, 23, 27, 34, 39, 45, 50, 57, 60, 61, 62, 65, 70, 71, 72, 84, 97, 98, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 198, 216, 228, 230, 239, 242, 275, 276, 283, 320, 321, 323, 324, 326, 331, 338, 341, 344, 354, 418, 420, 421, 423, 430, 434, 436, 437], "tensordictrecord": [3, 410], "videorecord": [3, 11, 374, 410, 419, 426, 427, 430], "csvlogger": [3, 11, 374, 376, 410, 418, 426, 427, 430], "wandblogg": [3, 410, 426], "tensorboardlogg": [3, 404, 410, 426], "tag": [3, 7, 11, 374, 376, 378, 381, 408, 426, 427, 430], "mp4": [3, 374, 376, 378, 427, 430], "video_format": [3, 374, 376, 378, 427, 430], "whc": 3, "cwh": 3, "exp": [3, 320, 413], "al": [3, 24, 125, 127, 192, 206, 243, 421, 437], "pong": [3, 142, 206, 421, 437], "v5": [3, 125, 127, 142, 192, 206, 421, 437], "grow": [3, 92], "tediou": [3, 422], "workspac": [3, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198], "pixelrendertransform": [3, 410, 430], "stream": 3, "alik": [3, 374], "envcreat": [3, 16, 22, 146, 154, 228, 374, 404, 405, 408, 410, 417, 418, 436, 437], "render_mod": [3, 374, 432], "rgb_arrai": [3, 374, 430, 431, 432], "uncom": [3, 426], "line": [3, 7, 27, 34, 39, 45, 50, 60, 61, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 418, 426, 430, 431], "comment": [3, 414, 418, 436], "pixels_record": [3, 374], "close": [3, 16, 126, 141, 200, 321, 323, 338, 341, 374, 417, 418, 422, 429, 430, 432, 436], "mission": 3, "irrespect": [3, 310, 311], "dmcontrol": [3, 119, 122, 126, 133, 134, 146, 147, 154, 155], "jumanji": [3, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155], "special": [3, 79, 81, 410, 417, 420, 421, 437], "framework": [3, 4, 9, 22, 117, 118, 119, 122, 126, 131, 132, 133, 134, 140, 146, 147, 154, 155, 260, 436, 437], "Its": [3, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 237, 239, 310, 360], "success": [3, 133, 180, 188, 225, 259, 324, 346, 418, 425, 427, 432, 434, 436], "foundat": [3, 5, 148, 149, 419, 431], "inspir": [3, 421, 432], "gone": [3, 4, 5, 306], "prefer": [3, 14, 15, 17, 20, 23, 24, 57, 62, 71, 72, 105, 106, 209, 217, 341, 346, 391, 412, 419, 430, 431, 434, 436], "maintain": [3, 5, 9, 33, 52, 180, 432], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 418, 419, 420, 425, 430, 431, 432, 434, 437], "decor": [3, 8, 168, 170, 240, 262, 266, 297, 339, 356, 357, 358, 359, 384, 420, 436], "relev": [3, 64, 119, 122, 126, 133, 134, 146, 147, 154, 155, 356, 357, 358, 359, 360, 383, 421, 432], "gym_backend": [3, 170, 410], "env1": [3, 245, 429], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 119, 170], "env2": [3, 429], "_env": [3, 6, 125, 437], "classic_control": 3, "pendulumenv": [3, 45, 410, 432], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 136, 164, 201], "side": [3, 4, 437], "v0": [3, 14, 15, 31, 32, 40, 41, 42, 43, 56, 58, 63, 67, 77, 119, 122, 126, 128, 131, 132, 133, 134, 135, 136, 146, 147, 154, 155, 184, 201, 230, 237, 384, 404], "26": [3, 106, 119, 122, 126, 133, 134, 146, 147, 154, 155], "fun": [3, 170, 240, 419, 430, 431], "reveal": 4, "curv": 4, "exploit": [4, 423], "cv": 4, "flip": [4, 132], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 100, 173, 180, 187, 191, 193, 198, 204, 211, 213, 225, 227, 229, 231, 239, 319, 329, 337, 410, 432], "prescript": 4, "tune": [4, 24, 200, 430, 431, 433], "coeffici": [4, 24, 33, 64, 200, 431], "bonu": [4, 321, 323, 338, 341], "beta": [4, 57, 71, 97, 98, 329, 337, 338, 417, 418, 434, 436], "reduc": [4, 6, 30, 111, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 180, 185, 222, 242, 244, 291, 410, 418, 430], "downstream": [4, 413, 417], "formul": [4, 430, 431], "rate": [4, 11, 237, 355, 418, 419, 430, 431], "gradient": [4, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 244, 263, 271, 276, 279, 291, 292, 311, 321, 323, 324, 325, 329, 330, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 355, 356, 357, 358, 359, 394, 417, 419, 430, 431, 432], "easier": [4, 61, 412, 417, 436], "local": [4, 7, 10, 16, 21, 27, 34, 39, 50, 60, 61, 65, 70, 98, 105, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 272, 273, 284, 293, 354, 381, 383, 421, 426, 427, 430, 431], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 260, 261, 264, 265, 406, 407], "sum": [4, 21, 27, 34, 48, 54, 70, 111, 117, 118, 120, 121, 125, 127, 128, 131, 132, 141, 142, 151, 179, 201, 216, 270, 271, 291, 293, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 337, 338, 340, 341, 342, 343, 344, 346, 347, 355, 362, 413, 417, 418, 419, 420, 421, 424, 427, 430, 431, 432, 437], "stat": [4, 204, 237, 398, 408, 418, 419], "w": [4, 100, 119, 144, 145, 180, 182, 186, 212, 226, 260, 283, 376, 418, 434], "yield": [4, 14, 15, 16, 21, 27, 34, 39, 50, 60, 61, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 188, 239, 339, 417, 424], "insight": [4, 421], "auxiliari": [4, 424], "credit": 4, "futur": [4, 23, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 88, 89, 96, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 208, 228, 230, 235, 239, 267, 321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 411], "spars": [4, 34, 420], "intermedi": [4, 14, 15, 34, 45, 60, 70, 179, 245, 262, 266, 304, 417, 421, 433], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 417], "discov": 4, "score": [4, 64, 280, 282], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 34, 57, 60, 62, 70, 71, 72, 77, 100, 119, 138, 139, 148, 149, 150, 158, 159, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 243, 262, 266, 303, 308, 393, 412, 413, 417, 421, 422, 430, 434], "explicit": [4, 14, 15, 16, 240, 434], "mechan": [4, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 418, 424, 432], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 119, 122, 126, 133, 134, 146, 147, 154, 155, 264, 329, 337, 419, 431], "addition": [4, 254], "timestep": [4, 64, 213, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 430, 431], "realli": 4, "huge": [4, 273, 420], "std": [4, 204, 237, 241, 281, 417, 437], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 416, 420, 422, 424, 425, 426, 427, 428, 429, 433, 434, 435], "unseen": [4, 133], "extrins": 4, "wrong": [4, 98, 105], "bonus": 4, "denser": 4, "prior": [4, 65, 287, 333, 431], "freshli": 4, "drop": [4, 104, 106, 171], "meant": [4, 50, 133, 140], "encourag": [4, 146, 282, 417, 418, 434], "measur": [4, 91, 93, 113, 117, 118, 131, 132, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 419, 425], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 24, 423], "ideal": [4, 204, 432], "down": [4, 14, 15, 16, 17, 413, 420, 422], "distil": 4, "nois": [4, 238, 276, 283, 296, 342, 346, 347, 389, 408, 417, 430], "exploratori": [4, 321, 323, 338, 341], "misalign": 4, "trade": [4, 423], "unavoid": 4, "divers": [4, 146, 154], "bootstrap": [4, 331, 357, 363, 364, 417, 420], "noisi": [4, 275, 276, 296, 412], "unstabl": [4, 263, 291, 292], "inher": [4, 321, 341], "stochast": [4, 200, 257, 276, 277, 287, 322, 324, 327, 329, 330, 335, 337, 340, 342, 344, 412, 419, 423, 431], "enemi": 4, "pomdp": [4, 434], "loos": [4, 311, 412, 418, 419], "nonexist": 4, "architectur": [4, 253, 424, 430, 431, 436], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 34, 43, 46, 48, 56, 57, 58, 59, 60, 62, 64, 67, 70, 73, 76, 77, 87, 90, 100, 101, 103, 109, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 155, 166, 178, 179, 180, 181, 182, 186, 187, 190, 191, 195, 197, 198, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 224, 225, 226, 227, 229, 231, 237, 246, 247, 254, 256, 260, 264, 267, 270, 271, 272, 273, 279, 285, 289, 302, 312, 313, 327, 375, 376, 389, 390, 391, 393, 394, 412, 417, 419, 420, 421, 429, 430, 431, 437], "lstm": [4, 223, 265, 266, 421], "rel": [4, 100, 223, 254, 290, 417, 418, 430, 431, 434], "tend": 4, "stabl": [4, 9, 10, 143], "compens": 4, "descent": [4, 276], "minimum": [4, 78, 146, 154, 214, 257, 290, 291, 292, 314, 317, 320, 322, 324, 330, 339, 340, 344, 385, 413, 417, 419, 427, 430, 431], "manual": [4, 11, 18, 20, 21, 45, 57, 62, 71, 72, 100, 126, 127, 417, 420, 434], "deviat": [4, 204, 237, 241, 243, 257, 269, 275, 276, 281, 282, 341, 346, 347, 417, 423, 431], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 98, 105, 176, 260, 261, 264, 265, 320, 384, 413, 421, 422, 423, 424, 425, 426, 427], "stabil": [4, 196, 244, 321, 323, 338, 341, 343], "stage": [4, 417, 432], "never": [4, 14, 15, 17, 28, 78, 98, 225, 425, 436], "prevent": [4, 25, 26, 30, 31, 32, 35, 43, 46, 47, 48, 49, 54, 55, 67, 89, 237, 263, 291, 292, 321, 323, 338, 341, 343, 392, 426, 434], "entir": [4, 119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 272, 419, 422, 432, 434], "submit": [4, 125, 177, 411, 436], "system": [4, 5, 89, 419, 430, 431, 432], "adequ": [4, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 419, 430, 431], "infeas": 4, "allevi": [4, 412], "prune": [4, 134], "fire": [4, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "illeg": 4, "chess": [4, 119, 144, 145], "grasp": 4, "wherein": 4, "cumul": [4, 34, 216, 222, 243, 362, 419], "q": [4, 9, 119, 122, 126, 133, 134, 146, 147, 154, 155, 249, 250, 251, 252, 255, 256, 258, 284, 285, 293, 301, 304, 308, 309, 322, 324, 325, 326, 328, 329, 330, 331, 336, 337, 342, 344, 346, 347, 354, 410, 417, 424], "flow": [4, 417, 419, 430, 431, 432, 434], "reparameter": [4, 254, 271, 279], "soft": [4, 336, 344, 345, 430], "critic": [4, 8, 299, 305, 321, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 417, 424], "clip": [4, 64, 183, 214, 321, 323, 338, 341, 343, 346, 347, 394, 419, 431, 432], "oppos": [4, 76], "incorrect": [4, 105], "thought": [4, 119, 122, 126, 133, 134, 146, 147, 154, 155], "region": 4, "squash": [4, 420, 436], "tanh": [4, 246, 247, 260, 261, 263, 264, 265, 267, 273, 290, 291, 292, 314, 419, 423, 430, 431, 432, 433], "prob": [4, 270, 271, 279, 282, 419, 431], "rememb": [4, 430], "remap": 4, "origin": [4, 8, 34, 40, 41, 42, 56, 58, 59, 60, 63, 64, 70, 73, 77, 130, 189, 190, 200, 208, 230, 235, 239, 260, 307, 310, 311, 322, 324, 336, 337, 339, 341, 342, 344, 346, 347, 417, 421, 429, 432, 437], "world": [5, 140, 316, 333, 421, 426, 430, 431, 432, 437], "histor": 5, "ceas": 5, "farama": [5, 135, 136, 148, 149, 419, 432], "gymwrapp": [5, 119, 122, 126, 133, 134, 146, 147, 154, 155, 193, 217, 221, 236, 410, 419, 436], "feel": [5, 411, 427, 436], "free": [5, 7, 171, 187, 191, 321, 333, 341, 414, 419, 427, 431, 436], "gladli": 5, "prepar": [6, 38, 419], "conda": [6, 7, 411], "cmake": 6, "activ": [6, 7, 9, 45, 246, 247, 253, 257, 267, 272, 273, 323, 338, 341, 412, 432, 436], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 411], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 128], "y": [6, 7, 34, 60, 62, 70, 143, 258, 272, 294, 417, 431, 434], "facebookresearch": [6, 128], "subdirectori": 6, "verbos": [6, 427], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 84, 119, 122, 126, 133, 134, 146, 147, 154, 155, 210, 219, 239, 339, 430, 431, 436, 437], "command": [6, 7, 10, 155, 419, 430, 431, 432, 437], "readm": [6, 7, 158, 436], "md": [6, 7], "habitatenv": [6, 410], "_has_habitat": 6, "available_env": [6, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 139, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 437], "startswith": [6, 245, 413, 417, 424], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 123, 339, 417], "env_nam": [6, 117, 119, 120, 122, 123, 125, 126, 128, 131, 133, 134, 135, 141, 146, 147, 151, 154, 155, 417, 419, 437], "llvmlite": 6, "config": [6, 7, 208, 235, 248, 253, 281, 398, 399, 400, 402, 405], "var": [6, 7, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 339, 344], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 303, 339], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 339, 344, 421, 434], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 421], "stand": [7, 37, 120, 121, 146, 154, 429, 432], "joint": [7, 418], "contact": [7, 59, 430], "engin": [7, 151, 432], "biomechan": 7, "graphic": 7, "anim": [7, 431], "area": 7, "demand": [7, 426, 437], "fast": [7, 9, 92, 117, 118, 171, 211, 342, 417, 418, 419, 436], "articul": 7, "acquir": [7, 419], "deepmind": [7, 8, 9, 119, 120, 121, 122, 126, 133, 134, 138, 139, 144, 145, 146, 147, 154, 155, 192, 419, 422], "whomev": 7, "licenc": 7, "incorpor": [7, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 259, 283, 346, 420, 423, 432], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 411], "tip": [7, 411], "glfw": [7, 417], "osmesa": 7, "egl": 7, "advic": [7, 437], "sudo": [7, 411], "apt": [7, 431], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 134, 299, 300, 301], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 413, 417, 419, 420, 430, 431, 434], "roboti": 7, "html": [7, 14, 15, 141, 143, 144, 145], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 146, 154], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 56, 58, 76, 87], "bin": [7, 256, 282, 304, 412], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 252, 307, 311, 417, 419, 421, 434], "nvidia": [7, 130, 421], "older": [7, 240], "hack": [7, 417], "adatp": 7, "script": [7, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 384, 404, 408, 412, 413, 414, 417, 418, 421, 426, 430, 431, 432, 434], "unnot": [7, 209], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 89, 418, 434], "troubleshoot": 7, "gl": 7, "h": [7, 100, 180, 182, 186, 212, 226, 260, 261, 262, 264, 265, 266, 269, 376, 418, 434], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 35, 48, 49, 54, 55], "directori": [7, 40, 41, 42, 56, 58, 63, 76, 77, 91, 381, 383, 413, 414, 417, 423, 426, 430], "devel": 7, "ubuntu": [7, 130], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 418, 420, 429], "libstdc": 7, "glibcxx_3": 7, "29": [7, 105, 106], "compil": [7, 14, 15, 16, 23, 27, 34, 39, 50, 60, 61, 62, 65, 70, 71, 72, 90, 91, 92, 93, 94, 98, 101, 105, 106, 107, 112, 113, 115, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 240, 260, 261, 264, 265, 291, 356], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 203, 228, 230, 239, 324, 344, 413, 437], "job": [7, 18, 19, 20, 22, 62, 71, 72, 100, 434, 436], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 105, 117, 118], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 430, 431], "global": [7, 27, 34, 39, 50, 60, 61, 62, 65, 70, 71, 72, 100, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 228, 239, 284, 293, 307, 311, 354, 414, 417, 430, 431], "cuda_visible_devic": 7, "id": [7, 23, 64, 77, 98, 100, 105, 106, 119, 122, 125, 126, 133, 134, 146, 147, 154, 155, 156, 157, 283, 324, 342, 379, 383, 425, 434], "slurm_step_gpu": 7, "black": [7, 119, 430], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 431], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 414], "n_training_step": 8, "datapoint": [8, 76, 434], "n_data_per_train": 8, "no_grad": [8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 239, 244, 260, 261, 264, 265, 356, 357, 358, 359, 419, 420, 421, 431], "loss_fn": [8, 420, 424, 425, 436], "zero_grad": [8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 282, 414, 417, 419, 420, 421, 424, 427, 430, 431, 432], "backpropag": [8, 117, 118, 131, 132, 146, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 424, 431, 432], "differenti": [8, 76, 117, 118, 200, 324, 346, 356, 357, 358, 359, 420, 423, 424, 430, 431, 432], "denomin": 8, "artifact": 8, "numer": [8, 62, 126, 237, 263, 291, 292, 298, 303, 304, 307, 308, 309, 310, 311, 392, 419, 434, 437], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 54, 77, 78, 98, 105, 106, 122, 133, 188, 413, 432, 434], "compuat": 8, "fix": [8, 33, 146, 223, 322, 324, 340, 344, 418, 427, 432, 437], "retain_graph": [8, 117, 118], "discuss": [8, 9, 425, 430, 431], "inplac": [8, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 417], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 204, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 273, 274, 275, 277, 278, 281, 283, 284, 286, 287, 289, 293, 294, 302, 304, 306, 307, 309, 310, 311, 314, 315, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 354, 356, 357, 358, 359, 360, 410, 413, 420, 432, 436], "submodul": [8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 164, 223, 239, 262, 266, 318, 339], "param": [8, 27, 34, 39, 50, 60, 61, 64, 65, 70, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 177, 184, 187, 189, 193, 200, 202, 210, 211, 217, 221, 227, 229, 231, 239, 254, 256, 272, 273, 274, 290, 302, 307, 310, 313, 339, 349, 353, 356, 357, 358, 359, 360, 417, 421, 427, 430, 431, 432, 433, 436], "grad": [8, 27, 34, 39, 50, 60, 61, 65, 70, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 311, 417, 419], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 65, 66, 67, 70, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 284, 310], "factor": [8, 11, 24, 34, 50, 213, 239, 241, 242, 259, 263, 276, 283, 291, 292, 322, 328, 331, 332, 334, 345, 362, 417, 418, 421, 423, 427, 430, 431, 434, 437], "fit": [8, 61, 204, 223, 240, 413, 414, 417], "brax": [8, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 211, 422, 437], "jax": [8, 117, 118, 131, 132, 240], "improperli": 8, "underli": [8, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 339, 420, 422, 424, 426, 432], "tedeiou": 8, "priorit": [8, 57, 71, 97, 98, 324, 325, 326, 328, 329, 330, 337, 342, 344, 346, 347, 417, 418, 425, 436], "amount": [8, 146, 283, 418, 434], "costli": [8, 432], "constitut": [8, 418, 431, 432], "profil": 8, "frequent": [8, 45, 434], "program": [8, 329, 337, 421, 437], "functorch": [8, 10], "incl": 8, "suit": [8, 121, 419, 422, 436, 437], "mujoco_instal": 8, "valueerror": [8, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 104, 206, 226, 421, 436, 437], "idea": [9, 342, 414, 420, 423, 430, 431], "introductori": 9, "intro": [9, 419, 420], "dai": [9, 436], "2022": [9, 10, 244, 436], "spin": [9, 120, 121], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 423], "summari": [9, 204, 237, 417, 418, 419, 420], "reddit": 9, "reagent": 9, "orient": [9, 437], "baselines3": 9, "tf": 9, "bandit": [9, 143], "tensorflow": [9, 270, 271], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 421, 427], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 436], "grade": 9, "factori": [9, 73, 417], "cherri": 9, "jaxrl": 9, "mbrl": [9, 140, 412], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 419, 420, 430, 431], "notebook": [10, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "24": [10, 106, 125, 141, 142, 282, 306, 376, 430], "pip3": [10, 417, 419, 420, 430, 431], "url": [10, 128], "org": [10, 14, 15, 24, 57, 97, 98, 117, 118, 120, 121, 128, 131, 132, 138, 139, 141, 142, 143, 151, 158, 159, 180, 208, 233, 242, 248, 249, 250, 251, 252, 253, 256, 257, 258, 264, 269, 270, 271, 276, 277, 278, 282, 283, 284, 286, 287, 293, 304, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 343, 344, 345, 346, 356, 361, 369, 409, 428, 433], "whl": 10, "u": [10, 260, 261, 264, 265, 432], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 180, 419, 430, 431, 432, 434], "power": [11, 418], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 217, 410], "ultim": [11, 263, 291, 292], "ffmpeg": 11, "whatev": [11, 413, 417], "fed": [11, 431, 434], "feed": [11, 208, 235, 339, 412, 417, 430, 431, 434], "suppos": [11, 146, 389, 414, 437], "snippet": [11, 208, 233, 417], "gave": 11, "extrem": [11, 146, 154, 321, 323, 338, 341, 343], "blurri": [11, 421], "stitch": 11, "exp_nam": [11, 376, 377, 378, 381, 382, 383, 404, 418, 426, 427], "my_exp": [11, 426], "pixels_onli": [11, 120, 121, 125, 127, 128, 151, 417, 418, 426, 427, 436, 437], "my_video": [11, 426], "record_env": [11, 426, 427], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 301, 412], "allow_non": 12, "unwrap": [12, 192, 230, 384], "seealso": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 123, 146, 154, 417, 436], "device_typ": [14, 16, 17, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 208, 233, 235, 246, 247, 248, 249, 250, 251, 252, 258, 267, 272, 273, 275, 276, 281, 284, 310, 391, 402], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 418], "create_env_kwarg": [14, 15, 16, 17, 21, 123, 141, 146, 154, 228, 417, 437], "dict": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 56, 58, 60, 61, 62, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 89, 98, 105, 106, 119, 122, 123, 124, 125, 126, 127, 133, 134, 138, 139, 141, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 198, 200, 223, 228, 230, 236, 237, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 258, 267, 281, 307, 311, 324, 344, 346, 376, 380, 381, 389, 394, 399, 400, 406, 407, 408, 412, 417, 418, 419, 434, 436, 437], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 50, 213, 418, 434], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 307, 339, 389, 412, 417, 418, 419, 420, 423, 430, 436], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 162, 169, 307, 311, 389], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 40, 41, 42, 56, 58, 63, 77, 146, 154], "num_sub_thread": [14, 15, 17, 146, 154], "str": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 97, 98, 100, 111, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 133, 134, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 169, 172, 176, 180, 188, 192, 198, 199, 200, 208, 212, 221, 222, 225, 227, 228, 230, 231, 233, 235, 236, 237, 239, 240, 243, 255, 256, 262, 266, 268, 269, 272, 273, 274, 284, 285, 293, 298, 303, 304, 307, 308, 309, 310, 311, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 350, 354, 355, 356, 357, 358, 359, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 408, 418, 419, 421], "set_trunc": [14, 15, 16, 17, 119, 122, 126, 133, 134, 146, 147, 154, 155], "use_buff": [14, 15, 16, 146, 154, 188], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 119, 122, 126, 133, 134, 146, 147, 154, 155], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "no_cuda_sync": [14, 15, 16], "datacollector": [14, 15, 16, 17, 50, 341, 419, 425, 434], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 98, 105, 241, 283, 290, 291, 298, 303, 304, 307, 308, 309, 310, 311, 313, 412, 436], "sota": [14, 15, 140, 196, 343, 385, 399, 417, 418, 436], "guard": [14, 15], "doc": [14, 15, 73, 128, 131, 132, 143, 151, 383, 413, 418, 430, 431, 434], "env_mak": [14, 15, 16, 21, 404, 437], "2000": [14, 15, 16, 50, 76, 129, 282, 376, 434], "50": [14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 64, 66, 67, 75, 78, 79, 80, 81, 82, 105, 106, 138, 139, 239, 420, 434], "shutdown": [14, 15, 16, 17, 21, 177, 417, 418, 434, 436], "del": [14, 15, 16, 417, 418, 419, 429, 430, 434, 436, 437], "int64": [14, 15, 16, 23, 25, 26, 30, 35, 36, 40, 41, 42, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 63, 64, 68, 71, 73, 76, 77, 87, 97, 105, 119, 122, 126, 133, 134, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 173, 177, 188, 192, 206, 213, 221, 256, 283, 285, 303, 304, 307, 308, 309, 412, 432], "subclass": [14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 34, 39, 60, 61, 65, 70, 78, 100, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 175, 176, 229, 236, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 310, 311, 312, 314, 317, 339, 341, 418, 420, 425, 432, 434], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 34, 60, 70, 179, 294, 303, 306, 308, 420], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 76], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 418], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 98, 105, 106, 242, 431], "endless": [14, 15, 16, 17, 18, 19, 20, 188], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 126, 176, 223, 236, 266, 420, 432, 433], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 396, 418], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 87, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 173, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 191, 192, 193, 194, 196, 199, 200, 207, 208, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 239, 310, 430, 437], "span": [14, 15, 16, 17, 18, 19, 20, 21, 98, 105, 106], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 50, 239, 306, 418, 419, 430, 431], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 64, 383, 412, 430, 431, 432], "round": [14, 15, 16, 17, 18, 19, 20, 21, 119], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 236], "ratio": [14, 15, 17, 64, 417, 419], "finish": [14, 15, 17, 21, 126, 213, 437], "rest": [14, 15, 17, 34, 244, 412, 419, 420, 430, 432, 436], "earli": [14, 15, 17, 50, 126, 221, 436], "safeti": [14, 15, 17, 140, 146, 154], "harm": [14, 15, 17, 146, 154], "exclus": [14, 15, 83, 84, 98, 105, 106, 177, 193, 195, 260, 262, 264, 266, 270, 271, 303, 304, 308, 309, 345, 346, 347, 356, 357, 358, 359, 360, 383, 408, 412], "add_truncated_kei": [14, 15, 16, 17, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230], "trust": [14, 15, 16, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 185, 266], "cudagraphmodul": [14, 15, 16, 119, 122, 126, 133, 134, 146, 147, 154, 155], "behaviour": [14, 15, 16, 34, 60, 70, 420, 421, 436], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 89, 91, 92, 93, 94, 96, 97, 98, 100, 105, 106, 107, 109, 111, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 167, 168, 174, 175, 177, 184, 208, 210, 219, 223, 228, 229, 230, 232, 234, 235, 238, 239, 241, 243, 245, 246, 247, 249, 250, 251, 252, 255, 258, 259, 262, 263, 266, 267, 268, 269, 272, 273, 274, 279, 283, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 354, 355, 356, 357, 358, 359, 360, 374, 376, 380, 381, 383, 387, 394, 399, 400, 405, 406, 407, 413, 419, 421, 431], "bypass": [14, 15, 16, 423], "isaaclab": [14, 15, 16, 127], "maniskil": [14, 15, 16], "crash": [14, 15, 16, 213], "ordereddict": [14, 15, 16, 17, 21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 237, 239, 324, 344], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230], "increment": [14, 15, 16, 17, 119, 122, 126, 133, 134, 146, 147, 154, 155, 204, 338], "env_fn": [14, 15, 16, 17, 123, 406, 407], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 105, 106, 251, 252], "out_se": [14, 15, 16, 17, 437], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 341], "whole": [16, 27, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 76, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 307, 324, 344, 385, 417, 419], "_interruptor": 16, "outsid": [16, 189, 228, 413, 426, 430, 431, 432], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 423], "policy_state_dict": 16, "env_state_dict": 16, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 74, 254, 394], "respect": [18, 19, 20, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 178, 184, 187, 191, 202, 208, 209, 218, 223, 229, 230, 233, 235, 239, 260, 264, 272, 287, 310, 315, 321, 323, 338, 341, 343, 356, 358, 359, 390, 413, 419, 420, 430, 431], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 411, 418, 419, 421, 423, 426, 434, 436], "fashion": [18, 20, 21, 40, 41, 42, 56, 58, 63, 77, 106], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 45, 119, 122, 126, 133, 134, 146, 147, 154, 155, 195], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 34, 39, 57, 60, 61, 62, 65, 70, 71, 72, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317, 417], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 432], "visit": [18, 19, 20, 77], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 156], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 282, 417], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 54, 307, 311], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 406, 407, 417, 418], "coordin": [21, 186], "init": [21, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 229, 237, 239, 272, 273, 274, 383, 418, 419], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 253, 434], "equat": [21, 60, 77, 126, 237, 283, 320, 323, 345, 419, 422, 432], "exce": [21, 434], "indefinit": [21, 86], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 146, 242, 394, 420], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 346, 424], "jump": [22, 422], "host": [22, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 248, 253, 281, 302], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 63, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 82, 98, 105, 106, 119, 122, 126, 133, 134, 146, 147, 150, 154, 155, 166, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 241, 245, 256, 259, 283, 285, 302, 306, 311, 326, 354, 374, 376], "as_nest": 23, "x": [23, 34, 50, 60, 61, 62, 64, 65, 70, 106, 134, 198, 200, 226, 231, 240, 242, 244, 245, 247, 256, 258, 260, 261, 262, 264, 265, 266, 267, 269, 272, 273, 294, 303, 307, 308, 317, 320, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 394, 417, 421, 430, 432, 434, 436], "durat": [23, 431], "meta": [23, 40, 41, 42, 56, 58, 63, 75, 77, 124, 128, 321, 323, 338, 341, 343, 414, 419, 430, 431, 434], "aren": [23, 222, 420], "eventu": [23, 284, 420, 432], "recov": [23, 105, 106, 312, 329, 337, 429], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 125, 127], "stride": [23, 27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 246, 247, 249, 250, 258, 272, 418, 430, 436], "jag": 23, "focu": [23, 417, 418, 419, 421, 423, 424, 425, 430], "team": [23, 430, 431, 436], "cat": [23, 45, 188, 315, 322, 324, 325, 337, 342, 344, 346, 347, 430, 434, 436], "arang": [23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 98, 105, 106, 173, 256, 271, 303, 385, 412, 434], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 45, 72, 78, 105, 131, 132, 144, 145, 155, 165, 306], "data_split": 23, "got": [23, 425], "init_kl_coef": 24, "horizon": [24, 138, 139, 158, 159, 243, 269, 419], "kl": [24, 33, 64, 200, 333, 338], "describ": [24, 40, 41, 42, 56, 58, 63, 75, 77, 150, 181, 290, 291, 326, 379, 413, 417, 419, 430, 431, 432, 437], "ziegler": 24, "et": [24, 243], "relax": [24, 374], "penalti": [24, 64, 335, 338], "strai": [24, 64], "greater": [24, 98, 105, 106, 188, 201, 202, 262, 266, 324, 417, 418], "increas": [24, 89, 180, 224, 244, 283, 430, 431], "pull": [24, 45, 77, 434], "toward": [24, 235], "aggress": 24, "kl_coef": [24, 33, 64], "arxiv": [24, 57, 97, 98, 117, 118, 120, 121, 131, 132, 138, 139, 141, 142, 151, 158, 159, 180, 208, 233, 242, 248, 249, 250, 251, 252, 253, 256, 257, 258, 264, 269, 276, 277, 278, 282, 283, 284, 286, 287, 293, 304, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 344, 345, 346, 356, 361, 369, 433], "pdf": [24, 180, 248, 249, 250, 251, 252, 256, 282, 283, 304, 324, 331, 335, 342, 345, 346, 356, 361, 369], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 430, 431], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 200], "newest": 24, "int8": [25, 122, 137, 148, 149, 178], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 66, 67, 71, 72, 75, 78, 79, 80, 81, 82, 117, 118, 122, 125, 127, 128, 131, 132, 141, 142, 144, 145, 151, 156, 157, 173, 190, 278, 279, 282, 286, 320, 418, 419, 420, 423, 432, 434], "null": [25, 28, 29, 31, 32, 34, 43, 44, 52, 53, 57, 66, 67, 71, 75, 78, 79, 80, 81, 82, 97, 98, 178, 198], "denot": [25, 431], "clariti": [25, 45], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "cardin": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 256, 285, 303, 304, 309, 419], "outcom": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 254, 271, 290, 339, 430], "cartesian": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "is_in": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 437], "np": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 126, 314, 374, 421, 430, 432], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 126, 283, 314, 374, 421, 430], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "arrai": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 64, 66, 67, 75, 78, 79, 80, 81, 82, 97, 119, 122, 126, 127, 133, 134, 146, 147, 154, 155, 188, 192, 260, 261, 264, 265, 417, 430], "use_mask": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 148, 149], "compliant": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "singleton": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 246, 247, 267, 288, 289, 410, 413], "start_dim": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "end_dim": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "classmethod": [25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 70, 75, 77, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 233, 240, 247, 248, 281], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "index_typ": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 52, 53, 66, 67, 75, 78, 79, 80, 81, 82], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "exanpl": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "one_hot": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 256, 271, 285], "categ": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 307], "to_categorical_spec": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "idx_one_hot": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "idx_categ": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "to_categor": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 184, 187, 188, 191, 208, 223, 229, 230, 233, 235, 237, 239, 310, 320, 339, 417, 418, 419, 432, 434], "shortcut": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 432, 437], "ndimens": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 417], "violat": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 412], "proxi": [25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 63, 66, 67, 75, 77, 78, 79, 80, 81, 82, 271, 279, 307, 413], "project": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 66, 67, 75, 78, 79, 80, 81, 82, 190, 241, 264, 283, 298, 303, 304, 307, 308, 309, 310, 311, 383, 412, 436, 437], "uniformli": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 99, 339, 437], "normal": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155, 204, 237, 241, 242, 246, 247, 263, 267, 270, 271, 291, 292, 307, 311, 323, 324, 338, 341, 389, 392, 408, 412, 414, 420, 423, 431, 437], "drawn": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 223, 259, 307, 311, 419, 430, 431], "set_provisional_n": [25, 26, 30, 35, 46, 47], "temporarili": [25, 26, 30, 35, 46, 47, 89, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 425, 434], "dest": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 70, 75, 78, 79, 80, 81, 82, 208, 233, 235, 310], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 119, 122, 126, 133, 134, 146, 147, 154, 155], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82, 230, 290, 408], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "to_one_hot": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "hot": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 117, 118, 125, 127, 128, 131, 132, 138, 139, 141, 142, 144, 145, 148, 149, 151, 156, 157, 158, 159, 173, 174, 190, 256, 279, 280, 285, 303, 304, 308, 309, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 420], "categ_sampl": [25, 26, 30, 35, 48, 49, 54, 55], "onehot_sampl": [25, 26, 30, 35, 48, 49], "to_one_hot_spec": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "categoricalbox": [25, 26, 30, 35, 48, 49, 54, 55, 147], "type_check": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 75, 78, 79, 80, 81, 82], "update_mask": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "disabl": [25, 26, 27, 30, 34, 35, 39, 46, 47, 48, 49, 50, 54, 55, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 263, 292, 374, 417, 430, 431], "unmask": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "ts": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 198, 419, 420, 422, 430, 431, 434], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "child": [27, 34, 39, 45, 50, 60, 61, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 418], "fn": [27, 34, 39, 50, 59, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 231, 239, 406, 407], "recurs": [27, 31, 32, 34, 39, 43, 50, 60, 61, 65, 67, 70, 83, 84, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339, 421], "init_weight": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "m": [27, 34, 39, 46, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 190, 239, 245, 311, 418, 432], "fill_": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 418, 420], "net": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 250, 252, 255, 258, 273, 321, 322, 324, 330, 337, 341, 342, 343, 344, 404, 418, 432, 433, 436], "in_featur": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 246, 247, 249, 250, 251, 252, 258, 267, 272, 273, 275, 276, 299, 310, 318, 326, 328, 421, 423, 424], "out_featur": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 140, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 243, 246, 247, 249, 250, 251, 252, 257, 258, 262, 266, 267, 269, 272, 273, 275, 276, 299, 303, 310, 318, 326, 328, 412, 417, 420, 421, 423, 424, 427, 436], "bia": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 198, 208, 223, 228, 229, 230, 233, 235, 239, 242, 246, 247, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 273, 275, 276, 283, 310, 317, 319, 320, 324, 339, 344, 413, 417, 418, 419, 420, 431], "requires_grad": [27, 34, 39, 50, 60, 61, 65, 70, 117, 118, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 228, 230, 239, 282, 311, 324, 344], "bfloat16": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "datatyp": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 434], "member": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339, 376], "xdoctest": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 198, 208, 223, 228, 229, 230, 233, 235, 239, 310, 324, 339, 344], "buf": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "20l": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339], "1l": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339], "5l": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339], "__call__": [27, 34, 39, 50, 59, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 311, 414], "doubl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 187, 189, 191, 208, 223, 229, 230, 233, 235, 239, 310, 326, 331, 336, 342, 345, 354, 417, 418, 419, 420, 437], "eval": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 237, 239, 244, 412, 417, 418, 419], "evalu": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 127, 133, 134, 138, 139, 146, 147, 154, 155, 230, 239, 244, 254, 270, 271, 279, 292, 342, 399, 400, 418, 419, 427], "dropout": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 244, 245, 260, 262, 264, 266, 267, 412, 420], "batchnorm": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 242], "comparison": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 230, 239, 339, 417, 418], "extra_repr": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "recip": [27, 34, 39, 59, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 274, 277, 278, 281, 283, 286, 287, 289, 294, 302, 304, 306, 309, 314, 317], "get_buff": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "get_submodul": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "qualifi": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "referenc": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "resolv": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "someth": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 137, 146, 147, 154, 155, 239, 411, 418, 419, 432, 437], "get_extra_st": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239], "set_extra_st": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239], "picklabl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239], "pickl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239], "get_paramet": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "net_b": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "net_c": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "conv": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 246, 247, 418], "conv2d": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 247, 249, 250, 258, 272], "kernel_s": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 246, 247, 249, 250, 258, 272, 277, 418, 436], "diagram": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "degre": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 185, 239], "named_modul": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "half": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310, 417], "ipu": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "strict": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344, 421], "descend": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344], "get_swap_module_params_on_convers": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344], "persist": [27, 34, 37, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 198, 228, 230, 239, 324, 344], "preserv": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344], "missing_kei": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344], "unexpected_kei": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344], "namedtupl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 228, 230, 239, 324, 344], "l": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 260, 264, 355, 419, 432], "idx": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "mtia": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "named_buff": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "remove_dupl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339], "prepend": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 339, 421], "running_var": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "named_children": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "conv4": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "conv5": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "memo": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "named_paramet": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 239, 339], "register_backward_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "removablehandl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "favor": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 419], "register_full_backward_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_buff": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "running_mean": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "alongsid": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 426], "num_featur": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 242], "register_forward_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 256, 285], "with_kwarg": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "always_cal": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_module_forward_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "regardless": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 323, 338, 341], "register_forward_pre_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "invok": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "And": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 424], "forward_pr": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_module_forward_pre_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "grad_input": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "grad_output": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "technic": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 418, 420, 421, 423], "caller": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_module_full_backward_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_full_backward_pre_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "backward_pr": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_module_full_backward_pre_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_load_state_dict_post_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "incompatible_kei": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "thrown": [27, 34, 39, 50, 60, 61, 65, 66, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 434], "register_load_state_dict_pre_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "local_metadata": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "error_msg": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "noqa": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "b950": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_modul": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 414], "alia": [27, 34, 39, 50, 57, 60, 61, 62, 65, 70, 71, 72, 77, 91, 92, 93, 94, 100, 107, 109, 113, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 343, 344, 346, 347, 354, 360], "register_paramet": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_state_dict_post_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "register_state_dict_pre_hook": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "keep_var": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 344], "requires_grad_": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 421], "autograd": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 344], "freez": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 237, 239], "finetun": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "gan": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "set_submodul": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "share_memori": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 123, 126, 133, 134, 146, 147, 154, 155, 239, 417], "share_memory_": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239, 436], "destin": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 179, 187, 189, 191, 198, 228, 230, 233, 237, 239, 324, 344, 376], "averag": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 237, 239, 283, 324, 332, 333, 344, 392, 417, 419], "shallow": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 344, 420], "pleas": [27, 34, 39, 50, 60, 61, 65, 70, 74, 119, 122, 125, 126, 133, 134, 146, 147, 148, 149, 154, 155, 177, 180, 198, 224, 228, 230, 239, 272, 273, 274, 324, 344, 411], "design": [27, 34, 39, 50, 52, 54, 60, 61, 65, 70, 103, 109, 116, 119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 173, 180, 198, 209, 228, 230, 239, 302, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 347, 354, 410, 417, 418, 419, 420, 422, 423, 424, 429, 430, 431, 432, 434, 436, 437], "detach": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 198, 228, 230, 239, 324, 335, 339, 344, 346, 356, 357, 358, 359, 417], "non_block": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 63, 65, 70, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310, 420], "memory_format": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "channels_last": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "unchang": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 190, 208, 223, 229, 230, 233, 235, 239, 259, 310, 376, 391, 417, 434], "tri": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310, 426], "pin": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "4d": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "ignore_w": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "1913": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "3420": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "5113": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "2325": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "torch_doctest_cuda1": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "gpu1": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "1914": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "5112": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "2324": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "float16": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 261, 265, 310], "cdoubl": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "3741": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "j": [27, 34, 39, 50, 57, 60, 61, 65, 70, 97, 98, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310, 414, 424], "2382": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "5593": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "4443": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "complex128": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "6122": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "1150": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 184, 208, 223, 229, 230, 233, 235, 239, 310], "to_empti": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "dst_type": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "xpu": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "set_to_non": [27, 34, 39, 50, 60, 61, 65, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 239], "upper": [28, 103, 203], "continuousbox": [28, 31, 78, 119, 122, 126, 133, 134, 146, 147, 154, 155, 165, 198, 201, 223, 231], "provision": 30, "descript": [31, 158, 176, 418, 419], "akin": 31, "unnam": 31, "compositespec": [31, 410, 432, 437], "constraint": [31, 140, 291, 419, 430, 431], "data_cl": 31, "tensorclass": [31, 40, 41, 42, 56, 58, 63, 77, 87, 91, 93, 113], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 181, 417], "_nodefault": [31, 32, 43, 67], "is_empti": [31, 32, 43, 67, 432], "include_nest": [31, 32, 43, 67], "leaves_onli": [31, 32, 43, 67], "is_leaf": [31, 32, 43, 67], "_compositespecitemsview": [31, 32, 43, 67], "_compositespeckeysview": [31, 32, 43, 67], "reflect": [31, 32, 43, 67, 127, 148, 149, 171, 198, 236, 339, 397, 418, 419, 420, 431], "lock_": [31, 32, 43, 67], "propag": [31, 32, 43, 67, 321, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359, 419, 430, 431], "succeed": [31, 32, 43, 67, 198, 231], "pop": [31, 32, 43, 67], "keyerror": [31, 32, 43, 67, 230], "extract": [31, 32, 43, 67, 176, 198, 227, 231, 305, 417, 419, 436], "selected_kei": [31, 32, 43, 67, 217, 417], "unlock_": [31, 32, 43, 67], "_compositespecvaluesview": [31, 32, 43, 67], "multipli": [33, 244, 260, 264, 321, 322, 323, 324, 330, 338, 340, 341, 342, 344, 392, 417, 430], "calcul": [33, 64, 213, 260, 321, 323, 328, 338, 341, 343, 346], "reassign": 34, "reward2go": [34, 410], "reward_key_out": 34, "time_dim": [34, 356, 358, 359, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373], "unrol": [34, 332, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373], "discount": [34, 50, 123, 213, 239, 322, 328, 331, 332, 334, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 413, 418, 419, 430, 431], "lastrewardtotraj": 34, "last_reward_to_traj": 34, "new_tensordict": 34, "is_tdmodule_compat": [34, 60, 70], "reset_out_kei": [34, 60, 70], "orign": [34, 60, 70], "mod": [34, 60, 70, 200, 245, 262, 266, 306, 311, 314, 420, 421, 427], "select_out_kei": [34, 60, 70, 321, 322, 324, 325, 329, 330, 337, 341, 342, 344, 346, 347, 421], "reset_parameters_recurs": [34, 60, 70, 339], "relu": [34, 60, 70, 140, 243, 253, 269, 320], "old_param": [34, 60, 70], "bork": [34, 60, 70], "dork": [34, 60, 70], "reset_paramet": [34, 60, 70, 274], "from_modul": [34, 60, 70, 256, 310, 313, 436], "rid": [34, 60, 70], "out_keys_sourc": [34, 60, 70], "rubric": [34, 60, 70, 204, 313], "revert": [34, 60, 70, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 423, 434], "seq": [34, 60, 70, 245, 260, 262, 264, 266, 306, 420, 421, 427, 429], "z": [34, 60, 70, 261], "shift_kei": [36, 38, 51, 68], "is_full_kei": [36, 38, 51, 68], "is_ful": [36, 38, 51, 68], "tempfil": [36, 40, 41, 42, 56, 57, 58, 62, 63, 68, 71, 72, 76, 77, 91, 100, 404, 417, 418, 420, 421, 425, 430, 433, 434], "register_save_hook": [36, 57, 62, 68, 71, 72, 100], "temporarydirectori": [36, 40, 41, 42, 56, 57, 58, 62, 63, 68, 71, 72, 76, 77, 100, 417, 418, 420, 421, 425, 430, 433, 434], "tmpdir": [36, 57, 62, 68, 71, 72, 76, 100, 417, 418, 421, 430], "rb_load": [36, 57, 62, 71, 72, 100], "register_load_hook": [36, 57, 62, 71, 72, 100], "filesystem": [37, 434], "ted2nest": [38, 410], "tokens_respons": [40, 42, 133], "attention_mask": [40, 41, 56, 58, 59, 63, 64, 73, 76, 87, 133], "token_list": [40, 41, 42], "tokens_response_list": [40, 42], "log_prob": [40, 42, 64, 254, 270, 271, 279, 282, 292, 311, 324, 413], "text": [40, 41, 42, 59, 64, 73, 133, 134, 260, 261, 264, 265, 283, 419], "text_respons": [40, 133], "copy_exist": [40, 41, 42, 56, 58, 63, 77], "return_earli": [40, 41, 42, 56, 58, 63, 77], "share_non_tensor": [40, 41, 42, 56, 58, 63, 77], "memmap": [40, 41, 42, 56, 58, 63, 77, 91, 146, 154, 237, 376, 378, 391], "dataclass": [40, 41, 42, 56, 58, 63, 75, 77, 339], "from_tensordict": [40, 41, 42, 56, 58, 63, 77], "non_tensordict": [40, 41, 42, 56, 58, 63, 77], "getattr": [40, 41, 42, 56, 58, 63, 77], "load_memmap": [40, 41, 42, 56, 58, 63, 77], "load_": [40, 41, 42, 56, 58, 63, 77], "load_memmap_": [40, 41, 42, 56, 58, 63, 77], "fetch": [40, 41, 42, 56, 58, 63, 77, 117, 118, 120, 121, 200, 423, 433, 434], "fromkei": [40, 41, 42, 56, 58, 63, 77], "saved_td": [40, 41, 42, 56, 58, 63, 77], "td_load": [40, 41, 42, 56, 58, 63, 77], "fake": [40, 41, 42, 56, 58, 63, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 417, 418, 421], "_subclass": [40, 41, 42, 56, 58, 63, 77], "faketensormod": [40, 41, 42, 56, 58, 63, 77], "faketensor": [40, 41, 42, 56, 58, 63, 77], "from_flatten": [40, 41, 42, 56, 58, 63, 77], "attemptedli": [40, 41, 42, 56, 58, 63, 77], "existsok": [40, 41, 42, 56, 58, 63, 77, 91], "mimic": [40, 41, 42, 56, 58, 63, 77, 119, 122, 126, 133, 134, 146, 147, 154, 155], "cross": [40, 41, 42, 56, 58, 63, 77, 243], "tensordictfutur": [40, 41, 42, 56, 58, 63, 77], "serialis": [40, 41, 42, 56, 58, 63, 77], "deepli": [40, 41, 42, 56, 58, 63, 77], "memmap_": [40, 41, 42, 56, 58, 63, 77, 237], "memmap_lik": [40, 41, 42, 56, 58, 63, 77], "contentless": [40, 41, 42, 56, 58, 63, 77], "1_000_000": [40, 41, 42, 56, 57, 58, 62, 63, 71, 72, 77, 100, 105, 417, 420, 430], "alloc": [40, 41, 42, 56, 58, 63, 77, 93, 254, 270, 271, 417], "memmap_refresh_": [40, 41, 42, 56, 58, 63, 77], "refresh": [40, 41, 42, 56, 58, 63, 77, 427, 430, 431], "saved_path": [40, 41, 42, 56, 58, 63, 77], "setattr": [40, 41, 42, 56, 58, 63, 77], "tent": [40, 41, 42, 56, 58, 63, 76, 77], "to_tensordict": [40, 41, 42, 56, 58, 63, 77, 420], "retain_non": [40, 41, 42, 56, 58, 63, 77], "discrard": [40, 41, 42, 56, 58, 63, 77], "switch": [40, 41, 42, 56, 58, 63, 77, 230, 263, 292, 374], "stackedcomposit": [43, 410], "tensordictmap": [45, 410], "observation_kei": [45, 119, 122, 126, 133, 134, 146, 147, 154, 155], "excluded_kei": [45, 193], "consolid": [45, 70, 84, 93], "lazili": [45, 92, 273, 432], "from_tensordict_pair": [45, 70], "querymodul": [45, 70], "get_keys_from_env": 45, "cattensor": [45, 119, 122, 126, 133, 134, 146, 147, 154, 155, 417, 429, 432, 437], "unsqueezetransform": [45, 180, 432, 434], "oracl": 45, "obs_kei": 45, "state_kei": [45, 119, 122, 126, 133, 134, 146, 147, 154, 155], "reset_st": 45, "rollout0": 45, "rollout1": 45, "rollout1b": 45, "collaps": 45, "max_length": [45, 56, 58, 59, 73, 76, 77, 87, 188, 227, 421, 427], "valid_path": [45, 77], "assert_clos": [45, 262, 266], "subtre": [45, 77], "intersect": [45, 240], "Or": [45, 152, 153, 272], "rollout_from_path": [45, 77], "plot": [45, 77, 417, 419, 420, 430, 431, 432], "_nestedkei": [45, 119, 122, 126, 133, 134, 146, 147, 154, 155], "return_nod": 45, "diverg": [45, 200, 262, 266, 307, 311, 333, 338], "endpoint": 45, "noth": [45, 134, 417, 419], "r0": [45, 417], "123": [45, 77], "392": [45, 77], "989": [45, 77], "809": [45, 77], "847": [45, 77], "r1": 45, "235": 45, "td_root": [45, 77], "node_data": [45, 77], "node_id": [45, 77], "nontensordata": [45, 52, 119, 144, 145, 188, 198, 227, 231, 374], "_parent": [45, 77], "nontensorstack": [45, 52, 92, 119, 134, 188, 198, 227, 231], "weakref": [45, 77], "0x716eeb78fbf0": 45, "0x": 45, "4341220243998689835": 45, "6745467818783115365": 45, "win": [45, 77], "to_str": [45, 77], "node_format_fn": [45, 77], "indent": [45, 77], "rollouts_data": [45, 77], "456": [45, 77], "359": [45, 77], "3094": [45, 77], "75": [45, 77, 105], "948": [45, 77], "68": [45, 77, 105], "9045": [45, 77], "rollout_data": [45, 77], "nvec": [46, 48], "remove_singleton": 46, "ax": [46, 275, 276, 430], "Not": [46, 47, 62, 117, 118, 131, 228, 262, 266], "neither": [46, 47, 48, 49, 156, 432], "use_regist": [48, 54], "mone_hot": [48, 49], "boxlist": [48, 49], "gamma": [50, 213, 239, 269, 321, 322, 324, 325, 326, 328, 330, 331, 332, 334, 337, 339, 341, 342, 343, 344, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 404, 413, 417, 418, 419, 430, 431, 436], "sutton": [50, 413, 430, 431], "1988": 50, "tempor": [50, 262, 266, 269, 357, 358, 363, 364], "44": [50, 105], "ahead": [50, 239, 437], "bias": [50, 260, 261, 264, 265, 317, 413, 417], "mitig": [50, 180], "multisteptransform": [50, 410], "99": [50, 213, 237, 269, 334, 349, 355, 362, 404, 417, 418, 419, 421, 424, 427, 430, 431, 436], "nontermin": 50, "original_reward": 50, "newli": [50, 119, 122, 126, 133, 134, 146, 147, 154, 155], "OR": 50, "row": [51, 69, 131, 132, 201], "example_data": [52, 133, 188], "conform": 52, "templat": [52, 377], "randomli": [52, 104, 155, 203, 204, 223, 259, 307, 311, 423, 430, 431, 432, 434], "unidimension": 54, "action_valu": [54, 255, 256, 285, 303, 304, 308, 309, 324, 330, 339, 354, 412, 420, 421, 423, 427], "keepdim": 54, "chosen_action_valu": [54, 284, 285, 293, 308, 309, 354, 412, 420, 423], "priori": 54, "uniqu": [54, 77, 105, 106, 134, 138, 139, 180, 192, 222, 223, 224, 228, 306, 383, 425, 434], "tensor_spec": [54, 150, 172, 174, 329, 330, 341, 343], "one_hot_sampl": [54, 55], "chosen_data": [56, 87], "rewarddata": [56, 87, 410], "rejected_data": [56, 87], "from_dataset": [56, 58, 87], "dataset_nam": [56, 58, 64, 76, 87, 143], "550": [56, 58, 64, 76, 87, 105, 106], "root_dir": [56, 58, 76, 87], "from_disk": [56, 58, 76, 87], "carperai": [56, 58, 64, 76], "openai_summarize_comparison": [56, 58, 76], "load_from_disk": [56, 58, 76, 87], "load_dataset": [56, 58, 76, 87], "92534": 56, "input_id": [56, 58, 59, 63, 64, 73, 76, 87, 133, 134], "end_scor": [56, 63, 64, 87], "sub_data": [56, 58], "alpha": [57, 71, 97, 98, 246, 247, 249, 250, 251, 252, 258, 272, 322, 324, 330, 340, 342, 344, 346, 417, 434, 436], "ep": [57, 71, 97, 98, 204, 237, 242, 283, 323, 345, 392, 413, 417, 418, 420, 421, 424, 427], "1e": [57, 71, 97, 98, 204, 237, 242, 254, 257, 290, 417, 418, 419, 431], "08": [57, 71, 97, 98], "pin_memori": [57, 62, 71, 72, 207, 417, 436], "schaul": [57, 97, 98], "quan": [57, 97, 98], "antonogl": [57, 97, 98], "silver": [57, 97, 98], "2015": [57, 97, 98], "ab": [57, 97, 98, 117, 118, 120, 121, 131, 132, 138, 139, 141, 142, 151, 158, 159, 179, 208, 233, 237, 242, 248, 253, 257, 258, 264, 269, 276, 277, 278, 284, 286, 287, 293, 321, 322, 326, 327, 328, 329, 332, 333, 334, 336, 337, 340, 341, 344, 433], "1511": [57, 97, 98, 258], "05952": [57, 97, 98], "expon": [57, 71, 97, 98], "\u03b1": [57, 71, 97, 98], "delta": [57, 71, 97, 98, 260, 264, 290, 307, 311, 410, 413, 430], "1_000": [57, 62, 71, 72, 430, 434], "mini": [57, 62, 71, 72, 431], "decid": [57, 62, 71, 72, 430, 436], "incompat": [57, 62, 71, 72, 343, 434], "drop_last": [57, 62, 71, 72, 104, 106], "notion": [57, 62, 71, 72, 282], "caution": [57, 62, 71, 72, 104, 119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 437], "codebas": [57, 62, 71, 72, 432], "return_info": [57, 62, 71, 72, 97, 98, 100, 434], "tensordictprioritizedreplaybuff": [57, 410, 436], "simplifi": [57, 168, 423, 432, 434], "_weight": [57, 71, 97, 98], "update_prior": [57, 97, 98, 391, 414, 418, 434, 436], "36278465": 57, "invert": [57, 62, 71, 72, 100, 319, 419], "tqdm": [57, 62, 71, 72, 100, 394, 417, 419, 420, 430, 431, 432], "randomsampl": [57, 62, 71, 72, 100, 417, 430], "td_error": [57, 62, 71, 72, 100, 324, 325, 326, 328, 329, 330, 331, 337, 339, 342, 344, 346, 347, 354, 417, 434, 436], "update_tensordict_prior": [57, 62, 71, 72, 100, 417, 434, 436], "insert_transform": [57, 62, 71, 72, 100, 175, 230], "insert": [57, 62, 71, 72, 90, 100, 101, 111, 112, 115, 116, 175, 180, 184, 220, 230, 232], "set_sampl": [57, 62, 71, 72, 100], "set_storag": [57, 62, 71, 72, 100], "set_writ": [57, 62, 71, 72, 100], "write_count": [57, 62, 71, 72, 100], "prompt_rindex": [58, 59, 64], "promptdatatldr": 58, "116722": 58, "prompt": [59, 64, 133, 188], "return_tensordict": [59, 73], "tensodict": [59, 73], "valid_sampl": 59, "eough": 59, "toknen": 59, "meet": 59, "criterion": 59, "autotoken": [59, 73, 76], "from_pretrain": [59, 64, 73, 134], "gpt2": [59, 64, 73, 76, 134, 248, 253, 281], "pad_token": [59, 73], "eos_token": 59, "enough": [59, 434], "inde": [59, 190, 419, 421, 432], "index_kei": [60, 70], "hash_kei": 60, "_hash": 60, "hash_modul": [60, 65, 70], "siphash": [60, 61, 70, 134], "hash_to_int": 60, "hashtoint": 60, "query_modul": [60, 70], "key1": [60, 70, 181, 220, 385, 393, 436], "key2": [60, 70, 181, 220, 385, 393, 436], "write_hash": 60, "n_compon": 61, "dtype_cast": 61, "as_tensor": [61, 65, 421], "init_method": 61, "emb": [61, 420], "sklearn": [61, 143], "byte": [61, 65, 174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239], "builtin": [61, 65], "pythonhashse": [61, 65], "todo": 61, "storagecheckpointerbas": [62, 107], "roundrobinwrit": [62, 72], "_pytre": [62, 434], "tree_map": [62, 434], "assert0": [62, 434], "ref_model": 64, "reward_model": [64, 316], "max_new_token": 64, "score_clip": 64, "kl_schedul": 64, "klcontrollerbas": 64, "num_step": [64, 421], "causal": 64, "sentenc": 64, "frozen": [64, 200, 237], "llm": [64, 76, 87, 133, 188], "gpt2rewardmodel": 64, "get_dataload": [64, 410], "promptdata": [64, 410], "gpt2lmheadmodel": 64, "dl": 64, "block_siz": [64, 87], "tensorclass_typ": [64, 87], "openai_summarize_tldr": 64, "config_class": 64, "model_path": 64, "rollout_from_model": 64, "rollout_from_data": 64, "600": 64, "reward_kl": [64, 200], "reward_raw": 64, "sample_log_prob": [64, 299, 300, 301, 307, 311, 313, 341], "create_rollout_td": 64, "log_ratio": 64, "replic": [64, 413], "rindex": 64, "eo": 64, "generation_config": 64, "generationconfig": 64, "ti": [64, 365, 366, 367, 368, 370, 371, 372, 373, 418], "log_probs_gen": 64, "logprobs_of_label": 64, "hash_a": 65, "4669941682990263259": 65, "3778166555168484291": 65, "9122128731510687521": 65, "hash_b": 65, "heterogen": [66, 67, 92, 119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 160, 272, 273, 417, 418], "220": 68, "resembl": 70, "tensormap": 70, "collat": [70, 100], "subtyp": 70, "embedding_storag": 70, "tensor_dict_storag": 70, "new_index": 70, "key3": 70, "retrieve_valu": 70, "storage_constructor": 70, "write_fn": 70, "tensordictstorag": 70, "thumb": [70, 146, 419], "lazydynamicstorag": 70, "fixedstorag": 70, "randomprojectionhash": 70, "priority_kei": [71, 72, 97, 324, 326, 329, 330, 331, 337, 339, 342, 344, 346, 347, 354, 434, 436], "reduct": [71, 97, 98, 111, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 340, 341, 342, 343, 344, 346, 347], "prioritizedreplaybuff": [71, 410, 436], "min": [71, 97, 98, 111, 283, 322, 323, 324, 330, 340, 342, 344, 418, 419], "median": [71, 97, 98, 111, 131, 132, 173, 307, 311], "include_info": [71, 72], "huggingfac": [73, 305], "co": [73, 192, 432], "pad_trunc": 73, "am": 73, "me": 73, "reassur": 73, "ok": 73, "primarili": [75, 209, 423], "educ": 75, "guess": 75, "knowledg": [75, 119, 122, 126, 133, 134, 146, 147, 154, 155, 424, 426], "tokenizer_fn": 76, "tensordicttoken": [76, 410], "pre_tokenization_hook": 76, "valid_s": 76, "tokenizer_class": 76, "tokenizer_model_nam": 76, "tokein": 76, "elementwis": 76, "vocabulari": [76, 133, 134, 227], "loader": [76, 419], "185068": 76, "dataset_to_tensordict": 76, "data_dir": 76, "batch_dim": [76, 119, 122, 126, 133, 134, 146, 147, 154, 155, 408], "valid_mask_kei": 76, "batch_dimens": 76, "filder": 76, "from_dict": 76, "data_memmap": 76, "ref": 77, "branching_act": 77, "prev_act": 77, "edg": [77, 421], "travers": 77, "breadth": 77, "bf": 77, "fully_expand": 77, "get_vertex_by_hash": 77, "get_vertex_by_id": 77, "is_termin": 77, "make_nod": 77, "node_observ": 77, "bag": 77, "num_children": 77, "num_vertic": 77, "count_repeat": 77, "recustruct": 77, "scope": [77, 119, 122, 126, 133, 134, 146, 147, 154, 155, 421, 437], "plotli": 77, "make_label": 77, "visual": [77, 208, 233, 235, 376, 419, 430, 432], "notimplementederror": [77, 417], "unsupport": 77, "selected_act": 77, "mctsforest": [77, 134, 410], "key_typ": 77, "liter": [77, 133, 188, 297], "recurse_through_entri": 84, "recurse_through_stack": 84, "infinit": [87, 138, 139, 158, 159, 425, 434], "block": [87, 90, 116, 412, 417, 420, 421, 424, 425, 430, 434], "pairwisedataset": [87, 410], "256": [87, 138, 139, 198, 253, 418, 419, 421, 430, 431], "checkpoint_fil": 89, "h5": 89, "h5_kwarg": 89, "iff": 89, "suffix": [89, 389], "h5py": 89, "create_dataset": 89, "consequ": [89, 264, 425], "immut": [90, 119, 122, 126, 133, 134, 146, 154, 211, 230], "piec": [90, 101, 112, 115, 116, 417, 418, 419, 426, 430, 431, 432, 434], "scratch_dir": [91, 417, 418, 420, 425, 430, 433, 434], "sent": [91, 93, 113, 237], "mistak": [91, 93, 113], "overewritten": 91, "tensorstoragecheckpoint": 91, "pathlib": [91, 394, 421], "main_ckpt_dir": 91, "rb_memmap": 91, "10_000_000": 91, "myclass": [91, 93, 113], "foo": [91, 93, 113, 302, 434, 437], "bar": [91, 93, 113, 302, 387, 388, 389, 394, 414, 418], "attach": [91, 92, 93, 94, 107, 109, 113, 418], "entiti": [91, 92, 93, 94, 107, 109, 113], "lazystacktensordict": 92, "heterougen": 92, "linearli": 92, "densifi": 92, "unlimit": [92, 94], "st": 92, "expans": [93, 339], "zero_": [93, 113, 165], "liststoag": 95, "max_capac": [97, 98, 417, 434], "max_priority_within_buff": [97, 98], "data_0": 97, "data_1": 97, "smoothen": 97, "tdrb": 97, "pack": [97, 260, 264, 419, 422, 437], "nd": [97, 98], "1d": [97, 98, 105, 106, 111], "sum_tre": [97, 98], "min_tre": [97, 98], "slice_len": [98, 105, 106, 376], "end_kei": [98, 105, 106], "cache_valu": [98, 105, 106], "closer": [98, 436], "readili": [98, 105, 106, 311], "conjunct": [98, 105, 106, 418], "Will": [98, 105, 141, 376], "buffer0": [98, 105], "immutablewrit": [98, 105], "buffer1": [98, 105], "other_sampl": [98, 105], "shorter": [98, 105, 106], "short": [98, 105, 106, 117, 118, 119, 122, 126, 131, 132, 133, 134, 146, 147, 154, 155, 160, 264, 265, 418, 419, 422, 423, 431, 434], "Be": [98, 105, 106], "fewer": [98, 105], "tolist": 98, "120110917137936e": 98, "06": [98, 254, 290], "storageensembl": [100, 103], "samplerensembl": 100, "writerensembl": [100, 109], "sample_from_al": [100, 103], "num_buffer_sampl": [100, 103], "ensembl": [100, 103, 109, 110, 116, 310, 342], "forbidden": 100, "0x13a2ef430": 100, "0x13a2f9310": 100, "interpol": [100, 212, 418, 421], "interpolationmod": 100, "bilinear": [100, 212], "0x13a2f9220": 100, "0x13a2f9f70": 100, "0x13a2d9b50": 100, "0x13a2f95b0": 100, "0x128648260": 100, "roundrobin": [101, 112], "buffer_id": [103, 109], "shuffl": [104, 106, 431], "incomplet": [104, 106], "fresh": 104, "haven": [104, 433], "remain": [104, 179, 189, 190, 200, 222, 276, 424], "draw": [104, 259], "use_gpu": [105, 106], "slicesamplerwithoutreplac": [105, 434], "acceler": [105, 106, 430, 431], "significantli": [105, 106, 180, 413, 417, 418, 424, 431], "reconstruct": [105, 106, 333, 417, 437], "ep_1": [105, 106], "ep_2": [105, 106], "73": 105, "74": 105, "76": 105, "77": 105, "42": [105, 267, 282, 321, 322, 324, 325, 329, 337, 344], "43": 105, "45": 105, "67": [105, 429], "69": 105, "70": 105, "71": 105, "27": [105, 106, 117, 118, 146, 154], "28": [105, 106, 272], "31": [105, 131, 132], "80": [105, 117, 118], "82": 105, "83": 105, "84": [105, 212, 420, 421], "78": 105, "79": 105, "320": [105, 106, 120, 121], "700": [105, 106], "dataid": [105, 106], "available_dataset": [105, 106], "counter": [106, 228, 306, 387, 414, 421], "23": [106, 240], "request": [106, 177, 209], "51": 106, "__len__": 107, "rank_kei": 111, "rank": [111, 243], "samplerwithoutreplac": [111, 419, 431, 434], "get_insert_index": 111, "googl": [117, 118, 138, 139, 144, 145, 242, 419, 420, 430, 431], "convers": [117, 118, 131, 132, 133, 168, 413], "2106": [117, 118, 327, 346], "13281": [117, 118], "categorical_action_encod": [117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 155, 168, 421], "frame_skip": [117, 118, 120, 121, 125, 126, 127, 128, 131, 132, 135, 136, 141, 142, 151, 196, 387, 389, 397, 414, 417, 418, 419, 436], "allow_done_after_reset": [117, 118, 120, 121, 122, 125, 127, 128, 131, 132, 141, 142, 144, 145, 151, 156, 157], "toler": [117, 118, 120, 121, 125, 127, 128, 131, 132, 141, 142, 144, 145, 151, 156, 157, 254, 290], "is_avail": [117, 118, 417, 418, 419, 420, 430, 431, 433], "ant": [117, 118, 119, 122, 126, 129, 133, 134, 146, 147, 154, 155, 433], "87": [117, 118], "acrobot": [117, 118, 120, 121, 437], "advant": [117, 118, 131, 132], "timer": [117, 118, 131, 132], "timeit": [117, 118, 131, 132, 421], "310": [117, 118], "ms": [117, 118, 131, 132], "268": [117, 118], "433": [117, 118], "213": [117, 118], "8605": [117, 118], "pipelineenv": 118, "get_environ": 118, "san": 119, "fen": [119, 144, 145], "pgn": 119, "legal": 119, "board": [119, 155], "include_san": 119, "algebra": [119, 432], "notat": 119, "include_fen": 119, "forsyth": 119, "edward": 119, "include_pgn": 119, "portabl": [119, 426], "include_legal_mov": 119, "include_hash": 119, "mask_act": 119, "subset": [119, 432, 433], "29275": 119, "rnbqkbnr": [119, 144, 145], "pppppppp": [119, 144, 145], "kqkq": [119, 144, 145], "legal_mov": 119, "219": 119, "5p2": 119, "ppppp1pp": 119, "event": [119, 270, 271, 279, 365, 366, 367, 368, 370, 371, 372, 373, 434], "date": [119, 179, 379], "white": 119, "f4": 119, "96": 119, "kq": 119, "5n2": 119, "rnbqkb1r": 119, "nf3": 119, "na6": 119, "c4": 119, "f6": 119, "h4": 119, "rb8": 119, "na3": 119, "ra": 119, "sort": [119, 122, 126, 133, 134, 146, 147, 154, 155, 181, 283], "another_act": [119, 122, 126, 133, 134, 146, 147, 154, 155], "discretebox": [119, 122, 126, 133, 134, 146, 147, 154, 155], "mutabl": [119, 122, 126, 133, 134, 146, 147, 154, 155], "action_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155, 419, 431], "had": [119, 122, 126, 133, 134, 146, 147, 154, 155, 423, 425], "all_act": [119, 122, 126, 133, 134, 146, 147, 154, 155], "any_don": [119, 122, 126, 133, 134, 146, 147, 154, 155], "loc": [119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 204, 215, 237, 263, 291, 292, 299, 300, 301, 307, 311, 313, 321, 322, 324, 337, 341, 342, 343, 344, 398, 408, 412, 417, 418, 419, 420, 423, 431, 436], "_callabletransform": [119, 122, 126, 133, 134, 146, 147, 154, 155], "auto_specs_": [119, 122, 126, 133, 134, 146, 147, 154, 155], "action_spac": [119, 122, 126, 133, 134, 146, 147, 154, 155, 192, 256, 285, 303, 304, 308, 309, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 420, 421, 423, 427], "check_dtyp": [119, 122, 126, 133, 134, 146, 147, 154, 155, 160], "discrep": [119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 321, 323, 325, 326, 338, 341, 343, 354], "broken": [119, 122, 126, 133, 134, 146, 147, 154, 155, 160], "rng": [119, 122, 126, 133, 134, 146, 147, 154, 155, 160, 432], "done_keys_group": [119, 122, 126, 133, 134, 146, 147, 154, 155], "another_don": [119, 122, 126, 133, 134, 146, 147, 154, 155], "done_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "empty_cach": [119, 122, 126, 133, 134, 146, 147, 154, 155, 230], "fake_tensordict": [119, 122, 126, 133, 134, 146, 147, 154, 155, 418, 421], "envnam": [119, 122, 126, 133, 134, 146, 147, 154, 155], "full_action_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155, 430, 431], "full_done_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "full_observation_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "full_reward_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "pipeline_st": [119, 122, 126, 133, 134, 146, 147, 154, 155], "full_state_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "get_legal_mov": 119, "uci": 119, "input_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "is_spec_lock": [119, 122, 126, 133, 134, 146, 147, 154, 155], "maybe_reset": [119, 122, 126, 133, 134, 146, 147, 154, 155], "speak": [119, 122, 126, 133, 134, 146, 147, 154, 155, 185, 311, 417], "observation_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "output_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "register_gym": [119, 122, 126, 133, 134, 146, 147, 154, 155, 422], "entry_point": [119, 122, 126, 133, 134, 146, 147, 154, 155], "info_kei": [119, 122, 126, 133, 134, 146, 147, 154, 155], "reward_threshold": [119, 122, 126, 133, 134, 146, 147, 154, 155], "nondeterminist": [119, 122, 126, 133, 134, 146, 147, 154, 155], "max_episode_step": [119, 122, 125, 126, 127, 133, 134, 146, 147, 154, 155], "order_enforc": [119, 122, 126, 133, 134, 146, 147, 154, 155], "autoreset": [119, 122, 126, 133, 134, 146, 147, 154, 155], "disable_env_check": [119, 122, 125, 126, 133, 134, 141, 142, 146, 147, 154, 155], "apply_api_compat": [119, 122, 126, 133, 134, 146, 147, 154, 155], "nasium": [119, 122, 126, 133, 134, 146, 147, 154, 155, 168], "dmcontrolenv": [119, 122, 126, 133, 134, 146, 147, 154, 155, 376, 410, 417, 422, 429, 437], "dmc": [119, 122, 126, 133, 134, 146, 147, 154, 155], "cheetah": [119, 120, 121, 122, 126, 133, 134, 146, 147, 154, 155, 376, 417], "removeemptyspec": [119, 122, 126, 133, 134, 146, 147, 154, 155], "threshold": [119, 122, 126, 133, 134, 146, 147, 154, 155, 259, 322, 323, 419], "learnt": [119, 122, 126, 133, 134, 146, 147, 154, 155, 404], "checker": [119, 122, 125, 126, 133, 134, 141, 142, 146, 147, 154, 155], "stepapicompat": [119, 122, 126, 133, 134, 146, 147, 154, 155], "deem": [119, 122, 126, 133, 134, 138, 139, 146, 147, 154, 155, 158, 159], "task_nam": [119, 120, 122, 126, 133, 134, 146, 147, 154, 155], "envgym": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0855": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0215": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0881": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0412": [119, 122, 126, 133, 134, 146, 147, 154, 155], "1101": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0080": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0254": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0424": [119, 122, 126, 133, 134, 146, 147, 154, 155], "veloc": [119, 120, 121, 122, 126, 133, 134, 146, 147, 154, 155, 180, 430, 431, 432, 437], "9609e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "9776e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "04": [119, 122, 126, 130, 133, 134, 146, 147, 154, 155, 225], "6347e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "3842e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "5338e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "3064e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0381e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "6656e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "05": [119, 122, 126, 133, 134, 146, 147, 154, 155, 225, 242, 432], "0204e": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0833": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0275": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0612": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0770": [119, 122, 126, 133, 134, 146, 147, 154, 155], "1256": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0082": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0186": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0476": [119, 122, 126, 133, 134, 146, 147, 154, 155], "2221": [119, 122, 126, 133, 134, 146, 147, 154, 155], "2256": [119, 122, 126, 133, 134, 146, 147, 154, 155], "5930": [119, 122, 126, 133, 134, 146, 147, 154, 155], "6937": [119, 122, 126, 133, 134, 146, 147, 154, 155], "5865": [119, 122, 126, 133, 134, 146, 147, 154, 155], "5479": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0187": [119, 122, 126, 133, 134, 146, 147, 154, 155], "6825": [119, 122, 126, 133, 134, 146, 147, 154, 155], "5224": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0018": [119, 122, 126, 133, 134, 146, 147, 154, 155], "1005": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0335": [119, 122, 126, 133, 134, 146, 147, 154, 155, 185], "0268": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0133": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0627": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0074": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0488": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0353": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0075": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0069": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0098": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0058": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0033": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0157": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0004": [119, 122, 126, 133, 134, 146, 147, 154, 155, 225], "0381": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0452": [119, 122, 126, 133, 134, 146, 147, 154, 155], "11355747": [119, 122, 126, 133, 134, 146, 147, 154, 155], "04257728": [119, 122, 126, 133, 134, 146, 147, 154, 155], "00408397": [119, 122, 126, 133, 134, 146, 147, 154, 155], "04155852": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0389733": [119, 122, 126, 133, 134, 146, 147, 154, 155], "01409826": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0978704": [119, 122, 126, 133, 134, 146, 147, 154, 155], "08808327": [119, 122, 126, 133, 134, 146, 147, 154, 155], "03970837": [119, 122, 126, 133, 134, 146, 147, 154, 155], "00535434": [119, 122, 126, 133, 134, 146, 147, 154, 155], "02353762": [119, 122, 126, 133, 134, 146, 147, 154, 155], "05116226": [119, 122, 126, 133, 134, 146, 147, 154, 155], "02788907": [119, 122, 126, 133, 134, 146, 147, 154, 155], "06848346": [119, 122, 126, 133, 134, 146, 147, 154, 155], "05154399": [119, 122, 126, 133, 134, 146, 147, 154, 155], "0371798": [119, 122, 126, 133, 134, 146, 147, 154, 155], "05128025": [119, 122, 126, 133, 134, 146, 147, 154, 155], "dydact": [119, 122, 126, 133, 134, 146, 147, 154, 155], "gym_env": [119, 122, 126, 133, 134, 146, 147, 154, 155, 436], "reset_kei": [119, 122, 126, 133, 134, 146, 147, 154, 155, 180, 216, 222, 223, 224, 430], "multitask": [119, 122, 126, 133, 134, 146, 147, 154, 155], "multiag": [119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 172, 273, 284, 293, 323, 338, 341, 354], "another_reward": [119, 122, 126, 133, 134, 146, 147, 154, 155], "reward_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "auto_cast_to_devic": [119, 122, 126, 133, 134, 146, 147, 154, 155, 431], "soon": [119, 122, 126, 133, 134, 146, 147, 148, 149, 154, 155], "__sort": [119, 122, 126, 133, 134, 146, 147, 154, 155], "as__": [119, 122, 126, 133, 134, 146, 147, 154, 155], "argmaxmodul": [119, 122, 126, 133, 134, 146, 147, 154, 155], "argmax": [119, 122, 126, 133, 134, 146, 147, 154, 155, 256, 285, 304, 309, 421, 423], "n_act": [119, 122, 126, 133, 134, 146, 147, 154, 155, 200, 321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 424], "ourselv": [119, 122, 126, 133, 134, 146, 147, 154, 155, 419, 437], "emul": [119, 122, 126, 133, 134, 146, 147, 154, 155], "epoch": [119, 122, 126, 133, 134, 146, 147, 154, 155, 394, 419, 430, 431], "input_td": [119, 122, 126, 133, 134, 146, 147, 154, 155], "rollout_td": [119, 122, 126, 133, 134, 146, 147, 154, 155], "state_spec_unbatch": [119, 122, 126, 133, 134, 146, 147, 154, 155], "prevail": [119, 122, 126, 133, 134, 146, 147, 154, 155, 172, 181, 216], "next_tensordict": [119, 122, 126, 133, 134, 146, 147, 154, 155, 171, 177, 181, 193, 194, 195, 200, 207, 210, 211, 217, 220, 233, 237], "precomput": [119, 122, 126, 133, 134, 146, 147, 154, 155], "_stepmdp": [119, 122, 126, 133, 134, 146, 147, 154, 155, 171], "exclude_act": [119, 122, 126, 133, 134, 146, 147, 154, 155, 171], "leverag": [119, 122, 126, 133, 134, 137, 146, 147, 148, 149, 154, 155, 417, 431, 437], "minim": [119, 122, 126, 133, 134, 146, 147, 154, 155, 378, 434], "reset_data": [119, 122, 126, 133, 134, 146, 147, 154, 155, 437], "dm_control": [120, 121, 417, 429, 437], "2006": [120, 121, 322, 328], "12983": [120, 121], "240": [120, 121, 436], "swingup": [120, 121, 437], "swingup_spars": [120, 121], "ball_in_cup": [120, 121], "catch": [120, 121, 421], "balance_spars": [120, 121], "three_pol": [120, 121], "two_pol": [120, 121], "finger": [120, 121], "turn_easi": [120, 121], "turn_hard": [120, 121], "fish": [120, 121], "upright": [120, 121, 418], "swim": [120, 121], "hopper": [120, 121], "hop": [120, 121], "humanoid": [120, 121, 146, 154, 429], "walk": [120, 121, 146, 154, 418, 429], "run_pure_st": [120, 121], "bring_bal": [120, 121], "bring_peg": [120, 121], "insert_bal": [120, 121], "insert_peg": [120, 121], "point_mass": [120, 121], "reacher": [120, 121], "swimmer": [120, 121], "swimmer6": [120, 121], "swimmer15": [120, 121], "walker": [120, 121], "dog": [120, 121], "trot": [120, 121], "humanoid_cmu": [120, 121], "lqr": [120, 121], "lqr_2_1": [120, 121], "lqr_6_2": [120, 121], "quadrup": [120, 121], "escap": [120, 121], "stacker": [120, 121], "stack_2": [120, 121], "stack_4": [120, 121], "deviceless": 122, "run_type_check": [122, 140], "hint": 122, "counterenv": 122, "creator": [123, 399, 400, 406, 407, 408], "substitut": [123, 222, 237, 423], "vecnorm": [123, 408], "env_creat": [123, 417], "test_env1": 123, "_td": [123, 332], "observation_count": [123, 437], "test_env2": 123, "sleep": [123, 437], "ps": 123, "p1": 123, "p2": 123, "9934": 123, "make_vari": [123, 228], "variant": [123, 228, 244, 412], "trajcount": 123, "env_creator_pendulum": 123, "env_creator_cartpol": 123, "env_str": 124, "device_map": 124, "registri": [125, 156], "asyncvectorenv": 125, "involv": [125, 127, 128, 138, 139, 151, 177, 180, 228, 262, 266, 422, 424], "pixel_observ": [125, 127, 128, 151], "pixelobservationwrapp": [125, 127, 128, 151], "adventur": [125, 127], "airraid": [125, 127, 437], "alien": [125, 127], "time_limit": 125, "timelimit": [125, 138, 139, 158, 159], "default_info_dict_read": [125, 126, 127, 146], "reader": [125, 126, 127, 146, 418], "set_info_dict_read": [125, 126, 127, 146, 422], "info_dict": [125, 126, 127, 146], "gymlikeenv": [125, 127, 410], "auto_register_info_dict": [125, 126, 127, 146], "multibinari": [125, 127], "multidiscret": [125, 127], "rag": [125, 127], "gym_conversion_exampl": [125, 127], "info_dict_read": [126, 146], "ignore_priv": 126, "baseinfodictread": 126, "tensordictprim": [126, 146, 245, 262, 266, 318, 412, 420], "succe": [126, 146], "underscor": 126, "primer": [126, 133, 188, 223, 245, 262, 266, 318, 420], "halfcheetah": [126, 146, 173, 212, 417, 436], "reward_ctrl": [126, 146], "reward_run": [126, 146], "x_posit": [126, 146], "x_veloc": [126, 146], "raise_if_clos": 126, "read_act": 126, "read_don": 126, "nonsens": 126, "fallback": 126, "read_ob": 126, "dictat": [126, 201, 307, 311, 341, 417, 432], "read_reward": 126, "hoc": [126, 146, 423], "dict_read": 126, "my_info_kei": 126, "some_env": 126, "vecenv": 127, "vectorenv": 127, "convert_actions_to_numpi": 127, "secur": 128, "habitat3": 128, "ai": [128, 433], "habitatrenderpick": 128, "isaacgym": [129, 130], "isaacgymwrapp": [129, 410], "isaacgymenv": [130, 410], "webpag": 130, "isaac": 130, "essenc": [130, 422], "instadeepai": [131, 132], "2306": [131, 132], "09884": [131, 132], "snake": [131, 132], "grid": [131, 132, 376], "bodi": [131, 132], "body_st": [131, 132], "fruit_posit": [131, 132], "col": [131, 132], "head_posit": [131, 132], "tail": [131, 132], "game2048": [131, 132], "maze": [131, 132], "cleaner": [131, 132], "cvrp": [131, 132], "multicvrp": [131, 132], "minesweep": [131, 132], "rubikscub": [131, 132], "knapsack": [131, 132], "sudoku": [131, 132], "tsp": [131, 132], "connector": [131, 132], "v2": [131, 132, 152, 153, 350, 365, 366, 367, 368, 370, 371, 372, 373, 420], "mmst": [131, 132], "graphcolor": [131, 132], "partli": [131, 132], "scrambl": [131, 132], "robotwarehous": [131, 132], "tetri": [131, 132], "binpack": [131, 132], "jobshop": [131, 132], "0x1fca91910": 131, "122": [131, 132, 437], "0x1ff9baee0": 131, "134": [131, 132], "0x1ff9ba7c0": 131, "172": [131, 132], "jit": 132, "eager": 132, "tdreset": [132, 239, 429], "whichev": 132, "drastic": [132, 146, 434], "histori": 133, "tailor": [133, 436], "cot": 133, "from_dataload": [133, 188], "token_kei": 133, "str2str": [133, 188], "str_kei": 133, "attention_kei": 133, "assign_reward": 133, "vocab_s": [133, 134], "no_stack": 133, "has_attent": 133, "assign_don": 133, "batchless": 133, "as_llm_data": 133, "llmdata": [133, 410], "dataloadingprim": [133, 223], "data_kei": [133, 188], "data_spec": [133, 188], "stack_method": [133, 188], "as_nested_tensor": [133, 188], "as_padded_tensor": [133, 188], "tokens_in": 133, "tokens_out": 133, "grpo": [133, 188], "overview": [134, 419, 421, 424, 430, 431, 436], "hashing_modul": 134, "text_output": 134, "decod": [134, 166, 277], "batch_decod": 134, "text_kei": 134, "gpt2token": 134, "make_tensordict": 134, "mo": [135, 136], "minecart": [135, 136], "mo_gym": [136, 201], "qualnam": 137, "neural": [137, 148, 149, 246, 247, 280, 282, 288, 310, 412, 418, 419, 420, 423, 430, 431, 432, 437], "group_map": [137, 138, 139, 144, 145, 148, 149, 156, 157, 158, 159, 161, 430], "constructiuon": [137, 148, 149], "premad": [137, 138, 139, 148, 149, 158, 159, 354], "all_in_one_group": [137, 144, 145, 161], "agent_0": [137, 148, 149, 156, 161, 220], "agent_1": [137, 148, 149, 156, 161, 220], "agent_2": [137, 148, 149, 156, 161], "agent_3": [137, 156], "one_group_per_ag": [137, 148, 149], "meltingpot": [138, 139], "2211": [138, 139], "13746": [138, 139], "melt": [138, 139], "pot": [138, 139], "novel": [138, 139, 424], "social": [138, 139], "familiar": [138, 139, 418, 431, 437], "unfamiliar": [138, 139], "broad": [138, 139], "cooper": [138, 139, 430, 431], "decept": [138, 139], "reciproc": [138, 139], "stubborn": [138, 139], "substrat": [138, 139], "ml_collect": 138, "config_dict": 138, "configdict": 138, "categorical_act": [138, 139, 144, 145, 148, 149, 152, 153, 156, 157, 158, 159], "marlgroupmaptyp": [138, 139, 144, 145, 148, 149, 156, 157, 158, 159, 161, 410, 430], "agent_nam": [138, 139, 158, 159, 161], "agent_names_to_indices_map": [138, 139, 158, 159], "env_torchrl": [138, 139], "commons_harvest__open": [138, 139], "rgb": [138, 139], "144": [138, 139], "192": [138, 139], "collective_reward": [138, 139], "ready_to_shoot": [138, 139], "88": [138, 139, 152, 153], "substrate_config": 139, "get_config": 139, "mp_env": 139, "build_from_config": 139, "default_player_rol": 139, "mymbenv": [140, 243, 269], "world_model": [140, 243, 269, 333], "hidden_observ": [140, 243, 269], "mlp": [140, 243, 246, 247, 249, 250, 251, 252, 258, 262, 266, 269, 273, 274, 299, 303, 318, 326, 328, 412, 418, 421, 423, 424, 427, 429, 433, 436], "worldmodelwrapp": [140, 243, 269], "activation_class": [140, 243, 246, 247, 249, 250, 251, 252, 257, 258, 267, 269, 272, 273, 418, 423, 430, 431, 436], "activate_last_lay": [140, 243, 252, 267, 269], "sail": [141, 142], "sg": [141, 142], "2206": [141, 142], "10558": [141, 142], "readthedoc": [141, 144, 145], "en": [141, 144, 145], "python_interfac": 141, "envpoolmixin": 142, "env_bas": 142, "task_id": 142, "env_typ": 142, "gym_reset_return_info": 142, "envpool_env": 142, "www": [143, 270, 271], "fetch_openml": 143, "adult_num": 143, "adult_onehot": 143, "mushroom_num": 143, "mushroom_onehot": 143, "covertyp": 143, "shuttl": 143, "magic": [143, 421, 422], "106": 143, "openspiel": [144, 145], "open_spiel": [144, 145], "game_str": 144, "return_st": [144, 145, 148, 149], "4672": [144, 145], "current_play": [144, 145], "674": 144, "2048": [144, 145], "add_nois": [144, 145], "amazon": [144, 145], "backgammon": [144, 145], "restor": [144, 145], "td_restor": [144, 145], "pyspiel": 145, "load_gam": 145, "new_initial_st": 145, "3009": 145, "my_env_fun": [146, 154], "custom_attribute_list": [146, 154], "custom_attribut": [146, 154], "custom_method_list": [146, 154], "custom_method": [146, 154], "deploi": [146, 154, 177, 421], "slight": [146, 154, 418], "share_individual_td": [146, 154], "shared_memori": [146, 154], "policy_proof": [146, 154], "ll": [146, 154, 260, 261, 264, 265, 417, 418, 419, 420, 422, 423, 424, 425, 427, 431, 437], "hidden": [146, 154, 179, 249, 257, 260, 261, 262, 264, 265, 266, 277, 278, 286, 287, 299, 300, 301, 302, 310, 313, 323, 338, 341, 412, 420, 429, 436], "serial_for_singl": [146, 154, 418], "circular": [146, 154, 417], "list_of_kwarg": [146, 154], "com_veloc": [146, 154], "head_height": [146, 154], "joint_angl": [146, 154], "torso_vert": [146, 154], "timeout": 146, "idl": 146, "batched_pipe_timeout": 146, "stringent": [146, 419, 430, 431], "inter": 146, "penv": [146, 228], "env_fix": 146, "influenc": 146, "myenv": [146, 177, 187, 191], "pipe": 146, "update_kwarg": [146, 154], "th": [147, 195, 232, 260, 264, 432], "thdot": [147, 432], "max_spe": [147, 432], "max_torqu": [147, 432], "gen_param": [147, 432], "gravit": [147, 432], "torqu": [147, 432], "pettingzoo": [148, 149, 430, 431], "pet": [148, 149], "zoo": [148, 149], "__": [148, 149], "aecenv": [148, 149], "dead": [148, 149], "done_on_ani": [148, 149, 430], "compulsori": [148, 149], "adversary_0": [148, 149], "adversari": [148, 149, 335, 430], "sisl": 148, "multiwalker_v9": 148, "aec": [148, 149], "n_piston": [148, 149], "pistonball_v6": [148, 149], "piston": [148, 149], "piston_0": [148, 149], "piston_1": [148, 149], "piston_20": [148, 149], "tictactoe_v3": [148, 149], "player": [148, 149, 155], "player_1": [148, 149], "player_2": [148, 149], "butterfli": 149, "parallel_env": [149, 417, 436, 437], "cube": 150, "roboh": 151, "expos": [151, 187, 191, 312, 418], "vikashplu": 151, "wiki": 151, "2310": 151, "06828": 151, "from_depth": 151, "smacv2": [152, 153], "starcraft": [152, 153], "challeng": [152, 153, 422, 432, 433], "10gen_terran": [152, 153], "10gen_zerg": [152, 153], "10gen_protoss": [152, 153], "3m": [152, 153], "8m": [152, 153], "25m": [152, 153], "5m_vs_6m": [152, 153], "8m_vs_9m": [152, 153], "10m_vs_11m": [152, 153], "27m_vs_30m": [152, 153], "mmm": [152, 153], "mmm2": [152, 153], "2s3z": [152, 153], "3s5z": [152, 153], "3s5z_vs_3s6z": [152, 153], "3s_vs_3z": [152, 153], "3s_vs_4z": [152, 153], "3s_vs_5z": [152, 153], "1c3s5z": [152, 153], "2m_vs_1z": [152, 153], "corridor": [152, 153], "6h_vs_8z": [152, 153], "2s_vs_1sc": [152, 153], "so_many_banel": [152, 153], "bane_vs_ban": [152, 153], "2c_vs_64zg": [152, 153], "old": [152, 153, 338, 437], "smac": [152, 153], "map_nam": [152, 153], "176": [152, 153], "battle_won": [152, 153], "dead_al": [152, 153], "dead_enemi": [152, 153], "episode_limit": [152, 153], "322": [152, 153], "procedur": [152, 153], "distribution_config": [152, 153], "n_unit": [152, 153], "n_enemi": [152, 153], "team_gen": [152, 153], "dist_typ": [152, 153], "weighted_team": [152, 153], "unit_typ": [152, 153], "marin": [152, 153], "maraud": [152, 153], "medivac": [152, 153], "exception_unit_typ": [152, 153], "start_posit": [152, 153], "surrounded_and_reflect": [152, 153], "map_x": [152, 153], "map_i": [152, 153], "capability_config": [152, 153], "131": [152, 153], "starcraft2env": 153, "tic": 155, "tac": 155, "toe": 155, "single_play": 155, "player1": 155, "desired_batch_s": 155, "player0": 155, "uniti": [156, 157], "ml": [156, 157], "technolog": [156, 157], "llapi": [156, 157], "mlagents_env": [156, 157], "unityenviron": [156, 157], "file_nam": 156, "registered_nam": 156, "nor": 156, "localhost": 156, "connect": 156, "3dball": 156, "group_0": 156, "vectorsensor_size8": 156, "continuous_act": [156, 158, 159, 374, 430, 431], "agent_10": 156, "agent_11": 156, "agent_4": 156, "agent_5": 156, "agent_6": 156, "agent_7": 156, "agent_8": 156, "agent_9": 156, "group_reward": 156, "proroklab": [158, 159], "vectorizedmultiagentsimul": [158, 159], "2207": [158, 159], "03530": [158, 159], "basescenario": 158, "defaultt": 158, "chosen": [158, 159, 222, 223, 284, 285, 293, 309, 376, 412, 426], "sparsiti": 158, "unbatched_action_spec": [158, 159], "unbatched_observation_spec": [158, 159], "unbatched_reward_spec": [158, 159], "het_spec": [158, 159], "het_specs_map": [158, 159], "flock": [158, 159, 374], "agent_collision_rew": [158, 159], "agent_distance_rew": [158, 159], "ca": 161, "environment4": 161, "get_group_map": 161, "sumbodul": 164, "unsqueeze_null_shap": 165, "dynamic_shap": 165, "model_bas": [166, 167, 243, 269], "model_based_env": [166, 332], "dreamerenv": [166, 332, 410], "model_based_env_ev": 166, "spec_typ": 168, "convert_specnam": 168, "remap_state_to_observ": 168, "spectyp": 168, "unus": 168, "probabilistictdmodul": [169, 267, 307, 311, 355, 389], "keep_oth": [171, 432], "exclude_reward": 171, "exclude_don": 171, "next_": 171, "write_full_fals": 172, "_terminated_or_trunc": 172, "num_interv": 173, "out_action_kei": 173, "samplingstrategi": 173, "optino": 173, "intenum": 173, "interv": [173, 225, 375, 376, 386, 396, 418, 432], "action_disc": 173, "masker": 174, "maskedenv": 174, "ones_lik": 174, "scatter": 174, "transformthatmeasuresbyt": [174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239], "bytes_in_td": [174, 176, 177, 179, 180, 181, 184, 185, 189, 192, 193, 194, 196, 199, 200, 207, 209, 210, 211, 213, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 233, 234, 236, 237, 239], "fill_float": 176, "fill_int": 176, "fill_bool": 176, "someenvclass": 176, "autoresetenv": 176, "fooenv": 176, "sign": [176, 218, 356, 430], "envtyp": 176, "reshape_fn": [177, 421], "reset_func": 177, "env_kwarg": [177, 406, 407, 417], "accompani": [177, 221], "tensordict_batch_s": 177, "tensordict_reset": [177, 432], "transform_env_batch_s": [177, 184, 229, 239], "untouch": [177, 184, 187, 189, 193, 200, 202, 210, 211, 217, 221, 227, 229, 231, 239], "transform_full_done_spec": [177, 184, 187, 189, 193, 200, 202, 210, 211, 217, 221, 227, 229, 231, 239], "biner": 178, "burn_in": 179, "burn": 179, "burnt": 179, "gru_modul": [179, 262, 318], "input_s": [179, 223, 260, 261, 262, 264, 265, 266, 318, 420, 421], "hidden_s": [179, 223, 260, 261, 262, 264, 265, 266, 318, 420, 421], "default_recurrent_mod": [179, 262, 266], "burn_in_transform": 179, "gru": [179, 223, 261, 262, 318, 421], "num_lay": [179, 260, 262, 264, 266, 277, 278, 318, 421], "is_init": [179, 199, 262, 266, 283, 306, 318, 420, 421], "86": 179, "3008": 179, "0344": 179, "padding_valu": [180, 270, 271], "as_invers": 180, "movement": 180, "1312": 180, "5602": 180, "consumpt": [180, 410], "pictur": 180, "pixels_trsf": [180, 434], "grayscal": [180, 418, 420, 421, 434, 437], "data_exclud": [180, 434], "make_rb_transform_and_sampl": 180, "sampler_kwarg": 180, "redund": [180, 420], "del_kei": [181, 220, 233, 429, 432], "unsqueeze_if_oor": 181, "observation_posit": 181, "observation_veloc": 181, "delet": [181, 220, 383], "crop": [182, 209, 376], "center": [182, 282, 376], "width": [182, 186, 212], "height": [182, 186, 212], "squar": [182, 186, 263, 291, 292, 376], "scalar": [183, 214, 241, 250, 252, 259, 275, 276, 283, 317, 321, 322, 323, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 354, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 412, 418, 424, 432], "permit": [183, 195, 220, 232, 321, 323, 338, 341, 343], "rewardsc": [184, 230, 417, 418, 420], "rewardclip": 184, "transformed_env": [184, 230, 422], "transform_env_devic": [184, 189, 229, 239], "cond": 185, "met": [185, 320, 430, 432], "altogeth": 185, "exectu": 185, "palliat": [185, 423], "step_count_kei": [185, 221], "inner_count": 185, "middle_env": 185, "middle_count": 185, "auto_unwrap": [185, 230, 384], "9670": 185, "2546": 185, "9669": 185, "9802": 185, "1981": 185, "1601": 185, "9926": 185, "1214": 185, "5556": 185, "9994": 185, "7622": 185, "9984": 185, "0561": 185, "7933": 185, "9895": 185, "1445": 185, "7779": 185, "dtype_in": 187, "dtype_out": 187, "scan": [187, 191, 312, 313], "resp": [187, 191], "not_transform": [187, 191], "auto_batch_s": 188, "maybe_dense_stack": 188, "endless_dataload": 188, "llmenv": [188, 410], "set_capture_non_tensor_stack": 188, "dummydataload": 188, "generate_random_str": 188, "ascii_lowercas": 188, "__iter__": 188, "__next__": 188, "zxwvupirska": 188, "stringa": 188, "zxwvupirsk": 188, "roll": 188, "init_st": 188, "nngcmflsana": 188, "vrrbnhzpmga": 188, "nngcmflsan": 188, "vrrb": 188, "dummytensordataload": 188, "generate_random_tensor": 188, "pad_tensor": 188, "padding_length": 188, "orig_devic": 189, "unspecifi": 189, "transform_done_spec": [189, 220, 229, 231, 239], "num_actions_effect": 190, "max_act": 190, "include_forward": 190, "num_act": [190, 247, 330, 421, 423], "action_out": 190, "eol_kei": 192, "lives_kei": 192, "eol_attribut": 192, "breakout": 192, "210": [192, 206], "160": [192, 206], "eol_transform": 192, "eol": 192, "dqnloss": [192, 321, 322, 324, 325, 328, 330, 331, 332, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 354, 401, 410, 413, 418, 420, 421, 427], "register_kei": 192, "loss_or_advantag": 192, "lossmodul": [192, 394, 403, 404, 410, 413], "valueestimatorbas": [192, 339, 410], "finit": [194, 282, 423, 434], "first_dim": 195, "last_dim": 195, "allow_positive_dim": [195, 220, 232], "frameskip": 195, "repeatedli": [196, 419, 431], "hash_fn": 198, "use_raw_nontensor": [198, 227, 231], "repertoir": 198, "reproducible_hash": 198, "unarytransform": 198, "observation_str": 198, "tobyt": [198, 231], "observation_hash": 198, "x08": 198, "x8b": 198, "xbexav": 198, "xbf": 198, "x00": 198, "xee": 198, "xb5": 198, "x17": 198, "x8f": 198, "xbe": [198, 231], "x88": 198, "xccu": 198, "xc0vr": 198, "get_input_from_hash": 198, "hash_tensor": 198, "init_kei": [199, 306], "tracker": 199, "pi_curr": 200, "pi_0": 200, "overfit": 200, "probabilist": [200, 307, 321, 341, 410, 419, 436], "get_dist": [200, 311, 312], "normalparamextractor": [200, 299, 300, 301, 307, 313, 321, 322, 324, 330, 337, 341, 342, 343, 344, 346, 347, 412, 419, 423, 431, 436], "probabilisticactor": [200, 299, 300, 301, 302, 321, 322, 324, 327, 329, 330, 337, 340, 341, 342, 343, 344, 346, 347, 412, 417, 419, 423, 430, 431], "tanhnorm": [200, 299, 300, 301, 307, 313, 321, 322, 324, 337, 341, 342, 343, 344, 346, 347, 410, 419, 431, 436], "return_log_prob": [200, 299, 300, 301, 307, 311, 313, 343, 412, 419, 423, 430, 431, 436], "apply_": 200, "copy_": [200, 417], "formula": [200, 263, 291, 292, 321, 323, 338, 341, 413, 419], "mogymwrapp": [201, 410], "mo_env": 201, "sea": 201, "treasur": 201, "so_env": 201, "stack_reward": 202, "stack_observ": 202, "auto_batch_size_": 202, "macro": [202, 306], "noop": 203, "trial": 203, "standard_norm": [204, 215, 237, 417, 418, 420], "affin": [204, 215, 237], "layer": [204, 237, 242, 246, 247, 249, 250, 255, 257, 260, 261, 262, 264, 265, 266, 267, 272, 273, 275, 276, 277, 278, 288, 289, 296, 305, 314, 412, 418, 419, 420, 421, 423, 430, 433], "epsilon": [204, 241, 259, 283, 345, 392, 418, 419, 420, 423], "recover": 204, "set_default_tensor_typ": 204, "doubletensor": 204, "isclos": 204, "next_ob": [204, 356, 357, 358, 359, 436], "init_stat": [204, 417, 418, 419, 420], "3752e": 204, "5087e": 204, "9294e": 204, "9636": 204, "5608": 204, "6408": 204, "num_it": [204, 418, 419], "reduce_dim": [204, 417, 418, 419, 420], "cat_dim": [204, 417, 418, 419, 420], "keep_dim": [204, 306, 418, 420], "statist": [204, 237, 242, 343, 408, 417, 418, 419, 437], "gaussian": [204, 223, 241, 243, 269, 275, 276, 281, 419, 421, 430], "empir": [204, 243, 269, 307, 311, 417, 419, 431], "3d": [204, 246], "reorder": 206, "in_keys_in": [206, 232], "channel": [206, 226, 272, 277, 278, 418], "r3m": [208, 433], "resnet": [208, 233, 235], "ego4d": [208, 233, 235], "univers": [208, 233, 235, 422], "suraj": [208, 233], "nair": [208, 233], "aravind": [208, 233], "rajeswaran": [208, 233], "vikash": [208, 233, 235], "kumar": [208, 233, 235], "chelsea": [208, 233], "finn": [208, 233], "abhinav": [208, 233], "gupta": [208, 233], "2203": [208, 233, 269, 433], "12601": [208, 233, 433], "_init": [208, 233, 417], "resnet50": [208, 235, 433], "model_nam": [208, 233, 235, 379], "resnet34": 208, "resnet18": 208, "r3m_vec": [208, 433], "stack_imag": [208, 235], "tread": [208, 235], "hub": [208, 235, 422], "resnet50_weight": [208, 235], "imagenet1k_v1": [208, 235], "download_path": [208, 235], "tensor_pixels_kei": [208, 235], "sub_seq_len": 209, "sample_dim": [209, 417], "hesit": 209, "robust": [209, 242], "mix": [209, 284, 293, 354, 417, 430, 431], "improp": 209, "dummyenv": 210, "another_oth": 210, "other_reward": 210, "create_copi": 211, "stuff": [211, 425], "newnam": 211, "r2g": 213, "reward_to_go": 213, "bernoulli_": 213, "9010": 213, "9404": [213, 362], "9701": [213, 362], "9900": [213, 362], "0000": [213, 224, 225, 259, 282, 314, 362], "clamp_min": 214, "clamp_max": 214, "clip_min": 214, "clip_max": 214, "episode_": 216, "reward1": 216, "reward2": 216, "episode_reward": [216, 430, 431], "keep_reward": 217, "keep_don": 217, "logical_or": 218, "in_key_inv": 220, "unstack": 220, "update_don": 221, "disjunct": 221, "recognis": 221, "target_return": 222, "default_valu": [223, 318], "expand_spec": 223, "single_default_valu": 223, "call_before_env_reset": 223, "unit": [223, 243, 257, 260, 261, 277, 278, 286, 287, 419], "scala": 223, "mykei": 223, "__unless": 223, "exists__": 223, "get_primers_from_modul": [223, 245, 262, 266, 410], "recurrent_st": [223, 262, 266, 318, 420], "pool": 224, "10th": 224, "0216": 224, "1149": 224, "1990": 224, "2749": 224, "3281": 224, "9290": 224, "3702": 224, "8978": 224, "time_kei": 225, "elaps": [225, 426], "monitor": [225, 422], "expend": 225, "_polici": 225, "time_reset": 225, "time_polici": 225, "time_step": [225, 265, 306], "0882": 225, "0002": 225, "5797e": 225, "6289e": 225, "7990e": 225, "0824e": 225, "0837e": 225, "6056e": 225, "2016e": 225, "1062e": 225, "7009e": 225, "from_int": 226, "shape_toler": 226, "ri": 226, "pretrainedtokenizerbas": 227, "additional_token": 227, "skip_special_token": 227, "add_special_token": 227, "bert": 227, "uncas": 227, "traj_count": 228, "traj": 228, "countingenv": 228, "mocking_class": 228, "make_env_c0": 228, "make_env_c1": 228, "set_contain": 229, "reset_par": 229, "smoothli": [230, 242], "add_1": 230, "cache_spec": 230, "set_missing_toler": 230, "inv_fn": 231, "unari": 231, "durin": 231, "ommit": 231, "observation_trsf": 231, "xbc": 231, "x7f": 231, "x859": 231, "x81": 231, "x9a": 231, "xbd": 231, "xb8t8": 231, "test_input_spec": 231, "test_output_spec": 231, "danger": 232, "vc1": 233, "vc1_vec": 233, "untrain": 233, "make_noload_model": 233, "vip": [234, 235, 433], "implicit": [235, 329, 337, 434], "jason": 235, "ma": 235, "shagun": 235, "sodhani": 235, "dinesh": 235, "jayaraman": 235, "osbert": 235, "bastani": 235, "ami": 235, "zhang": 235, "vip_vec": 235, "final_nam": 236, "sb3": 236, "terminal_obs_read": 236, "truli": [236, 436], "shared_td": 237, "decai": [237, 241, 259, 345, 392, 417, 418, 420, 437], "9999": 237, "0001": [237, 257], "to_observation_norm": 237, "frozen_copi": 237, "race": 237, "underflow": [237, 392], "build_td_for_shared_vecnorm": 237, "memmori": 237, "queue": [237, 434, 436], "td_share": 237, "v": [237, 260, 261, 264, 265, 299, 329, 337, 344, 417, 418], "unfreez": 237, "observationnorm": [237, 408, 417, 418, 419, 420, 436], "train_env": 237, "eval_env": 237, "state_dim": [238, 248, 253, 281, 286, 287, 302], "action_dim": [238, 248, 249, 251, 253, 281, 302, 417, 429], "gsde": [238, 342, 408], "gsdemodul": 238, "rb_transform": 239, "resist": 239, "insensit": 239, "sensit": [239, 418, 420], "_orig": 239, "95": [239, 269, 349, 419, 420], "window": [239, 306, 430, 434, 436], "module_nam": [240, 339], "from_vers": 240, "to_vers": 240, "class_method": 240, "vs": [240, 262, 266], "import_modul": 240, "get_class_that_defined_method": 240, "module_set": 240, "setters_dict": 240, "setter": 240, "setter_dict": 240, "po": 241, "sigma_init": [241, 430], "sigma_end": [241, 430], "annealing_num_step": [241, 259, 283, 417, 418, 420, 421, 423, 427, 430], "sigma": [241, 260, 261, 263, 264, 265, 283, 291, 292, 419, 430], "omiss": [241, 259, 283], "momentum": 242, "max_r": 242, "max_d": 242, "warmup_step": 242, "batchrenorm": 242, "1702": 242, "03275": 242, "corenet": 242, "enhanc": 242, "warmup": 242, "phase": [242, 244, 431, 434], "outlier": 242, "period": 242, "varianc": [242, 243, 244, 263, 291, 292, 413, 417, 419, 431], "warm": 242, "renorm": 242, "entropi": [243, 279, 321, 322, 323, 324, 329, 330, 337, 338, 340, 341, 342, 344, 346, 347, 431], "botev": 243, "2013": 243, "cem": 243, "plan": [243, 268, 269], "k": [243, 245, 260, 261, 264, 265], "maximis": [243, 249, 251, 269, 418, 419, 431], "modelbasedenv": [243, 269], "planning_horizon": [243, 269], "optim_step": [243, 269, 421, 427], "mpc": [243, 268, 269], "num_candid": [243, 269], "candid": [243, 269], "top_k": [243, 269], "modelbasedenvbas": [243, 268, 269, 410], "safemodul": [243, 268, 299, 301, 311, 321, 322, 324, 329, 330, 337, 341, 342, 343, 344, 346, 347, 399, 400, 404, 410, 436], "hausknecht": 244, "wagen": 244, "reus": [244, 249, 383], "consistentdropoutmodul": [244, 412], "capit": 244, "themselv": [244, 418], "conceptu": 244, "devianc": 244, "set_exploration_typ": [244, 339, 389, 410, 412, 419, 420, 421, 423, 430, 436], "_main_async_collector": 244, "asyncdatacollector": [244, 410], "ditto": 244, "consistentdropout": 245, "input_shap": 245, "batcht": 245, "make_tensordict_prim": [245, 262, 266, 420], "input_dtyp": 245, "get_default_dtyp": [245, 392], "mask_6127171760": 245, "env0": [245, 437], "num_cel": [246, 247, 249, 250, 251, 252, 257, 258, 262, 266, 267, 272, 273, 299, 318, 418, 419, 420, 421, 423, 424, 427, 430, 431, 436], "elu": [246, 247, 249, 250, 251, 252, 257, 258, 272, 418, 436], "activation_kwarg": [246, 247, 267], "norm_class": [246, 247, 249, 250, 267], "norm_kwarg": [246, 247, 267], "bias_last_lay": [246, 247, 249, 250, 251, 252, 258, 267], "aggregator_class": [246, 247, 249, 250, 418, 420, 436], "squashdim": [246, 247, 249, 258, 272, 436], "aggregator_kwarg": [246, 247, 249, 250, 418, 420], "squeeze_output": [246, 247, 249, 250, 418, 420], "convolut": [246, 247, 249, 250, 272, 288, 421, 423], "cell": [246, 247, 260, 261, 262, 264, 265, 266, 267, 272, 273, 419, 421, 422, 423, 424, 425, 426, 427], "kernel": [246, 247, 272], "cnet": [246, 247], "conv3d": 246, "rectangular": [246, 247], "lazyconv2d": [247, 249, 250, 258, 272], "default_atari_dqn": [247, 421], "semin": 247, "transformer_config": [248, 281, 302], "decisiontransform": [248, 281], "dtconfig": [248, 253, 281], "2202": [248, 253, 340], "05607": [248, 253, 340], "return_to_go": [248, 253, 281, 302], "conv_net_kwarg": [249, 250], "mlp_net_kwarg": [249, 250, 251], "use_avg_pool": [249, 250], "WITH": [249, 250, 251, 252, 283, 345], "1509": [249, 250, 251, 252, 269, 283, 326, 336, 345], "02971": [249, 250, 251, 252, 283, 345], "convnet": [249, 250, 258, 272, 420, 421, 423, 436], "ndims_in": 249, "avgpool": [249, 250], "lazylinear": [249, 250, 251, 252, 258, 267, 412, 419, 423, 432, 433], "2304": 249, "adaptiveavgpool2d": [250, 418, 420], "output_s": [250, 418, 420], "squeeze2dlay": 250, "400": [251, 252, 431], "mlp_net_kwargs_net1": 252, "mlp_net_kwargs_net2": 252, "mlp1": 252, "mlp2": 252, "desdescrib": 253, "n_embd": 253, "n_layer": [253, 260, 264], "n_head": 253, "n_inner": 253, "n_posit": 253, "resid_pdrop": 253, "attn_pdrop": 253, "gpt2config": 253, "atol": [254, 290], "rtol": [254, 290], "batch_shap": [254, 279, 290], "event_shap": [254, 290], "absolut": [254, 290, 417], "_instanc": 254, "densiti": [254, 270, 271, 279, 292], "mass": [254, 270, 271, 279, 292, 432], "rsampl": [254, 271, 279, 311], "sample_shap": [254, 270, 271, 279], "softmax": [255, 271, 279, 303, 304], "var_num": [256, 285, 303, 304, 309], "action_value_kei": [256, 285, 303, 304, 308, 309, 324, 339, 354], "action_mask_kei": [256, 259, 285, 303, 304, 308, 309], "1707": [256, 304, 331, 341], "06887": [256, 304, 331], "mult": [256, 273, 285, 303, 304, 308, 309], "tensordict_modul": [256, 260, 261, 264, 265, 285, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 324, 325, 329, 330, 337, 341, 342, 343, 344, 346, 347, 412], "nbin": [256, 303, 412], "customdistributionalqv": 256, "log_softmax": [256, 303], "qvalue_actor": [256, 285, 303, 308, 412], "to_modul": [256, 310, 313, 417, 436], "std_bia": 257, "std_min_val": 257, "belief": [257, 277, 286, 287], "1912": [257, 332, 333, 334], "01603": [257, 332, 333, 334], "softplu": [257, 317, 319, 320], "out_features_valu": 258, "cnn_kwarg": [258, 418], "mlp_kwarg": [258, 418], "duel": 258, "cnn": [258, 272, 418, 421, 423, 436], "06581": 258, "512": 258, "greedi": [259, 285, 304, 309, 418, 420, 421, 423], "eps_init": [259, 283, 418, 420, 421, 423, 427], "eps_end": [259, 283, 418], "explorative_polici": [259, 283], "9055": 259, "9277": 259, "6295": 259, "2532": 259, "grad_fn": [259, 298, 311], "addbackward0": 259, "batch_first": [260, 262, 264, 266, 420], "bidirect": [260, 264, 420], "cudnn": [260, 261, 262, 264, 265, 266, 420, 421], "rnn": [260, 261, 262, 264, 265, 266, 297, 330, 344, 420, 421, 423], "device_count": [260, 261, 264, 265, 437], "n_in": [260, 261, 264, 265], "n_out": [260, 261, 264, 265], "h0": [260, 261, 264, 265], "h1": [260, 261, 264, 265], "vectoris": [260, 261, 264, 265], "call_gru": [260, 261], "h_out": [260, 261, 264, 265], "batched_cal": [260, 261, 264, 265], "gate": [260, 261, 264], "r_t": 260, "w_": [260, 261, 264, 265], "ir": [260, 261], "x_t": [260, 264], "b_": [260, 261, 264, 265], "hr": [260, 261, 264], "h_": [260, 261, 264], "z_t": 260, "iz": [260, 261], "hz": [260, 261], "n_t": 260, "odot": [260, 261, 264, 265], "hn": [260, 261, 264], "h_t": [260, 264], "sigmoid": [260, 261, 264, 265], "hadamard": [260, 261, 264, 265], "multilay": [260, 264], "_t": [260, 264, 431, 432], "ge": [260, 264], "bernoulli": [260, 264], "b_ih": [260, 261, 264, 265, 266], "b_hh": [260, 261, 264, 265, 266], "h_0": [260, 264, 265], "pack_padded_sequ": [260, 264], "pack_sequ": [260, 264], "num": [260, 264, 427], "_layer": [260, 264], "_size": [260, 261, 264, 265], "h_n": [260, 264], "packedsequ": [260, 264], "weight_ih_l": [260, 264], "learnabl": [260, 261, 264, 265], "w_ir": 260, "w_iz": 260, "w_in": 260, "num_direct": [260, 264], "weight_hh_l": [260, 264], "w_hr": 260, "w_hz": 260, "w_hn": 260, "bias_ih_l": [260, 264], "b_ir": 260, "b_iz": 260, "b_in": 260, "bias_hh_l": [260, 264], "b_hr": 260, "b_hz": 260, "b_hn": 260, "mathcal": [260, 261, 264, 265], "sqrt": [260, 261, 264, 265, 283], "frac": [260, 261, 264, 265, 419], "seq_len": [260, 264], "subtli": 260, "matrix": [260, 264, 275, 276], "hx": [260, 261, 264, 265], "lstmcell": [261, 266, 421], "gru_cel": 261, "weight_ih": [261, 265], "weight_hh": [261, 265], "bias_ih": [261, 265], "bias_hh": [261, 265], "rocm": [261, 265], "embedd": [262, 266], "grucel": [262, 310], "python_bas": [262, 266], "custom_kei": [262, 266], "hasn": [262, 266], "set_recurrent_mod": [262, 266, 420], "recurrent_mod": [262, 266, 297], "rs": [262, 417], "gru_module_train": 262, "policy_train": [262, 266], "traj_td": [262, 266], "make_cudnn_bas": [262, 266], "make_python_bas": [262, 266, 421], "supplementari": [262, 266, 419, 437], "That": [262, 266, 419, 430], "dealt": [262, 266], "poorli": [262, 266], "meth": [262, 266, 339, 432], "data_collector": [262, 266, 418], "policy_infer": [262, 266], "td_inf": [262, 266], "upscal": [263, 291, 292], "tanh_loc": [263, 291, 292], "event_dim": [263, 290, 291], "poor": [263, 291, 292], "explos": [263, 291, 292], "proj_siz": 264, "c0": [264, 265], "c1": [264, 265], "call_lstm": [264, 265], "c_out": [264, 265], "i_t": 264, "ii": [264, 265], "hi": [264, 265], "f_t": 264, "hf": [264, 265], "g_t": 264, "ig": [264, 265], "hg": [264, 265], "o_t": 264, "ho": [264, 265], "c_t": 264, "c_": 264, "1402": 264, "1128": 264, "c_0": [264, 265], "proj": 264, "c_n": 264, "w_ii": 264, "w_if": 264, "w_ig": 264, "w_io": 264, "w_hi": 264, "w_hf": 264, "w_hg": 264, "w_ho": 264, "b_ii": 264, "b_if": 264, "b_ig": 264, "b_io": 264, "b_hi": 264, "b_hf": 264, "b_hg": 264, "b_ho": 264, "weight_hr_l": 264, "_revers": 264, "analog": [264, 423], "cn": 264, "lstm_cell": 265, "h_1": 265, "c_1": 265, "cx": 265, "recurrent_state_h": 266, "recurrent_state_c": 266, "triplet": [266, 308, 309], "lstm_modul": 266, "rs_h": 266, "rs_c": 266, "hidden0": [266, 421], "hidden1": [266, 421], "single_bias_last_lay": 267, "layer_class": 267, "layer_kwarg": 267, "perceptron": [267, 423], "noisylinear": [267, 275, 410, 418], "noisylazylinear": [267, 410], "mpcplanner": 268, "tensordict_out": [268, 437], "mppi": 269, "covari": 269, "william": [269, 343], "aldrich": 269, "theodor": 269, "01149": 269, "hansen": 269, "wang": 269, "su": 269, "04955": 269, "valueoper": [269, 299, 300, 301, 321, 322, 323, 324, 325, 330, 337, 338, 341, 342, 343, 344, 346, 347, 404, 412, 417, 419, 424], "tdlambdaestim": [269, 410, 417], "value_net": [269, 326, 328, 343, 356, 357, 358, 359, 419, 421, 423, 424, 427], "adv": 269, "lmbda": [269, 349, 356, 359, 361, 367, 368, 369, 372, 373, 413, 417, 419, 431], "value_network": [269, 325, 326, 328, 329, 331, 337, 344, 356, 357, 358, 359, 413, 417, 419, 421, 424, 427, 430], "temperatur": [269, 322, 329, 337], "neg_inf": [270, 271], "inf": [270, 271], "api_doc": [270, 271], "tf_agent": [270, 271], "unnorm": [270, 271, 279], "sparse_mask": [270, 271], "dens": [270, 271], "0831": [270, 271], "1203": [270, 271], "0928": [270, 271], "1972": [270, 271], "grad_method": [271, 279], "reparamgradientstrategi": [271, 279], "passthrough": [271, 279], "relaxedonehot": [271, 279], "sample_non_valid": 271, "zeros_lik": [271, 432], "share_param": [272, 273, 274, 430, 431], "use_td_param": [272, 273, 274], "get_stateful_net": [272, 273, 274, 339, 412, 413], "from_stateful_net": [272, 273, 274, 339, 413], "homogen": [272, 273, 430, 431], "tensordictparam": [272, 273, 311], "_empty_net": [272, 273], "roughli": [272, 273, 436], "agent_network": [272, 273], "modulelist": [272, 273], "2592": 272, "decentr": 272, "n_agent_input": [273, 274, 430, 431], "n_agent_output": [273, 274, 430, 431], "toech": 273, "centalis": 273, "shown": [273, 412, 421, 429, 430, 431, 434], "agent_dim": 274, "vmap_random": [274, 339, 413], "stateful_net": [274, 339], "Such": [274, 339], "multiagentmlp": [274, 430, 431], "snet": 274, "hasattr": [274, 417], "kaiming_normal_": 274, "std_init": [275, 276], "initialize_paramet": 275, "isol": [275, 339, 421], "1706": [276, 293], "10295v3": 276, "induc": [276, 311], "aid": 276, "1803": [277, 278, 284], "10122": [277, 278], "rnn_hidden": 277, "latent": 278, "ordin": [280, 410], "parametris": [280, 282], "inres": 281, "mu": [281, 283, 419], "impos": [282, 412], "proxim": [282, 341, 419, 431], "atom": 282, "tang": 282, "agraw": 282, "2020": 282, "1901": 282, "10500": 282, "discretis": 282, "num_atom": 282, "num_sampl": 282, "middl": 282, "adam": [282, 291, 417, 418, 419, 420, 421, 424, 427, 430, 431, 432], "lr": [282, 417, 418, 419, 420, 427, 430, 431, 432], "optimis": [282, 430, 431], "minimis": 282, "penalis": 282, "0308": 282, "1586": 282, "4727": 282, "2260": 282, "1120": 282, "histogram": 282, "return_typ": 282, "hist": [282, 434], "158": 282, "478": 282, "228": 282, "112": 282, "bin_edg": 282, "8000": 282, "6000": 282, "4000": 282, "ornstein": [283, 417, 421], "uhlenbeck": [283, 417, 421], "ou": [283, 417], "correl": 283, "noise_t": 283, "noise_": 283, "theta": [283, 419, 432], "sigma_t": 283, "sigma_": 283, "anneal": [283, 418, 423, 430], "ou_prev_nois": 283, "ou_step": 283, "x0": 283, "sigma_min": 283, "n_steps_ann": 283, "is_init_kei": 283, "_ou_prev_nois": 283, "_ou_step": 283, "state_shap": [284, 354], "mixing_embed_dim": [284, 354], "qmix": [284, 430, 431], "mixer": [284, 293, 354], "monoton": 284, "hyper": 284, "11485": 284, "qmixerloss": [284, 293], "qmix_vdn": [284, 293], "vdn": [284, 293], "hidden_dim": [286, 287], "scale_lb": [286, 287], "posterior": [286, 333], "rssm": [286, 287, 333], "1811": [286, 287], "04551": [286, 287], "obs_embed": 286, "rnn_hidden_dim": 287, "dream": 287, "safe_tanh": 291, "tanhtransform": 291, "overflow": [291, 298, 303, 304, 307, 308, 309, 310, 311], "get_mod": [291, 311], "decomposit": 293, "05296": 293, "hide": [294, 419, 430, 431], "satisfi": [294, 412], "vmap_dim": 294, "lam": 294, "sample_in": 294, "sample_in_td": 294, "vm": 294, "translat": [298, 307], "character": [298, 303, 307, 308, 310, 434], "td_modul": [298, 299, 300, 301, 307, 310, 311, 313, 315, 423, 436], "3635": 298, "0340": 298, "1476": 298, "3911": 298, "1664": 298, "5455": 298, "2247": 298, "4583": 298, "2916": 298, "2160": 298, "5337": 298, "5193": 298, "addmmbackward0": 298, "actorvalueoper": [299, 323, 338, 341, 412, 423], "get_policy_oper": [299, 300, 301, 323, 338, 341, 412], "standalon": [299, 300, 301, 421, 423], "tdmodul": [299, 300, 301, 404], "get_critic_oper": 299, "common_oper": [299, 301], "policy_oper": [299, 300, 301], "value_oper": [299, 300, 301], "module_hidden": [299, 301], "td_module_hidden": [299, 301], "module_act": [299, 301], "td_module_act": [299, 300, 301], "module_valu": [299, 300, 301], "td_module_valu": [299, 300, 301], "state_action_valu": [299, 315, 322, 324, 329, 337, 344, 355, 404, 412, 417, 430, 436], "td_clone": [299, 300, 301], "tensordictmodulewrapp": [299, 399, 400, 404], "get_policy_head": [299, 300, 301], "safesequenti": [299, 300, 301, 354], "head": [299, 301, 311, 318, 323, 338, 341, 410], "get_value_head": [299, 300, 301], "get_value_oper": [299, 300, 301, 323, 338, 341], "action_modul": 300, "actorcriticoper": [301, 412, 423], "actorcriticwrapp": [301, 412, 417], "inferec": 302, "set_tensor_kei": 302, "dt_inference_wrapp": 302, "baz": 302, "inference_context": 302, "obs_dim": 302, "tanhdelta": [302, 410, 417, 430], "dtactor": 302, "actor_modul": [302, 436], "dist_class": 302, "dist_kwarg": 302, "distribution_kwarg": [302, 307, 311, 419, 430, 431], "inference_actor": 302, "sequence_length": 302, "mask_context": 302, "out_act": 302, "qvaluemodul": [303, 308, 354, 420, 421, 423, 427], "distributionaldqnnet": 303, "make_log_softmax": 303, "my_action_valu": [304, 309], "chanc": 304, "lmheadmodel": 305, "actor_head": [305, 323, 338, 341], "base_model": 305, "lm_head": 305, "lookahead": 306, "reshape_cat": 306, "actor_bas": 306, "obs_cat": 306, "obs_cat_reshap": 306, "action_orig": 306, "multistepenvwrapp": 306, "alter": [306, 339, 412], "ego": 306, "default_interaction_typ": [307, 311, 423], "interaction_typ": [307, 311], "datacollectorbas": [307, 311, 396, 399, 400, 404, 410], "set_interaction_typ": [307, 311], "compositedistribut": [307, 311, 321, 341, 413, 423], "distribution_map": [307, 311], "name_map": [307, 311], "cache_dist": [307, 311], "n_empirical_estim": [307, 311], "compound": [307, 423], "chose": 309, "functionalmodul": 310, "functionalmodulewithbuff": 310, "td_fmodul": 310, "td_function": 310, "td_state": 310, "params_repeat": 310, "td_vmap": [310, 313], "random_sampl": [310, 311], "suppli": 311, "paliat": 311, "get_median": 311, "get_mean": 311, "transfer": 311, "log_prob_kei": [311, 413], "sample_key_nam": 311, "_log_prob": 311, "composite_lp_aggreg": 311, "clampbackward0": 311, "clamp": [311, 314, 333, 394, 413, 430, 432], "anihil": 311, "probabilistictensordictsequenti": [312, 321, 323, 338, 341, 343, 399, 400, 413, 436], "partial_toler": [312, 313, 429], "AND": [312, 313, 324], "tensordictsequ": 313, "safeprobabilisticmodul": [313, 412], "spec1": 313, "net1": 313, "module1": 313, "td_module1": 313, "spec2": 313, "module2": 313, "td_module2": 313, "boundari": [314, 419, 421, 430, 431], "resolut": 314, "9944": 314, "9991": 314, "3020": 314, "2299": 314, "5418": 314, "2989": 314, "6849": 314, "3169": 314, "2690": 314, "9649": 314, "5686": 314, "8602": 314, "0315": 314, "8455": 314, "6027": 314, "4746": 314, "7843": 314, "7782": 314, "2111": 314, "5115": 314, "4687": 314, "5760": 314, "custommodul": 315, "imaginari": 316, "imagin": 316, "transition_model": 316, "get_reward_oper": 316, "get_transition_model_oper": 316, "min_val": [317, 320], "_bia": 317, "surject": 320, "expln": 320, "biased_softplu": [320, 410], "biased_softplus_": 320, "syntax": [320, 417], "add_custom_map": 320, "1602": 321, "01783v2": 321, "actor_network": [321, 322, 323, 324, 325, 327, 329, 330, 337, 338, 340, 341, 342, 343, 344, 346, 347, 413, 417, 419, 424, 430, 431], "critic_network": [321, 323, 338, 341, 343, 419, 431], "entropy_bonu": [321, 323, 338, 341, 419], "favour": [321, 323, 338, 341], "samples_mc_entropi": [321, 323, 338, 340, 341], "entropy_coef": [321, 323, 338, 341, 419, 431], "critic_coef": [321, 323, 338, 341, 419], "loss_critic_typ": [321, 323, 338, 341, 343, 419], "l1": [321, 323, 325, 326, 330, 338, 341, 342, 343, 346, 347, 350, 354, 412, 417], "l2": [321, 323, 325, 326, 327, 328, 330, 333, 334, 338, 341, 342, 343, 346, 347, 350, 354, 417, 430], "smooth_l1": [321, 322, 323, 324, 325, 326, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347, 350, 354, 419], "separate_loss": [321, 323, 324, 325, 329, 330, 337, 338, 341, 342, 343, 344, 346, 347], "advantage_kei": [321, 323, 338, 341, 343, 356, 357, 358, 359], "value_target_kei": [321, 323, 338, 341, 343, 356, 357, 358, 359], "value_target": [321, 323, 338, 341, 343, 356, 357, 358, 359, 419, 431], "ddp": [321, 323, 338, 341, 343], "fsdp": [321, 323, 338, 341, 343], "divid": [321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 338, 340, 341, 342, 343, 344, 346, 347, 397, 417, 430, 431, 432], "clip_valu": [321, 323, 338, 341, 343], "loss_crit": [321, 341, 419, 431], "loss_entropi": [321, 341, 419, 431], "loss_object": [321, 341, 419, 431], "next_reward": [321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359], "next_don": [321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359], "next_termin": [321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 356, 357, 358, 359], "loss_obj": 321, "next_observ": [321, 322, 324, 325, 326, 328, 329, 330, 337, 341, 342, 343, 344, 346, 347, 429], "sacloss": [321, 336, 345, 410], "default_kei": [321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 343, 344, 346, 347, 354, 360], "_acceptedkei": [321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 346, 347, 354, 360], "fraction": 321, "make_value_estim": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 348, 354, 413, 417, 418, 430, 431, 436], "value_typ": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 349, 354, 417], "valueestim": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 349, 354, 410, 413, 417, 430, 431], "hyperparam": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 417], "enum": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 349, 354, 417], "default_value_estim": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 417, 436], "default_value_kwarg": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 410, 417], "dqn_loss": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 348, 354], "td1": [321, 322, 324, 325, 326, 328, 330, 331, 332, 337, 339, 341, 342, 343, 344, 346, 347, 354, 417], "conserv": [322, 328], "04779": [322, 328], "qvalue_network": [322, 324, 329, 330, 337, 342, 344, 346, 347], "unti": [322, 324, 337, 342, 344, 346, 347], "loss_funct": [322, 324, 325, 326, 327, 328, 329, 330, 337, 342, 344, 346, 347, 350, 354, 417, 430], "alpha_init": [322, 324, 330, 340, 342, 344], "min_alpha": [322, 324, 330, 340, 342, 344], "max_alpha": [322, 324, 330, 340, 342, 344], "fixed_alpha": [322, 324, 330, 340, 342, 344], "target_entropi": [322, 324, 330, 340, 342, 344], "prod": [322, 324, 340, 344], "delay_actor": [322, 325, 344, 346, 347], "delay_qvalu": [322, 330, 342, 344, 346, 347], "min_q_weight": 322, "max_q_backup": 322, "backup": 322, "deterministic_backup": 322, "num_random": 322, "with_lagrang": 322, "lagrang": 322, "lagrange_thresh": 322, "valueclass": [322, 324, 325, 330, 342, 344, 346, 347], "qvalu": [322, 324, 329, 330, 337, 342, 344, 346, 347], "loss_actor": [322, 324, 325, 329, 330, 337, 342, 343, 344, 346, 347, 390, 417, 430], "loss_actor_bc": 322, "loss_alpha": [322, 324, 330, 342, 344], "loss_cql": [322, 328], "loss_qvalu": [322, 324, 328, 329, 330, 337, 342, 344, 346, 347], "loss_alpha_prim": 322, "clip_epsilon": [323, 419, 431], "normalize_advantag": [323, 338, 341, 431], "normalize_advantage_exclude_dim": [323, 338, 341], "multiobject": [323, 338, 341], "value_kei": [323, 338, 341, 356, 357, 358, 359, 417], "somemodul": [323, 338, 341], "someactor": [323, 338, 341], "value_head": [323, 338, 341], "somevalu": [323, 338, 341], "loss_modul": [323, 336, 338, 339, 341, 345, 394, 403, 404, 413, 414, 417, 418, 419, 430, 431, 434], "IN": 324, "FOR": 324, "simplic": [324, 418, 419, 425, 433, 434, 436], "openreview": [324, 342], "pczqttstix": 324, "qvalue_loss": [324, 346], "actor_loss": [324, 346], "alpha_loss": 324, "num_qvalue_net": [324, 329, 330, 337, 342, 344, 346, 347], "maybe_init_target_entropi": 324, "fault_toler": 324, "target_entropy_buff": 324, "delay_valu": [325, 326, 328, 331, 343, 344, 354, 418, 420, 421, 427, 430], "loss_valu": [325, 329, 337, 343, 344, 417, 419, 430, 431], "pred_valu": [325, 328, 346, 347, 417], "pred_value_max": [325, 417], "target_valu": [325, 328, 342, 346, 347, 355, 413, 417], "target_value_max": [325, 417], "qvalueactor": [326, 328, 354, 418, 420], "double_dqn": 326, "06461": [326, 336], "mult_one_hot": [326, 329, 330, 354], "loss_val": [326, 328, 413, 417, 419, 420, 421, 424, 425, 427, 430, 431, 434], "01345": 327, "distanc": [328, 338, 350, 355, 356, 431], "dcql_loss": 328, "2110": [329, 337], "06169": [329, 337], "expectil": [329, 337], "tau": [329, 337, 345, 417, 418, 430], "antmaz": [329, 337], "sticht": [329, 337], "onehotcategor": [329, 330, 410], "target_entropy_weight": 330, "skip_done_st": [330, 344], "disctount": 331, "distributionalqvalueactor": [331, 412], "input_tensordict": [331, 417], "actor_model": 332, "value_model": [332, 334], "imagination_horizon": 332, "discount_loss": [332, 334], "lambda_kl": 333, "lambda_reco": 333, "lambda_reward": 333, "reco_loss": 333, "reward_loss": 333, "free_nat": 333, "nat": 333, "delayed_clamp": 333, "global_averag": 333, "value_loss": 334, "fake_data": 334, "1606": 335, "03476": 335, "discriminator_network": 335, "use_grad_penalti": 335, "gp_lambda": 335, "discrimin": 335, "ddpgloss": [336, 345, 404, 410, 417, 424, 430, 436], "td3loss": [336, 345, 410], "value_network_update_interv": 336, "qvalueclass": 337, "loss_value_diff": 337, "diff": 337, "old_polici": 338, "new_polici": 338, "apart": [338, 431], "dtarg": 338, "samples_mc_kl": 338, "analyt": 338, "decrement": 338, "loss_": [339, 390, 413, 417, 424], "equip": [339, 420, 421, 423], "gh": 339, "_forward_value_estimator_kei": 339, "value_estim": [339, 356, 357, 358, 359, 360, 413, 417, 431], "myloss": 339, "action2": 339, "augment": [339, 425, 427, 434], "deterministic_sampling_mod": 339, "convert_to_funct": [339, 417], "expand_dim": 339, "create_target_param": [339, 417], "compare_against": [339, 417], "_param": 339, "resampl": 339, "_target_param": 339, "network_nam": 339, "blend": 339, "add_random_modul": [339, 413], "flavor": [341, 417, 430, 431, 436], "clipppoloss": [341, 410, 419, 431], "klpenppoloss": [341, 410], "06347": 341, "gae": [341, 410, 413, 417, 419, 431], "ppo_loss": 341, "tdlambda": [341, 349, 413, 417], "base_lay": 341, "randn_lik": 341, "samplelogprob": 341, "ay8zfzm0tdd": 342, "sub_sample_len": 342, "subsampl": [342, 385, 414], "action_log_prob_actor": 342, "state_action_value_actor": [342, 346, 347], "connectionist": 343, "1992": 343, "doi": 343, "1007": 343, "bf00992696": 343, "actor_net": [343, 417, 419], "1801": 344, "01290": 344, "applic": [344, 354, 422, 423, 432], "1812": 344, "05905": 344, "redqloss": [345, 410], "math": 345, "theta_t": [345, 432], "theta_": [345, 432], "polyak": 345, "minimalist": 346, "06860": 346, "policy_nois": [346, 347], "noise_clip": [346, 347], "td3_bc": 346, "bc_loss": 346, "lmbd": 346, "td0": [348, 417, 430], "strict_shap": 350, "view_a": 350, "qmixer": [354, 410], "local_valu": 354, "visibl": [354, 431], "acceptedkei": 354, "global_valu": 354, "penultim": 354, "local_value_network": 354, "mixer_network": 354, "value_modul": [354, 419, 436], "qnet": [354, 417], "next_val_kei": 355, "pred_next_v": 355, "mse": 355, "q_valu": 355, "n_steps_to_next": 355, "value_next_st": 355, "1506": [356, 361, 369], "02438": [356, 361, 369], "exponenti": [356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 392], "average_ga": [356, 419], "skip_exist": [356, 357, 358, 359], "get_default_devic": [356, 357, 358, 359, 360], "gradient_mod": 356, "value_error": [356, 357, 358, 359, 360], "target_param": [356, 357, 358, 359, 360, 417, 431], "98": [356, 357, 358, 359], "94": [356, 359], "unpack": [356, 357, 358, 359], "tensor_kei": [356, 357, 358, 359, 360], "next_valu": [356, 357, 358, 359, 360], "aka": [357, 418, 430], "average_reward": [357, 358, 359], "tdestim": [357, 358, 360], "infti": 358, "valuefunctionbas": 360, "old_stat": [361, 363, 365, 367, 369, 370, 372], "new_stat": [361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "rolling_gamma": [365, 366, 367, 368, 370, 371, 372, 373], "g1": [365, 366, 367, 368, 370, 371, 372, 373], "g2": [365, 366, 367, 368, 370, 371, 372, 373], "g3": [365, 366, 367, 368, 370, 371, 372, 373], "g4": [365, 366, 367, 368, 370, 371, 372, 373], "v3": [365, 366, 367, 368, 370, 371, 372, 373], "preproc": [374, 421, 430], "as_non_tensor": [374, 430], "render_method": 374, "pass_tensordict": 374, "syntact": 374, "sugar": 374, "out_file_bas": 375, "skip_reset": 375, "center_crop": 376, "make_grid": 376, "fp": [376, 381, 383], "log_video": 376, "csv": [376, 378, 380, 418, 426, 427], "wandb": [376, 380, 383, 426, 436], "tensorboard": [376, 380, 382, 426, 436], "log_dir": [376, 377, 378, 380, 382, 383, 418, 427], "cheetah_video": 376, "run_video": 376, "openxexperiencereplai": 376, "sec": [376, 432], "video_fp": [376, 378, 381], "cmu_stretch": 376, "run_video_0": 376, "pt": [378, 414], "cur_dir": 378, "csv_log": 378, "add_video": 378, "video_": 378, "experiment_nam": [379, 380], "uuid": [379, 418, 437], "logger_typ": 380, "logger_nam": 380, "mlflow": [380, 381], "wandb_kwarg": 380, "mlflow_kwarg": 380, "tracking_uri": 381, "uri": 381, "datastor": 381, "tb_log": 382, "tensoarboard": 382, "td_log": 382, "save_dir": 383, "resum": 383, "uncategor": 383, "my_funct": 384, "sub_traj_len": 385, "min_sub_traj_len": 385, "register_op": [385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 414, 418], "process_optim_batch": [385, 391, 392, 414], "td_out": [385, 393], "_process_optim_batch_hook": [385, 414], "batch_subsampl": 385, "clear_cuda": 386, "pre_optim_step": [386, 414], "log_pbar": [387, 388, 389, 392, 414, 418], "progress": [387, 388, 389, 394, 414, 418, 420, 437], "count_fram": 387, "pre_steps_log": [387, 388, 414], "count_frames_log": 387, "lognam": 388, "r_train": 388, "log_reward": [388, 418], "record_interv": [389, 417, 418], "record_fram": [389, 397, 417, 418], "policy_explor": [389, 404, 417, 418, 421, 423, 427], "log_kei": [389, 418], "underestim": 389, "r_evalu": [389, 417], "loss_compon": 390, "appl": 390, "optimizer_hook": 390, "flatten_tensordict": [391, 418], "max_dim": 391, "rb_trainer": 391, "batch_process": [391, 392, 393, 414], "post_loss": [391, 414], "999": [392, 418], "jitter": 392, "finfo": 392, "default_dtyp": 392, "reward_norm": 392, "update_reward_stat": 392, "normalize_reward": 392, "make_train": [393, 410], "_process_batch_hook": [393, 414], "select_kei": [393, 414], "versatil": [394, 422], "optim_steps_per_batch": [394, 414, 418], "clip_grad_norm": 394, "clip_norm": 394, "progress_bar": 394, "save_trainer_interv": 394, "log_interv": [394, 418], "save_trainer_fil": [394, 414], "load_from_fil": [394, 414], "update_weights_interv": [396, 418], "update_weight": 396, "post_step": [396, 414, 418], "cfg": [397, 398, 399, 400, 401, 402, 403, 404, 405, 408], "dictconfig": [397, 398, 399, 400, 402, 403, 404, 405, 408], "unknowingli": 397, "annealing_fram": [397, 417], "init_env_step": [397, 398, 417], "proof_environ": [398, 417], "sta": 398, "ot": 398, "actor_model_explor": [399, 400, 417], "make_env_kwarg": [399, 400], "targetnetupdat": [401, 403, 404], "replayargsconfig": 402, "target_net_updat": [404, 417, 418], "constitu": 404, "egreedywrapp": 404, "env_proof": 404, "obs_spec": 404, "net_valu": 404, "dir": [404, 414, 418], "gettempdir": 404, "argpars": [405, 408], "namespac": [405, 408], "parser": [405, 408], "transformed_env_constructor": [405, 410], "num_env_per_collector": [406, 407], "video_tag": 408, "norm_obs_onli": 408, "use_env_cr": 408, "custom_env_mak": 408, "custom_env": 408, "return_transformed_env": 408, "action_dim_gsd": 408, "state_dim_gsd": 408, "obs_norm_state_dict": 408, "maker": [408, 418], "distributedsyncdatacollector": 410, "submitit_delayed_launch": 410, "raycollector": 410, "rational": 410, "footnot": 410, "binarydiscretetensorspec": 410, "boundedtensorspec": 410, "discretetensorspec": 410, "lazystackedcompositespec": 410, "lazystackedtensorspec": 410, "multidiscretetensorspec": 410, "multionehotdiscretetensorspec": 410, "nontensorspec": 410, "onehotdiscretetensorspec": 410, "unboundedcontinuoustensorspec": 410, "unboundeddiscretetensorspec": 410, "prompttensordicttoken": 410, "rolloutfrommodel": 410, "tokenizeddatasetload": 410, "create_infinite_iter": 410, "constantklcontrol": 410, "adaptiveklcontrol": 410, "llminput": 410, "llmoutput": 410, "densifyreward": 410, "h5combin": 410, "h5split": 410, "nested2t": 410, "check_no_exclusive_kei": 410, "consolidate_spec": 410, "contains_lazy_spec": 410, "envmetadata": 410, "chessenv": 410, "tictactoeenv": 410, "llmhashingenv": 410, "check_marl_group": 410, "get_available_librari": 410, "terminated_or_trunc": 410, "dreamerdecod": 410, "braxwrapp": 410, "dmcontrolwrapp": 410, "jumanjiwrapp": 410, "meltingpotenv": 410, "meltingpotwrapp": 410, "mogymenv": 410, "multithreadedenvwrapp": 410, "openmlenv": 410, "openspielwrapp": 410, "openspielenv": 410, "pettingzooenv": [410, 430], "robohiveenv": 410, "smacv2env": 410, "smacv2wrapp": 410, "unitymlagentsenv": 410, "unitymlagentswrapp": 410, "vmaswrapp": 410, "register_gym_spec_convers": 410, "qvaluehook": 410, "distributionalqvaluehook": 410, "reset_nois": 410, "cemplann": 410, "mpcplannerbas": 410, "mppiplann": 410, "independentnorm": 410, "truncatednorm": 410, "maskedonehotcategor": 410, "onehotordin": 410, "inv_softplu": 410, "vmapmodul": 410, "distributionaldqnloss": [410, 418], "discretesacloss": 410, "crossqloss": 410, "iqlloss": 410, "discreteiqlloss": 410, "cqlloss": 410, "discretecqlloss": 410, "gailloss": 410, "dtloss": 410, "onlinedtloss": 410, "td3bcloss": 410, "ppoloss": 410, "a2closs": 410, "reinforceloss": 410, "dreameractorloss": 410, "dreamermodelloss": 410, "dreamervalueloss": 410, "td0estim": [410, 417], "td1estim": [410, 417], "td0_return_estim": 410, "td0_advantage_estim": 410, "td1_return_estim": 410, "vec_td1_return_estim": 410, "td1_advantage_estim": 410, "vec_td1_advantage_estim": 410, "td_lambda_return_estim": 410, "vec_td_lambda_return_estim": 410, "td_lambda_advantage_estim": 410, "vec_td_lambda_advantage_estim": 410, "generalized_advantage_estim": 410, "vec_generalized_advantage_estim": 410, "hardupd": [410, 417, 424], "softupd": [410, 417, 418, 420, 421, 424, 427, 430], "distance_loss": [410, 417], "group_optim": 410, "hold_out_net": 410, "hold_out_param": [410, 417], "batchsubsampl": [410, 414], "clearcudacach": 410, "countframeslog": 410, "logscalar": [410, 414, 418], "optimizerhook": [410, 418], "logvalidationreward": [410, 414, 417, 418], "replaybuffertrain": [410, 414, 418], "rewardnorm": 410, "selectkei": [410, 414], "trainerhookbas": [410, 414, 418], "updateweight": [410, 414, 418], "make_collector_offpolici": 410, "make_collector_onpolici": 410, "make_dqn_loss": 410, "make_replay_buff": [410, 417], "make_target_updat": 410, "parallel_env_constructor": [410, 417], "sync_async_collector": 410, "sync_sync_collector": 410, "correct_for_frame_skip": 410, "get_stats_random_rollout": 410, "mlflowlogg": 410, "get_logg": 410, "generate_exp_nam": 410, "journei": 411, "textbook": 411, "highlight": [411, 430], "ever": [411, 431], "bump": 411, "benefit": [411, 422, 430, 431, 434], "pr": 411, "ground": [412, 417, 432], "recycl": [412, 434], "noisier": 412, "Their": [412, 430, 431], "sd": [412, 437], "prob_modul": 412, "uncertainti": 412, "soften": 412, "backbon": [412, 420, 423, 429, 436], "make_actor": 412, "make_valu": 412, "shared_param": 412, "make_common": 412, "reusabl": [413, 417, 434], "swappabl": [413, 417], "characterist": [413, 417, 432], "trainabl": [413, 417, 424, 433], "smth": [413, 417], "metric": [413, 417], "plenti": [413, 421], "amort": [413, 418, 419], "told": [413, 419], "pseudo": [413, 425, 432], "buri": 413, "str_valu": 413, "nutshel": [413, 417], "barto": [413, 430, 431], "chapter": [413, 426], "value_net_loss": 413, "pow": [413, 417], "room": 413, "signifi": [413, 430, 431], "underperform": 413, "thin": 413, "intric": [413, 423], "set_composite_lp_aggreg": [413, 431], "action_td": 413, "action0": 413, "f0": 413, "action1": 413, "f1": 413, "f2": 413, "legitim": [413, 437], "f3": 413, "action0_log_prob": 413, "action1_log_prob": 413, "inferior": 413, "multivari": 413, "dirichlet": 413, "contrari": 413, "prev_log_prob": 413, "new_log_prob": 413, "log_weight": 413, "appreci": [413, 422], "multihead": 413, "believ": 414, "scheme": [414, 437], "substanti": 414, "_pre_steps_log_hook": 414, "_pre_optim_hook": 414, "sub_batch": 414, "_post_loss_hook": 414, "_post_optim_hook": 414, "post_optim": [414, 418], "_post_optim_log": 414, "post_optim_log": 414, "_post_steps_hook": 414, "_post_steps_log_hook": 414, "post_steps_log": 414, "reserv": 414, "logginghook": 414, "logging_hook": 414, "save_dict": 414, "some_valu": 414, "torchsnapshot": 414, "ckpt_backend": 414, "filepath": 414, "save_train": 414, "000": [416, 435], "galleri": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "mem": [416, 435], "mb": [416, 435], "coding_ddpg": [416, 417, 435], "coding_dqn": [416, 418, 435], "coding_ppo": [416, 419, 435], "dqn_with_rnn": [416, 420, 435], "multi_task": [416, 429, 435], "multiagent_competitive_ddpg": [416, 430, 435], "multiagent_ppo": [416, 431, 435], "pretrained_model": [416, 433, 435], "rb_tutori": [416, 434, 435], "torchrl_demo": [416, 435, 436], "torchrl_env": [416, 435, 437], "author": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 437], "vincent": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 434, 437], "moen": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 434, 437], "assembl": 417, "focus": [417, 424], "maxim": [417, 424, 432], "transpar": [417, 420], "bash": 417, "is_fork": [417, 418, 419, 420, 430, 431, 433], "get_start_method": [417, 418, 419, 420, 430, 431, 433], "collector_devic": 417, "loss_dict": 417, "modal": 417, "oblivi": [417, 419, 434], "elementari": 417, "didact": [417, 421], "dilut": 417, "pessimist": [417, 418, 419], "target_actor_network_param": 417, "actor_in_kei": 417, "actor_crit": 417, "compromis": 417, "hp": 417, "_value_estim": 417, "elif": [417, 418], "unknown": 417, "_loss_actor": 417, "td_copi": 417, "actor_network_param": [417, 430], "value_network_param": [417, 430], "_loss_valu": 417, "pred_val": 417, "target_value_network_param": 417, "glue": 417, "_forward": 417, "remaind": 417, "env_librari": 417, "env_task": 417, "env_arg": [417, 418], "friendli": 417, "torchr": 417, "rescal": 417, "presum": 417, "make_transformed_env": 417, "reward_sc": 417, "marker": 417, "env_per_collector": 417, "transform_state_dict": 417, "make_t_env": 417, "cheat": 417, "10m": 417, "cautiou": 417, "magnitud": [417, 430], "thousand": [417, 420], "get_env_stat": 417, "proof_env": 417, "5000": [417, 421, 427], "recal": [417, 419, 434], "ddpgmlpactor": 417, "ddpgmlpqnet": 417, "materi": 417, "ornsteinuhlenbeckprocessmodul": [417, 423], "make_ddpg_actor": 417, "q_net": 417, "tight": 417, "decoupl": [417, 424, 436], "10_000": [417, 419], "traj_len": [417, 420], "make_record": 417, "recorder_obj": 417, "pick": [417, 418, 423], "buffer_s": [417, 418], "random_crop_len": 417, "prb": 417, "buffer_scratch_dir": [417, 418, 420, 425, 433], "25": 417, "dataflow": 417, "ceil_div": 417, "utd": [417, 420], "update_to_data": 417, "realiz": 417, "_must_": 417, "001": [417, 432], "outdat": 417, "trick": [417, 418], "despit": 417, "optimizer_actor": 417, "weight_decai": [417, 418], "optimizer_valu": 417, "total_collection_step": 417, "rewards_ev": 417, "collected_fram": 417, "pbar": [417, 419, 420, 430, 431, 432], "numel": [417, 419, 420, 421, 427, 430, 433, 434], "current_fram": [417, 430], "sampled_tensordict": 417, "gn1": 417, "clip_grad_norm_": [417, 419, 430, 431, 432], "gn2": 417, "gn": [417, 432], "td_record": 417, "rn": 417, "set_descript": [417, 419, 420, 430, 431, 432], "2f": 417, "mention": [417, 420, 434, 437], "matplotlib": [417, 419, 420, 421, 430, 431, 432, 434, 437], "pyplot": [417, 419, 420, 421, 430, 431, 432, 434, 437], "plt": [417, 419, 420, 421, 430, 431, 432, 434, 437], "zip": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "legend": [417, 430], "xlabel": [417, 420, 431, 432], "ylabel": [417, 431], "tight_layout": 417, "takeawai": [417, 418, 421], "distpatch": 417, "jupyt": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "ipynb": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "sphinx": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "road": 418, "aspect": [418, 424], "highest": [418, 423], "prerequisit": [418, 420], "lookup": 418, "cart": 418, "pole": 418, "un": 418, "actuat": 418, "frictionless": 418, "duelingcnndqnet": 418, "egreedymodul": [418, 420, 421, 423, 427], "is_notebook": 418, "shell": 418, "get_ipython": 418, "__class__": 418, "zmqinteractiveshel": 418, "qtconsol": 418, "terminalinteractiveshel": 418, "ipython": [418, 431, 432], "nameerror": [418, 430], "umbrella": 418, "misplac": 418, "misus": 418, "orchestr": [418, 424, 426], "five": 418, "64x64": 418, "motion": [418, 432], "obs_norm_sd": 418, "mp_context": 418, "simpler": [418, 422], "get_norm_stat": 418, "test_env": 418, "mathbb": 418, "rightarrow": 418, "make_model": 418, "dummy_env": 418, "init_bia": 418, "exploration_modul": [418, 420, 421, 423, 427], "eps_greedy_v": 418, "eps_greedy_val_env": 418, "actor_explor": 418, "get_replay_buff": 418, "n_optim": [418, 424, 425], "parametriz": 418, "get_collector": 418, "cl": 418, "bunch": 418, "ubiquit": [418, 422], "get_loss_modul": 418, "target_updat": [418, 430], "995": 418, "hopefulli": 418, "variat": 418, "2e": [418, 432], "wd": 418, "upd": 418, "harder": [418, 436], "5_000": 418, "500000": 418, "100000": 418, "005": [418, 430], "mandatori": [418, 419, 431, 432], "fairer": 418, "budget": 418, "dqn_exp_": 418, "uuid1": [418, 437], "registr": 418, "cumbersom": 418, "buffer_hook": 418, "weight_updat": 418, "aliv": 418, "total_reward": 418, "print_csv_files_in_fold": 418, "folder_path": 418, "csv_file": 418, "output_str": 418, "dirpath": 418, "endswith": 418, "strip": 418, "qvaluenetwork": 418, "accuraci": 418, "fanci": [418, 425], "demonstr": [419, 421, 425, 430, 431, 432, 434, 437], "talk": 419, "six": 419, "sophist": [419, 431], "invent": 419, "theta_k": 419, "pi_": 419, "exceed": 419, "discourag": [419, 432], "indispens": 419, "analyz": 419, "lingua": 419, "franca": 419, "defaultdict": [419, 432], "3e": [419, 420, 430, 431], "max_grad_norm": [419, 430, 431], "sub_batch_s": 419, "num_epoch": [419, 431], "entropy_ep": [419, 431], "charact": [419, 421], "inverteddoublependulum": 419, "transmit": 419, "stai": 419, "confid": [419, 430, 431], "ran": 419, "f_": 419, "mu_": 419, "difficulti": [419, 437], "d_ob": 419, "d_action": 419, "policy_modul": [419, 430, 431], "briefli": [419, 430, 431], "refil": [419, 431], "easiest": [419, 424, 430, 431], "mathemat": [419, 430, 431], "tradeoff": [419, 431], "advantage_modul": 419, "lr_schedul": [419, 432], "cosineannealinglr": [419, 432], "eval_str": 419, "tensordict_data": [419, 431], "data_view": [419, 431], "subdata": [419, 430, 431], "cum_reward_str": 419, "4f": [419, 420, 432], "stepcount_str": 419, "param_group": [419, 430], "lr_str": 419, "eval_rollout": 419, "nice": [419, 422, 425], "cap": [419, 434], "figsiz": [419, 432], "subplot": [419, 430, 432, 437], "titl": [419, 420, 421, 431, 432], "84x84": [420, 421], "accessori": 420, "stamp": 420, "assist": 420, "n_cell": 420, "customiz": 420, "wouldn": 420, "qval": 420, "stoch_polici": 420, "opportun": [420, 430], "uniniti": 420, "again": [420, 421, 422, 423, 425, 431, 433, 434, 437], "strongli": 420, "million": 420, "sake": [420, 433, 434], "20_000": [420, 432], "longest": 420, "npai": 420, "action_spread": 420, "rom": 421, "licens": 421, "strong": 421, "impress": 421, "arduino": 421, "raspberri": 421, "pi": [421, 430, 431, 432], "alon": 421, "examplifi": 421, "ship": 421, "stick": 421, "nearest": 421, "value_mlp": [421, 427], "100_000": [421, 427], "init_rand_step": [421, 427], "total_count": [421, 427], "total_episod": [421, 427], "t0": [421, 427], "screen": [421, 430], "color": [421, 430], "unblock": 421, "policy_transform": 421, "fake_td": 421, "exported_polici": 421, "div": 421, "graph_modul": 421, "print_read": 421, "group0": 421, "group0_agent0_ob": 421, "collid": [421, 431], "group0_agent0": 421, "agent0_ob": 421, "comma": 421, "digress": 421, "exported_stochastic_polici": 421, "trace": 421, "batchsizetransform": 421, "recurrent_polici": 421, "fake_ob": 421, "fake_hidden0": 421, "fake_hidden1": 421, "fake_is_init": 421, "exported_recurrent_polici": 421, "platform": [421, 436], "aoti": 421, "_inductor": 421, "aoti_compile_and_packag": 421, "aoti_load_packag": 421, "pt2": 421, "pkg_path": 421, "package_path": 421, "compiled_modul": 421, "onnxruntim": 421, "showcas": [421, 432], "web": 421, "explain": [421, 433], "tensorrt": 421, "android": 421, "ale_pi": 421, "aleinterfac": 421, "loadrom": 421, "reset_gam": 421, "screen_ob": 421, "getscreenrgb": 421, "tick_param": 421, "bottom": 421, "labelleft": 421, "labelbottom": 421, "imshow": [421, 437], "dynamo_export": 421, "onnx_policy_export": 421, "onnx_file_path": 421, "ort_sess": 421, "inferencesess": 421, "cpuexecutionprovid": 421, "onnxruntime_input": 421, "get_input": 421, "onnx_polici": 421, "lightweight": [421, 426], "onnxruntime_output": 421, "deploy": 421, "topic": [422, 423, 424], "straight": 422, "backtrack": 422, "reset_with_act": 422, "stepped_data": 422, "spatial": 422, "useless": 422, "policyless": 422, "examin": [422, 430], "tackl": 423, "delv": 423, "extractor": 423, "additivegaussianmodul": [423, 430], "exploration_polici": [423, 430], "greedili": 423, "2d": [423, 430, 431], "innov": [423, 424], "rollout_explor": 423, "sole": 424, "supervis": [424, 425, 434, 437], "n_collect": 424, "get_next_batch": 424, "concis": 424, "ddpg_loss": 424, "total_loss": 424, "prove": 424, "reliev": 424, "concern": 424, "accustom": 425, "surprisingli": 425, "fundament": 425, "art": [425, 430, 431], "countless": 425, "yourself": [425, 430, 431], "everywher": 426, "log_scalar": 426, "my_scalar": 426, "saw": [426, 432, 434], "excess": 426, "lesson": 427, "voluntarili": 427, "torchrl_logg": 427, "training_loop": 427, "video_record": 427, "arbitrarili": 427, "t1": 427, "conclud": [427, 433], "tutorials_python": 428, "tutorials_jupyt": 428, "env1_obs_kei": 429, "observation_stand": 429, "env2_obs_kei": 429, "observation_walk": 429, "tdreset1": 429, "tdreset2": 429, "lazy_stack": 429, "policy_common": 429, "policy_stand": 429, "policy_walk": 429, "But": 429, "env1_mak": 429, "env2_mak": 429, "_single_task": 429, "td_rollout": 429, "matteo": [430, 431], "bettini": [430, 431], "benchmarl": [430, 431], "simple_tag": 430, "maddpg": [430, 431], "multiagentparticleenviron": 430, "mpe": 430, "centralis": [430, 431], "tie": [430, 431], "iddpg": [430, 431], "richard": 430, "andrew": 430, "mit": 430, "press": 430, "2018": 430, "mathbf": [430, 431], "decentralis": [430, 431], "literatur": [430, 431], "overcom": [430, 431], "stationari": [430, 431], "concurr": [430, 431], "establish": 430, "gui": [430, 431], "is_sphinx": 430, "__sphinx_build__": 430, "n_iter": [430, 431, 432], "evad": 430, "iteration_when_stop_training_evad": 430, "memory_s": 430, "n_optimiser_step": 430, "train_batch_s": 430, "polyak_tau": 430, "chaser": 430, "red": 430, "circl": [430, 431], "green": 430, "touch": [430, 432], "penal": [430, 431], "obstacl": 430, "drag": [430, 431], "elast": [430, 431], "collis": [430, 431], "imped": 430, "n_chaser": 430, "n_evad": 430, "n_obstacl": 430, "use_vma": 430, "simple_tag_v3": 430, "num_good": 430, "num_adversari": 430, "num_obstacl": 430, "max_cycl": 430, "num_vmas_env": [430, 431], "num_good_ag": 430, "num_landmark": 430, "four": [430, 431, 432], "n_agents_in_that_group": 430, "stress": [430, 431], "paramount": [430, 431], "n_rollout_step": [430, 431], "evolut": [430, 431], "group_nam": 430, "n_agents_in_group": 430, "minor": 430, "agents_exploration_polici": 430, "utilis": [430, 431], "n_obs_per_ag": [430, 431], "n_actions_per_ag": [430, 431], "share_parameters_polici": [430, 431], "policy_net": [430, 431], "_agent": 430, "grant": [430, 431], "converg": [430, 431], "share_parameters_crit": [430, 431], "obs_act": 430, "cat_modul": 430, "critic_modul": 430, "fantast": [430, 431], "reset_td": 430, "interfer": 430, "subject": [430, 432], "flatten_kei": 430, "process_batch": 430, "group_shap": 430, "get_item_shap": [430, 431], "nested_done_kei": 430, "nested_terminated_kei": 430, "desc": [430, 431], "episode_reward_mean_": 430, "episode_reward_mean_map": 430, "train_group_map": 430, "group_batch": 430, "_group": 430, "loss_nam": 430, "episode_reward_mean": [430, 431], "fig": [430, 434], "set_ylabel": 430, "axvlin": 430, "orang": 430, "set_xlabel": 430, "video_logg": 430, "vmas_log": 430, "env_with_rend": 430, "vmas_rend": 430, "print_log_dir": 430, "profici": [430, 431], "lidar": 431, "sensor": 431, "mappo": 431, "ippo": 431, "analys": 431, "visualis": 431, "vmas_devic": 431, "6_000": 431, "minibatch_s": 431, "generalis": 431, "simd": 431, "warp": 431, "todai": 431, "surround": 431, "dot": [431, 432], "scenario_nam": 431, "critic_net": 431, "minibatch": 431, "episode_reward_mean_list": 431, "critic_network_param": 431, "target_critic_network_param": 431, "xvfb": 431, "pyvirtualdisplai": 431, "1400": 431, "900": 431, "pil": 431, "rendering_callback": 431, "fromarrai": 431, "gif": 431, "save_al": 431, "append_imag": 431, "freeli": 432, "broader": 432, "wider": 432, "acquaint": 432, "avenu": 432, "_apply_to_composit": 432, "default_x": 432, "default_i": 432, "upward": 432, "angular": 432, "sin": 432, "rad": 432, "angl": 432, "deleg": 432, "new_th": 432, "new_thdot": 432, "g_forc": 432, "angle_norm": 432, "albeit": 432, "high_th": 432, "high_thdot": 432, "low_th": 432, "low_thdot": 432, "trivial": 432, "irrelev": 432, "_make_spec": 432, "td_param": 432, "render_fp": 432, "random_": 432, "_make_step": 432, "staticmethod": 432, "skeleton": 432, "unitari": 432, "sine": 432, "cosin": 432, "sintransform": 432, "costransform": 432, "t_sin": 432, "t_co": 432, "cat_transform": 432, "simple_rollout": 432, "unexplor": 432, "init_td": 432, "traj_return": 432, "last_reward": 432, "is_ipython": 432, "inlin": 432, "get_backend": 432, "ion": 432, "gcf": 432, "clear_output": 432, "r3mtransform": 433, "embodi": 433, "env_transform": [433, 437], "wiser": 433, "batteri": 434, "buffer_list": 434, "lowest": 434, "medium": 434, "buffer_lazytensor": 434, "tempdir": 434, "buffer_lazymemmap": 434, "fullest": 434, "mydata": 434, "buffer_lazi": 434, "background": 434, "question": [434, 436], "_i": 434, "artifici": 434, "hamper": 434, "she": 434, "pars": 434, "proport": 434, "reappear": 434, "unfold": 434, "problemat": 434, "4th": 434, "gc": 434, "prioritizedslicesampl": 434, "tensordictmaxvaluewrit": 434, "demo": 436, "icml": 436, "vmoen": 436, "fb": 436, "invest": 436, "media": 436, "predominantli": 436, "data2": 436, "sub_key1": 436, "scturctur": 436, "data_stack": 436, "data_sampl": 436, "_sampler": 436, "_sum_tre": 436, "modulenotfounderror": 436, "noopresetenv": [436, 437], "backbone_modul": 436, "params_expand": 436, "exec_sequ": 436, "tensordict_exp": 436, "base_modul": 436, "tensordicts_prealloc": 436, "tensordicts_stack": 436, "tensordict_rollout": [436, 437], "automatical": 436, "60": 436, "particularili": 436, "concatmodul": 436, "loss_td": 436, "contributor": 436, "curiou": 436, "nascent": 436, "unsupervis": 437, "unifi": 437, "_build_env": 437, "deserv": 437, "__episode__": 437, "__trajectory__": 437, "void": 437, "reproduct": 437, "tensordict_tprim": 437, "wrapper1": 437, "wrapper2": 437, "obviou": 437, "truth": 437, "env_transformed_bi": 437, "stanc": 437, "transformeddistribut": 437, "base_dist": 437, "concat": 437, "mofidi": 437, "transformedenviron": 437, "moderet": 437, "computation": 437, "incom": 437, "amongst": 437, "has_cuda": 437, "convention": 437, "markovian": 437, "bar_": 437, "get_someth": 437, "aargh": 437, "is_clos": 437, "foo_list": 437, "121": 437, "evolv": 437, "steadi": 437, "approx": 437, "absor": 437, "_extra_st": 437}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [240, 0, 1, "", "implement_for"], [384, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DensifyReward"], [35, 0, 1, "", "DiscreteTensorSpec"], [36, 0, 1, "", "Flat2TED"], [37, 0, 1, "", "H5Combine"], [38, 0, 1, "", "H5Split"], [39, 0, 1, "", "HashToInt"], [40, 0, 1, "", "LLMData"], [41, 0, 1, "", "LLMInput"], [42, 0, 1, "", "LLMOutput"], [43, 0, 1, "", "LazyStackedCompositeSpec"], [44, 0, 1, "", "LazyStackedTensorSpec"], [45, 0, 1, "", "MCTSForest"], [46, 0, 1, "", "MultiCategorical"], [47, 0, 1, "", "MultiDiscreteTensorSpec"], [48, 0, 1, "", "MultiOneHot"], [49, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [50, 0, 1, "", "MultiStep"], [51, 0, 1, "", "Nested2TED"], [52, 0, 1, "", "NonTensor"], [53, 0, 1, "", "NonTensorSpec"], [54, 0, 1, "", "OneHot"], [55, 0, 1, "", "OneHotDiscreteTensorSpec"], [56, 0, 1, "", "PairwiseDataset"], [57, 0, 1, "", "PrioritizedReplayBuffer"], [58, 0, 1, "", "PromptData"], [59, 0, 1, "", "PromptTensorDictTokenizer"], [60, 0, 1, "", "QueryModule"], [61, 0, 1, "", "RandomProjectionHash"], [62, 0, 1, "", "ReplayBuffer"], [63, 0, 1, "", "RewardData"], [64, 0, 1, "", "RolloutFromModel"], [65, 0, 1, "", "SipHash"], [66, 0, 1, "", "Stacked"], [67, 0, 1, "", "StackedComposite"], [68, 0, 1, "", "TED2Flat"], [69, 0, 1, "", "TED2Nested"], [70, 0, 1, "", "TensorDictMap"], [71, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [72, 0, 1, "", "TensorDictReplayBuffer"], [73, 0, 1, "", "TensorDictTokenizer"], [74, 0, 1, "", "TensorMap"], [75, 0, 1, "", "TensorSpec"], [76, 0, 1, "", "TokenizedDatasetLoader"], [77, 0, 1, "", "Tree"], [78, 0, 1, "", "Unbounded"], [79, 0, 1, "", "UnboundedContinuous"], [80, 0, 1, "", "UnboundedContinuousTensorSpec"], [81, 0, 1, "", "UnboundedDiscrete"], [82, 0, 1, "", "UnboundedDiscreteTensorSpec"], [83, 0, 1, "", "check_no_exclusive_keys"], [84, 0, 1, "", "consolidate_spec"], [85, 0, 1, "", "contains_lazy_spec"], [86, 0, 1, "", "create_infinite_iterator"], [87, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "set"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "set"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[34, 1, 1, "", "add_module"], [34, 1, 1, "", "apply"], [34, 1, 1, "", "bfloat16"], [34, 1, 1, "", "buffers"], [34, 1, 1, "", "children"], [34, 1, 1, "", "compile"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 1, 1, "", "double"], [34, 1, 1, "", "eval"], [34, 1, 1, "", "extra_repr"], [34, 1, 1, "", "float"], [34, 1, 1, "", "forward"], [34, 1, 1, "", "get_buffer"], [34, 1, 1, "", "get_extra_state"], [34, 1, 1, "", "get_parameter"], [34, 1, 1, "", "get_submodule"], [34, 1, 1, "", "half"], [34, 1, 1, "", "ipu"], [34, 1, 1, "", "is_tdmodule_compatible"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "modules"], [34, 1, 1, "", "mtia"], [34, 1, 1, "", "named_buffers"], [34, 1, 1, "", "named_children"], [34, 1, 1, "", "named_modules"], [34, 1, 1, "", "named_parameters"], [34, 1, 1, "", "parameters"], [34, 1, 1, "", "register_backward_hook"], [34, 1, 1, "", "register_buffer"], [34, 1, 1, "", "register_forward_hook"], [34, 1, 1, "", "register_forward_pre_hook"], [34, 1, 1, "", "register_full_backward_hook"], [34, 1, 1, "", "register_full_backward_pre_hook"], [34, 1, 1, "", "register_load_state_dict_post_hook"], [34, 1, 1, "", "register_load_state_dict_pre_hook"], [34, 1, 1, "", "register_module"], [34, 1, 1, "", "register_parameter"], [34, 1, 1, "", "register_state_dict_post_hook"], [34, 1, 1, "", "register_state_dict_pre_hook"], [34, 1, 1, "", "requires_grad_"], [34, 1, 1, "", "reset_out_keys"], [34, 1, 1, "", "reset_parameters_recursive"], [34, 1, 1, "", "select_out_keys"], [34, 1, 1, "", "set_extra_state"], [34, 1, 1, "", "set_submodule"], [34, 1, 1, "", "share_memory"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_empty"], [34, 1, 1, "", "train"], [34, 1, 1, "", "type"], [34, 1, 1, "", "xpu"], [34, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 3, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 4, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "compile"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "mtia"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_full_backward_pre_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_load_state_dict_pre_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "register_state_dict_post_hook"], [39, 1, 1, "", "register_state_dict_pre_hook"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "", "set_submodule"], [39, 1, 1, "", "share_memory"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.data.LLMData": [[40, 4, 1, "", "device"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "fields"], [40, 1, 1, "", "from_tensordict"], [40, 1, 1, "", "get"], [40, 1, 1, "", "load"], [40, 1, 1, "", "load_"], [40, 1, 1, "", "load_memmap"], [40, 1, 1, "", "load_state_dict"], [40, 1, 1, "", "memmap"], [40, 1, 1, "", "memmap_"], [40, 1, 1, "", "memmap_like"], [40, 1, 1, "", "memmap_refresh_"], [40, 1, 1, "", "save"], [40, 1, 1, "", "set"], [40, 1, 1, "", "state_dict"], [40, 1, 1, "", "to_tensordict"], [40, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[41, 4, 1, "", "device"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "fields"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[42, 4, 1, "", "device"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "fields"], [42, 1, 1, "", "from_tensordict"], [42, 1, 1, "", "get"], [42, 1, 1, "", "load"], [42, 1, 1, "", "load_"], [42, 1, 1, "", "load_memmap"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "memmap"], [42, 1, 1, "", "memmap_"], [42, 1, 1, "", "memmap_like"], [42, 1, 1, "", "memmap_refresh_"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to_tensordict"], [42, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 4, 1, "", "device"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "get"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_empty"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "items"], [43, 1, 1, "", "keys"], [43, 1, 1, "", "lock_"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "pop"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "separates"], [43, 1, 1, "", "set"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unlock_"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "values"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 4, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[45, 4, 1, "", "action_keys"], [45, 4, 1, "", "done_keys"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "get_keys_from_env"], [45, 4, 1, "", "observation_keys"], [45, 4, 1, "", "reward_keys"], [45, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 3, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "cardinality"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "set_provisional_n"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 3, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_categorical"], [48, 1, 1, "", "to_categorical_spec"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "to_one_hot"], [48, 1, 1, "", "to_one_hot_spec"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "update_mask"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 3, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "compile"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "mtia"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_load_state_dict_pre_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "register_state_dict_post_hook"], [50, 1, 1, "", "register_state_dict_pre_hook"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_submodule"], [50, 1, 1, "", "share_memory"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 4, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 4, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 3, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 4, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 3, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 4, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[56, 4, 1, "", "device"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "fields"], [56, 1, 1, "", "from_dataset"], [56, 1, 1, "", "from_tensordict"], [56, 1, 1, "", "get"], [56, 1, 1, "", "load"], [56, 1, 1, "", "load_"], [56, 1, 1, "", "load_memmap"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "memmap"], [56, 1, 1, "", "memmap_"], [56, 1, 1, "", "memmap_like"], [56, 1, 1, "", "memmap_refresh_"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to_tensordict"], [56, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dump"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "load"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "register_load_hook"], [57, 1, 1, "", "register_save_hook"], [57, 1, 1, "", "sample"], [57, 4, 1, "", "sampler"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 4, 1, "", "storage"], [57, 4, 1, "", "write_count"], [57, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[58, 4, 1, "", "device"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "fields"], [58, 1, 1, "", "from_dataset"], [58, 1, 1, "", "from_tensordict"], [58, 1, 1, "", "get"], [58, 1, 1, "", "load"], [58, 1, 1, "", "load_"], [58, 1, 1, "", "load_memmap"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "memmap"], [58, 1, 1, "", "memmap_"], [58, 1, 1, "", "memmap_like"], [58, 1, 1, "", "memmap_refresh_"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "to_tensordict"], [58, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[60, 1, 1, "", "add_module"], [60, 1, 1, "", "apply"], [60, 1, 1, "", "bfloat16"], [60, 1, 1, "", "buffers"], [60, 1, 1, "", "children"], [60, 1, 1, "", "compile"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 1, 1, "", "double"], [60, 1, 1, "", "eval"], [60, 1, 1, "", "extra_repr"], [60, 1, 1, "", "float"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "get_buffer"], [60, 1, 1, "", "get_extra_state"], [60, 1, 1, "", "get_parameter"], [60, 1, 1, "", "get_submodule"], [60, 1, 1, "", "half"], [60, 1, 1, "", "ipu"], [60, 1, 1, "", "is_tdmodule_compatible"], [60, 1, 1, "", "load_state_dict"], [60, 1, 1, "", "modules"], [60, 1, 1, "", "mtia"], [60, 1, 1, "", "named_buffers"], [60, 1, 1, "", "named_children"], [60, 1, 1, "", "named_modules"], [60, 1, 1, "", "named_parameters"], [60, 1, 1, "", "parameters"], [60, 1, 1, "", "register_backward_hook"], [60, 1, 1, "", "register_buffer"], [60, 1, 1, "", "register_forward_hook"], [60, 1, 1, "", "register_forward_pre_hook"], [60, 1, 1, "", "register_full_backward_hook"], [60, 1, 1, "", "register_full_backward_pre_hook"], [60, 1, 1, "", "register_load_state_dict_post_hook"], [60, 1, 1, "", "register_load_state_dict_pre_hook"], [60, 1, 1, "", "register_module"], [60, 1, 1, "", "register_parameter"], [60, 1, 1, "", "register_state_dict_post_hook"], [60, 1, 1, "", "register_state_dict_pre_hook"], [60, 1, 1, "", "requires_grad_"], [60, 1, 1, "", "reset_out_keys"], [60, 1, 1, "", "reset_parameters_recursive"], [60, 1, 1, "", "select_out_keys"], [60, 1, 1, "", "set_extra_state"], [60, 1, 1, "", "set_submodule"], [60, 1, 1, "", "share_memory"], [60, 1, 1, "", "state_dict"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_empty"], [60, 1, 1, "", "train"], [60, 1, 1, "", "type"], [60, 1, 1, "", "xpu"], [60, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "fit"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 4, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 4, 1, "", "storage"], [62, 4, 1, "", "write_count"], [62, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[63, 4, 1, "", "device"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "fields"], [63, 1, 1, "", "from_tensordict"], [63, 1, 1, "", "get"], [63, 1, 1, "", "load"], [63, 1, 1, "", "load_"], [63, 1, 1, "", "load_memmap"], [63, 1, 1, "", "load_state_dict"], [63, 1, 1, "", "memmap"], [63, 1, 1, "", "memmap_"], [63, 1, 1, "", "memmap_like"], [63, 1, 1, "", "memmap_refresh_"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set"], [63, 1, 1, "", "state_dict"], [63, 1, 1, "", "to_tensordict"], [63, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[64, 1, 1, "", "create_rollout_td"], [64, 1, 1, "", "generate"], [64, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[65, 1, 1, "", "add_module"], [65, 1, 1, "", "apply"], [65, 1, 1, "", "bfloat16"], [65, 1, 1, "", "buffers"], [65, 1, 1, "", "children"], [65, 1, 1, "", "compile"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 1, 1, "", "double"], [65, 1, 1, "", "eval"], [65, 1, 1, "", "extra_repr"], [65, 1, 1, "", "float"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_buffer"], [65, 1, 1, "", "get_extra_state"], [65, 1, 1, "", "get_parameter"], [65, 1, 1, "", "get_submodule"], [65, 1, 1, "", "half"], [65, 1, 1, "", "ipu"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "modules"], [65, 1, 1, "", "mtia"], [65, 1, 1, "", "named_buffers"], [65, 1, 1, "", "named_children"], [65, 1, 1, "", "named_modules"], [65, 1, 1, "", "named_parameters"], [65, 1, 1, "", "parameters"], [65, 1, 1, "", "register_backward_hook"], [65, 1, 1, "", "register_buffer"], [65, 1, 1, "", "register_forward_hook"], [65, 1, 1, "", "register_forward_pre_hook"], [65, 1, 1, "", "register_full_backward_hook"], [65, 1, 1, "", "register_full_backward_pre_hook"], [65, 1, 1, "", "register_load_state_dict_post_hook"], [65, 1, 1, "", "register_load_state_dict_pre_hook"], [65, 1, 1, "", "register_module"], [65, 1, 1, "", "register_parameter"], [65, 1, 1, "", "register_state_dict_post_hook"], [65, 1, 1, "", "register_state_dict_pre_hook"], [65, 1, 1, "", "requires_grad_"], [65, 1, 1, "", "set_extra_state"], [65, 1, 1, "", "set_submodule"], [65, 1, 1, "", "share_memory"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_empty"], [65, 1, 1, "", "train"], [65, 1, 1, "", "type"], [65, 1, 1, "", "xpu"], [65, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[66, 1, 1, "", "assert_is_in"], [66, 1, 1, "", "cardinality"], [66, 1, 1, "", "clear_device_"], [66, 1, 1, "", "clone"], [66, 1, 1, "", "contains"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "device"], [66, 1, 1, "", "encode"], [66, 1, 1, "", "enumerate"], [66, 1, 1, "", "expand"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "implements_for_spec"], [66, 1, 1, "", "index"], [66, 1, 1, "", "is_in"], [66, 1, 1, "", "make_neg_dim"], [66, 4, 1, "", "ndim"], [66, 1, 1, "", "ndimension"], [66, 1, 1, "", "one"], [66, 1, 1, "", "ones"], [66, 1, 1, "", "project"], [66, 1, 1, "", "rand"], [66, 1, 1, "", "reshape"], [66, 1, 1, "", "sample"], [66, 1, 1, "", "squeeze"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_numpy"], [66, 1, 1, "", "type_check"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "unsqueeze"], [66, 1, 1, "", "view"], [66, 1, 1, "", "zero"], [66, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[67, 1, 1, "", "assert_is_in"], [67, 1, 1, "", "cardinality"], [67, 1, 1, "", "clear_device_"], [67, 1, 1, "", "clone"], [67, 1, 1, "", "contains"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 4, 1, "", "device"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "encode"], [67, 1, 1, "", "enumerate"], [67, 1, 1, "", "expand"], [67, 1, 1, "", "flatten"], [67, 1, 1, "", "get"], [67, 1, 1, "", "implements_for_spec"], [67, 1, 1, "", "index"], [67, 1, 1, "", "is_empty"], [67, 1, 1, "", "is_in"], [67, 1, 1, "", "items"], [67, 1, 1, "", "keys"], [67, 1, 1, "", "lock_"], [67, 1, 1, "", "make_neg_dim"], [67, 4, 1, "", "ndim"], [67, 1, 1, "", "ndimension"], [67, 1, 1, "", "one"], [67, 1, 1, "", "ones"], [67, 1, 1, "", "pop"], [67, 1, 1, "", "project"], [67, 1, 1, "", "rand"], [67, 1, 1, "", "reshape"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "separates"], [67, 1, 1, "", "set"], [67, 1, 1, "", "squeeze"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_numpy"], [67, 1, 1, "", "type_check"], [67, 1, 1, "", "unflatten"], [67, 1, 1, "", "unlock_"], [67, 1, 1, "", "unsqueeze"], [67, 1, 1, "", "values"], [67, 1, 1, "", "view"], [67, 1, 1, "", "zero"], [67, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[70, 1, 1, "", "add_module"], [70, 1, 1, "", "apply"], [70, 1, 1, "", "bfloat16"], [70, 1, 1, "", "buffers"], [70, 1, 1, "", "children"], [70, 1, 1, "", "compile"], [70, 1, 1, "", "cpu"], [70, 1, 1, "", "cuda"], [70, 1, 1, "", "double"], [70, 1, 1, "", "eval"], [70, 1, 1, "", "extra_repr"], [70, 1, 1, "", "float"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "from_tensordict_pair"], [70, 1, 1, "", "get_buffer"], [70, 1, 1, "", "get_extra_state"], [70, 1, 1, "", "get_parameter"], [70, 1, 1, "", "get_submodule"], [70, 1, 1, "", "half"], [70, 1, 1, "", "ipu"], [70, 1, 1, "", "is_tdmodule_compatible"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "modules"], [70, 1, 1, "", "mtia"], [70, 1, 1, "", "named_buffers"], [70, 1, 1, "", "named_children"], [70, 1, 1, "", "named_modules"], [70, 1, 1, "", "named_parameters"], [70, 1, 1, "", "parameters"], [70, 1, 1, "", "register_backward_hook"], [70, 1, 1, "", "register_buffer"], [70, 1, 1, "", "register_forward_hook"], [70, 1, 1, "", "register_forward_pre_hook"], [70, 1, 1, "", "register_full_backward_hook"], [70, 1, 1, "", "register_full_backward_pre_hook"], [70, 1, 1, "", "register_load_state_dict_post_hook"], [70, 1, 1, "", "register_load_state_dict_pre_hook"], [70, 1, 1, "", "register_module"], [70, 1, 1, "", "register_parameter"], [70, 1, 1, "", "register_state_dict_post_hook"], [70, 1, 1, "", "register_state_dict_pre_hook"], [70, 1, 1, "", "requires_grad_"], [70, 1, 1, "", "reset_out_keys"], [70, 1, 1, "", "reset_parameters_recursive"], [70, 1, 1, "", "select_out_keys"], [70, 1, 1, "", "set_extra_state"], [70, 1, 1, "", "set_submodule"], [70, 1, 1, "", "share_memory"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "to"], [70, 1, 1, "", "to_empty"], [70, 1, 1, "", "train"], [70, 1, 1, "", "type"], [70, 1, 1, "", "xpu"], [70, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[71, 1, 1, "", "add"], [71, 1, 1, "", "append_transform"], [71, 1, 1, "", "dump"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "empty"], [71, 1, 1, "", "extend"], [71, 1, 1, "", "insert_transform"], [71, 1, 1, "", "load"], [71, 1, 1, "", "loads"], [71, 1, 1, "", "register_load_hook"], [71, 1, 1, "", "register_save_hook"], [71, 1, 1, "", "sample"], [71, 4, 1, "", "sampler"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set_sampler"], [71, 1, 1, "", "set_storage"], [71, 1, 1, "", "set_writer"], [71, 4, 1, "", "storage"], [71, 4, 1, "", "write_count"], [71, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[72, 1, 1, "", "add"], [72, 1, 1, "", "append_transform"], [72, 1, 1, "", "dump"], [72, 1, 1, "", "dumps"], [72, 1, 1, "", "empty"], [72, 1, 1, "", "extend"], [72, 1, 1, "", "insert_transform"], [72, 1, 1, "", "load"], [72, 1, 1, "", "loads"], [72, 1, 1, "", "register_load_hook"], [72, 1, 1, "", "register_save_hook"], [72, 1, 1, "", "sample"], [72, 4, 1, "", "sampler"], [72, 1, 1, "", "save"], [72, 1, 1, "", "set_sampler"], [72, 1, 1, "", "set_storage"], [72, 1, 1, "", "set_writer"], [72, 4, 1, "", "storage"], [72, 4, 1, "", "write_count"], [72, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[76, 1, 1, "", "dataset_to_tensordict"], [76, 1, 1, "", "load"]], "torchrl.data.Tree": [[77, 4, 1, "", "branching_action"], [77, 4, 1, "", "device"], [77, 1, 1, "", "dumps"], [77, 1, 1, "", "edges"], [77, 1, 1, "", "fields"], [77, 1, 1, "", "from_tensordict"], [77, 4, 1, "", "full_action_spec"], [77, 4, 1, "", "full_done_spec"], [77, 4, 1, "", "full_observation_spec"], [77, 4, 1, "", "full_reward_spec"], [77, 4, 1, "", "full_state_spec"], [77, 1, 1, "", "fully_expanded"], [77, 1, 1, "", "get"], [77, 1, 1, "", "get_vertex_by_hash"], [77, 1, 1, "", "get_vertex_by_id"], [77, 4, 1, "", "is_terminal"], [77, 1, 1, "", "load"], [77, 1, 1, "", "load_"], [77, 1, 1, "", "load_memmap"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "make_node"], [77, 1, 1, "", "max_length"], [77, 1, 1, "", "memmap"], [77, 1, 1, "", "memmap_"], [77, 1, 1, "", "memmap_like"], [77, 1, 1, "", "memmap_refresh_"], [77, 4, 1, "", "node_observation"], [77, 4, 1, "", "node_observations"], [77, 4, 1, "", "num_children"], [77, 1, 1, "", "num_vertices"], [77, 4, 1, "", "parent"], [77, 1, 1, "", "plot"], [77, 4, 1, "", "prev_action"], [77, 1, 1, "", "rollout_from_path"], [77, 1, 1, "", "save"], [77, 4, 1, "", "selected_actions"], [77, 1, 1, "", "set"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to_string"], [77, 1, 1, "", "to_tensordict"], [77, 1, 1, "", "unbind"], [77, 1, 1, "", "valid_paths"], [77, 1, 1, "", "vertices"], [77, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "cardinality"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[79, 1, 1, "", "assert_is_in"], [79, 1, 1, "", "cardinality"], [79, 1, 1, "", "clear_device_"], [79, 1, 1, "", "clone"], [79, 1, 1, "", "contains"], [79, 1, 1, "", "cpu"], [79, 1, 1, "", "cuda"], [79, 4, 1, "", "device"], [79, 1, 1, "", "encode"], [79, 1, 1, "", "enumerate"], [79, 1, 1, "", "expand"], [79, 1, 1, "", "flatten"], [79, 1, 1, "", "implements_for_spec"], [79, 1, 1, "", "index"], [79, 1, 1, "", "is_in"], [79, 1, 1, "", "make_neg_dim"], [79, 4, 1, "", "ndim"], [79, 1, 1, "", "ndimension"], [79, 1, 1, "", "one"], [79, 1, 1, "", "ones"], [79, 1, 1, "", "project"], [79, 1, 1, "", "rand"], [79, 1, 1, "", "reshape"], [79, 1, 1, "", "sample"], [79, 1, 1, "", "squeeze"], [79, 1, 1, "", "to"], [79, 1, 1, "", "to_numpy"], [79, 1, 1, "", "type_check"], [79, 1, 1, "", "unflatten"], [79, 1, 1, "", "unsqueeze"], [79, 1, 1, "", "view"], [79, 1, 1, "", "zero"], [79, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[80, 1, 1, "", "assert_is_in"], [80, 1, 1, "", "cardinality"], [80, 1, 1, "", "clear_device_"], [80, 1, 1, "", "clone"], [80, 1, 1, "", "contains"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 4, 1, "", "device"], [80, 1, 1, "", "encode"], [80, 1, 1, "", "enumerate"], [80, 1, 1, "", "expand"], [80, 1, 1, "", "flatten"], [80, 1, 1, "", "implements_for_spec"], [80, 1, 1, "", "index"], [80, 1, 1, "", "is_in"], [80, 1, 1, "", "make_neg_dim"], [80, 4, 1, "", "ndim"], [80, 1, 1, "", "ndimension"], [80, 1, 1, "", "one"], [80, 1, 1, "", "ones"], [80, 1, 1, "", "project"], [80, 1, 1, "", "rand"], [80, 1, 1, "", "reshape"], [80, 1, 1, "", "sample"], [80, 1, 1, "", "squeeze"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_numpy"], [80, 1, 1, "", "type_check"], [80, 1, 1, "", "unflatten"], [80, 1, 1, "", "unsqueeze"], [80, 1, 1, "", "view"], [80, 1, 1, "", "zero"], [80, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[81, 1, 1, "", "assert_is_in"], [81, 1, 1, "", "cardinality"], [81, 1, 1, "", "clear_device_"], [81, 1, 1, "", "clone"], [81, 1, 1, "", "contains"], [81, 1, 1, "", "cpu"], [81, 1, 1, "", "cuda"], [81, 4, 1, "", "device"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "enumerate"], [81, 1, 1, "", "expand"], [81, 1, 1, "", "flatten"], [81, 1, 1, "", "implements_for_spec"], [81, 1, 1, "", "index"], [81, 1, 1, "", "is_in"], [81, 1, 1, "", "make_neg_dim"], [81, 4, 1, "", "ndim"], [81, 1, 1, "", "ndimension"], [81, 1, 1, "", "one"], [81, 1, 1, "", "ones"], [81, 1, 1, "", "project"], [81, 1, 1, "", "rand"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "sample"], [81, 1, 1, "", "squeeze"], [81, 1, 1, "", "to"], [81, 1, 1, "", "to_numpy"], [81, 1, 1, "", "type_check"], [81, 1, 1, "", "unflatten"], [81, 1, 1, "", "unsqueeze"], [81, 1, 1, "", "view"], [81, 1, 1, "", "zero"], [81, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 4, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 4, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[88, 0, 1, "", "FlatStorageCheckpointer"], [89, 0, 1, "", "H5StorageCheckpointer"], [90, 0, 1, "", "ImmutableDatasetWriter"], [91, 0, 1, "", "LazyMemmapStorage"], [92, 0, 1, "", "LazyStackStorage"], [93, 0, 1, "", "LazyTensorStorage"], [94, 0, 1, "", "ListStorage"], [95, 0, 1, "", "ListStorageCheckpointer"], [96, 0, 1, "", "NestedStorageCheckpointer"], [97, 0, 1, "", "PrioritizedSampler"], [98, 0, 1, "", "PrioritizedSliceSampler"], [99, 0, 1, "", "RandomSampler"], [100, 0, 1, "", "ReplayBufferEnsemble"], [101, 0, 1, "", "RoundRobinWriter"], [102, 0, 1, "", "Sampler"], [103, 0, 1, "", "SamplerEnsemble"], [104, 0, 1, "", "SamplerWithoutReplacement"], [105, 0, 1, "", "SliceSampler"], [106, 0, 1, "", "SliceSamplerWithoutReplacement"], [107, 0, 1, "", "Storage"], [108, 0, 1, "", "StorageCheckpointerBase"], [109, 0, 1, "", "StorageEnsemble"], [110, 0, 1, "", "StorageEnsembleCheckpointer"], [111, 0, 1, "", "TensorDictMaxValueWriter"], [112, 0, 1, "", "TensorDictRoundRobinWriter"], [113, 0, 1, "", "TensorStorage"], [114, 0, 1, "", "TensorStorageCheckpointer"], [115, 0, 1, "", "Writer"], [116, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[90, 1, 1, "", "add"], [90, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[92, 1, 1, "", "attach"], [92, 1, 1, "", "dump"], [92, 1, 1, "", "load"], [92, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[97, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[98, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[100, 1, 1, "", "add"], [100, 1, 1, "", "append_transform"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "dumps"], [100, 1, 1, "", "empty"], [100, 1, 1, "", "extend"], [100, 1, 1, "", "insert_transform"], [100, 1, 1, "", "load"], [100, 1, 1, "", "loads"], [100, 1, 1, "", "register_load_hook"], [100, 1, 1, "", "register_save_hook"], [100, 1, 1, "", "sample"], [100, 4, 1, "", "sampler"], [100, 1, 1, "", "save"], [100, 1, 1, "", "set_sampler"], [100, 1, 1, "", "set_storage"], [100, 1, 1, "", "set_writer"], [100, 4, 1, "", "storage"], [100, 4, 1, "", "write_count"], [100, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[101, 1, 1, "", "add"], [101, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[107, 1, 1, "", "attach"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "load"], [107, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[111, 1, 1, "", "add"], [111, 1, 1, "", "extend"], [111, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[113, 1, 1, "", "attach"], [113, 1, 1, "", "dump"], [113, 1, 1, "", "load"], [113, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[115, 1, 1, "", "add"], [115, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.envs": [[117, 2, 1, "", "BraxEnv"], [118, 2, 1, "", "BraxWrapper"], [119, 0, 1, "", "ChessEnv"], [120, 2, 1, "", "DMControlEnv"], [121, 2, 1, "", "DMControlWrapper"], [122, 0, 1, "", "EnvBase"], [123, 0, 1, "", "EnvCreator"], [124, 0, 1, "", "EnvMetaData"], [125, 2, 1, "", "GymEnv"], [126, 0, 1, "", "GymLikeEnv"], [127, 2, 1, "", "GymWrapper"], [128, 2, 1, "", "HabitatEnv"], [129, 2, 1, "", "IsaacGymEnv"], [130, 2, 1, "", "IsaacGymWrapper"], [131, 2, 1, "", "JumanjiEnv"], [132, 2, 1, "", "JumanjiWrapper"], [133, 0, 1, "", "LLMEnv"], [134, 0, 1, "", "LLMHashingEnv"], [135, 2, 1, "", "MOGymEnv"], [136, 2, 1, "", "MOGymWrapper"], [137, 2, 1, "", "MarlGroupMapType"], [138, 2, 1, "", "MeltingpotEnv"], [139, 2, 1, "", "MeltingpotWrapper"], [140, 2, 1, "", "ModelBasedEnvBase"], [141, 2, 1, "", "MultiThreadedEnv"], [142, 2, 1, "", "MultiThreadedEnvWrapper"], [143, 2, 1, "", "OpenMLEnv"], [144, 2, 1, "", "OpenSpielEnv"], [145, 2, 1, "", "OpenSpielWrapper"], [146, 0, 1, "", "ParallelEnv"], [147, 0, 1, "", "PendulumEnv"], [148, 2, 1, "", "PettingZooEnv"], [149, 2, 1, "", "PettingZooWrapper"], [150, 2, 1, "", "RandomPolicy"], [151, 2, 1, "", "RoboHiveEnv"], [152, 2, 1, "", "SMACv2Env"], [153, 2, 1, "", "SMACv2Wrapper"], [154, 0, 1, "", "SerialEnv"], [155, 0, 1, "", "TicTacToeEnv"], [156, 2, 1, "", "UnityMLAgentsEnv"], [157, 2, 1, "", "UnityMLAgentsWrapper"], [158, 2, 1, "", "VmasEnv"], [159, 2, 1, "", "VmasWrapper"], [160, 2, 1, "", "check_env_specs"], [161, 2, 1, "", "check_marl_grouping"], [162, 2, 1, "", "exploration_type"], [163, 2, 1, "", "get_available_libraries"], [164, 2, 1, "", "gym_backend"], [165, 2, 1, "", "make_composite_from_td"], [140, 1, 1, "", "rand_step"], [168, 2, 1, "", "register_gym_spec_conversion"], [140, 1, 1, "", "reset"], [140, 1, 1, "", "rollout"], [169, 2, 1, "", "set_exploration_type"], [170, 2, 1, "", "set_gym_backend"], [140, 1, 1, "", "set_seed"], [140, 1, 1, "", "step"], [171, 2, 1, "", "step_mdp"], [172, 2, 1, "", "terminated_or_truncated"]], "torchrl.envs.ChessEnv": [[119, 4, 1, "", "action_key"], [119, 4, 1, "", "action_keys"], [119, 4, 1, "", "action_spec"], [119, 4, 1, "", "action_spec_unbatched"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "all_actions"], [119, 1, 1, "", "any_done"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_specs_"], [119, 4, 1, "", "batch_dims"], [119, 4, 1, "", "batch_locked"], [119, 4, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "cardinality"], [119, 1, 1, "", "check_env_specs"], [119, 1, 1, "", "children"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 4, 1, "", "done_key"], [119, 4, 1, "", "done_keys"], [119, 4, 1, "", "done_keys_groups"], [119, 4, 1, "", "done_spec"], [119, 4, 1, "", "done_spec_unbatched"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 4, 1, "", "full_action_spec"], [119, 4, 1, "", "full_action_spec_unbatched"], [119, 4, 1, "", "full_done_spec"], [119, 4, 1, "", "full_done_spec_unbatched"], [119, 4, 1, "", "full_observation_spec_unbatched"], [119, 4, 1, "", "full_reward_spec"], [119, 4, 1, "", "full_reward_spec_unbatched"], [119, 4, 1, "", "full_state_spec"], [119, 4, 1, "", "full_state_spec_unbatched"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_legal_moves"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 4, 1, "", "input_spec"], [119, 4, 1, "", "input_spec_unbatched"], [119, 1, 1, "", "ipu"], [119, 4, 1, "", "is_spec_locked"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 4, 1, "", "observation_keys"], [119, 4, 1, "", "observation_spec"], [119, 4, 1, "", "observation_spec_unbatched"], [119, 4, 1, "", "output_spec"], [119, 4, 1, "", "output_spec_unbatched"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 4, 1, "", "reset_keys"], [119, 4, 1, "", "reward_key"], [119, 4, 1, "", "reward_keys"], [119, 4, 1, "", "reward_spec"], [119, 4, 1, "", "reward_spec_unbatched"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_spec_lock_"], [119, 1, 1, "", "set_submodule"], [119, 4, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 4, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 4, 1, "", "state_keys"], [119, 4, 1, "", "state_spec"], [119, 4, 1, "", "state_spec_unbatched"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "step_mdp"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[122, 4, 1, "", "action_key"], [122, 4, 1, "", "action_keys"], [122, 4, 1, "", "action_spec"], [122, 4, 1, "", "action_spec_unbatched"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "all_actions"], [122, 1, 1, "", "any_done"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 1, 1, "", "auto_specs_"], [122, 4, 1, "", "batch_dims"], [122, 4, 1, "", "batch_locked"], [122, 4, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "cardinality"], [122, 1, 1, "", "check_env_specs"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 4, 1, "", "done_key"], [122, 4, 1, "", "done_keys"], [122, 4, 1, "", "done_keys_groups"], [122, 4, 1, "", "done_spec"], [122, 4, 1, "", "done_spec_unbatched"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 4, 1, "", "full_action_spec"], [122, 4, 1, "", "full_action_spec_unbatched"], [122, 4, 1, "", "full_done_spec"], [122, 4, 1, "", "full_done_spec_unbatched"], [122, 4, 1, "", "full_observation_spec_unbatched"], [122, 4, 1, "", "full_reward_spec"], [122, 4, 1, "", "full_reward_spec_unbatched"], [122, 4, 1, "", "full_state_spec"], [122, 4, 1, "", "full_state_spec_unbatched"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 4, 1, "", "input_spec"], [122, 4, 1, "", "input_spec_unbatched"], [122, 1, 1, "", "ipu"], [122, 4, 1, "", "is_spec_locked"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 4, 1, "", "observation_keys"], [122, 4, 1, "", "observation_spec"], [122, 4, 1, "", "observation_spec_unbatched"], [122, 4, 1, "", "output_spec"], [122, 4, 1, "", "output_spec_unbatched"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "id0", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "id1", "reset"], [122, 4, 1, "", "reset_keys"], [122, 4, 1, "", "reward_key"], [122, 4, 1, "", "reward_keys"], [122, 4, 1, "", "reward_spec"], [122, 4, 1, "", "reward_spec_unbatched"], [122, 1, 1, "id2", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "id3", "set_seed"], [122, 1, 1, "", "set_spec_lock_"], [122, 1, 1, "", "set_submodule"], [122, 4, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 4, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 4, 1, "", "state_keys"], [122, 4, 1, "", "state_spec"], [122, 4, 1, "", "state_spec_unbatched"], [122, 1, 1, "id4", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "step_mdp"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[123, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[126, 4, 1, "", "action_key"], [126, 4, 1, "", "action_keys"], [126, 4, 1, "", "action_spec"], [126, 4, 1, "", "action_spec_unbatched"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "all_actions"], [126, 1, 1, "", "any_done"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_register_info_dict"], [126, 1, 1, "", "auto_specs_"], [126, 4, 1, "", "batch_dims"], [126, 4, 1, "", "batch_locked"], [126, 4, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "cardinality"], [126, 1, 1, "", "check_env_specs"], [126, 1, 1, "", "children"], [126, 1, 1, "", "close"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 4, 1, "", "done_key"], [126, 4, 1, "", "done_keys"], [126, 4, 1, "", "done_keys_groups"], [126, 4, 1, "", "done_spec"], [126, 4, 1, "", "done_spec_unbatched"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 4, 1, "", "full_action_spec"], [126, 4, 1, "", "full_action_spec_unbatched"], [126, 4, 1, "", "full_done_spec"], [126, 4, 1, "", "full_done_spec_unbatched"], [126, 4, 1, "", "full_observation_spec_unbatched"], [126, 4, 1, "", "full_reward_spec"], [126, 4, 1, "", "full_reward_spec_unbatched"], [126, 4, 1, "", "full_state_spec"], [126, 4, 1, "", "full_state_spec_unbatched"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 4, 1, "", "input_spec"], [126, 4, 1, "", "input_spec_unbatched"], [126, 1, 1, "", "ipu"], [126, 4, 1, "", "is_spec_locked"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 4, 1, "", "observation_keys"], [126, 4, 1, "", "observation_spec"], [126, 4, 1, "", "observation_spec_unbatched"], [126, 4, 1, "", "output_spec"], [126, 4, 1, "", "output_spec_unbatched"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "", "rand_step"], [126, 1, 1, "", "read_action"], [126, 1, 1, "", "read_done"], [126, 1, 1, "", "read_obs"], [126, 1, 1, "", "read_reward"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "", "reset"], [126, 4, 1, "", "reset_keys"], [126, 4, 1, "", "reward_key"], [126, 4, 1, "", "reward_keys"], [126, 4, 1, "", "reward_spec"], [126, 4, 1, "", "reward_spec_unbatched"], [126, 1, 1, "", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "", "set_info_dict_reader"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "set_spec_lock_"], [126, 1, 1, "", "set_submodule"], [126, 4, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 4, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 4, 1, "", "state_keys"], [126, 4, 1, "", "state_spec"], [126, 4, 1, "", "state_spec_unbatched"], [126, 1, 1, "", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "step_mdp"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[133, 4, 1, "", "action_key"], [133, 4, 1, "", "action_keys"], [133, 4, 1, "", "action_spec"], [133, 4, 1, "", "action_spec_unbatched"], [133, 1, 1, "", "add_module"], [133, 1, 1, "", "add_truncated_keys"], [133, 1, 1, "", "all_actions"], [133, 1, 1, "", "any_done"], [133, 1, 1, "", "append_transform"], [133, 1, 1, "", "apply"], [133, 1, 1, "", "auto_specs_"], [133, 4, 1, "", "batch_dims"], [133, 4, 1, "", "batch_locked"], [133, 4, 1, "", "batch_size"], [133, 1, 1, "", "bfloat16"], [133, 1, 1, "", "buffers"], [133, 1, 1, "", "cardinality"], [133, 1, 1, "", "check_env_specs"], [133, 1, 1, "", "children"], [133, 1, 1, "", "compile"], [133, 1, 1, "", "cpu"], [133, 1, 1, "", "cuda"], [133, 4, 1, "", "done_key"], [133, 4, 1, "", "done_keys"], [133, 4, 1, "", "done_keys_groups"], [133, 4, 1, "", "done_spec"], [133, 4, 1, "", "done_spec_unbatched"], [133, 1, 1, "", "double"], [133, 1, 1, "", "empty_cache"], [133, 1, 1, "", "eval"], [133, 1, 1, "", "extra_repr"], [133, 1, 1, "", "fake_tensordict"], [133, 1, 1, "", "float"], [133, 1, 1, "", "forward"], [133, 1, 1, "id0", "from_dataloader"], [133, 4, 1, "", "full_action_spec"], [133, 4, 1, "", "full_action_spec_unbatched"], [133, 4, 1, "", "full_done_spec"], [133, 4, 1, "", "full_done_spec_unbatched"], [133, 4, 1, "", "full_observation_spec_unbatched"], [133, 4, 1, "", "full_reward_spec"], [133, 4, 1, "", "full_reward_spec_unbatched"], [133, 4, 1, "", "full_state_spec"], [133, 4, 1, "", "full_state_spec_unbatched"], [133, 1, 1, "", "get_buffer"], [133, 1, 1, "", "get_extra_state"], [133, 1, 1, "", "get_parameter"], [133, 1, 1, "", "get_submodule"], [133, 1, 1, "", "half"], [133, 4, 1, "", "input_spec"], [133, 4, 1, "", "input_spec_unbatched"], [133, 1, 1, "", "ipu"], [133, 4, 1, "", "is_spec_locked"], [133, 1, 1, "", "load_state_dict"], [133, 1, 1, "", "maybe_reset"], [133, 1, 1, "", "modules"], [133, 1, 1, "", "mtia"], [133, 1, 1, "", "named_buffers"], [133, 1, 1, "", "named_children"], [133, 1, 1, "", "named_modules"], [133, 1, 1, "", "named_parameters"], [133, 4, 1, "", "observation_keys"], [133, 4, 1, "", "observation_spec"], [133, 4, 1, "", "observation_spec_unbatched"], [133, 4, 1, "", "output_spec"], [133, 4, 1, "", "output_spec_unbatched"], [133, 1, 1, "", "parameters"], [133, 1, 1, "", "rand_action"], [133, 1, 1, "", "rand_step"], [133, 1, 1, "", "register_backward_hook"], [133, 1, 1, "", "register_buffer"], [133, 1, 1, "", "register_forward_hook"], [133, 1, 1, "", "register_forward_pre_hook"], [133, 1, 1, "", "register_full_backward_hook"], [133, 1, 1, "", "register_full_backward_pre_hook"], [133, 1, 1, "", "register_gym"], [133, 1, 1, "", "register_load_state_dict_post_hook"], [133, 1, 1, "", "register_load_state_dict_pre_hook"], [133, 1, 1, "", "register_module"], [133, 1, 1, "", "register_parameter"], [133, 1, 1, "", "register_state_dict_post_hook"], [133, 1, 1, "", "register_state_dict_pre_hook"], [133, 1, 1, "", "requires_grad_"], [133, 1, 1, "", "reset"], [133, 4, 1, "", "reset_keys"], [133, 4, 1, "", "reward_key"], [133, 4, 1, "", "reward_keys"], [133, 4, 1, "", "reward_spec"], [133, 4, 1, "", "reward_spec_unbatched"], [133, 1, 1, "", "rollout"], [133, 1, 1, "", "set_extra_state"], [133, 1, 1, "", "set_seed"], [133, 1, 1, "", "set_spec_lock_"], [133, 1, 1, "", "set_submodule"], [133, 4, 1, "", "shape"], [133, 1, 1, "", "share_memory"], [133, 4, 1, "", "specs"], [133, 1, 1, "", "state_dict"], [133, 4, 1, "", "state_keys"], [133, 4, 1, "", "state_spec"], [133, 4, 1, "", "state_spec_unbatched"], [133, 1, 1, "", "step"], [133, 1, 1, "", "step_and_maybe_reset"], [133, 1, 1, "", "step_mdp"], [133, 1, 1, "", "to"], [133, 1, 1, "", "to_empty"], [133, 1, 1, "", "train"], [133, 1, 1, "", "type"], [133, 1, 1, "", "xpu"], [133, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[134, 4, 1, "", "action_key"], [134, 4, 1, "", "action_keys"], [134, 4, 1, "", "action_spec"], [134, 4, 1, "", "action_spec_unbatched"], [134, 1, 1, "", "add_module"], [134, 1, 1, "", "add_truncated_keys"], [134, 1, 1, "", "all_actions"], [134, 1, 1, "", "any_done"], [134, 1, 1, "", "append_transform"], [134, 1, 1, "", "apply"], [134, 1, 1, "", "auto_specs_"], [134, 4, 1, "", "batch_dims"], [134, 4, 1, "", "batch_locked"], [134, 4, 1, "", "batch_size"], [134, 1, 1, "", "bfloat16"], [134, 1, 1, "", "buffers"], [134, 1, 1, "", "cardinality"], [134, 1, 1, "", "check_env_specs"], [134, 1, 1, "", "children"], [134, 1, 1, "", "compile"], [134, 1, 1, "", "cpu"], [134, 1, 1, "", "cuda"], [134, 4, 1, "", "done_key"], [134, 4, 1, "", "done_keys"], [134, 4, 1, "", "done_keys_groups"], [134, 4, 1, "", "done_spec"], [134, 4, 1, "", "done_spec_unbatched"], [134, 1, 1, "", "double"], [134, 1, 1, "", "empty_cache"], [134, 1, 1, "", "eval"], [134, 1, 1, "", "extra_repr"], [134, 1, 1, "", "fake_tensordict"], [134, 1, 1, "", "float"], [134, 1, 1, "", "forward"], [134, 4, 1, "", "full_action_spec"], [134, 4, 1, "", "full_action_spec_unbatched"], [134, 4, 1, "", "full_done_spec"], [134, 4, 1, "", "full_done_spec_unbatched"], [134, 4, 1, "", "full_observation_spec_unbatched"], [134, 4, 1, "", "full_reward_spec"], [134, 4, 1, "", "full_reward_spec_unbatched"], [134, 4, 1, "", "full_state_spec"], [134, 4, 1, "", "full_state_spec_unbatched"], [134, 1, 1, "", "get_buffer"], [134, 1, 1, "", "get_extra_state"], [134, 1, 1, "", "get_parameter"], [134, 1, 1, "", "get_submodule"], [134, 1, 1, "", "half"], [134, 4, 1, "", "input_spec"], [134, 4, 1, "", "input_spec_unbatched"], [134, 1, 1, "", "ipu"], [134, 4, 1, "", "is_spec_locked"], [134, 1, 1, "", "load_state_dict"], [134, 1, 1, "", "make_tensordict"], [134, 1, 1, "", "maybe_reset"], [134, 1, 1, "", "modules"], [134, 1, 1, "", "mtia"], [134, 1, 1, "", "named_buffers"], [134, 1, 1, "", "named_children"], [134, 1, 1, "", "named_modules"], [134, 1, 1, "", "named_parameters"], [134, 4, 1, "", "observation_keys"], [134, 4, 1, "", "observation_spec"], [134, 4, 1, "", "observation_spec_unbatched"], [134, 4, 1, "", "output_spec"], [134, 4, 1, "", "output_spec_unbatched"], [134, 1, 1, "", "parameters"], [134, 1, 1, "", "rand_action"], [134, 1, 1, "", "rand_step"], [134, 1, 1, "", "register_backward_hook"], [134, 1, 1, "", "register_buffer"], [134, 1, 1, "", "register_forward_hook"], [134, 1, 1, "", "register_forward_pre_hook"], [134, 1, 1, "", "register_full_backward_hook"], [134, 1, 1, "", "register_full_backward_pre_hook"], [134, 1, 1, "", "register_gym"], [134, 1, 1, "", "register_load_state_dict_post_hook"], [134, 1, 1, "", "register_load_state_dict_pre_hook"], [134, 1, 1, "", "register_module"], [134, 1, 1, "", "register_parameter"], [134, 1, 1, "", "register_state_dict_post_hook"], [134, 1, 1, "", "register_state_dict_pre_hook"], [134, 1, 1, "", "requires_grad_"], [134, 1, 1, "", "reset"], [134, 4, 1, "", "reset_keys"], [134, 4, 1, "", "reward_key"], [134, 4, 1, "", "reward_keys"], [134, 4, 1, "", "reward_spec"], [134, 4, 1, "", "reward_spec_unbatched"], [134, 1, 1, "", "rollout"], [134, 1, 1, "", "set_extra_state"], [134, 1, 1, "", "set_seed"], [134, 1, 1, "", "set_spec_lock_"], [134, 1, 1, "", "set_submodule"], [134, 4, 1, "", "shape"], [134, 1, 1, "", "share_memory"], [134, 4, 1, "", "specs"], [134, 1, 1, "", "state_dict"], [134, 4, 1, "", "state_keys"], [134, 4, 1, "", "state_spec"], [134, 4, 1, "", "state_spec_unbatched"], [134, 1, 1, "", "step"], [134, 1, 1, "", "step_and_maybe_reset"], [134, 1, 1, "", "step_mdp"], [134, 1, 1, "", "to"], [134, 1, 1, "", "to_empty"], [134, 1, 1, "", "train"], [134, 1, 1, "", "type"], [134, 1, 1, "", "xpu"], [134, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[146, 4, 1, "", "action_key"], [146, 4, 1, "", "action_keys"], [146, 4, 1, "", "action_spec"], [146, 4, 1, "", "action_spec_unbatched"], [146, 1, 1, "", "add_module"], [146, 1, 1, "", "add_truncated_keys"], [146, 1, 1, "", "all_actions"], [146, 1, 1, "", "any_done"], [146, 1, 1, "", "append_transform"], [146, 1, 1, "", "apply"], [146, 1, 1, "", "auto_specs_"], [146, 4, 1, "", "batch_dims"], [146, 4, 1, "", "batch_locked"], [146, 4, 1, "", "batch_size"], [146, 1, 1, "", "bfloat16"], [146, 1, 1, "", "buffers"], [146, 1, 1, "", "cardinality"], [146, 1, 1, "", "check_env_specs"], [146, 1, 1, "", "children"], [146, 1, 1, "", "compile"], [146, 1, 1, "", "cpu"], [146, 1, 1, "", "cuda"], [146, 4, 1, "", "done_key"], [146, 4, 1, "", "done_keys"], [146, 4, 1, "", "done_keys_groups"], [146, 4, 1, "", "done_spec"], [146, 4, 1, "", "done_spec_unbatched"], [146, 1, 1, "", "double"], [146, 1, 1, "", "empty_cache"], [146, 1, 1, "", "eval"], [146, 1, 1, "", "extra_repr"], [146, 1, 1, "", "fake_tensordict"], [146, 1, 1, "", "float"], [146, 1, 1, "", "forward"], [146, 4, 1, "", "full_action_spec"], [146, 4, 1, "", "full_action_spec_unbatched"], [146, 4, 1, "", "full_done_spec"], [146, 4, 1, "", "full_done_spec_unbatched"], [146, 4, 1, "", "full_observation_spec_unbatched"], [146, 4, 1, "", "full_reward_spec"], [146, 4, 1, "", "full_reward_spec_unbatched"], [146, 4, 1, "", "full_state_spec"], [146, 4, 1, "", "full_state_spec_unbatched"], [146, 1, 1, "", "get_buffer"], [146, 1, 1, "", "get_extra_state"], [146, 1, 1, "", "get_parameter"], [146, 1, 1, "", "get_submodule"], [146, 1, 1, "", "half"], [146, 4, 1, "", "input_spec"], [146, 4, 1, "", "input_spec_unbatched"], [146, 1, 1, "", "ipu"], [146, 4, 1, "", "is_spec_locked"], [146, 1, 1, "", "load_state_dict"], [146, 1, 1, "", "maybe_reset"], [146, 1, 1, "", "modules"], [146, 1, 1, "", "mtia"], [146, 1, 1, "", "named_buffers"], [146, 1, 1, "", "named_children"], [146, 1, 1, "", "named_modules"], [146, 1, 1, "", "named_parameters"], [146, 4, 1, "", "observation_keys"], [146, 4, 1, "", "observation_spec"], [146, 4, 1, "", "observation_spec_unbatched"], [146, 4, 1, "", "output_spec"], [146, 4, 1, "", "output_spec_unbatched"], [146, 1, 1, "", "parameters"], [146, 1, 1, "", "rand_action"], [146, 1, 1, "", "rand_step"], [146, 1, 1, "", "register_backward_hook"], [146, 1, 1, "", "register_buffer"], [146, 1, 1, "", "register_forward_hook"], [146, 1, 1, "", "register_forward_pre_hook"], [146, 1, 1, "", "register_full_backward_hook"], [146, 1, 1, "", "register_full_backward_pre_hook"], [146, 1, 1, "", "register_gym"], [146, 1, 1, "", "register_load_state_dict_post_hook"], [146, 1, 1, "", "register_load_state_dict_pre_hook"], [146, 1, 1, "", "register_module"], [146, 1, 1, "", "register_parameter"], [146, 1, 1, "", "register_state_dict_post_hook"], [146, 1, 1, "", "register_state_dict_pre_hook"], [146, 1, 1, "", "requires_grad_"], [146, 1, 1, "", "reset"], [146, 4, 1, "", "reset_keys"], [146, 4, 1, "", "reward_key"], [146, 4, 1, "", "reward_keys"], [146, 4, 1, "", "reward_spec"], [146, 4, 1, "", "reward_spec_unbatched"], [146, 1, 1, "", "rollout"], [146, 1, 1, "", "set_extra_state"], [146, 1, 1, "", "set_seed"], [146, 1, 1, "", "set_spec_lock_"], [146, 1, 1, "", "set_submodule"], [146, 4, 1, "", "shape"], [146, 1, 1, "", "share_memory"], [146, 4, 1, "", "specs"], [146, 1, 1, "", "state_dict"], [146, 4, 1, "", "state_keys"], [146, 4, 1, "", "state_spec"], [146, 4, 1, "", "state_spec_unbatched"], [146, 1, 1, "", "step"], [146, 1, 1, "", "step_and_maybe_reset"], [146, 1, 1, "", "step_mdp"], [146, 1, 1, "", "to"], [146, 1, 1, "", "to_empty"], [146, 1, 1, "", "train"], [146, 1, 1, "", "type"], [146, 1, 1, "", "update_kwargs"], [146, 1, 1, "", "xpu"], [146, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[147, 4, 1, "", "action_key"], [147, 4, 1, "", "action_keys"], [147, 4, 1, "", "action_spec"], [147, 4, 1, "", "action_spec_unbatched"], [147, 1, 1, "", "add_module"], [147, 1, 1, "", "add_truncated_keys"], [147, 1, 1, "", "all_actions"], [147, 1, 1, "", "any_done"], [147, 1, 1, "", "append_transform"], [147, 1, 1, "", "apply"], [147, 1, 1, "", "auto_specs_"], [147, 4, 1, "", "batch_dims"], [147, 4, 1, "", "batch_size"], [147, 1, 1, "", "bfloat16"], [147, 1, 1, "", "buffers"], [147, 1, 1, "", "cardinality"], [147, 1, 1, "", "check_env_specs"], [147, 1, 1, "", "children"], [147, 1, 1, "", "compile"], [147, 1, 1, "", "cpu"], [147, 1, 1, "", "cuda"], [147, 4, 1, "", "done_key"], [147, 4, 1, "", "done_keys"], [147, 4, 1, "", "done_keys_groups"], [147, 4, 1, "", "done_spec"], [147, 4, 1, "", "done_spec_unbatched"], [147, 1, 1, "", "double"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 1, 1, "", "extra_repr"], [147, 1, 1, "", "fake_tensordict"], [147, 1, 1, "", "float"], [147, 1, 1, "", "forward"], [147, 4, 1, "", "full_action_spec"], [147, 4, 1, "", "full_action_spec_unbatched"], [147, 4, 1, "", "full_done_spec"], [147, 4, 1, "", "full_done_spec_unbatched"], [147, 4, 1, "", "full_observation_spec_unbatched"], [147, 4, 1, "", "full_reward_spec"], [147, 4, 1, "", "full_reward_spec_unbatched"], [147, 4, 1, "", "full_state_spec"], [147, 4, 1, "", "full_state_spec_unbatched"], [147, 1, 1, "", "gen_params"], [147, 1, 1, "", "get_buffer"], [147, 1, 1, "", "get_extra_state"], [147, 1, 1, "", "get_parameter"], [147, 1, 1, "", "get_submodule"], [147, 1, 1, "", "half"], [147, 4, 1, "", "input_spec"], [147, 4, 1, "", "input_spec_unbatched"], [147, 1, 1, "", "ipu"], [147, 4, 1, "", "is_spec_locked"], [147, 1, 1, "", "load_state_dict"], [147, 1, 1, "", "maybe_reset"], [147, 1, 1, "", "modules"], [147, 1, 1, "", "mtia"], [147, 1, 1, "", "named_buffers"], [147, 1, 1, "", "named_children"], [147, 1, 1, "", "named_modules"], [147, 1, 1, "", "named_parameters"], [147, 4, 1, "", "observation_keys"], [147, 4, 1, "", "observation_spec"], [147, 4, 1, "", "observation_spec_unbatched"], [147, 4, 1, "", "output_spec"], [147, 4, 1, "", "output_spec_unbatched"], [147, 1, 1, "", "parameters"], [147, 1, 1, "", "rand_action"], [147, 1, 1, "", "rand_step"], [147, 1, 1, "", "register_backward_hook"], [147, 1, 1, "", "register_buffer"], [147, 1, 1, "", "register_forward_hook"], [147, 1, 1, "", "register_forward_pre_hook"], [147, 1, 1, "", "register_full_backward_hook"], [147, 1, 1, "", "register_full_backward_pre_hook"], [147, 1, 1, "", "register_gym"], [147, 1, 1, "", "register_load_state_dict_post_hook"], [147, 1, 1, "", "register_load_state_dict_pre_hook"], [147, 1, 1, "", "register_module"], [147, 1, 1, "", "register_parameter"], [147, 1, 1, "", "register_state_dict_post_hook"], [147, 1, 1, "", "register_state_dict_pre_hook"], [147, 1, 1, "", "requires_grad_"], [147, 1, 1, "", "reset"], [147, 4, 1, "", "reset_keys"], [147, 4, 1, "", "reward_key"], [147, 4, 1, "", "reward_keys"], [147, 4, 1, "", "reward_spec"], [147, 4, 1, "", "reward_spec_unbatched"], [147, 1, 1, "", "rollout"], [147, 1, 1, "", "set_extra_state"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "set_spec_lock_"], [147, 1, 1, "", "set_submodule"], [147, 4, 1, "", "shape"], [147, 1, 1, "", "share_memory"], [147, 4, 1, "", "specs"], [147, 1, 1, "", "state_dict"], [147, 4, 1, "", "state_keys"], [147, 4, 1, "", "state_spec"], [147, 4, 1, "", "state_spec_unbatched"], [147, 1, 1, "", "step"], [147, 1, 1, "", "step_and_maybe_reset"], [147, 1, 1, "", "step_mdp"], [147, 1, 1, "", "to"], [147, 1, 1, "", "to_empty"], [147, 1, 1, "", "train"], [147, 1, 1, "", "type"], [147, 1, 1, "", "xpu"], [147, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[154, 4, 1, "", "action_key"], [154, 4, 1, "", "action_keys"], [154, 4, 1, "", "action_spec"], [154, 4, 1, "", "action_spec_unbatched"], [154, 1, 1, "", "add_module"], [154, 1, 1, "", "add_truncated_keys"], [154, 1, 1, "", "all_actions"], [154, 1, 1, "", "any_done"], [154, 1, 1, "", "append_transform"], [154, 1, 1, "", "apply"], [154, 1, 1, "", "auto_specs_"], [154, 4, 1, "", "batch_dims"], [154, 4, 1, "", "batch_locked"], [154, 4, 1, "", "batch_size"], [154, 1, 1, "", "bfloat16"], [154, 1, 1, "", "buffers"], [154, 1, 1, "", "cardinality"], [154, 1, 1, "", "check_env_specs"], [154, 1, 1, "", "children"], [154, 1, 1, "", "compile"], [154, 1, 1, "", "cpu"], [154, 1, 1, "", "cuda"], [154, 4, 1, "", "done_key"], [154, 4, 1, "", "done_keys"], [154, 4, 1, "", "done_keys_groups"], [154, 4, 1, "", "done_spec"], [154, 4, 1, "", "done_spec_unbatched"], [154, 1, 1, "", "double"], [154, 1, 1, "", "empty_cache"], [154, 1, 1, "", "eval"], [154, 1, 1, "", "extra_repr"], [154, 1, 1, "", "fake_tensordict"], [154, 1, 1, "", "float"], [154, 1, 1, "", "forward"], [154, 4, 1, "", "full_action_spec"], [154, 4, 1, "", "full_action_spec_unbatched"], [154, 4, 1, "", "full_done_spec"], [154, 4, 1, "", "full_done_spec_unbatched"], [154, 4, 1, "", "full_observation_spec_unbatched"], [154, 4, 1, "", "full_reward_spec"], [154, 4, 1, "", "full_reward_spec_unbatched"], [154, 4, 1, "", "full_state_spec"], [154, 4, 1, "", "full_state_spec_unbatched"], [154, 1, 1, "", "get_buffer"], [154, 1, 1, "", "get_extra_state"], [154, 1, 1, "", "get_parameter"], [154, 1, 1, "", "get_submodule"], [154, 1, 1, "", "half"], [154, 4, 1, "", "input_spec"], [154, 4, 1, "", "input_spec_unbatched"], [154, 1, 1, "", "ipu"], [154, 4, 1, "", "is_spec_locked"], [154, 1, 1, "", "load_state_dict"], [154, 1, 1, "", "maybe_reset"], [154, 1, 1, "", "modules"], [154, 1, 1, "", "mtia"], [154, 1, 1, "", "named_buffers"], [154, 1, 1, "", "named_children"], [154, 1, 1, "", "named_modules"], [154, 1, 1, "", "named_parameters"], [154, 4, 1, "", "observation_keys"], [154, 4, 1, "", "observation_spec"], [154, 4, 1, "", "observation_spec_unbatched"], [154, 4, 1, "", "output_spec"], [154, 4, 1, "", "output_spec_unbatched"], [154, 1, 1, "", "parameters"], [154, 1, 1, "", "rand_action"], [154, 1, 1, "", "rand_step"], [154, 1, 1, "", "register_backward_hook"], [154, 1, 1, "", "register_buffer"], [154, 1, 1, "", "register_forward_hook"], [154, 1, 1, "", "register_forward_pre_hook"], [154, 1, 1, "", "register_full_backward_hook"], [154, 1, 1, "", "register_full_backward_pre_hook"], [154, 1, 1, "", "register_gym"], [154, 1, 1, "", "register_load_state_dict_post_hook"], [154, 1, 1, "", "register_load_state_dict_pre_hook"], [154, 1, 1, "", "register_module"], [154, 1, 1, "", "register_parameter"], [154, 1, 1, "", "register_state_dict_post_hook"], [154, 1, 1, "", "register_state_dict_pre_hook"], [154, 1, 1, "", "requires_grad_"], [154, 1, 1, "", "reset"], [154, 4, 1, "", "reset_keys"], [154, 4, 1, "", "reward_key"], [154, 4, 1, "", "reward_keys"], [154, 4, 1, "", "reward_spec"], [154, 4, 1, "", "reward_spec_unbatched"], [154, 1, 1, "", "rollout"], [154, 1, 1, "", "set_extra_state"], [154, 1, 1, "", "set_seed"], [154, 1, 1, "", "set_spec_lock_"], [154, 1, 1, "", "set_submodule"], [154, 4, 1, "", "shape"], [154, 1, 1, "", "share_memory"], [154, 4, 1, "", "specs"], [154, 1, 1, "", "state_dict"], [154, 4, 1, "", "state_keys"], [154, 4, 1, "", "state_spec"], [154, 4, 1, "", "state_spec_unbatched"], [154, 1, 1, "", "step"], [154, 1, 1, "", "step_and_maybe_reset"], [154, 1, 1, "", "step_mdp"], [154, 1, 1, "", "to"], [154, 1, 1, "", "to_empty"], [154, 1, 1, "", "train"], [154, 1, 1, "", "type"], [154, 1, 1, "", "update_kwargs"], [154, 1, 1, "", "xpu"], [154, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[155, 4, 1, "", "action_key"], [155, 4, 1, "", "action_keys"], [155, 4, 1, "", "action_spec"], [155, 4, 1, "", "action_spec_unbatched"], [155, 1, 1, "", "add_module"], [155, 1, 1, "", "add_truncated_keys"], [155, 1, 1, "", "all_actions"], [155, 1, 1, "", "any_done"], [155, 1, 1, "", "append_transform"], [155, 1, 1, "", "apply"], [155, 1, 1, "", "auto_specs_"], [155, 4, 1, "", "batch_dims"], [155, 4, 1, "", "batch_size"], [155, 1, 1, "", "bfloat16"], [155, 1, 1, "", "buffers"], [155, 1, 1, "", "cardinality"], [155, 1, 1, "", "check_env_specs"], [155, 1, 1, "", "children"], [155, 1, 1, "", "compile"], [155, 1, 1, "", "cpu"], [155, 1, 1, "", "cuda"], [155, 4, 1, "", "done_key"], [155, 4, 1, "", "done_keys"], [155, 4, 1, "", "done_keys_groups"], [155, 4, 1, "", "done_spec"], [155, 4, 1, "", "done_spec_unbatched"], [155, 1, 1, "", "double"], [155, 1, 1, "", "empty_cache"], [155, 1, 1, "", "eval"], [155, 1, 1, "", "extra_repr"], [155, 1, 1, "", "fake_tensordict"], [155, 1, 1, "", "float"], [155, 1, 1, "", "forward"], [155, 4, 1, "", "full_action_spec"], [155, 4, 1, "", "full_action_spec_unbatched"], [155, 4, 1, "", "full_done_spec"], [155, 4, 1, "", "full_done_spec_unbatched"], [155, 4, 1, "", "full_observation_spec_unbatched"], [155, 4, 1, "", "full_reward_spec"], [155, 4, 1, "", "full_reward_spec_unbatched"], [155, 4, 1, "", "full_state_spec"], [155, 4, 1, "", "full_state_spec_unbatched"], [155, 1, 1, "", "get_buffer"], [155, 1, 1, "", "get_extra_state"], [155, 1, 1, "", "get_parameter"], [155, 1, 1, "", "get_submodule"], [155, 1, 1, "", "half"], [155, 4, 1, "", "input_spec"], [155, 4, 1, "", "input_spec_unbatched"], [155, 1, 1, "", "ipu"], [155, 4, 1, "", "is_spec_locked"], [155, 1, 1, "", "load_state_dict"], [155, 1, 1, "", "maybe_reset"], [155, 1, 1, "", "modules"], [155, 1, 1, "", "mtia"], [155, 1, 1, "", "named_buffers"], [155, 1, 1, "", "named_children"], [155, 1, 1, "", "named_modules"], [155, 1, 1, "", "named_parameters"], [155, 4, 1, "", "observation_keys"], [155, 4, 1, "", "observation_spec"], [155, 4, 1, "", "observation_spec_unbatched"], [155, 4, 1, "", "output_spec"], [155, 4, 1, "", "output_spec_unbatched"], [155, 1, 1, "", "parameters"], [155, 1, 1, "", "rand_action"], [155, 1, 1, "", "rand_step"], [155, 1, 1, "", "register_backward_hook"], [155, 1, 1, "", "register_buffer"], [155, 1, 1, "", "register_forward_hook"], [155, 1, 1, "", "register_forward_pre_hook"], [155, 1, 1, "", "register_full_backward_hook"], [155, 1, 1, "", "register_full_backward_pre_hook"], [155, 1, 1, "", "register_gym"], [155, 1, 1, "", "register_load_state_dict_post_hook"], [155, 1, 1, "", "register_load_state_dict_pre_hook"], [155, 1, 1, "", "register_module"], [155, 1, 1, "", "register_parameter"], [155, 1, 1, "", "register_state_dict_post_hook"], [155, 1, 1, "", "register_state_dict_pre_hook"], [155, 1, 1, "", "requires_grad_"], [155, 1, 1, "", "reset"], [155, 4, 1, "", "reset_keys"], [155, 4, 1, "", "reward_key"], [155, 4, 1, "", "reward_keys"], [155, 4, 1, "", "reward_spec"], [155, 4, 1, "", "reward_spec_unbatched"], [155, 1, 1, "", "rollout"], [155, 1, 1, "", "set_extra_state"], [155, 1, 1, "", "set_seed"], [155, 1, 1, "", "set_spec_lock_"], [155, 1, 1, "", "set_submodule"], [155, 4, 1, "", "shape"], [155, 1, 1, "", "share_memory"], [155, 4, 1, "", "specs"], [155, 1, 1, "", "state_dict"], [155, 4, 1, "", "state_keys"], [155, 4, 1, "", "state_spec"], [155, 4, 1, "", "state_spec_unbatched"], [155, 1, 1, "", "step"], [155, 1, 1, "", "step_and_maybe_reset"], [155, 1, 1, "", "step_mdp"], [155, 1, 1, "", "to"], [155, 1, 1, "", "to_empty"], [155, 1, 1, "", "train"], [155, 1, 1, "", "type"], [155, 1, 1, "", "xpu"], [155, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[166, 2, 1, "", "DreamerDecoder"], [167, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[173, 0, 1, "", "ActionDiscretizer"], [174, 0, 1, "", "ActionMask"], [175, 0, 1, "", "AutoResetEnv"], [176, 0, 1, "", "AutoResetTransform"], [177, 0, 1, "", "BatchSizeTransform"], [178, 0, 1, "", "BinarizeReward"], [179, 0, 1, "", "BurnInTransform"], [180, 0, 1, "", "CatFrames"], [181, 0, 1, "", "CatTensors"], [182, 0, 1, "", "CenterCrop"], [183, 0, 1, "", "ClipTransform"], [184, 0, 1, "", "Compose"], [185, 0, 1, "", "ConditionalSkip"], [186, 0, 1, "", "Crop"], [187, 0, 1, "", "DTypeCastTransform"], [188, 0, 1, "", "DataLoadingPrimer"], [189, 0, 1, "", "DeviceCastTransform"], [190, 0, 1, "", "DiscreteActionProjection"], [191, 0, 1, "", "DoubleToFloat"], [192, 0, 1, "", "EndOfLifeTransform"], [193, 0, 1, "", "ExcludeTransform"], [194, 0, 1, "", "FiniteTensorDictCheck"], [195, 0, 1, "", "FlattenObservation"], [196, 0, 1, "", "FrameSkipTransform"], [197, 0, 1, "", "GrayScale"], [198, 0, 1, "", "Hash"], [199, 0, 1, "", "InitTracker"], [200, 0, 1, "", "KLRewardTransform"], [201, 0, 1, "", "LineariseRewards"], [202, 0, 1, "", "MultiAction"], [203, 0, 1, "", "NoopResetEnv"], [204, 0, 1, "", "ObservationNorm"], [205, 0, 1, "", "ObservationTransform"], [206, 0, 1, "", "PermuteTransform"], [207, 0, 1, "", "PinMemoryTransform"], [208, 0, 1, "", "R3MTransform"], [209, 0, 1, "", "RandomCropTensorDict"], [210, 0, 1, "", "RemoveEmptySpecs"], [211, 0, 1, "", "RenameTransform"], [212, 0, 1, "", "Resize"], [213, 0, 1, "", "Reward2GoTransform"], [214, 0, 1, "", "RewardClipping"], [215, 0, 1, "", "RewardScaling"], [216, 0, 1, "", "RewardSum"], [217, 0, 1, "", "SelectTransform"], [218, 0, 1, "", "SignTransform"], [219, 0, 1, "", "SqueezeTransform"], [220, 0, 1, "", "Stack"], [221, 0, 1, "", "StepCounter"], [222, 0, 1, "", "TargetReturn"], [223, 0, 1, "", "TensorDictPrimer"], [224, 0, 1, "", "TimeMaxPool"], [225, 0, 1, "", "Timer"], [226, 0, 1, "", "ToTensorImage"], [227, 0, 1, "", "Tokenizer"], [228, 0, 1, "", "TrajCounter"], [229, 0, 1, "", "Transform"], [230, 0, 1, "", "TransformedEnv"], [231, 0, 1, "", "UnaryTransform"], [232, 0, 1, "", "UnsqueezeTransform"], [233, 0, 1, "", "VC1Transform"], [234, 0, 1, "", "VIPRewardTransform"], [235, 0, 1, "", "VIPTransform"], [236, 0, 1, "", "VecGymEnvTransform"], [237, 0, 1, "", "VecNorm"], [238, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[173, 0, 1, "", "SamplingStrategy"], [173, 1, 1, "", "inv"], [173, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[174, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[175, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[176, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_env_batch_size"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[178, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[179, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "make_rb_transform_and_sampler"], [180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[184, 1, 1, "", "append"], [184, 1, 1, "", "forward"], [184, 1, 1, "", "init"], [184, 1, 1, "", "insert"], [184, 1, 1, "", "to"], [184, 1, 1, "", "transform_action_spec"], [184, 1, 1, "", "transform_env_batch_size"], [184, 1, 1, "", "transform_env_device"], [184, 1, 1, "", "transform_input_spec"], [184, 1, 1, "", "transform_observation_spec"], [184, 1, 1, "", "transform_output_spec"], [184, 1, 1, "", "transform_reward_spec"], [184, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[185, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_action_spec"], [189, 1, 1, "", "transform_done_spec"], [189, 1, 1, "", "transform_env_device"], [189, 1, 1, "", "transform_input_spec"], [189, 1, 1, "", "transform_observation_spec"], [189, 1, 1, "", "transform_output_spec"], [189, 1, 1, "", "transform_reward_spec"], [189, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[190, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "register_keys"], [192, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[194, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[196, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[198, 1, 1, "", "get_input_from_hash"], [198, 1, 1, "", "reproducible_hash"], [198, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[201, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[204, 1, 1, "", "init_stats"], [204, 1, 1, "", "transform_action_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[207, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[208, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[209, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[212, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[213, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[214, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[215, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_done_spec"], [220, 1, 1, "", "transform_input_spec"], [220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_observation_spec"], [221, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "to"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TrajCounter": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "load_state_dict"], [228, 1, 1, "", "state_dict"], [228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[229, 1, 1, "", "clone"], [229, 4, 1, "", "container"], [229, 1, 1, "", "forward"], [229, 1, 1, "", "init"], [229, 1, 1, "", "inv"], [229, 4, 1, "", "parent"], [229, 1, 1, "", "reset_parent"], [229, 1, 1, "", "set_container"], [229, 1, 1, "", "to"], [229, 1, 1, "", "transform_action_spec"], [229, 1, 1, "", "transform_done_spec"], [229, 1, 1, "", "transform_env_batch_size"], [229, 1, 1, "", "transform_env_device"], [229, 1, 1, "", "transform_input_spec"], [229, 1, 1, "", "transform_observation_spec"], [229, 1, 1, "", "transform_output_spec"], [229, 1, 1, "", "transform_reward_spec"], [229, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[230, 1, 1, "", "add_truncated_keys"], [230, 1, 1, "", "append_transform"], [230, 4, 1, "", "batch_locked"], [230, 4, 1, "", "batch_size"], [230, 1, 1, "", "empty_cache"], [230, 1, 1, "", "eval"], [230, 4, 1, "", "input_spec"], [230, 1, 1, "", "insert_transform"], [230, 1, 1, "", "load_state_dict"], [230, 4, 1, "", "output_spec"], [230, 1, 1, "", "rand_action"], [230, 1, 1, "", "set_missing_tolerance"], [230, 1, 1, "", "set_seed"], [230, 1, 1, "", "state_dict"], [230, 1, 1, "", "to"], [230, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[231, 1, 1, "", "transform_action_spec"], [231, 1, 1, "", "transform_done_spec"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"], [231, 1, 1, "", "transform_reward_spec"], [231, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[232, 1, 1, "", "transform_action_spec"], [232, 1, 1, "", "transform_observation_spec"], [232, 1, 1, "", "transform_reward_spec"], [232, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "make_noload_model"], [233, 1, 1, "", "to"], [233, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[235, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[237, 1, 1, "", "build_td_for_shared_vecnorm"], [237, 1, 1, "", "forward"], [237, 1, 1, "", "freeze"], [237, 1, 1, "", "frozen_copy"], [237, 1, 1, "", "get_extra_state"], [237, 4, 1, "", "loc"], [237, 4, 1, "", "scale"], [237, 1, 1, "", "set_extra_state"], [237, 4, 1, "", "standard_normal"], [237, 1, 1, "", "to_observation_norm"], [237, 1, 1, "", "transform_observation_spec"], [237, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[239, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[239, 1, 1, "", "add_module"], [239, 1, 1, "", "apply"], [239, 1, 1, "", "bfloat16"], [239, 1, 1, "", "buffers"], [239, 1, 1, "", "children"], [239, 1, 1, "", "compile"], [239, 4, 1, "", "container"], [239, 1, 1, "", "cpu"], [239, 1, 1, "", "cuda"], [239, 1, 1, "", "double"], [239, 1, 1, "", "eval"], [239, 1, 1, "", "extra_repr"], [239, 1, 1, "", "float"], [239, 1, 1, "", "forward"], [239, 1, 1, "", "get_buffer"], [239, 1, 1, "", "get_extra_state"], [239, 1, 1, "", "get_parameter"], [239, 1, 1, "", "get_submodule"], [239, 1, 1, "", "half"], [239, 1, 1, "", "init"], [239, 1, 1, "", "inv"], [239, 1, 1, "", "ipu"], [239, 1, 1, "", "load_state_dict"], [239, 1, 1, "", "modules"], [239, 1, 1, "", "mtia"], [239, 4, 1, "", "n_steps"], [239, 1, 1, "", "named_buffers"], [239, 1, 1, "", "named_children"], [239, 1, 1, "", "named_modules"], [239, 1, 1, "", "named_parameters"], [239, 1, 1, "", "parameters"], [239, 4, 1, "", "parent"], [239, 1, 1, "", "register_backward_hook"], [239, 1, 1, "", "register_buffer"], [239, 1, 1, "", "register_forward_hook"], [239, 1, 1, "", "register_forward_pre_hook"], [239, 1, 1, "", "register_full_backward_hook"], [239, 1, 1, "", "register_full_backward_pre_hook"], [239, 1, 1, "", "register_load_state_dict_post_hook"], [239, 1, 1, "", "register_load_state_dict_pre_hook"], [239, 1, 1, "", "register_module"], [239, 1, 1, "", "register_parameter"], [239, 1, 1, "", "register_state_dict_post_hook"], [239, 1, 1, "", "register_state_dict_pre_hook"], [239, 1, 1, "", "requires_grad_"], [239, 1, 1, "", "set_extra_state"], [239, 1, 1, "", "set_submodule"], [239, 1, 1, "", "share_memory"], [239, 1, 1, "", "state_dict"], [239, 1, 1, "", "to"], [239, 1, 1, "", "to_empty"], [239, 1, 1, "", "train"], [239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_done_spec"], [239, 1, 1, "", "transform_env_batch_size"], [239, 1, 1, "", "transform_env_device"], [239, 1, 1, "", "transform_input_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_output_spec"], [239, 1, 1, "", "transform_reward_spec"], [239, 1, 1, "", "transform_state_spec"], [239, 1, 1, "", "type"], [239, 1, 1, "", "xpu"], [239, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[240, 1, 1, "", "get_class_that_defined_method"], [240, 1, 1, "", "import_module"], [240, 1, 1, "", "module_set"], [240, 1, 1, "", "reset"]], "torchrl.modules": [[241, 0, 1, "", "AdditiveGaussianModule"], [242, 0, 1, "", "BatchRenorm1d"], [243, 0, 1, "", "CEMPlanner"], [244, 0, 1, "", "ConsistentDropout"], [245, 0, 1, "", "ConsistentDropoutModule"], [246, 0, 1, "", "Conv3dNet"], [247, 0, 1, "", "ConvNet"], [248, 0, 1, "", "DTActor"], [249, 0, 1, "", "DdpgCnnActor"], [250, 0, 1, "", "DdpgCnnQNet"], [251, 0, 1, "", "DdpgMlpActor"], [252, 0, 1, "", "DdpgMlpQNet"], [253, 0, 1, "", "DecisionTransformer"], [254, 0, 1, "", "Delta"], [255, 0, 1, "", "DistributionalDQNnet"], [256, 0, 1, "", "DistributionalQValueHook"], [257, 0, 1, "", "DreamerActor"], [258, 0, 1, "", "DuelingCnnDQNet"], [259, 0, 1, "", "EGreedyModule"], [260, 0, 1, "", "GRU"], [261, 0, 1, "", "GRUCell"], [262, 0, 1, "", "GRUModule"], [263, 0, 1, "", "IndependentNormal"], [264, 0, 1, "", "LSTM"], [265, 0, 1, "", "LSTMCell"], [266, 0, 1, "", "LSTMModule"], [267, 0, 1, "", "MLP"], [268, 0, 1, "", "MPCPlannerBase"], [269, 0, 1, "", "MPPIPlanner"], [270, 0, 1, "", "MaskedCategorical"], [271, 0, 1, "", "MaskedOneHotCategorical"], [272, 0, 1, "", "MultiAgentConvNet"], [273, 0, 1, "", "MultiAgentMLP"], [274, 0, 1, "", "MultiAgentNetBase"], [275, 0, 1, "", "NoisyLazyLinear"], [276, 0, 1, "", "NoisyLinear"], [277, 0, 1, "", "ObsDecoder"], [278, 0, 1, "", "ObsEncoder"], [279, 0, 1, "", "OneHotCategorical"], [280, 0, 1, "", "OneHotOrdinal"], [281, 0, 1, "", "OnlineDTActor"], [282, 0, 1, "", "Ordinal"], [283, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [284, 0, 1, "", "QMixer"], [285, 0, 1, "", "QValueHook"], [286, 0, 1, "", "RSSMPosterior"], [287, 0, 1, "", "RSSMPrior"], [288, 0, 1, "", "Squeeze2dLayer"], [289, 0, 1, "", "SqueezeLayer"], [290, 0, 1, "", "TanhDelta"], [291, 0, 1, "", "TanhNormal"], [292, 0, 1, "", "TruncatedNormal"], [293, 0, 1, "", "VDNMixer"], [294, 0, 1, "", "VmapModule"], [295, 0, 1, "", "recurrent_mode"], [296, 0, 1, "", "reset_noise"], [297, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[242, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[243, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[244, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[246, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[247, 1, 1, "", "default_atari_dqn"], [247, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[248, 1, 1, "", "default_config"], [248, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[249, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[250, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[251, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[252, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[253, 0, 1, "", "DTConfig"], [253, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[254, 1, 1, "", "expand"], [254, 1, 1, "", "log_prob"], [254, 4, 1, "", "mean"], [254, 4, 1, "", "mode"], [254, 1, 1, "", "rsample"], [254, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[255, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[257, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[258, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "step"]], "torchrl.modules.GRU": [[260, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[261, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_cudnn_based"], [262, 1, 1, "", "make_python_based"], [262, 1, 1, "id0", "make_tensordict_primer"], [262, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[263, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[264, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[265, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_cudnn_based"], [266, 1, 1, "", "make_python_based"], [266, 1, 1, "id0", "make_tensordict_primer"], [266, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[267, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[269, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[270, 1, 1, "", "log_prob"], [270, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[271, 1, 1, "", "log_prob"], [271, 4, 1, "", "mode"], [271, 1, 1, "", "rsample"], [271, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "from_stateful_net"], [274, 1, 1, "", "get_stateful_net"], [274, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[275, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[277, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[278, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[279, 1, 1, "", "entropy"], [279, 1, 1, "", "log_prob"], [279, 4, 1, "", "mode"], [279, 1, 1, "", "rsample"], [279, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[281, 1, 1, "", "default_config"], [281, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[284, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[286, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[287, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[289, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[290, 4, 1, "", "mean"], [290, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[291, 1, 1, "", "get_mode"], [291, 4, 1, "", "mean"], [291, 4, 1, "", "mode"], [291, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[292, 1, 1, "", "log_prob"], [292, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[293, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[294, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[298, 0, 1, "", "Actor"], [299, 0, 1, "", "ActorCriticOperator"], [300, 0, 1, "", "ActorCriticWrapper"], [301, 0, 1, "", "ActorValueOperator"], [302, 0, 1, "", "DecisionTransformerInferenceWrapper"], [303, 0, 1, "", "DistributionalQValueActor"], [304, 0, 1, "", "DistributionalQValueModule"], [305, 0, 1, "", "LMHeadActorValueOperator"], [306, 0, 1, "", "MultiStepActorWrapper"], [307, 0, 1, "", "ProbabilisticActor"], [308, 0, 1, "", "QValueActor"], [309, 0, 1, "", "QValueModule"], [310, 0, 1, "", "SafeModule"], [311, 0, 1, "", "SafeProbabilisticModule"], [312, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [313, 0, 1, "", "SafeSequential"], [314, 0, 1, "", "TanhModule"], [315, 0, 1, "", "ValueOperator"], [316, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[299, 1, 1, "", "get_critic_operator"], [299, 1, 1, "", "get_policy_head"], [299, 1, 1, "", "get_value_head"], [299, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[300, 1, 1, "", "get_policy_head"], [300, 1, 1, "", "get_policy_operator"], [300, 1, 1, "", "get_value_head"], [300, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[301, 1, 1, "", "get_policy_head"], [301, 1, 1, "", "get_policy_operator"], [301, 1, 1, "", "get_value_head"], [301, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "mask_context"], [302, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[304, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[306, 1, 1, "", "forward"], [306, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[309, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[310, 1, 1, "", "random"], [310, 1, 1, "", "random_sample"], [310, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[311, 1, 1, "", "random"], [311, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[314, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[316, 1, 1, "", "get_reward_operator"], [316, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[317, 0, 1, "", "biased_softplus"], [318, 0, 1, "", "get_primers_from_module"], [319, 0, 1, "", "inv_softplus"], [320, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[317, 1, 1, "", "forward"]], "torchrl.objectives": [[321, 0, 1, "", "A2CLoss"], [322, 0, 1, "", "CQLLoss"], [323, 0, 1, "", "ClipPPOLoss"], [324, 0, 1, "", "CrossQLoss"], [325, 0, 1, "", "DDPGLoss"], [326, 0, 1, "", "DQNLoss"], [327, 0, 1, "", "DTLoss"], [328, 0, 1, "", "DiscreteCQLLoss"], [329, 0, 1, "", "DiscreteIQLLoss"], [330, 0, 1, "", "DiscreteSACLoss"], [331, 0, 1, "", "DistributionalDQNLoss"], [332, 0, 1, "", "DreamerActorLoss"], [333, 0, 1, "", "DreamerModelLoss"], [334, 0, 1, "", "DreamerValueLoss"], [335, 0, 1, "", "GAILLoss"], [336, 0, 1, "", "HardUpdate"], [337, 0, 1, "", "IQLLoss"], [338, 0, 1, "", "KLPENPPOLoss"], [339, 0, 1, "", "LossModule"], [340, 0, 1, "", "OnlineDTLoss"], [341, 0, 1, "", "PPOLoss"], [342, 0, 1, "", "REDQLoss"], [343, 0, 1, "", "ReinforceLoss"], [344, 0, 1, "", "SACLoss"], [345, 0, 1, "", "SoftUpdate"], [346, 0, 1, "", "TD3BCLoss"], [347, 0, 1, "", "TD3Loss"], [348, 0, 1, "", "ValueEstimators"], [349, 0, 1, "", "default_value_kwargs"], [350, 0, 1, "", "distance_loss"], [351, 0, 1, "", "group_optimizers"], [352, 0, 1, "", "hold_out_net"], [353, 0, 1, "", "hold_out_params"], [355, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[321, 3, 1, "", "default_keys"], [321, 1, 1, "", "forward"], [321, 4, 1, "", "functional"], [321, 1, 1, "", "loss_critic"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[322, 3, 1, "", "default_keys"], [322, 1, 1, "", "forward"], [322, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[323, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[324, 1, 1, "", "actor_loss"], [324, 1, 1, "", "alpha_loss"], [324, 3, 1, "", "default_keys"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "load_state_dict"], [324, 1, 1, "", "make_value_estimator"], [324, 1, 1, "", "maybe_init_target_entropy"], [324, 1, 1, "", "qvalue_loss"], [324, 1, 1, "", "set_keys"], [324, 1, 1, "", "state_dict"], [324, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[325, 3, 1, "", "default_keys"], [325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[326, 3, 1, "", "default_keys"], [326, 1, 1, "", "forward"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[327, 3, 1, "", "default_keys"], [327, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[328, 3, 1, "", "default_keys"], [328, 1, 1, "", "forward"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[329, 3, 1, "", "default_keys"], [329, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[330, 3, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[331, 3, 1, "", "default_keys"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[332, 3, 1, "", "default_keys"], [332, 1, 1, "", "forward"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[333, 3, 1, "", "default_keys"], [333, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[334, 3, 1, "", "default_keys"], [334, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[335, 3, 1, "", "default_keys"], [335, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[337, 3, 1, "", "default_keys"], [337, 1, 1, "", "forward"], [337, 1, 1, "", "loss_value_diff"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[338, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[339, 1, 1, "", "convert_to_functional"], [339, 1, 1, "", "forward"], [339, 1, 1, "", "from_stateful_net"], [339, 4, 1, "", "functional"], [339, 1, 1, "", "get_stateful_net"], [339, 1, 1, "", "make_value_estimator"], [339, 1, 1, "", "named_parameters"], [339, 1, 1, "", "parameters"], [339, 1, 1, "", "reset_parameters_recursive"], [339, 1, 1, "", "set_keys"], [339, 4, 1, "", "value_estimator"], [339, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[340, 3, 1, "", "default_keys"], [340, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[341, 3, 1, "", "default_keys"], [341, 1, 1, "", "forward"], [341, 4, 1, "", "functional"], [341, 1, 1, "", "loss_critic"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[342, 3, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[343, 3, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 4, 1, "", "functional"], [343, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[344, 3, 1, "", "default_keys"], [344, 1, 1, "", "forward"], [344, 1, 1, "", "load_state_dict"], [344, 1, 1, "", "make_value_estimator"], [344, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[346, 1, 1, "", "actor_loss"], [346, 3, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "make_value_estimator"], [346, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[347, 3, 1, "", "default_keys"], [347, 1, 1, "", "forward"], [347, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[354, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[354, 3, 1, "", "default_keys"], [354, 1, 1, "", "forward"], [354, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[356, 0, 1, "", "GAE"], [357, 0, 1, "", "TD0Estimator"], [358, 0, 1, "", "TD1Estimator"], [359, 0, 1, "", "TDLambdaEstimator"], [360, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[356, 1, 1, "", "forward"], [356, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[357, 1, 1, "", "forward"], [357, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[358, 1, 1, "", "forward"], [358, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[359, 1, 1, "", "forward"], [359, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[360, 3, 1, "", "default_keys"], [360, 1, 1, "", "forward"], [360, 1, 1, "", "set_keys"], [360, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[361, 0, 1, "", "generalized_advantage_estimate"], [362, 0, 1, "", "reward2go"], [363, 0, 1, "", "td0_advantage_estimate"], [364, 0, 1, "", "td0_return_estimate"], [365, 0, 1, "", "td1_advantage_estimate"], [366, 0, 1, "", "td1_return_estimate"], [367, 0, 1, "", "td_lambda_advantage_estimate"], [368, 0, 1, "", "td_lambda_return_estimate"], [369, 0, 1, "", "vec_generalized_advantage_estimate"], [370, 0, 1, "", "vec_td1_advantage_estimate"], [371, 0, 1, "", "vec_td1_return_estimate"], [372, 0, 1, "", "vec_td_lambda_advantage_estimate"], [373, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[374, 2, 1, "", "PixelRenderTransform"], [375, 2, 1, "", "TensorDictRecorder"], [376, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[377, 2, 1, "", "Logger"], [379, 2, 1, "", "generate_exp_name"], [380, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[378, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[381, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[382, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[383, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[385, 0, 1, "", "BatchSubSampler"], [386, 0, 1, "", "ClearCudaCache"], [387, 0, 1, "", "CountFramesLog"], [388, 0, 1, "", "LogScalar"], [389, 0, 1, "", "LogValidationReward"], [390, 0, 1, "", "OptimizerHook"], [391, 0, 1, "", "ReplayBufferTrainer"], [392, 0, 1, "", "RewardNormalizer"], [393, 0, 1, "", "SelectKeys"], [394, 0, 1, "", "Trainer"], [395, 0, 1, "", "TrainerHookBase"], [396, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[385, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[386, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[387, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[388, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[389, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[390, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[391, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[392, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[393, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[394, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[395, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[396, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[397, 2, 1, "", "correct_for_frame_skip"], [398, 2, 1, "", "get_stats_random_rollout"], [399, 2, 1, "", "make_collector_offpolicy"], [400, 2, 1, "", "make_collector_onpolicy"], [401, 2, 1, "", "make_dqn_loss"], [402, 2, 1, "", "make_replay_buffer"], [403, 2, 1, "", "make_target_updater"], [404, 2, 1, "", "make_trainer"], [405, 2, 1, "", "parallel_env_constructor"], [406, 2, 1, "", "sync_async_collector"], [407, 2, 1, "", "sync_sync_collector"], [408, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 412, 413, 414, 415, 417, 418, 419, 421, 423, 430, 431, 432, 436, 437], "instal": [0, 6, 7, 436], "get": [0, 422, 423, 424, 425, 426, 427], "start": [0, 422, 423, 424, 425, 426, 427], "tutori": [0, 419, 430, 431], "basic": [0, 434], "intermedi": [0, 8], "advanc": 0, "refer": [0, 410], "knowledg": [0, 411], "base": [0, 2, 7, 411, 421], "indic": 0, "tabl": 0, "collector": [1, 417, 418, 419, 420, 425, 427, 430, 431, 436], "packag": [1, 2, 3, 412, 413, 414, 415], "batch": [1, 3, 417, 432, 434], "size": [1, 3, 417, 434], "polici": [1, 2, 4, 413, 417, 419, 420, 421, 423, 427, 429, 430, 431, 432], "copi": 1, "replai": [1, 2, 3, 417, 418, 419, 420, 425, 427, 430, 431, 434, 436], "buffer": [1, 2, 3, 417, 418, 419, 420, 425, 427, 430, 431, 434, 436], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 417, 418, 419, 425, 427, 430, 431, 436], "distribut": [1, 412], "helper": [1, 3], "function": [1, 4, 413, 418, 419, 424, 430, 431, 436], "compos": [2, 184], "support": 2, "type": 2, "choos": 2, "storag": [2, 107, 417, 425, 434], "sampl": [2, 434], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 418, 434], "trajectori": [2, 434], "checkpoint": [2, 414], "episod": [2, 4], "format": 2, "ted": [2, 422], "The": [2, 417], "rational": 2, "behind": 2, "structur": [2, 434], "A": [2, 418, 434], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 412, 434, 436], "special": [2, 423, 436], "case": 2, "footnot": 2, "multi": [2, 3, 412, 413, 429, 430, 431], "agent": [2, 3, 4, 412, 413, 430, 431], "present": 2, "rnn": 2, "transform": [2, 3, 229, 417, 419, 422, 430, 431, 432, 434, 436, 437], "step": [2, 3, 417, 419, 422, 425, 430, 431, 434, 437], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 75], "numer": 2, "subclass": [2, 3], "categor": [2, 30], "tree": [2, 77], "forest": 2, "tensordictmap": [2, 70], "mctsforest": [2, 45], "reinforc": [2, 413, 419, 430, 431], "learn": [2, 4, 412, 419, 430, 431], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 412, 413, 414, 430], "env": [3, 432, 436, 437], "spec": [3, 432, 437], "lock": 3, "method": [3, 417], "partial": 3, "reset": [3, 432, 437], "environ": [3, 4, 6, 7, 417, 418, 419, 420, 422, 427, 429, 430, 431, 432, 436, 437], "vector": [3, 436], "custom": [3, 11, 432, 434], "nativ": 3, "auto": 3, "dynam": [3, 4, 434], "forward": [3, 4, 417], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 434], "expos": 3, "outsid": 3, "world": 3, "design": [3, 427], "your": [3, 4, 6, 417, 421, 427, 432], "own": [3, 427], "tip": 3, "us": [3, 4, 6, 9, 413, 420, 433, 434, 436], "clone": [3, 7], "mask": 3, "action": [3, 4, 413, 420, 432], "record": [3, 414, 417, 426], "video": [3, 11, 426], "domain": [3, 412], "specif": [3, 412, 429], "librari": [3, 436], "thing": [4, 417, 432], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 422, 424, 436], "gener": [4, 11, 412], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 412], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 417, 418, 424, 427], "return": [4, 413], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 436], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 429], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 417, 418, 419], "standard": 4, "explor": [4, 412, 417, 418, 423], "valu": [4, 412, 413, 417, 419, 420, 423], "loss": [4, 417, 418, 419, 420, 427, 430, 431], "earli": 4, "train": [4, 8, 413, 417, 419, 420, 421, 424, 427, 430, 431, 432], "roughli": 4, "uniformli": 4, "random": [4, 413, 430, 431], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 418], "increas": 4, "an": [4, 419, 420, 422, 432], "can": 4, "low": 4, "model": [4, 412, 417, 418, 420, 421, 424, 433, 436], "also": 4, "offlin": 4, "observ": [4, 417], "space": 4, "effect": [4, 432], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 421], "gym": [5, 436, 437], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 417], "render": [7, 11, 427, 430, 431, 437], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 417], "pytorch": [8, 9, 10, 421], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 432], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 418, 434], "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 421], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "densifyreward": 34, "discretetensorspec": 35, "flat2t": 36, "h5combin": 37, "h5split": 38, "hashtoint": 39, "llmdata": 40, "llminput": 41, "llmoutput": 42, "lazystackedcompositespec": 43, "lazystackedtensorspec": 44, "multicategor": 46, "multidiscretetensorspec": 47, "multionehot": 48, "multionehotdiscretetensorspec": 49, "multistep": 50, "nested2t": 51, "nontensor": 52, "nontensorspec": 53, "onehot": 54, "onehotdiscretetensorspec": 55, "pairwisedataset": 56, "prioritizedreplaybuff": 57, "promptdata": 58, "prompttensordicttoken": 59, "querymodul": 60, "randomprojectionhash": 61, "replaybuff": 62, "rewarddata": 63, "rolloutfrommodel": 64, "siphash": 65, "stack": [66, 220], "stackedcomposit": 67, "ted2flat": 68, "ted2nest": 69, "tensordictprioritizedreplaybuff": 71, "tensordictreplaybuff": 72, "tensordicttoken": 73, "tensormap": 74, "tokenizeddatasetload": 76, "unbound": 78, "unboundedcontinu": 79, "unboundedcontinuoustensorspec": 80, "unboundeddiscret": 81, "unboundeddiscretetensorspec": 82, "check_no_exclusive_kei": 83, "consolidate_spec": 84, "contains_lazy_spec": 85, "create_infinite_iter": 86, "get_dataload": 87, "flatstoragecheckpoint": 88, "h5storagecheckpoint": 89, "immutabledatasetwrit": 90, "lazymemmapstorag": 91, "lazystackstorag": 92, "lazytensorstorag": 93, "liststorag": 94, "liststoragecheckpoint": 95, "nestedstoragecheckpoint": 96, "prioritizedsampl": 97, "prioritizedslicesampl": 98, "randomsampl": 99, "replaybufferensembl": 100, "roundrobinwrit": 101, "sampler": 102, "samplerensembl": 103, "samplerwithoutreplac": 104, "slicesampl": 105, "slicesamplerwithoutreplac": 106, "storagecheckpointerbas": 108, "storageensembl": 109, "storageensemblecheckpoint": 110, "tensordictmaxvaluewrit": 111, "tensordictroundrobinwrit": 112, "tensorstorag": 113, "tensorstoragecheckpoint": 114, "writer": 115, "writerensembl": 116, "braxenv": 117, "braxwrapp": 118, "chessenv": 119, "dmcontrolenv": 120, "dmcontrolwrapp": 121, "envbas": [122, 432], "envcreat": 123, "envmetadata": 124, "gymenv": 125, "gymlikeenv": 126, "gymwrapp": 127, "habitatenv": 128, "isaacgymenv": 129, "isaacgymwrapp": 130, "jumanjienv": 131, "jumanjiwrapp": 132, "llmenv": 133, "llmhashingenv": 134, "mogymenv": 135, "mogymwrapp": 136, "marlgroupmaptyp": 137, "meltingpotenv": 138, "meltingpotwrapp": 139, "modelbasedenvbas": 140, "multithreadedenv": 141, "multithreadedenvwrapp": 142, "openmlenv": 143, "openspielenv": 144, "openspielwrapp": 145, "parallelenv": 146, "pendulumenv": 147, "pettingzooenv": 148, "pettingzoowrapp": 149, "randompolici": 150, "robohiveenv": 151, "smacv2env": 152, "smacv2wrapp": 153, "serialenv": 154, "tictactoeenv": 155, "unitymlagentsenv": 156, "unitymlagentswrapp": 157, "vmasenv": 158, "vmaswrapp": 159, "check_env_spec": 160, "check_marl_group": 161, "exploration_typ": 162, "get_available_librari": 163, "gym_backend": 164, "make_composite_from_td": 165, "dreamerdecod": 166, "dreamerenv": 167, "register_gym_spec_convers": 168, "set_exploration_typ": 169, "set_gym_backend": 170, "step_mdp": 171, "terminated_or_trunc": 172, "actiondiscret": 173, "actionmask": 174, "autoresetenv": 175, "autoresettransform": 176, "batchsizetransform": 177, "binarizereward": 178, "burnintransform": 179, "catfram": [180, 434], "cattensor": 181, "centercrop": 182, "cliptransform": 183, "conditionalskip": 185, "crop": 186, "dtypecasttransform": 187, "dataloadingprim": 188, "devicecasttransform": 189, "discreteactionproject": 190, "doubletofloat": 191, "endoflifetransform": 192, "excludetransform": 193, "finitetensordictcheck": 194, "flattenobserv": 195, "frameskiptransform": 196, "grayscal": 197, "hash": 198, "inittrack": 199, "klrewardtransform": 200, "linearisereward": 201, "multiact": 202, "noopresetenv": 203, "observationnorm": 204, "observationtransform": 205, "permutetransform": 206, "pinmemorytransform": 207, "r3mtransform": 208, "randomcroptensordict": 209, "removeemptyspec": 210, "renametransform": 211, "resiz": 212, "reward2gotransform": 213, "rewardclip": 214, "rewardsc": 215, "rewardsum": 216, "selecttransform": 217, "signtransform": 218, "squeezetransform": 219, "stepcount": 221, "targetreturn": 222, "tensordictprim": 223, "timemaxpool": 224, "timer": 225, "totensorimag": 226, "token": 227, "trajcount": 228, "transformedenv": 230, "unarytransform": 231, "unsqueezetransform": 232, "vc1transform": 233, "viprewardtransform": 234, "viptransform": 235, "vecgymenvtransform": 236, "vecnorm": [237, 437], "gsdenois": 238, "multisteptransform": 239, "implement_for": 240, "additivegaussianmodul": 241, "batchrenorm1d": 242, "cemplann": 243, "consistentdropout": 244, "consistentdropoutmodul": 245, "conv3dnet": 246, "convnet": 247, "dtactor": 248, "ddpgcnnactor": 249, "ddpgcnnqnet": 250, "ddpgmlpactor": 251, "ddpgmlpqnet": 252, "decisiontransform": 253, "delta": 254, "distributionaldqnnet": 255, "distributionalqvaluehook": 256, "dreameractor": 257, "duelingcnndqnet": 258, "egreedymodul": 259, "gru": 260, "grucel": 261, "grumodul": 262, "independentnorm": 263, "lstm": [264, 420], "lstmcell": 265, "lstmmodul": 266, "mlp": [267, 420], "mpcplannerbas": 268, "mppiplann": 269, "maskedcategor": 270, "maskedonehotcategor": 271, "multiagentconvnet": 272, "multiagentmlp": 273, "multiagentnetbas": 274, "noisylazylinear": 275, "noisylinear": 276, "obsdecod": 277, "obsencod": 278, "onehotcategor": 279, "onehotordin": 280, "onlinedtactor": 281, "ordin": 282, "ornsteinuhlenbeckprocessmodul": 283, "qmixer": [284, 413], "qvaluehook": 285, "rssmposterior": 286, "rssmprior": 287, "squeeze2dlay": 288, "squeezelay": 289, "tanhdelta": 290, "tanhnorm": 291, "truncatednorm": 292, "vdnmixer": 293, "vmapmodul": 294, "recurrent_mod": 295, "reset_nois": 296, "set_recurrent_mod": 297, "actor": [298, 412, 417, 423], "actorcriticoper": 299, "actorcriticwrapp": 300, "actorvalueoper": 301, "decisiontransformerinferencewrapp": 302, "distributionalqvalueactor": 303, "distributionalqvaluemodul": 304, "lmheadactorvalueoper": 305, "multistepactorwrapp": 306, "probabilisticactor": 307, "qvalueactor": [308, 412], "qvaluemodul": 309, "safemodul": [310, 412], "safeprobabilisticmodul": 311, "safeprobabilistictensordictsequenti": 312, "safesequenti": 313, "tanhmodul": 314, "valueoper": 315, "worldmodelwrapp": 316, "biased_softplu": 317, "get_primers_from_modul": 318, "inv_softplu": 319, "map": [320, 430], "a2closs": 321, "cqlloss": 322, "clipppoloss": 323, "crossqloss": 324, "ddpgloss": 325, "dqnloss": 326, "dtloss": 327, "discretecqlloss": 328, "discreteiqlloss": 329, "discretesacloss": 330, "distributionaldqnloss": 331, "dreameractorloss": 332, "dreamermodelloss": 333, "dreamervalueloss": 334, "gailloss": 335, "hardupd": 336, "iqlloss": 337, "klpenppoloss": 338, "lossmodul": [339, 417, 424], "onlinedtloss": 340, "ppoloss": 341, "redqloss": 342, "reinforceloss": 343, "sacloss": 344, "softupd": 345, "td3bcloss": 346, "td3loss": 347, "valueestim": 348, "default_value_kwarg": 349, "distance_loss": 350, "group_optim": 351, "hold_out_net": 352, "hold_out_param": 353, "qmixerloss": 354, "next_state_valu": 355, "gae": 356, "td0estim": 357, "td1estim": 358, "tdlambdaestim": 359, "valueestimatorbas": 360, "generalized_advantage_estim": 361, "reward2go": 362, "td0_advantage_estim": 363, "td0_return_estim": 364, "td1_advantage_estim": 365, "td1_return_estim": 366, "td_lambda_advantage_estim": 367, "td_lambda_return_estim": 368, "vec_generalized_advantage_estim": 369, "vec_td1_advantage_estim": 370, "vec_td1_return_estim": 371, "vec_td_lambda_advantage_estim": 372, "vec_td_lambda_return_estim": 373, "pixelrendertransform": 374, "tensordictrecord": 375, "videorecord": 376, "logger": [377, 414, 426, 427], "csvlogger": 378, "generate_exp_nam": 379, "get_logg": 380, "mlflowlogg": 381, "tensorboardlogg": 382, "wandblogg": 383, "set_auto_unwrap_transformed_env": 384, "batchsubsampl": 385, "clearcudacach": 386, "countframeslog": 387, "logscalar": 388, "logvalidationreward": 389, "optimizerhook": 390, "replaybuffertrain": 391, "rewardnorm": 392, "selectkei": 393, "trainer": [394, 414, 418], "trainerhookbas": 395, "updateweight": 396, "correct_for_frame_skip": 397, "get_stats_random_rollout": 398, "make_collector_offpolici": 399, "make_collector_onpolici": 400, "make_dqn_loss": 401, "make_replay_buff": 402, "make_target_updat": 403, "make_train": 404, "parallel_env_constructor": 405, "sync_async_collector": 406, "sync_sync_collector": 407, "transformed_env_constructor": 408, "readm": [409, 428], "tuto": [409, 428], "api": 410, "contribut": [411, 436], "content": 411, "modul": [412, 417, 420, 421, 423, 427, 436], "tensordictmodul": [412, 421, 423, 436], "wrapper": [412, 423], "probabilist": [412, 423], "q": [412, 418, 420, 423], "oper": 412, "join": 412, "hook": [412, 414, 418], "regular": 412, "planner": 412, "object": [413, 417, 424, 436], "torch": 413, "vmap": [413, 436], "dqn": [413, 418, 420], "ddpg": [413, 417, 430], "sac": 413, "redq": 413, "crossq": 413, "iql": 413, "cql": 413, "gail": 413, "dt": 413, "td3": 413, "bc": 413, "ppo": [413, 419, 431], "head": 413, "a2c": 413, "dreamer": 413, "builder": 414, "_util": 415, "comput": [416, 418, 432, 435], "time": [416, 417, 435], "code": [417, 432], "overview": [417, 420], "setup": [417, 420], "__init__": 417, "estim": 417, "put": 417, "togeth": [417, 432], "call": 417, "parallel": [417, 429, 437], "execut": [417, 429, 432], "stat": 417, "build": [417, 418, 427, 434], "evalu": 417, "construct": 417, "target": [417, 418, 424], "network": [417, 418, 419, 420, 423, 430, 431], "updat": 417, "experi": [417, 432], "result": [417, 419, 430, 431], "conclus": [417, 418, 419, 420, 421, 430, 431, 432, 434], "next": [417, 419, 422, 425, 430, 431, 434], "deep": 418, "collect": [418, 419, 425], "paramet": [418, 419, 424], "hyperparamet": [418, 419, 430, 431], "regist": 418, "possibl": 418, "improv": 418, "defin": [419, 430, 431], "loop": [419, 420, 421, 427, 430, 431, 432], "recurr": [420, 421], "convolut": 420, "select": 420, "further": [420, 424], "read": 420, "export": 421, "introduct": [421, 436], "fast": 421, "recap": 421, "simpl": [421, 432], "stochast": 421, "aotinductor": 421, "free": 421, "c": 421, "onnx": 421, "run": [421, 422, 437], "rollout": [421, 422, 429, 430, 431, 432, 437], "creat": 422, "s": [423, 424], "output": 424, "consider": 424, "log": 426, "first": 427, "divers": 429, "competit": 430, "group": 430, "critic": [430, 431], "pendulum": 432, "write": 432, "_step": 432, "simul": 432, "_reset": 432, "metadata": 432, "_spec": 432, "shape": 432, "seed": [432, 437], "wrap": 432, "class": [432, 436], "test": 432, "our": 432, "pretrain": 433, "vanilla": 434, "integr": 434, "tensorclass": 434, "other": 434, "pytre": 434, "iter": 434, "over": 434, "fix": 434, "priorit": 434, "save": 434, "raw": 434, "imag": 434, "more": 434, "complex": 434, "config": 436, "sequenc": 436, "program": 436, "ensembl": 436, "meta": 436, "sync": 436, "multiprocess": 436, "async": 436, "frame_skip": 437, "deepmind": 437, "control": 437, "devic": 437, "close": 437, "access": 437, "attribut": 437, "kwarg": 437}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})