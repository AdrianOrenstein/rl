Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 100, 102, 103, 105, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 142, 143, 145, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 164, 165, 177, 178, 180, 181, 183, 184, 186, 191, 193, 194, 197, 201, 206, 207, 211, 212, 213, 214, 216, 225, 226, 227, 228, 229, 231, 232, 233, 236, 239, 240, 241, 243, 246, 250, 251, 253, 254, 255, 256, 258, 263, 264, 266, 268, 270, 271, 272, 276, 277, 279, 287, 292, 293, 295, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 320, 324, 325, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 360, 361, 362, 363, 364, 378, 380, 383, 387, 393, 394, 398, 399, 402, 409, 410, 411, 412, 415, 416, 417, 421, 422, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441], "open": [0, 5, 7, 56, 58, 65, 79, 93, 244, 422, 434, 435, 440], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "reinforc": [0, 3, 9, 140, 141, 184, 241, 248, 253, 254, 255, 256, 260, 287, 308, 325, 326, 328, 331, 332, 333, 335, 340, 341, 347, 348, 349, 350, 414, 420, 422, 426, 427, 432, 436, 439, 440], "learn": [0, 3, 7, 8, 9, 21, 50, 125, 140, 141, 145, 148, 157, 184, 241, 248, 253, 254, 255, 256, 260, 273, 280, 286, 287, 308, 325, 326, 328, 331, 332, 333, 335, 339, 340, 341, 346, 347, 348, 349, 350, 414, 417, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 17, 20, 142, 184, 225, 280, 302, 311, 319, 325, 327, 342, 343, 345, 347, 389, 413, 415, 416, 417, 418, 421, 422, 423, 429, 432, 434, 435, 437, 438, 441], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 21, 22, 23, 59, 75, 122, 123, 124, 133, 143, 167, 414, 415, 416, 417, 419, 421, 422, 423, 425, 426, 427, 429, 434, 435, 436, 441], "pytorch": [0, 1, 2, 3, 26, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 164, 184, 228, 229, 248, 264, 268, 279, 280, 398, 413, 415, 416, 418, 421, 423, 424, 428, 432, 434, 435, 436, 440, 441], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 17, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 75, 119, 122, 125, 129, 133, 136, 139, 140, 141, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 174, 184, 204, 232, 240, 241, 243, 248, 268, 286, 315, 387, 388, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 99, 100, 102, 106, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 172, 174, 176, 177, 178, 180, 181, 183, 184, 187, 188, 189, 191, 193, 194, 195, 198, 201, 205, 206, 207, 211, 212, 216, 219, 223, 224, 225, 226, 230, 231, 232, 233, 234, 236, 238, 240, 241, 243, 244, 247, 249, 250, 251, 253, 263, 264, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 287, 296, 298, 302, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 378, 380, 387, 388, 393, 410, 411, 412, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 102, 119, 120, 121, 122, 125, 128, 129, 136, 142, 148, 149, 152, 157, 158, 159, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 201, 202, 203, 207, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 236, 237, 239, 240, 241, 243, 315, 343, 350, 412, 422, 423, 425, 426, 434, 435, 436, 438], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 187, 189, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 207, 209, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 283, 285, 286, 287, 288, 289, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 341, 342, 343, 345, 346, 347, 348, 350, 351, 353, 358, 359, 360, 361, 362, 363, 366, 378, 379, 380, 389, 395, 398, 401, 402, 406, 408, 409, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "pypi": [0, 2, 440], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 89, 94, 100, 102, 107, 108, 119, 122, 125, 129, 132, 135, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 184, 188, 189, 205, 211, 226, 229, 231, 232, 233, 236, 238, 240, 241, 242, 243, 248, 249, 250, 251, 264, 266, 267, 268, 270, 271, 277, 278, 279, 286, 288, 296, 297, 301, 303, 305, 311, 314, 315, 328, 339, 343, 350, 380, 387, 395, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 438, 440, 441], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 100, 102, 113, 119, 122, 125, 128, 129, 130, 132, 133, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 184, 229, 232, 236, 241, 242, 243, 244, 245, 246, 249, 260, 268, 271, 279, 302, 307, 308, 314, 315, 319, 325, 335, 343, 345, 360, 365, 373, 387, 394, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 440, 441], "about": [0, 3, 5, 7, 9, 21, 22, 23, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 75, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 416, 417, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 440, 441], "instruct": [0, 6, 7, 10, 25, 193, 195, 417, 421, 422, 423, 424, 434, 435, 438], "dedic": [0, 1, 2, 3, 21, 22, 23, 24, 45, 64, 73, 74, 102, 148, 157, 303, 304, 305, 416, 421, 426, 428, 429, 431, 433, 435], "section": [0, 2, 3, 4, 27, 125, 264, 268, 422, 425, 426, 431, 434, 435], "below": [0, 2, 3, 7, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 64, 67, 72, 73, 74, 80, 89, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 189, 205, 211, 226, 231, 232, 233, 236, 238, 243, 250, 251, 264, 267, 268, 271, 277, 296, 311, 314, 395, 421, 422, 423, 424, 425, 426, 434, 436], "pip": [0, 10, 425, 426, 427, 428, 429, 430, 431, 435, 440, 441], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 42, 43, 45, 46, 48, 50, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 78, 79, 86, 89, 93, 94, 96, 100, 101, 102, 105, 107, 108, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 175, 176, 177, 181, 183, 184, 185, 186, 187, 190, 191, 194, 198, 201, 206, 207, 209, 211, 212, 215, 216, 219, 220, 225, 226, 227, 230, 231, 233, 235, 236, 238, 239, 240, 241, 243, 244, 250, 251, 257, 258, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 298, 302, 306, 308, 310, 311, 312, 313, 315, 318, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 384, 389, 395, 402, 408, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "python": [0, 1, 3, 5, 6, 7, 10, 14, 15, 24, 57, 62, 63, 64, 67, 72, 73, 74, 79, 102, 144, 160, 161, 174, 264, 265, 266, 268, 269, 270, 274, 275, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 95, 100, 107, 108, 113, 115, 119, 122, 125, 128, 129, 130, 135, 136, 148, 149, 152, 157, 158, 159, 180, 181, 184, 185, 189, 198, 205, 207, 211, 212, 228, 229, 233, 236, 241, 244, 251, 258, 264, 266, 268, 270, 271, 274, 275, 277, 279, 282, 302, 306, 307, 308, 311, 312, 314, 315, 327, 337, 342, 343, 345, 379, 380, 397, 416, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "low": [0, 3, 31, 34, 61, 72, 77, 80, 100, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 177, 187, 193, 201, 204, 226, 234, 294, 295, 296, 306, 308, 311, 315, 318, 421, 422, 423, 425, 434, 435, 436, 440], "high": [0, 3, 9, 31, 34, 56, 58, 65, 73, 79, 80, 100, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 177, 187, 193, 201, 204, 206, 226, 234, 294, 295, 296, 306, 308, 311, 315, 318, 360, 365, 373, 421, 422, 423, 434, 435, 436, 438, 440], "level": [0, 2, 3, 4, 25, 34, 35, 43, 57, 62, 63, 64, 69, 73, 74, 102, 128, 130, 184, 224, 232, 266, 270, 342, 421, 422, 425, 429, 440], "abstract": [0, 1, 3, 8, 19, 76, 77, 117, 125, 208, 272, 364, 390, 399, 418, 423, 425, 436, 440], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 93, 94, 95, 96, 98, 102, 105, 106, 107, 108, 109, 111, 113, 115, 119, 122, 125, 126, 128, 129, 130, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 169, 175, 176, 177, 179, 180, 181, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 201, 203, 204, 205, 206, 209, 211, 216, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 245, 247, 248, 256, 258, 263, 264, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 278, 280, 283, 288, 291, 301, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 355, 358, 359, 360, 361, 362, 363, 364, 378, 387, 388, 395, 398, 408, 412, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "intend": [0, 7, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 78, 80, 81, 82, 83, 84, 183, 193, 298, 343, 416, 440], "effici": [0, 1, 2, 4, 8, 16, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 264, 280, 328, 416, 421, 422, 423, 424, 425, 428, 429, 431, 433, 434, 435, 437, 438, 440], "modular": [0, 317, 425, 438, 440], "document": [0, 2, 5, 7, 11, 21, 22, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 146, 147, 148, 149, 152, 157, 158, 159, 160, 161, 233, 243, 413, 422, 424, 425, 426, 429, 432, 440], "properli": [0, 1, 3, 80, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 189, 266, 270, 423, 430, 434, 435, 436, 440], "test": [0, 3, 5, 119, 120, 121, 122, 125, 129, 134, 135, 136, 140, 141, 148, 149, 152, 157, 158, 159, 164, 231, 236, 393, 408, 423, 424, 425, 437, 440], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 99, 100, 102, 105, 107, 108, 109, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 162, 163, 164, 172, 175, 176, 177, 180, 181, 183, 184, 188, 189, 191, 194, 195, 196, 201, 204, 205, 207, 209, 211, 216, 218, 219, 220, 223, 224, 225, 226, 228, 231, 232, 233, 236, 238, 239, 240, 241, 243, 245, 246, 247, 248, 253, 254, 255, 256, 257, 260, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 280, 284, 286, 287, 289, 290, 291, 301, 302, 303, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 366, 378, 380, 382, 385, 386, 387, 388, 389, 394, 408, 410, 411, 414, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441], "code": [0, 3, 5, 7, 8, 14, 15, 61, 67, 119, 122, 125, 129, 135, 136, 148, 149, 152, 157, 158, 159, 211, 233, 236, 246, 264, 265, 268, 269, 311, 315, 317, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441], "aim": [0, 2, 3, 7, 45, 68, 69, 211, 236, 238, 271, 401, 415, 416, 417, 421, 422, 440], "support": [0, 1, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 37, 56, 58, 60, 65, 72, 79, 89, 93, 95, 109, 111, 115, 116, 118, 119, 120, 121, 122, 128, 130, 134, 143, 145, 148, 150, 154, 167, 181, 184, 195, 201, 207, 226, 227, 230, 234, 241, 260, 284, 286, 295, 298, 307, 308, 311, 314, 317, 335, 343, 360, 361, 362, 363, 385, 414, 416, 418, 423, 424, 426, 427, 435, 436, 438, 440], "research": [0, 7, 9, 140, 141, 246, 440], "most": [0, 1, 2, 3, 7, 8, 14, 15, 50, 52, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 193, 239, 421, 423, 425, 426, 427, 428, 429, 430, 431, 436, 440, 441], "written": [0, 1, 2, 3, 39, 56, 57, 58, 60, 62, 63, 64, 65, 70, 73, 74, 78, 79, 91, 93, 100, 102, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 154, 157, 158, 159, 175, 176, 177, 184, 195, 198, 203, 204, 219, 224, 227, 228, 233, 239, 243, 244, 249, 287, 302, 311, 314, 315, 319, 325, 327, 342, 345, 347, 359, 378, 379, 380, 416, 417, 418, 421, 424, 425, 427, 433, 436, 440], "highli": [0, 2, 426, 440, 441], "wai": [0, 1, 2, 3, 4, 102, 113, 133, 184, 211, 214, 231, 232, 238, 239, 266, 268, 270, 345, 360, 361, 362, 363, 416, 421, 422, 423, 425, 426, 428, 429, 433, 434, 435, 436, 437, 438, 440, 441], "easili": [0, 1, 2, 3, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 417, 421, 422, 423, 426, 427, 428, 431, 434, 435, 440, 441], "swap": [0, 1, 3, 128, 239, 423, 425, 437, 440], "compon": [0, 1, 2, 3, 57, 61, 62, 63, 64, 73, 74, 93, 94, 95, 96, 102, 109, 111, 115, 260, 289, 307, 308, 313, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 394, 398, 421, 422, 423, 424, 425, 427, 428, 431, 433, 434, 435, 436, 437, 440], "transform": [0, 1, 4, 8, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 37, 45, 50, 57, 59, 62, 63, 64, 66, 73, 74, 75, 90, 91, 98, 102, 111, 116, 119, 122, 125, 126, 129, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 170, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 252, 253, 257, 260, 261, 266, 270, 285, 288, 289, 295, 297, 306, 309, 310, 318, 321, 322, 324, 331, 344, 378, 380, 395, 412, 414, 420, 422, 424, 425, 427, 429, 430, 431, 432, 437, 439], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 57, 59, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 102, 113, 118, 119, 122, 125, 126, 129, 133, 136, 139, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 191, 194, 201, 204, 226, 230, 233, 234, 240, 241, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 297, 298, 306, 308, 310, 313, 318, 321, 342, 380, 421, 422, 424, 425, 426, 427, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "write": [0, 2, 3, 8, 14, 15, 17, 20, 26, 45, 50, 56, 57, 58, 59, 62, 63, 64, 65, 73, 74, 78, 79, 100, 102, 107, 111, 118, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 178, 180, 181, 183, 184, 185, 187, 188, 189, 192, 195, 196, 197, 199, 202, 203, 209, 210, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 239, 240, 243, 302, 314, 315, 317, 319, 328, 329, 330, 332, 333, 334, 341, 346, 348, 350, 351, 359, 364, 380, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441], "new": [0, 1, 2, 3, 4, 8, 14, 15, 17, 20, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 99, 100, 102, 106, 119, 122, 125, 129, 136, 143, 148, 149, 152, 155, 156, 157, 158, 159, 175, 176, 181, 219, 223, 232, 233, 240, 241, 243, 258, 264, 266, 270, 287, 314, 315, 320, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 387, 417, 421, 423, 426, 428, 434, 435, 436, 440, 441], "ones": [0, 2, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 107, 108, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 153, 157, 158, 159, 185, 188, 191, 192, 194, 207, 211, 216, 223, 226, 232, 233, 236, 238, 241, 243, 248, 274, 275, 286, 298, 314, 325, 326, 328, 329, 341, 345, 346, 348, 350, 351, 366, 421, 423, 425, 434, 435, 436, 438, 440, 441], "littl": [0, 1, 3, 75, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 248, 325, 327, 342, 345, 347, 423, 424, 425, 429, 438, 440, 441], "effort": [0, 3, 436, 438, 440], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 162, 163, 164, 172, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 205, 207, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 293, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 358, 360, 361, 362, 363, 364, 378, 379, 387, 388, 389, 391, 393, 395, 398, 400, 401, 402, 408, 412, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "repo": [0, 6, 184, 227, 236, 415, 435, 440], "attempt": [0, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 154, 157, 158, 159, 175, 243, 248, 315, 330, 333, 341, 358, 417, 428, 440], "align": [0, 264, 268, 440], "exist": [0, 1, 2, 3, 4, 21, 24, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 93, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 185, 192, 231, 233, 243, 244, 258, 315, 328, 348, 402, 412, 434, 435, 440, 441], "ecosystem": [0, 425, 429, 440], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 102, 105, 107, 113, 115, 119, 122, 125, 126, 129, 133, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 181, 184, 205, 224, 225, 226, 227, 228, 230, 231, 232, 233, 243, 245, 264, 266, 268, 270, 276, 278, 295, 308, 310, 315, 325, 328, 342, 343, 345, 347, 380, 417, 421, 422, 423, 424, 425, 426, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "dataset": [0, 41, 45, 56, 57, 58, 59, 64, 65, 66, 71, 73, 74, 78, 79, 89, 92, 100, 102, 105, 107, 108, 145, 240, 380, 414, 421, 422, 426, 437, 438, 440, 441], "pillar": [0, 440], "environ": [0, 2, 5, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 67, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 177, 178, 180, 181, 183, 184, 185, 189, 191, 192, 193, 194, 199, 205, 206, 207, 211, 212, 213, 216, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 239, 240, 241, 244, 247, 249, 266, 270, 272, 273, 310, 332, 336, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 388, 389, 391, 393, 401, 402, 403, 404, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 425, 427, 428, 429, 430, 432, 437, 438, 439], "model": [0, 3, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 78, 79, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 184, 191, 211, 226, 236, 238, 242, 243, 250, 251, 252, 257, 259, 271, 272, 273, 277, 278, 285, 288, 297, 303, 304, 305, 309, 314, 320, 322, 325, 326, 327, 328, 330, 331, 332, 333, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 358, 398, 403, 404, 405, 414, 415, 417, 418, 420, 423, 426, 429, 432, 434, 435, 436, 438, 439, 441], "data": [0, 3, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 169, 176, 178, 181, 183, 184, 191, 192, 194, 196, 198, 201, 203, 207, 213, 216, 223, 224, 230, 232, 233, 234, 239, 241, 243, 247, 248, 260, 263, 266, 270, 273, 276, 277, 287, 289, 298, 301, 302, 307, 310, 311, 312, 314, 315, 317, 318, 319, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 378, 380, 387, 389, 395, 398, 400, 403, 408, 410, 411, 412, 414, 416, 417, 418, 420, 424, 425, 426, 427, 428, 432, 436, 437, 438, 439, 441], "util": [0, 3, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 30, 37, 42, 50, 60, 61, 64, 66, 67, 72, 107, 108, 119, 120, 121, 122, 125, 129, 134, 135, 136, 141, 148, 149, 150, 151, 152, 157, 158, 159, 165, 184, 211, 216, 226, 238, 243, 246, 249, 250, 251, 257, 264, 266, 268, 270, 321, 322, 323, 324, 343, 408, 414, 419, 421, 423, 425, 427, 428, 429, 435, 436, 438, 440, 441], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 95, 99, 100, 113, 115, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 162, 164, 181, 183, 185, 188, 189, 190, 198, 201, 204, 205, 207, 211, 219, 226, 228, 231, 232, 233, 236, 238, 243, 244, 264, 266, 267, 268, 270, 273, 277, 289, 295, 296, 301, 306, 308, 310, 311, 313, 314, 315, 325, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 359, 360, 361, 362, 363, 378, 389, 401, 411, 416, 417, 422, 423, 425, 427, 428, 430, 434, 435, 437, 438, 440, 441], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 113, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 162, 164, 181, 183, 185, 188, 198, 201, 204, 207, 211, 219, 226, 228, 231, 232, 233, 236, 238, 243, 244, 264, 266, 267, 268, 269, 270, 273, 277, 295, 296, 306, 311, 314, 315, 328, 348, 359, 369, 370, 371, 372, 374, 375, 376, 377, 378, 411, 416, 417, 422, 423, 425, 427, 430, 434, 435, 436, 437, 438, 440, 441], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 39, 50, 57, 62, 63, 64, 66, 70, 73, 74, 102, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 153, 157, 158, 159, 181, 184, 216, 224, 243, 248, 266, 270, 287, 395, 398, 400, 403, 404, 408, 410, 411, 414, 417, 418, 425, 438, 441], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 92, 99, 100, 102, 103, 105, 107, 108, 109, 114, 117, 118, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 175, 176, 177, 184, 188, 191, 194, 201, 211, 223, 226, 231, 232, 233, 236, 238, 239, 240, 241, 243, 247, 250, 251, 264, 265, 268, 269, 271, 273, 276, 277, 302, 307, 308, 311, 313, 314, 315, 319, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 366, 384, 389, 401, 408, 409, 410, 411, 412, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441], "etc": [0, 2, 3, 7, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 223, 233, 243, 244, 271, 277, 295, 417, 422, 423, 429, 438, 440, 441], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 102, 106, 109, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 164, 169, 172, 176, 177, 180, 184, 191, 194, 195, 203, 206, 207, 223, 224, 226, 230, 231, 232, 233, 240, 241, 243, 245, 248, 250, 251, 271, 276, 277, 278, 287, 298, 310, 316, 317, 325, 327, 342, 345, 347, 350, 354, 355, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 389, 398, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "few": [0, 2, 8, 108, 129, 380, 389, 423, 424, 427, 434, 435, 438, 440, 441], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 31, 56, 58, 80, 119, 122, 125, 128, 129, 130, 131, 136, 148, 149, 152, 154, 157, 158, 159, 162, 163, 191, 194, 315, 319, 345, 382, 416, 421, 423, 424, 434, 435, 436, 440, 441], "possibl": [0, 2, 3, 4, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 94, 100, 107, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 188, 211, 226, 231, 232, 233, 236, 238, 243, 250, 251, 264, 265, 268, 269, 314, 378, 393, 398, 416, 421, 423, 424, 425, 427, 429, 430, 434, 435, 436, 438, 440, 441], "standard": [0, 2, 3, 52, 122, 207, 218, 240, 241, 245, 246, 247, 261, 273, 279, 280, 285, 306, 327, 342, 345, 350, 351, 360, 361, 362, 363, 421, 422, 426, 427, 435, 438, 440], "numpi": [0, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 130, 136, 148, 149, 152, 157, 158, 159, 201, 229, 234, 244, 398, 425, 436, 438, 440, 441], "common": [0, 2, 3, 4, 77, 119, 129, 134, 178, 195, 303, 304, 305, 309, 325, 326, 327, 328, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 408, 415, 416, 417, 418, 421, 423, 427, 430, 433, 434, 435, 436, 437, 440, 441], "openai": [0, 7, 27, 128, 130, 136, 154, 423, 436, 440, 441], "gym": [0, 1, 3, 4, 8, 14, 15, 17, 20, 24, 25, 62, 119, 122, 125, 126, 128, 129, 130, 131, 133, 136, 140, 141, 143, 144, 148, 149, 152, 154, 157, 158, 159, 162, 163, 168, 172, 174, 180, 184, 187, 195, 202, 203, 207, 209, 214, 216, 219, 226, 232, 239, 240, 243, 244, 408, 415, 421, 422, 423, 424, 426, 430, 431, 436, 437, 438], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 99, 100, 102, 107, 108, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 143, 144, 148, 149, 150, 151, 152, 154, 157, 158, 159, 177, 180, 184, 185, 187, 188, 189, 191, 193, 194, 198, 201, 205, 207, 211, 212, 216, 223, 224, 225, 226, 227, 231, 232, 233, 236, 238, 240, 241, 243, 244, 248, 268, 270, 276, 277, 302, 306, 307, 311, 312, 314, 315, 316, 317, 325, 327, 328, 329, 333, 334, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 360, 361, 362, 363, 364, 380, 387, 402, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 440, 441], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 169, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 294, 295, 296, 298, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 382, 385, 387, 389, 391, 392, 393, 394, 395, 396, 398, 402, 408, 410, 411, 412, 416, 424, 426, 429, 434, 435, 436, 438, 440], "On": [0, 3, 7, 21, 22, 23, 24, 34, 265, 269, 416, 422, 434, 435], "end": [0, 2, 3, 14, 15, 20, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 91, 100, 102, 106, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 195, 201, 209, 224, 225, 231, 233, 243, 250, 251, 264, 265, 268, 269, 272, 310, 328, 348, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "come": [0, 1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 45, 50, 113, 119, 122, 125, 129, 135, 136, 139, 148, 149, 152, 157, 158, 159, 191, 194, 301, 302, 303, 304, 305, 311, 319, 325, 327, 342, 345, 347, 380, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 438, 440, 441], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 79, 93, 94, 95, 102, 106, 109, 115, 119, 122, 125, 127, 129, 130, 135, 136, 140, 141, 142, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 164, 173, 174, 176, 178, 180, 181, 184, 185, 188, 191, 194, 201, 202, 203, 204, 211, 216, 224, 225, 226, 227, 231, 232, 233, 236, 238, 240, 241, 243, 244, 264, 266, 268, 270, 272, 276, 277, 284, 286, 287, 295, 301, 306, 314, 315, 327, 328, 334, 339, 342, 343, 345, 348, 364, 380, 388, 389, 393, 395, 404, 412, 415, 416, 417, 419, 421, 422, 423, 424, 425, 427, 428, 429, 433, 434, 435, 436, 437, 438, 440, 441], "re": [0, 2, 3, 8, 13, 21, 22, 23, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 102, 106, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 198, 243, 270, 274, 275, 278, 311, 315, 387, 418, 421, 423, 424, 426, 428, 433, 434, 436, 440, 441], "usabl": [0, 418, 424, 440], "function": [0, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 93, 94, 95, 96, 102, 109, 111, 115, 119, 122, 125, 126, 129, 130, 136, 148, 149, 152, 157, 158, 159, 164, 172, 174, 175, 176, 180, 181, 191, 194, 201, 203, 230, 231, 233, 234, 240, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 276, 277, 278, 281, 282, 283, 285, 287, 290, 291, 293, 296, 298, 303, 304, 305, 306, 308, 310, 311, 313, 314, 315, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 398, 408, 414, 416, 421, 424, 425, 426, 427, 430, 433, 436, 438, 441], "cost": [0, 2, 33, 94, 325, 327, 342, 345, 347, 417, 421, 422, 425, 434, 435, 436, 438], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 92, 94, 100, 102, 103, 105, 107, 108, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 157, 158, 159, 162, 163, 166, 167, 168, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 283, 285, 288, 290, 291, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 310, 311, 313, 314, 315, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 384, 388, 398, 401, 403, 408, 409, 410, 411, 412, 414, 416, 418, 421, 422, 423, 425, 427, 428, 430, 433, 434, 435, 436, 437, 438, 440, 441], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 57, 58, 60, 61, 64, 65, 67, 72, 73, 74, 75, 78, 79, 95, 99, 100, 103, 107, 115, 119, 122, 125, 126, 129, 133, 136, 139, 143, 148, 149, 150, 151, 152, 157, 158, 159, 183, 184, 191, 194, 201, 226, 229, 231, 240, 241, 243, 266, 270, 276, 277, 287, 308, 313, 414, 418, 421, 422, 424, 425, 426, 434, 435, 436, 437, 438, 440, 441], "good": [0, 1, 4, 9, 148, 421, 423, 424, 425, 427, 435, 440, 441], "runtim": [0, 2, 3, 26, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 436], "perform": [0, 1, 2, 3, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 78, 80, 81, 82, 83, 84, 119, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 148, 149, 152, 154, 157, 158, 159, 162, 163, 165, 191, 194, 201, 206, 228, 231, 233, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 281, 282, 285, 286, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 327, 328, 337, 345, 348, 393, 398, 417, 421, 422, 423, 424, 425, 426, 429, 431, 433, 434, 435, 436, 441], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 19, 21, 22, 23, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 91, 100, 102, 107, 108, 111, 118, 119, 120, 121, 122, 125, 128, 129, 130, 134, 135, 136, 139, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 162, 184, 189, 224, 226, 240, 243, 249, 266, 270, 287, 303, 304, 305, 315, 328, 334, 339, 343, 350, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441], "read": [0, 2, 3, 7, 26, 34, 35, 39, 43, 57, 59, 62, 63, 64, 66, 69, 70, 73, 74, 93, 94, 95, 96, 99, 102, 109, 111, 115, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 209, 210, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 239, 240, 243, 249, 283, 302, 303, 304, 305, 307, 310, 311, 314, 315, 317, 319, 320, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 360, 361, 362, 363, 364, 380, 393, 398, 416, 421, 422, 423, 425, 426, 427, 433, 434, 435, 436, 437, 440, 441], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 16, 24, 26, 418, 421, 426, 429, 433, 437, 441], "beyond": [0, 45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 425], "api": [0, 1, 2, 3, 5, 26, 34, 35, 37, 43, 45, 60, 69, 72, 77, 122, 125, 150, 151, 154, 211, 238, 240, 241, 248, 416, 417, 418, 425, 426, 427, 428, 429, 430, 434, 435, 436, 438, 440, 441], "check": [0, 2, 3, 4, 5, 6, 7, 9, 14, 15, 17, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 85, 87, 90, 91, 98, 107, 119, 122, 125, 126, 128, 129, 130, 136, 142, 148, 149, 152, 157, 158, 159, 164, 165, 184, 185, 189, 197, 203, 212, 226, 229, 233, 243, 244, 258, 302, 307, 308, 311, 312, 313, 314, 315, 328, 339, 350, 380, 413, 416, 417, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "paper": [0, 120, 121, 123, 124, 131, 134, 135, 140, 141, 143, 144, 154, 162, 163, 211, 236, 238, 251, 264, 288, 297, 332, 340, 350, 421, 423, 434, 435], "releas": [0, 4, 7, 10, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 328, 348], "sync": [0, 1, 14, 15, 20, 21, 22, 23, 24, 119, 400, 408, 418, 421], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 30, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 102, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 201, 226, 231, 240, 243, 248, 316, 317, 360, 380, 421, 423, 424, 428, 431, 434, 435, 436, 441], "make": [0, 1, 2, 3, 4, 7, 11, 30, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 77, 79, 102, 105, 109, 111, 118, 119, 122, 125, 129, 130, 133, 135, 136, 138, 144, 148, 149, 152, 157, 158, 159, 164, 175, 177, 189, 196, 204, 207, 211, 212, 216, 220, 224, 228, 232, 236, 243, 246, 249, 264, 265, 266, 268, 269, 270, 276, 277, 279, 307, 315, 325, 327, 342, 345, 347, 360, 361, 362, 363, 378, 395, 404, 412, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "sure": [0, 1, 3, 4, 7, 37, 109, 122, 129, 133, 189, 216, 307, 412, 416, 421, 423, 424, 425, 428, 434, 435, 436, 438, 440, 441], "alwai": [0, 2, 3, 14, 15, 23, 30, 31, 37, 42, 50, 60, 61, 67, 72, 77, 80, 89, 90, 91, 98, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 206, 228, 240, 241, 243, 335, 343, 416, 417, 422, 423, 424, 425, 434, 435, 436, 438], "enjoi": [0, 2, 3, 429], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 143, 146, 147, 150, 151, 395, 423, 434, 435, 436, 440], "featur": [0, 2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 54, 60, 72, 77, 78, 100, 107, 108, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 164, 181, 184, 198, 201, 203, 209, 226, 227, 235, 240, 246, 250, 251, 261, 262, 264, 265, 266, 268, 269, 270, 271, 276, 279, 280, 315, 322, 325, 327, 342, 345, 347, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 412, 416, 417, 421, 422, 423, 424, 425, 427, 428, 429, 431, 436, 438, 440, 441], "recent": [0, 7, 239, 241, 244, 441], "version": [0, 1, 2, 3, 6, 29, 30, 32, 35, 37, 38, 42, 43, 44, 47, 49, 50, 53, 55, 56, 58, 60, 61, 66, 67, 72, 81, 82, 83, 84, 107, 119, 122, 125, 128, 129, 130, 131, 136, 143, 144, 148, 149, 150, 152, 154, 157, 158, 159, 162, 163, 175, 184, 230, 239, 240, 241, 243, 244, 246, 266, 270, 278, 284, 305, 325, 327, 342, 343, 345, 347, 348, 360, 363, 415, 416, 417, 421, 423, 424, 425, 426, 428, 431, 434, 435, 436, 437, 441], "although": [0, 1, 3, 8, 24, 30, 37, 42, 60, 61, 67, 72, 80, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 417, 418, 421, 422, 429, 438], "core": [0, 2, 3, 8, 57, 62, 63, 64, 73, 74, 102, 418, 424, 427, 440], "guarante": [0, 2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 240, 241, 243, 315, 429], "backward": [0, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243, 264, 265, 268, 269, 286, 315, 325, 326, 328, 329, 333, 334, 341, 345, 346, 347, 348, 350, 351, 421, 423, 424, 425, 428, 429, 431, 434, 435, 436], "compat": [0, 2, 3, 7, 14, 15, 17, 26, 30, 37, 42, 50, 60, 61, 67, 72, 94, 102, 105, 107, 108, 109, 113, 119, 122, 125, 129, 131, 136, 145, 148, 149, 152, 157, 158, 159, 184, 224, 236, 240, 241, 243, 244, 264, 265, 266, 268, 269, 270, 312, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 354, 421, 424, 438], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 17, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 72, 73, 74, 75, 78, 79, 89, 93, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 125, 126, 129, 134, 135, 136, 139, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 169, 176, 180, 181, 183, 185, 188, 189, 191, 192, 193, 194, 203, 204, 207, 209, 211, 213, 216, 219, 223, 224, 225, 226, 231, 232, 233, 236, 238, 240, 241, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 276, 277, 278, 285, 286, 287, 295, 298, 306, 307, 308, 310, 314, 318, 319, 325, 326, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 359, 360, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 389, 416, 417, 420, 421, 422, 423, 424, 425, 427, 428, 433, 434, 435, 436, 438, 439, 440, 441], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 99, 100, 102, 107, 108, 115, 119, 120, 121, 122, 125, 128, 129, 131, 132, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 283, 286, 287, 290, 291, 294, 295, 296, 298, 302, 306, 308, 313, 314, 315, 317, 318, 321, 322, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 367, 368, 389, 396, 408, 412, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 19, 23, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 64, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 94, 129, 148, 157, 204, 211, 214, 238, 328, 331, 343, 417, 418, 421, 422, 423, 424, 427, 429, 438, 440, 441], "tensordict": [0, 1, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 175, 176, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 207, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 259, 260, 263, 266, 270, 272, 273, 276, 277, 287, 288, 289, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 378, 379, 389, 393, 394, 395, 397, 398, 414, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 441], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 203, 213, 231, 232, 241, 303, 304, 305, 314, 333, 341, 350, 414, 421, 434, 436, 440], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 30, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 78, 79, 89, 91, 93, 102, 110, 116, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 160, 174, 211, 238, 243, 273, 382, 387, 398, 418, 422, 425, 431, 434], "root": [0, 2, 3, 34, 35, 43, 45, 57, 62, 63, 64, 69, 73, 74, 79, 90, 91, 98, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 184, 205, 227, 228, 266, 267, 270, 295, 296, 417, 424, 426, 434, 435, 436, 438, 441], "http": [0, 2, 5, 6, 7, 10, 14, 15, 21, 22, 23, 27, 57, 75, 99, 100, 120, 121, 123, 124, 131, 133, 134, 135, 140, 141, 143, 144, 145, 146, 147, 150, 151, 154, 160, 161, 162, 163, 184, 211, 236, 246, 252, 253, 254, 255, 256, 257, 260, 261, 262, 268, 273, 274, 275, 280, 281, 282, 286, 287, 288, 290, 291, 297, 308, 325, 326, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 360, 365, 373, 413, 432, 437, 440], "github": [0, 2, 5, 6, 7, 10, 21, 22, 23, 27, 120, 121, 123, 124, 128, 131, 134, 135, 140, 141, 143, 144, 146, 147, 150, 151, 154, 160, 161, 162, 163, 181, 184, 236, 246, 427, 431, 434, 435, 440], "com": [0, 2, 5, 6, 7, 10, 21, 22, 23, 27, 120, 121, 123, 124, 131, 133, 134, 135, 140, 141, 143, 144, 146, 147, 150, 151, 154, 160, 161, 162, 163, 184, 246, 440], "setup": [0, 1, 7, 120, 121, 133, 134, 135, 160], "py": [0, 3, 27, 128, 130, 174, 184, 258, 288, 297, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "develop": [0, 3, 4, 7, 45, 133, 421, 440], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 119, 122, 125, 127, 129, 131, 132, 136, 148, 149, 152, 153, 154, 157, 158, 159, 164, 170, 175, 177, 179, 180, 181, 183, 184, 187, 189, 193, 199, 203, 205, 211, 212, 214, 221, 226, 228, 231, 232, 233, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 260, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 278, 280, 286, 298, 306, 307, 308, 310, 311, 312, 315, 317, 318, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 354, 358, 360, 361, 362, 363, 364, 366, 378, 381, 382, 385, 387, 388, 391, 398, 400, 408, 414, 417, 420, 421, 423, 425, 427, 428, 429, 432, 436, 439, 441], "seri": [0, 2, 3, 7, 8, 54, 92, 103, 113, 114, 117, 118, 157, 206, 232, 380, 416, 417, 421, 422, 423, 430, 431, 434, 435, 438, 441], "quick": [0, 425], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 183, 201, 204, 227, 232, 243, 246, 345, 415, 416, 417, 421, 422, 423, 424, 427, 431, 434, 435, 436, 438, 440, 441], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 100, 102, 103, 105, 106, 107, 108, 113, 115, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 168, 172, 175, 176, 177, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 198, 201, 203, 204, 205, 206, 207, 211, 212, 215, 216, 219, 220, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 240, 241, 243, 244, 249, 250, 251, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 276, 277, 278, 287, 298, 302, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 374, 375, 376, 377, 378, 384, 387, 388, 394, 395, 398, 400, 402, 408, 412, 415, 417, 421, 422, 423, 424, 425, 426, 428, 430, 431, 433, 434, 435, 436, 438, 440, 441], "hurri": [0, 426], "last": [0, 1, 2, 3, 4, 14, 15, 17, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 68, 69, 77, 79, 80, 81, 82, 83, 84, 106, 107, 108, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 154, 157, 158, 159, 169, 177, 180, 183, 198, 205, 207, 212, 225, 227, 229, 244, 245, 250, 251, 263, 264, 266, 268, 270, 271, 274, 275, 281, 292, 295, 298, 306, 310, 315, 328, 360, 362, 363, 422, 423, 424, 425, 426, 427, 434, 435, 436, 437, 438, 440, 441], "item": [0, 2, 3, 8, 14, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 89, 94, 100, 102, 106, 113, 177, 197, 232, 241, 274, 275, 329, 330, 332, 389, 417, 418, 421, 423, 424, 428, 429, 434, 435, 436, 438], "navig": [0, 435], "previou": [0, 3, 4, 10, 50, 57, 62, 63, 64, 66, 73, 74, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 198, 226, 243, 264, 268, 291, 306, 423, 424, 425, 426, 427, 431, 436, 441], "whenev": [0, 1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 64, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 99, 100, 107, 108, 123, 124, 128, 130, 131, 140, 141, 154, 162, 163, 174, 198, 202, 233, 239, 343, 360, 361, 362, 363, 378, 400, 416, 430, 438], "want": [0, 1, 2, 3, 6, 7, 8, 17, 37, 60, 72, 108, 184, 207, 286, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 416, 421, 422, 423, 424, 425, 426, 428, 429, 430, 434, 435, 436, 437, 438, 440, 441], "ted": [0, 39, 51, 70, 71, 90, 91, 98, 414, 420, 432, 439], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 30, 34, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 79, 102, 107, 108, 113, 119, 120, 121, 122, 125, 129, 133, 134, 135, 136, 140, 141, 143, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 164, 184, 188, 201, 205, 211, 224, 226, 229, 230, 231, 232, 233, 236, 238, 240, 241, 243, 245, 248, 250, 251, 258, 263, 266, 270, 275, 276, 277, 280, 286, 288, 295, 297, 303, 305, 308, 310, 311, 314, 315, 318, 326, 328, 333, 339, 341, 343, 348, 350, 360, 361, 362, 363, 364, 378, 416, 417, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "modul": [0, 1, 2, 3, 4, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 60, 61, 66, 67, 72, 113, 119, 120, 121, 122, 125, 129, 136, 139, 142, 145, 148, 149, 152, 157, 158, 159, 174, 183, 188, 193, 195, 201, 203, 211, 212, 225, 226, 231, 232, 233, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 360, 361, 362, 363, 364, 378, 398, 405, 408, 414, 417, 418, 420, 422, 423, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439], "optim": [0, 1, 2, 8, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 247, 273, 279, 280, 286, 295, 326, 328, 343, 344, 345, 348, 355, 393, 394, 398, 408, 417, 418, 420, 423, 424, 425, 426, 427, 429, 432, 434, 435, 436, 439], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 45, 50, 57, 62, 63, 64, 73, 74, 102, 106, 119, 122, 125, 129, 136, 148, 149, 152, 154, 157, 158, 159, 164, 181, 184, 198, 207, 211, 238, 287, 310, 326, 329, 332, 334, 346, 348, 350, 351, 380, 389, 395, 398, 400, 401, 402, 408, 418, 420, 421, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441], "storag": [0, 1, 8, 14, 15, 17, 20, 30, 37, 39, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 76, 79, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 110, 111, 112, 113, 115, 116, 119, 122, 125, 127, 129, 136, 148, 149, 152, 157, 158, 159, 183, 184, 191, 194, 216, 243, 414, 418, 420, 422, 423, 424, 425, 426, 428, 431, 432, 434, 435, 437, 439], "log": [0, 3, 4, 8, 11, 66, 258, 259, 260, 274, 275, 283, 295, 296, 307, 308, 311, 315, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 351, 358, 387, 391, 392, 393, 398, 408, 416, 417, 418, 420, 421, 422, 423, 426, 427, 431, 432, 434, 435, 436, 439, 440], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 133, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 240, 241, 243, 315, 388, 412, 414, 415, 416, 417, 420, 422, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435, 438, 439, 440], "own": [0, 1, 14, 15, 20, 24, 25, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 243, 380, 414, 417, 420, 422, 423, 426, 432, 434, 435, 436, 439], "train": [0, 1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 30, 33, 37, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 78, 79, 89, 119, 122, 125, 129, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 164, 191, 199, 211, 225, 230, 233, 236, 238, 243, 245, 246, 248, 253, 255, 263, 287, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 360, 398, 400, 408, 414, 416, 418, 420, 422, 426, 429, 430, 432, 437, 438, 439, 440, 441], "loop": [0, 1, 8, 17, 56, 58, 65, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 263, 286, 287, 345, 398, 417, 418, 420, 421, 422, 426, 428, 429, 430, 432, 433, 438, 439, 440], "ppo": [0, 1, 4, 8, 311, 315, 327, 342, 345, 414, 416, 420, 421, 422, 425, 427, 428, 432, 434, 439], "pendulum": [0, 3, 14, 15, 17, 20, 24, 25, 62, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 136, 143, 148, 149, 152, 157, 158, 159, 184, 187, 188, 189, 196, 202, 203, 207, 214, 216, 220, 221, 224, 226, 227, 228, 231, 232, 233, 234, 240, 241, 243, 249, 266, 270, 408, 416, 420, 422, 423, 426, 427, 428, 432, 439, 440, 441], "introduct": [0, 417, 420, 426, 432, 434, 435, 439, 441], "multi": [0, 1, 7, 9, 14, 15, 20, 30, 37, 42, 50, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 90, 91, 98, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 155, 156, 157, 158, 159, 204, 233, 243, 264, 266, 268, 270, 271, 276, 277, 278, 310, 315, 358, 360, 361, 362, 363, 414, 420, 421, 422, 423, 424, 426, 427, 432, 436, 439, 440], "agent": [0, 9, 63, 68, 69, 139, 140, 141, 146, 147, 150, 151, 155, 156, 160, 161, 162, 163, 165, 204, 223, 224, 225, 274, 275, 276, 277, 278, 280, 288, 297, 327, 342, 345, 358, 414, 420, 426, 432, 436, 439], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 25, 30, 34, 37, 39, 42, 45, 50, 60, 61, 62, 66, 67, 70, 72, 79, 102, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 266, 270, 272, 273, 310, 314, 343, 378, 379, 380, 388, 402, 403, 404, 408, 410, 411, 412, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 93, 94, 98, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 285, 286, 287, 288, 289, 295, 296, 297, 298, 301, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 373, 378, 380, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 408, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441], "pretrain": [0, 420, 432, 439], "recurr": [0, 2, 183, 264, 265, 266, 268, 270, 291, 301, 420, 422, 427, 432, 438, 439], "dqn": [0, 2, 177, 195, 251, 260, 307, 308, 325, 326, 328, 329, 330, 332, 334, 335, 336, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 358, 405, 414, 416, 420, 425, 427, 428, 431, 432, 439], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 39, 50, 62, 70, 119, 120, 121, 122, 125, 129, 136, 142, 148, 149, 152, 153, 157, 158, 159, 173, 193, 203, 205, 225, 228, 245, 248, 249, 260, 263, 266, 270, 276, 277, 280, 287, 289, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 325, 326, 327, 328, 329, 333, 334, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 393, 400, 403, 404, 408, 410, 411, 414, 416, 418, 420, 422, 426, 428, 429, 432, 437, 438, 439, 440, 441], "replai": [0, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 50, 57, 62, 63, 64, 73, 74, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 118, 183, 184, 193, 212, 216, 226, 232, 243, 328, 329, 330, 332, 333, 334, 341, 346, 348, 350, 351, 395, 398, 406, 408, 414, 417, 418, 420, 425, 432, 436, 437, 439], "buffer": [0, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 118, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 183, 184, 188, 193, 201, 211, 212, 216, 226, 231, 232, 233, 236, 238, 243, 245, 287, 306, 314, 317, 328, 329, 330, 332, 333, 334, 341, 346, 348, 350, 351, 360, 361, 362, 363, 364, 395, 398, 406, 408, 414, 417, 418, 420, 425, 430, 432, 436, 437, 439, 441], "export": [0, 6, 7, 420, 432, 439], "competit": [0, 3, 140, 141, 420, 432, 435, 439], "ddpg": [0, 253, 254, 255, 256, 329, 340, 349, 414, 416, 420, 422, 428, 432, 435, 439], "task": [0, 2, 3, 9, 66, 68, 69, 78, 119, 122, 123, 124, 125, 129, 132, 136, 140, 141, 148, 149, 150, 151, 152, 154, 157, 158, 159, 162, 163, 211, 224, 233, 236, 238, 333, 341, 420, 421, 422, 423, 424, 426, 427, 432, 434, 435, 436, 439, 441], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 146, 147, 148, 149, 152, 157, 158, 159, 162, 172, 205, 226, 241, 257, 266, 270, 306, 325, 343, 345, 347, 380, 398, 414, 417, 418, 420, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 34, 37, 42, 50, 52, 56, 58, 60, 61, 65, 67, 72, 77, 78, 79, 93, 94, 95, 96, 102, 105, 109, 111, 115, 118, 119, 122, 125, 129, 134, 136, 148, 149, 152, 153, 157, 158, 159, 177, 191, 194, 195, 201, 204, 207, 211, 231, 232, 233, 236, 240, 241, 243, 266, 270, 273, 276, 277, 288, 295, 297, 302, 303, 311, 314, 315, 316, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 402, 403, 404, 407, 408, 412, 414, 416, 418, 420, 422, 423, 424, 425, 429, 431, 432, 434, 435, 436, 438, 439, 441], "loss": [0, 3, 8, 58, 195, 274, 286, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 358, 359, 360, 394, 398, 405, 408, 417, 418, 420, 425, 426, 428, 429, 430, 432, 436, 438, 439], "trainer": [0, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 420, 421, 432, 439], "exampl": [0, 1, 2, 4, 9, 10, 14, 15, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 89, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 285, 286, 287, 288, 289, 297, 298, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 352, 353, 358, 360, 361, 362, 363, 366, 378, 380, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 408, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441], "packag": [0, 6, 7, 10, 174, 414, 415, 441], "batch": [0, 2, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 34, 50, 52, 54, 57, 59, 62, 63, 64, 66, 73, 74, 75, 77, 89, 93, 94, 95, 96, 100, 101, 102, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 145, 146, 147, 148, 149, 152, 157, 158, 159, 160, 161, 162, 163, 176, 181, 184, 188, 189, 198, 205, 207, 209, 212, 216, 223, 226, 228, 232, 233, 235, 239, 240, 241, 243, 246, 258, 264, 265, 266, 268, 269, 270, 274, 275, 276, 277, 278, 279, 283, 287, 288, 294, 298, 301, 310, 314, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 389, 392, 395, 396, 397, 398, 400, 410, 411, 412, 414, 416, 417, 418, 422, 423, 424, 425, 426, 429, 431, 433, 434, 435, 437, 440, 441], "size": [0, 2, 14, 15, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 101, 102, 106, 107, 108, 109, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 169, 175, 177, 181, 183, 184, 185, 188, 190, 191, 194, 195, 196, 198, 201, 204, 205, 209, 211, 213, 214, 216, 220, 222, 223, 224, 226, 228, 229, 232, 233, 234, 235, 238, 240, 243, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 297, 298, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 380, 389, 395, 414, 416, 417, 422, 423, 424, 425, 426, 427, 429, 434, 435, 436, 441], "copi": [0, 2, 3, 16, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 180, 184, 201, 214, 225, 231, 232, 233, 240, 241, 243, 244, 266, 270, 278, 306, 328, 343, 348, 378, 414, 417, 421, 422, 424, 426, 434, 438, 440], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 66, 67, 72, 100, 102, 105, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 155, 156, 157, 158, 159, 188, 201, 204, 211, 226, 231, 232, 233, 236, 238, 243, 264, 265, 266, 268, 269, 270, 276, 278, 280, 314, 325, 326, 327, 328, 334, 337, 348, 350, 400, 407, 414, 416, 418, 421, 422, 423, 433, 436, 438, 440], "synchron": [0, 3, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 56, 58, 65, 79, 143, 410, 411, 414, 422, 423, 434], "distribut": [0, 2, 3, 4, 9, 10, 16, 19, 21, 22, 23, 24, 25, 57, 62, 63, 64, 73, 74, 102, 122, 150, 151, 203, 207, 241, 245, 247, 258, 259, 260, 261, 267, 273, 274, 275, 283, 284, 285, 286, 290, 291, 294, 295, 296, 306, 307, 308, 311, 315, 316, 325, 326, 327, 328, 333, 334, 335, 341, 342, 345, 346, 347, 348, 350, 351, 414, 417, 418, 422, 423, 425, 427, 429, 434, 435, 436, 440, 441], "interoper": [0, 14, 15, 414], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 62, 67, 72, 100, 107, 108, 119, 120, 121, 122, 123, 124, 125, 128, 129, 134, 135, 136, 142, 143, 144, 148, 149, 152, 157, 158, 159, 164, 188, 201, 206, 207, 223, 231, 232, 233, 240, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 315, 316, 317, 318, 321, 328, 334, 348, 380, 387, 393, 410, 411, 412, 414, 415, 416, 417, 418, 421, 422, 423, 424, 427, 428, 429, 430, 431, 434, 435, 436, 440], "asynchron": [0, 3, 9, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314, 325, 410, 414, 421, 422, 423], "singl": [0, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 35, 37, 40, 42, 43, 45, 48, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 75, 79, 94, 102, 108, 113, 119, 122, 125, 128, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 177, 184, 185, 204, 211, 216, 226, 231, 233, 238, 243, 250, 251, 264, 265, 266, 268, 269, 270, 271, 277, 313, 317, 326, 327, 328, 330, 332, 334, 335, 341, 342, 345, 346, 348, 350, 351, 355, 360, 361, 362, 363, 369, 370, 371, 372, 374, 375, 376, 377, 378, 412, 414, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 440], "node": [0, 2, 19, 21, 22, 23, 24, 25, 34, 35, 43, 45, 56, 58, 65, 69, 79, 136, 231, 414, 429, 440], "helper": [0, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 421, 422, 424, 434, 436], "compos": [0, 3, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 101, 102, 103, 104, 113, 114, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 189, 201, 215, 231, 232, 233, 240, 243, 309, 310, 328, 337, 348, 380, 414, 421, 422, 423, 424, 425, 429, 433, 435, 437, 438, 440, 441], "episod": [0, 3, 45, 100, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 180, 216, 219, 225, 247, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 414, 422, 426, 431, 434, 435, 438], "format": [0, 1, 3, 30, 37, 39, 42, 48, 49, 50, 51, 54, 55, 60, 61, 67, 70, 71, 72, 79, 90, 91, 98, 105, 113, 119, 122, 125, 129, 136, 148, 149, 150, 152, 157, 158, 159, 184, 188, 211, 226, 232, 233, 236, 238, 243, 314, 380, 414, 421, 422, 425, 426, 428, 430, 440, 441], "tensorspec": [0, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 119, 122, 125, 129, 136, 142, 148, 149, 152, 153, 157, 158, 159, 162, 163, 176, 177, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 200, 202, 203, 204, 205, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 263, 287, 291, 302, 306, 307, 308, 311, 312, 313, 314, 315, 316, 318, 326, 328, 330, 333, 334, 346, 348, 350, 351, 358, 414, 436], "tree": [0, 1, 45, 56, 58, 65, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 414, 434, 438], "forest": [0, 45, 79, 414], "larg": [0, 3, 4, 33, 56, 58, 65, 79, 107, 108, 191, 194, 236, 325, 327, 342, 345, 347, 414, 422, 423, 434, 435, 438], "languag": [0, 27, 66, 414], "human": [0, 27, 414, 436], "feedback": [0, 414, 431, 440], "rlhf": [0, 203, 414, 416], "spec": [0, 1, 2, 14, 15, 17, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 169, 172, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 204, 205, 207, 209, 211, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 260, 263, 266, 270, 287, 289, 291, 302, 306, 307, 308, 311, 312, 313, 314, 315, 317, 318, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 414, 416, 417, 421, 422, 423, 424, 425, 426, 427, 431, 433, 434, 435, 440], "lock": [0, 34, 35, 43, 56, 58, 65, 69, 79, 119, 122, 125, 129, 135, 136, 148, 149, 152, 157, 158, 159, 181, 189, 226, 240, 241, 414, 417, 436], "method": [0, 1, 2, 4, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 107, 108, 109, 110, 111, 113, 115, 119, 122, 125, 128, 129, 130, 131, 135, 136, 148, 149, 152, 153, 154, 157, 158, 159, 172, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 195, 196, 197, 198, 199, 202, 203, 205, 207, 210, 211, 212, 213, 214, 215, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 258, 263, 266, 270, 276, 277, 278, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 322, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 339, 341, 343, 345, 346, 347, 348, 350, 351, 358, 364, 378, 379, 409, 414, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 436, 438, 441], "partial": [0, 2, 14, 15, 17, 20, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 183, 184, 225, 226, 227, 311, 398, 414, 424], "step": [0, 1, 4, 8, 14, 15, 17, 20, 21, 22, 23, 24, 37, 45, 50, 66, 79, 90, 91, 98, 100, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 175, 176, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 198, 199, 202, 203, 205, 207, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 243, 245, 246, 247, 261, 263, 264, 266, 268, 270, 272, 273, 286, 287, 310, 311, 315, 325, 336, 345, 359, 360, 361, 362, 363, 366, 367, 368, 379, 382, 389, 393, 398, 414, 418, 422, 424, 425, 427, 428, 430, 431, 433, 436, 437, 440], "reset": [0, 1, 2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 108, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 164, 176, 179, 180, 181, 184, 195, 198, 202, 206, 211, 219, 224, 225, 226, 227, 228, 231, 232, 233, 236, 239, 240, 243, 244, 249, 264, 266, 270, 278, 287, 300, 310, 343, 379, 414, 417, 421, 422, 423, 424, 426, 429, 433, 434, 435, 440], "vector": [0, 1, 8, 28, 54, 120, 121, 130, 134, 135, 139, 150, 151, 154, 162, 163, 193, 239, 241, 253, 255, 264, 265, 268, 269, 271, 360, 363, 373, 374, 375, 376, 377, 414, 416, 417, 421, 422, 424, 433, 434, 435, 436, 437, 441], "async": [0, 14, 15, 17, 20, 21, 22, 23, 24, 62, 119, 152, 158, 239, 414], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 236, 243, 276, 277, 318, 324, 335, 345, 352, 412, 414, 416, 421, 422, 423, 424, 427, 428, 430, 434, 435], "nativ": [0, 1, 7, 9, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 380, 414, 424, 438], "auto": [0, 95, 115, 125, 179, 180, 233, 239, 287, 326, 328, 334, 344, 346, 348, 350, 351, 414, 417, 434, 435], "dynam": [0, 2, 7, 14, 15, 17, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 169, 243, 333, 341, 414, 423, 426, 436], "mask": [0, 1, 4, 26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 178, 212, 243, 248, 249, 260, 263, 274, 275, 289, 306, 307, 308, 312, 313, 334, 348, 395, 414, 422, 424, 425, 441], "action": [0, 2, 8, 9, 14, 15, 17, 20, 24, 39, 45, 54, 62, 66, 70, 72, 79, 99, 100, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 169, 175, 177, 178, 181, 187, 188, 191, 192, 193, 194, 195, 196, 198, 199, 201, 203, 205, 206, 207, 209, 213, 214, 216, 220, 224, 226, 230, 232, 233, 234, 235, 239, 243, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 266, 270, 271, 272, 273, 274, 275, 276, 285, 287, 288, 289, 291, 294, 295, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 318, 319, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 408, 412, 414, 416, 418, 421, 422, 423, 425, 426, 427, 428, 433, 434, 435, 437, 440, 441], "record": [0, 2, 11, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 170, 177, 203, 243, 345, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 408, 414, 422, 423, 427, 431, 434], "domain": [0, 2, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 193, 201, 226, 234, 302, 307, 308, 311, 312, 313, 314, 315, 316, 317, 322, 414, 423, 428, 434, 435, 436, 440, 441], "actor": [0, 3, 4, 24, 153, 203, 247, 252, 253, 255, 260, 261, 263, 273, 285, 287, 289, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 358, 414, 417, 422, 424, 426, 428, 431, 434, 437, 440], "explor": [0, 1, 242, 245, 248, 263, 280, 287, 302, 307, 308, 311, 312, 313, 314, 315, 325, 343, 393, 403, 404, 408, 414, 423, 424, 425, 426, 428, 429, 431, 434, 435, 436], "valu": [0, 1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 107, 108, 113, 119, 122, 125, 129, 136, 139, 148, 149, 152, 157, 158, 159, 164, 169, 174, 175, 176, 177, 180, 182, 184, 185, 187, 189, 191, 192, 193, 194, 195, 201, 206, 207, 211, 212, 215, 216, 217, 219, 221, 223, 226, 227, 232, 233, 238, 240, 241, 243, 244, 245, 246, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 270, 271, 273, 274, 275, 276, 277, 279, 280, 283, 287, 288, 289, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 388, 389, 391, 392, 393, 394, 395, 398, 408, 414, 418, 422, 425, 428, 429, 430, 433, 434, 435, 436, 438, 440, 441], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 64, 66, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 104, 106, 119, 122, 125, 126, 129, 136, 140, 141, 142, 145, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 176, 181, 188, 189, 191, 192, 196, 201, 203, 205, 207, 213, 214, 219, 220, 224, 226, 230, 232, 234, 239, 241, 243, 248, 249, 258, 266, 270, 274, 275, 283, 302, 311, 315, 319, 320, 339, 346, 353, 360, 365, 373, 383, 398, 414, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "hook": [0, 2, 30, 37, 39, 42, 50, 57, 60, 61, 62, 63, 64, 67, 70, 72, 73, 74, 102, 116, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 289, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 414], "planner": [0, 247, 273, 414], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 102, 103, 106, 107, 108, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 169, 175, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 191, 192, 193, 194, 195, 196, 201, 203, 204, 207, 209, 211, 213, 214, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 232, 233, 234, 236, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 389, 396, 397, 408, 414, 416, 418, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441], "vmap": [0, 264, 265, 268, 269, 278, 298, 314, 317, 343, 414, 416], "random": [0, 1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 66, 68, 69, 77, 80, 81, 82, 83, 84, 101, 113, 119, 122, 125, 129, 136, 142, 148, 149, 152, 153, 157, 158, 159, 164, 177, 193, 206, 207, 226, 233, 249, 263, 264, 266, 268, 311, 314, 315, 322, 326, 343, 346, 393, 402, 414, 416, 421, 422, 423, 425, 426, 427, 429, 436, 437, 438, 440, 441], "sac": [0, 334, 346, 348, 414], "redq": [0, 346, 414], "crossq": [0, 328, 414], "iql": [0, 333, 341, 414, 421, 434, 435], "cql": [0, 326, 332, 414], "gail": [0, 339, 414], "dt": [0, 149, 287, 414, 436], "td3": [0, 350, 351, 414], "bc": [0, 5, 350, 414], "a2c": [0, 325, 414], "dreamer": [0, 170, 171, 261, 336, 337, 338, 414, 416], "checkpoint": [0, 64, 91, 93, 97, 109, 110, 112, 116, 414, 438], "builder": [0, 414, 422, 441], "logger": [0, 3, 11, 378, 380, 382, 383, 384, 385, 386, 387, 392, 398, 408, 412, 414, 422, 434], "_util": [0, 3, 148, 244, 414, 425, 431], "implement_for": [0, 3, 414], "set_auto_unwrap_transformed_env": [0, 12, 233, 414], "auto_unwrap_transformed_env": [0, 388, 414], "thing": [0, 1, 3, 7, 8, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 232, 276, 277, 334, 348, 415, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 438, 441], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 21, 23, 24, 30, 34, 35, 37, 42, 43, 50, 57, 60, 61, 64, 67, 69, 72, 73, 74, 93, 95, 107, 108, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 193, 240, 243, 258, 276, 277, 294, 326, 328, 341, 346, 348, 350, 351, 360, 362, 363, 415, 417, 421, 426, 427, 428, 436, 438], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 107, 108, 109, 111, 115, 119, 122, 125, 126, 128, 129, 130, 135, 136, 139, 140, 141, 143, 145, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 173, 175, 178, 180, 183, 184, 188, 191, 193, 194, 203, 204, 206, 207, 211, 212, 219, 226, 228, 231, 232, 233, 236, 238, 239, 240, 241, 243, 244, 246, 247, 258, 260, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 286, 289, 295, 310, 311, 314, 315, 317, 321, 326, 327, 328, 330, 334, 335, 341, 342, 343, 345, 346, 348, 350, 351, 352, 358, 359, 360, 361, 362, 363, 378, 379, 380, 382, 385, 387, 395, 412, 415, 416, 417, 418, 421, 422, 423, 424, 425, 427, 429, 430, 434, 435, 436, 437, 438, 440, 441], "debug": [0, 6, 8, 45, 66, 79, 228, 415, 441], "work": [0, 1, 2, 3, 4, 8, 30, 37, 42, 50, 60, 61, 64, 67, 72, 93, 100, 105, 107, 108, 111, 118, 119, 122, 125, 128, 129, 130, 133, 136, 148, 149, 152, 154, 157, 158, 159, 172, 175, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 241, 243, 244, 250, 251, 271, 308, 313, 318, 327, 342, 345, 398, 415, 416, 421, 422, 423, 424, 426, 429, 433, 434, 435, 436, 437, 438, 440, 441], "habitat": [0, 3, 131, 415, 437], "lab": [0, 3, 123, 124, 131, 415], "mujoco": [0, 6, 8, 154, 415, 421, 423, 424], "error": [0, 1, 3, 7, 10, 28, 29, 30, 33, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 65, 67, 68, 72, 79, 93, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 160, 164, 165, 212, 231, 243, 244, 343, 415, 417, 421, 423, 434, 435, 441], "solut": [0, 2, 3, 6, 7, 9, 24, 107, 415, 416, 418, 425, 440], "resourc": [0, 1, 13, 21, 22, 23, 24, 131, 415, 421, 423, 425, 434, 435], "issu": [0, 2, 3, 4, 5, 8, 62, 91, 93, 95, 107, 115, 119, 122, 125, 128, 129, 133, 136, 148, 149, 152, 157, 158, 159, 175, 184, 212, 227, 302, 307, 308, 311, 312, 313, 314, 315, 415, 440], "customis": [0, 415, 422, 430], "video": [0, 4, 9, 380, 382, 385, 387, 393, 412, 414, 415, 431, 434, 435], "render": [0, 3, 8, 135, 162, 378, 380, 393, 415, 421, 422, 423, 425, 426, 430], "index": [0, 3, 7, 8, 10, 17, 28, 29, 31, 32, 33, 34, 35, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 99, 100, 102, 103, 105, 107, 111, 113, 114, 115, 117, 118, 119, 122, 125, 129, 136, 140, 141, 146, 147, 148, 149, 152, 157, 158, 159, 162, 163, 175, 179, 184, 188, 193, 233, 274, 275, 310, 414, 426, 433, 434, 435, 438, 440], "search": [0, 2, 34, 35, 43, 69, 79, 145, 176, 422], "page": [0, 7, 27, 387, 428], "import": [1, 2, 3, 4, 6, 10, 11, 14, 15, 17, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 168, 169, 174, 175, 176, 177, 178, 180, 181, 183, 184, 187, 189, 195, 196, 201, 202, 203, 204, 207, 209, 211, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 232, 234, 238, 240, 241, 243, 244, 247, 249, 253, 254, 255, 256, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 277, 278, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 378, 380, 391, 393, 408, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "syncdatacollector": [1, 2, 3, 14, 15, 18, 20, 21, 22, 23, 24, 39, 50, 70, 181, 184, 216, 248, 266, 270, 408, 411, 414, 421, 422, 423, 424, 425, 429, 431, 434, 435, 438], "currentmodul": 1, "somewhat": [1, 2, 417, 427, 441], "equival": [1, 3, 24, 28, 29, 30, 33, 34, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 72, 73, 74, 78, 79, 89, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 181, 192, 195, 226, 228, 233, 243, 260, 268, 271, 289, 307, 308, 312, 313, 345, 395, 429, 440, 441], "dataload": [1, 89, 106, 108, 422, 429, 438], "except": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 197, 216, 225, 226, 227, 231, 233, 243, 245, 263, 264, 266, 268, 270, 283, 287, 325, 328, 343, 345, 348, 380, 416, 421, 422, 426, 434, 438, 440, 441], "1": [1, 2, 3, 4, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 207, 209, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 241, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 283, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 337, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 374, 375, 377, 378, 380, 389, 393, 395, 396, 408, 412, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 100, 102, 119, 122, 125, 128, 129, 130, 136, 139, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 180, 183, 197, 203, 211, 220, 228, 232, 233, 238, 243, 270, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 395, 398, 416, 417, 418, 421, 422, 423, 424, 425, 428, 433, 434, 435, 436, 437, 438, 440, 441], "over": [1, 2, 3, 4, 8, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 88, 100, 102, 106, 107, 108, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 175, 177, 193, 207, 219, 227, 241, 243, 283, 286, 295, 298, 317, 335, 337, 343, 366, 378, 401, 416, 418, 421, 422, 423, 425, 426, 427, 428, 429, 434, 435, 436, 441], "non": [1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 28, 30, 31, 32, 34, 35, 37, 42, 43, 44, 50, 52, 53, 56, 57, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 94, 96, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 175, 181, 182, 184, 188, 198, 211, 223, 226, 232, 233, 234, 235, 236, 238, 241, 243, 249, 264, 266, 268, 270, 276, 314, 315, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 416, 421, 424, 425, 434, 435, 436, 438, 441], "static": [1, 37, 60, 66, 72, 78, 100, 107, 108, 131, 149, 240, 244, 341, 426, 436, 438], "like": [1, 2, 3, 4, 7, 11, 24, 30, 34, 35, 37, 42, 43, 45, 50, 52, 57, 60, 61, 64, 67, 69, 72, 73, 74, 78, 96, 102, 108, 119, 122, 125, 126, 129, 131, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 164, 184, 195, 226, 229, 243, 264, 268, 277, 309, 315, 325, 327, 342, 345, 346, 347, 416, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441], "being": [1, 2, 3, 7, 8, 14, 15, 17, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 68, 72, 89, 94, 113, 116, 119, 122, 125, 128, 129, 130, 131, 135, 136, 148, 149, 152, 154, 157, 158, 159, 173, 183, 191, 193, 194, 201, 206, 214, 226, 231, 232, 233, 243, 263, 266, 270, 287, 327, 328, 342, 343, 345, 348, 380, 395, 400, 410, 411, 412, 416, 417, 421, 422, 423, 424, 429, 434, 435, 436, 438], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 64, 65, 67, 72, 79, 80, 89, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 179, 184, 188, 198, 201, 211, 219, 223, 226, 231, 232, 233, 234, 235, 236, 238, 243, 271, 298, 314, 315, 316, 328, 348, 380, 418, 423, 426, 430, 438, 440, 441], "two": [1, 2, 3, 4, 8, 10, 30, 37, 42, 45, 46, 47, 48, 49, 50, 57, 60, 61, 64, 66, 67, 72, 73, 74, 79, 102, 106, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 207, 211, 231, 238, 243, 256, 264, 266, 268, 270, 276, 277, 292, 295, 315, 342, 350, 354, 393, 398, 417, 421, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 435, 436, 438, 440, 441], "main": [1, 2, 3, 5, 14, 15, 19, 23, 25, 26, 62, 126, 184, 315, 398, 416, 417, 421, 422, 433, 440, 441], "argument": [1, 2, 3, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 91, 93, 94, 95, 99, 100, 102, 105, 106, 107, 108, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 169, 175, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 192, 195, 196, 197, 199, 201, 202, 203, 205, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 250, 251, 263, 264, 266, 268, 270, 271, 274, 275, 276, 277, 279, 287, 298, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 353, 358, 360, 361, 362, 363, 364, 368, 378, 379, 380, 385, 387, 391, 398, 401, 408, 409, 412, 421, 422, 423, 424, 425, 426, 427, 429, 434, 435, 436, 438, 440, 441], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 102, 105, 106, 107, 108, 109, 111, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 165, 175, 182, 183, 187, 191, 192, 194, 203, 204, 207, 209, 211, 219, 221, 229, 230, 231, 232, 233, 235, 236, 238, 240, 243, 249, 250, 251, 253, 259, 262, 266, 270, 271, 274, 275, 281, 289, 308, 310, 312, 313, 315, 317, 318, 319, 326, 328, 341, 343, 346, 348, 350, 351, 357, 360, 363, 378, 379, 393, 395, 410, 411, 417, 421, 423, 426, 427, 428, 429, 433, 434, 436, 437, 438, 440, 441], "constructor": [1, 2, 3, 14, 15, 17, 21, 22, 23, 24, 62, 64, 73, 74, 78, 99, 113, 119, 122, 125, 129, 136, 143, 148, 149, 152, 157, 158, 159, 162, 180, 184, 231, 250, 251, 271, 301, 311, 315, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 409, 412, 416, 421, 422, 423, 426, 429, 434, 435, 438, 440], "iter": [1, 2, 3, 15, 17, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 88, 89, 96, 102, 106, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 196, 207, 220, 243, 244, 246, 248, 249, 250, 251, 271, 276, 277, 293, 302, 307, 311, 312, 314, 316, 317, 319, 343, 357, 393, 397, 398, 417, 418, 421, 423, 424, 429, 431, 434, 435, 436], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 94, 102, 107, 108, 119, 120, 121, 122, 125, 126, 129, 130, 131, 133, 134, 135, 136, 142, 143, 148, 149, 152, 154, 157, 158, 159, 160, 178, 189, 205, 228, 233, 263, 264, 266, 268, 270, 278, 301, 310, 316, 317, 343, 350, 402, 412, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 438, 439, 440, 441], "queri": [1, 2, 3, 14, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 79, 94, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 211, 236, 240, 243, 317, 417, 421, 428, 436, 440], "defin": [1, 2, 3, 14, 15, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 212, 225, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 278, 281, 282, 285, 286, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 322, 330, 332, 343, 360, 361, 362, 363, 364, 379, 409, 416, 421, 422, 424, 428, 431, 436, 438, 441], "number": [1, 2, 3, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 105, 107, 108, 115, 119, 120, 121, 122, 125, 128, 129, 130, 134, 135, 136, 142, 143, 144, 145, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 193, 195, 196, 197, 199, 202, 203, 206, 207, 210, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 243, 245, 246, 247, 250, 251, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 281, 282, 287, 288, 290, 291, 294, 295, 296, 297, 302, 306, 310, 311, 314, 315, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 385, 387, 389, 391, 393, 398, 400, 401, 402, 410, 411, 412, 416, 417, 421, 422, 423, 424, 426, 427, 429, 431, 434, 435, 436, 437, 438, 441], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 37, 38, 42, 45, 46, 47, 50, 60, 61, 67, 72, 78, 79, 106, 108, 113, 119, 122, 125, 129, 130, 136, 148, 149, 152, 157, 158, 159, 164, 177, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 243, 248, 264, 266, 270, 271, 279, 280, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 361, 362, 363, 395, 421, 423, 424, 425, 429, 430, 434, 435, 436, 438, 441], "deliv": [1, 2, 3, 17, 421, 422, 426, 429, 440], "stack": [1, 2, 3, 7, 8, 14, 15, 17, 21, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 87, 94, 99, 102, 119, 122, 125, 128, 129, 130, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 184, 205, 240, 264, 266, 268, 269, 270, 310, 316, 317, 326, 328, 341, 346, 348, 350, 351, 379, 389, 414, 422, 425, 426, 433, 434, 436, 440], "user": [1, 2, 3, 5, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 42, 45, 50, 60, 61, 67, 72, 79, 100, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 160, 164, 185, 201, 225, 231, 233, 243, 257, 328, 345, 348, 350, 380, 409, 417, 418, 421, 422, 426, 428, 429, 436, 440, 441], "reach": [1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 25, 66, 106, 119, 122, 125, 129, 135, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 205, 224, 245, 263, 287, 421, 423, 431, 434, 435, 440, 441], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 69, 70, 72, 77, 79, 80, 81, 82, 83, 84, 90, 91, 98, 100, 102, 107, 108, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 175, 176, 177, 178, 180, 181, 184, 191, 192, 194, 195, 196, 201, 205, 206, 207, 209, 213, 214, 216, 218, 220, 223, 224, 226, 227, 230, 231, 232, 233, 234, 240, 243, 247, 264, 266, 270, 273, 295, 310, 325, 326, 327, 328, 329, 330, 332, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 416, 417, 421, 423, 424, 425, 426, 428, 429, 431, 433, 434, 435, 436, 438, 440, 441], "state": [1, 2, 3, 4, 14, 15, 17, 19, 20, 30, 37, 39, 42, 45, 50, 57, 60, 61, 62, 63, 64, 66, 67, 70, 72, 73, 74, 79, 90, 91, 98, 102, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 164, 175, 176, 180, 183, 184, 185, 187, 188, 189, 192, 195, 198, 201, 205, 207, 214, 224, 225, 230, 231, 232, 233, 234, 235, 240, 241, 243, 247, 252, 257, 261, 264, 265, 266, 268, 269, 270, 271, 273, 278, 281, 285, 288, 290, 291, 297, 303, 310, 314, 320, 325, 327, 328, 332, 334, 342, 343, 345, 346, 347, 348, 358, 359, 360, 361, 362, 363, 364, 398, 412, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 434, 435, 436, 441], "after": [1, 2, 3, 8, 13, 14, 15, 20, 21, 22, 23, 24, 30, 37, 39, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 79, 95, 102, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 175, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 263, 264, 266, 270, 279, 307, 312, 328, 337, 348, 350, 422, 423, 424, 425, 426, 427, 429, 431, 434, 435, 436, 437, 438, 441], "predefin": [1, 380, 422, 424, 429, 438, 440], "becaus": [1, 2, 3, 4, 7, 30, 37, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 79, 94, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 195, 203, 224, 239, 243, 256, 277, 302, 307, 308, 310, 311, 312, 313, 314, 315, 325, 345, 416, 421, 422, 424, 425, 427, 428, 429, 433, 434, 435, 436, 438, 441], "potenti": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 436, 438], "comput": [1, 3, 4, 8, 14, 16, 17, 24, 30, 33, 37, 42, 50, 60, 61, 66, 67, 72, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 176, 207, 221, 233, 237, 241, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 281, 282, 283, 285, 287, 290, 291, 293, 295, 296, 298, 303, 306, 308, 310, 311, 313, 315, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 402, 417, 421, 423, 424, 425, 426, 427, 433, 434, 435, 437, 438], "heavi": [1, 8, 438], "crucial": [1, 2, 3, 245, 263, 287, 333, 341, 343, 421, 422, 423, 424, 426, 428, 430, 434, 435, 436, 440, 441], "configur": [1, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 66, 122, 203, 252, 257, 285, 343, 345, 416, 421, 422, 423, 428, 434, 435, 436], "hyperparamet": [1, 105, 243, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 421, 430, 436, 438], "appropri": [1, 3, 4, 7, 92, 103, 113, 114, 117, 118, 136, 148, 157, 195, 409, 412, 421, 430, 438], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 109, 111, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 416, 417, 421, 424, 425, 427, 431, 434, 435, 436, 437, 440], "take": [1, 2, 3, 8, 26, 30, 37, 42, 45, 60, 61, 66, 67, 72, 110, 116, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 187, 224, 227, 228, 232, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 309, 310, 311, 313, 315, 318, 321, 324, 345, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 389, 400, 416, 418, 421, 422, 423, 425, 426, 427, 428, 434, 435, 436, 438, 441], "consider": [1, 2, 3, 8, 128, 130, 232, 422, 434, 435, 438], "whether": [1, 2, 3, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 93, 95, 102, 103, 115, 119, 122, 125, 129, 135, 136, 140, 141, 142, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 176, 180, 189, 191, 194, 225, 231, 233, 240, 241, 243, 250, 251, 266, 270, 271, 310, 315, 319, 325, 326, 327, 328, 329, 330, 332, 334, 335, 339, 342, 343, 345, 346, 347, 348, 350, 351, 358, 360, 363, 388, 412, 421, 422, 423, 425, 426, 434, 435, 436, 440, 441], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 96, 100, 102, 107, 108, 109, 113, 116, 119, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 139, 142, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 164, 175, 176, 177, 180, 181, 184, 187, 188, 191, 192, 195, 196, 198, 203, 204, 205, 207, 212, 213, 214, 216, 219, 220, 224, 225, 227, 230, 232, 233, 234, 239, 240, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 311, 313, 314, 315, 318, 321, 325, 327, 328, 334, 340, 342, 343, 345, 346, 347, 348, 349, 350, 359, 360, 361, 362, 363, 364, 380, 382, 388, 393, 394, 395, 398, 408, 410, 411, 412, 416, 417, 418, 421, 422, 423, 424, 425, 427, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "occur": [1, 8, 15, 37, 60, 68, 69, 72, 79, 119, 122, 125, 129, 131, 136, 148, 149, 152, 157, 158, 159, 176, 185, 196, 207, 212, 239, 246, 302, 307, 308, 311, 312, 313, 314, 315, 337, 425, 438, 441], "serial": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 70, 72, 73, 74, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 240, 241, 243], "parallel": [1, 3, 8, 119, 122, 125, 128, 129, 130, 136, 148, 149, 150, 151, 152, 157, 158, 159, 164, 233, 239, 266, 270, 325, 409, 410, 411, 412, 422, 423, 434, 435, 440], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 56, 58, 65, 77, 78, 79, 89, 126, 143, 148, 157, 231, 240, 241, 410, 411, 412, 421, 422, 423, 440, 441], "multisyncdatacollector": [1, 15, 21, 22, 23, 24, 248, 411, 414, 423, 429, 440], "split": [1, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 41, 43, 56, 58, 69, 78, 89, 100, 107, 108, 139, 150, 151, 264, 268, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 416, 418, 423, 427, 438, 440], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 61, 64, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 100, 107, 108, 120, 121, 123, 124, 128, 130, 131, 133, 134, 135, 143, 144, 148, 154, 159, 231, 240, 241, 243, 266, 270, 276, 286, 287, 343, 400, 414, 416, 417, 421, 426, 430, 434, 435, 436], "aggreg": [1, 3, 30, 60, 100, 113, 150, 151, 176, 204, 241, 250, 251, 253, 254, 317, 417, 435], "result": [1, 2, 3, 7, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 31, 37, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 79, 80, 100, 102, 106, 107, 108, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 164, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 248, 263, 264, 266, 268, 270, 271, 276, 289, 295, 306, 308, 313, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 400, 417, 422, 424, 426, 427, 430, 431, 436, 437, 440, 441], "final": [1, 2, 3, 4, 24, 45, 56, 58, 65, 66, 79, 226, 239, 245, 263, 264, 266, 268, 270, 276, 287, 309, 316, 360, 393, 416, 421, 422, 423, 425, 430, 431, 434, 435, 436, 441], "multiasyncdatacollector": [1, 14, 20, 21, 22, 23, 24, 248, 410, 414, 421, 422, 423, 429, 440], "sever": [1, 2, 3, 8, 30, 37, 42, 46, 50, 60, 61, 67, 72, 78, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 185, 187, 204, 233, 243, 345, 421, 423, 425, 430, 431, 438, 441], "gather": [1, 3, 21, 23, 24, 45, 78, 89, 93, 95, 100, 107, 115, 205, 212, 275, 278, 283, 343, 359, 402, 415, 422, 423, 424, 429, 434, 435, 436, 438, 440, 441], "continu": [1, 2, 3, 9, 31, 34, 45, 80, 81, 82, 108, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 169, 177, 201, 226, 234, 253, 254, 255, 256, 286, 287, 317, 322, 326, 349, 360, 365, 373, 416, 421, 423, 427, 434, 435, 438], "concomitantli": [1, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "network": [1, 4, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 243, 250, 251, 253, 254, 255, 256, 259, 261, 262, 268, 271, 276, 277, 278, 280, 281, 282, 284, 286, 288, 290, 291, 292, 297, 303, 304, 305, 306, 314, 318, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 356, 358, 360, 361, 362, 363, 364, 407, 408, 416, 417, 418, 425, 428, 431, 433, 436, 441], "impli": [1, 79, 441], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 91, 94, 100, 107, 119, 122, 125, 128, 129, 130, 131, 136, 148, 149, 152, 154, 157, 158, 159, 164, 203, 207, 220, 231, 233, 235, 240, 241, 243, 246, 266, 270, 271, 276, 315, 327, 334, 342, 345, 348, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 434, 435, 436, 437, 438, 441], "slightli": [1, 26, 417, 424, 425, 434, 436, 437, 438, 441], "lag": [1, 421, 422, 423], "therefor": [1, 2, 3, 7, 57, 64, 73, 74, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 216, 345, 358, 425, 428, 434, 441], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 184], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 28, 30, 37, 39, 41, 42, 45, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 89, 91, 93, 95, 100, 102, 107, 108, 113, 115, 116, 119, 122, 125, 129, 136, 139, 142, 145, 148, 149, 150, 151, 152, 157, 158, 159, 172, 175, 176, 177, 178, 181, 184, 195, 203, 211, 216, 219, 224, 225, 226, 227, 228, 232, 233, 235, 238, 239, 243, 245, 263, 264, 265, 266, 268, 269, 270, 274, 275, 276, 284, 286, 287, 306, 311, 314, 315, 324, 325, 326, 327, 328, 333, 334, 335, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 417, 418, 421, 422, 423, 425, 426, 433, 434, 435, 436, 438, 441], "off": [1, 2, 4, 267, 296, 307, 348, 378, 393, 403, 416, 418, 421, 422, 423, 427, 428, 434, 435, 437, 440, 441], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 37, 38, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 100, 102, 107, 115, 119, 122, 125, 128, 129, 130, 135, 136, 148, 149, 150, 151, 152, 157, 158, 159, 160, 162, 164, 184, 191, 194, 198, 207, 225, 232, 233, 239, 243, 260, 264, 266, 268, 270, 274, 277, 279, 303, 305, 306, 308, 312, 325, 333, 335, 341, 345, 393, 416, 417, 418, 421, 422, 423, 424, 426, 427, 429, 430, 434, 435, 436, 437, 438, 441], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 57, 62, 63, 64, 73, 74, 102, 148, 157, 241, 441], "rollout": [1, 2, 3, 11, 14, 15, 17, 20, 24, 26, 45, 66, 72, 79, 113, 119, 120, 121, 122, 125, 129, 131, 132, 134, 135, 136, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 164, 177, 178, 180, 181, 184, 187, 189, 191, 194, 195, 196, 201, 203, 204, 209, 213, 214, 219, 220, 221, 224, 225, 227, 228, 231, 234, 240, 241, 243, 247, 248, 249, 266, 270, 273, 287, 310, 325, 378, 380, 402, 416, 421, 423, 424, 427, 428, 429, 430, 431, 437, 438, 440], "necessari": [1, 4, 6, 8, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 220, 346, 360, 361, 362, 363, 364, 417, 421, 423, 427, 428, 429], "synchronis": [1, 126, 434, 435], "either": [1, 2, 5, 25, 28, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 79, 89, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 205, 224, 225, 241, 243, 320, 343, 350, 351, 384, 418, 421, 422, 424, 434, 437, 438, 440, 441], "update_policy_weights_": [1, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 421, 435, 440], "update_at_each_batch": [1, 14, 15, 20], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 175, 176, 177, 178, 180, 181, 183, 184, 185, 188, 189, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 211, 212, 214, 215, 218, 219, 220, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 250, 251, 253, 254, 255, 256, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 294, 295, 296, 301, 302, 303, 304, 305, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 354, 360, 361, 362, 363, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 387, 388, 391, 392, 393, 395, 398, 412, 416, 417, 418, 421, 422, 423, 424, 425, 427, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "second": [1, 2, 3, 8, 14, 15, 17, 20, 26, 45, 46, 47, 48, 49, 113, 148, 181, 228, 264, 266, 268, 270, 308, 327, 342, 345, 348, 380, 382, 385, 387, 397, 421, 423, 429, 434, 435, 436, 438, 440, 441], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 169, 172, 175, 177, 181, 188, 191, 192, 194, 195, 196, 201, 203, 204, 209, 210, 211, 213, 214, 216, 220, 223, 224, 226, 229, 232, 233, 234, 236, 238, 240, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 277, 279, 280, 285, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 378, 395, 400, 406, 416, 421, 422, 423, 424, 425, 434, 435, 436, 437, 440], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 94, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 198, 203, 228, 230, 234, 241, 243, 259, 260, 265, 269, 303, 304, 305, 307, 308, 309, 314, 320, 325, 327, 329, 330, 335, 342, 345, 347, 358, 359, 360, 361, 362, 363, 398, 414, 417, 418, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 436, 441], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 17, 20, 21, 22, 23, 24, 30, 31, 37, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 77, 78, 79, 80, 90, 91, 93, 94, 95, 98, 100, 102, 107, 108, 115, 119, 122, 124, 125, 126, 128, 129, 130, 136, 142, 148, 149, 152, 157, 158, 159, 164, 169, 176, 207, 226, 233, 240, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 326, 328, 330, 333, 334, 341, 343, 346, 348, 350, 351, 358, 360, 361, 362, 363, 378, 380, 384, 388, 393, 402, 403, 404, 408, 410, 411, 416, 417, 418, 421, 423, 424, 425, 426, 427, 436, 438, 441], "cpu": [1, 2, 3, 8, 10, 14, 15, 17, 20, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 102, 107, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 177, 181, 188, 191, 192, 194, 195, 196, 201, 204, 209, 211, 213, 214, 216, 220, 223, 224, 226, 232, 233, 234, 236, 238, 243, 247, 249, 259, 264, 265, 266, 268, 269, 270, 273, 279, 280, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 378, 416, 421, 422, 423, 424, 434, 435, 436, 437, 440], "slower": [1, 434], "than": [1, 2, 3, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 28, 30, 60, 79, 100, 107, 108, 111, 113, 119, 122, 125, 129, 133, 136, 146, 147, 148, 149, 152, 154, 157, 158, 159, 204, 205, 214, 241, 245, 256, 266, 268, 270, 271, 298, 302, 307, 314, 315, 319, 343, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 415, 416, 417, 421, 422, 423, 425, 426, 428, 434, 435, 436, 438, 440, 441], "one": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 98, 99, 100, 102, 103, 107, 108, 109, 111, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 177, 178, 181, 184, 187, 189, 191, 192, 193, 194, 201, 204, 206, 207, 211, 216, 219, 222, 223, 225, 226, 227, 232, 233, 235, 238, 240, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 277, 278, 281, 282, 283, 284, 285, 287, 289, 290, 291, 293, 298, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 355, 358, 360, 361, 362, 363, 367, 368, 380, 382, 391, 393, 394, 398, 402, 412, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 441], "cuda": [1, 2, 3, 7, 14, 15, 17, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 125, 129, 131, 132, 133, 136, 148, 149, 152, 157, 158, 159, 188, 203, 210, 211, 226, 232, 233, 236, 238, 243, 264, 265, 268, 269, 314, 390, 421, 422, 423, 424, 434, 435, 437, 441], "multipl": [1, 2, 3, 5, 8, 14, 15, 17, 20, 21, 22, 23, 24, 48, 60, 64, 73, 74, 75, 79, 95, 102, 103, 115, 119, 120, 121, 134, 135, 148, 157, 159, 185, 187, 193, 202, 205, 206, 216, 219, 223, 224, 231, 240, 264, 268, 270, 276, 279, 280, 302, 307, 311, 312, 314, 315, 318, 327, 334, 342, 345, 355, 366, 412, 416, 417, 418, 421, 422, 423, 426, 428, 429, 434, 435, 436, 438, 440], "infer": [1, 3, 14, 15, 16, 17, 19, 21, 23, 24, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 240, 279, 306, 311, 315, 332, 378, 421, 423, 425, 429, 431, 438, 440], "dispatch": [1, 3, 21, 22, 23, 24, 37, 60, 72, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 298, 310, 380, 421, 441], "avail": [1, 2, 3, 4, 6, 24, 57, 64, 73, 74, 100, 106, 107, 108, 120, 121, 123, 124, 133, 134, 135, 140, 141, 146, 147, 148, 150, 151, 154, 160, 161, 162, 163, 177, 180, 183, 201, 203, 260, 289, 311, 315, 343, 380, 410, 411, 421, 422, 423, 424, 425, 426, 427, 434, 435, 436, 438, 441], "speed": [1, 2, 3, 4, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 417, 421, 422, 423, 424, 434, 435, 436, 438, 440], "avoid": [1, 2, 3, 30, 37, 42, 50, 60, 61, 67, 72, 93, 95, 107, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 174, 184, 201, 231, 233, 240, 241, 243, 246, 295, 302, 314, 319, 327, 328, 342, 345, 348, 401, 423, 425, 435], "oom": [1, 3, 56, 58, 65, 79, 93, 95, 115], "choic": [1, 2, 52, 148, 416, 417, 421, 422, 428, 434, 435], "pass": [1, 2, 3, 4, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 34, 35, 37, 42, 43, 50, 52, 57, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 77, 78, 91, 93, 95, 100, 102, 107, 108, 113, 115, 119, 122, 125, 126, 127, 129, 130, 136, 139, 143, 148, 149, 150, 151, 152, 157, 158, 159, 162, 178, 180, 181, 184, 189, 191, 194, 204, 205, 213, 214, 231, 235, 240, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 279, 281, 282, 285, 287, 288, 290, 291, 293, 297, 298, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 326, 327, 328, 341, 342, 343, 345, 346, 348, 350, 351, 360, 361, 362, 363, 364, 378, 395, 398, 410, 411, 412, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 438, 440, 441], "ie": [1, 2, 3, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 68, 69, 72, 73, 77, 78, 80, 81, 82, 83, 84, 99, 108, 119, 122, 125, 129, 133, 136, 145, 148, 149, 152, 157, 158, 159, 176, 177, 184, 198, 223, 226, 235, 240, 266, 270, 306, 314, 416, 417, 422, 435], "store": [1, 3, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 30, 34, 37, 40, 41, 42, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 78, 79, 89, 91, 93, 94, 95, 96, 99, 100, 102, 107, 113, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 201, 228, 239, 240, 241, 243, 245, 247, 248, 273, 287, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 387, 414, 418, 421, 423, 424, 427, 429, 431, 434, 435, 437, 441], "while": [1, 2, 3, 7, 8, 14, 15, 17, 20, 26, 30, 37, 42, 50, 60, 61, 62, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 216, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 333, 341, 342, 345, 416, 417, 421, 423, 424, 427, 429, 430, 434, 435, 436, 437, 438, 440], "wait": [1, 13, 14, 15, 20, 21, 22, 23, 24, 25, 62, 160, 424, 436], "also": [1, 2, 3, 8, 9, 11, 14, 15, 26, 28, 29, 30, 33, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 64, 65, 67, 72, 73, 74, 77, 79, 89, 93, 94, 95, 100, 102, 107, 108, 113, 115, 119, 122, 125, 129, 135, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 172, 174, 175, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 193, 195, 196, 197, 199, 201, 202, 203, 207, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 240, 243, 244, 250, 251, 264, 268, 271, 291, 310, 311, 316, 317, 318, 325, 326, 328, 329, 330, 332, 333, 334, 339, 341, 345, 348, 350, 360, 367, 368, 378, 380, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 438, 440, 441], "impact": [1, 2, 3, 13, 21, 22, 23, 135, 191, 194, 246, 325, 327, 342, 345, 347, 422, 424, 434, 435], "memori": [1, 3, 8, 24, 30, 33, 37, 42, 50, 56, 58, 60, 61, 62, 65, 67, 72, 78, 79, 91, 93, 94, 98, 119, 122, 125, 126, 129, 133, 136, 148, 149, 152, 157, 158, 159, 184, 188, 211, 226, 232, 233, 236, 238, 240, 241, 243, 258, 268, 269, 314, 412, 414, 418, 421, 422, 424, 434, 438, 440], "manag": [1, 3, 8, 16, 24, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 248, 266, 270, 301, 356, 357, 360, 361, 362, 363, 388, 393, 416, 424, 425, 428, 440], "kei": [1, 2, 7, 14, 15, 17, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 99, 100, 102, 105, 107, 108, 113, 119, 122, 125, 129, 134, 135, 136, 148, 149, 150, 151, 152, 157, 158, 159, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 247, 249, 259, 260, 263, 266, 270, 272, 273, 287, 289, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 378, 380, 392, 393, 394, 396, 397, 398, 402, 417, 418, 421, 423, 424, 425, 426, 428, 433, 434, 435, 436, 438, 440, 441], "control": [1, 3, 5, 8, 17, 26, 27, 34, 35, 36, 43, 64, 69, 73, 74, 100, 102, 107, 119, 122, 123, 124, 125, 129, 135, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 175, 193, 253, 254, 255, 256, 266, 270, 272, 273, 287, 291, 298, 314, 315, 316, 325, 327, 328, 342, 343, 345, 349, 360, 365, 373, 378, 388, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 438, 440], "which": [1, 2, 3, 4, 7, 8, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 94, 102, 105, 106, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 184, 185, 191, 194, 199, 201, 203, 204, 206, 207, 211, 212, 214, 224, 226, 227, 230, 232, 233, 234, 236, 240, 243, 244, 259, 264, 265, 266, 267, 268, 269, 270, 274, 275, 276, 277, 278, 284, 286, 296, 303, 304, 305, 306, 310, 311, 314, 315, 316, 317, 325, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 358, 360, 361, 362, 363, 378, 380, 389, 394, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 441], "storing_devic": [1, 14, 15, 17, 20, 21, 22, 23, 24, 422, 435], "dure": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 57, 58, 61, 62, 63, 64, 66, 67, 73, 74, 78, 89, 91, 96, 100, 102, 105, 107, 119, 122, 125, 126, 129, 135, 136, 148, 149, 150, 151, 152, 157, 158, 159, 180, 181, 184, 187, 191, 194, 196, 198, 199, 201, 205, 209, 221, 223, 226, 228, 230, 231, 233, 234, 235, 240, 241, 243, 246, 248, 249, 266, 270, 277, 310, 360, 362, 363, 393, 398, 417, 421, 422, 423, 424, 427, 428, 429, 431, 434, 435, 436, 438, 441], "heurist": [1, 4, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 245, 310, 315, 421, 425, 429, 441], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 105, 113, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 231, 280, 345, 350, 359, 360, 361, 362, 363, 364, 379, 415, 416, 417, 418, 421, 422, 423, 424, 427, 429, 430, 435, 438, 441], "same": [1, 2, 3, 4, 17, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 106, 107, 108, 111, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 143, 144, 148, 149, 150, 151, 152, 154, 157, 158, 159, 177, 184, 191, 193, 194, 199, 201, 204, 205, 206, 207, 223, 231, 232, 233, 240, 243, 244, 250, 251, 265, 269, 271, 274, 275, 276, 277, 287, 295, 306, 318, 326, 328, 341, 343, 346, 348, 350, 351, 355, 417, 421, 422, 423, 426, 427, 429, 433, 434, 435, 437, 438, 441], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 169, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 287, 289, 290, 291, 293, 294, 295, 296, 301, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408, 412, 417, 418, 421, 422, 423, 424, 427, 434, 437, 438, 440, 441], "behavior": [1, 2, 3, 4, 14, 15, 24, 30, 37, 42, 50, 60, 61, 67, 72, 77, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 185, 191, 194, 207, 212, 225, 233, 241, 243, 246, 266, 267, 270, 296, 333, 341, 350, 378, 388, 393, 416, 422, 424, 434, 435, 436, 438], "besid": 1, "those": [1, 2, 3, 5, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 191, 194, 201, 207, 226, 227, 230, 234, 270, 286, 311, 315, 316, 317, 400, 410, 411, 416, 421, 422, 426, 427, 435, 436, 441], "choos": [1, 3, 11, 52, 119, 122, 139, 266, 270, 345, 414, 417, 421, 422, 423, 425, 434, 435, 438, 440], "follow": [1, 2, 3, 6, 7, 8, 11, 19, 30, 37, 42, 45, 50, 56, 58, 59, 60, 61, 65, 66, 67, 72, 77, 79, 100, 107, 108, 119, 120, 121, 122, 125, 128, 129, 130, 134, 135, 136, 142, 145, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 172, 180, 184, 203, 211, 236, 240, 241, 243, 250, 251, 264, 266, 268, 270, 271, 308, 311, 312, 313, 324, 325, 326, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 380, 398, 416, 417, 418, 421, 422, 423, 424, 425, 428, 429, 433, 434, 435, 436, 438, 440, 441], "max_frames_per_traj": [1, 14, 15, 17, 20, 21, 22, 23, 24, 401, 421, 423, 440], "frame": [1, 2, 11, 14, 15, 17, 20, 21, 22, 23, 24, 50, 184, 199, 243, 245, 263, 287, 310, 379, 380, 382, 385, 387, 391, 393, 398, 401, 402, 421, 422, 423, 424, 427, 434, 435, 438, 440, 441], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 96, 100, 101, 102, 106, 107, 109, 111, 115, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 164, 173, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 205, 207, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 277, 278, 279, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 314, 315, 317, 318, 321, 327, 328, 342, 343, 345, 348, 350, 359, 360, 361, 362, 363, 378, 379, 382, 393, 417, 418, 422, 423, 424, 425, 426, 427, 429, 430, 434, 435, 436, 438, 440, 441], "frames_per_batch": [1, 2, 14, 15, 17, 20, 21, 22, 23, 24, 39, 50, 62, 70, 181, 184, 216, 266, 270, 401, 421, 422, 423, 424, 425, 429, 431, 434, 435, 438, 440], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 30, 34, 35, 37, 41, 42, 43, 45, 46, 48, 50, 51, 60, 61, 64, 66, 67, 69, 71, 72, 73, 79, 100, 102, 105, 107, 108, 110, 113, 119, 122, 125, 126, 129, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 177, 202, 204, 205, 211, 216, 219, 224, 225, 226, 227, 231, 232, 238, 240, 241, 243, 244, 245, 260, 263, 264, 265, 266, 268, 270, 276, 277, 281, 288, 289, 297, 301, 307, 308, 313, 315, 317, 366, 369, 370, 371, 372, 374, 375, 376, 377, 380, 393, 395, 410, 411, 417, 421, 422, 423, 424, 427, 428, 429, 431, 434, 435, 436, 437, 438, 440, 441], "init_random_fram": [1, 14, 15, 17, 20, 21, 22, 23, 24, 401, 421, 422, 425, 431], "rand_step": [1, 2, 3, 39, 70, 119, 122, 123, 124, 125, 126, 128, 129, 130, 136, 137, 138, 142, 143, 144, 148, 149, 152, 157, 158, 159, 202, 226, 240, 436, 440, 441], "reset_at_each_it": [1, 14, 15, 17, 20, 21, 22, 23, 24, 421], "split_traj": [1, 14, 15, 17, 20, 21, 22, 23, 24, 421, 422, 423], "trajectori": [1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 37, 40, 41, 50, 51, 71, 73, 79, 99, 100, 107, 108, 113, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 184, 212, 224, 231, 243, 247, 270, 273, 287, 345, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 389, 414, 417, 421, 422, 423, 424, 426, 429, 431, 436, 440, 441], "pad": [1, 2, 3, 26, 59, 75, 184, 230, 250, 251, 253, 254, 270, 274, 275, 276, 395], "along": [1, 2, 3, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 95, 100, 102, 107, 108, 113, 115, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 169, 183, 184, 185, 205, 207, 209, 212, 219, 223, 229, 243, 270, 271, 274, 275, 280, 307, 311, 314, 315, 328, 343, 350, 421, 422, 424, 426, 428, 434, 435, 436, 438, 440], "point": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 92, 99, 100, 103, 113, 114, 117, 118, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 243, 272, 314, 324, 335, 398, 415, 422, 423, 433, 434, 435, 436, 438, 440, 441], "boolean": [1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 108, 129, 176, 180, 212, 224, 274, 275, 287, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 418, 424], "repres": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 39, 43, 45, 52, 69, 70, 72, 73, 79, 94, 119, 122, 123, 124, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 162, 163, 199, 212, 228, 240, 243, 260, 274, 275, 289, 295, 307, 308, 312, 313, 354, 360, 395, 416, 421, 423, 424, 425, 426, 427, 428, 434, 435], "valid": [1, 2, 3, 26, 56, 58, 59, 78, 79, 89, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 165, 180, 212, 231, 233, 243, 245, 250, 251, 271, 274, 275, 287, 327, 334, 342, 345, 348, 360, 361, 362, 363, 395, 418, 425, 441], "exploration_typ": [1, 14, 15, 17, 20, 21, 22, 23, 24, 393, 414, 416, 421, 422], "strategi": [1, 2, 3, 17, 105, 139, 177, 263, 275, 283, 416, 418, 421, 422, 425, 427, 434, 435, 438, 440], "reset_when_don": [1, 14, 15, 17, 20], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 77, 79, 80, 81, 82, 83, 84, 86, 95, 102, 107, 108, 119, 122, 125, 129, 135, 136, 142, 148, 149, 150, 151, 152, 157, 158, 159, 162, 165, 181, 183, 184, 189, 195, 203, 224, 225, 226, 231, 233, 239, 240, 241, 243, 244, 245, 250, 251, 266, 270, 274, 275, 276, 277, 286, 307, 311, 312, 315, 318, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 351, 358, 380, 398, 408, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441], "organ": [1, 2, 436, 438], "within": [1, 2, 3, 14, 15, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 94, 99, 100, 108, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 154, 157, 158, 159, 176, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 241, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 301, 306, 308, 310, 313, 315, 318, 321, 322, 330, 335, 350, 358, 378, 380, 416, 417, 422, 425, 426, 427, 428, 429, 430, 431, 434, 436, 440], "differ": [1, 2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 102, 105, 119, 120, 121, 122, 125, 126, 129, 134, 135, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 180, 184, 192, 193, 204, 207, 214, 223, 231, 233, 235, 243, 244, 260, 264, 265, 268, 269, 271, 273, 276, 277, 278, 289, 315, 341, 343, 345, 354, 360, 361, 362, 366, 367, 368, 393, 398, 400, 410, 411, 416, 417, 418, 421, 422, 423, 425, 426, 428, 430, 433, 434, 435, 436, 437, 438, 440, 441], "how": [1, 2, 3, 11, 19, 21, 22, 23, 27, 30, 37, 42, 50, 57, 60, 61, 67, 72, 73, 99, 100, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 177, 204, 243, 278, 311, 325, 327, 340, 342, 343, 345, 380, 382, 398, 415, 416, 421, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "tabl": [1, 30, 416, 422, 427], "summar": [1, 3, 436], "what": [1, 3, 8, 11, 36, 37, 57, 77, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 175, 195, 226, 231, 312, 328, 339, 343, 350, 415, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 436, 437, 438, 440, 441], "expect": [1, 2, 3, 4, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 78, 80, 81, 82, 83, 84, 100, 106, 107, 119, 122, 125, 129, 136, 142, 145, 148, 149, 152, 157, 158, 159, 164, 177, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 200, 202, 203, 204, 205, 207, 209, 211, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 264, 265, 266, 268, 269, 270, 276, 277, 287, 308, 314, 317, 325, 326, 327, 328, 329, 330, 332, 333, 334, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 355, 358, 402, 415, 416, 417, 418, 421, 423, 424, 426, 427, 428, 429, 434, 435, 436, 438, 441], "n": [1, 2, 3, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 193, 198, 235, 243, 264, 265, 268, 273, 284, 286, 287, 310, 315, 325, 326, 334, 343, 359, 395, 418, 422, 424, 425, 438, 440, 441], "b": [1, 2, 3, 7, 8, 26, 34, 35, 37, 43, 56, 58, 60, 64, 65, 66, 67, 69, 72, 73, 74, 79, 93, 94, 113, 122, 201, 234, 264, 265, 268, 269, 276, 277, 279, 280, 288, 297, 318, 360, 361, 362, 363, 364, 366, 380, 422, 438], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 99, 100, 102, 106, 107, 108, 113, 119, 122, 125, 126, 128, 129, 136, 143, 144, 148, 149, 152, 157, 158, 159, 164, 175, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 244, 264, 266, 268, 270, 287, 307, 314, 325, 349, 360, 361, 362, 363, 364, 366, 380, 387, 398, 400, 412, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "p": [1, 2, 4, 102, 105, 126, 155, 156, 248, 249], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 37, 42, 50, 60, 61, 67, 72, 108, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 150, 151, 152, 157, 158, 159, 188, 191, 192, 194, 202, 211, 216, 220, 225, 226, 229, 231, 232, 233, 236, 238, 239, 241, 243, 244, 264, 267, 268, 271, 276, 291, 295, 296, 314, 315, 317, 324, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 400, 410, 411, 412, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 441], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 91, 98, 99, 100, 102, 113, 119, 122, 125, 128, 129, 136, 148, 149, 152, 157, 158, 159, 164, 191, 192, 194, 202, 207, 226, 229, 233, 234, 244, 270, 271, 277, 278, 311, 314, 315, 317, 318, 324, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 380, 389, 400, 410, 411, 412, 414, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 430, 434, 435, 436, 438, 440, 441], "dimens": [1, 3, 14, 15, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 64, 65, 66, 68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 100, 107, 108, 113, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 157, 158, 159, 162, 163, 169, 177, 183, 184, 185, 198, 205, 207, 209, 212, 219, 222, 223, 226, 229, 235, 240, 241, 250, 251, 252, 257, 258, 266, 268, 270, 271, 274, 275, 276, 279, 280, 285, 288, 292, 293, 294, 295, 298, 307, 310, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 412, 414, 417, 421, 422, 423, 424, 426, 434, 435, 436, 438], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 79, 90, 93, 102, 113, 119, 120, 121, 122, 125, 126, 129, 134, 135, 136, 139, 145, 148, 149, 150, 151, 152, 154, 157, 158, 159, 174, 175, 183, 184, 185, 205, 212, 219, 226, 227, 228, 231, 233, 240, 243, 249, 261, 264, 268, 270, 287, 301, 310, 315, 326, 327, 328, 334, 337, 341, 342, 343, 345, 346, 348, 350, 351, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 398, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 440, 441], "adapt": [1, 27, 178, 205, 224, 240, 246, 342, 421, 425, 436], "equal": [1, 14, 15, 20, 30, 79, 100, 107, 108, 122, 143, 146, 147, 148, 157, 206, 207, 250, 251, 264, 266, 268, 270, 271, 274, 275, 277, 349, 354, 389, 410, 411, 421, 423, 437], "introduc": [1, 2, 148, 157, 264, 266, 268, 270, 287, 421, 434], "some": [1, 2, 3, 4, 7, 8, 9, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 102, 113, 115, 119, 120, 121, 122, 125, 128, 129, 130, 134, 135, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 164, 180, 211, 226, 233, 236, 243, 253, 266, 293, 315, 316, 317, 380, 389, 401, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 438, 440, 441], "confus": [1, 28, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 102, 105, 106, 107, 108, 109, 111, 115, 119, 122, 125, 128, 129, 130, 136, 142, 148, 149, 152, 157, 158, 159, 187, 192, 193, 213, 220, 226, 229, 236, 240, 241, 243, 248, 263, 264, 266, 270, 280, 301, 306, 308, 313, 315, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 360, 378, 395, 410, 411, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 440, 441], "better": [1, 3, 8, 9, 14, 15, 26, 135, 266, 270, 417, 423, 426, 436, 440], "consist": [1, 2, 3, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 239, 243, 248, 251, 271, 421, 422, 423, 436, 437, 441], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 233, 311, 315, 421, 423, 425, 426, 427, 429, 434, 435, 436, 441], "keep": [1, 2, 3, 4, 7, 8, 15, 57, 64, 73, 74, 102, 106, 113, 122, 148, 157, 175, 207, 211, 238, 240, 241, 243, 287, 310, 380, 391, 398, 421, 422, 423, 424, 429, 430, 431, 435, 436, 438, 441], "separ": [1, 2, 4, 8, 14, 15, 17, 20, 21, 23, 24, 26, 34, 35, 43, 64, 69, 73, 74, 184, 211, 238, 326, 329, 332, 334, 346, 348, 350, 351, 417, 421, 422, 427, 428, 434, 435, 438, 441], "interchang": [1, 276, 277, 423, 426, 430, 437, 438], "between": [1, 2, 3, 4, 5, 14, 15, 16, 20, 24, 27, 30, 37, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 95, 100, 102, 103, 106, 107, 108, 115, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 164, 193, 206, 217, 228, 231, 233, 240, 241, 243, 250, 251, 259, 264, 266, 270, 271, 276, 277, 308, 311, 315, 325, 327, 328, 329, 332, 333, 334, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 360, 393, 398, 417, 421, 422, 424, 425, 429, 434, 435, 436, 438, 441], "wherea": [1, 2, 25, 30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 154, 157, 158, 159, 193, 231, 233, 243, 328, 343, 348, 418, 430], "correspond": [1, 2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 67, 68, 69, 72, 73, 77, 79, 80, 81, 82, 83, 84, 99, 100, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 184, 201, 211, 226, 231, 233, 238, 240, 241, 243, 248, 263, 266, 268, 270, 274, 275, 287, 311, 315, 328, 330, 333, 334, 348, 358, 360, 361, 362, 363, 364, 416, 421, 422, 423, 425, 426, 428, 429, 430, 434, 435, 436, 437], "sub": [1, 2, 3, 14, 15, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 100, 107, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 212, 231, 241, 243, 316, 317, 389, 398, 416, 417, 421, 422, 423, 429, 433, 440, 441], "doesn": [1, 4, 30, 37, 42, 50, 60, 61, 67, 72, 113, 119, 122, 125, 129, 136, 143, 148, 149, 152, 157, 158, 159, 191, 194, 243, 244, 425, 426], "understood": [1, 421], "serv": [1, 3, 21, 23, 24, 131, 438, 440, 441], "basi": [1, 113, 276, 438, 440], "we": [1, 2, 3, 5, 7, 9, 11, 26, 27, 30, 34, 37, 42, 45, 50, 57, 60, 61, 64, 66, 67, 72, 73, 74, 93, 106, 108, 113, 119, 120, 121, 122, 125, 126, 129, 133, 134, 135, 136, 148, 149, 152, 157, 158, 159, 164, 184, 203, 211, 214, 220, 231, 236, 239, 240, 241, 243, 244, 247, 270, 276, 277, 278, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 380, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "anoth": [1, 2, 3, 8, 16, 18, 19, 45, 72, 77, 94, 100, 107, 119, 122, 125, 128, 129, 130, 133, 136, 148, 149, 152, 157, 158, 159, 181, 189, 191, 192, 194, 226, 232, 271, 311, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 417, 421, 423, 424, 425, 427, 428, 433, 434, 435, 436, 441], "wise": [1, 205], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 94, 99, 100, 107, 108, 119, 122, 125, 129, 133, 136, 143, 148, 149, 152, 154, 157, 158, 159, 181, 184, 188, 201, 211, 223, 226, 231, 232, 233, 236, 238, 241, 243, 248, 266, 270, 271, 278, 298, 314, 315, 316, 317, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 378, 380, 382, 416, 418, 421, 422, 423, 424, 426, 427, 428, 430, 434, 435, 436, 438, 440, 441], "op": [1, 16, 28, 29, 31, 32, 33, 38, 46, 47, 48, 49, 52, 53, 54, 55, 77, 80, 81, 82, 83, 84, 206, 239, 245, 248, 263, 380, 400], "sinc": [1, 2, 3, 4, 5, 7, 11, 26, 30, 37, 42, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 99, 100, 108, 113, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 154, 157, 158, 159, 164, 175, 189, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 307, 308, 310, 312, 313, 318, 321, 378, 380, 417, 421, 422, 423, 424, 426, 427, 428, 434, 436, 437, 438, 440, 441], "goal": [1, 3, 4, 136, 225, 421, 422, 423, 424, 435, 436], "policy_devic": [1, 14, 15, 17, 20, 21, 22, 23, 24, 422], "explicitli": [1, 2, 3, 4, 33, 78, 90, 91, 98, 102, 180, 286, 311, 388, 417, 422, 424, 429, 434, 435, 438], "do": [1, 2, 3, 4, 7, 52, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 175, 177, 212, 226, 231, 239, 240, 266, 270, 277, 279, 304, 315, 343, 360, 380, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 440, 441], "deepcopi": [1, 278, 343, 434], "structur": [1, 3, 7, 45, 52, 56, 57, 58, 64, 65, 66, 73, 74, 77, 78, 79, 94, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 191, 194, 226, 276, 287, 325, 334, 345, 348, 360, 361, 362, 363, 364, 414, 417, 421, 423, 424, 426, 429, 434, 435, 436, 437], "place": [1, 2, 3, 18, 27, 30, 36, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 93, 95, 102, 105, 107, 115, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 176, 180, 188, 195, 211, 226, 232, 233, 236, 238, 239, 240, 243, 278, 306, 310, 314, 395, 400, 401, 417, 422, 423, 427, 430, 434, 435, 436, 438], "instanti": [1, 2, 3, 14, 15, 24, 56, 57, 58, 62, 63, 64, 65, 73, 74, 77, 79, 99, 100, 102, 133, 135, 180, 201, 226, 277, 360, 361, 362, 363, 364, 378, 421, 422, 427, 428, 430, 434, 435, 436, 438, 441], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 102, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 165, 167, 169, 173, 175, 177, 183, 184, 187, 188, 191, 192, 194, 197, 203, 206, 207, 211, 219, 221, 223, 226, 227, 232, 233, 236, 238, 240, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 281, 282, 285, 287, 290, 291, 293, 298, 301, 306, 308, 310, 313, 314, 315, 317, 318, 321, 322, 325, 326, 328, 337, 341, 343, 345, 346, 347, 348, 350, 351, 355, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 394, 398, 401, 410, 411, 412, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 440, 441], "graph": [1, 3, 4, 8, 37, 60, 72, 120, 121, 134, 135, 356, 357, 421, 425, 436], "reli": [1, 2, 3, 11, 26, 61, 67, 226, 264, 265, 266, 268, 269, 270, 325, 345, 417, 421, 423, 425, 427, 429, 436, 441], "third": [1, 207, 228, 308, 434, 435], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 43, 56, 58, 65, 69, 79, 421, 422, 423, 424, 425, 428, 429, 434, 435, 436, 440, 441], "limit": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 184, 203, 325, 327, 342, 343, 345, 347, 417, 421, 422, 424, 434, 435, 436], "chart": 1, "show": [1, 2, 11, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 277, 380, 421, 423, 424, 425, 434, 435, 436, 438, 440], "decis": [1, 2, 3, 252, 257, 285, 306, 331, 344, 416, 424, 426, 427, 434, 435, 438, 441], "multiprocess": [1, 2, 3, 14, 15, 21, 22, 23, 64, 73, 74, 94, 102, 119, 126, 127, 148, 152, 157, 240, 241, 421, 422, 423, 424, 429, 434, 435, 436, 437, 441], "ensur": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 67, 72, 73, 79, 99, 100, 106, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 184, 211, 224, 233, 236, 240, 241, 243, 266, 270, 307, 416, 422, 423, 436, 438], "flexibl": [1, 3, 9, 143, 352, 417, 418, 421, 425, 438, 441], "extens": [1, 2, 57, 64, 73, 74, 108, 248, 418, 438], "mechan": [1, 4, 16, 18, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243, 422, 428, 436], "accommod": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 426, 427], "variou": [1, 2, 3, 122, 232, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 352, 358, 380, 410, 411, 421, 422, 423, 425, 426, 427, 428, 430, 434, 435, 438, 441], "deploy": [1, 425], "scenario": [1, 2, 18, 140, 141, 148, 162, 163, 231, 378, 421, 427, 434, 435, 436], "facilit": [1, 2, 3, 7, 210, 211, 226, 236, 238, 303, 304, 305, 416, 421, 424, 427, 436], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "These": [1, 2, 7, 45, 66, 116, 162, 211, 238, 241, 416, 417, 421, 423, 434, 435, 436, 438, 441], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 45, 57, 64, 67, 73, 74, 78, 104, 110, 113, 114, 116, 117, 119, 120, 121, 122, 125, 129, 133, 134, 135, 136, 142, 143, 144, 148, 149, 152, 157, 158, 159, 162, 175, 192, 216, 230, 232, 236, 237, 266, 270, 276, 278, 303, 309, 325, 326, 328, 329, 330, 332, 333, 334, 336, 341, 345, 346, 347, 348, 350, 351, 387, 398, 416, 417, 418, 421, 422, 424, 426, 427, 428, 430, 434, 435, 436, 438, 441], "interfac": [1, 3, 119, 132, 145, 271, 279, 416, 417, 421, 423, 425, 430, 436, 438], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 76, 77, 80, 81, 82, 83, 84, 97, 109, 110, 119, 122, 125, 129, 136, 142, 143, 148, 149, 152, 157, 158, 159, 181, 188, 191, 192, 196, 199, 203, 205, 213, 214, 220, 224, 230, 232, 233, 234, 240, 241, 243, 244, 248, 250, 264, 265, 266, 267, 268, 269, 270, 294, 295, 296, 325, 326, 328, 331, 332, 333, 339, 341, 343, 344, 345, 347, 348, 350, 378, 389, 403, 416, 418, 421, 422, 423, 424, 425, 434, 435, 436, 440], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 434], "allow": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 34, 35, 37, 42, 43, 50, 52, 54, 56, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 74, 79, 94, 100, 102, 105, 107, 108, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 175, 180, 181, 214, 241, 243, 244, 271, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 352, 354, 358, 416, 418, 421, 423, 424, 425, 426, 427, 428, 434, 435, 436, 438, 440, 441], "tailor": [1, 440], "need": [1, 2, 3, 4, 7, 8, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 56, 58, 60, 61, 67, 72, 77, 109, 113, 119, 122, 125, 129, 133, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 184, 187, 189, 198, 204, 211, 214, 227, 231, 232, 233, 238, 240, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 279, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 311, 312, 313, 314, 318, 321, 324, 334, 347, 348, 359, 364, 380, 398, 412, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 440, 441], "handl": [1, 2, 3, 14, 15, 21, 23, 24, 30, 37, 42, 50, 52, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 239, 240, 241, 243, 270, 271, 325, 343, 345, 398, 410, 411, 421, 422, 423, 424, 426, 428, 435, 438], "well": [1, 2, 3, 8, 24, 26, 30, 37, 42, 50, 57, 59, 60, 61, 64, 67, 72, 73, 74, 77, 100, 105, 109, 116, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 232, 233, 243, 244, 248, 253, 268, 290, 291, 315, 343, 345, 350, 364, 416, 421, 422, 424, 425, 426, 427, 428, 430, 437, 438, 440, 441], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "everi": [1, 3, 8, 14, 15, 16, 17, 20, 30, 34, 35, 37, 42, 43, 50, 54, 57, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 79, 102, 109, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 224, 225, 240, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 343, 398, 418, 421, 422, 423, 424, 426, 427, 434, 435, 436], "even": [1, 2, 3, 4, 8, 11, 15, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 107, 109, 111, 115, 119, 122, 125, 126, 129, 133, 136, 148, 149, 152, 157, 158, 159, 176, 180, 421, 423, 426, 434, 435, 436, 441], "simplest": [1, 37, 60, 72, 113, 318, 421, 423, 424, 427, 434, 435, 438, 441], "vanillaweightupdat": 1, "dict": [1, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 100, 102, 107, 108, 119, 122, 125, 126, 127, 128, 129, 130, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 165, 201, 203, 226, 231, 233, 239, 240, 241, 243, 244, 250, 251, 252, 253, 254, 255, 256, 257, 262, 271, 285, 311, 315, 328, 348, 350, 380, 384, 385, 393, 398, 403, 404, 410, 411, 412, 416, 421, 422, 423, 438, 440, 441], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 90, 91, 98, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 183, 186, 190, 198, 211, 212, 219, 226, 233, 236, 238, 249, 266, 270, 298, 301, 318, 330, 334, 335, 348, 358, 369, 370, 371, 372, 374, 375, 376, 377, 380, 421, 423, 433, 436], "divers": [1, 4, 148, 157], "abl": [1, 3, 45, 119, 139, 150, 151, 152, 158, 266, 270, 421, 423, 424, 427, 433, 434, 435, 436, 438], "leav": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 64, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 176, 220, 417, 421, 429, 438], "untouch": [1, 181, 188, 191, 192, 196, 203, 205, 213, 214, 220, 224, 230, 232, 234, 241, 243], "particularli": [1, 2, 3, 425, 440, 441], "benefici": [1, 2], "involv": [1, 128, 130, 131, 140, 141, 154, 181, 184, 231, 266, 270, 426, 428], "complex": [1, 2, 3, 16, 18, 19, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314, 421, 422, 426, 427], "architectur": [1, 4, 257, 428, 434, 435, 440], "special": [1, 3, 81, 83, 414, 421, 424, 425, 441], "hardwar": [1, 3, 425], "By": [1, 2, 3, 17, 19, 34, 35, 43, 54, 69, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 148, 149, 150, 151, 152, 154, 157, 158, 159, 162, 163, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 205, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 298, 315, 343, 388, 393, 412, 417, 421, 424, 434, 437, 438, 441], "retriev": [1, 3, 16, 19, 45, 56, 57, 58, 60, 62, 63, 64, 65, 73, 74, 79, 102, 105, 107, 108, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 175, 185, 192, 195, 207, 247, 250, 273, 310, 311, 315, 318, 322, 325, 326, 327, 328, 330, 342, 345, 346, 348, 350, 351, 358, 360, 361, 362, 363, 412, 418, 422, 423, 427, 436, 441], "appli": [1, 2, 3, 4, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 206, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 240, 243, 248, 264, 268, 278, 295, 307, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 344, 345, 346, 347, 348, 350, 351, 360, 378, 394, 418, 421, 422, 423, 429, 434, 436, 440, 441], "seamless": [1, 2, 271], "integr": [1, 2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 256, 266, 270, 273, 314, 416, 426, 427, 429, 434, 435, 436, 437], "infrastructur": [1, 3, 434, 435], "transit": [1, 30, 37, 42, 50, 60, 61, 67, 72, 100, 108, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 246, 248, 320, 421, 424, 426, 427, 429, 434, 436, 438], "sampl": [1, 4, 8, 9, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 101, 102, 105, 106, 107, 108, 111, 113, 115, 119, 122, 125, 129, 136, 142, 145, 148, 149, 152, 157, 158, 159, 166, 173, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 241, 243, 245, 247, 258, 263, 267, 273, 274, 275, 283, 285, 286, 287, 290, 295, 296, 299, 302, 307, 308, 309, 311, 312, 313, 314, 315, 325, 326, 327, 328, 329, 330, 332, 342, 344, 345, 350, 351, 389, 395, 398, 401, 414, 416, 417, 421, 422, 423, 424, 425, 426, 427, 429, 431, 434, 435, 437, 440, 441], "attent": [1, 2, 8, 184, 421, 424, 441], "given": [1, 2, 3, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 100, 102, 107, 108, 119, 122, 125, 129, 136, 142, 146, 147, 148, 149, 152, 157, 158, 159, 160, 161, 175, 188, 193, 201, 207, 211, 226, 230, 232, 233, 234, 236, 238, 240, 241, 243, 245, 247, 249, 260, 261, 263, 264, 266, 268, 270, 273, 278, 289, 293, 302, 307, 308, 310, 313, 314, 315, 316, 317, 319, 324, 329, 330, 332, 343, 359, 360, 361, 362, 363, 364, 366, 390, 393, 408, 416, 417, 418, 421, 422, 423, 426, 427, 428, 429, 430, 435, 436, 441], "built": [1, 2, 3, 5, 7, 102, 120, 121, 128, 134, 135, 145, 146, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 352, 358, 406, 408, 409, 412, 421, 422, 423, 424, 425, 428, 430, 436, 438, 441], "flatten": [1, 28, 29, 31, 32, 33, 34, 35, 38, 39, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 113, 181, 198, 395, 414, 424, 435], "suffici": [1, 3, 4, 421], "preprocess": [1, 2, 78, 232, 422, 425], "popul": [1, 2, 3, 14, 15, 17, 24, 57, 62, 63, 64, 71, 73, 74, 102, 202, 226, 258, 278, 343, 421, 423, 424, 427, 429, 436, 438], "replaybuff": [1, 2, 3, 14, 15, 17, 20, 24, 39, 57, 62, 63, 70, 73, 74, 93, 94, 99, 100, 101, 102, 107, 108, 117, 184, 212, 216, 243, 330, 335, 358, 406, 408, 414, 423, 425, 429, 431, 434, 435, 437, 438, 440], "lazytensorstorag": [1, 2, 14, 15, 17, 20, 57, 64, 72, 73, 74, 99, 107, 108, 113, 216, 243, 423, 425, 431, 434, 435, 438], "lambda": [1, 2, 14, 15, 17, 20, 24, 25, 37, 45, 60, 64, 72, 79, 113, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 174, 181, 189, 201, 203, 226, 234, 241, 243, 244, 249, 298, 307, 310, 311, 312, 336, 338, 339, 350, 360, 363, 371, 372, 376, 377, 378, 408, 417, 421, 422, 425, 434, 435, 437, 438, 440, 441], "reshap": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 107, 113, 181, 266, 270, 271, 286, 378, 423, 434, 435], "slice": [1, 2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 100, 102, 107, 108, 177, 183, 184, 438], "recommend": [1, 2, 4, 7, 14, 15, 17, 20, 21, 22, 23, 24, 56, 57, 58, 64, 65, 73, 74, 79, 107, 113, 133, 184, 278, 417, 429, 434, 435], "achiev": [1, 2, 3, 4, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 133, 136, 148, 149, 152, 157, 158, 159, 176, 225, 243, 249, 311, 395, 418, 421, 422, 423, 424, 425, 434, 435, 436, 438, 440, 441], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 94, 96, 102, 113, 119, 122, 125, 126, 129, 133, 136, 148, 149, 150, 152, 157, 158, 159, 162, 163, 169, 175, 181, 184, 201, 211, 231, 232, 233, 236, 239, 240, 241, 243, 250, 251, 253, 254, 255, 256, 257, 258, 262, 266, 270, 271, 272, 276, 277, 306, 314, 315, 322, 328, 330, 335, 346, 348, 358, 380, 395, 402, 403, 404, 408, 410, 411, 416, 421, 422, 423, 424, 425, 427, 430, 434, 435, 436, 437, 438, 440, 441], "multidimension": [1, 2, 73, 99, 100, 438], "slicesampl": [1, 2, 100, 108, 184, 438], "sampler": [1, 2, 57, 62, 63, 64, 73, 74, 93, 94, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 184, 212, 286, 330, 335, 358, 421, 423, 434, 435, 438], "One": [1, 2, 3, 4, 8, 28, 29, 33, 34, 35, 38, 43, 48, 49, 54, 55, 69, 78, 113, 119, 120, 121, 148, 152, 157, 158, 184, 216, 236, 245, 283, 314, 318, 349, 354, 384, 421, 422, 438, 441], "must": [1, 2, 3, 7, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 100, 102, 107, 108, 109, 110, 111, 113, 115, 119, 120, 122, 125, 126, 129, 134, 136, 146, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 162, 172, 177, 180, 181, 184, 187, 189, 195, 199, 201, 203, 205, 207, 209, 220, 223, 225, 226, 227, 230, 231, 233, 234, 235, 240, 243, 250, 251, 260, 266, 270, 271, 274, 275, 276, 277, 289, 302, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 349, 350, 351, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 417, 421, 422, 423, 424, 427, 433, 436, 438], "shape": [1, 2, 3, 14, 15, 17, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 99, 102, 107, 113, 115, 119, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 175, 177, 181, 183, 185, 191, 194, 195, 196, 201, 203, 204, 207, 209, 213, 214, 216, 220, 223, 224, 226, 229, 234, 240, 242, 243, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 283, 284, 285, 286, 287, 288, 289, 294, 295, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 354, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 389, 395, 398, 408, 416, 417, 421, 422, 423, 424, 425, 427, 428, 431, 433, 434, 435, 437, 438, 440, 441], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 52, 232, 267, 295, 296, 324, 415, 421, 422, 423, 424, 425, 428, 434, 435, 437, 441], "dimension": [1, 57, 61, 64, 72, 73, 74, 193, 266, 270, 360, 365, 373, 417, 435], "num_slic": [1, 2, 100, 107, 108, 438], "4": [1, 2, 3, 7, 28, 30, 34, 35, 39, 43, 45, 48, 49, 50, 54, 57, 60, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 93, 94, 95, 102, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 129, 134, 135, 136, 137, 138, 139, 142, 144, 148, 149, 152, 155, 156, 157, 158, 159, 177, 178, 180, 181, 184, 189, 195, 216, 223, 224, 225, 231, 240, 241, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 268, 269, 271, 273, 274, 275, 276, 277, 281, 282, 283, 285, 286, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 319, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 378, 379, 416, 420, 421, 422, 423, 424, 430, 434, 435, 436, 438, 439, 440, 441], "trajectory_kei": [1, 26, 107, 108], "traj_id": [1, 2, 3, 14, 15, 17, 26, 39, 70, 181, 216, 429, 438], "total_fram": [1, 2, 14, 15, 17, 20, 21, 22, 23, 24, 39, 50, 62, 70, 181, 184, 216, 398, 401, 408, 418, 421, 422, 423, 424, 425, 429, 431, 434, 435, 438, 440], "dim": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 64, 65, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 107, 184, 185, 205, 209, 222, 223, 226, 235, 240, 269, 293, 298, 310, 412, 417, 422, 423, 425, 434, 436, 438], "ndim": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 95, 99, 100, 113, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 205, 243, 310], "parallelenv": [1, 2, 3, 14, 15, 17, 20, 23, 113, 119, 122, 125, 129, 136, 143, 149, 150, 151, 152, 154, 157, 158, 159, 231, 241, 266, 270, 378, 409, 414, 421, 422, 423, 426, 433, 440, 441], "make_env": [1, 3, 148, 157, 163, 231, 240, 241, 378, 403, 404, 421, 422, 440, 441], "regular": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 56, 58, 65, 79, 99, 105, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 243, 246, 248, 259, 266, 270, 289, 308, 312, 313, 314, 315, 335, 345, 400, 414, 418, 421, 422, 425, 426, 427, 431, 438, 441], "behav": [1, 3, 131, 142, 264, 268, 283, 333, 341, 343, 425, 437], "accordingli": [1, 2, 3, 100, 189, 205, 224, 225, 268, 312, 424], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 17, 20, 24, 28, 29, 30, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 79, 93, 95, 100, 102, 107, 108, 113, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 136, 139, 140, 141, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 169, 178, 180, 181, 184, 188, 189, 193, 195, 196, 201, 203, 207, 209, 211, 213, 214, 216, 219, 220, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 238, 241, 243, 244, 246, 247, 249, 250, 251, 253, 254, 255, 257, 260, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 283, 286, 288, 298, 302, 303, 304, 305, 307, 308, 311, 313, 314, 317, 318, 319, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 397, 416, 418, 420, 421, 422, 423, 424, 426, 427, 429, 430, 434, 435, 436, 438, 439, 440, 441], "isn": [1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 56, 58, 65, 79, 99, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 180, 195, 201, 307, 314, 360, 427, 428, 430, 434, 435], "current": [1, 2, 3, 12, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 97, 100, 102, 108, 119, 122, 125, 129, 131, 136, 143, 146, 147, 148, 149, 152, 157, 158, 159, 166, 175, 180, 181, 184, 201, 212, 225, 226, 227, 231, 232, 233, 241, 243, 261, 287, 291, 295, 299, 310, 325, 327, 328, 335, 342, 345, 347, 348, 383, 418, 421, 422, 423, 424, 428, 434, 435, 436, 438, 441], "fulli": [1, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 265, 269, 422, 425, 428, 436, 438], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 102, 103, 106, 108, 109, 111, 113, 114, 115, 117, 118, 119, 122, 125, 126, 129, 136, 143, 148, 149, 150, 151, 152, 157, 158, 159, 160, 162, 163, 164, 176, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 198, 199, 201, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 249, 250, 251, 257, 258, 271, 280, 286, 306, 310, 314, 315, 316, 317, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 360, 362, 363, 378, 380, 385, 398, 415, 417, 421, 422, 423, 424, 425, 427, 428, 434, 435, 436, 438, 440, 441], "consecut": [1, 3, 106, 133, 270, 287, 380, 424, 426, 429, 435, 438, 441], "won": [1, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 126, 128, 129, 136, 143, 144, 148, 149, 152, 157, 158, 159, 211, 238, 243, 325, 398, 412, 422, 423, 426, 427], "therebi": [1, 27, 378, 417, 421, 422], "interrupt": [1, 2, 129, 310, 366], "start": [1, 2, 3, 4, 5, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 45, 62, 77, 78, 79, 100, 107, 108, 119, 122, 125, 126, 129, 136, 139, 148, 149, 152, 157, 158, 159, 175, 190, 394, 420, 421, 422, 425, 432, 435, 436, 438, 439, 441], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 34, 35, 37, 43, 45, 56, 57, 58, 60, 61, 64, 65, 67, 69, 72, 79, 93, 95, 100, 107, 108, 109, 111, 113, 115, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 178, 183, 185, 191, 193, 194, 203, 207, 212, 225, 226, 229, 233, 240, 241, 263, 302, 311, 312, 315, 322, 360, 361, 362, 363, 364, 380, 384, 416, 417, 420, 421, 422, 423, 424, 425, 432, 434, 435, 436, 438, 439, 440, 441], "rid": [1, 37, 60, 72], "natur": [1, 2, 3, 13, 21, 22, 23, 421, 427, 428, 429, 438], "background": [1, 13, 14, 15, 20, 21, 22, 23, 438], "simpli": [1, 3, 6, 56, 58, 65, 78, 79, 111, 113, 118, 196, 220, 239, 343, 360, 416, 417, 421, 423, 428, 434, 435, 441], "replay_buff": [1, 2, 8, 14, 15, 17, 20, 24, 57, 62, 63, 64, 73, 74, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 184, 395, 408, 421, 422, 423, 429, 434, 435, 438], "rb": [1, 2, 14, 15, 17, 20, 39, 57, 62, 63, 64, 70, 73, 74, 94, 99, 100, 102, 107, 108, 113, 184, 216, 243, 422, 424, 425, 429, 431, 435, 437, 438, 440], "paus": 1, "sleep": [1, 14, 15, 17, 20, 62, 126, 441], "10": [1, 2, 3, 7, 25, 26, 28, 29, 30, 33, 37, 38, 45, 46, 50, 57, 62, 63, 64, 66, 72, 73, 74, 75, 78, 79, 93, 94, 95, 99, 102, 107, 108, 113, 115, 119, 120, 121, 122, 125, 126, 129, 134, 135, 136, 142, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 177, 178, 181, 183, 184, 189, 225, 227, 228, 229, 240, 241, 243, 247, 249, 252, 253, 255, 257, 259, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 285, 287, 298, 311, 315, 318, 322, 326, 330, 332, 339, 345, 346, 347, 351, 358, 360, 361, 362, 363, 366, 380, 389, 418, 421, 422, 423, 424, 425, 426, 427, 431, 434, 436, 438, 440, 441], "i": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 35, 37, 39, 42, 43, 50, 57, 60, 61, 64, 67, 69, 70, 72, 74, 75, 79, 93, 95, 99, 100, 107, 108, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 189, 190, 205, 211, 216, 219, 231, 233, 238, 243, 265, 266, 269, 270, 289, 301, 308, 310, 311, 313, 314, 315, 325, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 389, 401, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 434, 435, 436, 438, 440, 441], "rang": [1, 2, 3, 4, 8, 57, 62, 63, 64, 66, 73, 74, 93, 95, 102, 113, 119, 122, 125, 126, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 216, 229, 240, 243, 244, 265, 269, 286, 342, 350, 351, 417, 418, 421, 423, 424, 425, 428, 429, 431, 434, 435, 436, 438, 440], "optim_step": [1, 247, 273, 425, 431], "rest": [1, 14, 15, 20, 37, 248, 416, 423, 424, 434, 436, 440], "multithread": [1, 2, 3, 57, 64, 73, 74, 89, 143, 144, 429, 438], "mind": [1, 3, 100, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 434, 435], "gil": 1, "relat": [1, 2, 3, 4, 10, 57, 148, 198, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 422, 431, 436], "restrict": [1, 2, 3, 417, 422, 437, 438, 441], "hand": [1, 2, 3, 7, 24, 34, 434, 435, 436], "let": [1, 2, 3, 6, 7, 11, 26, 30, 37, 42, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 75, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 184, 243, 276, 277, 307, 393, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "child": [1, 19, 30, 37, 42, 45, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 422], "fill": [1, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129, 180, 226, 239, 270, 424, 436, 437], "truli": [1, 239, 440], "decoupl": [1, 13, 14, 15, 17, 20, 21, 22, 23, 421, 428, 440], "been": [1, 2, 3, 5, 7, 8, 12, 21, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 102, 106, 119, 122, 125, 129, 133, 136, 140, 141, 148, 149, 152, 157, 158, 159, 203, 224, 225, 232, 233, 264, 266, 268, 270, 278, 310, 325, 343, 345, 347, 421, 422, 423, 424, 433, 434, 435, 436, 438, 440, 441], "shut": [1, 13, 14, 15, 17, 20, 21, 22, 23, 152, 158], "down": [1, 4, 13, 14, 15, 17, 20, 21, 22, 23, 152, 158, 417, 424, 426], "async_shutdown": [1, 13, 14, 15, 17, 20, 21, 22, 23, 24, 62], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 20, 21, 22, 23, 24, 56, 58, 65, 73, 77, 79, 94, 99, 100, 107, 108, 113, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 207, 231, 240, 241, 245, 246, 247, 258, 261, 264, 266, 268, 270, 273, 285, 286, 294, 295, 311, 315, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 416, 417, 421, 422, 423, 425, 427, 434, 435, 436, 438, 441], "drastic": [1, 135, 148, 438], "load": [1, 2, 6, 7, 14, 15, 17, 20, 30, 37, 39, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 78, 79, 91, 93, 94, 95, 96, 102, 109, 110, 111, 115, 116, 119, 122, 124, 125, 129, 136, 148, 149, 152, 157, 158, 159, 160, 174, 240, 241, 243, 398, 412, 418, 421, 423, 425, 438], "factor": [1, 8, 11, 27, 37, 50, 216, 243, 245, 246, 263, 267, 280, 287, 295, 296, 326, 332, 335, 336, 338, 349, 366, 421, 422, 425, 427, 431, 434, 435, 438, 441], "signific": [1, 3, 5, 8, 423, 440, 441], "understand": [1, 2, 8, 13, 21, 22, 23, 37, 421, 422, 425, 426, 427, 434, 435], "affect": [1, 3, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 189, 233, 241, 243, 360, 361, 362, 363, 434], "algorithm": [1, 2, 3, 8, 9, 13, 21, 22, 23, 142, 177, 223, 325, 345, 346, 348, 414, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 434, 435, 437, 438, 440], "legitim": [1, 417, 441], "unless": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 90, 106, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 231, 233, 241, 243, 248, 325, 326, 328, 341, 343, 345, 346, 347, 348, 350, 351, 423], "benchmark": [1, 2, 3, 9, 120, 121, 129, 134, 135], "tool": [1, 2, 3, 5, 416, 417, 424, 426, 434, 436, 438, 441], "backend": [1, 3, 7, 14, 15, 17, 20, 21, 22, 24, 25, 79, 119, 122, 125, 128, 129, 136, 148, 149, 152, 157, 158, 159, 168, 174, 244, 418, 421, 423, 424, 425, 426, 429, 430, 436], "gloo": [1, 21, 22, 25], "nccl": [1, 21, 22], "mpi": [1, 21, 22], "distributeddatacollector": [1, 25, 414], "rpc": [1, 23, 25, 63], "rpcdatacollector": [1, 25, 414], "launcher": [1, 21, 22, 23, 25], "rai": [1, 16, 17, 24, 57, 62, 63, 64, 73, 74, 102], "submitit": [1, 21, 22, 23, 25], "mode": [1, 3, 6, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 143, 148, 149, 152, 157, 158, 159, 191, 194, 225, 233, 240, 241, 243, 248, 258, 266, 267, 270, 275, 283, 294, 295, 296, 301, 311, 315, 343, 378, 388, 393, 416, 417, 421, 422, 434, 435, 440, 441], "find": [1, 4, 6, 7, 21, 22, 23, 57, 59, 75, 107, 108, 245, 268, 287, 392, 396, 421, 422, 425, 427, 428, 434, 435], "folder": [1, 2, 56, 58, 65, 79, 162, 184, 422], "machin": [1, 2, 7, 21, 22, 23, 50, 133, 434, 435, 440], "wonder": 1, "why": [1, 2, 3, 175, 417, 434, 436, 441], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 28, 30, 33, 37, 42, 50, 60, 61, 62, 67, 72, 76, 79, 119, 122, 125, 129, 135, 136, 148, 149, 152, 157, 158, 159, 184, 198, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 314, 318, 321, 325, 327, 328, 330, 333, 334, 335, 341, 342, 345, 346, 347, 348, 358, 360, 364, 368, 412, 417, 425, 426, 427, 431, 436, 438, 441], "lower": [1, 2, 3, 24, 30, 31, 187, 240, 241, 290, 291, 318, 423, 434, 436], "io": [1, 11, 134, 135, 143, 146, 147, 160, 161, 268, 269, 425], "footprint": [1, 2, 438], "commun": [1, 2, 3, 136, 148, 152, 157, 415, 423, 441], "yet": [1, 120, 121, 134, 437], "plai": [1, 3, 150, 151, 159, 184, 422, 423, 428, 438, 441], "role": [1, 3, 141, 422, 428, 441], "opposit": [1, 434], "direct": [1, 2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 264, 268, 343, 422, 428], "faster": [1, 2, 4, 26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 143, 274, 360, 361, 362, 363, 424, 425, 434, 435], "share": [1, 3, 6, 8, 14, 15, 17, 20, 26, 56, 58, 64, 65, 73, 74, 77, 79, 91, 93, 94, 95, 96, 100, 102, 103, 107, 109, 111, 115, 126, 148, 157, 223, 231, 240, 241, 266, 270, 276, 277, 303, 304, 305, 325, 326, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 412, 414, 416, 417, 423, 425, 431, 433, 434, 435, 440, 441], "among": [1, 3, 52, 150, 151, 231, 334, 348, 417, 434, 435], "prohibit": [1, 3, 17, 113], "slow": [1, 3, 4, 11, 56, 58, 65, 79, 94, 107, 108], "compar": [1, 3, 113, 326, 328, 341, 346, 348, 350, 351, 393, 417, 421, 423, 425, 427, 428, 434, 435, 438, 441], "gpu": [1, 7, 8, 30, 37, 42, 50, 60, 61, 67, 72, 93, 95, 115, 119, 122, 125, 129, 130, 133, 136, 148, 149, 152, 157, 158, 159, 243, 421, 423, 424, 434, 435, 441], "driver": [1, 7], "keyword": [1, 2, 3, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 91, 93, 94, 95, 99, 100, 102, 105, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 162, 163, 169, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 192, 195, 196, 197, 199, 201, 202, 203, 205, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 263, 266, 270, 274, 275, 276, 277, 287, 302, 306, 307, 310, 311, 312, 314, 315, 318, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 353, 358, 360, 361, 362, 363, 364, 368, 378, 380, 385, 387, 398, 409, 421, 422, 423, 425, 427, 430, 434, 435, 438, 440, 441], "build": [1, 2, 3, 7, 26, 30, 34, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 102, 119, 120, 121, 122, 125, 129, 130, 131, 134, 135, 136, 140, 141, 143, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 162, 163, 216, 240, 241, 243, 247, 273, 309, 311, 315, 398, 405, 406, 407, 416, 417, 418, 423, 424, 425, 427, 428, 429, 430, 434, 435, 436, 437, 440, 441], "mani": [1, 2, 3, 4, 64, 120, 121, 123, 124, 125, 128, 130, 131, 134, 135, 143, 144, 154, 226, 325, 327, 334, 342, 345, 416, 421, 422, 423, 425, 426, 427, 429, 431, 434, 435, 436, 438, 440, 441], "eg": [1, 2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 133, 136, 148, 149, 152, 154, 157, 158, 159, 193, 224, 233, 244, 276, 306, 380], "gymnasium": [1, 2, 3, 5, 14, 15, 17, 20, 72, 119, 122, 125, 128, 129, 130, 136, 137, 138, 148, 149, 152, 157, 158, 159, 168, 174, 196, 220, 224, 239, 244, 422, 423, 425, 436, 440], "warn": [1, 3, 61, 67, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 245, 263, 287, 388, 422], "quickli": [1, 3, 422, 434, 435, 441], "becom": [1, 2, 3, 4, 24, 264, 268, 434, 435, 441], "quit": [1, 3, 11, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 421, 422, 423, 425, 427, 434, 435, 441], "annoi": [1, 3], "filter": [1, 2, 3, 4, 78, 100, 107, 108, 325, 326, 328, 329, 333, 334, 341, 345, 346, 348, 426], "out": [1, 2, 3, 4, 5, 9, 16, 18, 19, 24, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 91, 100, 107, 108, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 164, 223, 226, 243, 245, 264, 265, 268, 274, 275, 278, 279, 280, 302, 306, 307, 308, 311, 312, 313, 314, 315, 343, 356, 357, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 434, 435, 436, 438, 440, 441], "still": [1, 2, 3, 9, 37, 60, 72, 79, 80, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 231, 287, 342, 343, 417, 421, 422, 424, 433, 436, 438, 441], "wish": [1, 3, 11, 14, 15, 20, 174, 428, 438], "displai": [1, 3, 7, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 398, 418, 421, 422, 435, 436], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 175, 176, 177, 178, 180, 181, 184, 185, 188, 189, 191, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 287, 288, 289, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 354, 358, 360, 361, 362, 363, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 387, 388, 391, 392, 393, 395, 396, 398, 412, 416, 417, 418, 421, 422, 423, 425, 430, 431, 433, 434, 435, 436, 437, 440, 441], "central": [2, 19, 276, 277, 278, 421, 422, 426, 434, 435, 438], "part": [2, 3, 4, 8, 30, 37, 42, 50, 60, 61, 66, 67, 72, 79, 119, 120, 122, 125, 129, 134, 136, 146, 148, 149, 152, 157, 158, 159, 175, 183, 207, 216, 219, 243, 319, 389, 412, 417, 421, 423, 424, 425, 431, 434, 436, 441], "wide": [2, 3, 5, 440], "give": [2, 3, 7, 73, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 184, 415, 417, 421, 422, 425, 434, 435, 436, 437, 440], "abil": [2, 343, 436, 438], "panel": [2, 423], "usag": [2, 3, 5, 7, 14, 15, 17, 20, 21, 22, 23, 24, 37, 60, 72, 91, 113, 181, 184, 195, 248, 266, 270, 328, 333, 341, 348, 352, 416, 421, 423, 424, 427, 428, 430, 434, 435, 438], "includ": [2, 3, 4, 7, 9, 24, 30, 37, 42, 50, 60, 61, 67, 72, 77, 79, 90, 91, 93, 94, 95, 96, 98, 109, 111, 115, 119, 122, 125, 129, 136, 142, 146, 147, 148, 149, 152, 157, 158, 159, 198, 201, 225, 231, 233, 240, 241, 243, 266, 270, 325, 328, 343, 348, 401, 416, 418, 421, 422, 423, 424, 425, 434, 435, 436, 438, 441], "almost": [2, 241, 274, 275, 424], "physic": [2, 6, 7, 91, 148, 149, 154, 418, 421, 434, 435, 436], "theori": 2, "crude": 2, "made": [2, 3, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 226, 243, 278, 287, 330, 343, 358, 421, 422, 424, 434, 435, 437, 438, 440], "liststorag": [2, 45, 57, 62, 63, 64, 72, 73, 74, 94, 102, 438], "veri": [2, 3, 134, 135, 422, 426, 429, 434, 436, 438, 440, 441], "ineffici": [2, 4], "tensor": [2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 107, 108, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 176, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 193, 194, 195, 196, 198, 201, 202, 204, 207, 209, 211, 212, 213, 214, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 323, 325, 326, 328, 329, 330, 332, 333, 334, 337, 338, 341, 343, 345, 346, 347, 348, 350, 351, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 434, 435, 436, 440, 441], "contigu": [2, 3, 8, 31, 34, 42, 80, 94, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 201, 204, 226, 234, 436, 438, 440], "tensorstorag": [2, 64, 72, 93, 99, 100, 113, 116, 429, 438], "lazymemmapstorag": [2, 39, 57, 62, 63, 64, 70, 73, 74, 100, 102, 107, 108, 183, 184, 421, 422, 424, 429, 434, 437, 438], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 135, 136, 139, 142, 145, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 410, 411, 412, 414, 416, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 434, 435, 438, 441], "citizen": 2, "pytre": [2, 57, 62, 63, 64, 73, 74, 96, 102, 116], "tupl": [2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 96, 100, 102, 107, 111, 113, 119, 122, 123, 124, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 184, 201, 203, 207, 243, 249, 253, 259, 260, 266, 269, 270, 271, 278, 285, 288, 289, 307, 308, 312, 313, 318, 325, 326, 327, 328, 329, 333, 334, 336, 341, 342, 343, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 392, 393, 396, 405, 438, 440], "dictionari": [2, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 100, 105, 107, 108, 119, 122, 125, 128, 129, 130, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 201, 226, 231, 233, 241, 243, 311, 315, 328, 348, 350, 393, 410, 411, 412, 418, 422, 423, 426, 428, 434, 436, 441], "nest": [2, 3, 26, 30, 34, 35, 37, 39, 41, 42, 43, 50, 51, 56, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 79, 85, 93, 94, 95, 98, 102, 115, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 176, 184, 224, 227, 231, 243, 310, 360, 361, 362, 363, 364, 378, 388, 418, 422, 423, 425, 435, 436, 438, 440], "construct": [2, 3, 5, 26, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 77, 102, 119, 122, 125, 126, 128, 129, 136, 148, 149, 150, 152, 157, 158, 159, 164, 191, 194, 241, 243, 266, 270, 291, 315, 398, 416, 422, 423, 424, 427, 434, 436, 438, 441], "ram": [2, 128, 130, 430, 438], "prealloc": [2, 3, 148, 157, 436], "ve": [2, 66, 421, 424, 431], "extend": [2, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 39, 45, 57, 60, 62, 63, 64, 70, 73, 74, 79, 92, 93, 96, 99, 100, 102, 103, 107, 108, 111, 113, 114, 117, 118, 177, 183, 216, 232, 243, 246, 343, 395, 414, 417, 418, 421, 422, 423, 424, 425, 429, 431, 434, 435, 437, 438, 440], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 24, 113, 119, 122, 123, 124, 125, 129, 133, 136, 148, 149, 150, 151, 152, 157, 158, 159, 184, 231, 278, 387, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 431, 434, 435, 436, 438, 440, 441], "add": [2, 3, 4, 6, 24, 30, 34, 35, 37, 42, 43, 45, 50, 57, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 92, 94, 99, 102, 103, 113, 114, 117, 118, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 201, 203, 230, 233, 243, 266, 270, 279, 309, 325, 394, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 440], "string": [2, 21, 22, 23, 30, 37, 42, 45, 50, 52, 59, 60, 61, 67, 72, 78, 79, 89, 94, 119, 122, 125, 129, 136, 140, 146, 148, 149, 152, 157, 158, 159, 174, 201, 211, 224, 230, 238, 243, 266, 270, 307, 310, 311, 312, 324, 379, 397, 417, 421, 423, 424, 438], "element": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 45, 46, 48, 54, 56, 57, 58, 62, 63, 64, 65, 72, 73, 74, 77, 79, 93, 94, 95, 96, 99, 100, 102, 107, 108, 113, 115, 119, 122, 125, 129, 136, 145, 148, 149, 152, 157, 158, 159, 177, 184, 189, 212, 221, 225, 226, 241, 245, 250, 251, 264, 265, 268, 301, 302, 307, 310, 314, 315, 319, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 389, 417, 421, 423, 427, 429, 438, 441], "30": [2, 3, 64, 72, 107, 108, 180, 206, 290, 291, 378, 382, 385, 387, 429, 435, 436, 438], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 111, 113, 115, 119, 122, 125, 126, 128, 129, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 198, 200, 201, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 407, 408, 410, 411, 412, 416, 418, 421, 422, 424, 425, 436, 438, 440], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 154, 157, 158, 159, 162, 163, 164, 169, 177, 179, 180, 181, 183, 184, 185, 186, 188, 190, 193, 198, 199, 201, 205, 206, 207, 209, 211, 212, 215, 222, 223, 224, 227, 230, 231, 233, 235, 238, 243, 245, 246, 247, 250, 251, 252, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 306, 307, 308, 310, 311, 313, 315, 325, 326, 327, 334, 336, 337, 342, 343, 344, 345, 346, 350, 351, 360, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 385, 387, 389, 390, 391, 393, 395, 398, 400, 410, 411, 412, 425, 436, 438], "entri": [2, 3, 14, 15, 20, 26, 30, 34, 35, 37, 39, 42, 43, 45, 50, 56, 58, 59, 60, 61, 65, 67, 69, 70, 72, 78, 79, 86, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 148, 149, 152, 154, 157, 158, 159, 162, 163, 175, 176, 180, 184, 186, 187, 189, 190, 191, 192, 194, 195, 198, 202, 204, 205, 207, 209, 211, 214, 216, 219, 221, 223, 224, 225, 226, 228, 231, 233, 235, 238, 240, 243, 266, 274, 275, 306, 307, 310, 312, 313, 326, 328, 348, 360, 361, 362, 363, 416, 421, 423, 424, 426, 427, 428, 430, 434, 435, 436, 437, 438, 440, 441], "onto": [2, 8, 54, 56, 58, 65, 79, 169, 192, 245, 287, 302, 307, 308, 311, 312, 313, 314, 315, 424, 436], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 99, 100, 102, 103, 105, 106, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 154, 157, 158, 159, 162, 163, 176, 177, 184, 185, 224, 225, 226, 227, 233, 241, 243, 244, 250, 251, 271, 274, 275, 277, 287, 310, 312, 313, 321, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 402, 412, 415, 418, 423, 424, 425, 429, 430, 431, 436, 438, 441], "without": [2, 3, 7, 9, 14, 15, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 178, 180, 191, 194, 229, 232, 243, 264, 265, 268, 269, 304, 305, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 359, 360, 361, 362, 363, 364, 408, 415, 416, 421, 422, 423, 425, 426, 427, 428, 429, 434, 435, 436, 438, 441], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 45, 50, 56, 57, 58, 60, 61, 65, 66, 67, 72, 73, 79, 99, 100, 119, 122, 125, 129, 136, 142, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 176, 178, 180, 181, 191, 193, 194, 201, 213, 224, 225, 231, 233, 237, 240, 241, 243, 245, 247, 248, 263, 264, 273, 278, 287, 311, 312, 313, 314, 315, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 358, 360, 361, 362, 363, 364, 393, 398, 400, 403, 404, 407, 408, 414, 418, 422, 423, 424, 425, 428, 431, 434, 435, 436, 438, 441], "length": [2, 23, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 60, 66, 68, 69, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 100, 107, 108, 111, 119, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 177, 184, 204, 212, 240, 247, 250, 251, 253, 255, 257, 264, 268, 271, 273, 276, 277, 302, 314, 319, 389, 395, 421, 423, 424, 429, 431, 436, 438, 441], "cursor": [2, 57, 62, 63, 64, 73, 74, 102], "afterward": [2, 30, 37, 42, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 434, 441], "tell": [2, 3, 4, 7, 119, 150, 151, 231, 421, 424, 429, 434, 435], "our": [2, 3, 7, 8, 11, 21, 45, 64, 184, 380, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440], "far": [2, 57, 62, 63, 64, 66, 73, 74, 102, 267, 295, 296, 431, 436, 441], "empti": [2, 3, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 96, 102, 119, 122, 125, 129, 135, 136, 145, 148, 149, 152, 157, 158, 159, 169, 191, 194, 211, 213, 227, 233, 236, 238, 241, 243, 314, 384, 421, 436], "64": [2, 3, 56, 58, 65, 79, 102, 184, 215, 253, 254, 262, 266, 270, 277, 278, 288, 358, 421, 422, 423, 424, 425, 427, 431, 433, 436, 438, 440, 441], "dtype": [2, 3, 14, 15, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 172, 175, 176, 177, 178, 181, 182, 188, 191, 192, 193, 194, 195, 196, 201, 203, 204, 207, 209, 211, 213, 214, 216, 220, 223, 224, 226, 228, 229, 232, 233, 234, 236, 238, 243, 247, 249, 259, 260, 264, 265, 266, 268, 269, 270, 273, 279, 280, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 366, 416, 425, 433, 436, 438, 440, 441], "unit8": 2, "img": 2, "randint": [2, 78, 102, 229, 438], "255": [2, 102, 229, 438], "uint8": [2, 3, 34, 56, 58, 65, 79, 123, 124, 140, 141, 195, 201, 209, 229, 422, 438], "next": [2, 3, 4, 8, 14, 15, 17, 26, 34, 35, 37, 39, 41, 43, 45, 50, 57, 62, 63, 64, 66, 69, 70, 72, 73, 74, 79, 89, 90, 91, 98, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 140, 141, 142, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 177, 180, 181, 183, 184, 189, 191, 194, 195, 196, 201, 202, 203, 204, 205, 209, 213, 214, 216, 219, 220, 224, 226, 228, 231, 234, 239, 240, 241, 243, 247, 265, 266, 269, 270, 273, 291, 310, 320, 322, 325, 326, 328, 329, 330, 332, 333, 334, 335, 341, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 380, 392, 393, 396, 422, 424, 425, 427, 431, 436, 437, 440, 441], "ask": [2, 3, 8, 100, 107, 108, 380, 423, 424, 426, 427, 434, 435, 437, 441], "automat": [2, 3, 5, 12, 19, 31, 45, 77, 80, 93, 95, 102, 108, 115, 119, 122, 125, 128, 129, 130, 136, 148, 149, 150, 151, 152, 157, 158, 159, 180, 191, 194, 207, 226, 239, 241, 250, 266, 270, 302, 310, 311, 315, 378, 388, 416, 421, 423, 426, 427, 434, 435, 436, 438, 440], "look": [2, 3, 5, 7, 8, 30, 37, 42, 50, 60, 61, 67, 72, 100, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 201, 211, 212, 236, 243, 248, 311, 315, 316, 317, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441], "lead": [2, 3, 4, 8, 10, 26, 34, 35, 43, 50, 57, 64, 69, 79, 106, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 157, 158, 159, 226, 244, 267, 288, 295, 296, 301, 421, 424, 425, 434, 435, 436, 438, 440], "match": [2, 3, 6, 8, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 102, 111, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 136, 148, 149, 152, 157, 158, 159, 177, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 200, 202, 203, 204, 205, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 250, 251, 258, 266, 270, 271, 276, 277, 294, 302, 306, 307, 311, 312, 314, 315, 318, 319, 326, 328, 334, 342, 344, 346, 348, 395, 400, 416, 417, 421, 423, 425, 433, 435, 436, 438, 441], "don": [2, 3, 4, 6, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 184, 232, 422, 423, 425, 429, 438, 440, 441], "throw": [2, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 441], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 17, 26, 34, 37, 39, 45, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 78, 79, 89, 93, 94, 95, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 172, 175, 176, 177, 181, 183, 184, 188, 191, 194, 195, 196, 201, 209, 213, 214, 216, 220, 223, 224, 226, 232, 233, 234, 243, 247, 249, 257, 258, 259, 260, 263, 266, 270, 273, 287, 288, 289, 297, 298, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 380, 389, 395, 416, 417, 421, 422, 423, 424, 429, 434, 435, 436, 438, 440, 441], "max": [2, 26, 54, 58, 73, 78, 89, 99, 100, 113, 135, 193, 227, 287, 326, 327, 328, 334, 344, 346, 348, 421, 423, 424, 425, 431], "label": [2, 58, 59, 66, 78, 79, 421, 434, 438], "100": [2, 14, 15, 17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 93, 95, 102, 107, 108, 113, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 187, 195, 207, 216, 221, 224, 243, 274, 275, 276, 308, 310, 380, 390, 408, 422, 423, 425, 426, 428, 431, 433, 434, 435, 436, 438, 440, 441], "rb_pytre": 2, "randn": [2, 3, 57, 60, 62, 63, 64, 73, 74, 93, 94, 95, 100, 102, 107, 108, 115, 119, 169, 183, 207, 249, 252, 253, 257, 259, 260, 264, 265, 268, 269, 274, 275, 276, 283, 285, 289, 302, 303, 304, 305, 306, 307, 311, 312, 314, 317, 318, 319, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 397, 416, 425, 438, 440, 441], "c": [2, 3, 6, 7, 14, 15, 17, 20, 34, 37, 56, 58, 60, 64, 65, 72, 73, 74, 79, 94, 207, 229, 234, 268, 269, 422, 438], "zero": [2, 3, 4, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 102, 107, 108, 113, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 175, 181, 183, 185, 191, 193, 194, 207, 213, 216, 223, 241, 243, 246, 247, 254, 255, 256, 262, 263, 264, 265, 266, 268, 269, 270, 274, 275, 277, 278, 287, 288, 297, 313, 315, 321, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 366, 424, 425, 438, 440, 441], "assert": [2, 3, 6, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 113, 119, 122, 125, 129, 132, 136, 148, 149, 152, 157, 158, 159, 164, 169, 174, 177, 181, 184, 187, 191, 194, 203, 214, 221, 233, 240, 249, 277, 298, 360, 361, 362, 363, 388, 389, 397, 429, 433, 438, 441], "len": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 95, 102, 115, 209, 250, 251, 271, 277, 421, 425, 429, 431, 434, 436, 437, 438, 440], "ambigu": [2, 57, 62, 63, 64, 73, 74, 102], "signatur": [2, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 102, 111, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 172, 181, 188, 201, 211, 226, 232, 233, 236, 238, 243, 314, 417, 421, 425, 426, 436], "deal": [2, 3, 57, 62, 63, 64, 73, 74, 102, 343, 417, 421, 423, 435, 438], "interpret": [2, 3, 57, 62, 63, 64, 73, 74, 102, 422], "put": [2, 57, 62, 63, 64, 73, 74, 102, 129, 140, 141, 159, 162, 163, 240, 387, 412, 416, 422, 423, 424, 426, 434, 436], "solv": [2, 4, 7, 9, 10, 57, 62, 63, 64, 73, 74, 102, 415, 421, 422, 423, 429, 431, 434, 435, 436, 438], "clear": [2, 3, 11, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 133, 136, 148, 149, 152, 157, 158, 159, 243, 390, 426, 429], "cut": [2, 57, 62, 63, 64, 73, 74, 102], "distinct": [2, 3, 57, 62, 63, 64, 73, 74, 102, 181, 184, 428, 433], "view": [2, 3, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 178, 243, 260, 264, 268, 271, 426, 436, 438, 440, 441], "through": [2, 3, 4, 5, 8, 14, 15, 17, 19, 20, 21, 23, 24, 34, 35, 43, 57, 61, 62, 63, 64, 67, 69, 73, 74, 79, 102, 119, 120, 121, 122, 125, 128, 129, 130, 133, 134, 135, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 180, 189, 191, 194, 212, 244, 249, 271, 288, 310, 311, 315, 316, 317, 321, 324, 343, 360, 361, 362, 363, 388, 416, 417, 421, 422, 423, 426, 428, 433, 434, 435, 436, 437, 438, 441], "collate_fn": [2, 57, 62, 63, 64, 72, 73, 74, 102, 438, 440], "__init__": [2, 3, 7, 125, 142, 160, 174, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 247, 258, 260, 264, 268, 273, 319, 326, 328, 329, 334, 341, 346, 348, 350, 351, 418, 436, 441], "major": 2, "worri": [2, 75, 441], "though": [2, 4, 11, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 271, 423, 434, 435], "too": [2, 7, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 60, 66, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 206, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 267, 295, 296, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 422, 427, 430, 436, 438, 441], "latter": [2, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 345, 410, 411], "inv": [2, 3, 177, 187, 193, 196, 201, 209, 216, 221, 223, 228, 232, 235, 243, 436], "obvious": [2, 425], "ignor": [2, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 67, 68, 69, 72, 75, 77, 80, 81, 82, 83, 84, 91, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 193, 196, 220, 229, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 360, 438], "thread": [2, 3, 14, 15, 17, 20, 56, 58, 65, 79, 119, 120, 121, 134, 135, 148, 157, 158, 241], "prefetch": [2, 57, 64, 73, 74, 89, 421, 422, 424, 438], "advis": [2, 11, 430, 441], "techniqu": [2, 8, 148, 157, 422, 425, 429, 438], "real": [2, 5, 315, 417, 424, 425, 436, 437], "life": [2, 195, 437], "adopt": [2, 3, 5, 421, 441], "throughput": [2, 9, 135, 421], "constant": [2, 11, 36, 184, 207, 225, 418, 421, 423, 424, 441], "throughout": [2, 3, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 423, 434, 441], "further": [2, 3, 5, 27, 421, 423, 425, 426], "refin": [2, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358], "coupl": [2, 424, 427, 428, 436, 438], "first_elt": 2, "128": [2, 108, 120, 121, 134, 135, 254, 257, 422, 424, 425, 431, 434, 437, 438], "wa": [2, 3, 5, 7, 34, 35, 37, 43, 45, 57, 60, 62, 63, 64, 69, 72, 73, 74, 79, 100, 102, 106, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 176, 184, 201, 233, 268, 325, 327, 340, 342, 345, 347, 349, 366, 417, 422, 423, 426, 427, 433, 434, 438, 440], "print": [2, 3, 6, 7, 14, 15, 17, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 168, 169, 174, 175, 176, 177, 180, 181, 184, 185, 189, 191, 192, 193, 194, 202, 207, 213, 214, 216, 219, 224, 226, 227, 228, 229, 240, 241, 243, 250, 251, 253, 254, 255, 256, 257, 260, 262, 263, 266, 270, 271, 274, 275, 276, 277, 283, 286, 287, 289, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 317, 319, 322, 343, 378, 408, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 185], "larger": [2, 4, 72, 266, 270, 333, 341, 440], "volum": 2, "due": [2, 3, 5, 13, 21, 22, 23, 26, 428, 437, 438, 441], "memorymappedtensor": [2, 39, 56, 58, 70, 78, 93, 382, 429], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 190, 191, 192, 194, 219, 222, 225, 230, 234, 235, 243, 244, 247, 268, 314, 315, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 387, 416, 421, 423, 424, 425, 429, 434], "file": [2, 6, 7, 8, 56, 58, 65, 79, 91, 162, 379, 380, 382, 398, 418, 420, 422, 434, 438, 439], "locat": [2, 7, 56, 58, 65, 78, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 172, 190, 195, 207, 218, 241, 267, 295, 296, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 421, 422, 423, 430, 434, 435, 438], "improv": [2, 4, 11, 199, 325, 417, 425, 434, 435, 438], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 17, 20, 21, 22, 23, 24, 148, 157, 201, 423, 434, 438], "found": [2, 3, 6, 7, 10, 14, 15, 17, 20, 24, 26, 30, 34, 35, 37, 42, 43, 45, 50, 56, 58, 60, 61, 65, 67, 69, 72, 78, 79, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 133, 136, 148, 149, 152, 157, 158, 159, 176, 178, 184, 204, 216, 219, 227, 240, 241, 243, 263, 276, 277, 311, 315, 342, 343, 345, 417, 421, 422, 424, 425, 426, 428, 430, 436, 438, 440], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 68, 69, 77, 80, 81, 82, 83, 84, 93, 100, 146, 147, 193, 231, 246, 268, 269, 333, 424, 425, 429, 438], "sharabl": [2, 148, 157], "collabor": 2, "rather": [2, 4, 111, 146, 147, 214, 241, 416, 417, 421, 422, 423, 426, 428, 434, 435, 438], "incur": [2, 120, 121, 134, 135], "transmiss": 2, "overhead": [2, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 175, 315], "content": [2, 3, 8, 17, 34, 35, 43, 56, 57, 58, 64, 65, 69, 73, 74, 79, 106, 107, 108, 119, 122, 125, 128, 129, 130, 136, 143, 148, 149, 152, 157, 158, 159, 213, 250, 251, 271, 276, 277, 311, 343, 423, 436, 440], "map": [2, 3, 8, 16, 18, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 98, 99, 100, 119, 122, 125, 129, 136, 139, 140, 141, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 165, 169, 177, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 243, 260, 302, 303, 304, 305, 307, 311, 312, 314, 315, 317, 318, 319, 320, 328, 348, 358, 393, 414, 416, 417, 421, 422, 423, 424, 427, 428, 437], "writer": [2, 57, 62, 63, 64, 73, 74, 92, 95, 100, 102, 103, 107, 113, 114, 115, 118, 423, 438], "tensordictroundrobinwrit": [2, 74, 102], "goe": [2, 4, 79, 150, 151, 421, 423, 434, 435, 441], "prioritizedsampl": [2, 57, 62, 63, 64, 73, 74, 100, 102, 330, 335, 358, 421, 438], "access": [2, 3, 7, 8, 11, 30, 37, 42, 50, 57, 60, 61, 67, 72, 94, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 172, 184, 211, 232, 236, 243, 412, 415, 421, 426, 434, 435, 436, 438, 440], "tensordictreplaybuff": [2, 57, 62, 63, 64, 73, 99, 100, 102, 107, 108, 113, 183, 184, 395, 408, 414, 421, 422, 424, 438], "mp": [2, 21, 22, 23, 126, 240, 241], "def": [2, 3, 25, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 119, 122, 125, 126, 129, 136, 142, 148, 149, 152, 157, 158, 159, 172, 174, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 241, 243, 244, 247, 260, 264, 265, 268, 269, 273, 278, 310, 311, 319, 326, 328, 329, 334, 341, 343, 346, 348, 350, 351, 378, 388, 417, 418, 421, 422, 425, 433, 434, 435, 436, 438, 440, 441], "td": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 34, 37, 39, 45, 56, 57, 58, 60, 62, 63, 64, 65, 70, 72, 73, 74, 79, 93, 102, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 146, 147, 148, 149, 152, 153, 157, 158, 159, 160, 161, 175, 178, 181, 183, 185, 189, 191, 192, 193, 194, 202, 203, 204, 205, 207, 216, 219, 223, 226, 229, 233, 240, 247, 249, 259, 260, 263, 272, 273, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 311, 312, 314, 317, 319, 358, 361, 362, 363, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 389, 397, 416, 417, 421, 422, 424, 435, 436, 437, 440], "__name__": [2, 3, 14, 15, 17, 20, 25, 62, 126, 241, 378, 422, 440], "__main__": [2, 3, 14, 15, 17, 20, 25, 62, 126, 241, 378, 440], "21": [2, 45, 79, 107, 108, 148, 150, 151, 157], "proc": 2, "target": [2, 4, 8, 24, 27, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 225, 243, 286, 314, 315, 325, 326, 327, 328, 329, 330, 332, 334, 335, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 361, 362, 363, 364, 401, 407, 408, 417, 418, 424, 425, 431, 434, 436], "arg": [2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 29, 30, 31, 32, 34, 35, 37, 38, 42, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 102, 107, 108, 109, 111, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 171, 177, 178, 179, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 201, 202, 203, 205, 210, 211, 212, 213, 214, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 245, 247, 249, 250, 251, 258, 259, 263, 266, 270, 271, 272, 273, 287, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 387, 391, 395, 398, 412, 422, 425], "join": [2, 126, 414, 422, 423, 425, 434], "now": [2, 3, 7, 57, 64, 73, 74, 102, 146, 147, 148, 184, 220, 277, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 438, 441], "20": [2, 45, 72, 78, 79, 107, 108, 113, 119, 122, 125, 129, 133, 136, 146, 147, 148, 149, 152, 157, 158, 159, 225, 243, 262, 264, 265, 268, 269, 286, 306, 389, 424, 438, 441], "_data": [2, 436], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 66, 67, 68, 69, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 94, 102, 105, 113, 118, 119, 122, 125, 129, 131, 136, 142, 143, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 164, 175, 181, 183, 184, 195, 201, 203, 207, 212, 225, 231, 233, 239, 241, 243, 245, 253, 255, 261, 263, 276, 277, 286, 287, 288, 290, 291, 297, 298, 308, 310, 313, 315, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 349, 351, 358, 359, 360, 378, 387, 393, 415, 416, 417, 421, 422, 424, 425, 426, 434, 435, 436, 437, 438, 440, 441], "difficult": [2, 4, 148, 430], "pai": [2, 8, 184, 421], "word": [2, 3, 11, 66, 343, 421, 429, 436, 441], "1m": [2, 401, 421, 423, 424], "doe": [2, 3, 18, 21, 30, 37, 42, 50, 56, 57, 58, 60, 61, 65, 67, 72, 73, 78, 79, 90, 91, 98, 99, 100, 107, 109, 111, 118, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 241, 243, 248, 257, 258, 264, 265, 266, 268, 269, 270, 279, 286, 298, 306, 316, 317, 325, 327, 335, 342, 343, 345, 359, 398, 417, 418, 421, 422, 423, 424, 426, 429, 434, 436, 438, 441], "howev": [2, 3, 5, 7, 30, 37, 42, 50, 60, 61, 67, 72, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 201, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 243, 325, 327, 328, 342, 345, 347, 348, 416, 421, 422, 424, 425, 428, 436, 438, 441], "capac": [2, 57, 64, 73, 74, 93, 95, 99, 107, 115, 423, 429], "There": [2, 3, 10, 102, 232, 248, 266, 270, 325, 345, 416, 417, 418, 423, 424, 425, 427, 429, 434, 435, 436, 438, 440, 441], "circumv": 2, "account": [2, 93, 95, 115, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 180, 189, 274, 275, 416, 422, 424, 438, 441], "save": [2, 3, 8, 30, 37, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 79, 90, 91, 93, 94, 95, 96, 98, 102, 109, 110, 111, 115, 116, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 239, 243, 379, 380, 382, 387, 398, 418, 425, 429, 430, 431, 434, 435], "convent": [2, 3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 417, 421, 424, 434, 435, 436], "overridden": [2, 3, 30, 37, 42, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 360, 362, 363, 424, 434], "dim_extend": [2, 57, 64, 73, 74], "obtain": [2, 3, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 183, 211, 225, 238, 247, 249, 286, 288, 395, 421, 423, 426, 427, 428, 434, 435], "counterpart": [2, 3, 184], "desir": [2, 3, 11, 14, 15, 17, 20, 30, 33, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 173, 179, 181, 188, 189, 207, 209, 211, 212, 226, 232, 233, 236, 238, 243, 250, 251, 258, 271, 277, 302, 307, 308, 311, 312, 313, 314, 315, 416, 421, 425, 434, 435, 436, 438], "diversifi": 2, "offer": [2, 3, 7, 119, 120, 121, 122, 125, 129, 134, 135, 136, 140, 141, 148, 149, 152, 157, 158, 159, 231, 378, 416, 421, 422, 425, 426, 428, 429, 434, 436, 438, 441], "accomplish": [2, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 426], "__especially__": 2, "offlin": [2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 326, 332, 333, 341, 350, 387, 418, 426, 437, 438], "docstr": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 426, 427], "detail": [2, 3, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 229, 233, 243, 248, 260, 264, 268, 278, 286, 308, 325, 335, 343, 345, 415, 418, 422, 425, 429, 433, 438], "happi": [2, 425], "concaten": [2, 8, 14, 15, 24, 45, 46, 48, 79, 184, 185, 207, 223, 268, 271, 317, 421, 422, 427, 434, 435, 436, 438, 441], "schedul": [2, 4, 7, 66, 393, 423, 436], "transformedenv": [2, 3, 11, 12, 50, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 177, 178, 181, 184, 187, 188, 189, 191, 194, 195, 196, 202, 203, 204, 206, 207, 209, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 231, 232, 240, 243, 266, 270, 310, 380, 388, 421, 422, 423, 424, 425, 426, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "stepcount": [2, 45, 50, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 189, 231, 232, 233, 243, 249, 421, 422, 423, 424, 425, 426, 431, 434, 435, 440], "gymenv": [2, 3, 5, 11, 14, 15, 17, 20, 24, 25, 39, 45, 50, 62, 70, 72, 113, 119, 122, 125, 126, 129, 131, 136, 148, 149, 152, 157, 158, 159, 177, 180, 181, 184, 187, 188, 189, 195, 201, 202, 203, 207, 209, 214, 215, 216, 219, 221, 225, 226, 227, 228, 231, 232, 233, 234, 240, 241, 243, 249, 266, 270, 310, 378, 380, 408, 414, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 440, 441], "randompolici": [2, 14, 15, 17, 20, 21, 22, 23, 24, 25, 50, 184, 216, 414, 429, 438], "cartpol": [2, 3, 11, 39, 50, 70, 72, 119, 122, 123, 124, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 180, 181, 184, 219, 225, 240, 243, 310, 378, 422, 424, 427, 429, 430, 431, 438, 441], "v1": [2, 3, 11, 14, 15, 17, 20, 24, 25, 39, 50, 62, 70, 72, 113, 119, 122, 125, 126, 128, 129, 130, 134, 135, 136, 143, 148, 149, 152, 157, 158, 159, 180, 181, 184, 187, 189, 196, 202, 203, 207, 214, 216, 219, 220, 221, 224, 225, 226, 227, 228, 231, 232, 234, 240, 241, 243, 249, 266, 270, 310, 354, 369, 370, 371, 372, 374, 375, 376, 377, 378, 416, 422, 424, 426, 427, 428, 429, 430, 431, 436, 438, 440, 441], "action_spec": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 50, 119, 120, 121, 122, 125, 129, 134, 135, 136, 142, 148, 149, 150, 151, 152, 153, 157, 158, 159, 177, 178, 181, 184, 188, 191, 192, 194, 203, 207, 213, 216, 232, 233, 234, 235, 243, 247, 260, 273, 289, 291, 302, 307, 311, 312, 326, 328, 330, 332, 346, 348, 350, 351, 408, 416, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441], "8": [2, 3, 6, 7, 34, 35, 43, 50, 64, 69, 72, 99, 100, 107, 108, 119, 120, 121, 122, 123, 124, 125, 129, 136, 146, 147, 148, 149, 152, 157, 158, 159, 160, 177, 180, 189, 225, 228, 234, 241, 250, 251, 253, 254, 262, 271, 303, 304, 305, 311, 314, 317, 341, 421, 422, 436, 438, 440], "traj_kei": [2, 100, 107, 108, 438], "truncated_kei": [2, 100, 107, 108, 216, 224], "strict_length": [2, 100, 107, 108, 380], "enumer": [2, 14, 15, 17, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 70, 72, 74, 77, 80, 81, 82, 83, 84, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 352, 417, 421, 422, 423, 424, 431, 434, 438, 440], "break": [2, 5, 14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 62, 64, 67, 72, 74, 89, 100, 107, 108, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 184, 216, 240, 241, 243, 266, 270, 295, 380, 422, 425, 429, 431, 438, 440], "step_count": [2, 14, 15, 17, 50, 119, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 189, 224, 243, 423, 424, 425, 426, 431], "32": [2, 25, 34, 57, 62, 63, 64, 73, 74, 102, 108, 129, 135, 155, 156, 162, 163, 184, 201, 250, 251, 252, 253, 254, 256, 257, 262, 271, 276, 277, 281, 282, 285, 288, 297, 358, 378, 422, 424, 425, 427, 428, 436, 437, 438, 440, 441], "33": [2, 30, 34, 37, 42, 50, 60, 61, 67, 72, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 250, 251, 271], "34": [2, 250, 251, 271], "35": [2, 250, 251, 271], "36": 2, "37": [2, 183], "38": [2, 7, 45], "39": [2, 134, 135], "40": [2, 72, 134, 135], "41": [2, 107], "11": [2, 10, 26, 45, 54, 72, 78, 79, 93, 94, 95, 99, 108, 115, 126, 177, 229, 243, 247, 273], "12": [2, 7, 10, 45, 72, 93, 95, 108, 115, 134, 135, 148, 155, 156, 157, 241, 243, 380, 438], "13": [2, 5, 72, 107, 108, 154, 239, 241, 243, 244], "14": [2, 6, 72, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 207, 243, 244], "15": [2, 26, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 287, 306, 336, 438], "16": [2, 3, 14, 15, 20, 30, 37, 42, 50, 60, 61, 67, 72, 100, 108, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 184, 243, 424, 438], "17": [2, 11, 107, 108, 129, 148, 177, 243], "could": [2, 3, 4, 6, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 315, 422, 423, 430, 434, 435, 437, 441], "sai": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 276, 434, 437, 441], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 17, 20, 21, 22, 23, 24, 25, 34, 48, 54, 64, 73, 74, 95, 96, 100, 103, 107, 108, 115, 119, 122, 125, 128, 129, 130, 133, 136, 148, 149, 152, 157, 158, 159, 191, 194, 212, 219, 231, 276, 277, 312, 325, 328, 345, 422, 423, 424, 425, 434, 435, 436], "suggest": [2, 358, 421, 435], "serialenv": [2, 3, 119, 122, 125, 129, 136, 148, 149, 152, 158, 159, 226, 241, 243, 249, 310, 414, 440, 441], "squeez": [2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 180, 181, 184, 222, 225, 250, 251, 292, 293, 421, 425, 436, 438], "6": [2, 3, 7, 14, 15, 17, 20, 26, 45, 50, 64, 67, 72, 79, 100, 108, 123, 124, 129, 148, 155, 156, 177, 180, 189, 207, 209, 225, 231, 241, 249, 250, 251, 253, 254, 255, 258, 262, 265, 271, 276, 277, 278, 281, 294, 310, 311, 319, 422, 425, 440], "5": [2, 3, 14, 15, 17, 20, 26, 33, 34, 35, 43, 45, 46, 47, 48, 49, 50, 54, 57, 62, 64, 67, 69, 72, 73, 74, 102, 107, 108, 113, 119, 122, 125, 126, 129, 134, 135, 136, 140, 141, 143, 148, 149, 152, 155, 156, 157, 158, 159, 162, 163, 177, 180, 181, 183, 189, 204, 216, 223, 224, 225, 231, 241, 243, 246, 247, 248, 249, 250, 251, 253, 254, 259, 260, 261, 262, 264, 267, 268, 271, 273, 276, 277, 281, 286, 289, 295, 296, 306, 307, 310, 312, 318, 342, 345, 347, 350, 351, 378, 416, 420, 421, 422, 425, 427, 431, 434, 435, 436, 438, 439, 440, 441], "7": [2, 3, 6, 10, 37, 45, 50, 54, 57, 64, 72, 73, 100, 108, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 177, 180, 189, 225, 228, 241, 247, 249, 250, 251, 254, 271, 273, 276, 366, 421, 438, 440], "9": [2, 3, 7, 26, 30, 45, 50, 57, 64, 72, 73, 79, 100, 108, 113, 123, 124, 139, 150, 151, 159, 177, 180, 189, 225, 228, 233, 240, 241, 243, 274, 275, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 352, 358, 388, 417, 421, 422, 434, 435], "18": [2, 45, 107, 108, 155, 156, 162, 163, 231, 243, 277], "19": [2, 107, 108, 113, 243, 420, 439], "independ": [2, 14, 15, 17, 20, 21, 22, 23, 24, 148, 157, 198, 205, 226, 235, 248, 277, 301, 325, 345, 417, 418, 421, 422, 435, 438, 440], "congruent": 2, "name": [2, 3, 6, 7, 17, 30, 34, 35, 37, 42, 43, 50, 56, 58, 60, 61, 65, 67, 69, 72, 78, 79, 89, 119, 120, 122, 123, 125, 129, 134, 136, 139, 140, 141, 143, 146, 148, 149, 150, 151, 152, 154, 157, 158, 159, 162, 163, 165, 172, 176, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 193, 195, 196, 197, 199, 201, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 243, 244, 266, 270, 307, 312, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 360, 362, 363, 364, 378, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 418, 421, 422, 423, 424, 425, 428, 429, 430, 434, 435, 436, 437, 441], "randomcroptensordict": [2, 421], "unlik": [2, 28, 64, 73, 74, 106, 129, 140, 141, 162, 163, 246, 248, 310, 335, 345, 380, 416, 422, 425, 427, 429, 440], "stop": [2, 3, 14, 15, 17, 20, 24, 66, 100, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 423, 429, 434, 435, 440, 441], "signal": [2, 3, 14, 15, 17, 20, 26, 45, 100, 107, 108, 113, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 176, 184, 189, 195, 204, 224, 227, 417, 421, 423, 434, 435, 438, 441], "disk": [2, 3, 45, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 93, 102, 398, 418, 421, 422, 424, 425, 429, 430, 434, 438], "dump": [2, 3, 11, 39, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 79, 91, 93, 94, 95, 96, 102, 109, 111, 115, 378, 379, 380, 430, 431, 434], "json": 2, "metadata": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 328, 350, 423, 426, 428, 429, 434, 435, 441], "anticip": [2, 191, 194], "compli": [2, 248, 416], "back": [2, 27, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 230, 239, 278, 302, 307, 308, 311, 312, 313, 314, 315, 423, 425, 434, 435, 436, 438], "exact": [2, 3, 26, 148, 268], "statu": [2, 3, 125], "prioriti": [2, 4, 57, 73, 74, 93, 94, 95, 96, 99, 100, 109, 111, 115, 328, 329, 330, 332, 333, 334, 335, 341, 346, 348, 350, 351, 358, 418, 421, 422, 438], "heap": 2, "under": [2, 3, 4, 24, 30, 37, 42, 45, 50, 60, 61, 66, 67, 72, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 154, 157, 158, 159, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 204, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 248, 302, 307, 308, 311, 312, 313, 314, 315, 343, 360, 361, 362, 363, 364, 380, 417, 421, 422, 427, 434, 436, 441], "hood": [2, 3, 24, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 248, 436], "naiv": [2, 236, 426], "just": [2, 3, 4, 79, 111, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 176, 180, 187, 226, 244, 277, 389, 418, 421, 422, 423, 424, 425, 426, 427, 429, 434, 435, 436, 438, 440, 441], "public": [2, 63, 110, 211, 238], "serializ": 2, "consum": [2, 106, 108, 310, 422, 423, 429, 435, 438], "much": [2, 3, 8, 14, 15, 20, 57, 73, 99, 100, 148, 157, 342, 345, 423, 425, 426, 430, 434, 435, 436, 438, 441], "duplic": [2, 30, 37, 42, 50, 60, 61, 67, 72, 106, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 326, 328, 330, 335, 341, 343, 346, 348, 350, 351, 358], "observ": [2, 3, 8, 14, 15, 17, 20, 24, 27, 39, 45, 50, 62, 70, 72, 79, 90, 91, 98, 100, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 170, 175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 200, 201, 202, 203, 205, 207, 208, 209, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 249, 252, 253, 254, 255, 256, 257, 260, 263, 266, 270, 276, 281, 282, 285, 286, 287, 289, 290, 302, 303, 304, 305, 306, 307, 310, 311, 312, 319, 320, 325, 326, 327, 328, 329, 330, 332, 333, 334, 337, 341, 342, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 378, 380, 408, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 438, 440, 441], "plu": [2, 14, 15, 20, 66, 148, 157, 436], "enabl": [2, 7, 8, 93, 95, 106, 115, 181, 266, 270, 287, 310, 378, 380, 393, 423, 426, 434, 435, 436, 438], "three": [2, 28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 60, 89, 328, 416, 418, 423, 425, 426, 427, 434, 435, 436, 438, 441], "flatstoragecheckpoint": 2, "discard": [2, 3, 78, 129, 175, 236, 379, 438, 441], "compress": 2, "At": [2, 228, 263, 272, 422, 423, 424, 429, 433, 436, 437], "correct": [2, 4, 56, 58, 65, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 203, 401, 423, 424], "addit": [2, 3, 4, 16, 30, 37, 42, 50, 52, 60, 61, 67, 72, 79, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 162, 184, 188, 211, 226, 230, 232, 233, 236, 238, 243, 245, 264, 306, 310, 314, 324, 343, 360, 378, 380, 417, 421, 422, 425, 426, 434, 435, 438], "nestedstoragecheckpoint": 2, "represent": [2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 94, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 211, 236, 238, 243, 325, 345, 421, 436, 437, 441], "appar": [2, 3, 391], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 90, 91, 98, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 169, 172, 177, 187, 193, 201, 204, 226, 234, 245, 251, 257, 260, 276, 282, 287, 289, 302, 307, 308, 311, 312, 313, 314, 315, 317, 318, 319, 322, 325, 330, 332, 333, 334, 345, 350, 351, 358, 416, 417, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 441], "assumpt": [2, 3, 77, 436, 438], "accur": [2, 7, 422, 436, 438], "truncat": [2, 3, 14, 15, 17, 20, 39, 41, 45, 50, 51, 59, 70, 72, 75, 78, 90, 91, 98, 100, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 160, 162, 163, 176, 177, 195, 196, 201, 206, 213, 216, 220, 224, 226, 233, 234, 243, 266, 270, 296, 310, 360, 366, 421, 423, 426, 434, 441], "marl": [2, 139, 165, 184, 223, 227, 276, 277, 278, 334, 348, 417, 426, 434, 435], "extra": [2, 10, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 184, 240, 241, 243, 387, 416, 423, 424, 438], "fail": [2, 7, 25, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 178], "concret": [2, 421, 423], "set_se": [2, 3, 14, 15, 17, 20, 24, 39, 45, 50, 70, 72, 119, 120, 121, 122, 125, 129, 134, 135, 136, 142, 148, 149, 152, 157, 158, 159, 180, 189, 207, 214, 219, 225, 227, 233, 243, 425, 429, 431, 436, 440, 441], "manual_se": [2, 3, 28, 39, 46, 47, 57, 64, 70, 72, 73, 74, 94, 107, 108, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 178, 180, 189, 193, 207, 216, 219, 225, 227, 241, 243, 263, 274, 275, 283, 286, 287, 302, 308, 315, 318, 325, 326, 328, 329, 333, 341, 348, 425, 429, 431, 434, 435, 436, 440, 441], "200": [2, 14, 15, 17, 24, 30, 37, 39, 42, 50, 60, 61, 62, 67, 70, 72, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 162, 163, 216, 243, 253, 254, 261, 290, 291, 378, 380, 421, 424, 425, 429, 431, 438], "22": [2, 107, 108, 239], "rb_test": 2, "_storag": [2, 437, 438], "max_siz": [2, 45, 57, 64, 72, 73, 74, 93, 94, 95, 96, 107, 108, 109, 113, 115, 423, 429], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 33, 56, 58, 65, 79, 143, 231, 257, 274, 275, 276, 324, 328, 378, 421, 423, 425, 434, 435], "state_dict": [2, 14, 15, 17, 20, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 240, 241, 243, 276, 277, 328, 348, 412, 418, 421, 422, 441], "load_state_dict": [2, 14, 15, 17, 20, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 240, 241, 243, 328, 348, 418, 421], "drawback": 2, "struggl": 2, "big": [2, 423, 429, 438, 441], "sequenti": [2, 9, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 183, 203, 243, 301, 303, 304, 305, 311, 316, 317, 322, 325, 326, 328, 334, 341, 345, 346, 347, 348, 350, 416, 423, 424, 427, 435, 436, 437, 440, 441], "known": [2, 3, 5, 7, 8, 72, 129, 226, 367, 368, 421, 422, 426], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 246, 421, 422, 428], "essenti": [2, 3, 13, 21, 22, 23, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 422, 426, 434, 436, 438], "purpos": [2, 3, 7, 11, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 264, 325, 327, 339, 342, 345, 347, 408, 421, 423, 424, 425, 428, 430, 434, 435, 437, 441], "guid": [2, 11, 150, 151, 155, 156, 225, 415, 421, 435, 440], "explan": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 248], "effect": [2, 3, 30, 34, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 100, 102, 105, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 184, 189, 233, 243, 248, 398, 416, 421, 427, 434, 438, 441], "realm": [2, 427], "As": [2, 3, 4, 50, 64, 73, 74, 77, 102, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 216, 258, 315, 360, 416, 421, 422, 423, 424, 425, 426, 428, 429, 434, 435, 436, 437, 438, 440, 441], "practition": 2, "often": [2, 3, 8, 278, 340, 343, 398, 421, 422, 426, 428, 436, 438, 441], "encount": [2, 4, 205, 310, 415, 422, 427, 436], "situat": [2, 140, 141], "sometim": [2, 3, 77, 424, 441], "variabl": [2, 3, 4, 7, 8, 19, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 67, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 162, 163, 228, 232, 241, 264, 265, 266, 268, 269, 270, 273, 303, 304, 305, 343, 346, 388, 418, 422], "immedi": [2, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 359, 434, 435], "199": 2, "info": [2, 3, 14, 15, 57, 62, 63, 64, 73, 74, 79, 99, 100, 102, 105, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 201, 234, 236, 239, 242, 387, 426, 431, 434, 435, 438, 440], "glanc": [2, 426], "seem": [2, 421, 424, 426], "togeth": [2, 3, 11, 14, 15, 17, 20, 21, 22, 23, 24, 45, 60, 66, 68, 69, 94, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 184, 212, 223, 232, 264, 266, 268, 270, 297, 303, 304, 305, 320, 416, 422, 424, 426, 434], "less": [2, 143, 298, 410, 411, 417, 423, 424, 438, 440], "omit": [2, 136, 245, 263, 287, 394, 423, 428, 436, 438], "proper": [2, 3, 4, 6, 7, 360, 361, 362, 363, 422, 423, 434, 435, 436, 438], "imposs": [2, 3, 64, 73, 74, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 325, 327, 342, 345, 347], "determin": [2, 3, 16, 45, 57, 73, 79, 99, 100, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 164, 211, 238, 276, 287, 328, 422, 427, 434, 435], "complic": [2, 37, 60, 72, 436, 438, 441], "matter": [2, 36, 429], "inconsist": [2, 441], "miss": [2, 3, 4, 6, 7, 30, 34, 37, 42, 45, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 201, 231, 233, 243, 244, 316, 317, 325, 328, 348, 415, 421, 424], "primari": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 136, 429], "elimin": [2, 3, 426], "upon": [2, 3, 8, 19, 434, 436], "canon": 2, "definit": [2, 54, 109, 276], "markov": [2, 3, 426, 441], "mdp": [2, 175, 426, 436], "context": [2, 3, 5, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 108, 119, 122, 125, 126, 129, 136, 145, 148, 149, 152, 157, 158, 159, 226, 235, 243, 248, 266, 270, 277, 279, 301, 306, 356, 357, 360, 361, 362, 363, 365, 373, 380, 388, 393, 416, 417, 421, 422, 423, 424, 425, 434, 435, 436, 437, 438, 440], "condit": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 78, 80, 81, 82, 83, 84, 189, 225, 240, 307, 308, 310, 312, 313, 324, 417, 421, 434, 436, 438], "complet": [2, 7, 9, 106, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 184, 224, 415, 417, 421, 423, 426, 433], "termin": [2, 3, 7, 14, 15, 17, 20, 39, 41, 45, 50, 51, 66, 70, 72, 90, 91, 98, 107, 119, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 176, 177, 180, 181, 195, 201, 213, 226, 234, 243, 247, 266, 270, 273, 310, 316, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 421, 422, 423, 434, 435, 436, 440, 441], "reward": [2, 3, 14, 15, 17, 36, 37, 39, 41, 45, 50, 51, 56, 65, 66, 70, 72, 78, 79, 89, 99, 100, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 177, 178, 181, 182, 187, 188, 191, 192, 194, 195, 196, 201, 203, 204, 205, 209, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 230, 232, 233, 234, 235, 237, 238, 240, 241, 243, 247, 266, 273, 306, 310, 320, 325, 326, 328, 329, 330, 332, 333, 334, 337, 341, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 391, 392, 393, 396, 412, 417, 418, 421, 422, 423, 424, 425, 426, 430, 434, 435, 436, 440, 441], "imit": [2, 3, 339], "inform": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 75, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 126, 129, 132, 135, 136, 148, 149, 152, 157, 158, 159, 243, 249, 250, 251, 271, 277, 416, 417, 418, 421, 422, 423, 424, 425, 426, 434, 435, 436, 438, 440], "stateless": [2, 3, 45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 189, 241, 343, 378, 421, 426, 436, 441], "simul": [2, 3, 5, 7, 8, 77, 120, 121, 122, 131, 134, 135, 154, 162, 163, 171, 247, 273, 416, 421, 423, 425, 426, 430, 434, 435], "furthermor": [2, 434, 435], "certain": [2, 4, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 78, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 174, 189, 199, 224, 233, 243, 263, 265, 269, 342, 421, 422, 423, 425, 431, 434, 435, 441], "composit": [2, 3, 28, 29, 31, 32, 33, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 86, 105, 111, 118, 119, 122, 125, 127, 129, 136, 142, 148, 149, 152, 157, 158, 159, 169, 176, 178, 181, 191, 192, 193, 194, 196, 201, 203, 205, 213, 214, 220, 224, 226, 230, 231, 232, 234, 241, 243, 245, 247, 273, 302, 311, 315, 317, 318, 322, 325, 345, 414, 421, 423, 427, 436], "uniform": [2, 57, 73, 99, 100, 434], "unambigu": 2, "distinguish": [2, 3, 64, 73, 74, 140, 141, 162, 163], "happen": [2, 3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 244, 287, 422, 425, 428, 429, 430, 437, 441], "everyth": [2, 422, 423, 424, 430, 431], "belong": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 239, 240, 315, 421, 429, 435], "rule": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 191, 194, 243, 315, 416, 423], "field": [2, 3, 14, 15, 17, 20, 26, 30, 34, 37, 39, 42, 45, 50, 56, 58, 59, 60, 61, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 93, 94, 95, 99, 107, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 175, 177, 181, 191, 194, 195, 196, 201, 209, 213, 214, 216, 220, 223, 224, 226, 231, 233, 234, 243, 247, 249, 259, 260, 266, 270, 273, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 319, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 402, 415, 416, 422, 436], "taken": [2, 3, 28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 215, 274, 275, 417, 421, 423, 424, 427, 434, 435, 436], "is_shar": [2, 3, 14, 15, 17, 26, 34, 37, 39, 45, 56, 58, 59, 60, 65, 66, 70, 72, 73, 74, 75, 78, 79, 89, 93, 94, 95, 99, 107, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 175, 177, 181, 191, 194, 195, 196, 201, 209, 213, 214, 216, 220, 223, 224, 226, 234, 240, 247, 249, 259, 260, 266, 270, 273, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 319, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 416, 436], "envbas": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 45, 79, 119, 122, 126, 129, 136, 148, 149, 152, 157, 158, 159, 164, 175, 178, 181, 191, 194, 206, 213, 214, 232, 233, 240, 243, 247, 266, 270, 272, 273, 310, 393, 402, 403, 404, 408, 410, 411, 412, 414, 426], "brought": [2, 423, 424, 427], "step_mdp": [2, 3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 266, 270, 414, 424, 426, 436, 440, 441], "count": [2, 3, 14, 15, 17, 20, 45, 50, 79, 125, 126, 224, 231, 241, 287, 393, 398, 401, 421, 422, 423, 424, 438, 441], "trigger": [2, 7, 37, 60, 72, 241], "turn": [2, 21, 22, 23, 24, 34, 35, 43, 56, 58, 61, 65, 67, 69, 79, 122, 135, 148, 159, 200, 232, 235, 239, 307, 378, 393, 417, 421, 422, 424, 427, 436, 437], "retain": [2, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "regard": [2, 260, 308, 325, 335, 345, 421, 423, 436], "expand": [2, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 107, 108, 181, 226, 258, 314, 317, 326, 328, 341, 343, 346, 348, 350, 351, 434, 435, 436, 438, 440], "recur": [2, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 364, 427], "anyth": [2, 4, 14, 15, 17, 20, 21, 22, 23, 24, 417], "els": [2, 120, 121, 181, 264, 265, 268, 269, 281, 416, 418, 421, 422, 423, 424, 434, 435, 436, 437], "repetit": [2, 423, 426, 429], "embed": [2, 211, 236, 237, 238, 253, 288, 302, 303, 304, 305, 314, 315, 319, 437], "strictli": [2, 3, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 204, 231, 233, 243, 328, 348, 421, 423], "enforc": [2, 30, 34, 37, 42, 50, 60, 61, 67, 72, 106, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 316, 328, 348, 436], "n_action": [2, 310, 326, 328, 330, 332, 344, 348], "rightmost": [2, 417], "n_ob": [2, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 310, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 428], "estim": [2, 4, 100, 107, 108, 195, 203, 253, 295, 303, 304, 305, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 417, 422, 423, 427, 428, 434, 435], "subsequ": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 243, 424, 434], "proce": [2, 434], "state_valu": [2, 304, 305, 319, 327, 333, 341, 342, 345, 346, 348, 360, 361, 362, 363, 365, 367, 369, 371, 373, 374, 376, 416, 421, 435], "f": [2, 14, 15, 17, 20, 120, 121, 129, 134, 135, 228, 244, 269, 324, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 421, 422, 423, 424, 431, 434, 435, 436, 438, 441], "next_state_valu": [2, 350, 351, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 414], "broadcast": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 258, 334, 348], "left": [2, 52, 100, 107, 181, 188, 190, 191, 192, 196, 203, 205, 211, 213, 214, 220, 224, 227, 230, 232, 234, 236, 238, 241, 243, 263, 276, 422, 423, 425, 429, 430], "would": [2, 3, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 264, 266, 268, 270, 271, 276, 315, 417, 418, 422, 423, 424, 426, 428, 429, 436, 438, 440, 441], "best": [2, 5, 9, 133, 266, 270, 434, 435, 438, 440], "bug": [2, 4], "worst": [2, 422], "twice": [2, 8, 108], "feasibl": 2, "mostli": [2, 3, 20, 286, 380, 417, 430, 438, 441], "eas": [2, 3, 434, 435], "flat": [2, 113], "manner": [2, 129, 211, 236, 416, 421, 422, 423, 429, 433, 436, 438], "ted2flat": [2, 39, 414], "flat2t": [2, 414], "unflatten": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 181, 310], "deseri": [2, 3, 39], "posit": [2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 123, 124, 125, 129, 136, 148, 149, 152, 157, 158, 159, 198, 199, 201, 222, 223, 224, 227, 231, 233, 235, 243, 328, 348, 417, 423, 434, 435, 436, 438], "both": [2, 3, 7, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 119, 122, 125, 126, 128, 129, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 160, 164, 176, 177, 184, 201, 214, 230, 231, 233, 243, 250, 251, 266, 269, 270, 271, 276, 277, 303, 304, 305, 308, 313, 325, 327, 328, 329, 333, 334, 341, 342, 343, 345, 346, 347, 348, 350, 351, 393, 416, 421, 423, 425, 426, 428, 434, 435, 436, 437, 438, 441], "mark": [2, 3, 17, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 228, 266, 270, 360, 362, 363, 429, 438], "identifi": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 59, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "abov": [2, 3, 7, 30, 37, 42, 50, 60, 61, 67, 72, 80, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 232, 243, 267, 295, 296, 324, 417, 418, 421, 423, 425, 426, 427, 434, 435, 436, 441], "output": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 77, 79, 100, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 176, 181, 182, 184, 187, 188, 189, 190, 191, 192, 194, 196, 198, 201, 203, 205, 207, 211, 213, 214, 219, 220, 223, 224, 227, 228, 230, 232, 233, 234, 236, 238, 239, 241, 243, 245, 250, 251, 252, 253, 254, 257, 259, 260, 261, 264, 265, 266, 268, 269, 270, 271, 276, 277, 284, 286, 287, 289, 298, 302, 303, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 378, 380, 389, 416, 417, 421, 422, 423, 424, 425, 426, 427, 430, 433, 434, 435, 436, 437, 440, 441], "typic": [2, 3, 4, 8, 13, 16, 17, 18, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 195, 225, 243, 284, 286, 311, 326, 328, 343, 345, 348, 416, 417, 418, 423, 425, 426, 428, 429, 434, 435, 436], "adjust": [2, 11, 226, 421, 434, 435, 436], "grumodul": [2, 183, 226, 301, 322, 424], "lstmmodul": [2, 266, 301, 424, 425], "skip": [2, 3, 16, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 189, 199, 201, 205, 231, 233, 243, 311, 315, 328, 343, 348, 360, 361, 362, 363, 379, 380, 391, 393, 421, 422, 436], "accumul": [2, 8, 243], "upcom": [2, 343, 369, 370, 371, 372, 374, 375, 376, 377, 421], "popular": [2, 3, 416, 424, 428, 435], "rainbow": 2, "multistep": [2, 14, 15, 17, 20, 21, 22, 23, 24, 243, 414, 422], "shift": [2, 39, 41, 50, 51, 70, 90, 91, 98, 321, 360, 361, 362, 363, 423], "approxim": [2, 435, 441], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 20, 184, 257, 285, 325, 331, 344, 345, 389, 412, 423, 424, 435, 438], "2x": 2, "small": [2, 108, 236, 241, 246, 421, 423, 425, 434, 435, 441], "clearer": [2, 425, 427], "lazi": [2, 3, 68, 69, 86, 87, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 162, 163, 211, 236, 250, 276, 279, 316, 317, 421, 422, 427, 429, 433, 438, 441], "certainli": 2, "welcom": [2, 426], "wrapper": [2, 3, 20, 56, 58, 65, 66, 73, 74, 79, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 239, 244, 248, 249, 298, 306, 310, 315, 320, 360, 385, 386, 387, 412, 414, 423, 424, 426, 434, 435, 437, 440, 441], "around": [2, 5, 7, 20, 73, 74, 119, 122, 125, 129, 136, 142, 148, 149, 152, 153, 157, 158, 159, 248, 286, 310, 315, 360, 421, 422, 435, 441], "selecttransform": [2, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "excludetransform": [2, 220, 438], "promptli": 2, "virtual": [2, 3, 128], "instal": [2, 3, 5, 10, 21, 22, 23, 61, 72, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 382, 398, 415, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 441], "respons": [2, 3, 8, 14, 15, 17, 19, 21, 23, 24, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 398, 428, 429, 441], "d4rl": 2, "repositori": [2, 7, 162, 163, 434, 435], "wheel": [2, 423], "publish": 2, "openml": [2, 145], "scikit": [2, 145], "panda": 2, "raw": [2, 3, 4, 66, 201, 230, 234, 267, 295, 296, 422, 425, 429, 436], "go": [2, 3, 7, 94, 139, 148, 189, 212, 216, 306, 366, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "modifi": [2, 3, 7, 8, 30, 37, 42, 50, 60, 61, 67, 72, 78, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 184, 188, 189, 198, 201, 203, 211, 226, 232, 233, 236, 238, 241, 243, 278, 287, 306, 314, 315, 401, 417, 421, 422, 423, 425, 426, 434, 435, 436], "fly": [2, 184, 240, 342, 417, 423, 436, 438, 441], "least": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 187, 430, 441], "pre": [2, 7, 25, 30, 37, 42, 50, 60, 61, 67, 72, 78, 95, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 211, 230, 236, 238, 243, 441], "conisder": 2, "per": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 113, 133, 134, 135, 148, 150, 151, 187, 205, 219, 250, 251, 261, 263, 276, 277, 310, 380, 382, 385, 387, 398, 410, 411, 421, 422, 423, 424, 425, 427, 428, 431, 434, 435, 438, 440], "pipelin": [2, 3, 7, 129, 416, 417, 423], "replac": [2, 3, 6, 7, 30, 37, 42, 50, 60, 61, 67, 72, 100, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 180, 193, 195, 202, 240, 241, 243, 263, 416, 434, 438, 440], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 205, 216, 226, 233, 243, 245, 287, 310, 396, 416, 418, 422, 423, 424, 427, 430, 436, 438, 441], "produc": [2, 3, 34, 35, 43, 45, 69, 107, 177, 180, 181, 250, 251, 271, 277, 283, 303, 305, 306, 315, 380, 423, 424, 425, 426, 427, 429, 438, 441], "download": [2, 7, 10, 13, 14, 15, 17, 20, 21, 22, 23, 24, 133, 211, 238, 380, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "forc": [2, 3, 6, 7, 14, 15, 20, 21, 22, 23, 24, 149, 422, 434, 435, 436], "robosetexperiencereplai": [2, 107, 108], "fk1": 2, "v4": [2, 129, 148, 177, 215, 369, 370, 371, 372, 374, 375, 376, 377, 421, 423, 437, 440], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 242], "obs_norm": 2, "norm": [2, 4, 8, 120, 121, 246, 398, 421, 422, 423, 434, 435, 436], "num_work": [2, 56, 58, 78, 89, 143, 148, 157, 421, 422], "os": [2, 58, 78, 89, 422], "cpu_count": [2, 58, 78, 89], "num_chunk": 2, "1000": [2, 4, 17, 45, 64, 72, 93, 94, 99, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 240, 245, 263, 286, 287, 311, 315, 340, 421, 422, 423, 424, 425, 427, 429, 431, 436, 437, 438], "mp_start_method": [2, 148, 157, 231, 422, 440], "fork": [2, 5, 421, 422, 423, 424, 434, 435, 437, 440], "recreat": [2, 436], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 27, 64, 73, 74, 100, 102, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 203, 425, 429, 437], "grain": [2, 3, 64, 73, 74, 100, 102, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181], "nomenclatur": 2, "compact": [2, 45, 70, 90, 91, 98], "propos": [2, 184, 195, 248, 272, 340, 349, 416, 424, 438], "replaybufferensembl": [2, 105, 111, 118], "primit": [2, 3, 4, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351], "individu": [2, 4, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 78, 100, 102, 113, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 241, 243, 421, 435], "dummi": [2, 3, 159, 378, 421, 425, 429, 441], "semant": [2, 68, 69, 128, 130, 437], "ident": [2, 3, 14, 15, 17, 50, 56, 58, 64, 65, 72, 73, 74, 79, 93, 102, 107, 119, 122, 125, 128, 129, 130, 136, 143, 148, 149, 152, 157, 158, 159, 195, 223, 232, 241, 246, 276, 277, 326, 328, 341, 346, 348, 350, 351, 360, 361, 362, 363, 410, 411, 422, 426, 434, 435], "another_kei": [2, 102], "renam": [2, 3, 56, 58, 65, 79, 102, 175, 214, 216, 421], "resiz": [2, 3, 102, 184, 422, 424, 425, 426, 438, 441], "imag": [2, 3, 4, 7, 11, 184, 186, 190, 211, 229, 238, 271, 378, 380, 421, 422, 425, 426, 430, 435, 437, 441], "comops": 2, "totensorimag": [2, 3, 102, 184, 215, 422, 424, 425, 438, 440, 441], "renametransform": [2, 3, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184], "rb0": [2, 102], "in_kei": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 37, 45, 60, 62, 72, 102, 119, 120, 121, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 170, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 259, 266, 270, 273, 288, 297, 298, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 339, 341, 342, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 379, 380, 408, 416, 421, 422, 423, 424, 425, 427, 428, 431, 433, 434, 435, 436, 437, 438, 440, 441], "pixel": [2, 3, 7, 34, 102, 122, 123, 124, 128, 130, 131, 154, 184, 186, 190, 195, 198, 200, 207, 209, 211, 215, 229, 236, 238, 253, 281, 282, 378, 380, 421, 422, 424, 425, 430, 434, 437, 438, 440, 441], "rb1": [2, 102], "out_kei": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 37, 45, 60, 62, 72, 102, 119, 120, 121, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 170, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 259, 260, 266, 270, 273, 288, 289, 297, 298, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 325, 326, 327, 328, 333, 334, 339, 341, 342, 345, 346, 347, 348, 350, 358, 360, 361, 362, 363, 378, 380, 393, 408, 416, 421, 422, 423, 424, 425, 427, 431, 433, 434, 435, 436, 437, 438, 440, 441], "pixels33": [2, 102], "data0": [2, 94, 102], "244": [2, 102, 211, 238], "data1": [2, 94, 102, 440], "_": [2, 8, 57, 62, 63, 64, 73, 74, 94, 102, 122, 126, 133, 162, 163, 185, 191, 193, 194, 203, 207, 214, 229, 240, 243, 286, 302, 314, 315, 319, 324, 325, 326, 328, 329, 333, 334, 341, 345, 346, 348, 350, 351, 360, 361, 362, 363, 382, 421, 422, 423, 424, 425, 431, 434, 435, 436, 438, 440], "parent": [2, 3, 24, 30, 37, 41, 42, 50, 52, 60, 61, 67, 72, 77, 79, 102, 111, 118, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 181, 184, 185, 188, 189, 192, 195, 198, 199, 205, 207, 211, 219, 224, 225, 226, 227, 231, 232, 235, 236, 243, 266, 270, 303, 322, 343, 345, 364, 378, 380, 421, 429, 436, 440, 441], "basic": [2, 3, 18, 142, 416, 423, 428, 429, 431, 434, 440, 441], "properti": [2, 3, 16, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 180, 231, 232, 233, 240, 241, 243, 258, 267, 275, 279, 283, 294, 295, 296, 310, 325, 328, 343, 345, 347, 348, 427, 429, 436, 438], "input": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 72, 75, 77, 79, 80, 81, 82, 83, 84, 110, 116, 119, 122, 125, 129, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 279, 280, 287, 289, 290, 291, 292, 293, 295, 298, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 392, 396, 401, 408, 416, 417, 418, 421, 422, 423, 424, 425, 426, 434, 435, 436, 440, 441], "send": [2, 3, 8, 19, 152, 158, 387, 414, 440], "receiv": [2, 3, 16, 18, 19, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 232, 233, 241, 243, 271, 366, 414, 417, 421, 423, 428, 433, 436], "spawn": [2, 3, 4, 21, 25, 133, 143, 148, 157, 231, 422, 434, 435], "check_env_spec": [2, 3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 201, 213, 234, 378, 414, 423, 434, 435, 436], "saniti": [2, 3, 7, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 423], "make_composite_from_td": [2, 77, 414, 436], "fall": [2, 4], "categori": [2, 34, 416, 418], "bound": [2, 3, 4, 24, 30, 32, 34, 37, 42, 50, 60, 61, 67, 72, 80, 119, 122, 125, 129, 136, 148, 149, 152, 153, 157, 158, 159, 187, 206, 240, 243, 245, 263, 287, 290, 291, 302, 307, 308, 311, 312, 313, 314, 315, 318, 325, 326, 328, 329, 341, 345, 346, 348, 350, 351, 414, 416, 421, 422, 423, 425, 434, 436, 440, 441], "unbound": [2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 73, 74, 77, 79, 81, 82, 83, 84, 102, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 169, 178, 181, 191, 194, 213, 226, 247, 273, 302, 314, 317, 319, 347, 414, 436, 438], "boundeddiscret": [2, 31, 34], "boundedcontinu": [2, 25, 31, 34, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 204, 234], "unboundeddiscret": [2, 80, 149, 201, 414], "unboundedcontinu": [2, 80, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 213, 226, 317, 322, 414], "implicitli": 2, "onehot": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 55, 68, 69, 77, 80, 81, 82, 83, 84, 120, 121, 128, 130, 131, 134, 135, 143, 144, 146, 147, 154, 160, 161, 260, 289, 307, 312, 330, 332, 333, 334, 358, 414, 416], "multionehot": [2, 46, 47, 49, 330, 333, 334, 358, 414], "multicategor": [2, 47, 48, 49, 414], "binari": [2, 3, 7, 29, 30, 54, 160, 178, 182, 260, 289, 307, 308, 312, 313, 330, 333, 334, 358, 414], "concept": [2, 3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 286, 422, 438], "arbitrari": [2, 3, 28, 54, 64, 119, 122, 125, 129, 135, 136, 148, 149, 152, 157, 158, 159, 180, 417, 421, 422, 436, 438], "combin": [2, 4, 40, 61, 350, 422, 425, 430, 438, 440], "nevertheless": [2, 3, 423, 426, 438], "otherwis": [2, 3, 12, 14, 15, 17, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 100, 102, 107, 108, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 184, 185, 189, 193, 201, 207, 225, 226, 227, 231, 232, 233, 240, 243, 244, 246, 248, 264, 267, 268, 276, 277, 295, 296, 301, 307, 312, 315, 318, 326, 328, 337, 343, 344, 348, 360, 362, 363, 393, 395, 417, 418, 421, 422, 423, 424, 436, 441], "similarli": [2, 3, 24, 30, 37, 42, 50, 60, 61, 67, 72, 106, 111, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 205, 243, 276, 316, 317, 333, 341, 441], "possess": [2, 77], "unsqueez": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 100, 169, 178, 181, 184, 185, 229, 235, 421, 424, 425, 434, 435, 436], "move": [2, 4, 30, 37, 42, 50, 60, 61, 67, 72, 77, 119, 122, 125, 129, 130, 136, 148, 149, 152, 157, 158, 159, 175, 177, 188, 192, 211, 226, 232, 233, 236, 238, 240, 241, 243, 271, 314, 396, 421, 422, 424, 426, 441], "unbind": [2, 56, 57, 58, 64, 65, 73, 74, 79, 205, 310], "said": [2, 423], "neg": [2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 57, 60, 73, 77, 99, 100, 184, 198, 212, 223, 235, 327, 336, 342, 345, 360, 362, 363, 417, 423, 434, 435, 436], "seen": [2, 3, 21, 22, 23, 24, 34, 35, 43, 69, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 192, 417, 421, 422, 424, 428, 434, 435, 438], "predict": [2, 3, 50, 66, 259, 261, 272, 273, 306, 320, 325, 327, 332, 335, 337, 338, 342, 345, 347, 359, 421, 422, 428], "deprec": [2, 26, 29, 30, 32, 35, 37, 38, 42, 43, 44, 47, 49, 50, 53, 55, 60, 61, 67, 72, 82, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 240, 243, 325, 327, 328, 330, 333, 334, 335, 341, 342, 345, 346, 347, 348, 358, 360, 361, 362, 363, 368, 441], "mont": [2, 325, 327, 342, 345, 421], "carlo": [2, 325, 327, 342, 345, 421], "mct": [2, 45], "act": [2, 3, 4, 107, 108, 150, 151, 233, 259, 277, 326, 328, 329, 341, 346, 348, 350, 351, 424, 425, 434, 435, 438, 440], "tradit": [2, 428, 434], "integ": [2, 14, 15, 17, 20, 26, 42, 46, 48, 50, 54, 60, 61, 66, 67, 79, 100, 107, 108, 109, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 180, 195, 199, 207, 224, 241, 250, 251, 271, 276, 277, 328, 333, 341, 348, 417, 425, 438], "advanc": [2, 3, 24, 57, 64, 73, 74, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 426, 429, 438], "rebuild": [2, 45], "initi": [2, 4, 7, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 28, 29, 30, 33, 37, 38, 42, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 102, 113, 119, 122, 125, 129, 136, 146, 147, 148, 149, 152, 157, 158, 159, 160, 183, 201, 207, 211, 226, 233, 236, 241, 242, 243, 244, 245, 246, 247, 263, 264, 265, 268, 269, 273, 276, 277, 278, 279, 280, 287, 310, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 412, 416, 417, 421, 422, 424, 426, 427, 429, 434, 436, 441], "pair": [2, 3, 50, 56, 58, 60, 65, 72, 79, 119, 122, 123, 124, 125, 129, 136, 148, 149, 152, 157, 158, 159, 216, 226, 231, 266, 303, 311, 315, 343, 360, 361, 362, 363, 364, 416, 417, 421, 422, 423, 427, 428, 433, 436, 441], "term": [2, 66, 94, 203, 268, 269, 279, 280, 324, 325, 334, 400, 422, 423, 426, 427, 435], "pseudocod": [2, 3], "next_stat": [2, 417], "associ": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 45, 50, 56, 58, 60, 61, 65, 67, 69, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 243, 290, 412, 421, 438], "sens": [2, 4, 56, 58, 65, 79, 184, 429, 436], "hard": [2, 3, 7, 113, 123, 124, 148, 340, 422, 441], "know": [2, 3, 4, 9, 57, 64, 73, 74, 128, 130, 245, 343, 346, 393, 421, 422, 423, 424, 425, 426, 427, 428, 429, 434, 435, 438], "next_td": 2, "Of": [2, 3, 7, 415, 436, 441], "cours": [2, 3, 4, 415, 436, 441], "handi": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 430], "undertaken": [2, 79, 417, 436], "link": [2, 6, 7, 125, 422, 431], "hash": [2, 42, 45, 60, 61, 67, 72, 79, 122, 136], "past": [2, 4, 184, 310, 422, 438], "node_map": [2, 45], "_index": [2, 60, 72], "Then": [2, 7, 14, 15, 17, 20, 21, 22, 23, 24, 239, 423, 433], "track": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 74, 99, 100, 106, 122, 219, 228, 240, 241, 243, 287, 310, 385, 391, 422, 424, 426, 429, 435, 436, 438], "next_data": [2, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "data_map": [2, 45], "form": [2, 14, 15, 20, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 90, 91, 98, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243, 264, 266, 268, 270, 315, 324, 325, 327, 342, 345, 398, 416, 427], "figur": [2, 3, 79, 136, 421, 423, 424, 435, 436, 441], "flowchart": 2, "o": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 269], "get_tre": [2, 45, 79], "vertex": [2, 79], "longer": [2, 79, 244, 422, 431, 434, 435, 438], "vertic": [2, 79], "branch": [2, 45, 79], "repeat": [2, 79, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 154, 157, 158, 159, 231, 247, 258, 423, 434, 435, 436], "depth": [2, 64, 77, 119, 122, 125, 129, 136, 142, 148, 149, 152, 154, 157, 158, 159, 247, 250, 251, 253, 254, 255, 256, 261, 262, 271, 273, 276, 277, 278, 281, 282, 307, 416, 422, 426, 428, 429, 433, 434, 435, 438], "until": [2, 3, 7, 24, 135, 227, 232, 243, 388, 423, 424, 431, 434, 435], "anymor": [2, 56, 58, 65, 79, 233, 314], "utmost": 2, "llm": [2, 66, 78, 89], "post": [2, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "grpo": 2, "commonli": [2, 100, 107, 108, 441], "emploi": [2, 280], "scarc": 2, "address": [2, 438], "subdomain": 2, "extern": [2, 3, 191, 194, 241, 434, 441], "token": [2, 58, 59, 66, 75, 78, 89, 136], "dm": [3, 421, 441], "experi": [3, 57, 64, 73, 74, 99, 100, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 382, 383, 384, 385, 386, 387, 415, 422, 423, 425, 429, 430, 434, 435, 438], "box": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 128, 130, 278, 343], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 17, 20, 24, 25, 62, 119, 122, 125, 126, 129, 136, 140, 141, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 184, 187, 195, 202, 203, 207, 209, 214, 216, 219, 226, 232, 239, 240, 243, 378, 408, 421, 422, 423, 424, 433, 435, 437, 438, 440, 441], "hope": [3, 11], "nn": [3, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 60, 61, 62, 66, 67, 72, 119, 120, 121, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 188, 193, 195, 203, 211, 226, 232, 233, 236, 238, 243, 247, 249, 250, 251, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 275, 276, 277, 278, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 319, 322, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 408, 416, 417, 421, 422, 423, 424, 425, 427, 428, 431, 433, 434, 435, 436, 437, 440], "organis": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 422], "attribut": [3, 4, 7, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 119, 122, 125, 128, 129, 130, 135, 136, 148, 149, 152, 157, 158, 159, 177, 195, 205, 211, 233, 236, 240, 241, 243, 315, 325, 326, 328, 329, 330, 332, 334, 335, 336, 339, 341, 343, 345, 346, 347, 348, 350, 351, 358, 421, 424, 436], "live": [3, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 195, 243], "actual": [3, 4, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 239, 401, 417, 421, 423, 425, 434, 435, 436], "care": [3, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 380, 421, 423, 425, 434, 435, 436, 438], "parametr": [3, 280, 315, 326, 328, 333, 341, 348, 421, 423], "observation_spec": [3, 45, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 178, 181, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 198, 200, 201, 202, 203, 207, 209, 211, 213, 215, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 247, 266, 270, 273, 402, 408, 421, 423, 428, 433, 434, 435, 436, 441], "state_spec": [3, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 178, 188, 192, 207, 232, 234, 235, 243, 247, 273, 436, 441], "reward_spec": [3, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 178, 181, 182, 187, 188, 191, 192, 194, 204, 213, 217, 218, 219, 221, 223, 230, 232, 234, 235, 241, 243, 247, 273, 423, 434, 435, 436, 441], "done_spec": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 191, 192, 194, 195, 213, 223, 230, 232, 234, 243, 434, 435, 436, 441], "flag": [3, 8, 37, 57, 62, 63, 64, 73, 74, 102, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163, 202, 287, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 416, 434, 435, 436, 437], "input_spec": [3, 79, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 177, 181, 188, 191, 192, 193, 205, 209, 213, 214, 219, 220, 223, 224, 225, 226, 230, 232, 233, 234, 237, 243, 423, 436], "full_action_spec": [3, 79, 119, 122, 125, 129, 136, 146, 147, 148, 149, 152, 157, 158, 159, 160, 161, 177, 192, 247, 273, 434, 435], "full_state_spec": [3, 45, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 192, 247, 273], "output_spec": [3, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 188, 191, 192, 196, 203, 205, 213, 214, 220, 224, 230, 232, 233, 234, 241, 243, 436], "full_observation_spec": [3, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 247, 273], "full_reward_spec": [3, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 192, 213, 434, 435], "full_done_spec": [3, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 181, 192, 213, 434, 435], "carri": [3, 24, 48, 78, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 226, 241, 343, 422, 424, 434, 435, 436, 438], "nontensor": [3, 53, 201, 234, 414], "spec_lock": [3, 125], "modif": [3, 5, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 198, 201, 243, 343, 417, 423, 436], "children": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "unlock": [3, 34, 35, 43, 56, 58, 65, 69, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "set_spec_lock_": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "reason": [3, 4, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 211, 236, 243, 270, 417, 421, 422, 423, 428, 429, 434, 436, 438], "easi": [3, 5, 11, 119, 122, 123, 124, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 245, 263, 287, 416, 417, 421, 422, 423, 435, 437, 438, 440, 441], "cach": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 68, 69, 77, 78, 80, 81, 82, 83, 84, 89, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 180, 191, 194, 211, 232, 233, 238, 248, 390], "principl": 3, "new_spec": 3, "eras": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233], "relock": 3, "previous": [3, 4, 45, 423, 441], "importantli": [3, 311, 315], "action_s": 3, "help": [3, 4, 30, 37, 42, 50, 60, 61, 67, 72, 77, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 195, 243, 325, 327, 342, 345, 347, 415, 417, 421, 422, 423, 424, 434, 435], "With": [3, 134, 135, 139, 225, 418, 422, 433, 434, 435, 438, 441], "necessarili": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 441], "present": [3, 30, 37, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 79, 99, 100, 102, 106, 119, 122, 125, 128, 129, 136, 148, 149, 152, 157, 158, 159, 175, 176, 196, 216, 220, 226, 231, 233, 243, 251, 252, 253, 254, 255, 256, 262, 266, 268, 270, 280, 285, 287, 310, 314, 315, 316, 317, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 412, 418, 421, 431, 433, 434, 435, 438, 440], "0s": [3, 226, 424], "step_and_maybe_reset": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 426], "done_kei": [3, 26, 37, 39, 41, 45, 51, 70, 90, 91, 98, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 180, 184, 195, 216, 224, 243, 434, 435], "assign": [3, 4, 14, 15, 20, 30, 31, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 80, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 329, 330, 332, 348, 423, 427, 434, 435, 438], "_reset": [3, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 176, 178, 180, 181, 184, 191, 194, 202, 213, 228, 247, 273, 434], "data_": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "append": [3, 8, 11, 45, 57, 62, 63, 64, 73, 74, 102, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 180, 187, 188, 205, 216, 226, 233, 239, 265, 266, 269, 270, 307, 312, 421, 422, 423, 424, 425, 434, 435, 436, 437, 438, 440], "seed": [3, 14, 15, 17, 20, 24, 64, 73, 74, 102, 119, 122, 125, 129, 136, 142, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 164, 178, 181, 191, 194, 201, 213, 233, 378, 398, 434], "determinist": [3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 173, 188, 211, 226, 232, 233, 236, 238, 243, 252, 261, 281, 291, 302, 311, 314, 315, 318, 326, 343, 393, 416, 421, 422, 423, 424, 425, 427, 428, 431, 434, 436, 440, 441], "preced": [3, 50, 122, 184, 424], "risk": [3, 212], "overlap": [3, 73, 113], "reproduc": [3, 61, 67, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 184, 201, 421, 423, 425, 435], "maximum": [3, 4, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 50, 56, 58, 59, 66, 72, 75, 78, 79, 80, 89, 93, 94, 95, 96, 99, 100, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 193, 217, 224, 225, 227, 246, 294, 295, 296, 318, 326, 328, 333, 334, 341, 343, 344, 348, 380, 395, 416, 421, 422, 423, 424, 427, 434, 435, 438], "max_step": [3, 11, 113, 119, 122, 125, 129, 136, 140, 141, 142, 148, 149, 152, 157, 158, 159, 162, 163, 224, 231, 243, 378, 426, 427, 428, 430, 431, 434, 435, 440, 441], "tensordictmodul": [3, 14, 15, 17, 20, 21, 22, 23, 24, 37, 60, 62, 66, 72, 119, 120, 121, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 183, 203, 249, 260, 266, 270, 273, 288, 289, 297, 298, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317, 318, 320, 322, 326, 328, 329, 333, 334, 336, 337, 338, 339, 341, 343, 346, 348, 350, 351, 358, 359, 360, 361, 362, 363, 393, 408, 414, 421, 423, 424, 428, 431, 433, 434, 435, 436, 437, 441], "trail": [3, 240], "treat": [3, 50, 417, 427, 428], "brief": [3, 423, 426, 428, 438], "deliveri": 3, "metaclass": [3, 125], "flank": [3, 417, 424], "dual": 3, "refer": [3, 7, 8, 9, 11, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 184, 201, 231, 233, 240, 243, 247, 260, 261, 273, 274, 275, 276, 277, 278, 281, 282, 290, 291, 305, 308, 325, 328, 335, 336, 337, 338, 345, 348, 360, 365, 373, 420, 421, 423, 425, 427, 428, 429, 430, 434, 435, 438], "union": [3, 23, 30, 34, 35, 37, 42, 43, 44, 48, 49, 50, 52, 54, 55, 60, 61, 67, 68, 69, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 276, 297, 332, 334, 346, 409, 412], "assess": [3, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 43, 69, 140, 141, 165, 421], "split_trajectori": [3, 14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 108, 414], "adjac": [3, 26, 198, 310], "junction": 3, "inittrack": [3, 266, 270, 310, 421, 424], "tutori": [3, 149, 413, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 441], "scratch": [3, 8, 422, 436], "mere": [3, 20, 425], "batch_lock": [3, 119, 122, 125, 127, 129, 136, 148, 152, 157, 158, 181, 226, 233, 436], "contrast": [3, 264, 286, 340, 438], "notabl": 3, "braxenv": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 214, 414, 426], "jumanjienv": [3, 414], "straightforward": [3, 18, 421, 422, 426, 427, 428, 429, 438], "merg": [3, 57, 64, 73, 74, 436], "correctli": [3, 7, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "silent": [3, 30, 37, 42, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321], "_step": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243], "temporari": [3, 421], "hold": [3, 232, 356, 357, 436, 438], "arm": 3, "unbatch": [3, 264, 268], "captur": [3, 245, 263, 287, 425], "base_env": [3, 119, 121, 122, 125, 129, 130, 135, 136, 147, 148, 149, 152, 157, 158, 159, 161, 177, 178, 181, 187, 189, 191, 193, 194, 203, 209, 213, 215, 221, 224, 226, 227, 231, 233, 243, 380, 388, 421, 422, 423, 425, 434, 437, 440, 441], "break_when_all_don": [3, 119, 122, 125, 129, 135, 136, 148, 149, 152, 157, 158, 159], "conditionalskip": 3, "programmat": 3, "pretti": [3, 421, 426, 430, 438], "likewis": 3, "break_when_any_don": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 180, 231, 243, 249, 310, 435], "te": 3, "paragraph": 3, "deep": [3, 9, 184, 204, 253, 254, 255, 256, 259, 287, 325, 328, 340, 348, 349, 421, 434], "dive": 3, "gym3": 3, "envpool": [3, 143, 144], "simultan": [3, 23, 135, 143, 144, 148, 157, 436], "advantag": [3, 8, 262, 325, 327, 342, 345, 347, 360, 361, 362, 363, 364, 365, 367, 369, 371, 373, 374, 376, 417, 418, 421, 422, 423, 424, 435, 436, 441], "scale": [3, 4, 27, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 203, 207, 218, 225, 229, 240, 241, 246, 261, 267, 290, 291, 295, 296, 303, 304, 305, 311, 315, 317, 325, 326, 328, 341, 345, 346, 347, 348, 396, 402, 412, 416, 421, 422, 423, 424, 427, 435, 440], "varieti": [3, 11], "inherit": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 272, 276, 277, 343, 418, 423, 434, 435], "from_pixel": [3, 11, 120, 121, 123, 124, 128, 130, 131, 134, 135, 154, 184, 215, 378, 380, 421, 422, 424, 426, 430, 431, 437, 438, 440, 441], "81": [3, 107], "d": [3, 37, 57, 60, 64, 72, 73, 74, 89, 99, 100, 246, 264, 268, 311, 315, 440], "privat": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 239, 436, 441], "absenc": 3, "total": [3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 46, 48, 54, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 102, 108, 113, 327, 342, 345, 389, 391, 393, 398, 401, 402, 420, 421, 422, 423, 424, 428, 434, 435, 437, 438, 439, 440], "accord": [3, 14, 15, 17, 20, 21, 22, 23, 24, 45, 56, 58, 65, 66, 79, 102, 105, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 160, 161, 207, 218, 267, 279, 290, 295, 296, 358, 416, 417, 427, 428, 434, 436, 438], "inner": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 193, 233, 418, 422, 423, 435, 441], "kept": [3, 26, 106, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 175, 193, 220, 267, 295, 296, 428, 434], "wherev": 3, "lost": [3, 8, 239], "intern": [3, 45, 76, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 241, 419], "face": [3, 5, 8, 9, 426, 441], "NOT": [3, 90, 91, 98, 108, 212], "right": [3, 6, 7, 26, 66, 100, 107, 422, 423, 425, 435, 436, 441], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 37, 60, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 428], "annihil": 3, "supersed": [3, 26], "pettingzoowrapp": [3, 414], "group": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 165, 204, 223, 355, 416, 422, 427, 429, 435, 438], "__not__": [3, 311, 326, 328, 341, 346, 348, 350, 351], "constrain": [3, 203, 266, 270, 345, 441], "li": 3, "fact": [3, 7, 8, 421, 423, 426, 434, 435, 436, 437, 438, 441], "meaning": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "perfectli": [3, 418, 421, 425, 436], "meaningless": 3, "val": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 241, 388, 428, 440], "agent0": [3, 425], "agent1": 3, "overrid": [3, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 243, 258, 380, 412, 416], "bool": [3, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 175, 176, 177, 178, 180, 181, 184, 185, 189, 191, 193, 194, 195, 196, 198, 201, 203, 205, 206, 207, 209, 211, 213, 214, 216, 218, 219, 220, 223, 224, 226, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 294, 295, 296, 301, 302, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 354, 358, 360, 361, 362, 363, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 387, 388, 391, 392, 393, 395, 396, 398, 412, 422, 423, 425, 436, 440, 441], "500": [3, 421, 422], "note": [3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 172, 176, 191, 194, 231, 240, 241, 243, 248, 264, 266, 268, 270, 287, 311, 315, 335, 414, 417, 422, 425, 427, 433, 434, 435, 441], "launch": [3, 14, 15, 20, 21, 22, 23, 25, 148, 157], "bottleneck": [3, 8, 100, 107, 108], "great": [3, 7, 8, 425, 434, 440], "speedup": [3, 8, 434, 441], "precis": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 175, 191, 194, 265, 269, 421, 423], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 17, 93, 95, 115, 119, 122, 125, 129, 133, 136, 148, 149, 152, 157, 158, 159, 212, 441], "breakag": 3, "rais": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 160, 164, 165, 184, 197, 206, 216, 225, 226, 227, 231, 233, 240, 243, 245, 263, 287, 328, 343, 348, 388, 421, 423, 434, 435, 438], "mismatch": [3, 60, 422], "subprocess": [3, 14, 15, 20, 126, 148, 157], "multithreadedenv": [3, 414], "underneath": 3, "higher": [3, 4, 100, 187, 318, 421, 422, 423, 434, 438, 441], "cover": [3, 128, 130, 415, 423, 426, 429, 430, 436, 440], "type": [3, 12, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 102, 119, 122, 125, 129, 136, 139, 142, 145, 148, 149, 150, 151, 152, 157, 158, 159, 166, 172, 173, 175, 181, 184, 188, 191, 192, 195, 196, 201, 203, 205, 211, 213, 214, 220, 224, 226, 230, 231, 232, 233, 234, 236, 238, 240, 241, 243, 245, 250, 251, 271, 276, 277, 280, 288, 297, 299, 307, 311, 314, 315, 322, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 353, 355, 358, 366, 378, 410, 414, 416, 421, 422, 423, 425, 429, 434, 435, 436, 438, 441], "atari": [3, 4, 184, 251, 380, 425, 430, 441], "classic": [3, 142, 151, 422], "benchmark_batched_env": 3, "significantli": [3, 13, 21, 22, 23, 107, 108, 184, 417, 421, 422, 428, 435], "asyncenvpool": [3, 152, 158], "pool": [3, 119, 152, 158, 227], "concurr": [3, 119, 434, 435], "contrari": [3, 417], "permit": [3, 187, 198, 223, 235, 325, 327, 342, 345, 347], "job": [3, 7, 21, 22, 23, 25, 64, 73, 74, 102, 438, 440], "famili": 3, "interest": [3, 311, 315, 416, 422, 423, 426, 435, 436, 441], "prefer": [3, 14, 15, 20, 23, 26, 27, 57, 64, 73, 74, 107, 108, 119, 152, 158, 212, 220, 345, 350, 395, 416, 423, 434, 435, 438, 440], "pleas": [3, 30, 37, 42, 50, 60, 61, 67, 72, 76, 119, 122, 125, 128, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 181, 184, 201, 227, 231, 233, 243, 276, 277, 278, 328, 348, 415], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 148, 152], "threadingasyncenvpool": 3, "executor": [3, 21, 22, 23, 158], "functool": [3, 14, 15, 17, 20, 119], "s0": [3, 119], "clamp": [3, 119, 315, 318, 337, 398, 417, 434, 436], "env_index": [3, 119], "async_step_send": [3, 119, 152, 158], "s0_result": [3, 119], "async_step_recv": [3, 119, 152, 158], "close": [3, 17, 119, 129, 143, 203, 241, 325, 327, 342, 345, 378, 421, 422, 426, 433, 434, 436, 440], "seamlessli": [3, 436], "paradigm": [3, 20, 435], "decpodp": 3, "game": [3, 4, 5, 122, 140, 141, 146, 147, 251, 380, 425, 430], "thank": [3, 421, 425, 426, 440], "carrier": [3, 423, 424, 426, 438], "particular": [3, 30, 37, 42, 50, 60, 61, 67, 72, 78, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 233, 243, 417, 418, 422, 424, 426, 433, 435, 438], "thu": [3, 342, 435], "vma": [3, 162, 163, 378, 434, 435], "robot": [3, 5, 7, 211, 236, 238, 425, 435], "vmasenv": [3, 378, 414, 434, 435], "balanc": [3, 123, 124, 421, 422], "num_env": [3, 14, 15, 20, 24, 119, 128, 132, 144, 162, 163, 378, 434, 435], "n_agent": [3, 162, 163, 276, 277, 278, 288, 297, 358, 378, 417, 434, 435], "ground_rew": 3, "pos_rew": 3, "style": [3, 57, 64, 73, 74], "vari": [3, 128, 130, 131, 150, 151, 154, 162, 212, 417, 425, 435], "creation": [3, 148, 157, 441], "info_spec": [3, 148], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 28, 29, 31, 32, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 176, 177, 178, 195, 213, 260, 283, 286, 289, 307, 308, 311, 312, 313, 330, 333, 334, 358, 414, 424], "simpl": [3, 9, 18, 19, 30, 37, 42, 50, 54, 60, 61, 67, 72, 77, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 253, 310, 315, 330, 332, 343, 347, 417, 421, 422, 423, 426, 427, 428, 434, 435, 438, 441], "prefix": [3, 26, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 228, 231, 233, 243, 311, 328, 343, 348, 379, 424, 428, 441], "exactli": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 131, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 264, 268, 283, 328, 348, 421, 424, 429, 434, 435], "action_kei": [3, 14, 15, 17, 20, 21, 22, 23, 24, 45, 119, 122, 125, 129, 136, 148, 149, 152, 153, 157, 158, 159, 175, 177, 178, 193, 203, 205, 245, 247, 263, 272, 273, 287, 310, 417, 434, 435], "reward_kei": [3, 37, 39, 41, 45, 51, 70, 90, 91, 98, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 243, 247, 273, 392, 396, 434, 435], "set_kei": [3, 195, 325, 327, 328, 330, 333, 334, 335, 341, 342, 343, 345, 346, 347, 348, 358, 364, 421, 434, 435], "awai": [3, 423, 426, 434, 435, 440], "leaf": [3, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 202, 224, 226, 232, 315], "full": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 248, 266, 270, 308, 315, 389, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "autoresettransform": 3, "invalid": [3, 30, 37, 42, 50, 60, 61, 67, 72, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 165, 243, 274, 275], "nan": [3, 180, 239], "auto_reset": [3, 45, 119, 122, 125, 129, 135, 136, 148, 149, 152, 157, 158, 159, 180, 243, 436], "auto_reset_replac": [3, 180], "placehold": [3, 131, 195, 233], "set_gym_backend": [3, 14, 15, 17, 20, 119, 122, 125, 128, 129, 136, 148, 149, 152, 157, 158, 159, 168, 180, 414, 426, 440], "autoresettinggymenv": [3, 180], "self": [3, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 34, 35, 37, 42, 43, 50, 56, 58, 60, 61, 65, 67, 69, 72, 79, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 243, 244, 245, 247, 260, 263, 266, 270, 273, 276, 277, 288, 297, 311, 314, 319, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 418, 421, 436, 440], "super": [3, 142, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 247, 260, 273, 319, 326, 328, 329, 334, 341, 346, 348, 350, 351, 421, 436, 440], "td_reset": [3, 180], "exclud": [3, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 180, 184, 196, 288, 327, 342, 345, 434, 435, 438], "r": [3, 4, 45, 50, 122, 177, 178, 180, 187, 189, 207, 221, 228, 231, 240, 241, 246, 249, 265, 315, 324, 359, 378, 422, 436, 441], "3633e": [3, 180], "02": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 241, 422, 431], "4877e": [3, 180], "01": [3, 180, 207, 241, 246, 287, 321, 325, 327, 342, 345], "2849e": [3, 180], "7584e": [3, 180], "6609e": [3, 180], "6166e": [3, 180], "8366e": [3, 180], "2761e": [3, 180], "5685e": [3, 180], "4102e": [3, 180], "8111e": [3, 180], "9959e": [3, 180], "0865e": [3, 180], "5644e": [3, 180], "2119e": [3, 180], "2542e": [3, 180], "03": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 180, 207, 228], "9952e": [3, 180], "4059e": [3, 180], "2094e": [3, 180], "9009e": [3, 180], "5140e": [3, 180], "3554e": [3, 180], "2920e": [3, 180], "7893e": [3, 180], "6429e": [3, 180], "3057e": [3, 180], "2867e": [3, 180], "6963e": [3, 180], "3818e": [3, 180], "2576e": [3, 180], "2679e": [3, 180], "1640e": [3, 180], "00": [3, 120, 121, 180, 420, 439], "6972e": [3, 180], "0212e": [3, 180], "5959e": [3, 180], "4637e": [3, 180], "3121e": [3, 180], "2168e": [3, 180], "5232e": [3, 180], "7704e": [3, 180], "7457e": [3, 180], "4127e": [3, 180], "1064e": [3, 180], "0854e": [3, 180], "5712e": [3, 180], "2189e": [3, 180], "5235e": [3, 180], "8289e": [3, 180], "0009e": [3, 180], "0257e": [3, 180], "8893e": [3, 180], "5872e": [3, 180], "9405e": [3, 180], "7766e": [3, 180], "0403e": [3, 180], "0626e": [3, 180], "2959e": [3, 180], "7263e": [3, 180], "2775e": [3, 180], "9564e": [3, 180], "0411e": [3, 180], "6769e": [3, 180], "6354e": [3, 180], "8698e": [3, 180], "1765e": [3, 180], "6292e": [3, 180], "5375e": [3, 180], "1820e": [3, 180], "7023e": [3, 180], "5836e": [3, 180], "9016e": [3, 180], "4826e": [3, 180], "6191e": [3, 180], "6387e": [3, 180], "8667e": [3, 180], "2056e": [3, 180], "1147e": [3, 180], "5991e": [3, 180], "0278e": [3, 180], "5219e": [3, 180], "3067e": [3, 180], "6617e": [3, 180], "3322e": [3, 180], "2629e": [3, 180], "4599e": [3, 180], "7298e": [3, 180], "5848e": [3, 180], "0148e": [3, 180], "5745e": [3, 180], "6982e": [3, 180], "7877e": [3, 180], "3527e": [3, 180], "7285e": [3, 180], "6668e": [3, 180], "0583e": [3, 180], "6956e": [3, 180], "3962e": [3, 180], "9845e": [3, 180], "5015e": [3, 180], "5903e": [3, 180], "9993e": [3, 180], "9418e": [3, 180], "0196e": [3, 180], "6557e": [3, 180], "2109e": [3, 180], "8997e": [3, 180], "1507e": [3, 180], "7363e": [3, 180], "0310e": [3, 180], "9574e": [3, 180], "8980e": [3, 180], "0090e": [3, 180], "forecast": 3, "awar": [3, 7, 93, 94, 95, 96, 109, 111, 115, 266, 270, 422, 424], "detect": [3, 343, 417], "return_contigu": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 433], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 63, 65, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 113, 119, 122, 125, 127, 129, 136, 148, 149, 152, 157, 158, 159, 164, 175, 176, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 195, 196, 197, 198, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 245, 247, 263, 266, 270, 272, 273, 287, 306, 308, 310, 313, 314, 315, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 398, 421, 434, 436], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 31, 34, 36, 37, 42, 50, 54, 57, 60, 61, 66, 67, 72, 73, 80, 99, 100, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 177, 180, 184, 188, 191, 194, 203, 204, 207, 211, 216, 217, 218, 225, 226, 229, 232, 233, 236, 238, 241, 243, 245, 246, 248, 249, 258, 261, 264, 267, 268, 271, 274, 275, 279, 280, 286, 290, 291, 294, 296, 314, 318, 321, 323, 324, 325, 326, 327, 328, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 359, 365, 366, 367, 368, 369, 370, 371, 372, 373, 396, 421, 422, 438, 441], "_set_se": [3, 178, 181, 191, 194, 213, 436], "lazystackedtensordict": [3, 45, 69, 94, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 433], "float32": [3, 14, 15, 17, 31, 34, 37, 39, 45, 56, 57, 58, 60, 65, 66, 70, 72, 73, 74, 77, 78, 79, 80, 93, 94, 95, 99, 100, 107, 115, 119, 120, 121, 122, 125, 128, 129, 130, 134, 135, 136, 142, 145, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 177, 181, 191, 194, 195, 196, 201, 204, 207, 209, 213, 214, 216, 220, 223, 224, 226, 229, 234, 247, 249, 259, 260, 266, 270, 273, 287, 288, 289, 297, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 317, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 358, 416, 436], "exclusive_field": [3, 45, 94, 119], "stack_dim": [3, 45, 94, 119], "dramat": 3, "carefulli": [3, 434, 435, 441], "against": [3, 5, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 243, 302, 307, 308, 311, 312, 313, 314, 315, 326, 328, 341, 346, 348, 350, 351, 423, 434, 435], "plain": [3, 8, 426], "expens": [3, 100, 107, 108, 378, 438], "absent": [3, 34, 35, 43, 69, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 220, 233], "torchvis": [3, 11, 211, 238, 382, 434, 440, 441], "callabl": [3, 14, 15, 17, 18, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 126, 129, 136, 142, 148, 149, 152, 157, 158, 159, 174, 179, 181, 188, 189, 195, 201, 226, 233, 234, 243, 244, 250, 251, 271, 278, 315, 324, 343, 378, 403, 404, 410, 411, 412, 422, 438], "bring": [3, 423, 426, 441], "kind": [3, 64, 77, 428, 434, 438], "consult": 3, "resize_par": 3, "revers": [3, 268], "order": [3, 11, 17, 30, 37, 42, 50, 54, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 106, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 185, 191, 194, 201, 209, 223, 231, 233, 243, 286, 302, 307, 314, 316, 317, 319, 325, 326, 328, 329, 333, 334, 341, 345, 346, 347, 348, 350, 351, 422, 434, 435], "chain": [3, 56, 57, 58, 64, 65, 73, 74, 79, 136, 188, 193, 250, 251, 317, 441], "in_keys_inv": [3, 170, 187, 191, 192, 194, 201, 207, 208, 209, 213, 214, 216, 221, 230, 232, 234, 235, 421, 433, 436, 441], "append_transform": [3, 45, 57, 62, 63, 64, 73, 74, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 170, 177, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 201, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 249, 266, 270, 378, 421, 424, 434, 436, 438, 440, 441], "doubletofloat": [3, 421, 423, 433], "float64": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 123, 124, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 177, 188, 191, 194, 211, 226, 232, 233, 236, 238, 243, 314], "think": [3, 415, 423, 434, 435, 441], "in_": 3, "out_": 3, "perspect": [3, 260, 308, 335, 423, 425], "outer": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 418, 421, 422, 441], "ob": [3, 4, 8, 26, 34, 35, 43, 45, 57, 62, 63, 64, 69, 72, 73, 74, 79, 99, 102, 107, 108, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 175, 178, 180, 191, 192, 194, 207, 221, 223, 229, 253, 254, 255, 256, 276, 277, 278, 312, 319, 326, 328, 329, 334, 341, 346, 348, 350, 351, 360, 361, 362, 363, 422, 425, 433, 434, 436, 438, 440, 441], "obs_standard": 3, "out_keys_inv": [3, 170, 187, 191, 192, 194, 201, 207, 208, 209, 213, 214, 221, 223, 230, 232, 234, 235, 436], "illustr": [3, 421, 422, 427, 438], "chang": [3, 5, 7, 11, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 106, 107, 109, 111, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 181, 188, 191, 192, 194, 196, 203, 205, 213, 214, 220, 224, 230, 232, 233, 234, 240, 241, 243, 268, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 417, 421, 424, 434, 435, 436, 437, 438, 441], "schemat": [3, 417], "outermost": 3, "innermost": 3, "similar": [3, 30, 37, 42, 50, 52, 56, 58, 60, 61, 64, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 237, 238, 240, 241, 243, 303, 305, 311, 314, 315, 417, 421, 422, 423, 424, 425, 427, 428, 429, 430, 436, 438, 440, 441], "transform_action_spec": [3, 188, 192, 207, 232, 234, 235, 243], "spec_from_random_valu": 3, "_apply_transform": [3, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 436, 441], "rand": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 94, 102, 120, 121, 134, 135, 142, 146, 147, 153, 160, 161, 178, 181, 191, 194, 213, 223, 247, 273, 311, 325, 326, 328, 329, 330, 332, 333, 334, 341, 343, 345, 346, 348, 350, 351, 436, 440, 441], "approach": [3, 57, 64, 73, 74, 184, 207, 246, 276, 277, 350, 421, 423, 428, 429, 434, 441], "insid": [3, 56, 58, 65, 79, 148, 441], "did": [3, 64, 239, 366, 422, 423, 429, 438, 441], "_inv_apply_transform": [3, 177, 232, 243, 436, 441], "actiondiscret": 3, "rand_act": [3, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 181, 233, 426], "action_discret": 3, "addonetoob": 3, "Is": [3, 232], "rewrit": [3, 232], "_call": [3, 178, 180, 181, 183, 184, 185, 188, 189, 192, 193, 195, 196, 197, 198, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 436], "_inv_cal": [3, 177, 232, 243], "overwrit": [3, 232], "till": [3, 232, 239], "encapsul": [3, 232, 426, 427, 428], "forget": [3, 232, 268], "edit": [3, 232, 243, 429], "top": [3, 4, 113, 120, 121, 134, 135, 190, 232, 247, 273, 427], "transform_output_spec": [3, 181, 188, 191, 192, 196, 203, 205, 213, 214, 220, 224, 230, 232, 234, 241, 243], "transform_input_spec": [3, 177, 181, 188, 191, 192, 193, 205, 209, 213, 214, 219, 223, 224, 225, 226, 230, 232, 234, 237, 243], "transform_observation_spec": [3, 181, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 205, 207, 209, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 436], "transform_state_spec": [3, 188, 192, 207, 232, 234, 235, 243], "transform_reward_spec": [3, 181, 182, 187, 188, 191, 192, 196, 203, 204, 205, 213, 214, 217, 218, 219, 220, 221, 223, 224, 230, 232, 234, 235, 241, 243], "rewardsum": [3, 175, 232, 243, 434, 435], "undo": 3, "addonetoact": 3, "subtract": [3, 225], "regist": [3, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159, 160, 161, 172, 175, 191, 194, 195, 219, 231, 233, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 378, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 418, 421, 423, 426, 438], "manipul": [3, 4, 8, 123, 124, 211, 232, 236], "third_transform": 3, "unexpect": [3, 14, 15, 17, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 441], "behviour": 3, "fortun": [3, 424, 425, 426, 427, 430], "alreadi": [3, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 226, 243, 244, 315, 360, 361, 362, 363, 421, 423, 430, 434, 435], "catfram": [3, 310, 422], "notic": [3, 113, 184, 417, 423, 431, 436], "parenthood": 3, "henc": [3, 57, 176, 212, 276, 421, 423, 434, 435, 436], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 148, 157, 233, 378, 388, 436], "discret": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 128, 129, 130, 136, 140, 141, 148, 149, 150, 151, 152, 157, 158, 159, 162, 163, 177, 193, 201, 283, 286, 289, 332, 333, 334, 335, 416, 422, 427, 435], "might": [3, 56, 58, 59, 65, 79, 384, 415, 421, 426, 441], "action_mask": [3, 122, 134, 135, 150, 151, 155, 156, 178], "unavail": [3, 150, 151], "probabl": [3, 4, 8, 66, 102, 105, 248, 249, 258, 260, 263, 264, 266, 268, 270, 271, 274, 275, 283, 295, 296, 311, 315, 328, 345, 416, 417, 422, 425, 427, 440], "probabilistictensordictmodul": [3, 203, 315, 316, 417, 440], "tensordictsequenti": [3, 37, 60, 72, 249, 263, 266, 270, 287, 307, 310, 316, 317, 322, 416, 421, 422, 424, 425, 427, 431, 433, 434, 437, 440], "maskedcategor": [3, 275, 414], "linear": [3, 14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 62, 67, 72, 119, 120, 121, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 188, 203, 211, 226, 232, 233, 236, 238, 243, 247, 249, 250, 251, 253, 254, 255, 256, 260, 262, 263, 271, 273, 276, 277, 279, 280, 287, 289, 290, 291, 302, 303, 304, 305, 309, 310, 311, 312, 314, 317, 319, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 408, 416, 422, 433, 437, 440], "in_feat": 3, "out_feat": 3, "logit": [3, 58, 66, 259, 274, 275, 283, 286, 308, 311, 333, 334, 416], "dist": [3, 10, 274, 275, 283, 315, 417, 427], "distribution_class": [3, 203, 303, 304, 305, 306, 311, 315, 317, 325, 326, 328, 333, 334, 341, 345, 346, 347, 348, 416, 421, 423, 427, 434, 435, 440], "wrap": [3, 5, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 60, 61, 66, 67, 72, 119, 120, 121, 122, 125, 129, 130, 134, 135, 136, 141, 144, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 161, 163, 164, 172, 189, 231, 233, 243, 244, 266, 270, 298, 303, 304, 305, 310, 312, 315, 320, 343, 358, 416, 421, 422, 423, 424, 428, 431, 434, 435, 441], "actionmask": [3, 122], "your_base_env": 3, "mask_kei": [3, 26, 178, 212, 243], "itself": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 168, 180, 243, 343, 350, 423, 426], "ey": 3, "report": [3, 120, 121, 134, 135, 430], "foremost": 3, "callback": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 435], "ad": [3, 4, 17, 26, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 86, 99, 100, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 201, 219, 231, 233, 243, 246, 279, 280, 287, 324, 325, 327, 328, 330, 335, 342, 345, 348, 358, 422, 424, 425, 427, 434, 438, 440, 441], "tensordictrecord": [3, 414], "videorecord": [3, 11, 378, 414, 423, 430, 431, 434], "csvlogger": [3, 11, 378, 380, 414, 422, 430, 431, 434], "wandblogg": [3, 414, 430], "tensorboardlogg": [3, 408, 414, 430], "tag": [3, 7, 11, 378, 380, 382, 385, 412, 430, 431, 434], "mp4": [3, 378, 380, 382, 431, 434], "video_format": [3, 378, 380, 382, 431, 434], "whc": 3, "cwh": 3, "exp": [3, 324, 417], "al": [3, 14, 15, 17, 20, 27, 128, 130, 195, 209, 247, 425, 441], "pong": [3, 14, 15, 17, 20, 144, 209, 425, 441], "v5": [3, 14, 15, 17, 20, 128, 130, 144, 195, 209, 425, 441], "grow": [3, 94], "tediou": [3, 426], "workspac": [3, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201], "pixelrendertransform": [3, 414, 434], "stream": 3, "alik": [3, 378], "envcreat": [3, 17, 25, 148, 157, 231, 241, 378, 408, 409, 412, 414, 421, 422, 440, 441], "render_mod": [3, 378, 436], "rgb_arrai": [3, 378, 434, 435, 436], "uncom": [3, 430], "line": [3, 7, 30, 37, 42, 45, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 422, 430, 434, 435], "comment": [3, 418, 422, 440], "pixels_record": [3, 378], "mission": 3, "irrespect": [3, 314, 315], "dmcontrol": [3, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "jumanji": [3, 119, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159], "framework": [3, 4, 9, 25, 119, 120, 121, 122, 125, 129, 134, 135, 136, 142, 148, 149, 152, 157, 158, 159, 264, 440, 441], "Its": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 240, 243, 314, 364], "success": [3, 184, 228, 263, 328, 350, 422, 429, 431, 436, 438, 440], "foundat": [3, 5, 150, 151, 423, 435], "inspir": [3, 425, 436], "gone": [3, 4, 5, 310], "maintain": [3, 5, 9, 36, 52, 184, 241, 436], "concomittantli": 3, "problem": [3, 7, 8, 9, 17, 422, 423, 424, 429, 434, 435, 436, 438, 441], "decor": [3, 8, 172, 174, 244, 266, 270, 301, 343, 360, 361, 362, 363, 388, 424, 440], "relev": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 66, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 360, 361, 362, 363, 364, 387, 425, 436], "gym_backend": [3, 174, 414], "env1": [3, 249, 433], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 122, 174], "env2": [3, 433], "_env": [3, 6, 128, 441], "classic_control": 3, "pendulumenv": [3, 45, 414, 436], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 138, 168, 204], "side": [3, 4, 441], "v0": [3, 14, 15, 34, 35, 43, 69, 119, 122, 125, 129, 131, 134, 135, 136, 137, 138, 148, 149, 152, 157, 158, 159, 188, 204, 233, 240, 241, 388, 408], "26": [3, 108, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "fun": [3, 174, 244, 423, 434, 435], "reveal": 4, "curv": 4, "exploit": [4, 427], "cv": 4, "flip": [4, 135], "correspondingli": 4, "invers": [4, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 102, 177, 184, 191, 194, 196, 201, 207, 214, 216, 228, 230, 232, 234, 243, 323, 333, 341, 414, 436], "prescript": 4, "tune": [4, 27, 203, 434, 435, 437], "coeffici": [4, 27, 36, 66, 203, 435], "bonu": [4, 325, 327, 342, 345], "beta": [4, 57, 73, 99, 100, 333, 341, 342, 421, 422, 438, 440], "reduc": [4, 6, 33, 113, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 184, 189, 225, 241, 246, 248, 295, 414, 422, 434], "downstream": [4, 417, 421], "formul": [4, 434, 435], "rate": [4, 11, 240, 241, 359, 422, 423, 434, 435], "gradient": [4, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243, 248, 267, 275, 280, 283, 295, 296, 315, 325, 327, 328, 329, 333, 334, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 359, 360, 361, 362, 363, 398, 421, 423, 434, 435, 436], "easier": [4, 61, 416, 421, 440], "local": [4, 7, 10, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 63, 67, 72, 100, 107, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 241, 243, 276, 277, 288, 297, 358, 385, 387, 425, 430, 431, 434, 435], "optima": 4, "product": [4, 9, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 264, 265, 268, 269, 410, 411], "sum": [4, 24, 30, 37, 48, 54, 72, 113, 120, 121, 123, 124, 128, 130, 131, 134, 135, 143, 144, 154, 183, 204, 219, 274, 275, 295, 297, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 344, 345, 346, 347, 348, 350, 351, 359, 366, 417, 421, 422, 423, 424, 425, 428, 431, 434, 435, 436, 441], "stat": [4, 207, 240, 241, 402, 412, 422, 423], "w": [4, 102, 122, 146, 147, 184, 186, 190, 215, 229, 264, 287, 380, 422, 438], "yield": [4, 14, 15, 17, 24, 30, 37, 42, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343, 421, 428], "insight": [4, 425], "auxiliari": [4, 428], "credit": 4, "futur": [4, 26, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 90, 91, 98, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 211, 231, 233, 238, 243, 271, 325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 415], "spars": [4, 37, 424], "intermedi": [4, 14, 15, 37, 45, 60, 72, 183, 249, 266, 270, 308, 421, 425, 437], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 421], "discov": 4, "score": [4, 66, 284, 286], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 37, 57, 60, 62, 63, 64, 72, 73, 74, 79, 102, 122, 140, 141, 150, 151, 153, 162, 163, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 205, 206, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 247, 307, 312, 397, 416, 417, 421, 425, 426, 434, 438], "explicit": [4, 14, 15, 17, 244, 438], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 27, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 268, 333, 341, 423, 435], "addition": [4, 258], "timestep": [4, 66, 216, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 434, 435], "realli": 4, "huge": [4, 277, 424], "std": [4, 207, 240, 245, 285, 421, 441], "torchrlunseen": 4, "extrins": 4, "wrong": [4, 100, 107], "bonus": 4, "denser": 4, "prior": [4, 67, 291, 337, 435], "freshli": 4, "drop": [4, 106, 108, 175, 241], "meant": [4, 50, 142], "encourag": [4, 148, 286, 421, 422, 438], "measur": [4, 93, 95, 115, 120, 121, 134, 135, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 423, 429], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 27, 427], "ideal": [4, 207, 436], "distil": 4, "nois": [4, 242, 280, 287, 300, 346, 350, 351, 393, 412, 421, 434], "exploratori": [4, 325, 327, 342, 345], "misalign": 4, "trade": [4, 427], "unavoid": 4, "bootstrap": [4, 335, 360, 361, 367, 368, 421, 424], "noisi": [4, 279, 280, 300, 416], "unstabl": [4, 267, 295, 296], "inher": [4, 325, 345], "stochast": [4, 203, 261, 280, 281, 291, 326, 328, 331, 333, 334, 339, 341, 344, 346, 348, 416, 423, 427, 435], "enemi": 4, "pomdp": [4, 438], "loos": [4, 315, 416, 422, 423], "nonexist": 4, "sequenc": [4, 14, 15, 17, 20, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 69, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 102, 103, 105, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 154, 157, 158, 159, 170, 182, 183, 184, 185, 186, 190, 191, 193, 194, 198, 200, 201, 204, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 223, 225, 227, 228, 229, 230, 232, 234, 240, 241, 250, 251, 258, 260, 264, 268, 271, 274, 275, 276, 277, 283, 289, 293, 306, 316, 317, 331, 379, 380, 393, 394, 395, 397, 398, 416, 421, 423, 424, 425, 433, 434, 435, 441], "lstm": [4, 226, 269, 270, 425], "rel": [4, 102, 226, 258, 294, 421, 422, 434, 435, 438], "tend": 4, "stabl": [4, 9, 10, 145], "compens": 4, "descent": [4, 280], "minimum": [4, 80, 119, 148, 157, 217, 261, 294, 295, 296, 318, 321, 324, 326, 328, 334, 343, 344, 348, 389, 417, 421, 423, 431, 434, 435], "manual": [4, 11, 21, 23, 24, 45, 57, 62, 63, 64, 73, 74, 102, 129, 130, 421, 424, 438], "deviat": [4, 207, 240, 241, 245, 247, 261, 273, 279, 280, 285, 286, 345, 350, 351, 421, 427, 435], "radic": 4, "begin": [4, 14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 180, 264, 265, 268, 269, 324, 388, 417, 425, 426, 427, 428, 429, 430, 431], "stabil": [4, 199, 248, 325, 327, 342, 345, 347], "stage": [4, 421, 436], "never": [4, 14, 15, 20, 31, 80, 100, 228, 429, 440], "prevent": [4, 28, 29, 33, 34, 35, 38, 43, 46, 47, 48, 49, 54, 55, 62, 69, 91, 240, 241, 267, 295, 296, 325, 327, 342, 345, 347, 396, 430, 438], "entir": [4, 14, 15, 17, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 241, 276, 423, 426, 436, 438], "submit": [4, 128, 181, 415, 440], "system": [4, 5, 91, 423, 434, 435, 436], "adequ": [4, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 423, 434, 435], "infeas": 4, "allevi": [4, 416], "prune": [4, 136], "fire": [4, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "illeg": 4, "chess": [4, 122, 146, 147], "grasp": 4, "wherein": 4, "cumul": [4, 37, 219, 225, 247, 366, 423], "q": [4, 9, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 253, 254, 255, 256, 259, 260, 262, 288, 289, 297, 305, 308, 312, 313, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 346, 348, 350, 351, 358, 414, 421, 428], "flow": [4, 421, 423, 434, 435, 436, 438], "reparameter": [4, 258, 275, 283], "soft": [4, 340, 348, 349, 434], "critic": [4, 8, 303, 309, 325, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 421, 428], "clip": [4, 66, 187, 217, 325, 327, 342, 345, 347, 350, 351, 398, 423, 435, 436], "oppos": [4, 78], "incorrect": [4, 107], "thought": [4, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "region": 4, "squash": [4, 424, 440], "tanh": [4, 250, 251, 264, 265, 267, 268, 269, 271, 277, 294, 295, 296, 318, 423, 427, 434, 435, 436, 437], "prob": [4, 274, 275, 283, 286, 423, 435], "rememb": [4, 434], "remap": 4, "origin": [4, 8, 37, 56, 58, 59, 60, 65, 66, 72, 75, 79, 133, 192, 193, 203, 211, 233, 238, 243, 264, 311, 314, 315, 326, 328, 340, 341, 343, 345, 346, 348, 350, 351, 421, 425, 433, 436, 441], "world": [5, 142, 320, 337, 425, 430, 434, 435, 436, 441], "histor": 5, "ceas": 5, "farama": [5, 137, 138, 150, 151, 423, 436], "gymwrapp": [5, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 196, 220, 224, 239, 414, 423, 440], "feel": [5, 415, 431, 440], "free": [5, 7, 13, 21, 22, 23, 175, 191, 194, 325, 337, 345, 418, 423, 431, 435, 440], "gladli": 5, "prepar": [6, 41, 423], "conda": [6, 7, 415], "cmake": 6, "activ": [6, 7, 9, 45, 250, 251, 257, 261, 271, 276, 277, 327, 342, 345, 416, 436, 440], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 21, 24, 415], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 131], "y": [6, 7, 37, 60, 64, 72, 145, 262, 276, 298, 421, 435, 438], "facebookresearch": [6, 131], "subdirectori": 6, "verbos": [6, 431], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 86, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 213, 222, 243, 343, 434, 435, 440, 441], "command": [6, 7, 10, 152, 158, 159, 423, 434, 435, 436, 441], "readm": [6, 7, 162, 440], "md": [6, 7], "habitatenv": [6, 414], "_has_habitat": 6, "available_env": [6, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 441], "startswith": [6, 249, 417, 421, 428], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 126, 343, 421], "env_nam": [6, 119, 120, 122, 123, 125, 126, 128, 129, 131, 134, 136, 137, 143, 148, 149, 152, 154, 157, 158, 159, 421, 423, 441], "llvmlite": 6, "config": [6, 7, 211, 238, 252, 257, 285, 402, 403, 404, 406, 409], "var": [6, 7, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 241, 243, 328, 343, 348], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 307, 343], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 30, 33, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 328, 343, 348, 425, 438], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 425], "stand": [7, 40, 123, 124, 148, 157, 433, 436], "joint": [7, 422], "contact": [7, 59, 434], "engin": [7, 154, 436], "biomechan": 7, "graphic": 7, "anim": [7, 435], "area": 7, "demand": [7, 430, 441], "fast": [7, 9, 94, 120, 121, 175, 214, 346, 421, 422, 423, 440], "articul": 7, "acquir": [7, 423], "deepmind": [7, 8, 9, 119, 122, 123, 124, 125, 129, 136, 140, 141, 146, 147, 148, 149, 152, 157, 158, 159, 195, 423, 426], "whomev": 7, "licenc": 7, "incorpor": [7, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 263, 287, 350, 424, 427, 436], "relianc": 7, "obsolet": 7, "legaci": [7, 26], "pro": [7, 415], "tip": [7, 415], "glfw": [7, 421], "osmesa": 7, "egl": 7, "advic": [7, 441], "sudo": [7, 415], "apt": [7, 435], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 136, 303, 304, 305], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 417, 421, 423, 424, 434, 435, 438], "roboti": 7, "html": [7, 14, 15, 143, 145, 146, 147], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 20, 148, 157], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 56, 58, 78, 89], "bin": [7, 260, 286, 308, 416], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 256, 311, 315, 421, 423, 425, 438], "nvidia": [7, 133, 425], "older": [7, 244], "hack": [7, 421], "adatp": 7, "script": [7, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 388, 408, 412, 416, 417, 418, 421, 422, 425, 430, 434, 435, 436, 438], "unnot": [7, 212], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 91, 422, 438], "troubleshoot": 7, "gl": 7, "h": [7, 102, 184, 186, 190, 215, 229, 264, 265, 266, 268, 269, 270, 273, 380, 422, 438], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 33, 38, 48, 49, 54, 55], "directori": [7, 56, 58, 65, 78, 79, 93, 385, 387, 417, 418, 421, 427, 430, 434], "devel": 7, "ubuntu": [7, 133], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 422, 424, 433], "libstdc": 7, "glibcxx_3": 7, "29": [7, 107, 108], "compil": [7, 14, 15, 17, 26, 30, 37, 42, 50, 60, 61, 64, 67, 72, 73, 74, 92, 93, 94, 95, 96, 100, 103, 107, 108, 109, 114, 115, 117, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 244, 264, 265, 268, 269, 295, 360], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 14, 15, 17, 20, 30, 33, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 206, 231, 233, 243, 328, 348, 417, 441], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 107, 120, 121], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 434, 435], "global": [7, 30, 37, 42, 50, 60, 61, 64, 67, 72, 73, 74, 102, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 231, 243, 288, 297, 311, 315, 358, 418, 421, 434, 435], "cuda_visible_devic": 7, "id": [7, 19, 26, 66, 79, 100, 102, 107, 108, 119, 122, 125, 128, 129, 136, 148, 149, 152, 157, 158, 159, 160, 161, 287, 328, 346, 383, 387, 429, 438], "slurm_step_gpu": 7, "black": [7, 122, 434], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 435], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 418], "n_training_step": 8, "datapoint": [8, 78, 438], "n_data_per_train": 8, "no_grad": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 243, 248, 264, 265, 268, 269, 360, 361, 362, 363, 423, 424, 425, 435], "loss_fn": [8, 424, 428, 429, 440], "zero_grad": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 286, 418, 421, 423, 424, 425, 428, 431, 434, 435, 436], "backpropag": [8, 120, 121, 134, 135, 148, 325, 326, 327, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 428, 435, 436], "differenti": [8, 78, 120, 121, 203, 328, 350, 360, 361, 362, 363, 424, 427, 428, 434, 435, 436], "denomin": 8, "artifact": 8, "numer": [8, 64, 129, 240, 267, 295, 296, 302, 307, 308, 311, 312, 313, 314, 315, 396, 423, 438, 441], "misconcept": 8, "freed": 8, "appear": [8, 11, 31, 54, 79, 80, 100, 107, 108, 125, 417, 436, 438], "compuat": 8, "fix": [8, 36, 148, 226, 326, 328, 344, 348, 422, 431, 436, 441], "retain_graph": [8, 120, 121], "discuss": [8, 9, 429, 434, 435], "inplac": [8, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 314, 421], "forward": [8, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 207, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 279, 281, 282, 285, 287, 288, 290, 291, 293, 297, 298, 306, 308, 310, 311, 313, 314, 315, 318, 319, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 414, 417, 424, 436, 440], "submodul": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 168, 226, 243, 266, 270, 322, 343], "param": [8, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 181, 188, 191, 192, 196, 203, 205, 213, 214, 220, 224, 230, 232, 234, 241, 243, 258, 260, 276, 277, 278, 294, 306, 311, 314, 317, 343, 353, 357, 360, 361, 362, 363, 364, 421, 425, 431, 434, 435, 436, 437, 440], "grad": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 315, 421, 423], "whose": [8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 288, 314], "fit": [8, 61, 207, 226, 244, 417, 418, 421], "brax": [8, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 214, 426, 441], "jax": [8, 120, 121, 134, 135, 244], "improperli": 8, "underli": [8, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 343, 424, 426, 428, 430, 436], "tedeiou": 8, "priorit": [8, 57, 73, 99, 100, 328, 329, 330, 332, 333, 334, 341, 346, 348, 350, 351, 421, 422, 429, 440], "amount": [8, 148, 287, 422, 438], "costli": [8, 436], "constitut": [8, 422, 435, 436], "profil": 8, "frequent": [8, 45, 438], "program": [8, 333, 341, 425, 441], "functorch": [8, 10], "incl": 8, "suit": [8, 124, 423, 426, 440, 441], "mujoco_instal": 8, "valueerror": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 106, 209, 229, 425, 440, 441], "idea": [9, 346, 418, 424, 427, 434, 435], "introductori": 9, "intro": [9, 423, 424], "dai": [9, 440], "2022": [9, 10, 248, 440], "spin": [9, 123, 124], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 427], "summari": [9, 207, 240, 241, 421, 422, 423, 424], "reddit": 9, "reagent": 9, "orient": [9, 441], "baselines3": 9, "tf": 9, "bandit": [9, 145], "tensorflow": [9, 274, 275], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 425, 431], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 440], "grade": 9, "factori": [9, 14, 15, 17, 20, 21, 22, 23, 24, 62, 64, 73, 74, 75, 77, 421], "cherri": 9, "jaxrl": 9, "mbrl": [9, 142, 416], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 423, 424, 434, 435], "notebook": [10, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "24": [10, 108, 128, 143, 144, 286, 310, 380, 434], "pip3": [10, 421, 423, 424, 434, 435], "url": [10, 131], "org": [10, 14, 15, 27, 57, 99, 100, 120, 121, 123, 124, 131, 134, 135, 140, 141, 143, 144, 145, 154, 162, 163, 184, 211, 236, 246, 252, 253, 254, 255, 256, 257, 260, 261, 262, 268, 273, 274, 275, 280, 281, 282, 286, 287, 288, 290, 291, 297, 308, 325, 326, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 347, 348, 349, 350, 360, 365, 373, 413, 432, 437], "whl": 10, "u": [10, 264, 265, 268, 269, 436], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 184, 423, 434, 435, 436, 438], "power": [11, 422], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 220, 414], "ultim": [11, 267, 295, 296], "ffmpeg": 11, "whatev": [11, 417, 421], "fed": [11, 435, 438], "feed": [11, 211, 238, 343, 416, 421, 434, 435, 438], "suppos": [11, 148, 393, 418, 441], "snippet": [11, 211, 236, 421], "gave": 11, "extrem": [11, 148, 157, 325, 327, 342, 345, 347], "blurri": [11, 425], "stitch": 11, "exp_nam": [11, 380, 381, 382, 385, 386, 387, 408, 422, 430, 431], "my_exp": [11, 430], "pixels_onli": [11, 123, 124, 128, 130, 131, 154, 421, 422, 430, 431, 440, 441], "my_video": [11, 430], "record_env": [11, 430, 431], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 305, 416], "allow_non": 12, "unwrap": [12, 195, 233, 388], "seealso": 12, "timeout": [13, 14, 15, 17, 20, 21, 22, 23, 24, 148], "shutdown": [13, 14, 15, 17, 20, 21, 22, 23, 24, 152, 158, 181, 421, 422, 438, 440], "implic": [13, 21, 22, 23], "notimplementederror": [13, 21, 22, 23, 79, 421], "subclass": [13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 31, 34, 37, 42, 60, 61, 67, 72, 80, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 179, 180, 232, 239, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 314, 315, 316, 318, 321, 343, 345, 422, 424, 429, 436, 438], "policy_weight": [13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "kwarg": [13, 14, 15, 17, 20, 21, 23, 24, 29, 30, 31, 32, 34, 35, 37, 38, 42, 43, 44, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 91, 93, 94, 95, 96, 98, 99, 100, 102, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 171, 172, 178, 179, 181, 188, 211, 213, 222, 226, 231, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 249, 250, 251, 253, 254, 255, 256, 259, 262, 263, 266, 267, 270, 271, 272, 273, 276, 277, 278, 283, 287, 296, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 358, 359, 360, 361, 362, 363, 364, 378, 380, 384, 385, 387, 391, 398, 403, 404, 409, 410, 411, 417, 423, 425, 435], "upload": [13, 14, 15, 17, 20, 21, 22, 23, 24], "transfer": [13, 14, 15, 17, 20, 21, 22, 23, 24, 315], "fetch": [13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 56, 58, 65, 79, 120, 121, 123, 124, 203, 427, 437, 438], "typeerror": [13, 14, 15, 17, 20, 21, 22, 23, 24], "weight_updat": [13, 14, 15, 17, 20, 21, 22, 23, 24, 422], "overwritten": [13, 14, 15, 17, 20, 21, 22, 23, 24, 45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 198], "localweightsupdaterbas": [13, 14, 15, 17, 20, 21, 22, 23, 24], "remoteweightsupdaterbas": [13, 14, 15, 17, 20, 21, 22, 23, 24], "create_env_fn": [14, 15, 17, 20, 21, 22, 23, 24, 126, 148, 157, 421, 440], "policy_factori": [14, 15, 17, 20, 21, 22, 23, 24], "device_typ": [14, 17, 20, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 211, 236, 238, 250, 251, 252, 253, 254, 255, 256, 262, 271, 276, 277, 279, 280, 285, 288, 314, 395, 406], "env_devic": [14, 15, 17, 20, 21, 22, 23, 24, 422], "create_env_kwarg": [14, 15, 17, 20, 24, 126, 143, 148, 157, 231, 421, 441], "collector_class": [14, 15, 21, 22, 23, 24], "datacollectorbas": [14, 16, 18, 19, 22, 311, 315, 400, 403, 404, 408, 414], "postproc": [14, 15, 17, 20, 21, 22, 23, 24, 50, 216, 422, 438], "explorationtyp": [14, 15, 17, 20, 21, 22, 23, 24, 311, 343, 393, 416, 421, 422, 423, 424, 427, 434, 440], "interactiontyp": [14, 17, 20, 21, 22, 23, 24, 166, 173, 311, 315, 393], "preemptive_threshold": [14, 15, 20], "num_thread": [14, 15, 20, 56, 58, 65, 79, 129, 148, 157], "num_sub_thread": [14, 15, 20, 148, 157], "str": [14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 99, 100, 102, 113, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 173, 176, 180, 184, 195, 201, 202, 203, 211, 215, 224, 225, 228, 230, 231, 233, 234, 236, 238, 239, 240, 243, 244, 247, 259, 260, 266, 270, 272, 273, 276, 277, 278, 288, 289, 297, 302, 307, 308, 311, 312, 313, 314, 315, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 354, 358, 359, 360, 361, 362, 363, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 412, 422, 423, 425], "set_trunc": [14, 15, 17, 20, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "use_buff": [14, 15, 17, 148, 157], "extend_buff": [14, 15, 17], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 17, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "compile_polici": [14, 15, 17], "cudagraph_polici": [14, 15, 17], "no_cuda_sync": [14, 15, 17], "datacollector": [14, 15, 17, 20, 24, 50, 345, 423, 429, 438], "recept": 14, "safe": [14, 15, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 100, 107, 245, 287, 294, 295, 302, 307, 308, 311, 312, 313, 314, 315, 317, 416, 440], "sota": [14, 15, 142, 199, 347, 389, 403, 421, 422, 440], "guard": [14, 15], "doc": [14, 15, 75, 131, 134, 135, 145, 154, 387, 417, 422, 434, 435, 438], "env_mak": [14, 15, 17, 24, 62, 119, 408, 441], "2000": [14, 15, 17, 50, 78, 132, 286, 380, 438], "50": [14, 15, 17, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 66, 68, 69, 77, 80, 81, 82, 83, 84, 107, 108, 140, 141, 243, 424, 438], "del": [14, 15, 17, 421, 422, 423, 433, 434, 438, 440, 441], "int64": [14, 15, 17, 26, 28, 29, 33, 38, 39, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 65, 66, 70, 73, 75, 78, 79, 89, 99, 107, 119, 122, 125, 129, 136, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 177, 181, 195, 209, 216, 224, 260, 287, 289, 307, 308, 311, 312, 313, 416, 436], "tensordictmodulebas": [14, 15, 17, 20, 21, 22, 23, 24, 37, 60, 72, 183, 298, 307, 310, 312, 424], "undergon": [14, 15, 17, 20, 21, 22, 23, 24, 78], "env_obs_kei": [14, 15, 17, 20, 21, 22, 23, 24], "mustn": [14, 15, 17, 20, 21, 22, 23, 24], "pickl": [14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243], "exclus": [14, 15, 17, 20, 21, 22, 23, 24, 64, 73, 74, 85, 86, 100, 107, 108, 181, 196, 198, 264, 266, 268, 270, 274, 275, 307, 308, 312, 313, 349, 350, 351, 360, 361, 362, 363, 364, 387, 412, 416], "lifespan": [14, 15, 17, 20, 21, 22, 23, 422], "divis": [14, 15, 17, 20, 21, 22, 23, 30, 100, 107, 108, 241, 246, 435], "endless": [14, 15, 17, 20, 21, 22, 23], "sit": [14, 15, 17, 20, 21, 22, 23, 24, 400, 422], "cast": [14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 89, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 177, 178, 180, 181, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 314, 434, 441], "deriv": [14, 15, 21, 22, 23, 24, 76, 258, 398], "span": [14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 108], "n_step": [14, 15, 17, 20, 21, 22, 23, 24, 50, 243, 310, 422, 423, 434, 435], "mainli": [14, 15, 17, 20, 21, 22, 23, 24, 66, 387, 416, 434, 435, 436], "round": [14, 15, 17, 20, 21, 22, 23, 24, 122], "closest": [14, 15, 17, 20, 21, 22, 23, 24], "boolm": [14, 15, 20], "ratio": [14, 15, 20, 66, 421, 423], "finish": [14, 15, 17, 20, 24, 129, 216, 441], "earli": [14, 15, 20, 50, 129, 224, 440], "safeti": [14, 15, 20, 142, 148, 157, 241], "harm": [14, 15, 20, 148, 157], "add_truncated_kei": [14, 15, 17, 20, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233], "trust": [14, 15, 17, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 189, 270], "cudagraphmodul": [14, 15, 17, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "behaviour": [14, 15, 17, 37, 60, 72, 424, 425, 440], "bypass": [14, 15, 17, 427], "isaaclab": [14, 15, 17, 130], "maniskil": [14, 15, 17], "crash": [14, 15, 17, 216], "multiprocessedweightupdat": [14, 15], "ordereddict": [14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 240, 241, 243, 328, 348], "worker0": [14, 15, 20], "state_dict0": [14, 15, 20], "worker1": [14, 15, 20], "state_dict1": [14, 15, 20], "reset_idx": [14, 15, 20], "static_se": [14, 15, 17, 20, 24, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233], "increment": [14, 15, 17, 20, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 207, 342], "env_fn": [14, 15, 17, 20, 126, 410, 411], "env_fn_parallel": [14, 15, 17, 20], "300": [14, 15, 17, 20, 107, 108, 255, 256], "out_se": [14, 15, 17, 20, 441], "irrevers": [14, 15, 20], "tqdm": [14, 15, 17, 20, 57, 62, 63, 64, 73, 74, 102, 398, 421, 423, 424, 434, 435, 436], "ale_pi": [14, 15, 17, 20, 425], "10000": [14, 15, 20, 24, 148, 246, 398, 424], "progress": [14, 15, 17, 20, 391, 392, 393, 398, 418, 422, 424, 441], "bar": [14, 15, 17, 20, 93, 95, 115, 306, 391, 392, 393, 398, 418, 422], "pbar": [14, 15, 17, 20, 421, 423, 424, 434, 435, 436], "100_000": [14, 15, 17, 20, 425, 431], "prec_wc": [14, 15, 17, 20], "wc": [14, 15, 17, 20], "write_count": [14, 15, 17, 20, 57, 62, 63, 64, 73, 74, 102], "set_descript": [14, 15, 17, 20, 421, 423, 424, 434, 435, 436], "remote_collector": [16, 24], "max_interv": 16, "leverag": [16, 24, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 421, 435, 441], "date": [16, 122, 183, 383], "all_worker_id": [16, 18, 19], "_get_server_weight": [16, 19], "_maybe_map_weight": [16, 19], "_sync_weights_with_work": [16, 19], "_skip_upd": 16, "interv": [16, 177, 228, 379, 380, 390, 400, 422, 436], "raycollector": [16, 62, 414], "scope": [16, 18, 19, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 425, 441], "push_weight": [16, 18, 19], "push": [16, 18, 19], "noth": [16, 18, 19, 45, 136, 421, 423], "register_collector": [16, 18, 19], "return_same_td": 17, "interruptor": 17, "cautious": [17, 345], "whole": [17, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 78, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 311, 328, 348, 389, 421, 423], "_interruptor": 17, "outsid": [17, 192, 231, 417, 430, 434, 435, 436], "start_collect": 17, "stop_collect": 17, "preeptiv": 17, "init": [17, 24, 30, 37, 42, 50, 60, 61, 62, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 232, 240, 243, 276, 277, 278, 387, 422, 423], "chunk": [17, 427], "policy_state_dict": 17, "env_state_dict": 17, "256": [17, 89, 140, 141, 201, 257, 422, 423, 425, 434, 435], "weight_gett": 18, "vanillaweightsend": 18, "sender": 18, "weightupdatereceiverbas": 18, "update_weight": [18, 400], "piec": [19, 92, 103, 114, 117, 118, 421, 422, 423, 430, 434, 435, 436, 438], "scheme": [19, 418, 441], "hanld": 19, "unchang": [19, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 193, 211, 226, 232, 233, 236, 238, 243, 263, 314, 380, 395, 421, 438], "__call__": [19, 30, 37, 42, 50, 59, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 315, 418], "proxi": [19, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 275, 283, 311, 417], "weakref": [19, 45, 79], "registr": [19, 422], "exporationtyp": [21, 22, 23], "collector_kwarg": [21, 22, 23, 24], "num_workers_per_collector": [21, 22, 23, 24], "slurm_kwarg": [21, 22, 23], "update_after_each_batch": [21, 22, 23, 24], "max_weight_update_interv": [21, 22, 23, 24], "tcp_port": [21, 22, 23, 25], "respect": [21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 182, 188, 191, 194, 205, 211, 212, 221, 226, 232, 233, 236, 238, 243, 264, 268, 276, 291, 314, 319, 325, 327, 342, 345, 347, 360, 362, 363, 394, 417, 423, 424, 434, 435], "subnod": [21, 22, 23, 24], "readi": [21, 23, 24, 415, 422, 423, 425, 427, 430, 438, 440], "fashion": [21, 23, 24, 56, 58, 65, 79, 108], "distributed_back": [21, 22], "ucc": [21, 22], "submitit_delai": [21, 25], "former": [21, 22, 23, 26, 30, 37, 42, 57, 60, 61, 64, 67, 72, 73, 74, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321, 421], "whilst": [21, 22, 23], "homonym": [21, 22, 23, 436], "visit": [21, 22, 23, 79], "facebookincub": [21, 22, 23], "tcp": [21, 22, 23, 25], "port": [21, 22, 23, 25, 160], "10003": [21, 22, 23, 25], "distributedweightupdat": 21, "liter": [22, 79, 119, 301], "update_interv": 22, "frequenc": [22, 286, 421], "visible_devic": 23, "tensorpipe_opt": 23, "experiment": [23, 26, 54, 311, 315], "tensorpiperpcbackendopt": 23, "rpcweightupdat": 23, "ray_init_config": [24, 62], "remote_config": [24, 57, 62, 63, 64, 73, 74, 102], "num_collector": [24, 410, 411, 421, 422], "coordin": [24, 190], "autodetect": 24, "num_cpu": [24, 62], "num_gpu": [24, 62], "1024": [24, 62, 257, 438], "equat": [24, 60, 79, 129, 240, 241, 287, 324, 327, 349, 423, 426, 436], "exce": [24, 438], "indefinit": [24, 88], "rayreplaybuff": [24, 414], "enfoc": 24, "rayweightupdat": 24, "distributed_collector": [24, 62], "add_collector": 24, "local_polici": 24, "stop_remote_collector": 24, "num_job": 25, "tcpport": 25, "submitit_main_conf": 25, "slurm_cpus_per_task": 25, "slurm_gpus_per_nod": 25, "slurm_partit": 25, "timeout_min": 25, "submitit_collection_conf": 25, "delai": [25, 350, 428], "jump": [25, 426], "host": [25, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "satellit": 25, "rendezv": 25, "hang": 25, "forev": 25, "default_config": [25, 252, 257, 285, 306], "default_slurm_conf_main": 25, "default_slurm_conf": 25, "rollout_tensordict": 26, "nestedkei": [26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 65, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 100, 107, 108, 119, 122, 125, 129, 136, 148, 149, 152, 153, 157, 158, 159, 170, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 243, 245, 249, 260, 263, 287, 289, 306, 310, 315, 330, 358, 378, 380], "as_nest": 26, "x": [26, 37, 50, 60, 61, 64, 66, 67, 72, 108, 136, 201, 203, 229, 234, 244, 246, 248, 249, 251, 260, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 277, 298, 307, 311, 312, 321, 324, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 398, 421, 425, 434, 436, 438, 440], "durat": [26, 435], "meta": [26, 56, 58, 65, 77, 79, 127, 131, 325, 327, 342, 345, 347, 418, 423, 434, 435, 438], "aren": [26, 225, 424], "eventu": [26, 288, 424, 436], "recov": [26, 107, 108, 316, 333, 341, 433], "layout": 26, "to_padded_tensor": 26, "nested_tensor": [26, 128, 130], "stride": [26, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 250, 251, 253, 254, 262, 276, 422, 434, 440], "jag": 26, "focu": [26, 421, 422, 423, 425, 427, 428, 429, 434], "team": [26, 434, 435, 440], "cat": [26, 45, 319, 326, 328, 329, 341, 346, 348, 350, 351, 434, 438, 440], "arang": [26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 108, 177, 260, 274, 275, 307, 389, 416, 438], "obs_": 26, "trajectory_id": 26, "int32": [26, 30, 31, 45, 74, 80, 107, 134, 135, 146, 147, 159, 169, 310], "data_split": 26, "got": [26, 429], "init_kl_coef": 27, "horizon": [27, 140, 141, 162, 163, 247, 273, 423], "kl": [27, 36, 66, 203, 337, 342], "describ": [27, 56, 58, 65, 77, 79, 153, 185, 294, 295, 330, 383, 417, 421, 423, 434, 435, 436, 441], "ziegler": 27, "et": [27, 247], "relax": [27, 378], "penalti": [27, 66, 339, 342], "strai": [27, 66], "greater": [27, 100, 107, 108, 204, 205, 266, 270, 328, 421, 422], "increas": [27, 91, 184, 227, 248, 287, 434, 435], "pull": [27, 45, 79, 438], "toward": [27, 238], "aggress": 27, "kl_coef": [27, 36, 66], "arxiv": [27, 57, 99, 100, 120, 121, 123, 124, 134, 135, 140, 141, 143, 144, 154, 162, 163, 184, 211, 236, 246, 252, 253, 254, 255, 256, 257, 260, 261, 262, 268, 273, 280, 281, 282, 286, 287, 288, 290, 291, 297, 308, 325, 326, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 348, 349, 350, 360, 365, 373, 437], "pdf": [27, 184, 252, 253, 254, 255, 256, 260, 286, 287, 308, 328, 335, 339, 346, 349, 350, 360, 365, 373], "1909": 27, "08593": 27, "lm": 27, "blob": 27, "master": [27, 434, 435], "lm_human_prefer": 27, "train_polici": 27, "kl_valu": 27, "coef": [27, 203], "newest": 27, "int8": [28, 125, 139, 150, 151, 182], "encod": [28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 68, 69, 77, 80, 81, 82, 83, 84, 120, 121, 125, 128, 129, 130, 131, 134, 135, 143, 144, 146, 147, 154, 160, 161, 177, 193, 282, 283, 286, 290, 324, 422, 423, 424, 427, 436, 438], "null": [28, 31, 32, 34, 35, 37, 43, 44, 52, 53, 57, 68, 69, 73, 77, 80, 81, 82, 83, 84, 99, 100, 182, 201], "denot": [28, 435], "clariti": [28, 45], "assert_is_in": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "cardin": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 260, 289, 307, 308, 313, 423], "outcom": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 258, 274, 275, 294, 343, 434], "cartesian": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "clear_device_": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "is_in": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 441], "np": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129, 318, 378, 425, 434, 436], "ndarrai": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129, 287, 318, 378, 425, 434], "ignore_devic": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "arrai": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 66, 68, 69, 77, 80, 81, 82, 83, 84, 99, 119, 122, 125, 129, 130, 136, 148, 149, 152, 157, 158, 159, 195, 264, 265, 268, 269, 421, 434], "use_mask": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 150, 151], "erase_memoize_cach": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "memoiz": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129], "memoize_encod": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "compliant": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "singleton": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 250, 251, 271, 292, 293, 414, 417], "start_dim": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "end_dim": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "classmethod": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 236, 244, 251, 252, 285], "implements_for_spec": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "torch_funct": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "index_typ": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 52, 53, 68, 69, 77, 80, 81, 82, 83, 84], "tensor_to_index": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "exanpl": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "one_hot": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 260, 275, 289], "categ": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 311], "to_categorical_spec": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "idx_one_hot": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "idx_categ": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "to_categor": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "make_neg_dim": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "convert": [28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 154, 157, 158, 159, 160, 161, 188, 191, 194, 211, 226, 232, 233, 236, 238, 240, 241, 243, 314, 324, 343, 421, 422, 423, 436, 438], "shortcut": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 436, 441], "ndimens": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 421], "violat": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 416], "project": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 68, 69, 77, 80, 81, 82, 83, 84, 193, 245, 268, 287, 302, 307, 308, 311, 312, 313, 314, 315, 387, 416, 440, 441], "uniformli": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 101, 343, 441], "normal": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 63, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 207, 240, 241, 245, 246, 250, 251, 267, 271, 274, 275, 295, 296, 311, 315, 327, 328, 342, 345, 393, 396, 412, 416, 418, 424, 427, 435, 441], "drawn": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 226, 263, 311, 315, 423, 434, 435], "set_provisional_n": [28, 29, 33, 38, 46, 47], "temporarili": [28, 29, 33, 38, 46, 47, 91, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 429, 438], "dest": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 211, 236, 238, 314], "to_numpi": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "transformed_in": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 233, 294, 412], "check_spec_encod": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "to_one_hot": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "hot": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 120, 121, 128, 130, 131, 134, 135, 140, 141, 143, 144, 146, 147, 150, 151, 154, 160, 161, 162, 163, 177, 178, 193, 260, 283, 284, 289, 307, 308, 312, 313, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 424], "categ_sampl": [28, 29, 33, 38, 48, 49, 54, 55], "onehot_sampl": [28, 29, 33, 38, 48, 49], "to_one_hot_spec": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "categoricalbox": [28, 29, 33, 38, 48, 49, 54, 55, 149], "type_check": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "update_mask": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "disabl": [28, 29, 30, 33, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243, 267, 296, 378, 421, 434, 435], "unmask": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "ts": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "num_bit": 30, "convert_to_binari": 30, "decim": 30, "1001": 30, "bit": [30, 201, 423, 424, 426, 434, 435, 438], "heavysid": 30, "binary_to_decim": 30, "add_modul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "fn": [30, 37, 42, 50, 59, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 234, 243, 410, 411], "recurs": [30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 85, 86, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343, 425], "init_weight": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "m": [30, 37, 42, 46, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 193, 243, 249, 315, 422, 436], "fill_": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 422, 424], "net": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 254, 256, 259, 262, 277, 325, 326, 328, 334, 341, 345, 346, 347, 348, 408, 422, 436, 437, 440], "in_featur": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 250, 251, 253, 254, 255, 256, 262, 271, 276, 277, 279, 280, 303, 314, 322, 330, 332, 425, 427, 428], "out_featur": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 142, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 247, 250, 251, 253, 254, 255, 256, 261, 262, 266, 270, 271, 273, 276, 277, 279, 280, 303, 307, 314, 322, 330, 332, 416, 421, 424, 425, 427, 428, 431, 440], "bia": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 201, 211, 226, 231, 232, 233, 236, 238, 243, 246, 250, 251, 253, 254, 255, 256, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 277, 279, 280, 287, 314, 321, 323, 324, 328, 343, 348, 417, 421, 422, 423, 424, 435], "requires_grad": [30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 231, 233, 243, 286, 315, 328, 348], "bfloat16": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "datatyp": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 438], "member": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343, 380], "xdoctest": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 201, 211, 226, 231, 232, 233, 236, 238, 243, 314, 328, 343, 348], "buf": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "20l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343], "1l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343], "5l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343], "doubl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 191, 192, 194, 211, 226, 232, 233, 236, 238, 243, 314, 330, 335, 340, 346, 349, 358, 421, 422, 423, 424, 441], "eval": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 240, 243, 248, 416, 421, 422, 423], "evalu": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 130, 136, 140, 141, 148, 149, 152, 157, 158, 159, 233, 243, 248, 258, 274, 275, 283, 296, 346, 403, 404, 422, 423, 431], "dropout": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243, 248, 249, 264, 266, 268, 270, 271, 416, 424], "batchnorm": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243, 246], "comparison": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233, 243, 343, 421, 422], "extra_repr": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "recip": [30, 37, 42, 59, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 278, 281, 282, 285, 287, 290, 291, 293, 298, 306, 308, 310, 313, 318, 321], "get_buff": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "get_submodul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "qualifi": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "referenc": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "resolv": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "someth": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 139, 148, 149, 152, 157, 158, 159, 243, 415, 422, 423, 436, 441], "get_extra_st": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243], "set_extra_st": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243], "picklabl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243], "get_paramet": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "net_b": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "net_c": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "conv": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 250, 251, 422], "conv2d": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 251, 253, 254, 262, 276], "kernel_s": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 250, 251, 253, 254, 262, 276, 281, 422, 440], "diagram": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "degre": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 189, 243], "named_modul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "half": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314, 421], "ipu": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "strict": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 348, 425], "descend": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 348], "get_swap_module_params_on_convers": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 348], "persist": [30, 37, 40, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 201, 231, 233, 243, 328, 348], "preserv": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 314, 328, 348], "missing_kei": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 348], "unexpected_kei": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 348], "namedtupl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 231, 233, 243, 328, 348], "l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 264, 268, 359, 423, 436], "idx": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "mtia": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "named_buff": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "remove_dupl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343], "prepend": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 343, 425], "running_var": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "named_children": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "conv4": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "conv5": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "memo": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "named_paramet": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 243, 343], "register_backward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "removablehandl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "favor": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 243, 423], "register_full_backward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_buff": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "running_mean": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "alongsid": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 430], "num_featur": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 246], "register_forward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 260, 289], "with_kwarg": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "always_cal": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_module_forward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "regardless": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 327, 342, 345], "register_forward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "invok": [30, 37, 42, 50, 60, 61, 63, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "And": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 428], "forward_pr": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_module_forward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "ordinarili": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "grad_input": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "grad_output": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "technic": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 422, 424, 425, 427], "caller": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_module_full_backward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_full_backward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "backward_pr": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_module_full_backward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_load_state_dict_post_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "incompatible_kei": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "thrown": [30, 37, 42, 50, 60, 61, 67, 68, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 438], "register_load_state_dict_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "local_metadata": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "error_msg": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "noqa": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "b950": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_modul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 418], "alia": [30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 93, 94, 95, 96, 102, 109, 111, 115, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 358, 364], "register_paramet": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_state_dict_post_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "register_state_dict_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "keep_var": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 328, 348], "requires_grad_": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 425], "autograd": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 328, 348], "freez": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 240, 241, 243], "finetun": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "gan": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "set_submodul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "share_memori": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 126, 129, 136, 148, 149, 152, 157, 158, 159, 243, 421], "share_memory_": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243, 440], "destin": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 183, 191, 192, 194, 201, 231, 233, 236, 240, 243, 328, 348, 380], "averag": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 240, 241, 243, 287, 328, 336, 337, 348, 396, 421, 423], "shallow": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 328, 348, 424], "design": [30, 37, 42, 50, 52, 54, 60, 61, 67, 72, 105, 111, 118, 119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 177, 184, 201, 212, 231, 233, 241, 243, 306, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 358, 414, 421, 422, 423, 424, 426, 427, 428, 433, 434, 435, 436, 438, 440, 441], "detach": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 201, 231, 233, 243, 328, 339, 343, 348, 350, 360, 361, 362, 363, 421], "non_block": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314, 424], "memory_format": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "channels_last": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "tri": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314, 430], "pin": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "4d": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "ignore_w": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "1913": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "3420": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "5113": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "2325": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "torch_doctest_cuda1": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "gpu1": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "1914": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "5112": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "2324": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "float16": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 265, 269, 314], "cdoubl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "3741": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "j": [30, 37, 42, 50, 57, 60, 61, 67, 72, 99, 100, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314, 418, 428], "2382": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "5593": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "4443": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "complex128": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "6122": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "1150": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 188, 211, 226, 232, 233, 236, 238, 243, 314], "to_empti": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "dst_type": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "xpu": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "set_to_non": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 243], "upper": [31, 105, 206], "continuousbox": [31, 34, 80, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 169, 201, 204, 226, 234], "provision": 33, "descript": [34, 162, 180, 422, 423], "akin": 34, "unnam": 34, "compositespec": [34, 414, 436, 441], "constraint": [34, 142, 295, 423, 434, 435], "data_cl": 34, "tensorclass": [34, 56, 58, 65, 79, 89, 93, 95, 115], "pixels_spec": 34, "observation_vector_spec": 34, "composite_spec": 34, "observation_vector": [34, 185, 421], "_nodefault": [34, 35, 43, 69], "is_empti": [34, 35, 43, 69, 436], "include_nest": [34, 35, 43, 69], "leaves_onli": [34, 35, 43, 69], "is_leaf": [34, 35, 43, 69], "_compositespecitemsview": [34, 35, 43, 69], "_compositespeckeysview": [34, 35, 43, 69], "reflect": [34, 35, 43, 69, 130, 150, 151, 175, 201, 239, 343, 401, 422, 423, 424, 435], "lock_": [34, 35, 43, 69], "propag": [34, 35, 43, 69, 325, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363, 423, 434, 435], "succeed": [34, 35, 43, 69, 201, 234], "pop": [34, 35, 43, 69], "keyerror": [34, 35, 43, 69, 233], "extract": [34, 35, 43, 69, 180, 201, 230, 234, 309, 421, 423, 440], "selected_kei": [34, 35, 43, 69, 220, 421], "unlock_": [34, 35, 43, 69], "_compositespecvaluesview": [34, 35, 43, 69], "multipli": [36, 248, 264, 268, 325, 326, 327, 328, 334, 342, 344, 345, 346, 348, 396, 421, 434], "calcul": [36, 66, 216, 264, 325, 327, 332, 342, 345, 347, 350, 360], "reassign": 37, "reward2go": [37, 414], "reward_key_out": 37, "time_dim": [37, 360, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377], "unrol": [37, 336, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377], "discount": [37, 50, 126, 216, 243, 326, 332, 335, 336, 338, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 417, 422, 423, 434, 435], "lastrewardtotraj": 37, "last_reward_to_traj": 37, "new_tensordict": 37, "is_tdmodule_compat": [37, 60, 72], "reset_out_kei": [37, 60, 72], "orign": [37, 60, 72], "mod": [37, 60, 72, 203, 249, 266, 270, 310, 315, 318, 424, 425, 431], "select_out_kei": [37, 60, 72, 325, 326, 328, 329, 333, 334, 341, 345, 346, 348, 350, 351, 425], "reset_parameters_recurs": [37, 60, 72, 343], "relu": [37, 60, 72, 142, 247, 257, 273, 324], "old_param": [37, 60, 72], "bork": [37, 60, 72], "dork": [37, 60, 72], "reset_paramet": [37, 60, 72, 278], "from_modul": [37, 60, 72, 260, 314, 317, 440], "out_keys_sourc": [37, 60, 72], "rubric": [37, 60, 72, 207, 317], "revert": [37, 60, 72, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 427, 438], "seq": [37, 60, 72, 249, 264, 266, 268, 270, 310, 424, 425, 431, 433], "z": [37, 60, 72, 265], "shift_kei": [39, 41, 51, 70], "is_full_kei": [39, 41, 51, 70], "is_ful": [39, 41, 51, 70], "tempfil": [39, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 78, 79, 93, 102, 408, 421, 422, 424, 425, 429, 434, 437, 438], "register_save_hook": [39, 57, 62, 63, 64, 70, 73, 74, 102], "temporarydirectori": [39, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 78, 79, 102, 421, 422, 424, 425, 429, 434, 437, 438], "tmpdir": [39, 57, 62, 63, 64, 70, 73, 74, 78, 102, 421, 422, 425, 434], "rb_load": [39, 57, 62, 63, 64, 73, 74, 102], "register_load_hook": [39, 57, 62, 63, 64, 73, 74, 102], "filesystem": [40, 438], "ted2nest": [41, 414], "stackedcomposit": [43, 414], "tensordictmap": [45, 414], "observation_kei": [45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "excluded_kei": [45, 196], "consolid": [45, 72, 86, 95], "lazili": [45, 94, 277, 436], "from_tensordict_pair": [45, 72], "querymodul": [45, 72], "get_keys_from_env": 45, "cattensor": [45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 421, 433, 436, 441], "unsqueezetransform": [45, 184, 436, 438], "oracl": 45, "obs_kei": 45, "state_kei": [45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "reset_st": 45, "rollout0": 45, "rollout1": 45, "rollout1b": 45, "collaps": 45, "max_length": [45, 56, 58, 59, 75, 78, 79, 89, 230, 425, 431], "valid_path": [45, 79], "assert_clos": 45, "subtre": [45, 79], "intersect": [45, 244], "Or": [45, 155, 156, 276], "rollout_from_path": [45, 79], "plot": [45, 79, 421, 423, 424, 434, 435, 436], "_nestedkei": [45, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "return_nod": 45, "diverg": [45, 203, 311, 315, 337, 342], "endpoint": 45, "r0": [45, 421], "123": [45, 79], "392": [45, 79], "989": [45, 79], "809": [45, 79], "847": [45, 79], "r1": 45, "235": 45, "td_root": [45, 79], "node_data": [45, 79], "node_id": [45, 79], "nontensordata": [45, 52, 122, 146, 147, 201, 230, 234, 378], "_parent": [45, 79], "nontensorstack": [45, 52, 94, 119, 122, 136, 201, 230, 234], "0x716eeb78fbf0": 45, "0x": 45, "4341220243998689835": 45, "6745467818783115365": 45, "win": [45, 79], "to_str": [45, 79], "node_format_fn": [45, 79], "indent": [45, 79], "rollouts_data": [45, 79], "456": [45, 79], "359": [45, 79], "3094": [45, 79], "75": [45, 79, 107], "948": [45, 79], "68": [45, 79, 107], "9045": [45, 79], "rollout_data": [45, 79], "nvec": [46, 48], "remove_singleton": 46, "ax": [46, 279, 280, 434], "Not": [46, 47, 64, 120, 121, 134, 231, 266, 270], "neither": [46, 47, 48, 49, 160, 436], "use_regist": [48, 54], "mone_hot": [48, 49], "boxlist": [48, 49], "gamma": [50, 216, 243, 273, 325, 326, 328, 329, 330, 332, 334, 335, 336, 338, 341, 343, 345, 346, 347, 348, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 408, 417, 421, 422, 423, 434, 435, 440], "sutton": [50, 417, 434, 435], "1988": 50, "tempor": [50, 266, 270, 273, 361, 362, 367, 368], "44": [50, 107], "ahead": [50, 243, 441], "bias": [50, 264, 265, 268, 269, 321, 417, 421], "mitig": [50, 184], "multisteptransform": [50, 414], "99": [50, 216, 240, 273, 338, 353, 359, 366, 408, 421, 422, 423, 425, 428, 431, 434, 435, 440], "nontermin": 50, "original_reward": 50, "newli": [50, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "OR": 50, "row": [51, 71, 134, 135, 204], "example_data": 52, "conform": 52, "templat": [52, 381], "randomli": [52, 106, 159, 206, 207, 226, 263, 311, 315, 427, 434, 435, 436, 438], "unidimension": 54, "action_valu": [54, 259, 260, 289, 307, 308, 312, 313, 328, 334, 343, 358, 416, 424, 425, 427, 431], "keepdim": 54, "chosen_action_valu": [54, 288, 289, 297, 312, 313, 358, 416, 424, 427], "priori": 54, "uniqu": [54, 79, 107, 108, 136, 140, 141, 184, 195, 225, 226, 227, 231, 310, 387, 429, 438], "tensor_spec": [54, 153, 176, 178, 333, 334, 345, 347], "one_hot_sampl": [54, 55], "chosen_data": [56, 89], "rewarddata": [56, 89, 414], "rejected_data": [56, 89], "copy_exist": [56, 58, 65, 79], "return_earli": [56, 58, 65, 79], "share_non_tensor": [56, 58, 65, 79], "memmap": [56, 58, 65, 79, 93, 148, 157, 240, 380, 382, 395], "dataclass": [56, 58, 65, 77, 79, 343], "from_dataset": [56, 58, 89], "dataset_nam": [56, 58, 66, 78, 89, 145], "550": [56, 58, 66, 78, 89, 107, 108], "root_dir": [56, 58, 78, 89], "from_disk": [56, 58, 78, 89], "carperai": [56, 58, 66, 78], "openai_summarize_comparison": [56, 58, 78], "load_from_disk": [56, 58, 78, 89], "load_dataset": [56, 58, 78, 89], "attention_mask": [56, 58, 59, 65, 66, 75, 78, 89], "92534": 56, "input_id": [56, 58, 59, 65, 66, 75, 78, 89, 136], "end_scor": [56, 65, 66, 89], "sub_data": [56, 58], "from_tensordict": [56, 58, 65, 79], "non_tensordict": [56, 58, 65, 79], "getattr": [56, 58, 65, 79], "load_memmap": [56, 58, 65, 79], "load_": [56, 58, 65, 79], "load_memmap_": [56, 58, 65, 79], "fromkei": [56, 58, 65, 79], "saved_td": [56, 58, 65, 79], "td_load": [56, 58, 65, 79], "fake": [56, 58, 65, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 421, 422, 425], "_subclass": [56, 58, 65, 79], "faketensormod": [56, 58, 65, 79], "faketensor": [56, 58, 65, 79], "from_flatten": [56, 58, 65, 79], "attemptedli": [56, 58, 65, 79], "existsok": [56, 58, 65, 79, 93], "mimic": [56, 58, 65, 79, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "cross": [56, 58, 65, 79, 247], "tensordictfutur": [56, 58, 65, 79], "serialis": [56, 58, 65, 79], "deepli": [56, 58, 65, 79], "memmap_": [56, 58, 65, 79, 240], "memmap_lik": [56, 58, 65, 79], "contentless": [56, 58, 65, 79], "1_000_000": [56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 102, 107, 421, 424, 434], "alloc": [56, 58, 65, 79, 95, 258, 274, 275, 421], "memmap_refresh_": [56, 58, 65, 79], "refresh": [56, 58, 65, 79, 431, 434, 435], "saved_path": [56, 58, 65, 79], "setattr": [56, 58, 65, 79], "tent": [56, 58, 65, 78, 79], "to_tensordict": [56, 58, 65, 79, 424], "retain_non": [56, 58, 65, 79], "discrard": [56, 58, 65, 79], "alpha": [57, 73, 99, 100, 250, 251, 253, 254, 255, 256, 262, 276, 326, 328, 334, 344, 346, 348, 350, 421, 438, 440], "ep": [57, 73, 99, 100, 207, 240, 241, 246, 287, 327, 349, 396, 417, 421, 422, 424, 425, 428, 431], "1e": [57, 73, 99, 100, 207, 240, 241, 246, 258, 261, 294, 421, 422, 423, 435], "08": [57, 73, 99, 100], "pin_memori": [57, 64, 73, 74, 210, 421, 440], "schaul": [57, 99, 100], "quan": [57, 99, 100], "antonogl": [57, 99, 100], "silver": [57, 99, 100], "2015": [57, 99, 100], "ab": [57, 99, 100, 120, 121, 123, 124, 134, 135, 140, 141, 143, 144, 154, 162, 163, 183, 211, 236, 240, 246, 252, 257, 261, 262, 268, 273, 280, 281, 282, 288, 290, 291, 297, 325, 326, 330, 331, 332, 333, 336, 337, 338, 340, 341, 344, 345, 348, 437], "1511": [57, 99, 100, 262], "05952": [57, 99, 100], "expon": [57, 73, 99, 100], "\u03b1": [57, 73, 99, 100], "delta": [57, 73, 99, 100, 264, 268, 294, 311, 315, 414, 417, 434], "1_000": [57, 64, 73, 74, 434, 438], "mini": [57, 64, 73, 74, 435], "decid": [57, 64, 73, 74, 434, 440], "incompat": [57, 64, 73, 74, 347, 438], "drop_last": [57, 64, 73, 74, 106, 108], "notion": [57, 64, 73, 74, 286], "caution": [57, 64, 73, 74, 106, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 441], "codebas": [57, 64, 73, 74, 436], "return_info": [57, 62, 63, 64, 73, 74, 99, 100, 102, 438], "tensordictprioritizedreplaybuff": [57, 414, 440], "simplifi": [57, 172, 427, 436, 438], "_weight": [57, 73, 99, 100], "update_prior": [57, 99, 100, 395, 418, 422, 438, 440], "36278465": 57, "invert": [57, 62, 63, 64, 73, 74, 102, 323, 423], "as_remot": [57, 62, 63, 64, 73, 74, 102], "cl": [57, 62, 63, 64, 73, 74, 102, 422], "quantiti": [57, 62, 63, 64, 73, 74, 102], "reserv": [57, 62, 63, 64, 73, 74, 102, 418], "default_remote_class_config": [57, 62, 63, 64, 73, 74, 102], "randomsampl": [57, 62, 63, 64, 73, 74, 102, 421, 434], "td_error": [57, 62, 63, 64, 73, 74, 102, 328, 329, 330, 332, 333, 334, 335, 341, 343, 346, 348, 350, 351, 358, 421, 438, 440], "update_tensordict_prior": [57, 62, 63, 64, 73, 74, 102, 421, 438, 440], "insert_transform": [57, 62, 63, 64, 73, 74, 102, 179, 233], "insert": [57, 62, 63, 64, 73, 74, 92, 102, 103, 113, 114, 117, 118, 179, 184, 188, 223, 233, 235], "set_sampl": [57, 62, 63, 64, 73, 74, 102], "set_storag": [57, 62, 63, 64, 73, 74, 102], "set_writ": [57, 62, 63, 64, 73, 74, 102], "prompt_rindex": [58, 59, 66], "promptdatatldr": 58, "116722": 58, "prompt": [59, 66], "return_tensordict": [59, 75], "text": [59, 66, 75, 136, 264, 265, 268, 269, 287, 423], "tensodict": [59, 75], "valid_sampl": 59, "eough": 59, "toknen": 59, "meet": 59, "criterion": 59, "autotoken": [59, 75, 78], "from_pretrain": [59, 66, 75, 136], "gpt2": [59, 66, 75, 78, 136, 252, 257, 285], "pad_token": [59, 75], "eos_token": 59, "enough": [59, 438], "inde": [59, 193, 423, 425, 436], "index_kei": [60, 72], "hash_kei": 60, "_hash": 60, "hash_modul": [60, 67, 72], "siphash": [60, 61, 72, 136], "hash_to_int": 60, "hashtoint": 60, "query_modul": [60, 72], "key1": [60, 72, 185, 223, 389, 397, 440], "key2": [60, 72, 185, 223, 389, 397, 440], "write_hash": 60, "n_compon": 61, "dtype_cast": 61, "as_tensor": [61, 67, 425], "init_method": 61, "emb": [61, 424], "sklearn": [61, 145], "byte": [61, 67, 178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243], "builtin": [61, 67], "pythonhashse": [61, 67], "todo": 61, "optiona": 62, "transform_factori": [62, 64, 73, 74], "asyncio": [62, 119], "ray_buff": 62, "object_store_memori": 62, "600": [62, 66], "await": 62, "invoc": 63, "friendli": [63, 421], "include_info": [63, 73, 74], "storagecheckpointerbas": [64, 109], "roundrobinwrit": 64, "_pytre": [64, 438], "tree_map": [64, 438], "assert0": [64, 438], "ref_model": 66, "reward_model": [66, 320], "max_new_token": 66, "score_clip": 66, "kl_schedul": 66, "klcontrollerbas": 66, "num_step": [66, 425], "causal": 66, "sentenc": 66, "frozen": [66, 203, 240, 241], "gpt2rewardmodel": 66, "get_dataload": [66, 414], "promptdata": [66, 414], "gpt2lmheadmodel": 66, "dl": 66, "block_siz": [66, 89], "tensorclass_typ": [66, 89], "openai_summarize_tldr": 66, "config_class": 66, "model_path": 66, "rollout_from_model": 66, "rollout_from_data": 66, "reward_kl": [66, 203], "reward_raw": 66, "sample_log_prob": [66, 203, 303, 304, 305, 311, 315, 317, 345], "create_rollout_td": 66, "log_prob": [66, 258, 274, 275, 283, 286, 296, 315, 328, 417], "log_ratio": 66, "replic": [66, 417], "rindex": 66, "eo": 66, "generation_config": 66, "generationconfig": 66, "ti": [66, 369, 370, 371, 372, 374, 375, 376, 377, 422], "log_probs_gen": 66, "logprobs_of_label": 66, "hash_a": 67, "4669941682990263259": 67, "3778166555168484291": 67, "9122128731510687521": 67, "hash_b": 67, "heterogen": [68, 69, 94, 119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 164, 276, 277, 421, 422], "220": 70, "resembl": 72, "tensormap": 72, "collat": [72, 102], "subtyp": 72, "embedding_storag": 72, "tensor_dict_storag": 72, "new_index": 72, "key3": 72, "retrieve_valu": 72, "storage_constructor": 72, "write_fn": 72, "tensordictstorag": 72, "thumb": [72, 148, 423], "lazydynamicstorag": 72, "fixedstorag": 72, "randomprojectionhash": 72, "priority_kei": [73, 74, 99, 328, 330, 333, 334, 335, 341, 343, 346, 348, 350, 351, 358, 438, 440], "reduct": [73, 99, 100, 113, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 344, 345, 346, 347, 348, 350, 351], "prioritizedreplaybuff": [73, 414, 440], "min": [73, 99, 100, 113, 287, 326, 327, 328, 334, 344, 346, 348, 422, 423], "median": [73, 99, 100, 113, 129, 134, 135, 177, 311, 315], "huggingfac": [75, 309], "co": [75, 195, 436], "pad_trunc": 75, "am": 75, "me": 75, "reassur": 75, "ok": 75, "_encode_memo_dict": 77, "primarili": [77, 212, 427], "educ": 77, "guess": 77, "knowledg": [77, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 428, 430], "tokenizer_fn": 78, "tensordicttoken": [78, 414], "pre_tokenization_hook": 78, "valid_s": 78, "tokenizer_class": 78, "tokenizer_model_nam": 78, "tokein": 78, "elementwis": 78, "vocabulari": [78, 136, 230], "loader": [78, 423], "185068": 78, "dataset_to_tensordict": 78, "data_dir": 78, "batch_dim": [78, 119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 412], "valid_mask_kei": 78, "batch_dimens": 78, "filder": 78, "from_dict": 78, "data_memmap": 78, "ref": 79, "branching_act": 79, "prev_act": 79, "edg": [79, 425], "travers": 79, "breadth": 79, "bf": 79, "fully_expand": 79, "get_vertex_by_hash": 79, "get_vertex_by_id": 79, "is_termin": 79, "make_nod": 79, "node_observ": 79, "bag": 79, "num_children": 79, "num_vertic": 79, "count_repeat": 79, "recustruct": 79, "plotli": 79, "make_label": 79, "visual": [79, 211, 236, 238, 380, 423, 434, 436], "unsupport": 79, "selected_act": 79, "mctsforest": [79, 136, 414], "key_typ": 79, "recurse_through_entri": 86, "recurse_through_stack": 86, "infinit": [89, 140, 141, 162, 163, 241, 429, 438], "block": [89, 92, 118, 416, 421, 424, 425, 428, 429, 434, 438], "pairwisedataset": [89, 414], "checkpoint_fil": 91, "h5": 91, "h5_kwarg": 91, "iff": 91, "suffix": [91, 393], "h5py": 91, "create_dataset": 91, "consequ": [91, 268, 429], "immut": [92, 119, 122, 125, 129, 136, 148, 152, 157, 158, 214, 233], "scratch_dir": [93, 421, 422, 424, 429, 434, 437, 438], "sent": [93, 95, 115, 240], "mistak": [93, 95, 115], "overewritten": 93, "tensorstoragecheckpoint": 93, "pathlib": [93, 398, 425], "main_ckpt_dir": 93, "rb_memmap": 93, "10_000_000": 93, "myclass": [93, 95, 115], "foo": [93, 95, 115, 306, 438, 441], "attach": [93, 94, 95, 96, 109, 111, 115, 422], "entiti": [93, 94, 95, 96, 109, 111, 115], "lazystacktensordict": 94, "heterougen": 94, "linearli": 94, "densifi": 94, "unlimit": [94, 96], "st": 94, "expans": [95, 343], "zero_": [95, 115, 169], "liststoag": 97, "max_capac": [99, 100, 421, 438], "max_priority_within_buff": [99, 100], "data_0": 99, "data_1": 99, "smoothen": 99, "tdrb": 99, "pack": [99, 264, 268, 423, 426, 441], "nd": [99, 100], "1d": [99, 100, 107, 108, 113], "sum_tre": [99, 100], "min_tre": [99, 100], "slice_len": [100, 107, 108, 380], "end_kei": [100, 107, 108], "cache_valu": [100, 107, 108], "closer": [100, 440], "readili": [100, 107, 108, 315], "conjunct": [100, 107, 108, 422], "Will": [100, 107, 143, 380], "buffer0": [100, 107], "immutablewrit": [100, 107], "buffer1": [100, 107], "other_sampl": [100, 107], "shorter": [100, 107, 108], "short": [100, 107, 108, 119, 120, 121, 122, 125, 129, 134, 135, 136, 148, 149, 152, 157, 158, 159, 164, 268, 269, 422, 423, 426, 427, 435, 438], "Be": [100, 107, 108], "fewer": [100, 107], "tolist": 100, "120110917137936e": 100, "06": [100, 258, 294], "storageensembl": [102, 105], "samplerensembl": 102, "writerensembl": [102, 111], "sample_from_al": [102, 105], "num_buffer_sampl": [102, 105], "ensembl": [102, 105, 111, 112, 118, 314, 346], "forbidden": 102, "0x13a2ef430": 102, "0x13a2f9310": 102, "interpol": [102, 215, 422, 425], "interpolationmod": 102, "bilinear": [102, 215], "0x13a2f9220": 102, "0x13a2f9f70": 102, "0x13a2d9b50": 102, "0x13a2f95b0": 102, "0x128648260": 102, "roundrobin": [103, 114], "buffer_id": [105, 111], "shuffl": [106, 108, 435], "incomplet": [106, 108], "fresh": 106, "haven": [106, 437], "remain": [106, 183, 192, 193, 203, 225, 280, 428], "draw": [106, 263], "use_gpu": [107, 108], "slicesamplerwithoutreplac": [107, 438], "acceler": [107, 108, 129, 434, 435], "reconstruct": [107, 108, 337, 421, 441], "ep_1": [107, 108], "ep_2": [107, 108], "73": 107, "74": 107, "76": 107, "77": 107, "42": [107, 271, 286, 325, 326, 328, 329, 333, 341, 348], "43": 107, "45": 107, "67": [107, 433], "69": 107, "70": 107, "71": 107, "27": [107, 108, 120, 121, 148, 157], "28": [107, 108, 276], "31": [107, 134, 135], "80": [107, 120, 121], "82": 107, "83": 107, "84": [107, 215, 424, 425], "78": 107, "79": 107, "320": [107, 108, 123, 124], "700": [107, 108], "dataid": [107, 108], "available_dataset": [107, 108], "counter": [108, 231, 310, 391, 418, 425], "23": [108, 244], "request": [108, 181, 212], "51": 108, "__len__": 109, "rank_kei": 113, "rank": [113, 247], "samplerwithoutreplac": [113, 423, 435, 438], "get_insert_index": 113, "themselv": [119, 248, 422], "dens": [119, 274, 275], "maybe_dens": 119, "min_get": [119, 152, 158], "maker": [119, 412, 422], "sort": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 185, 287], "another_act": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "discretebox": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "mutabl": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "action_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 423, 435], "had": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 427, 429], "all_act": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "any_don": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "loc": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 207, 218, 240, 241, 267, 295, 296, 303, 304, 305, 311, 315, 317, 325, 326, 328, 341, 345, 346, 347, 348, 402, 412, 416, 421, 422, 423, 424, 427, 435, 440], "_callabletransform": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "auto_specs_": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "action_spac": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 195, 260, 289, 307, 308, 312, 313, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 424, 425, 427, 431], "check_dtyp": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164], "discrep": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 325, 327, 329, 330, 342, 345, 347, 358], "broken": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164], "rng": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 164, 436], "done_keys_group": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "another_don": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "done_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "empty_cach": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 233], "fake_tensordict": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 422, 425], "envnam": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "full_action_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 434, 435], "full_done_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "full_observation_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "full_reward_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "pipeline_st": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "full_state_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "input_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "is_spec_lock": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "maybe_reset": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "speak": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 189, 315, 421], "observation_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "output_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "register_gym": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 426], "entry_point": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "info_kei": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "reward_threshold": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "nondeterminist": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "max_episode_step": [119, 122, 125, 128, 129, 130, 136, 148, 149, 152, 157, 158, 159], "order_enforc": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "autoreset": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "disable_env_check": [119, 122, 125, 128, 129, 136, 143, 144, 148, 149, 152, 157, 158, 159], "apply_api_compat": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "nasium": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 172], "dmcontrolenv": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 380, 414, 421, 426, 433, 441], "dmc": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "cheetah": [119, 122, 123, 124, 125, 129, 136, 148, 149, 152, 157, 158, 159, 380, 421], "removeemptyspec": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "threshold": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 263, 326, 327, 423], "learnt": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 408], "checker": [119, 122, 125, 128, 129, 136, 143, 144, 148, 149, 152, 157, 158, 159], "stepapicompat": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "deem": [119, 122, 125, 129, 136, 140, 141, 148, 149, 152, 157, 158, 159, 162, 163], "task_nam": [119, 122, 123, 125, 129, 136, 148, 149, 152, 157, 158, 159], "envgym": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0855": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0215": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0881": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0412": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "1101": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0080": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0254": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0424": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "veloc": [119, 122, 123, 124, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 434, 435, 436, 441], "9609e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "9776e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "04": [119, 122, 125, 129, 133, 136, 148, 149, 152, 157, 158, 159, 228, 241], "6347e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "3842e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "5338e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "3064e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0381e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "6656e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "05": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 228, 246, 436], "0204e": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0833": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0275": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0612": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0770": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "1256": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0082": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0186": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0476": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "2221": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "2256": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "5930": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "6937": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "5865": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "5479": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0187": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "6825": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "5224": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0018": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "1005": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0335": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 189], "0268": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0133": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0627": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0074": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0488": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0353": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0075": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0069": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0098": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0058": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0033": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0157": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0004": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 228], "0381": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0452": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "11355747": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "04257728": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "00408397": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "04155852": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0389733": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "01409826": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0978704": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "08808327": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "03970837": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "00535434": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "02353762": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "05116226": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "02788907": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "06848346": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "05154399": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "0371798": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "05128025": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "dydact": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "ant": [119, 120, 121, 122, 125, 129, 132, 136, 148, 149, 152, 157, 158, 159, 437], "gym_env": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 440], "reset_kei": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 184, 219, 225, 226, 227, 434], "multitask": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "multiag": [119, 122, 125, 129, 136, 139, 148, 149, 150, 151, 152, 157, 158, 159, 176, 277, 288, 297, 327, 342, 345, 358], "another_reward": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "reward_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "auto_cast_to_devic": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 435], "soon": [119, 122, 125, 129, 136, 148, 149, 150, 151, 152, 157, 158, 159], "__sort": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "as__": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "categorical_action_encod": [119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 154, 157, 158, 159, 172, 425], "argmaxmodul": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "argmax": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 260, 289, 308, 313, 425, 427], "n_act": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 203, 325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 428], "ourselv": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 423, 441], "emul": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "epoch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 398, 423, 434, 435], "input_td": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "rollout_td": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "state_spec_unbatch": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "prevail": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 176, 185, 219], "next_tensordict": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175, 181, 185, 196, 197, 198, 210, 213, 214, 220, 223, 236, 240], "precomput": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159], "_stepmdp": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175], "exclude_act": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 175], "minim": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 382, 438], "reset_data": [119, 122, 125, 129, 136, 148, 149, 152, 157, 158, 159, 441], "googl": [120, 121, 140, 141, 146, 147, 246, 423, 424, 434, 435], "convers": [120, 121, 134, 135, 172, 417], "2106": [120, 121, 331, 350], "13281": [120, 121], "frame_skip": [120, 121, 123, 124, 128, 129, 130, 131, 134, 135, 137, 138, 143, 144, 154, 199, 391, 393, 401, 418, 421, 422, 423, 440], "allow_done_after_reset": [120, 121, 123, 124, 125, 128, 130, 131, 134, 135, 143, 144, 146, 147, 154, 160, 161], "toler": [120, 121, 123, 124, 128, 130, 131, 134, 135, 143, 144, 146, 147, 154, 160, 161, 258, 294], "is_avail": [120, 121, 421, 422, 423, 424, 434, 435, 437], "87": [120, 121], "acrobot": [120, 121, 123, 124, 441], "advant": [120, 121, 134, 135], "timer": [120, 121, 129, 134, 135], "timeit": [120, 121, 134, 135, 425], "310": [120, 121], "ms": [120, 121, 134, 135], "268": [120, 121], "433": [120, 121], "213": [120, 121], "8605": [120, 121], "pipelineenv": 121, "get_environ": 121, "san": 122, "fen": [122, 146, 147], "pgn": 122, "legal": 122, "board": [122, 159], "include_san": 122, "algebra": [122, 436], "notat": 122, "include_fen": 122, "forsyth": 122, "edward": 122, "include_pgn": 122, "portabl": [122, 430], "include_legal_mov": 122, "include_hash": 122, "mask_act": 122, "subset": [122, 436, 437], "29275": 122, "rnbqkbnr": [122, 146, 147], "pppppppp": [122, 146, 147], "kqkq": [122, 146, 147], "legal_mov": 122, "219": 122, "5p2": 122, "ppppp1pp": 122, "event": [122, 274, 275, 283, 369, 370, 371, 372, 374, 375, 376, 377, 438], "white": 122, "f4": 122, "96": 122, "kq": 122, "5n2": 122, "rnbqkb1r": 122, "nf3": 122, "na6": 122, "c4": 122, "f6": 122, "h4": 122, "rb8": 122, "na3": 122, "ra": 122, "get_legal_mov": 122, "uci": 122, "dm_control": [123, 124, 421, 433, 441], "2006": [123, 124, 326, 332], "12983": [123, 124], "240": [123, 124, 440], "swingup": [123, 124, 441], "swingup_spars": [123, 124], "ball_in_cup": [123, 124], "catch": [123, 124, 425], "balance_spars": [123, 124], "three_pol": [123, 124], "two_pol": [123, 124], "finger": [123, 124], "turn_easi": [123, 124], "turn_hard": [123, 124], "fish": [123, 124], "upright": [123, 124, 422], "swim": [123, 124], "hopper": [123, 124], "hop": [123, 124], "humanoid": [123, 124, 148, 157, 433], "walk": [123, 124, 148, 157, 422, 433], "run_pure_st": [123, 124], "bring_bal": [123, 124], "bring_peg": [123, 124], "insert_bal": [123, 124], "insert_peg": [123, 124], "point_mass": [123, 124], "reacher": [123, 124], "swimmer": [123, 124], "swimmer6": [123, 124], "swimmer15": [123, 124], "walker": [123, 124], "dog": [123, 124], "trot": [123, 124], "humanoid_cmu": [123, 124], "lqr": [123, 124], "lqr_2_1": [123, 124], "lqr_6_2": [123, 124], "quadrup": [123, 124], "escap": [123, 124], "stacker": [123, 124], "stack_2": [123, 124], "stack_4": [123, 124], "deviceless": 125, "run_type_check": [125, 142], "hint": 125, "counterenv": 125, "creator": [126, 403, 404, 410, 411, 412], "substitut": [126, 225, 240, 427], "vecnorm": [126, 241, 412], "env_creat": [126, 421], "test_env1": 126, "_td": [126, 336], "observation_count": [126, 441], "test_env2": 126, "ps": 126, "p1": 126, "p2": 126, "9934": 126, "make_vari": [126, 231], "variant": [126, 231, 248, 416], "trajcount": 126, "env_creator_pendulum": 126, "env_creator_cartpol": 126, "env_str": 127, "device_map": 127, "registri": [128, 160], "asyncvectorenv": 128, "pixel_observ": [128, 130, 131, 154], "pixelobservationwrapp": [128, 130, 131, 154], "adventur": [128, 130], "airraid": [128, 130, 441], "alien": [128, 130], "time_limit": 128, "timelimit": [128, 140, 141, 162, 163], "default_info_dict_read": [128, 129, 130, 148], "reader": [128, 129, 130, 148, 422], "set_info_dict_read": [128, 129, 130, 148, 426], "info_dict": [128, 129, 130, 148], "gymlikeenv": [128, 130, 414], "auto_register_info_dict": [128, 129, 130, 148], "multibinari": [128, 130], "multidiscret": [128, 130], "rag": [128, 130], "gym_conversion_exampl": [128, 130], "info_dict_read": [129, 148], "ignore_priv": 129, "baseinfodictread": 129, "tensordictprim": [129, 148, 249, 266, 270, 322, 416, 424], "succe": [129, 148], "underscor": 129, "primer": [129, 226, 249, 266, 270, 322, 424], "halfcheetah": [129, 148, 177, 215, 421, 440], "reward_ctrl": [129, 148], "reward_run": [129, 148], "x_posit": [129, 148], "x_veloc": [129, 148], "raise_if_clos": 129, "fast_encod": 129, "memoize_cach": 129, "adaptive_autorang": 129, "4f": [129, 423, 424, 436], "fp": [129, 380, 385, 387], "10141": 129, "5742fp": 129, "10576": 129, "8388fp": 129, "read_act": 129, "read_don": 129, "nonsens": 129, "fallback": 129, "read_ob": 129, "dictat": [129, 204, 311, 315, 345, 421, 436], "read_reward": 129, "hoc": [129, 148, 427], "dict_read": 129, "my_info_kei": 129, "some_env": 129, "vecenv": 130, "vectorenv": 130, "convert_actions_to_numpi": 130, "secur": 131, "habitat3": 131, "ai": [131, 437], "habitatrenderpick": 131, "isaacgym": [132, 133], "isaacgymwrapp": [132, 414], "isaacgymenv": [133, 414], "webpag": 133, "isaac": 133, "essenc": [133, 426], "instadeepai": [134, 135], "2306": [134, 135, 241], "09884": [134, 135], "snake": [134, 135], "grid": [134, 135, 380], "bodi": [134, 135], "body_st": [134, 135], "fruit_posit": [134, 135], "col": [134, 135], "head_posit": [134, 135], "tail": [134, 135], "game2048": [134, 135], "maze": [134, 135], "cleaner": [134, 135], "cvrp": [134, 135], "multicvrp": [134, 135], "minesweep": [134, 135], "rubikscub": [134, 135], "knapsack": [134, 135], "sudoku": [134, 135], "tsp": [134, 135], "connector": [134, 135], "v2": [134, 135, 155, 156, 354, 369, 370, 371, 372, 374, 375, 376, 377, 424], "mmst": [134, 135], "graphcolor": [134, 135], "partli": [134, 135], "scrambl": [134, 135], "robotwarehous": [134, 135], "tetri": [134, 135], "binpack": [134, 135], "jobshop": [134, 135], "0x1fca91910": 134, "122": [134, 135, 441], "0x1ff9baee0": 134, "134": [134, 135], "0x1ff9ba7c0": 134, "172": [134, 135], "jit": 135, "eager": 135, "tdreset": [135, 243, 433], "whichev": 135, "overview": [136, 423, 425, 428, 434, 435, 440], "vocab_s": 136, "hashing_modul": 136, "text_output": 136, "decod": [136, 170, 281], "batch_decod": 136, "text_kei": 136, "gpt2token": 136, "make_tensordict": 136, "mo": [137, 138], "minecart": [137, 138], "mo_gym": [138, 204], "qualnam": 139, "neural": [139, 150, 151, 250, 251, 284, 286, 292, 314, 416, 422, 423, 424, 427, 434, 435, 436, 441], "group_map": [139, 140, 141, 146, 147, 150, 151, 160, 161, 162, 163, 165, 434], "constructiuon": [139, 150, 151], "premad": [139, 140, 141, 150, 151, 162, 163, 358], "all_in_one_group": [139, 146, 147, 165], "agent_0": [139, 150, 151, 160, 165, 223], "agent_1": [139, 150, 151, 160, 165, 223], "agent_2": [139, 150, 151, 160, 165], "agent_3": [139, 160], "one_group_per_ag": [139, 150, 151], "meltingpot": [140, 141], "2211": [140, 141], "13746": [140, 141], "melt": [140, 141], "pot": [140, 141], "novel": [140, 141, 428], "social": [140, 141], "familiar": [140, 141, 422, 435, 441], "unfamiliar": [140, 141], "broad": [140, 141], "cooper": [140, 141, 434, 435], "decept": [140, 141], "reciproc": [140, 141], "stubborn": [140, 141], "substrat": [140, 141], "ml_collect": 140, "config_dict": 140, "configdict": 140, "categorical_act": [140, 141, 146, 147, 150, 151, 155, 156, 160, 161, 162, 163], "marlgroupmaptyp": [140, 141, 146, 147, 150, 151, 160, 161, 162, 163, 165, 414, 434], "agent_nam": [140, 141, 162, 163, 165], "agent_names_to_indices_map": [140, 141, 162, 163], "env_torchrl": [140, 141], "commons_harvest__open": [140, 141], "rgb": [140, 141], "144": [140, 141], "192": [140, 141], "collective_reward": [140, 141], "ready_to_shoot": [140, 141], "88": [140, 141, 155, 156], "substrate_config": 141, "get_config": 141, "mp_env": 141, "build_from_config": 141, "default_player_rol": 141, "mymbenv": [142, 247, 273], "world_model": [142, 247, 273, 337], "hidden_observ": [142, 247, 273], "mlp": [142, 247, 250, 251, 253, 254, 255, 256, 262, 266, 270, 273, 277, 278, 303, 307, 322, 330, 332, 416, 422, 425, 427, 428, 431, 433, 437, 440], "worldmodelwrapp": [142, 247, 273], "activation_class": [142, 247, 250, 251, 253, 254, 255, 256, 261, 262, 271, 273, 276, 277, 422, 427, 434, 435, 440], "activate_last_lay": [142, 247, 256, 271, 273], "sail": [143, 144], "sg": [143, 144], "2206": [143, 144], "10558": [143, 144], "readthedoc": [143, 146, 147], "en": [143, 146, 147], "python_interfac": 143, "envpoolmixin": 144, "env_bas": 144, "task_id": 144, "env_typ": 144, "gym_reset_return_info": 144, "envpool_env": 144, "www": [145, 274, 275], "fetch_openml": 145, "adult_num": 145, "adult_onehot": 145, "mushroom_num": 145, "mushroom_onehot": 145, "covertyp": 145, "shuttl": 145, "magic": [145, 425, 426], "106": 145, "openspiel": [146, 147], "open_spiel": [146, 147], "game_str": 146, "return_st": [146, 147, 150, 151], "4672": [146, 147], "current_play": [146, 147], "674": 146, "2048": [146, 147], "add_nois": [146, 147], "amazon": [146, 147], "backgammon": [146, 147], "restor": [146, 147], "td_restor": [146, 147], "pyspiel": 147, "load_gam": 147, "new_initial_st": 147, "3009": 147, "my_env_fun": [148, 157], "custom_attribute_list": [148, 157], "custom_attribut": [148, 157], "custom_method_list": [148, 157], "custom_method": [148, 157], "deploi": [148, 157, 181, 425], "slight": [148, 157, 422], "share_individual_td": [148, 157], "shared_memori": [148, 157], "policy_proof": [148, 157], "ll": [148, 157, 264, 265, 268, 269, 421, 422, 423, 424, 426, 427, 428, 429, 431, 435, 441], "hidden": [148, 157, 183, 253, 261, 264, 265, 266, 268, 269, 270, 281, 282, 290, 291, 303, 304, 305, 306, 314, 317, 327, 342, 345, 416, 424, 433, 440], "serial_for_singl": [148, 157, 422], "circular": [148, 157, 421], "list_of_kwarg": [148, 157], "com_veloc": [148, 157], "head_height": [148, 157], "joint_angl": [148, 157], "torso_vert": [148, 157], "idl": 148, "batched_pipe_timeout": 148, "stringent": [148, 423, 434, 435], "penv": [148, 231], "env_fix": 148, "influenc": 148, "myenv": [148, 181, 191, 194], "pipe": 148, "update_kwarg": [148, 157], "th": [149, 198, 235, 264, 268, 436], "thdot": [149, 436], "max_spe": [149, 436], "max_torqu": [149, 436], "gen_param": [149, 436], "gravit": [149, 436], "torqu": [149, 436], "pettingzoo": [150, 151, 434, 435], "pet": [150, 151], "zoo": [150, 151], "__": [150, 151], "aecenv": [150, 151], "dead": [150, 151], "done_on_ani": [150, 151, 434], "compulsori": [150, 151], "adversary_0": [150, 151], "adversari": [150, 151, 339, 434], "sisl": 150, "multiwalker_v9": 150, "aec": [150, 151], "n_piston": [150, 151], "pistonball_v6": [150, 151], "piston": [150, 151], "piston_0": [150, 151], "piston_1": [150, 151], "piston_20": [150, 151], "tictactoe_v3": [150, 151], "player": [150, 151, 159], "player_1": [150, 151], "player_2": [150, 151], "butterfli": 151, "parallel_env": [151, 421, 440, 441], "_setup": [152, 158], "queue": [152, 240, 438, 440], "async_reset_send": [152, 158], "async_reset_recv": [152, 158], "cube": 153, "roboh": 154, "expos": [154, 191, 194, 316, 422], "vikashplu": 154, "wiki": 154, "2310": 154, "06828": 154, "from_depth": 154, "smacv2": [155, 156], "starcraft": [155, 156], "challeng": [155, 156, 426, 436, 437], "10gen_terran": [155, 156], "10gen_zerg": [155, 156], "10gen_protoss": [155, 156], "3m": [155, 156], "8m": [155, 156], "25m": [155, 156], "5m_vs_6m": [155, 156], "8m_vs_9m": [155, 156], "10m_vs_11m": [155, 156], "27m_vs_30m": [155, 156], "mmm": [155, 156], "mmm2": [155, 156], "2s3z": [155, 156], "3s5z": [155, 156], "3s5z_vs_3s6z": [155, 156], "3s_vs_3z": [155, 156], "3s_vs_4z": [155, 156], "3s_vs_5z": [155, 156], "1c3s5z": [155, 156], "2m_vs_1z": [155, 156], "corridor": [155, 156], "6h_vs_8z": [155, 156], "2s_vs_1sc": [155, 156], "so_many_banel": [155, 156], "bane_vs_ban": [155, 156], "2c_vs_64zg": [155, 156], "old": [155, 156, 241, 342, 441], "smac": [155, 156], "map_nam": [155, 156], "176": [155, 156], "battle_won": [155, 156], "dead_al": [155, 156], "dead_enemi": [155, 156], "episode_limit": [155, 156], "322": [155, 156], "procedur": [155, 156], "distribution_config": [155, 156], "n_unit": [155, 156], "n_enemi": [155, 156], "team_gen": [155, 156], "dist_typ": [155, 156], "weighted_team": [155, 156], "unit_typ": [155, 156], "marin": [155, 156], "maraud": [155, 156], "medivac": [155, 156], "exception_unit_typ": [155, 156], "start_posit": [155, 156], "surrounded_and_reflect": [155, 156], "map_x": [155, 156], "map_i": [155, 156], "capability_config": [155, 156], "131": [155, 156], "starcraft2env": 156, "tic": 159, "tac": 159, "toe": 159, "single_play": 159, "player1": 159, "desired_batch_s": 159, "player0": 159, "uniti": [160, 161], "ml": [160, 161], "technolog": [160, 161], "llapi": [160, 161], "mlagents_env": [160, 161], "unityenviron": [160, 161], "file_nam": 160, "registered_nam": 160, "nor": 160, "localhost": 160, "connect": 160, "3dball": 160, "group_0": 160, "vectorsensor_size8": 160, "continuous_act": [160, 162, 163, 378, 434, 435], "agent_10": 160, "agent_11": 160, "agent_4": 160, "agent_5": 160, "agent_6": 160, "agent_7": 160, "agent_8": 160, "agent_9": 160, "group_reward": 160, "proroklab": [162, 163], "vectorizedmultiagentsimul": [162, 163], "2207": [162, 163], "03530": [162, 163], "basescenario": 162, "defaultt": 162, "chosen": [162, 163, 225, 226, 288, 289, 297, 313, 380, 416, 430], "sparsiti": 162, "unbatched_action_spec": [162, 163], "unbatched_observation_spec": [162, 163], "unbatched_reward_spec": [162, 163], "het_spec": [162, 163], "het_specs_map": [162, 163], "flock": [162, 163, 378], "agent_collision_rew": [162, 163], "agent_distance_rew": [162, 163], "ca": 165, "environment4": 165, "get_group_map": 165, "sumbodul": 168, "unsqueeze_null_shap": 169, "dynamic_shap": 169, "model_bas": [170, 171, 247, 273], "model_based_env": [170, 336], "dreamerenv": [170, 336, 414], "model_based_env_ev": 170, "spec_typ": 172, "convert_specnam": 172, "remap_state_to_observ": 172, "spectyp": 172, "unus": 172, "probabilistictdmodul": [173, 271, 311, 315, 359, 393], "keep_oth": [175, 436], "exclude_reward": 175, "exclude_don": 175, "next_": 175, "write_full_fals": 176, "_terminated_or_trunc": 176, "num_interv": 177, "out_action_kei": 177, "samplingstrategi": 177, "optino": 177, "intenum": 177, "action_disc": 177, "masker": 178, "maskedenv": 178, "ones_lik": [178, 274], "scatter": 178, "transformthatmeasuresbyt": [178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243], "bytes_in_td": [178, 180, 181, 183, 184, 185, 188, 189, 192, 195, 196, 197, 199, 202, 203, 210, 212, 213, 214, 216, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239, 240, 243], "fill_float": 180, "fill_int": 180, "fill_bool": 180, "someenvclass": 180, "autoresetenv": 180, "fooenv": 180, "sign": [180, 221, 360, 434], "envtyp": 180, "reshape_fn": [181, 425], "reset_func": 181, "env_kwarg": [181, 410, 411, 421], "accompani": [181, 224], "tensordict_batch_s": 181, "tensordict_reset": [181, 436], "transform_env_batch_s": [181, 188, 232, 243], "transform_full_done_spec": [181, 188, 191, 192, 196, 203, 205, 213, 214, 220, 224, 230, 232, 234, 241, 243], "biner": 182, "burn_in": 183, "burn": 183, "burnt": 183, "gru_modul": [183, 266, 322], "input_s": [183, 226, 264, 265, 266, 268, 269, 270, 322, 424, 425], "hidden_s": [183, 226, 264, 265, 266, 268, 269, 270, 322, 424, 425], "default_recurrent_mod": [183, 266, 270], "burn_in_transform": 183, "gru": [183, 226, 265, 266, 322, 425], "num_lay": [183, 264, 266, 268, 270, 281, 282, 322, 425], "is_init": [183, 202, 266, 270, 287, 310, 322, 424, 425], "86": 183, "3008": 183, "0344": 183, "padding_valu": [184, 274, 275], "as_invers": 184, "movement": 184, "1312": 184, "5602": 184, "consumpt": [184, 414], "pictur": 184, "pixels_trsf": [184, 438], "grayscal": [184, 422, 424, 425, 438, 441], "data_exclud": [184, 438], "make_rb_transform_and_sampl": 184, "sampler_kwarg": 184, "redund": [184, 424], "del_kei": [185, 223, 236, 433, 436], "unsqueeze_if_oor": 185, "observation_posit": 185, "observation_veloc": 185, "delet": [185, 223, 387], "crop": [186, 212, 380], "center": [186, 286, 380], "width": [186, 190, 215], "height": [186, 190, 215], "squar": [186, 190, 267, 295, 296, 380], "scalar": [187, 217, 245, 254, 256, 263, 279, 280, 287, 321, 325, 326, 327, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 358, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 416, 422, 428, 436], "rewardsc": [188, 233, 421, 422, 424], "rewardclip": 188, "transformed_env": [188, 233, 426], "transform_env_devic": [188, 192, 232, 243], "cond": 189, "met": [189, 324, 434, 436], "altogeth": 189, "exectu": 189, "palliat": [189, 427], "step_count_kei": [189, 224], "inner_count": 189, "middle_env": 189, "middle_count": 189, "auto_unwrap": [189, 233, 388], "9670": 189, "2546": 189, "9669": 189, "9802": 189, "1981": 189, "1601": 189, "9926": 189, "1214": 189, "5556": 189, "9994": 189, "7622": 189, "9984": 189, "0561": 189, "7933": 189, "9895": 189, "1445": 189, "7779": 189, "dtype_in": 191, "dtype_out": 191, "scan": [191, 194, 316, 317], "resp": [191, 194], "not_transform": [191, 194], "orig_devic": 192, "unspecifi": 192, "transform_done_spec": [192, 223, 230, 232, 234, 243], "num_actions_effect": 193, "max_act": 193, "include_forward": 193, "num_act": [193, 251, 334, 425, 427], "action_out": 193, "eol_kei": 195, "lives_kei": 195, "eol_attribut": 195, "breakout": 195, "210": [195, 209], "160": [195, 209], "eol_transform": 195, "eol": 195, "dqnloss": [195, 325, 326, 328, 329, 332, 334, 335, 336, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 358, 405, 414, 417, 422, 424, 425, 431], "register_kei": 195, "loss_or_advantag": 195, "lossmodul": [195, 398, 407, 408, 414, 417], "valueestimatorbas": [195, 343, 414], "finit": [197, 286, 427, 438], "first_dim": 198, "last_dim": 198, "allow_positive_dim": [198, 223, 235], "frameskip": 198, "repeatedli": [199, 423, 435], "hash_fn": 201, "use_raw_nontensor": [201, 230, 234], "repertoir": 201, "reproducible_hash": 201, "unarytransform": 201, "observation_str": 201, "tobyt": [201, 234], "observation_hash": 201, "x08": 201, "x8b": 201, "xbexav": 201, "xbf": 201, "x00": 201, "xee": 201, "xb5": 201, "x17": 201, "x8f": 201, "xbe": [201, 234], "x88": 201, "xccu": 201, "xc0vr": 201, "get_input_from_hash": 201, "hash_tensor": 201, "init_kei": [202, 310], "tracker": 202, "log_prob_kei": [203, 315, 417], "pi_curr": 203, "pi_0": 203, "overfit": 203, "probabilist": [203, 311, 325, 345, 414, 423, 440], "get_dist": [203, 315, 316], "normalparamextractor": [203, 303, 304, 305, 311, 317, 325, 326, 328, 334, 341, 345, 346, 347, 348, 350, 351, 416, 423, 427, 435, 440], "probabilisticactor": [203, 303, 304, 305, 306, 325, 326, 328, 331, 333, 334, 341, 344, 345, 346, 347, 348, 350, 351, 416, 421, 423, 427, 434, 435], "tanhnorm": [203, 303, 304, 305, 311, 317, 325, 326, 328, 341, 345, 346, 347, 348, 350, 351, 414, 423, 435, 440], "return_log_prob": [203, 303, 304, 305, 311, 315, 317, 347, 416, 423, 427, 434, 435, 440], "apply_": 203, "copy_": [203, 421], "formula": [203, 267, 295, 296, 325, 327, 342, 345, 417, 423], "mogymwrapp": [204, 414], "mo_env": 204, "sea": 204, "treasur": 204, "so_env": 204, "stack_reward": 205, "stack_observ": 205, "auto_batch_size_": 205, "macro": [205, 310], "noop": 206, "trial": 206, "standard_norm": [207, 218, 240, 241, 421, 422, 424], "affin": [207, 218, 240, 241], "layer": [207, 240, 246, 250, 251, 253, 254, 259, 261, 264, 265, 266, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 292, 293, 300, 309, 318, 416, 422, 423, 424, 425, 427, 434, 437], "epsilon": [207, 245, 263, 287, 349, 396, 422, 423, 424, 427], "recover": 207, "set_default_tensor_typ": 207, "doubletensor": 207, "isclos": 207, "next_ob": [207, 360, 361, 362, 363, 440], "init_stat": [207, 421, 422, 423, 424], "3752e": 207, "5087e": 207, "9294e": 207, "9636": 207, "5608": 207, "6408": 207, "num_it": [207, 422, 423], "reduce_dim": [207, 421, 422, 423, 424], "cat_dim": [207, 421, 422, 423, 424], "keep_dim": [207, 310, 422, 424], "statist": [207, 240, 241, 246, 347, 412, 421, 422, 423, 441], "gaussian": [207, 226, 245, 247, 273, 279, 280, 285, 423, 425, 434], "empir": [207, 247, 273, 311, 315, 421, 423, 435], "3d": [207, 250], "reorder": 209, "in_keys_in": [209, 235], "channel": [209, 229, 276, 281, 282, 422], "r3m": [211, 437], "resnet": [211, 236, 238], "ego4d": [211, 236, 238], "univers": [211, 236, 238, 426], "suraj": [211, 236], "nair": [211, 236], "aravind": [211, 236], "rajeswaran": [211, 236], "vikash": [211, 236, 238], "kumar": [211, 236, 238], "chelsea": [211, 236], "finn": [211, 236], "abhinav": [211, 236], "gupta": [211, 236], "2203": [211, 236, 273, 437], "12601": [211, 236, 437], "_init": [211, 236, 421], "resnet50": [211, 238, 437], "model_nam": [211, 236, 238, 383], "resnet34": 211, "resnet18": 211, "r3m_vec": [211, 437], "stack_imag": [211, 238], "tread": [211, 238], "hub": [211, 238, 426], "resnet50_weight": [211, 238], "imagenet1k_v1": [211, 238], "download_path": [211, 238], "tensor_pixels_kei": [211, 238], "sub_seq_len": 212, "sample_dim": [212, 421], "hesit": 212, "robust": [212, 246], "mix": [212, 288, 297, 358, 421, 434, 435], "improp": 212, "dummyenv": 213, "another_oth": 213, "other_reward": 213, "create_copi": 214, "stuff": [214, 429], "newnam": 214, "r2g": 216, "reward_to_go": 216, "bernoulli_": 216, "9010": 216, "9404": [216, 366], "9701": [216, 366], "9900": [216, 366], "0000": [216, 227, 228, 263, 286, 318, 366], "clamp_min": 217, "clamp_max": 217, "clip_min": 217, "clip_max": 217, "episode_": 219, "reward1": 219, "reward2": 219, "episode_reward": [219, 434, 435], "keep_reward": 220, "keep_don": 220, "logical_or": 221, "in_key_inv": 223, "unstack": 223, "update_don": 224, "disjunct": 224, "recognis": 224, "target_return": 225, "default_valu": [226, 322], "expand_spec": 226, "single_default_valu": 226, "call_before_env_reset": 226, "unit": [226, 247, 261, 264, 265, 281, 282, 290, 291, 423], "scala": 226, "dataloadingprim": 226, "mykei": 226, "__unless": 226, "exists__": 226, "get_primers_from_modul": [226, 249, 266, 270, 414], "recurrent_st": [226, 266, 270, 322, 424], "10th": 227, "0216": 227, "1149": 227, "1990": 227, "2749": 227, "3281": 227, "9290": 227, "3702": 227, "8978": 227, "time_kei": 228, "elaps": [228, 430], "monitor": [228, 426], "expend": 228, "_polici": 228, "time_reset": 228, "time_polici": 228, "time_step": [228, 269, 310], "0882": 228, "0002": 228, "5797e": 228, "6289e": 228, "7990e": 228, "0824e": 228, "0837e": 228, "6056e": 228, "2016e": 228, "1062e": 228, "7009e": 228, "from_int": 229, "shape_toler": 229, "ri": 229, "pretrainedtokenizerbas": 230, "additional_token": 230, "skip_special_token": 230, "add_special_token": 230, "return_attention_mask": 230, "missing_toler": 230, "call_before_reset": 230, "bert": 230, "uncas": 230, "traj_count": 231, "traj": 231, "countingenv": 231, "mocking_class": 231, "make_env_c0": 231, "make_env_c1": 231, "set_contain": 232, "reset_par": 232, "smoothli": [233, 246], "add_1": 233, "cache_spec": 233, "switch": [233, 241, 267, 296, 378], "set_missing_toler": 233, "inv_fn": 234, "unari": 234, "durin": 234, "ommit": 234, "observation_trsf": 234, "xbc": 234, "x7f": 234, "x859": 234, "x81": 234, "x9a": 234, "xbd": 234, "xb8t8": 234, "test_input_spec": 234, "test_output_spec": 234, "danger": 235, "vc1": 236, "vc1_vec": 236, "untrain": 236, "make_noload_model": 236, "vip": [237, 238, 437], "implicit": [238, 333, 341, 438], "jason": 238, "ma": 238, "shagun": 238, "sodhani": 238, "dinesh": 238, "jayaraman": 238, "osbert": 238, "bastani": 238, "ami": 238, "zhang": 238, "vip_vec": 238, "final_nam": 239, "sb3": 239, "terminal_obs_read": 239, "vecnormv2": 240, "new_api": [240, 241], "to_observation_norm": [240, 241], "frozen_copi": [240, 241], "shared_td": 240, "race": 240, "decai": [240, 241, 245, 263, 349, 396, 421, 422, 424, 441], "underflow": [240, 396], "build_td_for_shared_vecnorm": 240, "memmori": 240, "td_share": 240, "v": [240, 264, 265, 268, 269, 303, 333, 341, 348, 421, 422], "unfreez": [240, 241], "observationnorm": [240, 241, 412, 421, 422, 423, 424, 440], "train_env": 240, "eval_env": 240, "9999": 241, "0001": [241, 261], "shared_data": 241, "reduce_batch_dim": 241, "varianc": [241, 246, 247, 248, 267, 295, 296, 417, 421, 423, 435], "vs": [241, 244], "weigh": 241, "_cast_int_to_float": 241, "env_trsf": 241, "observation_norm": 241, "reward_norm": [241, 396], "unnorm": [241, 274, 275, 283], "7967": 241, "1238": 241, "5911": 241, "5275": 241, "8585": 241, "5028": 241, "2505": 241, "3169": [241, 318], "1332": 241, "1235": 241, "6596e": 241, "3072e": 241, "9170e": 241, "9255e": 241, "9131e": 241, "4671e": 241, "3760e": 241, "2058e": 241, "3484e": 241, "6185e": 241, "1456": 241, "1862": 241, "2053": 241, "2605": 241, "4046": 241, "5185": 241, "8023": 241, "1364": 241, "6183": 241, "5406": 241, "0920": 241, "1492": 241, "2702": 241, "3917": 241, "5001": 241, "7947": 241, "0160": 241, "3347": 241, "9082": 241, "9679": 241, "2199": 241, "2918": 241, "1668": 241, "2083": 241, "4981": 241, "5046": 241, "7950": 241, "9791": 241, "1484": 241, "4182": 241, "2201": 241, "0403": 241, "5206": 241, "7791": 241, "8282": 241, "2279": 241, "2907": 241, "4929": 241, "7793": 241, "8626": 241, "1832": 241, "local_env": 241, "testifi": 241, "4307": 241, "9613": 241, "state_dim": [242, 252, 257, 285, 290, 291, 306], "action_dim": [242, 252, 253, 255, 257, 285, 306, 421, 433], "gsde": [242, 346, 412], "gsdemodul": 242, "rb_transform": 243, "resist": 243, "insensit": 243, "sensit": [243, 422, 424], "_orig": 243, "95": [243, 273, 353, 423, 424], "window": [243, 310, 434, 438, 440], "module_nam": [244, 343], "from_vers": 244, "to_vers": 244, "class_method": 244, "import_modul": 244, "get_class_that_defined_method": 244, "module_set": 244, "setters_dict": 244, "setter": 244, "setter_dict": 244, "po": 245, "sigma_init": [245, 434], "sigma_end": [245, 434], "annealing_num_step": [245, 263, 287, 421, 422, 424, 425, 427, 431, 434], "sigma": [245, 264, 265, 267, 268, 269, 287, 295, 296, 423, 434], "omiss": [245, 263, 287], "momentum": 246, "max_r": 246, "max_d": 246, "warmup_step": 246, "batchrenorm": 246, "1702": 246, "03275": 246, "corenet": 246, "enhanc": 246, "warmup": 246, "phase": [246, 248, 435, 438], "outlier": 246, "period": 246, "warm": 246, "renorm": 246, "entropi": [247, 283, 325, 326, 327, 328, 333, 334, 341, 342, 344, 345, 346, 348, 350, 351, 435], "botev": 247, "2013": 247, "cem": 247, "plan": [247, 272, 273], "k": [247, 249, 264, 265, 268, 269], "maximis": [247, 253, 255, 273, 422, 423, 435], "modelbasedenv": [247, 273], "planning_horizon": [247, 273], "mpc": [247, 272, 273], "num_candid": [247, 273], "candid": [247, 273], "top_k": [247, 273], "modelbasedenvbas": [247, 272, 273, 414], "safemodul": [247, 272, 303, 305, 315, 325, 326, 328, 333, 334, 341, 345, 346, 347, 348, 350, 351, 403, 404, 408, 414, 440], "hausknecht": 248, "wagen": 248, "reus": [248, 253, 387], "consistentdropoutmodul": [248, 416], "capit": 248, "conceptu": 248, "devianc": 248, "set_exploration_typ": [248, 343, 393, 414, 416, 423, 424, 425, 427, 434, 440], "_main_async_collector": 248, "asyncdatacollector": [248, 414], "ditto": 248, "consistentdropout": 249, "input_shap": 249, "batcht": 249, "make_tensordict_prim": [249, 266, 270, 424], "input_dtyp": 249, "get_default_dtyp": [249, 396], "mask_6127171760": 249, "env0": [249, 441], "num_cel": [250, 251, 253, 254, 255, 256, 261, 262, 266, 270, 271, 276, 277, 303, 322, 422, 423, 424, 425, 427, 428, 431, 434, 435, 440], "elu": [250, 251, 253, 254, 255, 256, 261, 262, 276, 422, 440], "activation_kwarg": [250, 251, 271], "norm_class": [250, 251, 253, 254, 271], "norm_kwarg": [250, 251, 271], "bias_last_lay": [250, 251, 253, 254, 255, 256, 262, 271], "aggregator_class": [250, 251, 253, 254, 422, 424, 440], "squashdim": [250, 251, 253, 262, 276, 440], "aggregator_kwarg": [250, 251, 253, 254, 422, 424], "squeeze_output": [250, 251, 253, 254, 422, 424], "convolut": [250, 251, 253, 254, 276, 292, 425, 427], "cell": [250, 251, 264, 265, 266, 268, 269, 270, 271, 276, 277, 423, 425, 426, 427, 428, 429, 430, 431], "kernel": [250, 251, 276], "cnet": [250, 251], "conv3d": 250, "rectangular": [250, 251], "lazyconv2d": [251, 253, 254, 262, 276], "default_atari_dqn": [251, 425], "semin": 251, "transformer_config": [252, 285, 306], "decisiontransform": [252, 285], "dtconfig": [252, 257, 285], "2202": [252, 257, 344], "05607": [252, 257, 344], "return_to_go": [252, 257, 285, 306], "conv_net_kwarg": [253, 254], "mlp_net_kwarg": [253, 254, 255], "use_avg_pool": [253, 254], "WITH": [253, 254, 255, 256, 287, 349], "1509": [253, 254, 255, 256, 273, 287, 330, 340, 349], "02971": [253, 254, 255, 256, 287, 349], "convnet": [253, 254, 262, 276, 424, 425, 427, 440], "ndims_in": 253, "avgpool": [253, 254], "lazylinear": [253, 254, 255, 256, 262, 271, 416, 423, 427, 436, 437], "2304": 253, "adaptiveavgpool2d": [254, 422, 424], "output_s": [254, 422, 424], "squeeze2dlay": 254, "400": [255, 256, 435], "mlp_net_kwargs_net1": 256, "mlp_net_kwargs_net2": 256, "mlp1": 256, "mlp2": 256, "desdescrib": 257, "n_embd": 257, "n_layer": [257, 264, 268], "n_head": 257, "n_inner": 257, "n_posit": 257, "resid_pdrop": 257, "attn_pdrop": 257, "gpt2config": 257, "atol": [258, 294], "rtol": [258, 294], "batch_shap": [258, 283, 294], "event_shap": [258, 294], "absolut": [258, 294, 421], "_instanc": 258, "densiti": [258, 274, 275, 283, 296], "mass": [258, 274, 275, 283, 296, 436], "rsampl": [258, 275, 283, 315], "sample_shap": [258, 274, 275, 283], "softmax": [259, 275, 283, 307, 308], "var_num": [260, 289, 307, 308, 313], "action_value_kei": [260, 289, 307, 308, 312, 313, 328, 343, 358], "action_mask_kei": [260, 263, 289, 307, 308, 312, 313], "1707": [260, 308, 335, 345], "06887": [260, 308, 335], "mult": [260, 277, 289, 307, 308, 312, 313], "tensordict_modul": [260, 264, 265, 268, 269, 289, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 328, 329, 333, 334, 341, 345, 346, 347, 348, 350, 351, 416], "nbin": [260, 307, 416], "customdistributionalqv": 260, "log_softmax": [260, 307], "qvalue_actor": [260, 289, 307, 312, 416], "to_modul": [260, 314, 317, 421, 440], "std_bia": 261, "std_min_val": 261, "belief": [261, 281, 290, 291], "1912": [261, 336, 337, 338], "01603": [261, 336, 337, 338], "softplu": [261, 321, 323, 324], "out_features_valu": 262, "cnn_kwarg": [262, 422], "mlp_kwarg": [262, 422], "duel": 262, "cnn": [262, 276, 422, 425, 427, 440], "06581": 262, "512": 262, "greedi": [263, 289, 308, 313, 422, 424, 425, 427], "eps_init": [263, 287, 422, 424, 425, 427, 431], "eps_end": [263, 287, 422], "explorative_polici": [263, 287], "9055": 263, "9277": 263, "6295": 263, "2532": 263, "grad_fn": [263, 302, 315], "addbackward0": 263, "batch_first": [264, 268, 424], "bidirect": [264, 268, 424], "cudnn": [264, 265, 266, 268, 269, 270, 424, 425], "rnn": [264, 265, 266, 268, 269, 270, 301, 334, 348, 424, 425, 427], "device_count": [264, 265, 268, 269, 441], "n_in": [264, 265, 268, 269], "n_out": [264, 265, 268, 269], "h0": [264, 265, 268, 269], "h1": [264, 265, 268, 269], "vectoris": [264, 265, 268, 269], "call_gru": [264, 265], "h_out": [264, 265, 268, 269], "batched_cal": [264, 265, 268, 269], "gate": [264, 265, 268], "r_t": 264, "w_": [264, 265, 268, 269], "ir": [264, 265], "x_t": [264, 268], "b_": [264, 265, 268, 269], "hr": [264, 265, 268], "h_": [264, 265, 268], "z_t": 264, "iz": [264, 265], "hz": [264, 265], "n_t": 264, "odot": [264, 265, 268, 269], "hn": [264, 265, 268], "h_t": [264, 268], "sigmoid": [264, 265, 268, 269], "hadamard": [264, 265, 268, 269], "multilay": [264, 268], "_t": [264, 268, 435, 436], "ge": [264, 268], "bernoulli": [264, 268], "b_ih": [264, 265, 268, 269, 270], "b_hh": [264, 265, 268, 269, 270], "h_0": [264, 268, 269], "pack_padded_sequ": [264, 268], "pack_sequ": [264, 268], "num": [264, 268, 431], "_layer": [264, 268], "_size": [264, 265, 268, 269], "h_n": [264, 268], "packedsequ": [264, 268], "weight_ih_l": [264, 268], "learnabl": [264, 265, 268, 269], "w_ir": 264, "w_iz": 264, "w_in": 264, "num_direct": [264, 268], "weight_hh_l": [264, 268], "w_hr": 264, "w_hz": 264, "w_hn": 264, "bias_ih_l": [264, 268], "b_ir": 264, "b_iz": 264, "b_in": 264, "bias_hh_l": [264, 268], "b_hr": 264, "b_hz": 264, "b_hn": 264, "mathcal": [264, 265, 268, 269], "sqrt": [264, 265, 268, 269, 287], "frac": [264, 265, 268, 269, 423], "seq_len": [264, 268], "subtli": 264, "matrix": [264, 268, 279, 280], "hx": [264, 265, 268, 269], "lstmcell": [265, 270, 425], "gru_cel": 265, "weight_ih": [265, 269], "weight_hh": [265, 269], "bias_ih": [265, 269], "bias_hh": [265, 269], "rocm": [265, 269], "embedd": [266, 270], "grucel": [266, 314], "python_bas": [266, 270], "custom_kei": [266, 270], "hasn": [266, 270], "set_recurrent_mod": [266, 270, 424], "recurrent_mod": [266, 270, 301], "rs": [266, 421], "gru_module_train": 266, "policy_train": 266, "traj_td": 266, "make_cudnn_bas": [266, 270], "make_python_bas": [266, 270, 425], "supplementari": [266, 270, 423, 441], "That": [266, 270, 423, 434], "dealt": [266, 270], "poorli": [266, 270], "meth": [266, 270, 343, 436], "data_collector": [266, 270, 422], "upscal": [267, 295, 296], "tanh_loc": [267, 295, 296], "event_dim": [267, 294, 295], "poor": [267, 295, 296], "explos": [267, 295, 296], "proj_siz": 268, "c0": [268, 269], "c1": [268, 269], "call_lstm": [268, 269], "c_out": [268, 269], "i_t": 268, "ii": [268, 269], "hi": [268, 269], "f_t": 268, "hf": [268, 269], "g_t": 268, "ig": [268, 269], "hg": [268, 269], "o_t": 268, "ho": [268, 269], "c_t": 268, "c_": 268, "1402": 268, "1128": 268, "c_0": [268, 269], "proj": 268, "c_n": 268, "w_ii": 268, "w_if": 268, "w_ig": 268, "w_io": 268, "w_hi": 268, "w_hf": 268, "w_hg": 268, "w_ho": 268, "b_ii": 268, "b_if": 268, "b_ig": 268, "b_io": 268, "b_hi": 268, "b_hf": 268, "b_hg": 268, "b_ho": 268, "weight_hr_l": 268, "_revers": 268, "analog": [268, 427], "cn": 268, "lstm_cell": 269, "h_1": 269, "c_1": 269, "cx": 269, "recurrent_state_h": 270, "recurrent_state_c": 270, "triplet": [270, 312, 313], "lstm_modul": 270, "rs_h": 270, "rs_c": 270, "single_bias_last_lay": 271, "layer_class": 271, "layer_kwarg": 271, "perceptron": [271, 427], "noisylinear": [271, 279, 414, 422], "noisylazylinear": [271, 414], "mpcplanner": 272, "tensordict_out": [272, 441], "mppi": 273, "covari": 273, "william": [273, 347], "aldrich": 273, "theodor": 273, "01149": 273, "hansen": 273, "wang": 273, "su": 273, "04955": 273, "valueoper": [273, 303, 304, 305, 325, 326, 327, 328, 329, 334, 341, 342, 345, 346, 347, 348, 350, 351, 408, 416, 421, 423, 428], "tdlambdaestim": [273, 414, 421], "value_net": [273, 330, 332, 347, 360, 361, 362, 363, 423, 425, 427, 428, 431], "adv": 273, "lmbda": [273, 353, 360, 363, 365, 371, 372, 373, 376, 377, 417, 421, 423, 435], "value_network": [273, 329, 330, 332, 333, 335, 341, 348, 360, 361, 362, 363, 417, 421, 423, 425, 428, 431, 434], "temperatur": [273, 326, 333, 341], "neg_inf": [274, 275], "inf": [274, 275], "use_cross_entropi": 274, "api_doc": [274, 275], "tf_agent": [274, 275], "sparse_mask": [274, 275], "cross_entropi": 274, "1203": [274, 275], "0928": [274, 275], "0831": [274, 275], "1972": [274, 275], "grad_method": [275, 283], "reparamgradientstrategi": [275, 283], "passthrough": [275, 283], "relaxedonehot": [275, 283], "sample_non_valid": 275, "zeros_lik": [275, 436], "share_param": [276, 277, 278, 434, 435], "use_td_param": [276, 277, 278], "get_stateful_net": [276, 277, 278, 343, 416, 417], "from_stateful_net": [276, 277, 278, 343, 417], "homogen": [276, 277, 434, 435], "tensordictparam": [276, 277, 315], "_empty_net": [276, 277], "roughli": [276, 277, 440], "agent_network": [276, 277], "modulelist": [276, 277], "2592": 276, "decentr": 276, "n_agent_input": [277, 278, 434, 435], "n_agent_output": [277, 278, 434, 435], "toech": 277, "centalis": 277, "shown": [277, 416, 425, 433, 434, 435, 438], "agent_dim": 278, "vmap_random": [278, 343, 417], "stateful_net": [278, 343], "Such": [278, 343], "multiagentmlp": [278, 434, 435], "snet": 278, "hasattr": [278, 421], "kaiming_normal_": 278, "std_init": [279, 280], "initialize_paramet": 279, "isol": [279, 343, 425], "1706": [280, 297], "10295v3": 280, "induc": [280, 315], "aid": 280, "1803": [281, 282, 288], "10122": [281, 282], "rnn_hidden": 281, "latent": 282, "ordin": [284, 414], "parametris": [284, 286], "inres": 285, "mu": [285, 287, 423], "impos": [286, 416], "proxim": [286, 345, 423, 435], "atom": 286, "tang": 286, "agraw": 286, "2020": 286, "1901": 286, "10500": 286, "discretis": 286, "num_atom": 286, "num_sampl": 286, "middl": 286, "adam": [286, 295, 421, 422, 423, 424, 425, 428, 431, 434, 435, 436], "lr": [286, 421, 422, 423, 424, 431, 434, 435, 436], "optimis": [286, 434, 435], "minimis": 286, "penalis": 286, "0308": 286, "1586": 286, "4727": 286, "2260": 286, "1120": 286, "histogram": 286, "return_typ": 286, "hist": [286, 438], "158": 286, "478": 286, "228": 286, "112": 286, "bin_edg": 286, "8000": 286, "6000": 286, "4000": 286, "ornstein": [287, 421, 425], "uhlenbeck": [287, 421, 425], "ou": [287, 421], "correl": 287, "noise_t": 287, "noise_": 287, "theta": [287, 423, 436], "sigma_t": 287, "sigma_": 287, "anneal": [287, 422, 427, 434], "ou_prev_nois": 287, "ou_step": 287, "x0": 287, "sigma_min": 287, "n_steps_ann": 287, "is_init_kei": 287, "_ou_prev_nois": 287, "_ou_step": 287, "state_shap": [288, 358], "mixing_embed_dim": [288, 358], "qmix": [288, 434, 435], "mixer": [288, 297, 358], "monoton": 288, "hyper": 288, "11485": 288, "qmixerloss": [288, 297], "qmix_vdn": [288, 297], "vdn": [288, 297], "hidden_dim": [290, 291], "scale_lb": [290, 291], "posterior": [290, 337], "rssm": [290, 291, 337], "1811": [290, 291], "04551": [290, 291], "obs_embed": 290, "rnn_hidden_dim": 291, "dream": 291, "safe_tanh": 295, "tanhtransform": 295, "overflow": [295, 302, 307, 308, 311, 312, 313, 314, 315], "get_mod": [295, 315], "decomposit": 297, "05296": 297, "hide": [298, 423, 434, 435], "satisfi": [298, 416], "vmap_dim": 298, "lam": 298, "sample_in": 298, "sample_in_td": 298, "vm": 298, "translat": [302, 311], "character": [302, 307, 311, 312, 314, 438], "td_modul": [302, 303, 304, 305, 311, 314, 315, 317, 319, 427, 440], "3635": 302, "0340": 302, "1476": 302, "3911": 302, "1664": 302, "5455": 302, "2247": 302, "4583": 302, "2916": 302, "2160": 302, "5337": 302, "5193": 302, "addmmbackward0": 302, "actorvalueoper": [303, 327, 342, 345, 416, 427], "get_policy_oper": [303, 304, 305, 327, 342, 345, 416], "standalon": [303, 304, 305, 425, 427], "tdmodul": [303, 304, 305, 408], "get_critic_oper": 303, "common_oper": [303, 305], "policy_oper": [303, 304, 305], "value_oper": [303, 304, 305], "module_hidden": [303, 305], "td_module_hidden": [303, 305], "module_act": [303, 305], "td_module_act": [303, 304, 305], "module_valu": [303, 304, 305], "td_module_valu": [303, 304, 305], "state_action_valu": [303, 319, 326, 328, 333, 341, 348, 359, 408, 416, 421, 434, 440], "td_clone": [303, 304, 305], "tensordictmodulewrapp": [303, 403, 404, 408], "get_policy_head": [303, 304, 305], "safesequenti": [303, 304, 305, 358], "head": [303, 305, 315, 322, 327, 342, 345, 414], "get_value_head": [303, 304, 305], "get_value_oper": [303, 304, 305, 327, 342, 345], "action_modul": 304, "actorcriticoper": [305, 416, 427], "actorcriticwrapp": [305, 416, 421], "inferec": 306, "set_tensor_kei": 306, "dt_inference_wrapp": 306, "baz": 306, "inference_context": 306, "obs_dim": 306, "tanhdelta": [306, 414, 421, 434], "dtactor": 306, "actor_modul": [306, 440], "dist_class": 306, "dist_kwarg": 306, "distribution_kwarg": [306, 311, 315, 423, 434, 435], "inference_actor": 306, "sequence_length": 306, "mask_context": 306, "out_act": 306, "qvaluemodul": [307, 312, 358, 424, 425, 427, 431], "distributionaldqnnet": 307, "make_log_softmax": 307, "my_action_valu": [308, 313], "chanc": 308, "lmheadmodel": 309, "actor_head": [309, 327, 342, 345], "base_model": 309, "lm_head": 309, "lookahead": 310, "reshape_cat": 310, "actor_bas": 310, "obs_cat": 310, "obs_cat_reshap": 310, "action_orig": 310, "multistepenvwrapp": 310, "alter": [310, 343, 416], "ego": 310, "default_interaction_typ": [311, 315, 427], "interaction_typ": [311, 315], "set_interaction_typ": [311, 315], "compositedistribut": [311, 315, 325, 345, 417, 427], "distribution_map": [311, 315], "name_map": [311, 315], "cache_dist": [311, 315], "n_empirical_estim": [311, 315], "compound": [311, 427], "chose": 313, "functionalmodul": 314, "functionalmodulewithbuff": 314, "td_fmodul": 314, "td_function": 314, "td_state": 314, "params_repeat": 314, "td_vmap": [314, 317], "random_sampl": [314, 315], "suppli": 315, "paliat": 315, "get_median": 315, "get_mean": 315, "sample_key_nam": 315, "_log_prob": 315, "composite_lp_aggreg": 315, "clampbackward0": 315, "anihil": 315, "probabilistictensordictsequenti": [316, 325, 327, 342, 345, 347, 403, 404, 417, 440], "partial_toler": [316, 317, 433], "AND": [316, 317, 328], "tensordictsequ": 317, "safeprobabilisticmodul": [317, 416], "spec1": 317, "net1": 317, "module1": 317, "td_module1": 317, "spec2": 317, "module2": 317, "td_module2": 317, "boundari": [318, 423, 425, 434, 435], "resolut": 318, "9944": 318, "9991": 318, "3020": 318, "2299": 318, "5418": 318, "2989": 318, "6849": 318, "2690": 318, "9649": 318, "5686": 318, "8602": 318, "0315": 318, "8455": 318, "6027": 318, "4746": 318, "7843": 318, "7782": 318, "2111": 318, "5115": 318, "4687": 318, "5760": 318, "custommodul": 319, "imaginari": 320, "imagin": 320, "transition_model": 320, "get_reward_oper": 320, "get_transition_model_oper": 320, "min_val": [321, 324], "_bia": 321, "surject": 324, "expln": 324, "biased_softplu": [324, 414], "biased_softplus_": 324, "syntax": [324, 421], "add_custom_map": 324, "1602": 325, "01783v2": 325, "actor_network": [325, 326, 327, 328, 329, 331, 333, 334, 341, 342, 344, 345, 346, 347, 348, 350, 351, 417, 421, 423, 428, 434, 435], "critic_network": [325, 327, 342, 345, 347, 423, 435], "entropy_bonu": [325, 327, 342, 345, 423], "favour": [325, 327, 342, 345], "samples_mc_entropi": [325, 327, 342, 344, 345], "entropy_coef": [325, 327, 342, 345, 423, 435], "critic_coef": [325, 327, 342, 345, 423], "loss_critic_typ": [325, 327, 342, 345, 347, 423], "l1": [325, 327, 329, 330, 334, 342, 345, 346, 347, 350, 351, 354, 358, 416, 421], "l2": [325, 327, 329, 330, 331, 332, 334, 337, 338, 342, 345, 346, 347, 350, 351, 354, 358, 421, 434], "smooth_l1": [325, 326, 327, 328, 329, 330, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351, 354, 358, 423], "separate_loss": [325, 327, 328, 329, 333, 334, 341, 342, 345, 346, 347, 348, 350, 351], "advantage_kei": [325, 327, 342, 345, 347, 360, 361, 362, 363], "value_target_kei": [325, 327, 342, 345, 347, 360, 361, 362, 363], "value_target": [325, 327, 342, 345, 347, 360, 361, 362, 363, 423, 435], "ddp": [325, 327, 342, 345, 347], "fsdp": [325, 327, 342, 345, 347], "divid": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 344, 345, 346, 347, 348, 350, 351, 401, 421, 434, 435, 436], "clip_valu": [325, 327, 342, 345, 347], "loss_crit": [325, 345, 423, 435], "loss_entropi": [325, 345, 423, 435], "loss_object": [325, 345, 423, 435], "next_reward": [325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363], "next_don": [325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363], "next_termin": [325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 360, 361, 362, 363], "loss_obj": 325, "next_observ": [325, 326, 328, 329, 330, 332, 333, 334, 341, 345, 346, 347, 348, 350, 351, 433], "sacloss": [325, 340, 349, 414], "default_kei": [325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 358, 364], "_acceptedkei": [325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 350, 351, 358, 364], "fraction": 325, "make_value_estim": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 352, 358, 417, 421, 422, 434, 435, 440], "value_typ": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 353, 358, 421], "valueestim": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 353, 358, 414, 417, 421, 434, 435], "hyperparam": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 421], "enum": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 353, 358, 421], "default_value_estim": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 421, 440], "default_value_kwarg": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 414, 421], "dqn_loss": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 352, 358], "td1": [325, 326, 328, 329, 330, 332, 334, 335, 336, 341, 343, 345, 346, 347, 348, 350, 351, 358, 421], "conserv": [326, 332], "04779": [326, 332], "qvalue_network": [326, 328, 333, 334, 341, 346, 348, 350, 351], "unti": [326, 328, 341, 346, 348, 350, 351], "loss_funct": [326, 328, 329, 330, 331, 332, 333, 334, 341, 346, 348, 350, 351, 354, 358, 421, 434], "alpha_init": [326, 328, 334, 344, 346, 348], "min_alpha": [326, 328, 334, 344, 346, 348], "max_alpha": [326, 328, 334, 344, 346, 348], "fixed_alpha": [326, 328, 334, 344, 346, 348], "target_entropi": [326, 328, 334, 344, 346, 348], "prod": [326, 328, 344, 348], "delay_actor": [326, 329, 348, 350, 351], "delay_qvalu": [326, 334, 346, 348, 350, 351], "min_q_weight": 326, "max_q_backup": 326, "backup": 326, "deterministic_backup": 326, "num_random": 326, "with_lagrang": 326, "lagrang": 326, "lagrange_thresh": 326, "valueclass": [326, 328, 329, 334, 346, 348, 350, 351], "qvalu": [326, 328, 333, 334, 341, 346, 348, 350, 351], "loss_actor": [326, 328, 329, 333, 334, 341, 346, 347, 348, 350, 351, 394, 421, 434], "loss_actor_bc": 326, "loss_alpha": [326, 328, 334, 346, 348], "loss_cql": [326, 332], "loss_qvalu": [326, 328, 332, 333, 334, 341, 346, 348, 350, 351], "loss_alpha_prim": 326, "clip_epsilon": [327, 423, 435], "normalize_advantag": [327, 342, 345, 435], "normalize_advantage_exclude_dim": [327, 342, 345], "multiobject": [327, 342, 345], "value_kei": [327, 342, 345, 360, 361, 362, 363, 421], "somemodul": [327, 342, 345], "someactor": [327, 342, 345], "value_head": [327, 342, 345], "somevalu": [327, 342, 345], "loss_modul": [327, 340, 342, 343, 345, 349, 398, 407, 408, 417, 418, 421, 422, 423, 434, 435, 438], "IN": 328, "FOR": 328, "simplic": [328, 422, 423, 429, 437, 438, 440], "openreview": [328, 346], "pczqttstix": 328, "qvalue_loss": [328, 350], "actor_loss": [328, 350], "alpha_loss": 328, "num_qvalue_net": [328, 333, 334, 341, 346, 348, 350, 351], "maybe_init_target_entropi": 328, "fault_toler": 328, "target_entropy_buff": 328, "delay_valu": [329, 330, 332, 335, 347, 348, 358, 422, 424, 425, 431, 434], "loss_valu": [329, 333, 341, 347, 348, 421, 423, 434, 435], "pred_valu": [329, 332, 350, 351, 421], "pred_value_max": [329, 421], "target_valu": [329, 332, 346, 350, 351, 359, 417, 421], "target_value_max": [329, 421], "qvalueactor": [330, 332, 358, 422, 424], "double_dqn": 330, "06461": [330, 340], "mult_one_hot": [330, 333, 334, 358], "loss_val": [330, 332, 417, 421, 423, 424, 425, 428, 429, 431, 434, 435, 438], "01345": 331, "distanc": [332, 342, 354, 359, 360, 435], "dcql_loss": 332, "2110": [333, 341], "06169": [333, 341], "expectil": [333, 341], "tau": [333, 341, 349, 421, 422, 434], "antmaz": [333, 341], "sticht": [333, 341], "onehotcategor": [333, 334, 414], "target_entropy_weight": 334, "skip_done_st": [334, 348], "disctount": 335, "distributionalqvalueactor": [335, 416], "input_tensordict": [335, 421], "actor_model": 336, "value_model": [336, 338], "imagination_horizon": 336, "discount_loss": [336, 338], "lambda_kl": 337, "lambda_reco": 337, "lambda_reward": 337, "reco_loss": 337, "reward_loss": 337, "free_nat": 337, "nat": 337, "delayed_clamp": 337, "global_averag": 337, "value_loss": 338, "fake_data": 338, "1606": 339, "03476": 339, "discriminator_network": 339, "use_grad_penalti": 339, "gp_lambda": 339, "discrimin": 339, "ddpgloss": [340, 349, 408, 414, 421, 428, 434, 440], "td3loss": [340, 349, 414], "value_network_update_interv": 340, "qvalueclass": 341, "loss_value_diff": 341, "diff": 341, "old_polici": 342, "new_polici": 342, "apart": [342, 435], "dtarg": 342, "samples_mc_kl": 342, "analyt": 342, "decrement": 342, "loss_": [343, 394, 417, 421, 428], "equip": [343, 424, 425, 427], "gh": 343, "_forward_value_estimator_kei": 343, "value_estim": [343, 360, 361, 362, 363, 364, 417, 421, 435], "myloss": 343, "action2": 343, "augment": [343, 429, 431, 438], "deterministic_sampling_mod": 343, "convert_to_funct": [343, 421], "expand_dim": 343, "create_target_param": [343, 421], "compare_against": [343, 421], "_param": 343, "resampl": 343, "_target_param": 343, "network_nam": 343, "blend": 343, "add_random_modul": [343, 417], "flavor": [345, 421, 434, 435, 440], "clipppoloss": [345, 414, 423, 435], "klpenppoloss": [345, 414], "06347": 345, "gae": [345, 414, 417, 421, 423, 435], "ppo_loss": 345, "tdlambda": [345, 353, 417, 421], "base_lay": 345, "randn_lik": 345, "samplelogprob": 345, "ay8zfzm0tdd": 346, "sub_sample_len": 346, "subsampl": [346, 389, 418], "action_log_prob_actor": 346, "state_action_value_actor": [346, 350, 351], "connectionist": 347, "1992": 347, "doi": 347, "1007": 347, "bf00992696": 347, "actor_net": [347, 421, 423], "1801": 348, "01290": 348, "applic": [348, 358, 426, 427, 436], "1812": 348, "05905": 348, "redqloss": [349, 414], "math": 349, "theta_t": [349, 436], "theta_": [349, 436], "polyak": 349, "minimalist": 350, "06860": 350, "policy_nois": [350, 351], "noise_clip": [350, 351], "td3_bc": 350, "bc_loss": 350, "lmbd": 350, "td0": [352, 421, 434], "strict_shap": 354, "view_a": 354, "qmixer": [358, 414], "local_valu": 358, "visibl": [358, 435], "acceptedkei": 358, "global_valu": 358, "penultim": 358, "local_value_network": 358, "mixer_network": 358, "value_modul": [358, 423, 440], "qnet": [358, 421], "next_val_kei": 359, "pred_next_v": 359, "mse": 359, "q_valu": 359, "n_steps_to_next": 359, "value_next_st": 359, "1506": [360, 365, 373], "02438": [360, 365, 373], "exponenti": [360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 396], "average_ga": [360, 423], "skip_exist": [360, 361, 362, 363], "get_default_devic": [360, 361, 362, 363, 364], "auto_reset_env": 360, "next_valu": [360, 361, 362, 363, 364], "gradient_mod": 360, "value_error": [360, 361, 362, 363, 364], "target_param": [360, 361, 362, 363, 364, 421, 435], "98": [360, 361, 362, 363], "94": [360, 363], "unpack": [360, 361, 362, 363], "tensor_kei": [360, 361, 362, 363, 364], "aka": [361, 422, 434], "average_reward": [361, 362, 363], "tdestim": [361, 362, 364], "infti": 362, "valuefunctionbas": 364, "old_stat": [365, 367, 369, 371, 373, 374, 376], "new_stat": [365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "rolling_gamma": [369, 370, 371, 372, 374, 375, 376, 377], "g1": [369, 370, 371, 372, 374, 375, 376, 377], "g2": [369, 370, 371, 372, 374, 375, 376, 377], "g3": [369, 370, 371, 372, 374, 375, 376, 377], "g4": [369, 370, 371, 372, 374, 375, 376, 377], "v3": [369, 370, 371, 372, 374, 375, 376, 377], "preproc": [378, 425, 434], "as_non_tensor": [378, 434], "render_method": 378, "pass_tensordict": 378, "syntact": 378, "sugar": 378, "out_file_bas": 379, "skip_reset": 379, "center_crop": 380, "make_grid": 380, "log_video": 380, "csv": [380, 382, 384, 422, 430, 431], "wandb": [380, 384, 387, 430, 440], "tensorboard": [380, 384, 386, 430, 440], "log_dir": [380, 381, 382, 384, 386, 387, 422, 431], "cheetah_video": 380, "run_video": 380, "openxexperiencereplai": 380, "sec": [380, 436], "video_fp": [380, 382, 385], "cmu_stretch": 380, "run_video_0": 380, "pt": [382, 418], "cur_dir": 382, "csv_log": 382, "add_video": 382, "video_": 382, "experiment_nam": [383, 384], "uuid": [383, 422, 441], "logger_typ": 384, "logger_nam": 384, "mlflow": [384, 385], "wandb_kwarg": 384, "mlflow_kwarg": 384, "tracking_uri": 385, "uri": 385, "datastor": 385, "tb_log": 386, "tensoarboard": 386, "td_log": 386, "save_dir": 387, "resum": 387, "uncategor": 387, "my_funct": 388, "sub_traj_len": 389, "min_sub_traj_len": 389, "register_op": [389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 418, 422], "process_optim_batch": [389, 395, 396, 418], "td_out": [389, 397], "_process_optim_batch_hook": [389, 418], "batch_subsampl": 389, "clear_cuda": 390, "pre_optim_step": [390, 418], "log_pbar": [391, 392, 393, 396, 418, 422], "count_fram": 391, "pre_steps_log": [391, 392, 418], "count_frames_log": 391, "lognam": 392, "r_train": 392, "log_reward": [392, 422], "record_interv": [393, 421, 422], "record_fram": [393, 401, 421, 422], "policy_explor": [393, 408, 421, 422, 425, 427, 431], "log_kei": [393, 422], "underestim": 393, "r_evalu": [393, 421], "loss_compon": 394, "appl": 394, "optimizer_hook": 394, "flatten_tensordict": [395, 422], "max_dim": 395, "rb_trainer": 395, "batch_process": [395, 396, 397, 418], "post_loss": [395, 418], "999": [396, 422], "jitter": 396, "finfo": 396, "default_dtyp": 396, "update_reward_stat": 396, "normalize_reward": 396, "make_train": [397, 414], "_process_batch_hook": [397, 418], "select_kei": [397, 418], "versatil": [398, 426], "optim_steps_per_batch": [398, 418, 422], "clip_grad_norm": 398, "clip_norm": 398, "progress_bar": 398, "save_trainer_interv": 398, "log_interv": [398, 422], "save_trainer_fil": [398, 418], "load_from_fil": [398, 418], "update_weights_interv": [400, 422], "post_step": [400, 418, 422], "cfg": [401, 402, 403, 404, 405, 406, 407, 408, 409, 412], "dictconfig": [401, 402, 403, 404, 406, 407, 408, 409, 412], "unknowingli": 401, "annealing_fram": [401, 421], "init_env_step": [401, 402, 421], "proof_environ": [402, 421], "sta": 402, "ot": 402, "actor_model_explor": [403, 404, 421], "make_env_kwarg": [403, 404], "targetnetupdat": [405, 407, 408], "replayargsconfig": 406, "target_net_updat": [408, 421, 422], "constitu": 408, "egreedywrapp": 408, "env_proof": 408, "obs_spec": 408, "net_valu": 408, "dir": [408, 418, 422], "gettempdir": 408, "argpars": [409, 412], "namespac": [409, 412], "parser": [409, 412], "transformed_env_constructor": [409, 414], "num_env_per_collector": [410, 411], "video_tag": 412, "norm_obs_onli": 412, "use_env_cr": 412, "custom_env_mak": 412, "custom_env": 412, "return_transformed_env": 412, "action_dim_gsd": 412, "state_dim_gsd": 412, "obs_norm_state_dict": 412, "weightupdat": 414, "distributedsyncdatacollector": 414, "submitit_delayed_launch": 414, "remotetensordictreplaybuff": 414, "rational": 414, "footnot": 414, "binarydiscretetensorspec": 414, "boundedtensorspec": 414, "discretetensorspec": 414, "lazystackedcompositespec": 414, "lazystackedtensorspec": 414, "multidiscretetensorspec": 414, "multionehotdiscretetensorspec": 414, "nontensorspec": 414, "onehotdiscretetensorspec": 414, "unboundedcontinuoustensorspec": 414, "unboundeddiscretetensorspec": 414, "prompttensordicttoken": 414, "rolloutfrommodel": 414, "tokenizeddatasetload": 414, "create_infinite_iter": 414, "constantklcontrol": 414, "adaptiveklcontrol": 414, "densifyreward": 414, "h5combin": 414, "h5split": 414, "nested2t": 414, "check_no_exclusive_kei": 414, "consolidate_spec": 414, "contains_lazy_spec": 414, "envmetadata": 414, "chessenv": 414, "tictactoeenv": 414, "llmhashingenv": 414, "check_marl_group": 414, "get_available_librari": 414, "terminated_or_trunc": 414, "dreamerdecod": 414, "braxwrapp": 414, "dmcontrolwrapp": 414, "jumanjiwrapp": 414, "meltingpotenv": 414, "meltingpotwrapp": 414, "mogymenv": 414, "multithreadedenvwrapp": 414, "openmlenv": 414, "openspielwrapp": 414, "openspielenv": 414, "pettingzooenv": [414, 434], "robohiveenv": 414, "smacv2env": 414, "smacv2wrapp": 414, "unitymlagentsenv": 414, "unitymlagentswrapp": 414, "vmaswrapp": 414, "register_gym_spec_convers": 414, "qvaluehook": 414, "distributionalqvaluehook": 414, "reset_nois": 414, "cemplann": 414, "mpcplannerbas": 414, "mppiplann": 414, "independentnorm": 414, "truncatednorm": 414, "maskedonehotcategor": 414, "onehotordin": 414, "inv_softplu": 414, "vmapmodul": 414, "distributionaldqnloss": [414, 422], "discretesacloss": 414, "crossqloss": 414, "iqlloss": 414, "discreteiqlloss": 414, "cqlloss": 414, "discretecqlloss": 414, "gailloss": 414, "dtloss": 414, "onlinedtloss": 414, "td3bcloss": 414, "ppoloss": 414, "a2closs": 414, "reinforceloss": 414, "dreameractorloss": 414, "dreamermodelloss": 414, "dreamervalueloss": 414, "td0estim": [414, 421], "td1estim": [414, 421], "td0_return_estim": 414, "td0_advantage_estim": 414, "td1_return_estim": 414, "vec_td1_return_estim": 414, "td1_advantage_estim": 414, "vec_td1_advantage_estim": 414, "td_lambda_return_estim": 414, "vec_td_lambda_return_estim": 414, "td_lambda_advantage_estim": 414, "vec_td_lambda_advantage_estim": 414, "generalized_advantage_estim": 414, "vec_generalized_advantage_estim": 414, "hardupd": [414, 421, 428], "softupd": [414, 421, 422, 424, 425, 428, 431, 434], "distance_loss": [414, 421], "group_optim": 414, "hold_out_net": 414, "hold_out_param": [414, 421], "batchsubsampl": [414, 418], "clearcudacach": 414, "countframeslog": 414, "logscalar": [414, 418, 422], "optimizerhook": [414, 422], "logvalidationreward": [414, 418, 421, 422], "replaybuffertrain": [414, 418, 422], "rewardnorm": 414, "selectkei": [414, 418], "trainerhookbas": [414, 418, 422], "updateweight": [414, 418, 422], "make_collector_offpolici": 414, "make_collector_onpolici": 414, "make_dqn_loss": 414, "make_replay_buff": [414, 421], "make_target_updat": 414, "parallel_env_constructor": [414, 421], "sync_async_collector": 414, "sync_sync_collector": 414, "correct_for_frame_skip": 414, "get_stats_random_rollout": 414, "mlflowlogg": 414, "get_logg": 414, "generate_exp_nam": 414, "journei": 415, "textbook": 415, "highlight": [415, 434], "ever": [415, 435], "bump": 415, "benefit": [415, 426, 434, 435, 438], "pr": 415, "ground": [416, 421, 436], "recycl": [416, 438], "noisier": 416, "Their": [416, 434, 435], "sd": [416, 441], "prob_modul": 416, "uncertainti": 416, "soften": 416, "backbon": [416, 424, 427, 433, 440], "make_actor": 416, "make_valu": 416, "shared_param": 416, "make_common": 416, "reusabl": [417, 421, 438], "swappabl": [417, 421], "characterist": [417, 421, 436], "trainabl": [417, 421, 428, 437], "smth": [417, 421], "metric": [417, 421], "plenti": [417, 425], "amort": [417, 422, 423], "told": [417, 423], "pseudo": [417, 429, 436], "buri": 417, "str_valu": 417, "nutshel": [417, 421], "barto": [417, 434, 435], "chapter": [417, 430], "value_net_loss": 417, "pow": [417, 421], "room": 417, "signifi": [417, 434, 435], "underperform": 417, "thin": 417, "intric": [417, 427], "set_composite_lp_aggreg": [417, 435], "action_td": 417, "action0": 417, "f0": 417, "action1": 417, "f1": 417, "f2": 417, "f3": 417, "action0_log_prob": 417, "action1_log_prob": 417, "inferior": 417, "multivari": 417, "dirichlet": 417, "prev_log_prob": 417, "new_log_prob": 417, "log_weight": 417, "appreci": [417, 426], "multihead": 417, "believ": 418, "substanti": 418, "_pre_steps_log_hook": 418, "_pre_optim_hook": 418, "sub_batch": 418, "_post_loss_hook": 418, "_post_optim_hook": 418, "post_optim": [418, 422], "_post_optim_log": 418, "post_optim_log": 418, "_post_steps_hook": 418, "_post_steps_log_hook": 418, "post_steps_log": 418, "logginghook": 418, "logging_hook": 418, "save_dict": 418, "some_valu": 418, "torchsnapshot": 418, "ckpt_backend": 418, "filepath": 418, "save_train": 418, "000": [420, 439], "galleri": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "mem": [420, 439], "mb": [420, 439], "coding_ddpg": [420, 421, 439], "coding_dqn": [420, 422, 439], "coding_ppo": [420, 423, 439], "dqn_with_rnn": [420, 424, 439], "multi_task": [420, 433, 439], "multiagent_competitive_ddpg": [420, 434, 439], "multiagent_ppo": [420, 435, 439], "pretrained_model": [420, 437, 439], "rb_tutori": [420, 438, 439], "torchrl_demo": [420, 439, 440], "torchrl_env": [420, 439, 441], "author": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 441], "vincent": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 438, 441], "moen": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 438, 441], "assembl": 421, "focus": [421, 428], "maxim": [421, 428, 436], "transpar": [421, 424], "bash": 421, "is_fork": [421, 422, 423, 424, 434, 435, 437], "get_start_method": [421, 422, 423, 424, 434, 435, 437], "collector_devic": 421, "loss_dict": 421, "modal": 421, "oblivi": [421, 423, 438], "elementari": 421, "didact": [421, 425], "dilut": 421, "pessimist": [421, 422, 423], "target_actor_network_param": 421, "actor_in_kei": 421, "actor_crit": 421, "compromis": 421, "hp": 421, "_value_estim": 421, "elif": [421, 422], "unknown": 421, "_loss_actor": 421, "td_copi": 421, "actor_network_param": [421, 434], "value_network_param": [421, 434], "_loss_valu": 421, "pred_val": 421, "target_value_network_param": 421, "glue": 421, "_forward": 421, "remaind": 421, "env_librari": 421, "env_task": 421, "env_arg": [421, 422], "torchr": 421, "rescal": 421, "presum": 421, "make_transformed_env": 421, "reward_sc": 421, "marker": 421, "env_per_collector": 421, "transform_state_dict": 421, "make_t_env": 421, "cheat": 421, "10m": 421, "cautiou": 421, "magnitud": [421, 434], "thousand": [421, 424], "get_env_stat": 421, "proof_env": 421, "5000": [421, 425, 431], "recal": [421, 423, 438], "ddpgmlpactor": 421, "ddpgmlpqnet": 421, "materi": 421, "ornsteinuhlenbeckprocessmodul": [421, 427], "make_ddpg_actor": 421, "q_net": 421, "tight": 421, "10_000": [421, 423], "traj_len": [421, 424], "make_record": 421, "recorder_obj": 421, "pick": [421, 422, 427], "buffer_s": [421, 422], "random_crop_len": 421, "prb": 421, "buffer_scratch_dir": [421, 422, 424, 429, 437], "25": 421, "dataflow": 421, "ceil_div": 421, "utd": [421, 424], "update_to_data": 421, "realiz": 421, "_must_": 421, "001": [421, 436], "outdat": 421, "trick": [421, 422], "despit": 421, "optimizer_actor": 421, "weight_decai": [421, 422], "optimizer_valu": 421, "total_collection_step": 421, "rewards_ev": 421, "collected_fram": 421, "numel": [421, 423, 424, 425, 431, 434, 437, 438], "current_fram": [421, 434], "sampled_tensordict": 421, "gn1": 421, "clip_grad_norm_": [421, 423, 434, 435, 436], "gn2": 421, "gn": [421, 436], "td_record": 421, "rn": 421, "2f": 421, "mention": [421, 424, 438, 441], "matplotlib": [421, 423, 424, 425, 434, 435, 436, 438, 441], "pyplot": [421, 423, 424, 425, 434, 435, 436, 438, 441], "plt": [421, 423, 424, 425, 434, 435, 436, 438, 441], "zip": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "legend": [421, 434], "xlabel": [421, 424, 435, 436], "ylabel": [421, 435], "tight_layout": 421, "takeawai": [421, 422, 425], "distpatch": 421, "jupyt": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "ipynb": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441], "sphinx": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "road": 422, "aspect": [422, 428], "highest": [422, 427], "prerequisit": [422, 424], "lookup": 422, "cart": 422, "pole": 422, "un": 422, "actuat": 422, "frictionless": 422, "duelingcnndqnet": 422, "egreedymodul": [422, 424, 425, 427, 431], "is_notebook": 422, "shell": 422, "get_ipython": 422, "__class__": 422, "zmqinteractiveshel": 422, "qtconsol": 422, "terminalinteractiveshel": 422, "ipython": [422, 435, 436], "nameerror": [422, 434], "umbrella": 422, "misplac": 422, "misus": 422, "orchestr": [422, 428, 430], "five": 422, "64x64": 422, "motion": [422, 436], "obs_norm_sd": 422, "mp_context": 422, "simpler": [422, 426], "get_norm_stat": 422, "test_env": 422, "mathbb": 422, "rightarrow": 422, "make_model": 422, "dummy_env": 422, "init_bia": 422, "exploration_modul": [422, 424, 425, 427, 431], "eps_greedy_v": 422, "eps_greedy_val_env": 422, "actor_explor": 422, "get_replay_buff": 422, "n_optim": [422, 428, 429], "parametriz": 422, "get_collector": 422, "bunch": 422, "ubiquit": [422, 426], "get_loss_modul": 422, "target_updat": [422, 434], "995": 422, "hopefulli": 422, "variat": 422, "2e": [422, 436], "wd": 422, "upd": 422, "harder": [422, 440], "5_000": 422, "500000": 422, "100000": 422, "005": [422, 434], "mandatori": [422, 423, 435, 436], "fairer": 422, "budget": 422, "dqn_exp_": 422, "uuid1": [422, 441], "cumbersom": 422, "buffer_hook": 422, "aliv": 422, "total_reward": 422, "print_csv_files_in_fold": 422, "folder_path": 422, "csv_file": 422, "output_str": 422, "dirpath": 422, "endswith": 422, "strip": 422, "qvaluenetwork": 422, "accuraci": 422, "fanci": [422, 429], "demonstr": [423, 425, 429, 434, 435, 436, 438, 441], "talk": 423, "six": 423, "sophist": [423, 435], "invent": 423, "theta_k": 423, "pi_": 423, "exceed": 423, "discourag": [423, 436], "indispens": 423, "analyz": 423, "lingua": 423, "franca": 423, "defaultdict": [423, 436], "3e": [423, 424, 434, 435], "max_grad_norm": [423, 434, 435], "sub_batch_s": 423, "num_epoch": [423, 435], "entropy_ep": [423, 435], "charact": [423, 425], "inverteddoublependulum": 423, "transmit": 423, "stai": 423, "confid": [423, 434, 435], "ran": 423, "f_": 423, "mu_": 423, "difficulti": [423, 441], "d_ob": 423, "d_action": 423, "policy_modul": [423, 434, 435], "briefli": [423, 434, 435], "refil": [423, 435], "easiest": [423, 428, 434, 435], "mathemat": [423, 434, 435], "tradeoff": [423, 435], "advantage_modul": 423, "lr_schedul": [423, 436], "cosineannealinglr": [423, 436], "eval_str": 423, "tensordict_data": [423, 435], "data_view": [423, 435], "subdata": [423, 434, 435], "cum_reward_str": 423, "stepcount_str": 423, "param_group": [423, 434], "lr_str": 423, "eval_rollout": 423, "nice": [423, 426, 429], "cap": [423, 438], "figsiz": [423, 436], "subplot": [423, 434, 436, 441], "titl": [423, 424, 425, 435, 436], "84x84": [424, 425], "accessori": 424, "stamp": 424, "assist": 424, "n_cell": 424, "customiz": 424, "wouldn": 424, "qval": 424, "stoch_polici": 424, "opportun": [424, 434], "uniniti": 424, "again": [424, 425, 426, 427, 429, 435, 437, 438, 441], "strongli": 424, "million": 424, "sake": [424, 437, 438], "20_000": [424, 436], "longest": 424, "npai": 424, "action_spread": 424, "strong": 425, "impress": 425, "arduino": 425, "raspberri": 425, "pi": [425, 434, 435, 436], "alon": 425, "examplifi": 425, "ship": 425, "stick": 425, "nearest": 425, "value_mlp": [425, 431], "init_rand_step": [425, 431], "total_count": [425, 431], "total_episod": [425, 431], "t0": [425, 431], "screen": [425, 434], "color": [425, 434], "unblock": 425, "policy_transform": 425, "fake_td": 425, "exported_polici": 425, "div": 425, "graph_modul": 425, "print_read": 425, "group0": 425, "group0_agent0_ob": 425, "collid": [425, 435], "group0_agent0": 425, "agent0_ob": 425, "comma": 425, "digress": 425, "exported_stochastic_polici": 425, "trace": 425, "batchsizetransform": 425, "hidden0": 425, "hidden1": 425, "recurrent_polici": 425, "fake_ob": 425, "fake_hidden0": 425, "fake_hidden1": 425, "fake_is_init": 425, "exported_recurrent_polici": 425, "platform": [425, 440], "aoti": 425, "_inductor": 425, "aoti_compile_and_packag": 425, "aoti_load_packag": 425, "pt2": 425, "pkg_path": 425, "package_path": 425, "compiled_modul": 425, "onnxruntim": 425, "showcas": [425, 436], "web": 425, "explain": [425, 437], "tensorrt": 425, "android": 425, "aleinterfac": 425, "rom": 425, "loadrom": 425, "reset_gam": 425, "screen_ob": 425, "getscreenrgb": 425, "tick_param": 425, "bottom": 425, "labelleft": 425, "labelbottom": 425, "imshow": [425, 441], "dynamo_export": 425, "onnx_policy_export": 425, "onnx_file_path": 425, "ort_sess": 425, "inferencesess": 425, "cpuexecutionprovid": 425, "onnxruntime_input": 425, "get_input": 425, "onnx_polici": 425, "lightweight": [425, 430], "onnxruntime_output": 425, "topic": [426, 427, 428], "straight": 426, "backtrack": 426, "reset_with_act": 426, "stepped_data": 426, "spatial": 426, "useless": 426, "policyless": 426, "examin": [426, 434], "tackl": 427, "delv": 427, "extractor": 427, "additivegaussianmodul": [427, 434], "exploration_polici": [427, 434], "greedili": 427, "2d": [427, 434, 435], "innov": [427, 428], "rollout_explor": 427, "sole": 428, "supervis": [428, 429, 438, 441], "n_collect": 428, "get_next_batch": 428, "concis": 428, "ddpg_loss": 428, "total_loss": 428, "prove": 428, "reliev": 428, "concern": 428, "accustom": 429, "surprisingli": 429, "fundament": 429, "art": [429, 434, 435], "countless": 429, "yourself": [429, 434, 435], "everywher": 430, "log_scalar": 430, "my_scalar": 430, "saw": [430, 436, 438], "excess": 430, "lesson": 431, "voluntarili": 431, "torchrl_logg": 431, "training_loop": 431, "video_record": 431, "arbitrarili": 431, "t1": 431, "conclud": [431, 437], "tutorials_python": 432, "tutorials_jupyt": 432, "env1_obs_kei": 433, "observation_stand": 433, "env2_obs_kei": 433, "observation_walk": 433, "tdreset1": 433, "tdreset2": 433, "lazy_stack": 433, "policy_common": 433, "policy_stand": 433, "policy_walk": 433, "But": 433, "env1_mak": 433, "env2_mak": 433, "_single_task": 433, "td_rollout": 433, "matteo": [434, 435], "bettini": [434, 435], "benchmarl": [434, 435], "simple_tag": 434, "maddpg": [434, 435], "multiagentparticleenviron": 434, "mpe": 434, "centralis": [434, 435], "tie": [434, 435], "iddpg": [434, 435], "richard": 434, "andrew": 434, "mit": 434, "press": 434, "2018": 434, "mathbf": [434, 435], "decentralis": [434, 435], "literatur": [434, 435], "overcom": [434, 435], "stationari": [434, 435], "establish": 434, "gui": [434, 435], "is_sphinx": 434, "__sphinx_build__": 434, "n_iter": [434, 435, 436], "evad": 434, "iteration_when_stop_training_evad": 434, "memory_s": 434, "n_optimiser_step": 434, "train_batch_s": 434, "polyak_tau": 434, "chaser": 434, "red": 434, "circl": [434, 435], "green": 434, "touch": [434, 436], "penal": [434, 435], "obstacl": 434, "drag": [434, 435], "elast": [434, 435], "collis": [434, 435], "imped": 434, "n_chaser": 434, "n_evad": 434, "n_obstacl": 434, "use_vma": 434, "simple_tag_v3": 434, "num_good": 434, "num_adversari": 434, "num_obstacl": 434, "max_cycl": 434, "num_vmas_env": [434, 435], "num_good_ag": 434, "num_landmark": 434, "four": [434, 435, 436], "n_agents_in_that_group": 434, "stress": [434, 435], "paramount": [434, 435], "n_rollout_step": [434, 435], "evolut": [434, 435], "group_nam": 434, "n_agents_in_group": 434, "minor": 434, "agents_exploration_polici": 434, "utilis": [434, 435], "n_obs_per_ag": [434, 435], "n_actions_per_ag": [434, 435], "share_parameters_polici": [434, 435], "policy_net": [434, 435], "_agent": 434, "grant": [434, 435], "converg": [434, 435], "share_parameters_crit": [434, 435], "obs_act": 434, "cat_modul": 434, "critic_modul": 434, "fantast": [434, 435], "reset_td": 434, "interfer": 434, "subject": [434, 436], "flatten_kei": 434, "process_batch": 434, "group_shap": 434, "get_item_shap": [434, 435], "nested_done_kei": 434, "nested_terminated_kei": 434, "desc": [434, 435], "episode_reward_mean_": 434, "episode_reward_mean_map": 434, "train_group_map": 434, "group_batch": 434, "_group": 434, "loss_nam": 434, "episode_reward_mean": [434, 435], "fig": [434, 438], "set_ylabel": 434, "axvlin": 434, "orang": 434, "set_xlabel": 434, "video_logg": 434, "vmas_log": 434, "env_with_rend": 434, "vmas_rend": 434, "print_log_dir": 434, "profici": [434, 435], "lidar": 435, "sensor": 435, "mappo": 435, "ippo": 435, "analys": 435, "visualis": 435, "vmas_devic": 435, "6_000": 435, "minibatch_s": 435, "generalis": 435, "simd": 435, "warp": 435, "todai": 435, "surround": 435, "dot": [435, 436], "scenario_nam": 435, "critic_net": 435, "minibatch": 435, "episode_reward_mean_list": 435, "critic_network_param": 435, "target_critic_network_param": 435, "xvfb": 435, "pyvirtualdisplai": 435, "1400": 435, "900": 435, "pil": 435, "rendering_callback": 435, "fromarrai": 435, "gif": 435, "save_al": 435, "append_imag": 435, "freeli": 436, "broader": 436, "wider": 436, "acquaint": 436, "avenu": 436, "_apply_to_composit": 436, "default_x": 436, "default_i": 436, "upward": 436, "angular": 436, "sin": 436, "rad": 436, "angl": 436, "deleg": 436, "new_th": 436, "new_thdot": 436, "g_forc": 436, "angle_norm": 436, "albeit": 436, "high_th": 436, "high_thdot": 436, "low_th": 436, "low_thdot": 436, "trivial": 436, "irrelev": 436, "_make_spec": 436, "td_param": 436, "render_fp": 436, "random_": 436, "_make_step": 436, "staticmethod": 436, "skeleton": 436, "unitari": 436, "sine": 436, "cosin": 436, "sintransform": 436, "costransform": 436, "t_sin": 436, "t_co": 436, "cat_transform": 436, "simple_rollout": 436, "unexplor": 436, "init_td": 436, "traj_return": 436, "last_reward": 436, "is_ipython": 436, "inlin": 436, "get_backend": 436, "ion": 436, "gcf": 436, "clear_output": 436, "r3mtransform": 437, "embodi": 437, "env_transform": [437, 441], "wiser": 437, "batteri": 438, "gc": 438, "buffer_list": 438, "lowest": 438, "medium": 438, "buffer_lazytensor": 438, "tempdir": 438, "buffer_lazymemmap": 438, "fullest": 438, "mydata": 438, "buffer_lazi": 438, "question": [438, 440], "_i": 438, "artifici": 438, "hamper": 438, "she": 438, "pars": 438, "proport": 438, "reappear": 438, "unfold": 438, "problemat": 438, "4th": 438, "prioritizedslicesampl": 438, "tensordictmaxvaluewrit": 438, "demo": 440, "icml": 440, "vmoen": 440, "fb": 440, "invest": 440, "media": 440, "predominantli": 440, "data2": 440, "sub_key1": 440, "scturctur": 440, "data_stack": 440, "data_sampl": 440, "_sampler": 440, "_sum_tre": 440, "modulenotfounderror": 440, "noopresetenv": [440, 441], "backbone_modul": 440, "params_expand": 440, "exec_sequ": 440, "tensordict_exp": 440, "base_modul": 440, "tensordicts_prealloc": 440, "tensordicts_stack": 440, "tensordict_rollout": [440, 441], "automatical": 440, "60": 440, "particularili": 440, "concatmodul": 440, "loss_td": 440, "contributor": 440, "curiou": 440, "nascent": 440, "unsupervis": 441, "unifi": 441, "_build_env": 441, "deserv": 441, "__episode__": 441, "__trajectory__": 441, "void": 441, "reproduct": 441, "tensordict_tprim": 441, "wrapper1": 441, "wrapper2": 441, "obviou": 441, "truth": 441, "env_transformed_bi": 441, "stanc": 441, "transformeddistribut": 441, "base_dist": 441, "concat": 441, "mofidi": 441, "transformedenviron": 441, "moderet": 441, "computation": 441, "incom": 441, "amongst": 441, "has_cuda": 441, "convention": 441, "markovian": 441, "bar_": 441, "get_someth": 441, "aargh": 441, "is_clos": 441, "foo_list": 441, "121": 441, "evolv": 441, "steadi": 441, "approx": 441, "absor": 441, "_extra_st": 441}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [244, 0, 1, "", "implement_for"], [388, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "RayWeightUpdater"], [17, 0, 1, "", "SyncDataCollector"], [18, 0, 1, "", "VanillaWeightUpdater"], [19, 0, 1, "", "WeightUpdaterBase"], [20, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "async_shutdown"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "start"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[16, 1, 1, "", "_get_server_weights"], [16, 1, 1, "", "_maybe_map_weights"], [16, 1, 1, "", "_skip_update"], [16, 1, 1, "", "_sync_weights_with_worker"], [16, 1, 1, "id0", "all_worker_ids"], [16, 2, 1, "", "collector"], [16, 1, 1, "", "push_weights"], [16, 1, 1, "", "register_collector"]], "torchrl.collectors.SyncDataCollector": [[17, 1, 1, "", "async_shutdown"], [17, 1, 1, "", "iterator"], [17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "rollout"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "start"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[18, 1, 1, "", "all_worker_ids"], [18, 2, 1, "", "collector"], [18, 1, 1, "", "push_weights"], [18, 1, 1, "", "register_collector"]], "torchrl.collectors.WeightUpdaterBase": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "id0", "push_weights"], [19, 1, 1, "id1", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[20, 1, 1, "", "async_shutdown"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "start"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[21, 0, 1, "", "DistributedDataCollector"], [22, 0, 1, "", "DistributedSyncDataCollector"], [23, 0, 1, "", "RPCDataCollector"], [24, 0, 1, "", "RayCollector"], [25, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[24, 1, 1, "", "add_collectors"], [24, 1, 1, "", "async_shutdown"], [24, 1, 1, "", "load_state_dict"], [24, 1, 1, "", "local_policy"], [24, 2, 1, "", "remote_collectors"], [24, 1, 1, "", "set_seed"], [24, 1, 1, "", "shutdown"], [24, 1, 1, "", "start"], [24, 1, 1, "", "state_dict"], [24, 1, 1, "", "stop_remote_collectors"], [24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[26, 3, 1, "", "split_trajectories"]], "torchrl.data": [[27, 0, 1, "", "AdaptiveKLController"], [28, 0, 1, "", "Binary"], [29, 0, 1, "", "BinaryDiscreteTensorSpec"], [30, 0, 1, "", "BinaryToDecimal"], [31, 0, 1, "", "Bounded"], [32, 0, 1, "", "BoundedTensorSpec"], [33, 0, 1, "", "Categorical"], [34, 0, 1, "", "Composite"], [35, 0, 1, "", "CompositeSpec"], [36, 0, 1, "", "ConstantKLController"], [37, 0, 1, "", "DensifyReward"], [38, 0, 1, "", "DiscreteTensorSpec"], [39, 0, 1, "", "Flat2TED"], [40, 0, 1, "", "H5Combine"], [41, 0, 1, "", "H5Split"], [42, 0, 1, "", "HashToInt"], [43, 0, 1, "", "LazyStackedCompositeSpec"], [44, 0, 1, "", "LazyStackedTensorSpec"], [45, 0, 1, "", "MCTSForest"], [46, 0, 1, "", "MultiCategorical"], [47, 0, 1, "", "MultiDiscreteTensorSpec"], [48, 0, 1, "", "MultiOneHot"], [49, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [50, 0, 1, "", "MultiStep"], [51, 0, 1, "", "Nested2TED"], [52, 0, 1, "", "NonTensor"], [53, 0, 1, "", "NonTensorSpec"], [54, 0, 1, "", "OneHot"], [55, 0, 1, "", "OneHotDiscreteTensorSpec"], [56, 0, 1, "", "PairwiseDataset"], [57, 0, 1, "", "PrioritizedReplayBuffer"], [58, 0, 1, "", "PromptData"], [59, 0, 1, "", "PromptTensorDictTokenizer"], [60, 0, 1, "", "QueryModule"], [61, 0, 1, "", "RandomProjectionHash"], [62, 0, 1, "", "RayReplayBuffer"], [63, 0, 1, "", "RemoteTensorDictReplayBuffer"], [64, 0, 1, "", "ReplayBuffer"], [65, 0, 1, "", "RewardData"], [66, 0, 1, "", "RolloutFromModel"], [67, 0, 1, "", "SipHash"], [68, 0, 1, "", "Stacked"], [69, 0, 1, "", "StackedComposite"], [70, 0, 1, "", "TED2Flat"], [71, 0, 1, "", "TED2Nested"], [72, 0, 1, "", "TensorDictMap"], [73, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [74, 0, 1, "", "TensorDictReplayBuffer"], [75, 0, 1, "", "TensorDictTokenizer"], [76, 0, 1, "", "TensorMap"], [77, 0, 1, "", "TensorSpec"], [78, 0, 1, "", "TokenizedDatasetLoader"], [79, 0, 1, "", "Tree"], [80, 0, 1, "", "Unbounded"], [81, 0, 1, "", "UnboundedContinuous"], [82, 0, 1, "", "UnboundedContinuousTensorSpec"], [83, 0, 1, "", "UnboundedDiscrete"], [84, 0, 1, "", "UnboundedDiscreteTensorSpec"], [85, 0, 1, "", "check_no_exclusive_keys"], [86, 0, 1, "", "consolidate_spec"], [87, 0, 1, "", "contains_lazy_spec"], [88, 0, 1, "", "create_infinite_iterator"], [89, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[27, 1, 1, "", "update"]], "torchrl.data.Binary": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "erase_memoize_cache"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 1, 1, "", "memoize_encode"], [28, 2, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "set_provisional_n"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_categorical"], [28, 1, 1, "", "to_categorical_spec"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "update_mask"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "erase_memoize_cache"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 1, 1, "", "memoize_encode"], [29, 2, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "set_provisional_n"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[30, 1, 1, "", "add_module"], [30, 1, 1, "", "apply"], [30, 1, 1, "", "bfloat16"], [30, 1, 1, "", "buffers"], [30, 1, 1, "", "children"], [30, 1, 1, "", "compile"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 1, 1, "", "double"], [30, 1, 1, "", "eval"], [30, 1, 1, "", "extra_repr"], [30, 1, 1, "", "float"], [30, 1, 1, "", "forward"], [30, 1, 1, "", "get_buffer"], [30, 1, 1, "", "get_extra_state"], [30, 1, 1, "", "get_parameter"], [30, 1, 1, "", "get_submodule"], [30, 1, 1, "", "half"], [30, 1, 1, "", "ipu"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "modules"], [30, 1, 1, "", "mtia"], [30, 1, 1, "", "named_buffers"], [30, 1, 1, "", "named_children"], [30, 1, 1, "", "named_modules"], [30, 1, 1, "", "named_parameters"], [30, 1, 1, "", "parameters"], [30, 1, 1, "", "register_backward_hook"], [30, 1, 1, "", "register_buffer"], [30, 1, 1, "", "register_forward_hook"], [30, 1, 1, "", "register_forward_pre_hook"], [30, 1, 1, "", "register_full_backward_hook"], [30, 1, 1, "", "register_full_backward_pre_hook"], [30, 1, 1, "", "register_load_state_dict_post_hook"], [30, 1, 1, "", "register_load_state_dict_pre_hook"], [30, 1, 1, "", "register_module"], [30, 1, 1, "", "register_parameter"], [30, 1, 1, "", "register_state_dict_post_hook"], [30, 1, 1, "", "register_state_dict_pre_hook"], [30, 1, 1, "", "requires_grad_"], [30, 1, 1, "", "set_extra_state"], [30, 1, 1, "", "set_submodule"], [30, 1, 1, "", "share_memory"], [30, 1, 1, "", "state_dict"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_empty"], [30, 1, 1, "", "train"], [30, 1, 1, "", "type"], [30, 1, 1, "", "xpu"], [30, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 2, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "erase_memoize_cache"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 1, 1, "", "memoize_encode"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 2, 1, "", "device"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "erase_memoize_cache"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "make_neg_dim"], [32, 1, 1, "", "memoize_encode"], [32, 2, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 4, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "erase_memoize_cache"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 1, 1, "", "memoize_encode"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "set_provisional_n"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "get"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_empty"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "items"], [34, 1, 1, "", "keys"], [34, 1, 1, "", "lock_"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "pop"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "separates"], [34, 1, 1, "", "set"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unlock_"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "values"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 2, 1, "", "device"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "erase_memoize_cache"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "get"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_empty"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "items"], [35, 1, 1, "", "keys"], [35, 1, 1, "", "lock_"], [35, 1, 1, "", "make_neg_dim"], [35, 1, 1, "", "memoize_encode"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "pop"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "separates"], [35, 1, 1, "", "set"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unlock_"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "values"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "is_tdmodule_compatible"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "mtia"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_load_state_dict_pre_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_post_hook"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "reset_out_keys"], [37, 1, 1, "", "reset_parameters_recursive"], [37, 1, 1, "", "select_out_keys"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "set_provisional_n"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_categorical"], [38, 1, 1, "", "to_categorical_spec"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "to_one_hot"], [38, 1, 1, "", "to_one_hot_spec"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "update_mask"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "compile"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "mtia"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_load_state_dict_pre_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_post_hook"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_submodule"], [42, 1, 1, "", "share_memory"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 2, 1, "", "device"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "get"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_empty"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "items"], [43, 1, 1, "", "keys"], [43, 1, 1, "", "lock_"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "pop"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "separates"], [43, 1, 1, "", "set"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unlock_"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "values"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 2, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "erase_memoize_cache"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 1, 1, "", "memoize_encode"], [44, 2, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[45, 2, 1, "", "action_keys"], [45, 2, 1, "", "done_keys"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "get_keys_from_env"], [45, 2, 1, "", "observation_keys"], [45, 2, 1, "", "reward_keys"], [45, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "erase_memoize_cache"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 1, 1, "", "memoize_encode"], [46, 2, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "cardinality"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "erase_memoize_cache"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 1, 1, "", "memoize_encode"], [47, 2, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "set_provisional_n"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "erase_memoize_cache"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 1, 1, "", "memoize_encode"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_categorical"], [48, 1, 1, "", "to_categorical_spec"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "to_one_hot"], [48, 1, 1, "", "to_one_hot_spec"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "update_mask"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "compile"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "mtia"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_load_state_dict_pre_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "register_state_dict_post_hook"], [50, 1, 1, "", "register_state_dict_pre_hook"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_submodule"], [50, 1, 1, "", "share_memory"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 2, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 2, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[56, 2, 1, "", "device"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "fields"], [56, 1, 1, "", "from_dataset"], [56, 1, 1, "", "from_tensordict"], [56, 1, 1, "", "get"], [56, 1, 1, "", "load"], [56, 1, 1, "", "load_"], [56, 1, 1, "", "load_memmap"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "memmap"], [56, 1, 1, "", "memmap_"], [56, 1, 1, "", "memmap_like"], [56, 1, 1, "", "memmap_refresh_"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to_tensordict"], [56, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "as_remote"], [57, 1, 1, "", "dump"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "load"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "register_load_hook"], [57, 1, 1, "", "register_save_hook"], [57, 1, 1, "", "sample"], [57, 2, 1, "", "sampler"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 2, 1, "", "storage"], [57, 2, 1, "", "write_count"], [57, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[58, 2, 1, "", "device"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "fields"], [58, 1, 1, "", "from_dataset"], [58, 1, 1, "", "from_tensordict"], [58, 1, 1, "", "get"], [58, 1, 1, "", "load"], [58, 1, 1, "", "load_"], [58, 1, 1, "", "load_memmap"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "memmap"], [58, 1, 1, "", "memmap_"], [58, 1, 1, "", "memmap_like"], [58, 1, 1, "", "memmap_refresh_"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "to_tensordict"], [58, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[60, 1, 1, "", "add_module"], [60, 1, 1, "", "apply"], [60, 1, 1, "", "bfloat16"], [60, 1, 1, "", "buffers"], [60, 1, 1, "", "children"], [60, 1, 1, "", "compile"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 1, 1, "", "double"], [60, 1, 1, "", "eval"], [60, 1, 1, "", "extra_repr"], [60, 1, 1, "", "float"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "get_buffer"], [60, 1, 1, "", "get_extra_state"], [60, 1, 1, "", "get_parameter"], [60, 1, 1, "", "get_submodule"], [60, 1, 1, "", "half"], [60, 1, 1, "", "ipu"], [60, 1, 1, "", "is_tdmodule_compatible"], [60, 1, 1, "", "load_state_dict"], [60, 1, 1, "", "modules"], [60, 1, 1, "", "mtia"], [60, 1, 1, "", "named_buffers"], [60, 1, 1, "", "named_children"], [60, 1, 1, "", "named_modules"], [60, 1, 1, "", "named_parameters"], [60, 1, 1, "", "parameters"], [60, 1, 1, "", "register_backward_hook"], [60, 1, 1, "", "register_buffer"], [60, 1, 1, "", "register_forward_hook"], [60, 1, 1, "", "register_forward_pre_hook"], [60, 1, 1, "", "register_full_backward_hook"], [60, 1, 1, "", "register_full_backward_pre_hook"], [60, 1, 1, "", "register_load_state_dict_post_hook"], [60, 1, 1, "", "register_load_state_dict_pre_hook"], [60, 1, 1, "", "register_module"], [60, 1, 1, "", "register_parameter"], [60, 1, 1, "", "register_state_dict_post_hook"], [60, 1, 1, "", "register_state_dict_pre_hook"], [60, 1, 1, "", "requires_grad_"], [60, 1, 1, "", "reset_out_keys"], [60, 1, 1, "", "reset_parameters_recursive"], [60, 1, 1, "", "select_out_keys"], [60, 1, 1, "", "set_extra_state"], [60, 1, 1, "", "set_submodule"], [60, 1, 1, "", "share_memory"], [60, 1, 1, "", "state_dict"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_empty"], [60, 1, 1, "", "train"], [60, 1, 1, "", "type"], [60, 1, 1, "", "xpu"], [60, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "fit"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 1, 1, "", "as_remote"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 2, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 2, 1, "", "storage"], [64, 2, 1, "", "write_count"], [64, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[65, 2, 1, "", "device"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "fields"], [65, 1, 1, "", "from_tensordict"], [65, 1, 1, "", "get"], [65, 1, 1, "", "load"], [65, 1, 1, "", "load_"], [65, 1, 1, "", "load_memmap"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "memmap"], [65, 1, 1, "", "memmap_"], [65, 1, 1, "", "memmap_like"], [65, 1, 1, "", "memmap_refresh_"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to_tensordict"], [65, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[66, 1, 1, "", "create_rollout_td"], [66, 1, 1, "", "generate"], [66, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "cardinality"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 2, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "enumerate"], [68, 1, 1, "", "erase_memoize_cache"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 1, 1, "", "memoize_encode"], [68, 2, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "cardinality"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 2, 1, "", "device"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "enumerate"], [69, 1, 1, "", "erase_memoize_cache"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "get"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_empty"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "items"], [69, 1, 1, "", "keys"], [69, 1, 1, "", "lock_"], [69, 1, 1, "", "make_neg_dim"], [69, 1, 1, "", "memoize_encode"], [69, 2, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "pop"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "separates"], [69, 1, 1, "", "set"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unlock_"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "values"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "from_tensordict_pair"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "is_tdmodule_compatible"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset_out_keys"], [72, 1, 1, "", "reset_parameters_recursive"], [72, 1, 1, "", "select_out_keys"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 1, 1, "", "as_remote"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 2, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 2, 1, "", "storage"], [73, 2, 1, "", "write_count"], [73, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 1, 1, "", "as_remote"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 2, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 2, 1, "", "storage"], [74, 2, 1, "", "write_count"], [74, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 2, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "erase_memoize_cache"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 1, 1, "", "memoize_encode"], [77, 2, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[78, 1, 1, "", "dataset_to_tensordict"], [78, 1, 1, "", "load"]], "torchrl.data.Tree": [[79, 2, 1, "", "branching_action"], [79, 2, 1, "", "device"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "edges"], [79, 1, 1, "", "fields"], [79, 1, 1, "", "from_tensordict"], [79, 2, 1, "", "full_action_spec"], [79, 2, 1, "", "full_done_spec"], [79, 2, 1, "", "full_observation_spec"], [79, 2, 1, "", "full_reward_spec"], [79, 2, 1, "", "full_state_spec"], [79, 1, 1, "", "fully_expanded"], [79, 1, 1, "", "get"], [79, 1, 1, "", "get_vertex_by_hash"], [79, 1, 1, "", "get_vertex_by_id"], [79, 2, 1, "", "is_terminal"], [79, 1, 1, "", "load"], [79, 1, 1, "", "load_"], [79, 1, 1, "", "load_memmap"], [79, 1, 1, "", "load_state_dict"], [79, 1, 1, "", "make_node"], [79, 1, 1, "", "max_length"], [79, 1, 1, "", "memmap"], [79, 1, 1, "", "memmap_"], [79, 1, 1, "", "memmap_like"], [79, 1, 1, "", "memmap_refresh_"], [79, 2, 1, "", "node_observation"], [79, 2, 1, "", "node_observations"], [79, 2, 1, "", "num_children"], [79, 1, 1, "", "num_vertices"], [79, 2, 1, "", "parent"], [79, 1, 1, "", "plot"], [79, 2, 1, "", "prev_action"], [79, 1, 1, "", "rollout_from_path"], [79, 1, 1, "", "save"], [79, 2, 1, "", "selected_actions"], [79, 1, 1, "", "set"], [79, 1, 1, "", "state_dict"], [79, 1, 1, "", "to_string"], [79, 1, 1, "", "to_tensordict"], [79, 1, 1, "", "unbind"], [79, 1, 1, "", "valid_paths"], [79, 1, 1, "", "vertices"], [79, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[80, 1, 1, "", "assert_is_in"], [80, 1, 1, "", "cardinality"], [80, 1, 1, "", "clear_device_"], [80, 1, 1, "", "clone"], [80, 1, 1, "", "contains"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 2, 1, "", "device"], [80, 1, 1, "", "encode"], [80, 1, 1, "", "enumerate"], [80, 1, 1, "", "erase_memoize_cache"], [80, 1, 1, "", "expand"], [80, 1, 1, "", "flatten"], [80, 1, 1, "", "implements_for_spec"], [80, 1, 1, "", "index"], [80, 1, 1, "", "is_in"], [80, 1, 1, "", "make_neg_dim"], [80, 1, 1, "", "memoize_encode"], [80, 2, 1, "", "ndim"], [80, 1, 1, "", "ndimension"], [80, 1, 1, "", "one"], [80, 1, 1, "", "ones"], [80, 1, 1, "", "project"], [80, 1, 1, "", "rand"], [80, 1, 1, "", "reshape"], [80, 1, 1, "", "sample"], [80, 1, 1, "", "squeeze"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_numpy"], [80, 1, 1, "", "type_check"], [80, 1, 1, "", "unflatten"], [80, 1, 1, "", "unsqueeze"], [80, 1, 1, "", "view"], [80, 1, 1, "", "zero"], [80, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[81, 1, 1, "", "assert_is_in"], [81, 1, 1, "", "cardinality"], [81, 1, 1, "", "clear_device_"], [81, 1, 1, "", "clone"], [81, 1, 1, "", "contains"], [81, 1, 1, "", "cpu"], [81, 1, 1, "", "cuda"], [81, 2, 1, "", "device"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "enumerate"], [81, 1, 1, "", "erase_memoize_cache"], [81, 1, 1, "", "expand"], [81, 1, 1, "", "flatten"], [81, 1, 1, "", "implements_for_spec"], [81, 1, 1, "", "index"], [81, 1, 1, "", "is_in"], [81, 1, 1, "", "make_neg_dim"], [81, 1, 1, "", "memoize_encode"], [81, 2, 1, "", "ndim"], [81, 1, 1, "", "ndimension"], [81, 1, 1, "", "one"], [81, 1, 1, "", "ones"], [81, 1, 1, "", "project"], [81, 1, 1, "", "rand"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "sample"], [81, 1, 1, "", "squeeze"], [81, 1, 1, "", "to"], [81, 1, 1, "", "to_numpy"], [81, 1, 1, "", "type_check"], [81, 1, 1, "", "unflatten"], [81, 1, 1, "", "unsqueeze"], [81, 1, 1, "", "view"], [81, 1, 1, "", "zero"], [81, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "erase_memoize_cache"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 1, 1, "", "memoize_encode"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[84, 1, 1, "", "assert_is_in"], [84, 1, 1, "", "cardinality"], [84, 1, 1, "", "clear_device_"], [84, 1, 1, "", "clone"], [84, 1, 1, "", "contains"], [84, 1, 1, "", "cpu"], [84, 1, 1, "", "cuda"], [84, 2, 1, "", "device"], [84, 1, 1, "", "encode"], [84, 1, 1, "", "enumerate"], [84, 1, 1, "", "erase_memoize_cache"], [84, 1, 1, "", "expand"], [84, 1, 1, "", "flatten"], [84, 1, 1, "", "implements_for_spec"], [84, 1, 1, "", "index"], [84, 1, 1, "", "is_in"], [84, 1, 1, "", "make_neg_dim"], [84, 1, 1, "", "memoize_encode"], [84, 2, 1, "", "ndim"], [84, 1, 1, "", "ndimension"], [84, 1, 1, "", "one"], [84, 1, 1, "", "ones"], [84, 1, 1, "", "project"], [84, 1, 1, "", "rand"], [84, 1, 1, "", "reshape"], [84, 1, 1, "", "sample"], [84, 1, 1, "", "squeeze"], [84, 1, 1, "", "to"], [84, 1, 1, "", "to_numpy"], [84, 1, 1, "", "type_check"], [84, 1, 1, "", "unflatten"], [84, 1, 1, "", "unsqueeze"], [84, 1, 1, "", "view"], [84, 1, 1, "", "zero"], [84, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[90, 0, 1, "", "FlatStorageCheckpointer"], [91, 0, 1, "", "H5StorageCheckpointer"], [92, 0, 1, "", "ImmutableDatasetWriter"], [93, 0, 1, "", "LazyMemmapStorage"], [94, 0, 1, "", "LazyStackStorage"], [95, 0, 1, "", "LazyTensorStorage"], [96, 0, 1, "", "ListStorage"], [97, 0, 1, "", "ListStorageCheckpointer"], [98, 0, 1, "", "NestedStorageCheckpointer"], [99, 0, 1, "", "PrioritizedSampler"], [100, 0, 1, "", "PrioritizedSliceSampler"], [101, 0, 1, "", "RandomSampler"], [102, 0, 1, "", "ReplayBufferEnsemble"], [103, 0, 1, "", "RoundRobinWriter"], [104, 0, 1, "", "Sampler"], [105, 0, 1, "", "SamplerEnsemble"], [106, 0, 1, "", "SamplerWithoutReplacement"], [107, 0, 1, "", "SliceSampler"], [108, 0, 1, "", "SliceSamplerWithoutReplacement"], [109, 0, 1, "", "Storage"], [110, 0, 1, "", "StorageCheckpointerBase"], [111, 0, 1, "", "StorageEnsemble"], [112, 0, 1, "", "StorageEnsembleCheckpointer"], [113, 0, 1, "", "TensorDictMaxValueWriter"], [114, 0, 1, "", "TensorDictRoundRobinWriter"], [115, 0, 1, "", "TensorStorage"], [116, 0, 1, "", "TensorStorageCheckpointer"], [117, 0, 1, "", "Writer"], [118, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[100, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[102, 1, 1, "", "add"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "as_remote"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "dumps"], [102, 1, 1, "", "empty"], [102, 1, 1, "", "extend"], [102, 1, 1, "", "insert_transform"], [102, 1, 1, "", "load"], [102, 1, 1, "", "loads"], [102, 1, 1, "", "register_load_hook"], [102, 1, 1, "", "register_save_hook"], [102, 1, 1, "", "sample"], [102, 2, 1, "", "sampler"], [102, 1, 1, "", "save"], [102, 1, 1, "", "set_sampler"], [102, 1, 1, "", "set_storage"], [102, 1, 1, "", "set_writer"], [102, 2, 1, "", "storage"], [102, 2, 1, "", "write_count"], [102, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[103, 1, 1, "", "add"], [103, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"], [113, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"]], "torchrl.envs": [[119, 0, 1, "", "AsyncEnvPool"], [120, 3, 1, "", "BraxEnv"], [121, 3, 1, "", "BraxWrapper"], [122, 0, 1, "", "ChessEnv"], [123, 3, 1, "", "DMControlEnv"], [124, 3, 1, "", "DMControlWrapper"], [125, 0, 1, "", "EnvBase"], [126, 0, 1, "", "EnvCreator"], [127, 0, 1, "", "EnvMetaData"], [128, 3, 1, "", "GymEnv"], [129, 0, 1, "", "GymLikeEnv"], [130, 3, 1, "", "GymWrapper"], [131, 3, 1, "", "HabitatEnv"], [132, 3, 1, "", "IsaacGymEnv"], [133, 3, 1, "", "IsaacGymWrapper"], [134, 3, 1, "", "JumanjiEnv"], [135, 3, 1, "", "JumanjiWrapper"], [136, 0, 1, "", "LLMHashingEnv"], [137, 3, 1, "", "MOGymEnv"], [138, 3, 1, "", "MOGymWrapper"], [139, 3, 1, "", "MarlGroupMapType"], [140, 3, 1, "", "MeltingpotEnv"], [141, 3, 1, "", "MeltingpotWrapper"], [142, 3, 1, "", "ModelBasedEnvBase"], [143, 3, 1, "", "MultiThreadedEnv"], [144, 3, 1, "", "MultiThreadedEnvWrapper"], [145, 3, 1, "", "OpenMLEnv"], [146, 3, 1, "", "OpenSpielEnv"], [147, 3, 1, "", "OpenSpielWrapper"], [148, 0, 1, "", "ParallelEnv"], [149, 0, 1, "", "PendulumEnv"], [150, 3, 1, "", "PettingZooEnv"], [151, 3, 1, "", "PettingZooWrapper"], [152, 0, 1, "", "ProcessorAsyncEnvPool"], [153, 3, 1, "", "RandomPolicy"], [154, 3, 1, "", "RoboHiveEnv"], [155, 3, 1, "", "SMACv2Env"], [156, 3, 1, "", "SMACv2Wrapper"], [157, 0, 1, "", "SerialEnv"], [158, 0, 1, "", "ThreadingAsyncEnvPool"], [159, 0, 1, "", "TicTacToeEnv"], [160, 3, 1, "", "UnityMLAgentsEnv"], [161, 3, 1, "", "UnityMLAgentsWrapper"], [162, 3, 1, "", "VmasEnv"], [163, 3, 1, "", "VmasWrapper"], [164, 3, 1, "", "check_env_specs"], [165, 3, 1, "", "check_marl_grouping"], [166, 3, 1, "", "exploration_type"], [167, 3, 1, "", "get_available_libraries"], [168, 3, 1, "", "gym_backend"], [169, 3, 1, "", "make_composite_from_td"], [142, 1, 1, "", "rand_step"], [172, 3, 1, "", "register_gym_spec_conversion"], [142, 1, 1, "", "reset"], [142, 1, 1, "", "rollout"], [173, 3, 1, "", "set_exploration_type"], [174, 3, 1, "", "set_gym_backend"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "step"], [175, 3, 1, "", "step_mdp"], [176, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[119, 2, 1, "", "action_key"], [119, 2, 1, "", "action_keys"], [119, 2, 1, "", "action_spec"], [119, 2, 1, "", "action_spec_unbatched"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "all_actions"], [119, 1, 1, "", "any_done"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_specs_"], [119, 2, 1, "", "batch_dims"], [119, 2, 1, "", "batch_locked"], [119, 2, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "cardinality"], [119, 1, 1, "", "check_env_specs"], [119, 1, 1, "", "children"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 2, 1, "", "done_key"], [119, 2, 1, "", "done_keys"], [119, 2, 1, "", "done_keys_groups"], [119, 2, 1, "", "done_spec"], [119, 2, 1, "", "done_spec_unbatched"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 2, 1, "", "full_action_spec"], [119, 2, 1, "", "full_action_spec_unbatched"], [119, 2, 1, "", "full_done_spec"], [119, 2, 1, "", "full_done_spec_unbatched"], [119, 2, 1, "", "full_observation_spec_unbatched"], [119, 2, 1, "", "full_reward_spec"], [119, 2, 1, "", "full_reward_spec_unbatched"], [119, 2, 1, "", "full_state_spec"], [119, 2, 1, "", "full_state_spec_unbatched"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 2, 1, "", "input_spec"], [119, 2, 1, "", "input_spec_unbatched"], [119, 1, 1, "", "ipu"], [119, 2, 1, "", "is_spec_locked"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 2, 1, "", "observation_keys"], [119, 2, 1, "", "observation_spec"], [119, 2, 1, "", "observation_spec_unbatched"], [119, 2, 1, "", "output_spec"], [119, 2, 1, "", "output_spec_unbatched"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 2, 1, "", "reset_keys"], [119, 2, 1, "", "reward_key"], [119, 2, 1, "", "reward_keys"], [119, 2, 1, "", "reward_spec"], [119, 2, 1, "", "reward_spec_unbatched"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_spec_lock_"], [119, 1, 1, "", "set_submodule"], [119, 2, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 2, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 2, 1, "", "state_keys"], [119, 2, 1, "", "state_spec"], [119, 2, 1, "", "state_spec_unbatched"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "step_mdp"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[122, 2, 1, "", "action_key"], [122, 2, 1, "", "action_keys"], [122, 2, 1, "", "action_spec"], [122, 2, 1, "", "action_spec_unbatched"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "all_actions"], [122, 1, 1, "", "any_done"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 1, 1, "", "auto_specs_"], [122, 2, 1, "", "batch_dims"], [122, 2, 1, "", "batch_locked"], [122, 2, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "cardinality"], [122, 1, 1, "", "check_env_specs"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 2, 1, "", "done_key"], [122, 2, 1, "", "done_keys"], [122, 2, 1, "", "done_keys_groups"], [122, 2, 1, "", "done_spec"], [122, 2, 1, "", "done_spec_unbatched"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 2, 1, "", "full_action_spec"], [122, 2, 1, "", "full_action_spec_unbatched"], [122, 2, 1, "", "full_done_spec"], [122, 2, 1, "", "full_done_spec_unbatched"], [122, 2, 1, "", "full_observation_spec_unbatched"], [122, 2, 1, "", "full_reward_spec"], [122, 2, 1, "", "full_reward_spec_unbatched"], [122, 2, 1, "", "full_state_spec"], [122, 2, 1, "", "full_state_spec_unbatched"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_legal_moves"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 2, 1, "", "input_spec"], [122, 2, 1, "", "input_spec_unbatched"], [122, 1, 1, "", "ipu"], [122, 2, 1, "", "is_spec_locked"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 2, 1, "", "observation_keys"], [122, 2, 1, "", "observation_spec"], [122, 2, 1, "", "observation_spec_unbatched"], [122, 2, 1, "", "output_spec"], [122, 2, 1, "", "output_spec_unbatched"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "", "reset"], [122, 2, 1, "", "reset_keys"], [122, 2, 1, "", "reward_key"], [122, 2, 1, "", "reward_keys"], [122, 2, 1, "", "reward_spec"], [122, 2, 1, "", "reward_spec_unbatched"], [122, 1, 1, "", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "", "set_seed"], [122, 1, 1, "", "set_spec_lock_"], [122, 1, 1, "", "set_submodule"], [122, 2, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 2, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 2, 1, "", "state_keys"], [122, 2, 1, "", "state_spec"], [122, 2, 1, "", "state_spec_unbatched"], [122, 1, 1, "", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "step_mdp"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[125, 2, 1, "", "action_key"], [125, 2, 1, "", "action_keys"], [125, 2, 1, "", "action_spec"], [125, 2, 1, "", "action_spec_unbatched"], [125, 1, 1, "", "add_module"], [125, 1, 1, "", "add_truncated_keys"], [125, 1, 1, "", "all_actions"], [125, 1, 1, "", "any_done"], [125, 1, 1, "", "append_transform"], [125, 1, 1, "", "apply"], [125, 1, 1, "", "auto_specs_"], [125, 2, 1, "", "batch_dims"], [125, 2, 1, "", "batch_locked"], [125, 2, 1, "", "batch_size"], [125, 1, 1, "", "bfloat16"], [125, 1, 1, "", "buffers"], [125, 1, 1, "", "cardinality"], [125, 1, 1, "", "check_env_specs"], [125, 1, 1, "", "children"], [125, 1, 1, "", "compile"], [125, 1, 1, "", "cpu"], [125, 1, 1, "", "cuda"], [125, 2, 1, "", "done_key"], [125, 2, 1, "", "done_keys"], [125, 2, 1, "", "done_keys_groups"], [125, 2, 1, "", "done_spec"], [125, 2, 1, "", "done_spec_unbatched"], [125, 1, 1, "", "double"], [125, 1, 1, "", "empty_cache"], [125, 1, 1, "", "eval"], [125, 1, 1, "", "extra_repr"], [125, 1, 1, "", "fake_tensordict"], [125, 1, 1, "", "float"], [125, 1, 1, "", "forward"], [125, 2, 1, "", "full_action_spec"], [125, 2, 1, "", "full_action_spec_unbatched"], [125, 2, 1, "", "full_done_spec"], [125, 2, 1, "", "full_done_spec_unbatched"], [125, 2, 1, "", "full_observation_spec_unbatched"], [125, 2, 1, "", "full_reward_spec"], [125, 2, 1, "", "full_reward_spec_unbatched"], [125, 2, 1, "", "full_state_spec"], [125, 2, 1, "", "full_state_spec_unbatched"], [125, 1, 1, "", "get_buffer"], [125, 1, 1, "", "get_extra_state"], [125, 1, 1, "", "get_parameter"], [125, 1, 1, "", "get_submodule"], [125, 1, 1, "", "half"], [125, 2, 1, "", "input_spec"], [125, 2, 1, "", "input_spec_unbatched"], [125, 1, 1, "", "ipu"], [125, 2, 1, "", "is_spec_locked"], [125, 1, 1, "", "load_state_dict"], [125, 1, 1, "", "maybe_reset"], [125, 1, 1, "", "modules"], [125, 1, 1, "", "mtia"], [125, 1, 1, "", "named_buffers"], [125, 1, 1, "", "named_children"], [125, 1, 1, "", "named_modules"], [125, 1, 1, "", "named_parameters"], [125, 2, 1, "", "observation_keys"], [125, 2, 1, "", "observation_spec"], [125, 2, 1, "", "observation_spec_unbatched"], [125, 2, 1, "", "output_spec"], [125, 2, 1, "", "output_spec_unbatched"], [125, 1, 1, "", "parameters"], [125, 1, 1, "", "rand_action"], [125, 1, 1, "id0", "rand_step"], [125, 1, 1, "", "register_backward_hook"], [125, 1, 1, "", "register_buffer"], [125, 1, 1, "", "register_forward_hook"], [125, 1, 1, "", "register_forward_pre_hook"], [125, 1, 1, "", "register_full_backward_hook"], [125, 1, 1, "", "register_full_backward_pre_hook"], [125, 1, 1, "", "register_gym"], [125, 1, 1, "", "register_load_state_dict_post_hook"], [125, 1, 1, "", "register_load_state_dict_pre_hook"], [125, 1, 1, "", "register_module"], [125, 1, 1, "", "register_parameter"], [125, 1, 1, "", "register_state_dict_post_hook"], [125, 1, 1, "", "register_state_dict_pre_hook"], [125, 1, 1, "", "requires_grad_"], [125, 1, 1, "id1", "reset"], [125, 2, 1, "", "reset_keys"], [125, 2, 1, "", "reward_key"], [125, 2, 1, "", "reward_keys"], [125, 2, 1, "", "reward_spec"], [125, 2, 1, "", "reward_spec_unbatched"], [125, 1, 1, "id2", "rollout"], [125, 1, 1, "", "set_extra_state"], [125, 1, 1, "id3", "set_seed"], [125, 1, 1, "", "set_spec_lock_"], [125, 1, 1, "", "set_submodule"], [125, 2, 1, "", "shape"], [125, 1, 1, "", "share_memory"], [125, 2, 1, "", "specs"], [125, 1, 1, "", "state_dict"], [125, 2, 1, "", "state_keys"], [125, 2, 1, "", "state_spec"], [125, 2, 1, "", "state_spec_unbatched"], [125, 1, 1, "id4", "step"], [125, 1, 1, "", "step_and_maybe_reset"], [125, 1, 1, "", "step_mdp"], [125, 1, 1, "", "to"], [125, 1, 1, "", "to_empty"], [125, 1, 1, "", "train"], [125, 1, 1, "", "type"], [125, 1, 1, "", "xpu"], [125, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[126, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[129, 2, 1, "", "action_key"], [129, 2, 1, "", "action_keys"], [129, 2, 1, "", "action_spec"], [129, 2, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "all_actions"], [129, 1, 1, "", "any_done"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_register_info_dict"], [129, 1, 1, "", "auto_specs_"], [129, 2, 1, "", "batch_dims"], [129, 2, 1, "", "batch_locked"], [129, 2, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "close"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 2, 1, "", "done_key"], [129, 2, 1, "", "done_keys"], [129, 2, 1, "", "done_keys_groups"], [129, 2, 1, "", "done_spec"], [129, 2, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "fast_encoding"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 2, 1, "", "full_action_spec"], [129, 2, 1, "", "full_action_spec_unbatched"], [129, 2, 1, "", "full_done_spec"], [129, 2, 1, "", "full_done_spec_unbatched"], [129, 2, 1, "", "full_observation_spec_unbatched"], [129, 2, 1, "", "full_reward_spec"], [129, 2, 1, "", "full_reward_spec_unbatched"], [129, 2, 1, "", "full_state_spec"], [129, 2, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 2, 1, "", "input_spec"], [129, 2, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 2, 1, "", "is_spec_locked"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 2, 1, "", "observation_keys"], [129, 2, 1, "", "observation_spec"], [129, 2, 1, "", "observation_spec_unbatched"], [129, 2, 1, "", "output_spec"], [129, 2, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "read_action"], [129, 1, 1, "", "read_done"], [129, 1, 1, "", "read_obs"], [129, 1, 1, "", "read_reward"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 2, 1, "", "reset_keys"], [129, 2, 1, "", "reward_key"], [129, 2, 1, "", "reward_keys"], [129, 2, 1, "", "reward_spec"], [129, 2, 1, "", "reward_spec_unbatched"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_info_dict_reader"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_spec_lock_"], [129, 1, 1, "", "set_submodule"], [129, 2, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 2, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 2, 1, "", "state_keys"], [129, 2, 1, "", "state_spec"], [129, 2, 1, "", "state_spec_unbatched"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[136, 2, 1, "", "action_key"], [136, 2, 1, "", "action_keys"], [136, 2, 1, "", "action_spec"], [136, 2, 1, "", "action_spec_unbatched"], [136, 1, 1, "", "add_module"], [136, 1, 1, "", "add_truncated_keys"], [136, 1, 1, "", "all_actions"], [136, 1, 1, "", "any_done"], [136, 1, 1, "", "append_transform"], [136, 1, 1, "", "apply"], [136, 1, 1, "", "auto_specs_"], [136, 2, 1, "", "batch_dims"], [136, 2, 1, "", "batch_locked"], [136, 2, 1, "", "batch_size"], [136, 1, 1, "", "bfloat16"], [136, 1, 1, "", "buffers"], [136, 1, 1, "", "cardinality"], [136, 1, 1, "", "check_env_specs"], [136, 1, 1, "", "children"], [136, 1, 1, "", "compile"], [136, 1, 1, "", "cpu"], [136, 1, 1, "", "cuda"], [136, 2, 1, "", "done_key"], [136, 2, 1, "", "done_keys"], [136, 2, 1, "", "done_keys_groups"], [136, 2, 1, "", "done_spec"], [136, 2, 1, "", "done_spec_unbatched"], [136, 1, 1, "", "double"], [136, 1, 1, "", "empty_cache"], [136, 1, 1, "", "eval"], [136, 1, 1, "", "extra_repr"], [136, 1, 1, "", "fake_tensordict"], [136, 1, 1, "", "float"], [136, 1, 1, "", "forward"], [136, 2, 1, "", "full_action_spec"], [136, 2, 1, "", "full_action_spec_unbatched"], [136, 2, 1, "", "full_done_spec"], [136, 2, 1, "", "full_done_spec_unbatched"], [136, 2, 1, "", "full_observation_spec_unbatched"], [136, 2, 1, "", "full_reward_spec"], [136, 2, 1, "", "full_reward_spec_unbatched"], [136, 2, 1, "", "full_state_spec"], [136, 2, 1, "", "full_state_spec_unbatched"], [136, 1, 1, "", "get_buffer"], [136, 1, 1, "", "get_extra_state"], [136, 1, 1, "", "get_parameter"], [136, 1, 1, "", "get_submodule"], [136, 1, 1, "", "half"], [136, 2, 1, "", "input_spec"], [136, 2, 1, "", "input_spec_unbatched"], [136, 1, 1, "", "ipu"], [136, 2, 1, "", "is_spec_locked"], [136, 1, 1, "", "load_state_dict"], [136, 1, 1, "", "make_tensordict"], [136, 1, 1, "", "maybe_reset"], [136, 1, 1, "", "modules"], [136, 1, 1, "", "mtia"], [136, 1, 1, "", "named_buffers"], [136, 1, 1, "", "named_children"], [136, 1, 1, "", "named_modules"], [136, 1, 1, "", "named_parameters"], [136, 2, 1, "", "observation_keys"], [136, 2, 1, "", "observation_spec"], [136, 2, 1, "", "observation_spec_unbatched"], [136, 2, 1, "", "output_spec"], [136, 2, 1, "", "output_spec_unbatched"], [136, 1, 1, "", "parameters"], [136, 1, 1, "", "rand_action"], [136, 1, 1, "", "rand_step"], [136, 1, 1, "", "register_backward_hook"], [136, 1, 1, "", "register_buffer"], [136, 1, 1, "", "register_forward_hook"], [136, 1, 1, "", "register_forward_pre_hook"], [136, 1, 1, "", "register_full_backward_hook"], [136, 1, 1, "", "register_full_backward_pre_hook"], [136, 1, 1, "", "register_gym"], [136, 1, 1, "", "register_load_state_dict_post_hook"], [136, 1, 1, "", "register_load_state_dict_pre_hook"], [136, 1, 1, "", "register_module"], [136, 1, 1, "", "register_parameter"], [136, 1, 1, "", "register_state_dict_post_hook"], [136, 1, 1, "", "register_state_dict_pre_hook"], [136, 1, 1, "", "requires_grad_"], [136, 1, 1, "", "reset"], [136, 2, 1, "", "reset_keys"], [136, 2, 1, "", "reward_key"], [136, 2, 1, "", "reward_keys"], [136, 2, 1, "", "reward_spec"], [136, 2, 1, "", "reward_spec_unbatched"], [136, 1, 1, "", "rollout"], [136, 1, 1, "", "set_extra_state"], [136, 1, 1, "", "set_seed"], [136, 1, 1, "", "set_spec_lock_"], [136, 1, 1, "", "set_submodule"], [136, 2, 1, "", "shape"], [136, 1, 1, "", "share_memory"], [136, 2, 1, "", "specs"], [136, 1, 1, "", "state_dict"], [136, 2, 1, "", "state_keys"], [136, 2, 1, "", "state_spec"], [136, 2, 1, "", "state_spec_unbatched"], [136, 1, 1, "", "step"], [136, 1, 1, "", "step_and_maybe_reset"], [136, 1, 1, "", "step_mdp"], [136, 1, 1, "", "to"], [136, 1, 1, "", "to_empty"], [136, 1, 1, "", "train"], [136, 1, 1, "", "type"], [136, 1, 1, "", "xpu"], [136, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[148, 2, 1, "", "action_key"], [148, 2, 1, "", "action_keys"], [148, 2, 1, "", "action_spec"], [148, 2, 1, "", "action_spec_unbatched"], [148, 1, 1, "", "add_module"], [148, 1, 1, "", "add_truncated_keys"], [148, 1, 1, "", "all_actions"], [148, 1, 1, "", "any_done"], [148, 1, 1, "", "append_transform"], [148, 1, 1, "", "apply"], [148, 1, 1, "", "auto_specs_"], [148, 2, 1, "", "batch_dims"], [148, 2, 1, "", "batch_locked"], [148, 2, 1, "", "batch_size"], [148, 1, 1, "", "bfloat16"], [148, 1, 1, "", "buffers"], [148, 1, 1, "", "cardinality"], [148, 1, 1, "", "check_env_specs"], [148, 1, 1, "", "children"], [148, 1, 1, "", "compile"], [148, 1, 1, "", "cpu"], [148, 1, 1, "", "cuda"], [148, 2, 1, "", "done_key"], [148, 2, 1, "", "done_keys"], [148, 2, 1, "", "done_keys_groups"], [148, 2, 1, "", "done_spec"], [148, 2, 1, "", "done_spec_unbatched"], [148, 1, 1, "", "double"], [148, 1, 1, "", "empty_cache"], [148, 1, 1, "", "eval"], [148, 1, 1, "", "extra_repr"], [148, 1, 1, "", "fake_tensordict"], [148, 1, 1, "", "float"], [148, 1, 1, "", "forward"], [148, 2, 1, "", "full_action_spec"], [148, 2, 1, "", "full_action_spec_unbatched"], [148, 2, 1, "", "full_done_spec"], [148, 2, 1, "", "full_done_spec_unbatched"], [148, 2, 1, "", "full_observation_spec_unbatched"], [148, 2, 1, "", "full_reward_spec"], [148, 2, 1, "", "full_reward_spec_unbatched"], [148, 2, 1, "", "full_state_spec"], [148, 2, 1, "", "full_state_spec_unbatched"], [148, 1, 1, "", "get_buffer"], [148, 1, 1, "", "get_extra_state"], [148, 1, 1, "", "get_parameter"], [148, 1, 1, "", "get_submodule"], [148, 1, 1, "", "half"], [148, 2, 1, "", "input_spec"], [148, 2, 1, "", "input_spec_unbatched"], [148, 1, 1, "", "ipu"], [148, 2, 1, "", "is_spec_locked"], [148, 1, 1, "", "load_state_dict"], [148, 1, 1, "", "maybe_reset"], [148, 1, 1, "", "modules"], [148, 1, 1, "", "mtia"], [148, 1, 1, "", "named_buffers"], [148, 1, 1, "", "named_children"], [148, 1, 1, "", "named_modules"], [148, 1, 1, "", "named_parameters"], [148, 2, 1, "", "observation_keys"], [148, 2, 1, "", "observation_spec"], [148, 2, 1, "", "observation_spec_unbatched"], [148, 2, 1, "", "output_spec"], [148, 2, 1, "", "output_spec_unbatched"], [148, 1, 1, "", "parameters"], [148, 1, 1, "", "rand_action"], [148, 1, 1, "", "rand_step"], [148, 1, 1, "", "register_backward_hook"], [148, 1, 1, "", "register_buffer"], [148, 1, 1, "", "register_forward_hook"], [148, 1, 1, "", "register_forward_pre_hook"], [148, 1, 1, "", "register_full_backward_hook"], [148, 1, 1, "", "register_full_backward_pre_hook"], [148, 1, 1, "", "register_gym"], [148, 1, 1, "", "register_load_state_dict_post_hook"], [148, 1, 1, "", "register_load_state_dict_pre_hook"], [148, 1, 1, "", "register_module"], [148, 1, 1, "", "register_parameter"], [148, 1, 1, "", "register_state_dict_post_hook"], [148, 1, 1, "", "register_state_dict_pre_hook"], [148, 1, 1, "", "requires_grad_"], [148, 1, 1, "", "reset"], [148, 2, 1, "", "reset_keys"], [148, 2, 1, "", "reward_key"], [148, 2, 1, "", "reward_keys"], [148, 2, 1, "", "reward_spec"], [148, 2, 1, "", "reward_spec_unbatched"], [148, 1, 1, "", "rollout"], [148, 1, 1, "", "set_extra_state"], [148, 1, 1, "", "set_seed"], [148, 1, 1, "", "set_spec_lock_"], [148, 1, 1, "", "set_submodule"], [148, 2, 1, "", "shape"], [148, 1, 1, "", "share_memory"], [148, 2, 1, "", "specs"], [148, 1, 1, "", "state_dict"], [148, 2, 1, "", "state_keys"], [148, 2, 1, "", "state_spec"], [148, 2, 1, "", "state_spec_unbatched"], [148, 1, 1, "", "step"], [148, 1, 1, "", "step_and_maybe_reset"], [148, 1, 1, "", "step_mdp"], [148, 1, 1, "", "to"], [148, 1, 1, "", "to_empty"], [148, 1, 1, "", "train"], [148, 1, 1, "", "type"], [148, 1, 1, "", "update_kwargs"], [148, 1, 1, "", "xpu"], [148, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[149, 2, 1, "", "action_key"], [149, 2, 1, "", "action_keys"], [149, 2, 1, "", "action_spec"], [149, 2, 1, "", "action_spec_unbatched"], [149, 1, 1, "", "add_module"], [149, 1, 1, "", "add_truncated_keys"], [149, 1, 1, "", "all_actions"], [149, 1, 1, "", "any_done"], [149, 1, 1, "", "append_transform"], [149, 1, 1, "", "apply"], [149, 1, 1, "", "auto_specs_"], [149, 2, 1, "", "batch_dims"], [149, 2, 1, "", "batch_size"], [149, 1, 1, "", "bfloat16"], [149, 1, 1, "", "buffers"], [149, 1, 1, "", "cardinality"], [149, 1, 1, "", "check_env_specs"], [149, 1, 1, "", "children"], [149, 1, 1, "", "compile"], [149, 1, 1, "", "cpu"], [149, 1, 1, "", "cuda"], [149, 2, 1, "", "done_key"], [149, 2, 1, "", "done_keys"], [149, 2, 1, "", "done_keys_groups"], [149, 2, 1, "", "done_spec"], [149, 2, 1, "", "done_spec_unbatched"], [149, 1, 1, "", "double"], [149, 1, 1, "", "empty_cache"], [149, 1, 1, "", "eval"], [149, 1, 1, "", "extra_repr"], [149, 1, 1, "", "fake_tensordict"], [149, 1, 1, "", "float"], [149, 1, 1, "", "forward"], [149, 2, 1, "", "full_action_spec"], [149, 2, 1, "", "full_action_spec_unbatched"], [149, 2, 1, "", "full_done_spec"], [149, 2, 1, "", "full_done_spec_unbatched"], [149, 2, 1, "", "full_observation_spec_unbatched"], [149, 2, 1, "", "full_reward_spec"], [149, 2, 1, "", "full_reward_spec_unbatched"], [149, 2, 1, "", "full_state_spec"], [149, 2, 1, "", "full_state_spec_unbatched"], [149, 1, 1, "", "gen_params"], [149, 1, 1, "", "get_buffer"], [149, 1, 1, "", "get_extra_state"], [149, 1, 1, "", "get_parameter"], [149, 1, 1, "", "get_submodule"], [149, 1, 1, "", "half"], [149, 2, 1, "", "input_spec"], [149, 2, 1, "", "input_spec_unbatched"], [149, 1, 1, "", "ipu"], [149, 2, 1, "", "is_spec_locked"], [149, 1, 1, "", "load_state_dict"], [149, 1, 1, "", "maybe_reset"], [149, 1, 1, "", "modules"], [149, 1, 1, "", "mtia"], [149, 1, 1, "", "named_buffers"], [149, 1, 1, "", "named_children"], [149, 1, 1, "", "named_modules"], [149, 1, 1, "", "named_parameters"], [149, 2, 1, "", "observation_keys"], [149, 2, 1, "", "observation_spec"], [149, 2, 1, "", "observation_spec_unbatched"], [149, 2, 1, "", "output_spec"], [149, 2, 1, "", "output_spec_unbatched"], [149, 1, 1, "", "parameters"], [149, 1, 1, "", "rand_action"], [149, 1, 1, "", "rand_step"], [149, 1, 1, "", "register_backward_hook"], [149, 1, 1, "", "register_buffer"], [149, 1, 1, "", "register_forward_hook"], [149, 1, 1, "", "register_forward_pre_hook"], [149, 1, 1, "", "register_full_backward_hook"], [149, 1, 1, "", "register_full_backward_pre_hook"], [149, 1, 1, "", "register_gym"], [149, 1, 1, "", "register_load_state_dict_post_hook"], [149, 1, 1, "", "register_load_state_dict_pre_hook"], [149, 1, 1, "", "register_module"], [149, 1, 1, "", "register_parameter"], [149, 1, 1, "", "register_state_dict_post_hook"], [149, 1, 1, "", "register_state_dict_pre_hook"], [149, 1, 1, "", "requires_grad_"], [149, 1, 1, "", "reset"], [149, 2, 1, "", "reset_keys"], [149, 2, 1, "", "reward_key"], [149, 2, 1, "", "reward_keys"], [149, 2, 1, "", "reward_spec"], [149, 2, 1, "", "reward_spec_unbatched"], [149, 1, 1, "", "rollout"], [149, 1, 1, "", "set_extra_state"], [149, 1, 1, "", "set_seed"], [149, 1, 1, "", "set_spec_lock_"], [149, 1, 1, "", "set_submodule"], [149, 2, 1, "", "shape"], [149, 1, 1, "", "share_memory"], [149, 2, 1, "", "specs"], [149, 1, 1, "", "state_dict"], [149, 2, 1, "", "state_keys"], [149, 2, 1, "", "state_spec"], [149, 2, 1, "", "state_spec_unbatched"], [149, 1, 1, "", "step"], [149, 1, 1, "", "step_and_maybe_reset"], [149, 1, 1, "", "step_mdp"], [149, 1, 1, "", "to"], [149, 1, 1, "", "to_empty"], [149, 1, 1, "", "train"], [149, 1, 1, "", "type"], [149, 1, 1, "", "xpu"], [149, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[152, 1, 1, "", "_setup"], [152, 2, 1, "", "action_key"], [152, 2, 1, "", "action_keys"], [152, 2, 1, "", "action_spec"], [152, 2, 1, "", "action_spec_unbatched"], [152, 1, 1, "", "add_module"], [152, 1, 1, "", "add_truncated_keys"], [152, 1, 1, "", "all_actions"], [152, 1, 1, "", "any_done"], [152, 1, 1, "", "append_transform"], [152, 1, 1, "", "apply"], [152, 1, 1, "", "async_reset_recv"], [152, 1, 1, "", "async_reset_send"], [152, 1, 1, "", "async_step_recv"], [152, 1, 1, "", "async_step_send"], [152, 1, 1, "", "auto_specs_"], [152, 2, 1, "", "batch_dims"], [152, 2, 1, "", "batch_locked"], [152, 2, 1, "", "batch_size"], [152, 1, 1, "", "bfloat16"], [152, 1, 1, "", "buffers"], [152, 1, 1, "", "cardinality"], [152, 1, 1, "", "check_env_specs"], [152, 1, 1, "", "children"], [152, 1, 1, "", "compile"], [152, 1, 1, "", "cpu"], [152, 1, 1, "", "cuda"], [152, 2, 1, "", "done_key"], [152, 2, 1, "", "done_keys"], [152, 2, 1, "", "done_keys_groups"], [152, 2, 1, "", "done_spec"], [152, 2, 1, "", "done_spec_unbatched"], [152, 1, 1, "", "double"], [152, 1, 1, "", "empty_cache"], [152, 1, 1, "", "eval"], [152, 1, 1, "", "extra_repr"], [152, 1, 1, "", "fake_tensordict"], [152, 1, 1, "", "float"], [152, 1, 1, "", "forward"], [152, 2, 1, "", "full_action_spec"], [152, 2, 1, "", "full_action_spec_unbatched"], [152, 2, 1, "", "full_done_spec"], [152, 2, 1, "", "full_done_spec_unbatched"], [152, 2, 1, "", "full_observation_spec_unbatched"], [152, 2, 1, "", "full_reward_spec"], [152, 2, 1, "", "full_reward_spec_unbatched"], [152, 2, 1, "", "full_state_spec"], [152, 2, 1, "", "full_state_spec_unbatched"], [152, 1, 1, "", "get_buffer"], [152, 1, 1, "", "get_extra_state"], [152, 1, 1, "", "get_parameter"], [152, 1, 1, "", "get_submodule"], [152, 1, 1, "", "half"], [152, 2, 1, "", "input_spec"], [152, 2, 1, "", "input_spec_unbatched"], [152, 1, 1, "", "ipu"], [152, 2, 1, "", "is_spec_locked"], [152, 1, 1, "", "load_state_dict"], [152, 1, 1, "", "maybe_reset"], [152, 1, 1, "", "modules"], [152, 1, 1, "", "mtia"], [152, 1, 1, "", "named_buffers"], [152, 1, 1, "", "named_children"], [152, 1, 1, "", "named_modules"], [152, 1, 1, "", "named_parameters"], [152, 2, 1, "", "observation_keys"], [152, 2, 1, "", "observation_spec"], [152, 2, 1, "", "observation_spec_unbatched"], [152, 2, 1, "", "output_spec"], [152, 2, 1, "", "output_spec_unbatched"], [152, 1, 1, "", "parameters"], [152, 1, 1, "", "rand_action"], [152, 1, 1, "", "rand_step"], [152, 1, 1, "", "register_backward_hook"], [152, 1, 1, "", "register_buffer"], [152, 1, 1, "", "register_forward_hook"], [152, 1, 1, "", "register_forward_pre_hook"], [152, 1, 1, "", "register_full_backward_hook"], [152, 1, 1, "", "register_full_backward_pre_hook"], [152, 1, 1, "", "register_gym"], [152, 1, 1, "", "register_load_state_dict_post_hook"], [152, 1, 1, "", "register_load_state_dict_pre_hook"], [152, 1, 1, "", "register_module"], [152, 1, 1, "", "register_parameter"], [152, 1, 1, "", "register_state_dict_post_hook"], [152, 1, 1, "", "register_state_dict_pre_hook"], [152, 1, 1, "", "requires_grad_"], [152, 1, 1, "", "reset"], [152, 2, 1, "", "reset_keys"], [152, 2, 1, "", "reward_key"], [152, 2, 1, "", "reward_keys"], [152, 2, 1, "", "reward_spec"], [152, 2, 1, "", "reward_spec_unbatched"], [152, 1, 1, "", "rollout"], [152, 1, 1, "", "set_extra_state"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "set_spec_lock_"], [152, 1, 1, "", "set_submodule"], [152, 2, 1, "", "shape"], [152, 1, 1, "", "share_memory"], [152, 1, 1, "", "shutdown"], [152, 2, 1, "", "specs"], [152, 1, 1, "", "state_dict"], [152, 2, 1, "", "state_keys"], [152, 2, 1, "", "state_spec"], [152, 2, 1, "", "state_spec_unbatched"], [152, 1, 1, "", "step"], [152, 1, 1, "", "step_and_maybe_reset"], [152, 1, 1, "", "step_mdp"], [152, 1, 1, "", "to"], [152, 1, 1, "", "to_empty"], [152, 1, 1, "", "train"], [152, 1, 1, "", "type"], [152, 1, 1, "", "xpu"], [152, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[157, 2, 1, "", "action_key"], [157, 2, 1, "", "action_keys"], [157, 2, 1, "", "action_spec"], [157, 2, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "all_actions"], [157, 1, 1, "", "any_done"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "auto_specs_"], [157, 2, 1, "", "batch_dims"], [157, 2, 1, "", "batch_locked"], [157, 2, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 2, 1, "", "done_key"], [157, 2, 1, "", "done_keys"], [157, 2, 1, "", "done_keys_groups"], [157, 2, 1, "", "done_spec"], [157, 2, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 2, 1, "", "full_action_spec"], [157, 2, 1, "", "full_action_spec_unbatched"], [157, 2, 1, "", "full_done_spec"], [157, 2, 1, "", "full_done_spec_unbatched"], [157, 2, 1, "", "full_observation_spec_unbatched"], [157, 2, 1, "", "full_reward_spec"], [157, 2, 1, "", "full_reward_spec_unbatched"], [157, 2, 1, "", "full_state_spec"], [157, 2, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 2, 1, "", "input_spec"], [157, 2, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 2, 1, "", "is_spec_locked"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 2, 1, "", "observation_keys"], [157, 2, 1, "", "observation_spec"], [157, 2, 1, "", "observation_spec_unbatched"], [157, 2, 1, "", "output_spec"], [157, 2, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 2, 1, "", "reset_keys"], [157, 2, 1, "", "reward_key"], [157, 2, 1, "", "reward_keys"], [157, 2, 1, "", "reward_spec"], [157, 2, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_spec_lock_"], [157, 1, 1, "", "set_submodule"], [157, 2, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 2, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 2, 1, "", "state_keys"], [157, 2, 1, "", "state_spec"], [157, 2, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "update_kwargs"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[158, 1, 1, "", "_setup"], [158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "async_reset_recv"], [158, 1, 1, "", "async_reset_send"], [158, 1, 1, "", "async_step_recv"], [158, 1, 1, "", "async_step_send"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_locked"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 1, 1, "", "shutdown"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[170, 3, 1, "", "DreamerDecoder"], [171, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[177, 0, 1, "", "ActionDiscretizer"], [178, 0, 1, "", "ActionMask"], [179, 0, 1, "", "AutoResetEnv"], [180, 0, 1, "", "AutoResetTransform"], [181, 0, 1, "", "BatchSizeTransform"], [182, 0, 1, "", "BinarizeReward"], [183, 0, 1, "", "BurnInTransform"], [184, 0, 1, "", "CatFrames"], [185, 0, 1, "", "CatTensors"], [186, 0, 1, "", "CenterCrop"], [187, 0, 1, "", "ClipTransform"], [188, 0, 1, "", "Compose"], [189, 0, 1, "", "ConditionalSkip"], [190, 0, 1, "", "Crop"], [191, 0, 1, "", "DTypeCastTransform"], [192, 0, 1, "", "DeviceCastTransform"], [193, 0, 1, "", "DiscreteActionProjection"], [194, 0, 1, "", "DoubleToFloat"], [195, 0, 1, "", "EndOfLifeTransform"], [196, 0, 1, "", "ExcludeTransform"], [197, 0, 1, "", "FiniteTensorDictCheck"], [198, 0, 1, "", "FlattenObservation"], [199, 0, 1, "", "FrameSkipTransform"], [200, 0, 1, "", "GrayScale"], [201, 0, 1, "", "Hash"], [202, 0, 1, "", "InitTracker"], [203, 0, 1, "", "KLRewardTransform"], [204, 0, 1, "", "LineariseRewards"], [205, 0, 1, "", "MultiAction"], [206, 0, 1, "", "NoopResetEnv"], [207, 0, 1, "", "ObservationNorm"], [208, 0, 1, "", "ObservationTransform"], [209, 0, 1, "", "PermuteTransform"], [210, 0, 1, "", "PinMemoryTransform"], [211, 0, 1, "", "R3MTransform"], [212, 0, 1, "", "RandomCropTensorDict"], [213, 0, 1, "", "RemoveEmptySpecs"], [214, 0, 1, "", "RenameTransform"], [215, 0, 1, "", "Resize"], [216, 0, 1, "", "Reward2GoTransform"], [217, 0, 1, "", "RewardClipping"], [218, 0, 1, "", "RewardScaling"], [219, 0, 1, "", "RewardSum"], [220, 0, 1, "", "SelectTransform"], [221, 0, 1, "", "SignTransform"], [222, 0, 1, "", "SqueezeTransform"], [223, 0, 1, "", "Stack"], [224, 0, 1, "", "StepCounter"], [225, 0, 1, "", "TargetReturn"], [226, 0, 1, "", "TensorDictPrimer"], [227, 0, 1, "", "TimeMaxPool"], [228, 0, 1, "", "Timer"], [229, 0, 1, "", "ToTensorImage"], [230, 0, 1, "", "Tokenizer"], [231, 0, 1, "", "TrajCounter"], [232, 0, 1, "", "Transform"], [233, 0, 1, "", "TransformedEnv"], [234, 0, 1, "", "UnaryTransform"], [235, 0, 1, "", "UnsqueezeTransform"], [236, 0, 1, "", "VC1Transform"], [237, 0, 1, "", "VIPRewardTransform"], [238, 0, 1, "", "VIPTransform"], [239, 0, 1, "", "VecGymEnvTransform"], [240, 0, 1, "", "VecNorm"], [241, 0, 1, "", "VecNormV2"], [242, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[177, 0, 1, "", "SamplingStrategy"], [177, 1, 1, "", "inv"], [177, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[178, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[179, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[180, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_env_batch_size"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[182, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[183, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "make_rb_transform_and_sampler"], [184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[188, 1, 1, "", "append"], [188, 1, 1, "", "forward"], [188, 1, 1, "", "init"], [188, 1, 1, "", "insert"], [188, 1, 1, "", "to"], [188, 1, 1, "", "transform_action_spec"], [188, 1, 1, "", "transform_env_batch_size"], [188, 1, 1, "", "transform_env_device"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"], [188, 1, 1, "", "transform_output_spec"], [188, 1, 1, "", "transform_reward_spec"], [188, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[189, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[190, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_action_spec"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[193, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "register_keys"], [195, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[197, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[199, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[200, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[201, 1, 1, "", "get_input_from_hash"], [201, 1, 1, "", "reproducible_hash"], [201, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[204, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[207, 1, 1, "", "init_stats"], [207, 1, 1, "", "transform_action_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[210, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[211, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[212, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[215, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[216, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[217, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[218, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "transform_input_spec"], [219, 1, 1, "", "transform_observation_spec"], [219, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[221, 1, 1, "", "transform_observation_spec"], [221, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_done_spec"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_observation_spec"], [224, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "transform_input_spec"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "to"], [226, 1, 1, "", "transform_input_spec"], [226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "transform_done_spec"], [230, 1, 1, "", "transform_input_spec"], [230, 1, 1, "", "transform_observation_spec"], [230, 1, 1, "", "transform_output_spec"], [230, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "load_state_dict"], [231, 1, 1, "", "state_dict"], [231, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[232, 1, 1, "", "clone"], [232, 2, 1, "", "container"], [232, 1, 1, "", "forward"], [232, 1, 1, "", "init"], [232, 1, 1, "", "inv"], [232, 2, 1, "", "parent"], [232, 1, 1, "", "reset_parent"], [232, 1, 1, "", "set_container"], [232, 1, 1, "", "to"], [232, 1, 1, "", "transform_action_spec"], [232, 1, 1, "", "transform_done_spec"], [232, 1, 1, "", "transform_env_batch_size"], [232, 1, 1, "", "transform_env_device"], [232, 1, 1, "", "transform_input_spec"], [232, 1, 1, "", "transform_observation_spec"], [232, 1, 1, "", "transform_output_spec"], [232, 1, 1, "", "transform_reward_spec"], [232, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[233, 1, 1, "", "add_truncated_keys"], [233, 1, 1, "", "append_transform"], [233, 2, 1, "", "batch_locked"], [233, 2, 1, "", "batch_size"], [233, 1, 1, "", "empty_cache"], [233, 1, 1, "", "eval"], [233, 2, 1, "", "input_spec"], [233, 1, 1, "", "insert_transform"], [233, 1, 1, "", "load_state_dict"], [233, 2, 1, "", "output_spec"], [233, 1, 1, "", "rand_action"], [233, 1, 1, "", "set_missing_tolerance"], [233, 1, 1, "", "set_seed"], [233, 1, 1, "", "state_dict"], [233, 1, 1, "", "to"], [233, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[234, 1, 1, "", "transform_action_spec"], [234, 1, 1, "", "transform_done_spec"], [234, 1, 1, "", "transform_input_spec"], [234, 1, 1, "", "transform_observation_spec"], [234, 1, 1, "", "transform_output_spec"], [234, 1, 1, "", "transform_reward_spec"], [234, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[235, 1, 1, "", "transform_action_spec"], [235, 1, 1, "", "transform_observation_spec"], [235, 1, 1, "", "transform_reward_spec"], [235, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "make_noload_model"], [236, 1, 1, "", "to"], [236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[238, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[240, 1, 1, "", "build_td_for_shared_vecnorm"], [240, 1, 1, "", "forward"], [240, 1, 1, "", "freeze"], [240, 1, 1, "", "frozen_copy"], [240, 1, 1, "", "get_extra_state"], [240, 2, 1, "", "loc"], [240, 2, 1, "", "scale"], [240, 1, 1, "", "set_extra_state"], [240, 2, 1, "", "standard_normal"], [240, 1, 1, "", "to_observation_norm"], [240, 1, 1, "", "transform_observation_spec"], [240, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[241, 1, 1, "", "clone"], [241, 1, 1, "id0", "freeze"], [241, 1, 1, "id1", "frozen_copy"], [241, 1, 1, "id2", "get_extra_state"], [241, 2, 1, "id3", "loc"], [241, 2, 1, "id4", "scale"], [241, 1, 1, "id5", "set_extra_state"], [241, 2, 1, "id6", "standard_normal"], [241, 1, 1, "", "to_observation_norm"], [241, 1, 1, "id7", "transform_observation_spec"], [241, 1, 1, "id8", "transform_output_spec"], [241, 1, 1, "id9", "transform_reward_spec"], [241, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[243, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[243, 1, 1, "", "add_module"], [243, 1, 1, "", "apply"], [243, 1, 1, "", "bfloat16"], [243, 1, 1, "", "buffers"], [243, 1, 1, "", "children"], [243, 1, 1, "", "compile"], [243, 2, 1, "", "container"], [243, 1, 1, "", "cpu"], [243, 1, 1, "", "cuda"], [243, 1, 1, "", "double"], [243, 1, 1, "", "eval"], [243, 1, 1, "", "extra_repr"], [243, 1, 1, "", "float"], [243, 1, 1, "", "forward"], [243, 1, 1, "", "get_buffer"], [243, 1, 1, "", "get_extra_state"], [243, 1, 1, "", "get_parameter"], [243, 1, 1, "", "get_submodule"], [243, 1, 1, "", "half"], [243, 1, 1, "", "init"], [243, 1, 1, "", "inv"], [243, 1, 1, "", "ipu"], [243, 1, 1, "", "load_state_dict"], [243, 1, 1, "", "modules"], [243, 1, 1, "", "mtia"], [243, 2, 1, "", "n_steps"], [243, 1, 1, "", "named_buffers"], [243, 1, 1, "", "named_children"], [243, 1, 1, "", "named_modules"], [243, 1, 1, "", "named_parameters"], [243, 1, 1, "", "parameters"], [243, 2, 1, "", "parent"], [243, 1, 1, "", "register_backward_hook"], [243, 1, 1, "", "register_buffer"], [243, 1, 1, "", "register_forward_hook"], [243, 1, 1, "", "register_forward_pre_hook"], [243, 1, 1, "", "register_full_backward_hook"], [243, 1, 1, "", "register_full_backward_pre_hook"], [243, 1, 1, "", "register_load_state_dict_post_hook"], [243, 1, 1, "", "register_load_state_dict_pre_hook"], [243, 1, 1, "", "register_module"], [243, 1, 1, "", "register_parameter"], [243, 1, 1, "", "register_state_dict_post_hook"], [243, 1, 1, "", "register_state_dict_pre_hook"], [243, 1, 1, "", "requires_grad_"], [243, 1, 1, "", "set_extra_state"], [243, 1, 1, "", "set_submodule"], [243, 1, 1, "", "share_memory"], [243, 1, 1, "", "state_dict"], [243, 1, 1, "", "to"], [243, 1, 1, "", "to_empty"], [243, 1, 1, "", "train"], [243, 1, 1, "", "transform_action_spec"], [243, 1, 1, "", "transform_done_spec"], [243, 1, 1, "", "transform_env_batch_size"], [243, 1, 1, "", "transform_env_device"], [243, 1, 1, "", "transform_input_spec"], [243, 1, 1, "", "transform_observation_spec"], [243, 1, 1, "", "transform_output_spec"], [243, 1, 1, "", "transform_reward_spec"], [243, 1, 1, "", "transform_state_spec"], [243, 1, 1, "", "type"], [243, 1, 1, "", "xpu"], [243, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[244, 1, 1, "", "get_class_that_defined_method"], [244, 1, 1, "", "import_module"], [244, 1, 1, "", "module_set"], [244, 1, 1, "", "reset"]], "torchrl.modules": [[245, 0, 1, "", "AdditiveGaussianModule"], [246, 0, 1, "", "BatchRenorm1d"], [247, 0, 1, "", "CEMPlanner"], [248, 0, 1, "", "ConsistentDropout"], [249, 0, 1, "", "ConsistentDropoutModule"], [250, 0, 1, "", "Conv3dNet"], [251, 0, 1, "", "ConvNet"], [252, 0, 1, "", "DTActor"], [253, 0, 1, "", "DdpgCnnActor"], [254, 0, 1, "", "DdpgCnnQNet"], [255, 0, 1, "", "DdpgMlpActor"], [256, 0, 1, "", "DdpgMlpQNet"], [257, 0, 1, "", "DecisionTransformer"], [258, 0, 1, "", "Delta"], [259, 0, 1, "", "DistributionalDQNnet"], [260, 0, 1, "", "DistributionalQValueHook"], [261, 0, 1, "", "DreamerActor"], [262, 0, 1, "", "DuelingCnnDQNet"], [263, 0, 1, "", "EGreedyModule"], [264, 0, 1, "", "GRU"], [265, 0, 1, "", "GRUCell"], [266, 0, 1, "", "GRUModule"], [267, 0, 1, "", "IndependentNormal"], [268, 0, 1, "", "LSTM"], [269, 0, 1, "", "LSTMCell"], [270, 0, 1, "", "LSTMModule"], [271, 0, 1, "", "MLP"], [272, 0, 1, "", "MPCPlannerBase"], [273, 0, 1, "", "MPPIPlanner"], [274, 0, 1, "", "MaskedCategorical"], [275, 0, 1, "", "MaskedOneHotCategorical"], [276, 0, 1, "", "MultiAgentConvNet"], [277, 0, 1, "", "MultiAgentMLP"], [278, 0, 1, "", "MultiAgentNetBase"], [279, 0, 1, "", "NoisyLazyLinear"], [280, 0, 1, "", "NoisyLinear"], [281, 0, 1, "", "ObsDecoder"], [282, 0, 1, "", "ObsEncoder"], [283, 0, 1, "", "OneHotCategorical"], [284, 0, 1, "", "OneHotOrdinal"], [285, 0, 1, "", "OnlineDTActor"], [286, 0, 1, "", "Ordinal"], [287, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [288, 0, 1, "", "QMixer"], [289, 0, 1, "", "QValueHook"], [290, 0, 1, "", "RSSMPosterior"], [291, 0, 1, "", "RSSMPrior"], [292, 0, 1, "", "Squeeze2dLayer"], [293, 0, 1, "", "SqueezeLayer"], [294, 0, 1, "", "TanhDelta"], [295, 0, 1, "", "TanhNormal"], [296, 0, 1, "", "TruncatedNormal"], [297, 0, 1, "", "VDNMixer"], [298, 0, 1, "", "VmapModule"], [299, 0, 1, "", "recurrent_mode"], [300, 0, 1, "", "reset_noise"], [301, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[246, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[247, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[248, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[250, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[251, 1, 1, "", "default_atari_dqn"], [251, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[252, 1, 1, "", "default_config"], [252, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[253, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[254, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[255, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[256, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[257, 0, 1, "", "DTConfig"], [257, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[258, 1, 1, "", "expand"], [258, 1, 1, "", "log_prob"], [258, 2, 1, "", "mean"], [258, 2, 1, "", "mode"], [258, 1, 1, "", "rsample"], [258, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[259, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[261, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[262, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "step"]], "torchrl.modules.GRU": [[264, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[265, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_cudnn_based"], [266, 1, 1, "", "make_python_based"], [266, 1, 1, "id0", "make_tensordict_primer"], [266, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[267, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[268, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[269, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_cudnn_based"], [270, 1, 1, "", "make_python_based"], [270, 1, 1, "id0", "make_tensordict_primer"], [270, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[271, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[273, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[274, 1, 1, "", "log_prob"], [274, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[275, 1, 1, "", "log_prob"], [275, 2, 1, "", "mode"], [275, 1, 1, "", "rsample"], [275, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "from_stateful_net"], [278, 1, 1, "", "get_stateful_net"], [278, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[279, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[281, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[282, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[283, 1, 1, "", "entropy"], [283, 1, 1, "", "log_prob"], [283, 2, 1, "", "mode"], [283, 1, 1, "", "rsample"], [283, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[285, 1, 1, "", "default_config"], [285, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[288, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[290, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[291, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[293, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[294, 2, 1, "", "mean"], [294, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[295, 1, 1, "", "get_mode"], [295, 2, 1, "", "mean"], [295, 2, 1, "", "mode"], [295, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[296, 1, 1, "", "log_prob"], [296, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[297, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[298, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[302, 0, 1, "", "Actor"], [303, 0, 1, "", "ActorCriticOperator"], [304, 0, 1, "", "ActorCriticWrapper"], [305, 0, 1, "", "ActorValueOperator"], [306, 0, 1, "", "DecisionTransformerInferenceWrapper"], [307, 0, 1, "", "DistributionalQValueActor"], [308, 0, 1, "", "DistributionalQValueModule"], [309, 0, 1, "", "LMHeadActorValueOperator"], [310, 0, 1, "", "MultiStepActorWrapper"], [311, 0, 1, "", "ProbabilisticActor"], [312, 0, 1, "", "QValueActor"], [313, 0, 1, "", "QValueModule"], [314, 0, 1, "", "SafeModule"], [315, 0, 1, "", "SafeProbabilisticModule"], [316, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [317, 0, 1, "", "SafeSequential"], [318, 0, 1, "", "TanhModule"], [319, 0, 1, "", "ValueOperator"], [320, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[303, 1, 1, "", "get_critic_operator"], [303, 1, 1, "", "get_policy_head"], [303, 1, 1, "", "get_value_head"], [303, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[304, 1, 1, "", "get_policy_head"], [304, 1, 1, "", "get_policy_operator"], [304, 1, 1, "", "get_value_head"], [304, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[305, 1, 1, "", "get_policy_head"], [305, 1, 1, "", "get_policy_operator"], [305, 1, 1, "", "get_value_head"], [305, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "mask_context"], [306, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[308, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[310, 1, 1, "", "forward"], [310, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[313, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[314, 1, 1, "", "random"], [314, 1, 1, "", "random_sample"], [314, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[315, 1, 1, "", "random"], [315, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[318, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[320, 1, 1, "", "get_reward_operator"], [320, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[321, 0, 1, "", "biased_softplus"], [322, 0, 1, "", "get_primers_from_module"], [323, 0, 1, "", "inv_softplus"], [324, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[321, 1, 1, "", "forward"]], "torchrl.objectives": [[325, 0, 1, "", "A2CLoss"], [326, 0, 1, "", "CQLLoss"], [327, 0, 1, "", "ClipPPOLoss"], [328, 0, 1, "", "CrossQLoss"], [329, 0, 1, "", "DDPGLoss"], [330, 0, 1, "", "DQNLoss"], [331, 0, 1, "", "DTLoss"], [332, 0, 1, "", "DiscreteCQLLoss"], [333, 0, 1, "", "DiscreteIQLLoss"], [334, 0, 1, "", "DiscreteSACLoss"], [335, 0, 1, "", "DistributionalDQNLoss"], [336, 0, 1, "", "DreamerActorLoss"], [337, 0, 1, "", "DreamerModelLoss"], [338, 0, 1, "", "DreamerValueLoss"], [339, 0, 1, "", "GAILLoss"], [340, 0, 1, "", "HardUpdate"], [341, 0, 1, "", "IQLLoss"], [342, 0, 1, "", "KLPENPPOLoss"], [343, 0, 1, "", "LossModule"], [344, 0, 1, "", "OnlineDTLoss"], [345, 0, 1, "", "PPOLoss"], [346, 0, 1, "", "REDQLoss"], [347, 0, 1, "", "ReinforceLoss"], [348, 0, 1, "", "SACLoss"], [349, 0, 1, "", "SoftUpdate"], [350, 0, 1, "", "TD3BCLoss"], [351, 0, 1, "", "TD3Loss"], [352, 0, 1, "", "ValueEstimators"], [353, 0, 1, "", "default_value_kwargs"], [354, 0, 1, "", "distance_loss"], [355, 0, 1, "", "group_optimizers"], [356, 0, 1, "", "hold_out_net"], [357, 0, 1, "", "hold_out_params"], [359, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[325, 4, 1, "", "default_keys"], [325, 1, 1, "", "forward"], [325, 2, 1, "", "functional"], [325, 1, 1, "", "loss_critic"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[326, 4, 1, "", "default_keys"], [326, 1, 1, "", "forward"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[327, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[328, 1, 1, "", "actor_loss"], [328, 1, 1, "", "alpha_loss"], [328, 4, 1, "", "default_keys"], [328, 1, 1, "", "forward"], [328, 1, 1, "", "load_state_dict"], [328, 1, 1, "", "make_value_estimator"], [328, 1, 1, "", "maybe_init_target_entropy"], [328, 1, 1, "", "qvalue_loss"], [328, 1, 1, "", "set_keys"], [328, 1, 1, "", "state_dict"], [328, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[329, 4, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[330, 4, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[331, 4, 1, "", "default_keys"], [331, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[332, 4, 1, "", "default_keys"], [332, 1, 1, "", "forward"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[334, 4, 1, "", "default_keys"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[335, 4, 1, "", "default_keys"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[339, 4, 1, "", "default_keys"], [339, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[341, 4, 1, "", "default_keys"], [341, 1, 1, "", "forward"], [341, 1, 1, "", "loss_value_diff"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[342, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[343, 1, 1, "", "convert_to_functional"], [343, 1, 1, "", "forward"], [343, 1, 1, "", "from_stateful_net"], [343, 2, 1, "", "functional"], [343, 1, 1, "", "get_stateful_net"], [343, 1, 1, "", "make_value_estimator"], [343, 1, 1, "", "named_parameters"], [343, 1, 1, "", "parameters"], [343, 1, 1, "", "reset_parameters_recursive"], [343, 1, 1, "", "set_keys"], [343, 2, 1, "", "value_estimator"], [343, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[344, 4, 1, "", "default_keys"], [344, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[345, 4, 1, "", "default_keys"], [345, 1, 1, "", "forward"], [345, 2, 1, "", "functional"], [345, 1, 1, "", "loss_critic"], [345, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[346, 4, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[347, 4, 1, "", "default_keys"], [347, 1, 1, "", "forward"], [347, 2, 1, "", "functional"], [347, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[348, 4, 1, "", "default_keys"], [348, 1, 1, "", "forward"], [348, 1, 1, "", "load_state_dict"], [348, 1, 1, "", "make_value_estimator"], [348, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[350, 1, 1, "", "actor_loss"], [350, 4, 1, "", "default_keys"], [350, 1, 1, "", "forward"], [350, 1, 1, "", "make_value_estimator"], [350, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[351, 4, 1, "", "default_keys"], [351, 1, 1, "", "forward"], [351, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[358, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[358, 4, 1, "", "default_keys"], [358, 1, 1, "", "forward"], [358, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[360, 0, 1, "", "GAE"], [361, 0, 1, "", "TD0Estimator"], [362, 0, 1, "", "TD1Estimator"], [363, 0, 1, "", "TDLambdaEstimator"], [364, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[360, 1, 1, "", "forward"], [360, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[361, 1, 1, "", "forward"], [361, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[362, 1, 1, "", "forward"], [362, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[363, 1, 1, "", "forward"], [363, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[364, 4, 1, "", "default_keys"], [364, 1, 1, "", "forward"], [364, 1, 1, "", "set_keys"], [364, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[365, 0, 1, "", "generalized_advantage_estimate"], [366, 0, 1, "", "reward2go"], [367, 0, 1, "", "td0_advantage_estimate"], [368, 0, 1, "", "td0_return_estimate"], [369, 0, 1, "", "td1_advantage_estimate"], [370, 0, 1, "", "td1_return_estimate"], [371, 0, 1, "", "td_lambda_advantage_estimate"], [372, 0, 1, "", "td_lambda_return_estimate"], [373, 0, 1, "", "vec_generalized_advantage_estimate"], [374, 0, 1, "", "vec_td1_advantage_estimate"], [375, 0, 1, "", "vec_td1_return_estimate"], [376, 0, 1, "", "vec_td_lambda_advantage_estimate"], [377, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[378, 3, 1, "", "PixelRenderTransform"], [379, 3, 1, "", "TensorDictRecorder"], [380, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[381, 3, 1, "", "Logger"], [383, 3, 1, "", "generate_exp_name"], [384, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[382, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[385, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[386, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[387, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[389, 0, 1, "", "BatchSubSampler"], [390, 0, 1, "", "ClearCudaCache"], [391, 0, 1, "", "CountFramesLog"], [392, 0, 1, "", "LogScalar"], [393, 0, 1, "", "LogValidationReward"], [394, 0, 1, "", "OptimizerHook"], [395, 0, 1, "", "ReplayBufferTrainer"], [396, 0, 1, "", "RewardNormalizer"], [397, 0, 1, "", "SelectKeys"], [398, 0, 1, "", "Trainer"], [399, 0, 1, "", "TrainerHookBase"], [400, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[389, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[390, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[391, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[392, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[393, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[394, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[395, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[396, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[397, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[398, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[399, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[400, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[401, 3, 1, "", "correct_for_frame_skip"], [402, 3, 1, "", "get_stats_random_rollout"], [403, 3, 1, "", "make_collector_offpolicy"], [404, 3, 1, "", "make_collector_onpolicy"], [405, 3, 1, "", "make_dqn_loss"], [406, 3, 1, "", "make_replay_buffer"], [407, 3, 1, "", "make_target_updater"], [408, 3, 1, "", "make_trainer"], [409, 3, 1, "", "parallel_env_constructor"], [410, 3, 1, "", "sync_async_collector"], [411, 3, 1, "", "sync_sync_collector"], [412, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 416, 417, 418, 419, 421, 422, 423, 425, 427, 434, 435, 436, 440, 441], "instal": [0, 6, 7, 440], "get": [0, 426, 427, 428, 429, 430, 431], "start": [0, 426, 427, 428, 429, 430, 431], "tutori": [0, 423, 434, 435], "basic": [0, 438], "intermedi": [0, 8], "advanc": 0, "refer": [0, 414], "knowledg": [0, 415], "base": [0, 2, 7, 415, 425], "indic": 0, "tabl": 0, "collector": [1, 421, 422, 423, 424, 429, 431, 434, 435, 440], "packag": [1, 2, 3, 416, 417, 418, 419], "batch": [1, 3, 421, 436, 438], "size": [1, 3, 421, 438], "polici": [1, 2, 4, 417, 421, 423, 424, 425, 427, 431, 433, 434, 435, 436], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 416], "environ": [1, 3, 4, 6, 7, 421, 422, 423, 424, 426, 431, 433, 434, 435, 436, 440, 441], "send": 1, "receiv": 1, "model": [1, 2, 4, 416, 421, 422, 424, 425, 428, 437, 440], "weightupdat": 1, "extend": 1, "updat": [1, 421], "class": [1, 3, 436, 440], "replai": [1, 2, 3, 421, 422, 423, 424, 429, 431, 434, 435, 438, 440], "buffer": [1, 2, 3, 421, 422, 423, 424, 429, 431, 434, 435, 438, 440], "interoper": 1, "run": [1, 425, 426, 441], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 421, 422, 423, 429, 431, 434, 435, 440], "helper": [1, 3], "function": [1, 4, 417, 422, 423, 428, 434, 435, 440], "compos": [2, 188], "support": 2, "type": 2, "choos": 2, "storag": [2, 109, 421, 429, 438], "sampl": [2, 438], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 422, 438], "trajectori": [2, 438], "checkpoint": [2, 418], "episod": [2, 4], "format": 2, "ted": [2, 426], "The": [2, 421], "rational": 2, "behind": 2, "structur": [2, 438], "A": [2, 422, 438], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 416, 438, 440], "special": [2, 427, 440], "case": 2, "footnot": 2, "multi": [2, 3, 416, 417, 433, 434, 435], "agent": [2, 3, 4, 416, 417, 434, 435], "present": 2, "rnn": 2, "transform": [2, 3, 232, 421, 423, 426, 434, 435, 436, 438, 440, 441], "step": [2, 3, 421, 423, 426, 429, 434, 435, 438, 441], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 77], "numer": 2, "subclass": [2, 3], "categor": [2, 33], "tree": [2, 79], "forest": 2, "tensordictmap": [2, 72], "mctsforest": [2, 45], "larg": 2, "languag": 2, "reinforc": [2, 417, 423, 434, 435], "learn": [2, 4, 416, 423, 434, 435], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 416, 417, 418, 434], "env": [3, 436, 440, 441], "spec": [3, 436, 441], "lock": 3, "method": [3, 421], "partial": 3, "reset": [3, 436, 441], "vector": [3, 440], "async": [3, 440], "exampl": [3, 11, 422, 438], "custom": [3, 11, 436, 438], "nativ": 3, "auto": 3, "dynam": [3, 4, 438], "forward": [3, 4, 421], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 438], "expos": 3, "outsid": 3, "world": 3, "design": [3, 431], "your": [3, 4, 6, 421, 425, 431, 436], "own": [3, 431], "tip": 3, "us": [3, 4, 6, 9, 417, 424, 437, 438, 440], "clone": [3, 7], "mask": 3, "action": [3, 4, 417, 424, 436], "record": [3, 418, 421, 430], "video": [3, 11, 430], "domain": [3, 416], "specif": [3, 416, 433], "librari": [3, 440], "thing": [4, 421, 436], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 426, 428, 440], "gener": [4, 11, 416], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 416], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 421, 422, 428, 431], "return": [4, 417], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 440], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 433], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 421, 422, 423], "standard": 4, "explor": [4, 416, 421, 422, 427], "valu": [4, 416, 417, 421, 423, 424, 427], "loss": [4, 421, 422, 423, 424, 431, 434, 435], "earli": 4, "train": [4, 8, 417, 421, 423, 424, 425, 428, 431, 434, 435, 436], "roughli": 4, "uniformli": 4, "random": [4, 417, 434, 435], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 422], "increas": 4, "an": [4, 423, 424, 426, 436], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 421], "space": 4, "effect": [4, 436], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 425], "gym": [5, 440, 441], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 421], "render": [7, 11, 431, 434, 435, 441], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 421], "pytorch": [8, 9, 10, 425], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 436], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "rayweightupdat": 16, "syncdatacollector": 17, "vanillaweightupdat": 18, "weightupdaterbas": 19, "asyncdatacollector": 20, "distributeddatacollector": 21, "distributedsyncdatacollector": 22, "rpcdatacollector": 23, "raycollector": 24, "submitit_delayed_launch": 25, "split_trajectori": 26, "adaptiveklcontrol": 27, "binari": [28, 425], "binarydiscretetensorspec": 29, "binarytodecim": 30, "bound": 31, "boundedtensorspec": 32, "composit": 34, "compositespec": 35, "constantklcontrol": 36, "densifyreward": 37, "discretetensorspec": 38, "flat2t": 39, "h5combin": 40, "h5split": 41, "hashtoint": 42, "lazystackedcompositespec": 43, "lazystackedtensorspec": 44, "multicategor": 46, "multidiscretetensorspec": 47, "multionehot": 48, "multionehotdiscretetensorspec": 49, "multistep": 50, "nested2t": 51, "nontensor": 52, "nontensorspec": 53, "onehot": 54, "onehotdiscretetensorspec": 55, "pairwisedataset": 56, "prioritizedreplaybuff": 57, "promptdata": 58, "prompttensordicttoken": 59, "querymodul": 60, "randomprojectionhash": 61, "rayreplaybuff": 62, "remotetensordictreplaybuff": 63, "replaybuff": 64, "rewarddata": 65, "rolloutfrommodel": 66, "siphash": 67, "stack": [68, 223], "stackedcomposit": 69, "ted2flat": 70, "ted2nest": 71, "tensordictprioritizedreplaybuff": 73, "tensordictreplaybuff": 74, "tensordicttoken": 75, "tensormap": 76, "tokenizeddatasetload": 78, "unbound": 80, "unboundedcontinu": 81, "unboundedcontinuoustensorspec": 82, "unboundeddiscret": 83, "unboundeddiscretetensorspec": 84, "check_no_exclusive_kei": 85, "consolidate_spec": 86, "contains_lazy_spec": 87, "create_infinite_iter": 88, "get_dataload": 89, "flatstoragecheckpoint": 90, "h5storagecheckpoint": 91, "immutabledatasetwrit": 92, "lazymemmapstorag": 93, "lazystackstorag": 94, "lazytensorstorag": 95, "liststorag": 96, "liststoragecheckpoint": 97, "nestedstoragecheckpoint": 98, "prioritizedsampl": 99, "prioritizedslicesampl": 100, "randomsampl": 101, "replaybufferensembl": 102, "roundrobinwrit": 103, "sampler": 104, "samplerensembl": 105, "samplerwithoutreplac": 106, "slicesampl": 107, "slicesamplerwithoutreplac": 108, "storagecheckpointerbas": 110, "storageensembl": 111, "storageensemblecheckpoint": 112, "tensordictmaxvaluewrit": 113, "tensordictroundrobinwrit": 114, "tensorstorag": 115, "tensorstoragecheckpoint": 116, "writer": 117, "writerensembl": 118, "asyncenvpool": 119, "braxenv": 120, "braxwrapp": 121, "chessenv": 122, "dmcontrolenv": 123, "dmcontrolwrapp": 124, "envbas": [125, 436], "envcreat": 126, "envmetadata": 127, "gymenv": 128, "gymlikeenv": 129, "gymwrapp": 130, "habitatenv": 131, "isaacgymenv": 132, "isaacgymwrapp": 133, "jumanjienv": 134, "jumanjiwrapp": 135, "llmhashingenv": 136, "mogymenv": 137, "mogymwrapp": 138, "marlgroupmaptyp": 139, "meltingpotenv": 140, "meltingpotwrapp": 141, "modelbasedenvbas": 142, "multithreadedenv": 143, "multithreadedenvwrapp": 144, "openmlenv": 145, "openspielenv": 146, "openspielwrapp": 147, "parallelenv": 148, "pendulumenv": 149, "pettingzooenv": 150, "pettingzoowrapp": 151, "processorasyncenvpool": 152, "randompolici": 153, "robohiveenv": 154, "smacv2env": 155, "smacv2wrapp": 156, "serialenv": 157, "threadingasyncenvpool": 158, "tictactoeenv": 159, "unitymlagentsenv": 160, "unitymlagentswrapp": 161, "vmasenv": 162, "vmaswrapp": 163, "check_env_spec": 164, "check_marl_group": 165, "exploration_typ": 166, "get_available_librari": 167, "gym_backend": 168, "make_composite_from_td": 169, "dreamerdecod": 170, "dreamerenv": 171, "register_gym_spec_convers": 172, "set_exploration_typ": 173, "set_gym_backend": 174, "step_mdp": 175, "terminated_or_trunc": 176, "actiondiscret": 177, "actionmask": 178, "autoresetenv": 179, "autoresettransform": 180, "batchsizetransform": 181, "binarizereward": 182, "burnintransform": 183, "catfram": [184, 438], "cattensor": 185, "centercrop": 186, "cliptransform": 187, "conditionalskip": 189, "crop": 190, "dtypecasttransform": 191, "devicecasttransform": 192, "discreteactionproject": 193, "doubletofloat": 194, "endoflifetransform": 195, "excludetransform": 196, "finitetensordictcheck": 197, "flattenobserv": 198, "frameskiptransform": 199, "grayscal": 200, "hash": 201, "inittrack": 202, "klrewardtransform": 203, "linearisereward": 204, "multiact": 205, "noopresetenv": 206, "observationnorm": 207, "observationtransform": 208, "permutetransform": 209, "pinmemorytransform": 210, "r3mtransform": 211, "randomcroptensordict": 212, "removeemptyspec": 213, "renametransform": 214, "resiz": 215, "reward2gotransform": 216, "rewardclip": 217, "rewardsc": 218, "rewardsum": 219, "selecttransform": 220, "signtransform": 221, "squeezetransform": 222, "stepcount": 224, "targetreturn": 225, "tensordictprim": 226, "timemaxpool": 227, "timer": 228, "totensorimag": 229, "token": 230, "trajcount": 231, "transformedenv": 233, "unarytransform": 234, "unsqueezetransform": 235, "vc1transform": 236, "viprewardtransform": 237, "viptransform": 238, "vecgymenvtransform": 239, "vecnorm": [240, 441], "vecnormv2": 241, "gsdenois": 242, "multisteptransform": 243, "implement_for": 244, "additivegaussianmodul": 245, "batchrenorm1d": 246, "cemplann": 247, "consistentdropout": 248, "consistentdropoutmodul": 249, "conv3dnet": 250, "convnet": 251, "dtactor": 252, "ddpgcnnactor": 253, "ddpgcnnqnet": 254, "ddpgmlpactor": 255, "ddpgmlpqnet": 256, "decisiontransform": 257, "delta": 258, "distributionaldqnnet": 259, "distributionalqvaluehook": 260, "dreameractor": 261, "duelingcnndqnet": 262, "egreedymodul": 263, "gru": 264, "grucel": 265, "grumodul": 266, "independentnorm": 267, "lstm": [268, 424], "lstmcell": 269, "lstmmodul": 270, "mlp": [271, 424], "mpcplannerbas": 272, "mppiplann": 273, "maskedcategor": 274, "maskedonehotcategor": 275, "multiagentconvnet": 276, "multiagentmlp": 277, "multiagentnetbas": 278, "noisylazylinear": 279, "noisylinear": 280, "obsdecod": 281, "obsencod": 282, "onehotcategor": 283, "onehotordin": 284, "onlinedtactor": 285, "ordin": 286, "ornsteinuhlenbeckprocessmodul": 287, "qmixer": [288, 417], "qvaluehook": 289, "rssmposterior": 290, "rssmprior": 291, "squeeze2dlay": 292, "squeezelay": 293, "tanhdelta": 294, "tanhnorm": 295, "truncatednorm": 296, "vdnmixer": 297, "vmapmodul": 298, "recurrent_mod": 299, "reset_nois": 300, "set_recurrent_mod": 301, "actor": [302, 416, 421, 427], "actorcriticoper": 303, "actorcriticwrapp": 304, "actorvalueoper": 305, "decisiontransformerinferencewrapp": 306, "distributionalqvalueactor": 307, "distributionalqvaluemodul": 308, "lmheadactorvalueoper": 309, "multistepactorwrapp": 310, "probabilisticactor": 311, "qvalueactor": [312, 416], "qvaluemodul": 313, "safemodul": [314, 416], "safeprobabilisticmodul": 315, "safeprobabilistictensordictsequenti": 316, "safesequenti": 317, "tanhmodul": 318, "valueoper": 319, "worldmodelwrapp": 320, "biased_softplu": 321, "get_primers_from_modul": 322, "inv_softplu": 323, "map": [324, 434], "a2closs": 325, "cqlloss": 326, "clipppoloss": 327, "crossqloss": 328, "ddpgloss": 329, "dqnloss": 330, "dtloss": 331, "discretecqlloss": 332, "discreteiqlloss": 333, "discretesacloss": 334, "distributionaldqnloss": 335, "dreameractorloss": 336, "dreamermodelloss": 337, "dreamervalueloss": 338, "gailloss": 339, "hardupd": 340, "iqlloss": 341, "klpenppoloss": 342, "lossmodul": [343, 421, 428], "onlinedtloss": 344, "ppoloss": 345, "redqloss": 346, "reinforceloss": 347, "sacloss": 348, "softupd": 349, "td3bcloss": 350, "td3loss": 351, "valueestim": 352, "default_value_kwarg": 353, "distance_loss": 354, "group_optim": 355, "hold_out_net": 356, "hold_out_param": 357, "qmixerloss": 358, "next_state_valu": 359, "gae": 360, "td0estim": 361, "td1estim": 362, "tdlambdaestim": 363, "valueestimatorbas": 364, "generalized_advantage_estim": 365, "reward2go": 366, "td0_advantage_estim": 367, "td0_return_estim": 368, "td1_advantage_estim": 369, "td1_return_estim": 370, "td_lambda_advantage_estim": 371, "td_lambda_return_estim": 372, "vec_generalized_advantage_estim": 373, "vec_td1_advantage_estim": 374, "vec_td1_return_estim": 375, "vec_td_lambda_advantage_estim": 376, "vec_td_lambda_return_estim": 377, "pixelrendertransform": 378, "tensordictrecord": 379, "videorecord": 380, "logger": [381, 418, 430, 431], "csvlogger": 382, "generate_exp_nam": 383, "get_logg": 384, "mlflowlogg": 385, "tensorboardlogg": 386, "wandblogg": 387, "set_auto_unwrap_transformed_env": 388, "batchsubsampl": 389, "clearcudacach": 390, "countframeslog": 391, "logscalar": 392, "logvalidationreward": 393, "optimizerhook": 394, "replaybuffertrain": 395, "rewardnorm": 396, "selectkei": 397, "trainer": [398, 418, 422], "trainerhookbas": 399, "updateweight": 400, "correct_for_frame_skip": 401, "get_stats_random_rollout": 402, "make_collector_offpolici": 403, "make_collector_onpolici": 404, "make_dqn_loss": 405, "make_replay_buff": 406, "make_target_updat": 407, "make_train": 408, "parallel_env_constructor": 409, "sync_async_collector": 410, "sync_sync_collector": 411, "transformed_env_constructor": 412, "readm": [413, 432], "tuto": [413, 432], "api": 414, "contribut": [415, 440], "content": 415, "modul": [416, 421, 424, 425, 427, 431, 440], "tensordictmodul": [416, 425, 427, 440], "wrapper": [416, 427], "probabilist": [416, 427], "q": [416, 422, 424, 427], "oper": 416, "join": 416, "hook": [416, 418, 422], "regular": 416, "planner": 416, "object": [417, 421, 428, 440], "torch": 417, "vmap": [417, 440], "dqn": [417, 422, 424], "ddpg": [417, 421, 434], "sac": 417, "redq": 417, "crossq": 417, "iql": 417, "cql": 417, "gail": 417, "dt": 417, "td3": 417, "bc": 417, "ppo": [417, 423, 435], "head": 417, "a2c": 417, "dreamer": 417, "builder": 418, "_util": 419, "comput": [420, 422, 436, 439], "time": [420, 421, 439], "code": [421, 436], "overview": [421, 424], "setup": [421, 424], "__init__": 421, "estim": 421, "put": 421, "togeth": [421, 436], "call": 421, "parallel": [421, 433, 441], "execut": [421, 433, 436], "stat": 421, "build": [421, 422, 431, 438], "evalu": 421, "construct": 421, "target": [421, 422, 428], "network": [421, 422, 423, 424, 427, 434, 435], "experi": [421, 436], "result": [421, 423, 434, 435], "conclus": [421, 422, 423, 424, 425, 434, 435, 436, 438], "next": [421, 423, 426, 429, 434, 435, 438], "deep": 422, "collect": [422, 423, 429], "paramet": [422, 423, 428], "hyperparamet": [422, 423, 434, 435], "regist": 422, "possibl": 422, "improv": 422, "defin": [423, 434, 435], "loop": [423, 424, 425, 431, 434, 435, 436], "recurr": [424, 425], "convolut": 424, "select": 424, "further": [424, 428], "read": 424, "export": 425, "introduct": [425, 440], "fast": 425, "recap": 425, "simpl": [425, 436], "stochast": 425, "aotinductor": 425, "free": 425, "c": 425, "onnx": 425, "rollout": [425, 426, 433, 434, 435, 436, 441], "creat": 426, "s": [427, 428], "output": 428, "consider": 428, "log": 430, "first": 431, "divers": 433, "competit": 434, "group": 434, "critic": [434, 435], "pendulum": 436, "write": 436, "_step": 436, "simul": 436, "_reset": 436, "metadata": 436, "_spec": 436, "shape": 436, "seed": [436, 441], "wrap": 436, "test": 436, "our": 436, "pretrain": 437, "vanilla": 438, "integr": 438, "tensorclass": 438, "other": 438, "pytre": 438, "iter": 438, "over": 438, "fix": 438, "priorit": 438, "save": 438, "raw": 438, "imag": 438, "more": 438, "complex": 438, "config": 440, "sequenc": 440, "program": 440, "ensembl": 440, "meta": 440, "sync": 440, "multiprocess": 440, "frame_skip": 441, "deepmind": 441, "control": 441, "devic": 441, "close": 441, "access": 441, "attribut": 441, "kwarg": 441}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})