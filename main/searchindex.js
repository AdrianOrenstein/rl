Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater.rst", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "LocalWeightUpdaterBase", "MultiProcessedRemoteWeightUpdate", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayRemoteWeightUpdater", "RemoteWeightUpdaterBase", "SyncDataCollector", "VanillaLocalWeightUpdater", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 93, 97, 98, 99, 100, 101, 105, 107, 108, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 142, 148, 149, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 170, 171, 183, 184, 186, 187, 189, 190, 192, 197, 198, 200, 201, 204, 208, 213, 214, 218, 219, 220, 221, 223, 232, 233, 234, 235, 236, 238, 239, 240, 243, 246, 247, 248, 250, 253, 257, 258, 260, 261, 262, 263, 265, 270, 271, 273, 275, 277, 278, 279, 283, 284, 286, 294, 299, 300, 302, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 327, 331, 332, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 367, 368, 369, 370, 371, 385, 387, 390, 394, 400, 401, 405, 406, 409, 416, 417, 418, 419, 422, 423, 424, 428, 429, 432, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 447, 448], "open": [0, 5, 7, 45, 46, 47, 61, 63, 70, 84, 98, 251, 429, 441, 442, 447], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "reinforc": [0, 1, 3, 9, 146, 147, 190, 248, 255, 260, 261, 262, 263, 267, 294, 315, 332, 333, 335, 338, 339, 340, 342, 347, 348, 354, 355, 356, 357, 421, 427, 429, 433, 434, 439, 443, 446, 447], "learn": [0, 1, 3, 7, 8, 9, 23, 55, 130, 146, 147, 151, 154, 163, 190, 248, 255, 260, 261, 262, 263, 267, 280, 287, 293, 294, 315, 332, 333, 335, 338, 339, 340, 342, 346, 347, 348, 353, 354, 355, 356, 357, 421, 424, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 447, 448], "rl": [0, 1, 2, 3, 5, 8, 10, 16, 17, 20, 22, 148, 190, 232, 287, 309, 318, 326, 332, 334, 349, 350, 352, 354, 396, 420, 422, 423, 424, 425, 428, 429, 430, 436, 439, 441, 442, 444, 445, 448], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 16, 17, 23, 24, 25, 64, 80, 127, 128, 129, 138, 149, 173, 421, 422, 423, 424, 426, 428, 429, 430, 432, 433, 434, 436, 441, 442, 443, 448], "pytorch": [0, 1, 2, 3, 28, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 170, 190, 235, 236, 255, 271, 275, 286, 287, 405, 420, 422, 423, 425, 428, 430, 431, 435, 439, 441, 442, 443, 447, 448], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 32, 39, 44, 55, 65, 66, 72, 77, 80, 124, 127, 130, 134, 138, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 168, 169, 180, 190, 211, 239, 247, 248, 250, 255, 275, 293, 322, 394, 395, 422, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 104, 105, 107, 111, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 178, 180, 182, 183, 184, 186, 187, 189, 190, 193, 194, 195, 197, 198, 200, 201, 202, 205, 208, 212, 213, 214, 218, 219, 223, 226, 230, 231, 232, 233, 237, 238, 239, 240, 241, 243, 245, 247, 248, 250, 251, 254, 256, 257, 258, 260, 270, 271, 273, 274, 275, 277, 279, 280, 283, 284, 285, 287, 294, 303, 305, 309, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 385, 387, 394, 395, 400, 417, 418, 419, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "directli": [0, 4, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 107, 124, 125, 126, 127, 130, 133, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 208, 209, 210, 214, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 244, 246, 247, 248, 250, 322, 350, 357, 419, 429, 430, 432, 433, 441, 442, 443, 445], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 195, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 214, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 290, 292, 293, 294, 295, 296, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 350, 352, 353, 354, 355, 357, 358, 360, 365, 366, 367, 368, 369, 370, 373, 385, 386, 387, 396, 402, 405, 408, 409, 413, 415, 416, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448], "pypi": [0, 2, 447], "see": [0, 1, 2, 3, 6, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 94, 99, 105, 107, 112, 113, 124, 127, 130, 134, 137, 140, 141, 142, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 190, 194, 195, 198, 212, 218, 233, 236, 238, 239, 240, 243, 245, 247, 248, 249, 250, 255, 256, 257, 258, 271, 273, 274, 275, 277, 278, 284, 285, 286, 293, 295, 303, 304, 308, 310, 312, 318, 321, 322, 335, 346, 350, 357, 387, 394, 402, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 445, 447, 448], "more": [0, 1, 2, 3, 4, 6, 8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 105, 107, 118, 124, 127, 130, 133, 134, 135, 137, 138, 140, 141, 142, 146, 147, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 190, 236, 239, 243, 249, 250, 251, 252, 253, 256, 267, 275, 278, 286, 309, 314, 315, 321, 322, 326, 332, 342, 350, 352, 367, 372, 380, 394, 401, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 447, 448], "about": [0, 3, 5, 7, 9, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 80, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 423, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 447, 448], "instruct": [0, 6, 7, 10, 27, 200, 202, 424, 428, 429, 430, 431, 441, 442, 445], "dedic": [0, 1, 2, 3, 23, 24, 25, 26, 50, 69, 78, 79, 107, 154, 163, 310, 311, 312, 423, 428, 433, 435, 436, 438, 440, 442], "section": [0, 2, 3, 4, 29, 130, 271, 275, 429, 432, 433, 438, 441, 442], "below": [0, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 85, 94, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 195, 198, 212, 218, 233, 238, 239, 240, 243, 245, 250, 257, 258, 271, 274, 275, 278, 284, 303, 318, 321, 402, 428, 429, 430, 431, 432, 433, 441, 443], "pip": [0, 10, 432, 433, 434, 435, 436, 437, 438, 442, 447, 448], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 50, 51, 53, 55, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 83, 84, 91, 94, 98, 99, 101, 105, 106, 107, 110, 112, 113, 121, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 181, 182, 183, 187, 189, 190, 191, 192, 193, 196, 197, 201, 205, 208, 213, 214, 216, 218, 219, 222, 223, 226, 227, 232, 233, 234, 237, 238, 240, 242, 243, 245, 246, 247, 248, 250, 251, 257, 258, 264, 265, 267, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 305, 309, 313, 315, 317, 318, 319, 320, 322, 325, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 391, 396, 402, 409, 415, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "python": [0, 3, 5, 6, 7, 10, 16, 17, 26, 62, 67, 68, 69, 72, 77, 78, 79, 84, 107, 150, 166, 167, 180, 271, 272, 273, 275, 276, 277, 281, 282, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 100, 105, 112, 113, 118, 120, 124, 127, 130, 133, 134, 135, 140, 141, 142, 154, 155, 158, 163, 164, 165, 186, 187, 190, 191, 195, 205, 212, 214, 218, 219, 235, 236, 240, 243, 248, 251, 258, 265, 271, 273, 275, 277, 278, 281, 282, 284, 286, 289, 309, 313, 314, 315, 318, 319, 321, 322, 334, 344, 349, 350, 352, 386, 387, 404, 423, 427, 428, 429, 430, 431, 432, 433, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "low": [0, 3, 33, 36, 66, 77, 82, 85, 105, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 183, 193, 200, 208, 211, 233, 241, 301, 302, 303, 313, 315, 318, 322, 325, 428, 429, 430, 432, 441, 442, 443, 447], "high": [0, 3, 9, 33, 36, 45, 46, 47, 61, 63, 70, 78, 84, 85, 105, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 183, 193, 200, 208, 211, 213, 233, 241, 301, 302, 303, 313, 315, 318, 322, 325, 367, 372, 380, 428, 429, 430, 441, 442, 443, 445, 447], "level": [0, 2, 3, 4, 27, 36, 37, 48, 62, 67, 68, 69, 74, 78, 79, 107, 133, 135, 190, 231, 239, 273, 277, 349, 428, 429, 432, 436, 447], "abstract": [0, 1, 3, 8, 14, 19, 81, 82, 122, 130, 215, 279, 371, 397, 406, 425, 430, 432, 443, 447], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 103, 107, 110, 111, 112, 113, 114, 116, 118, 120, 124, 127, 130, 131, 133, 134, 135, 140, 141, 142, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 175, 181, 182, 183, 185, 186, 187, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 208, 210, 211, 212, 213, 216, 218, 223, 226, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 254, 255, 263, 265, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 283, 284, 285, 287, 290, 295, 298, 308, 313, 314, 317, 318, 319, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 361, 362, 365, 366, 367, 368, 369, 370, 371, 385, 394, 395, 402, 405, 415, 419, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "intend": [0, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 189, 200, 305, 350, 423, 447], "effici": [0, 1, 2, 4, 8, 18, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 271, 287, 335, 423, 428, 429, 430, 431, 432, 435, 436, 438, 440, 441, 442, 444, 445, 447], "modular": [0, 324, 432, 445, 447], "document": [0, 2, 5, 7, 11, 23, 24, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 152, 153, 154, 155, 158, 163, 164, 165, 166, 167, 240, 250, 420, 429, 431, 432, 433, 436, 439, 447], "properli": [0, 1, 3, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 195, 273, 277, 430, 437, 441, 442, 443, 447], "test": [0, 3, 5, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 170, 198, 238, 243, 273, 277, 400, 415, 430, 431, 432, 444, 447], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 104, 105, 107, 110, 112, 113, 114, 118, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 169, 170, 178, 181, 182, 183, 186, 187, 189, 190, 194, 195, 197, 198, 201, 202, 203, 208, 211, 212, 214, 216, 218, 223, 225, 226, 227, 230, 231, 232, 233, 235, 238, 239, 240, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 260, 261, 262, 263, 264, 267, 271, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 287, 291, 293, 294, 296, 297, 298, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 373, 385, 387, 389, 392, 393, 394, 395, 396, 401, 415, 417, 418, 421, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448], "code": [0, 3, 5, 7, 8, 16, 17, 66, 72, 124, 127, 130, 134, 140, 141, 142, 154, 155, 158, 163, 164, 165, 218, 240, 243, 253, 271, 272, 273, 275, 276, 277, 318, 322, 324, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448], "aim": [0, 2, 3, 7, 50, 73, 74, 218, 243, 245, 278, 408, 422, 423, 424, 428, 429, 447], "support": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 39, 45, 46, 47, 61, 63, 65, 70, 77, 84, 94, 98, 100, 114, 116, 120, 121, 123, 124, 125, 126, 127, 133, 135, 139, 149, 151, 154, 156, 160, 173, 187, 190, 202, 208, 214, 233, 234, 237, 241, 267, 291, 293, 302, 305, 314, 315, 318, 321, 324, 342, 350, 367, 368, 369, 370, 392, 421, 423, 425, 430, 431, 433, 434, 442, 443, 445, 447], "research": [0, 7, 9, 146, 147, 253, 447], "most": [0, 1, 2, 3, 7, 8, 16, 17, 55, 57, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 200, 246, 428, 430, 432, 433, 434, 435, 436, 437, 438, 443, 447, 448], "written": [0, 1, 2, 3, 41, 45, 46, 47, 61, 62, 63, 65, 67, 68, 69, 70, 75, 78, 79, 83, 84, 96, 98, 105, 107, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 160, 163, 164, 165, 181, 182, 183, 190, 202, 205, 210, 211, 226, 231, 234, 235, 240, 246, 250, 251, 256, 294, 309, 318, 321, 322, 326, 332, 334, 349, 352, 354, 366, 385, 386, 387, 423, 424, 425, 428, 431, 432, 434, 440, 443, 447], "highli": [0, 2, 433, 447, 448], "wai": [0, 1, 2, 3, 4, 107, 118, 138, 190, 218, 221, 238, 239, 245, 246, 273, 275, 277, 352, 367, 368, 369, 370, 423, 428, 429, 430, 432, 433, 435, 436, 440, 441, 442, 443, 444, 445, 447, 448], "easili": [0, 1, 2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 424, 428, 429, 430, 433, 434, 435, 438, 441, 442, 447, 448], "swap": [0, 1, 3, 133, 246, 430, 432, 444, 447], "compon": [0, 1, 2, 3, 62, 66, 67, 68, 69, 78, 79, 98, 99, 100, 101, 107, 114, 116, 120, 267, 296, 314, 315, 320, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 401, 405, 428, 429, 430, 431, 432, 434, 435, 438, 440, 441, 442, 443, 444, 447], "transform": [0, 1, 4, 8, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 39, 50, 55, 62, 64, 67, 68, 69, 71, 78, 79, 80, 95, 96, 103, 107, 116, 121, 124, 127, 130, 131, 134, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 176, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 259, 260, 264, 267, 268, 273, 277, 292, 295, 296, 302, 304, 313, 316, 317, 325, 328, 329, 331, 338, 351, 385, 387, 402, 419, 421, 427, 429, 431, 432, 434, 436, 437, 438, 439, 444, 446], "them": [0, 2, 3, 7, 9, 11, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 62, 64, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 107, 118, 123, 124, 127, 130, 131, 134, 138, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 197, 201, 208, 211, 233, 237, 240, 241, 247, 248, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 304, 305, 313, 315, 317, 320, 325, 328, 349, 387, 428, 429, 431, 432, 433, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "write": [0, 2, 3, 8, 28, 45, 46, 47, 50, 55, 61, 62, 63, 64, 67, 68, 69, 70, 78, 79, 83, 84, 105, 107, 112, 116, 123, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 184, 186, 187, 189, 190, 191, 193, 194, 195, 199, 202, 203, 204, 206, 209, 210, 216, 217, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 250, 309, 321, 322, 324, 326, 335, 336, 337, 339, 340, 341, 348, 353, 355, 357, 358, 366, 371, 387, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448], "new": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 104, 105, 107, 111, 124, 127, 130, 134, 141, 142, 149, 154, 155, 158, 161, 162, 163, 164, 165, 181, 182, 187, 226, 230, 239, 240, 247, 248, 250, 265, 271, 273, 277, 294, 321, 322, 327, 332, 333, 334, 337, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 394, 424, 428, 430, 433, 435, 441, 442, 443, 447, 448], "ones": [0, 2, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 159, 163, 164, 165, 191, 194, 197, 199, 201, 214, 218, 223, 230, 233, 239, 240, 243, 245, 250, 255, 281, 282, 293, 305, 321, 332, 333, 335, 336, 348, 352, 353, 355, 357, 358, 373, 428, 430, 432, 441, 442, 443, 445, 447, 448], "littl": [0, 1, 3, 80, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 255, 332, 334, 349, 352, 354, 430, 431, 432, 436, 445, 447, 448], "effort": [0, 3, 443, 445, 447], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 168, 169, 170, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 300, 302, 303, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 365, 367, 368, 369, 370, 371, 385, 386, 394, 395, 396, 398, 400, 402, 405, 407, 408, 409, 415, 419, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "repo": [0, 6, 190, 234, 243, 422, 442, 447], "attempt": [0, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 160, 163, 164, 165, 181, 198, 250, 255, 322, 337, 340, 348, 365, 424, 435, 447], "align": [0, 271, 275, 447], "exist": [0, 1, 2, 3, 4, 23, 26, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 98, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 191, 199, 238, 240, 250, 251, 265, 322, 335, 355, 409, 419, 441, 442, 447, 448], "ecosystem": [0, 432, 436, 447], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 107, 110, 112, 118, 120, 124, 127, 130, 131, 134, 138, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 187, 190, 198, 212, 231, 232, 233, 234, 235, 237, 238, 239, 240, 250, 252, 271, 273, 275, 277, 283, 285, 302, 315, 317, 322, 332, 335, 349, 350, 352, 354, 387, 424, 428, 429, 430, 431, 432, 433, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "dataset": [0, 43, 45, 46, 47, 50, 61, 62, 63, 64, 69, 70, 71, 76, 78, 79, 83, 84, 94, 97, 105, 107, 110, 112, 113, 141, 151, 198, 247, 387, 421, 428, 429, 433, 444, 445, 447, 448], "pillar": [0, 447], "environ": [0, 2, 5, 8, 10, 15, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 186, 187, 189, 190, 191, 195, 197, 198, 199, 200, 201, 206, 212, 213, 214, 218, 219, 220, 223, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 246, 247, 248, 251, 254, 256, 273, 277, 279, 280, 317, 339, 343, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 395, 396, 398, 400, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 423, 424, 427, 432, 434, 435, 436, 437, 439, 444, 445, 446], "model": [0, 1, 3, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 190, 197, 218, 233, 243, 245, 249, 250, 257, 258, 259, 264, 266, 273, 277, 278, 279, 280, 284, 285, 292, 295, 304, 310, 311, 312, 316, 321, 327, 329, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 365, 405, 410, 411, 412, 421, 422, 424, 425, 427, 430, 433, 436, 439, 441, 442, 443, 445, 446, 448], "data": [0, 3, 8, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 175, 182, 184, 187, 189, 190, 197, 198, 199, 201, 203, 205, 208, 210, 214, 220, 223, 230, 231, 237, 239, 240, 241, 246, 248, 250, 254, 255, 267, 270, 273, 277, 280, 283, 284, 294, 296, 305, 308, 309, 314, 317, 318, 319, 321, 322, 324, 325, 326, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 385, 387, 394, 396, 402, 405, 407, 410, 415, 417, 418, 419, 421, 423, 424, 425, 427, 431, 432, 433, 434, 435, 439, 443, 444, 445, 446, 448], "util": [0, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 32, 39, 44, 55, 65, 66, 69, 71, 72, 77, 112, 113, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 147, 154, 155, 156, 157, 158, 163, 164, 165, 171, 190, 218, 223, 233, 245, 250, 253, 256, 257, 258, 264, 271, 273, 275, 277, 328, 329, 330, 331, 350, 415, 421, 426, 428, 430, 432, 434, 435, 436, 442, 443, 445, 447, 448], "e": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 100, 104, 105, 118, 120, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 170, 187, 189, 191, 194, 195, 196, 198, 205, 208, 211, 212, 214, 218, 226, 233, 235, 238, 239, 240, 243, 245, 250, 251, 271, 273, 274, 275, 277, 280, 284, 296, 302, 303, 308, 313, 315, 317, 318, 320, 321, 322, 332, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 366, 367, 368, 369, 370, 385, 396, 408, 418, 423, 424, 429, 430, 432, 434, 435, 437, 441, 442, 444, 445, 447, 448], "g": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 118, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 170, 187, 189, 191, 194, 198, 205, 208, 211, 214, 218, 226, 233, 235, 238, 239, 240, 243, 245, 250, 251, 271, 273, 274, 275, 276, 277, 280, 284, 302, 303, 313, 318, 321, 322, 335, 355, 366, 376, 377, 378, 379, 381, 382, 383, 384, 385, 418, 423, 424, 429, 430, 432, 434, 437, 441, 442, 443, 444, 445, 447, 448], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 55, 62, 67, 68, 69, 71, 75, 78, 79, 107, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 159, 163, 164, 165, 187, 190, 223, 231, 250, 255, 273, 277, 294, 402, 405, 407, 410, 411, 415, 417, 418, 421, 424, 425, 432, 445, 448], "contain": [0, 2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 97, 104, 105, 107, 108, 110, 112, 113, 114, 119, 122, 123, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 181, 182, 183, 190, 194, 197, 201, 208, 218, 230, 233, 238, 239, 240, 243, 245, 246, 247, 248, 250, 254, 257, 258, 271, 272, 275, 276, 278, 280, 283, 284, 309, 314, 315, 318, 320, 321, 322, 326, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 373, 391, 396, 408, 415, 416, 417, 418, 419, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448], "etc": [0, 2, 3, 7, 8, 32, 39, 44, 50, 55, 65, 66, 72, 77, 82, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 230, 240, 250, 251, 278, 284, 302, 424, 429, 430, 436, 445, 447, 448], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 16, 17, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 107, 111, 114, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 170, 175, 178, 182, 183, 186, 190, 197, 198, 201, 202, 210, 213, 214, 230, 231, 233, 237, 238, 239, 240, 247, 250, 252, 255, 257, 258, 278, 283, 284, 285, 294, 305, 317, 323, 324, 332, 334, 349, 352, 354, 357, 361, 362, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 396, 405, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "few": [0, 2, 8, 113, 134, 387, 396, 430, 431, 434, 441, 442, 445, 447, 448], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 33, 61, 63, 85, 124, 127, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 160, 163, 164, 165, 168, 169, 197, 201, 322, 326, 352, 389, 423, 428, 430, 431, 441, 442, 443, 447, 448], "possibl": [0, 1, 2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 99, 105, 112, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 194, 218, 233, 238, 239, 240, 243, 245, 250, 257, 258, 271, 272, 275, 276, 321, 385, 400, 405, 423, 428, 430, 431, 432, 434, 436, 437, 441, 442, 443, 445, 447, 448], "standard": [0, 2, 3, 57, 127, 214, 225, 247, 248, 252, 253, 254, 268, 280, 286, 287, 292, 313, 334, 349, 352, 357, 358, 367, 368, 369, 370, 428, 429, 433, 434, 442, 445, 447], "numpi": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 208, 236, 241, 251, 405, 432, 443, 445, 447, 448], "common": [0, 1, 2, 3, 4, 82, 124, 134, 139, 184, 202, 310, 311, 312, 316, 332, 333, 334, 335, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 415, 422, 423, 424, 425, 428, 430, 434, 437, 440, 441, 442, 443, 444, 447, 448], "openai": [0, 7, 29, 133, 135, 142, 160, 430, 443, 447, 448], "gym": [0, 1, 3, 4, 8, 16, 17, 20, 22, 26, 27, 67, 124, 127, 130, 131, 133, 134, 135, 136, 138, 141, 142, 146, 147, 149, 150, 154, 155, 158, 160, 163, 164, 165, 168, 169, 174, 178, 180, 186, 190, 193, 202, 209, 210, 214, 216, 221, 223, 226, 233, 239, 246, 247, 250, 251, 415, 422, 428, 429, 430, 431, 433, 437, 438, 443, 444, 445], "onli": [0, 1, 2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 104, 105, 107, 112, 113, 120, 124, 127, 128, 129, 130, 133, 134, 135, 136, 138, 140, 141, 142, 149, 150, 154, 155, 156, 157, 158, 160, 163, 164, 165, 183, 186, 190, 191, 193, 194, 195, 197, 198, 200, 201, 205, 208, 212, 214, 218, 219, 223, 230, 231, 232, 233, 234, 238, 239, 240, 243, 245, 247, 248, 250, 251, 255, 275, 277, 283, 284, 309, 313, 314, 318, 319, 321, 322, 323, 324, 332, 334, 335, 336, 340, 341, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 367, 368, 369, 370, 371, 387, 394, 409, 424, 425, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 448], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 175, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 218, 219, 221, 222, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 296, 297, 298, 301, 302, 303, 305, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 389, 392, 394, 396, 398, 399, 400, 401, 402, 403, 405, 409, 415, 417, 418, 419, 423, 431, 433, 436, 441, 442, 443, 445, 447], "On": [0, 3, 7, 23, 24, 25, 26, 36, 272, 276, 423, 429, 441, 442], "end": [0, 2, 3, 16, 17, 22, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 96, 105, 107, 111, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 202, 208, 216, 231, 232, 238, 240, 250, 257, 258, 271, 272, 275, 276, 279, 317, 335, 355, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "come": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 50, 55, 118, 124, 127, 130, 134, 140, 141, 142, 145, 154, 155, 158, 163, 164, 165, 197, 201, 308, 309, 310, 311, 312, 318, 326, 332, 334, 349, 352, 354, 387, 428, 429, 430, 431, 435, 436, 437, 438, 441, 442, 445, 447, 448], "set": [0, 1, 2, 3, 7, 9, 12, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 84, 98, 99, 100, 107, 111, 114, 120, 124, 127, 130, 132, 134, 135, 140, 141, 142, 146, 147, 148, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 170, 179, 180, 182, 184, 186, 187, 190, 191, 194, 197, 198, 201, 208, 209, 210, 211, 218, 223, 231, 232, 233, 234, 238, 239, 240, 243, 245, 247, 248, 250, 251, 271, 273, 275, 277, 279, 283, 284, 291, 293, 294, 302, 308, 313, 321, 322, 334, 335, 341, 346, 349, 350, 352, 355, 371, 387, 395, 396, 400, 402, 411, 419, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 435, 436, 440, 441, 442, 443, 444, 445, 447, 448], "re": [0, 2, 3, 8, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 107, 111, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 205, 250, 277, 281, 282, 285, 318, 322, 394, 425, 428, 430, 431, 433, 435, 440, 441, 443, 447, 448], "usabl": [0, 425, 431, 447], "function": [0, 2, 3, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 100, 101, 107, 114, 116, 120, 124, 127, 130, 131, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 170, 178, 180, 181, 182, 186, 187, 197, 198, 201, 208, 210, 237, 238, 240, 241, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 288, 289, 290, 292, 294, 297, 298, 300, 303, 305, 310, 311, 312, 313, 315, 317, 318, 320, 321, 322, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 405, 415, 421, 423, 428, 431, 432, 433, 434, 437, 440, 443, 445, 448], "cost": [0, 2, 35, 99, 332, 334, 349, 352, 354, 424, 428, 429, 432, 441, 442, 443, 445], "return": [0, 2, 3, 7, 8, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 99, 105, 107, 108, 110, 112, 113, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 168, 169, 172, 173, 174, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 255, 258, 259, 260, 261, 262, 263, 265, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 290, 292, 295, 297, 298, 301, 302, 303, 304, 306, 309, 310, 311, 312, 313, 317, 318, 320, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 361, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 391, 395, 405, 408, 410, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 430, 432, 434, 435, 437, 440, 441, 442, 443, 444, 445, 447, 448], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 80, 83, 84, 100, 104, 105, 108, 112, 120, 124, 127, 130, 131, 134, 138, 141, 142, 145, 149, 154, 155, 156, 157, 158, 163, 164, 165, 189, 190, 197, 201, 208, 233, 236, 238, 247, 248, 250, 273, 277, 283, 284, 294, 315, 320, 421, 425, 428, 429, 431, 432, 433, 441, 442, 443, 444, 445, 447, 448], "good": [0, 1, 4, 9, 154, 428, 430, 431, 432, 434, 442, 447, 448], "runtim": [0, 2, 3, 28, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 443], "perform": [0, 1, 2, 3, 4, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 154, 155, 158, 160, 163, 164, 165, 168, 169, 171, 197, 201, 208, 213, 235, 238, 240, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 285, 288, 289, 292, 293, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 334, 335, 344, 352, 355, 400, 405, 424, 428, 429, 430, 431, 432, 433, 436, 438, 440, 441, 442, 443, 448], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 19, 23, 24, 25, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 96, 105, 107, 112, 113, 116, 123, 124, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 145, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 190, 195, 231, 233, 247, 250, 256, 273, 277, 294, 310, 311, 312, 322, 335, 341, 346, 350, 357, 387, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448], "read": [0, 2, 3, 7, 28, 36, 37, 41, 48, 62, 64, 67, 68, 69, 71, 74, 75, 78, 79, 98, 99, 100, 101, 104, 107, 114, 116, 120, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 182, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 197, 199, 200, 202, 203, 204, 205, 206, 209, 210, 216, 217, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 246, 247, 250, 256, 290, 309, 310, 311, 312, 314, 317, 318, 321, 322, 324, 326, 327, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 367, 368, 369, 370, 371, 387, 400, 405, 423, 428, 429, 430, 432, 433, 434, 440, 441, 442, 443, 444, 447, 448], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 18, 26, 28, 425, 428, 433, 436, 440, 444, 448], "beyond": [0, 50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 432], "api": [0, 1, 2, 3, 5, 28, 36, 37, 39, 48, 50, 65, 74, 77, 82, 127, 130, 156, 157, 160, 218, 245, 247, 248, 255, 423, 424, 425, 432, 433, 434, 435, 436, 437, 441, 442, 443, 445, 447, 448], "check": [0, 2, 3, 4, 5, 6, 7, 9, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 90, 92, 95, 96, 103, 112, 124, 127, 130, 131, 133, 134, 135, 141, 142, 148, 154, 155, 158, 163, 164, 165, 170, 171, 190, 191, 195, 204, 210, 219, 233, 236, 240, 250, 251, 265, 273, 277, 309, 314, 315, 318, 319, 320, 321, 322, 335, 346, 357, 387, 420, 423, 424, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "paper": [0, 125, 126, 128, 129, 136, 139, 140, 146, 147, 149, 150, 160, 168, 169, 218, 243, 245, 258, 271, 295, 304, 339, 347, 357, 428, 430, 441, 442], "releas": [0, 4, 7, 10, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 335, 355], "sync": [0, 1, 16, 17, 22, 23, 24, 25, 26, 124, 407, 415, 425, 428], "so": [0, 2, 3, 4, 6, 7, 10, 11, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 107, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 208, 233, 238, 247, 250, 255, 323, 324, 387, 428, 430, 431, 435, 438, 441, 442, 443, 448], "make": [0, 2, 3, 4, 7, 11, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 82, 84, 107, 110, 114, 116, 123, 124, 127, 130, 134, 135, 138, 140, 141, 142, 144, 150, 154, 155, 158, 163, 164, 165, 170, 181, 183, 195, 203, 211, 214, 218, 219, 223, 227, 231, 235, 239, 243, 250, 253, 256, 271, 272, 273, 275, 276, 277, 283, 284, 286, 314, 322, 332, 334, 349, 352, 354, 367, 368, 369, 370, 385, 402, 411, 419, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "sure": [0, 3, 4, 7, 39, 114, 127, 134, 138, 195, 223, 314, 419, 423, 428, 430, 431, 432, 435, 441, 442, 443, 445, 447, 448], "alwai": [0, 2, 3, 16, 17, 25, 32, 33, 39, 44, 55, 65, 66, 72, 77, 82, 85, 94, 95, 96, 103, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 213, 235, 247, 248, 250, 342, 350, 423, 424, 429, 430, 431, 432, 441, 442, 443, 445], "enjoi": [0, 2, 3, 436], "latest": [0, 1, 2, 3, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 149, 152, 153, 156, 157, 402, 430, 441, 442, 443, 447], "featur": [0, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 59, 65, 77, 82, 83, 105, 112, 113, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 170, 187, 190, 205, 208, 210, 216, 233, 234, 242, 247, 253, 257, 258, 268, 269, 271, 272, 273, 275, 276, 277, 278, 283, 286, 287, 322, 329, 332, 334, 349, 352, 354, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 419, 423, 424, 428, 429, 430, 431, 432, 434, 435, 436, 438, 443, 445, 447, 448], "recent": [0, 7, 246, 251, 448], "version": [0, 1, 2, 3, 6, 31, 32, 34, 37, 39, 40, 44, 48, 49, 52, 54, 55, 58, 60, 61, 63, 65, 66, 71, 72, 77, 86, 87, 88, 89, 112, 124, 127, 130, 133, 134, 135, 136, 141, 142, 149, 150, 154, 155, 156, 158, 160, 163, 164, 165, 168, 169, 181, 190, 237, 246, 247, 248, 250, 251, 253, 273, 277, 285, 291, 312, 332, 334, 349, 350, 352, 354, 355, 367, 370, 422, 423, 424, 428, 430, 431, 432, 433, 435, 438, 441, 442, 443, 444, 448], "although": [0, 1, 3, 8, 26, 32, 39, 44, 65, 66, 72, 77, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 424, 425, 428, 429, 436, 445], "core": [0, 2, 3, 8, 62, 67, 68, 69, 78, 79, 107, 425, 431, 434, 447], "guarante": [0, 2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 247, 248, 250, 322, 436], "backward": [0, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250, 271, 272, 275, 276, 293, 322, 332, 333, 335, 336, 340, 341, 348, 352, 353, 354, 355, 357, 358, 428, 430, 431, 432, 435, 436, 438, 441, 442, 443], "compat": [0, 2, 3, 7, 16, 17, 20, 28, 32, 39, 44, 55, 65, 66, 72, 77, 99, 107, 110, 112, 113, 114, 118, 124, 127, 130, 134, 136, 141, 142, 151, 154, 155, 158, 163, 164, 165, 190, 231, 243, 247, 248, 250, 251, 271, 272, 273, 275, 276, 277, 319, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 361, 428, 431, 445], "2": [0, 1, 2, 3, 8, 9, 10, 16, 17, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 44, 48, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 69, 72, 74, 75, 77, 78, 79, 80, 83, 84, 94, 98, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 130, 131, 134, 139, 140, 141, 142, 145, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 175, 182, 186, 187, 189, 191, 194, 195, 197, 199, 200, 201, 210, 211, 214, 216, 218, 220, 223, 226, 230, 231, 232, 233, 238, 239, 240, 243, 245, 247, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 292, 293, 294, 302, 305, 313, 314, 315, 317, 321, 325, 326, 332, 333, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 366, 367, 368, 369, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 396, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435, 440, 441, 442, 443, 445, 446, 447, 448], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 104, 105, 107, 112, 113, 120, 124, 125, 126, 127, 130, 133, 134, 136, 137, 139, 140, 141, 142, 148, 149, 150, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 305, 309, 313, 315, 320, 321, 322, 324, 325, 328, 329, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 373, 374, 375, 396, 403, 415, 419, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 25, 39, 62, 65, 69, 77, 78, 79, 99, 134, 141, 154, 163, 211, 218, 221, 245, 335, 338, 350, 424, 425, 428, 429, 430, 431, 434, 436, 445, 447, 448], "tensordict": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 266, 267, 270, 273, 277, 279, 280, 283, 284, 294, 295, 296, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 385, 386, 396, 400, 401, 402, 404, 405, 421, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 448], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 65, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 210, 220, 238, 239, 248, 310, 311, 312, 321, 340, 348, 357, 421, 428, 441, 443, 447], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 32, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 83, 84, 94, 96, 98, 107, 115, 121, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 180, 218, 245, 250, 280, 389, 394, 405, 425, 429, 432, 438, 441], "root": [0, 2, 3, 36, 37, 48, 50, 62, 67, 68, 69, 74, 78, 79, 84, 95, 96, 103, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 190, 212, 234, 235, 273, 274, 277, 302, 303, 424, 431, 433, 441, 442, 443, 445, 448], "http": [0, 2, 5, 6, 7, 10, 16, 17, 23, 24, 25, 29, 62, 80, 104, 105, 125, 126, 128, 129, 136, 138, 139, 140, 146, 147, 149, 150, 151, 152, 153, 156, 157, 160, 166, 167, 168, 169, 190, 218, 243, 253, 259, 260, 261, 262, 263, 264, 267, 268, 269, 275, 280, 281, 282, 287, 288, 289, 293, 294, 295, 297, 298, 304, 315, 332, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 367, 372, 380, 420, 439, 444, 447], "github": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 125, 126, 128, 129, 133, 136, 139, 140, 146, 147, 149, 150, 152, 153, 156, 157, 160, 166, 167, 168, 169, 187, 190, 243, 253, 434, 438, 441, 442, 447], "com": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 125, 126, 128, 129, 136, 138, 139, 140, 146, 147, 149, 150, 152, 153, 156, 157, 160, 166, 167, 168, 169, 190, 253, 447], "setup": [0, 1, 7, 125, 126, 138, 139, 140, 166], "py": [0, 3, 29, 133, 135, 180, 190, 265, 295, 304, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448], "develop": [0, 3, 4, 7, 50, 138, 428, 447], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 124, 127, 130, 132, 134, 136, 137, 141, 142, 154, 155, 158, 159, 160, 163, 164, 165, 170, 176, 181, 183, 185, 186, 187, 189, 190, 193, 195, 198, 200, 206, 210, 212, 218, 219, 221, 228, 233, 235, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 267, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 284, 285, 287, 293, 305, 313, 314, 315, 317, 318, 319, 322, 324, 325, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 365, 367, 368, 369, 370, 371, 373, 385, 388, 389, 392, 394, 395, 398, 405, 407, 415, 421, 424, 427, 428, 430, 432, 434, 435, 436, 439, 443, 446, 448], "seri": [0, 2, 3, 7, 8, 59, 97, 108, 118, 119, 122, 123, 163, 213, 239, 387, 423, 424, 428, 429, 430, 437, 438, 441, 442, 445, 448], "quick": [0, 432], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 35, 50, 71, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 189, 208, 211, 234, 239, 250, 253, 352, 422, 423, 424, 428, 429, 430, 431, 434, 438, 441, 442, 443, 445, 447, 448], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 105, 107, 108, 110, 111, 112, 113, 118, 120, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 140, 141, 142, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 174, 178, 181, 182, 183, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 208, 210, 211, 212, 213, 214, 218, 219, 222, 223, 226, 227, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 247, 250, 251, 256, 257, 258, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 294, 305, 309, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 381, 382, 383, 384, 385, 391, 394, 395, 401, 402, 405, 407, 409, 415, 419, 422, 424, 428, 429, 430, 431, 432, 433, 435, 437, 438, 440, 441, 442, 443, 445, 447, 448], "hurri": [0, 433], "last": [0, 1, 2, 3, 4, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 73, 74, 82, 84, 85, 86, 87, 88, 89, 111, 112, 113, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 154, 155, 158, 160, 163, 164, 165, 175, 183, 186, 189, 205, 212, 214, 219, 232, 234, 236, 251, 252, 257, 258, 270, 271, 273, 275, 277, 278, 281, 282, 288, 299, 302, 305, 313, 317, 322, 335, 367, 369, 370, 429, 430, 431, 432, 433, 434, 441, 442, 443, 444, 445, 447, 448], "item": [0, 2, 3, 8, 16, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 94, 99, 105, 107, 111, 118, 141, 183, 198, 204, 239, 281, 282, 336, 337, 339, 396, 424, 425, 428, 430, 431, 435, 436, 441, 442, 443, 445], "navig": [0, 442], "previou": [0, 3, 4, 10, 55, 62, 67, 68, 69, 71, 78, 79, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 205, 233, 250, 271, 275, 298, 313, 430, 431, 432, 433, 434, 438, 443, 448], "whenev": [0, 1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 55, 62, 65, 69, 77, 78, 79, 84, 104, 105, 112, 113, 128, 129, 133, 135, 136, 146, 147, 160, 168, 169, 180, 198, 205, 209, 240, 246, 350, 367, 368, 369, 370, 385, 407, 423, 437, 445], "want": [0, 2, 3, 6, 7, 8, 39, 65, 77, 113, 190, 214, 293, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 423, 428, 429, 430, 431, 432, 433, 435, 436, 437, 441, 442, 443, 444, 445, 447, 448], "ted": [0, 41, 56, 75, 76, 95, 96, 103, 421, 427, 439, 446], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 107, 112, 113, 118, 124, 125, 126, 127, 130, 134, 138, 139, 140, 141, 142, 146, 147, 149, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 170, 190, 194, 198, 208, 212, 218, 231, 233, 236, 237, 238, 239, 240, 243, 245, 247, 248, 250, 252, 255, 257, 258, 265, 270, 273, 277, 282, 283, 284, 287, 293, 295, 302, 304, 310, 312, 315, 317, 318, 321, 322, 325, 333, 335, 340, 346, 348, 350, 355, 357, 367, 368, 369, 370, 371, 385, 423, 424, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "modul": [0, 2, 3, 4, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 71, 72, 77, 118, 124, 125, 126, 127, 130, 134, 141, 142, 145, 148, 151, 154, 155, 158, 163, 164, 165, 180, 189, 194, 198, 200, 202, 208, 210, 218, 219, 232, 233, 238, 239, 240, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 363, 365, 367, 368, 369, 370, 371, 385, 405, 412, 415, 421, 424, 425, 427, 429, 430, 433, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446], "optim": [0, 1, 2, 8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 254, 280, 286, 287, 293, 302, 333, 335, 350, 351, 352, 355, 362, 400, 401, 405, 415, 424, 425, 427, 430, 431, 432, 433, 434, 436, 439, 441, 442, 443, 446], "collect": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 50, 55, 62, 67, 68, 69, 78, 79, 107, 111, 124, 127, 130, 134, 141, 142, 154, 155, 158, 160, 163, 164, 165, 170, 187, 190, 198, 205, 214, 218, 245, 294, 317, 333, 336, 339, 341, 353, 355, 357, 358, 387, 396, 402, 405, 407, 408, 409, 415, 425, 427, 428, 431, 432, 433, 434, 435, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448], "storag": [0, 1, 8, 32, 39, 41, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 81, 84, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 127, 130, 132, 134, 141, 142, 154, 155, 158, 163, 164, 165, 189, 190, 197, 201, 223, 250, 421, 425, 427, 429, 430, 431, 432, 433, 435, 438, 439, 441, 442, 444, 446], "log": [0, 3, 4, 8, 11, 71, 265, 266, 267, 281, 282, 290, 302, 303, 314, 315, 318, 322, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 358, 365, 394, 398, 399, 400, 405, 415, 423, 424, 425, 427, 428, 429, 430, 433, 434, 438, 439, 441, 442, 443, 446, 447], "your": [0, 1, 2, 7, 8, 10, 11, 15, 16, 17, 18, 21, 23, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 138, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 247, 248, 250, 322, 395, 419, 421, 422, 423, 424, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 441, 442, 445, 446, 447], "own": [0, 1, 16, 17, 22, 26, 27, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 250, 387, 421, 424, 427, 429, 430, 433, 439, 441, 442, 443, 446], "train": [0, 1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 32, 35, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 83, 84, 94, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 170, 197, 206, 218, 232, 237, 240, 243, 245, 250, 252, 253, 255, 260, 262, 270, 273, 277, 294, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 367, 405, 407, 415, 421, 423, 425, 427, 429, 433, 436, 437, 439, 444, 445, 446, 447, 448], "loop": [0, 8, 45, 46, 47, 61, 63, 70, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 270, 293, 294, 352, 405, 424, 425, 427, 428, 429, 433, 435, 436, 437, 439, 440, 445, 446, 447], "ppo": [0, 4, 8, 318, 322, 334, 349, 352, 421, 423, 427, 428, 429, 432, 434, 435, 439, 441, 446], "pendulum": [0, 3, 16, 17, 20, 22, 26, 27, 67, 118, 124, 127, 128, 129, 130, 131, 133, 134, 135, 141, 142, 149, 154, 155, 158, 163, 164, 165, 190, 193, 194, 195, 203, 209, 210, 214, 221, 223, 227, 228, 231, 233, 234, 235, 238, 239, 240, 241, 247, 250, 256, 273, 277, 415, 423, 427, 429, 430, 433, 434, 435, 439, 446, 447, 448], "introduct": [0, 424, 427, 433, 439, 441, 442, 446, 448], "multi": [0, 1, 7, 9, 32, 39, 44, 55, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 95, 96, 103, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 161, 162, 163, 164, 165, 211, 240, 250, 271, 273, 275, 277, 278, 283, 284, 285, 317, 322, 365, 367, 368, 369, 370, 421, 427, 428, 429, 430, 431, 433, 434, 439, 443, 446, 447], "agent": [0, 9, 68, 73, 74, 145, 146, 147, 152, 153, 156, 157, 161, 162, 166, 167, 168, 169, 171, 211, 230, 231, 232, 281, 282, 283, 284, 285, 287, 295, 304, 334, 349, 352, 365, 421, 427, 433, 439, 443, 446], "env": [0, 1, 2, 5, 6, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 36, 39, 41, 44, 50, 55, 65, 66, 67, 71, 72, 75, 77, 84, 107, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 256, 273, 277, 279, 280, 317, 321, 350, 385, 386, 387, 395, 409, 410, 411, 415, 417, 418, 419, 421, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 99, 103, 104, 105, 106, 107, 112, 113, 118, 120, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 290, 292, 293, 294, 295, 296, 302, 303, 304, 305, 308, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 380, 385, 387, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 415, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448], "pretrain": [0, 427, 439, 446], "recurr": [0, 2, 189, 271, 272, 273, 275, 277, 298, 308, 427, 429, 434, 439, 445, 446], "dqn": [0, 2, 183, 202, 258, 267, 314, 315, 332, 333, 335, 336, 337, 339, 341, 342, 343, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 365, 412, 421, 423, 427, 432, 434, 435, 438, 439, 446], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 41, 55, 67, 75, 124, 125, 126, 127, 130, 134, 141, 142, 148, 154, 155, 158, 159, 163, 164, 165, 179, 200, 210, 212, 232, 235, 252, 255, 256, 267, 270, 273, 277, 283, 284, 287, 294, 296, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 325, 332, 333, 334, 335, 336, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 400, 407, 410, 411, 415, 417, 418, 421, 423, 425, 427, 429, 433, 435, 436, 439, 444, 445, 446, 447, 448], "replai": [0, 8, 20, 26, 55, 62, 67, 68, 69, 78, 79, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 118, 119, 123, 189, 190, 200, 219, 223, 233, 239, 250, 335, 336, 337, 339, 340, 341, 348, 353, 355, 357, 358, 402, 405, 413, 415, 421, 424, 425, 427, 432, 439, 443, 444, 446], "buffer": [0, 4, 8, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 189, 190, 194, 198, 200, 208, 218, 219, 223, 233, 238, 239, 240, 243, 245, 250, 252, 294, 313, 321, 324, 335, 336, 337, 339, 340, 341, 348, 353, 355, 357, 358, 367, 368, 369, 370, 371, 402, 405, 413, 415, 421, 424, 425, 427, 432, 437, 439, 443, 444, 446, 448], "export": [0, 6, 7, 427, 439, 446], "competit": [0, 3, 146, 147, 427, 439, 442, 446], "ddpg": [0, 260, 261, 262, 263, 336, 347, 356, 421, 423, 427, 429, 435, 439, 442, 446], "task": [0, 2, 3, 9, 71, 73, 74, 83, 124, 127, 128, 129, 130, 134, 137, 141, 142, 146, 147, 154, 155, 156, 157, 158, 160, 163, 164, 165, 168, 169, 218, 231, 240, 243, 245, 340, 348, 427, 428, 429, 430, 431, 433, 434, 439, 441, 442, 443, 446, 448], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 152, 153, 154, 155, 158, 163, 164, 165, 168, 178, 198, 212, 233, 248, 264, 273, 277, 313, 332, 350, 352, 354, 387, 405, 421, 424, 425, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442, 445, 446, 447], "object": [0, 2, 3, 4, 6, 7, 16, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 36, 39, 44, 45, 46, 47, 55, 57, 61, 63, 65, 66, 70, 72, 77, 82, 83, 84, 98, 99, 100, 101, 107, 110, 114, 116, 120, 123, 124, 127, 130, 134, 139, 141, 142, 154, 155, 158, 159, 163, 164, 165, 183, 197, 201, 202, 208, 211, 214, 218, 238, 239, 240, 243, 247, 248, 250, 273, 277, 280, 283, 284, 295, 302, 304, 309, 310, 318, 321, 322, 323, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 409, 410, 411, 414, 415, 419, 421, 423, 425, 427, 429, 430, 431, 432, 436, 438, 439, 441, 442, 443, 445, 446, 448], "loss": [0, 3, 8, 63, 202, 293, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 365, 366, 367, 401, 405, 412, 415, 424, 425, 427, 432, 433, 435, 436, 437, 439, 443, 445, 446], "trainer": [0, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 427, 428, 439, 446], "exampl": [0, 1, 2, 4, 9, 10, 16, 17, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 83, 84, 85, 94, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 290, 292, 293, 294, 295, 296, 304, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 359, 360, 365, 367, 368, 369, 370, 373, 385, 387, 395, 396, 397, 398, 399, 401, 402, 403, 404, 407, 415, 421, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448], "packag": [0, 6, 7, 10, 180, 421, 422, 448], "batch": [0, 2, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 36, 55, 57, 59, 62, 64, 67, 68, 69, 71, 78, 79, 80, 82, 94, 98, 99, 100, 101, 105, 106, 107, 111, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 148, 149, 151, 152, 153, 154, 155, 158, 163, 164, 165, 166, 167, 168, 169, 182, 187, 190, 194, 195, 198, 205, 212, 214, 216, 219, 223, 230, 233, 235, 239, 240, 242, 246, 247, 250, 253, 265, 271, 272, 273, 275, 276, 277, 281, 282, 283, 284, 285, 286, 290, 294, 295, 301, 305, 308, 317, 321, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 396, 399, 402, 403, 404, 405, 407, 417, 418, 419, 421, 423, 424, 425, 429, 430, 431, 432, 433, 436, 438, 440, 441, 442, 444, 447, 448], "size": [0, 2, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 181, 183, 187, 189, 190, 191, 194, 196, 197, 198, 201, 202, 203, 205, 208, 211, 212, 216, 218, 220, 221, 223, 227, 229, 230, 231, 233, 235, 236, 239, 240, 241, 242, 245, 247, 248, 250, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 304, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 387, 396, 402, 421, 423, 424, 429, 430, 431, 432, 433, 434, 436, 441, 442, 443, 448], "copi": [0, 2, 3, 15, 18, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 190, 208, 221, 232, 238, 239, 240, 247, 248, 250, 251, 273, 277, 285, 313, 335, 350, 355, 385, 421, 424, 428, 429, 431, 433, 441, 445, 447], "interoper": [0, 16, 17, 421], "singl": [0, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 50, 53, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 80, 84, 99, 107, 113, 118, 124, 127, 130, 133, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 183, 190, 191, 198, 211, 218, 223, 233, 238, 240, 245, 250, 257, 258, 271, 272, 273, 275, 276, 277, 278, 284, 320, 324, 333, 334, 335, 337, 339, 341, 342, 348, 349, 352, 353, 355, 357, 358, 362, 367, 368, 369, 370, 376, 377, 378, 379, 381, 382, 383, 384, 385, 419, 421, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 447], "node": [0, 2, 19, 23, 24, 25, 26, 27, 36, 37, 45, 46, 47, 48, 50, 61, 63, 70, 74, 84, 142, 238, 421, 436, 447], "distribut": [0, 2, 3, 4, 9, 10, 15, 18, 19, 23, 24, 25, 26, 27, 62, 67, 68, 69, 78, 79, 107, 127, 156, 157, 210, 214, 248, 252, 254, 265, 266, 267, 268, 274, 280, 281, 282, 290, 291, 292, 293, 297, 298, 301, 302, 303, 313, 314, 315, 318, 322, 323, 332, 333, 334, 335, 340, 341, 342, 348, 349, 352, 353, 354, 355, 357, 358, 421, 424, 425, 429, 430, 432, 434, 436, 441, 442, 443, 447, 448], "helper": [0, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 428, 429, 431, 441, 443], "compos": [0, 3, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 106, 107, 108, 109, 118, 119, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 195, 208, 222, 238, 239, 240, 247, 250, 316, 317, 335, 344, 355, 387, 421, 428, 429, 430, 431, 432, 436, 440, 442, 444, 445, 447, 448], "episod": [0, 3, 50, 105, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 223, 226, 232, 254, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 421, 429, 433, 438, 441, 442, 445], "format": [0, 3, 32, 39, 41, 44, 53, 54, 55, 56, 59, 60, 65, 66, 72, 75, 76, 77, 84, 95, 96, 103, 110, 118, 124, 127, 130, 134, 141, 142, 154, 155, 156, 158, 163, 164, 165, 190, 194, 218, 233, 239, 240, 243, 245, 250, 321, 387, 421, 428, 429, 432, 433, 435, 437, 447, 448], "tensorspec": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 159, 163, 164, 165, 168, 169, 182, 183, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 205, 207, 209, 210, 211, 212, 214, 216, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 270, 294, 298, 309, 313, 314, 315, 318, 319, 320, 321, 322, 323, 325, 333, 335, 337, 340, 341, 353, 355, 357, 358, 365, 421, 443], "tree": [0, 1, 45, 46, 47, 50, 61, 63, 70, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 421, 441, 445], "forest": [0, 50, 84, 421], "human": [0, 29, 421, 443], "feedback": [0, 421, 438, 447], "rlhf": [0, 210, 421, 423], "spec": [0, 1, 2, 16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 175, 178, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 211, 212, 214, 216, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 267, 270, 273, 277, 294, 296, 298, 309, 313, 314, 315, 318, 319, 320, 321, 322, 324, 325, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 421, 423, 424, 428, 429, 430, 431, 432, 433, 434, 438, 440, 441, 442, 447], "lock": [0, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 124, 127, 130, 134, 140, 141, 142, 154, 155, 158, 163, 164, 165, 187, 195, 233, 247, 248, 421, 424, 443], "method": [0, 1, 2, 4, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 112, 113, 114, 115, 116, 118, 120, 124, 127, 130, 133, 134, 135, 136, 140, 141, 142, 154, 155, 158, 159, 160, 163, 164, 165, 178, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 265, 270, 273, 277, 283, 284, 285, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 329, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 350, 352, 353, 354, 355, 357, 358, 365, 371, 385, 386, 416, 421, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 443, 445, 448], "partial": [0, 2, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 189, 190, 198, 232, 233, 234, 318, 405, 421, 431], "step": [0, 1, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 55, 71, 84, 95, 96, 103, 105, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 181, 182, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 205, 206, 209, 210, 212, 214, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 252, 253, 254, 268, 270, 271, 273, 275, 277, 279, 280, 293, 294, 317, 318, 322, 332, 343, 352, 366, 367, 368, 369, 370, 373, 374, 375, 386, 389, 396, 400, 405, 421, 425, 429, 431, 432, 434, 435, 437, 438, 440, 443, 444, 447], "reset": [0, 1, 2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 113, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 170, 182, 185, 186, 187, 190, 198, 202, 205, 209, 213, 218, 226, 231, 232, 233, 234, 235, 238, 239, 240, 243, 246, 247, 250, 251, 256, 271, 273, 277, 285, 294, 307, 317, 350, 386, 421, 424, 428, 429, 430, 431, 433, 436, 440, 441, 442, 447], "vector": [0, 1, 8, 30, 59, 125, 126, 135, 139, 140, 145, 156, 157, 160, 168, 169, 200, 246, 248, 260, 262, 271, 272, 275, 276, 278, 367, 370, 380, 381, 382, 383, 384, 421, 423, 424, 428, 429, 431, 440, 441, 442, 443, 444, 448], "async": [0, 16, 17, 22, 23, 24, 25, 26, 67, 124, 158, 164, 246, 421], "custom": [0, 1, 2, 5, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 243, 250, 283, 284, 325, 331, 342, 352, 359, 419, 421, 423, 428, 429, 430, 431, 434, 435, 437, 441, 442], "nativ": [0, 1, 7, 9, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 387, 421, 431, 445], "auto": [0, 100, 120, 130, 185, 186, 240, 246, 294, 333, 335, 341, 351, 353, 355, 357, 358, 421, 424, 441, 442], "dynam": [0, 2, 7, 16, 17, 20, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 175, 250, 340, 348, 421, 430, 433, 443], "mask": [0, 1, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 184, 219, 250, 255, 256, 267, 270, 281, 282, 296, 313, 314, 315, 319, 320, 341, 355, 402, 421, 429, 431, 432, 448], "action": [0, 2, 8, 9, 16, 17, 20, 22, 26, 41, 50, 59, 67, 71, 75, 77, 84, 104, 105, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 175, 181, 183, 184, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 212, 213, 214, 216, 220, 221, 223, 227, 231, 233, 237, 239, 240, 241, 242, 246, 250, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 273, 277, 278, 279, 280, 281, 282, 283, 292, 294, 295, 296, 298, 301, 302, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 325, 326, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 415, 419, 421, 423, 425, 428, 429, 430, 432, 433, 434, 435, 440, 441, 442, 444, 447, 448], "record": [0, 2, 11, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 176, 183, 210, 250, 352, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 400, 415, 421, 429, 430, 434, 438, 441], "domain": [0, 2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 200, 208, 233, 241, 309, 314, 315, 318, 319, 320, 321, 322, 323, 324, 329, 421, 430, 435, 441, 442, 443, 447, 448], "actor": [0, 3, 4, 26, 159, 210, 254, 259, 260, 262, 267, 268, 270, 280, 292, 294, 296, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 365, 421, 424, 429, 431, 433, 435, 438, 441, 444, 447], "explor": [0, 1, 249, 252, 255, 270, 287, 294, 309, 314, 315, 318, 319, 320, 321, 322, 332, 350, 400, 410, 411, 415, 421, 430, 431, 432, 433, 435, 436, 438, 441, 442, 443], "valu": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 104, 105, 107, 112, 113, 118, 124, 127, 130, 134, 141, 142, 145, 154, 155, 158, 163, 164, 165, 170, 175, 180, 181, 182, 183, 186, 188, 190, 191, 193, 195, 197, 198, 199, 200, 201, 202, 208, 213, 214, 218, 219, 222, 223, 224, 226, 228, 230, 233, 234, 239, 240, 245, 247, 248, 250, 251, 252, 253, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 274, 277, 278, 280, 281, 282, 283, 284, 286, 287, 290, 294, 295, 296, 301, 302, 303, 304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 399, 400, 401, 402, 405, 415, 421, 425, 429, 432, 435, 436, 437, 440, 441, 442, 443, 445, 447, 448], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 69, 71, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 109, 111, 124, 127, 130, 131, 134, 141, 142, 146, 147, 148, 151, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 182, 187, 194, 195, 197, 198, 199, 203, 208, 210, 212, 214, 220, 221, 226, 227, 231, 233, 237, 239, 241, 246, 248, 250, 255, 256, 265, 273, 277, 281, 282, 290, 309, 318, 322, 326, 327, 346, 353, 360, 367, 372, 380, 390, 405, 421, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "hook": [0, 2, 32, 39, 41, 44, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 107, 121, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 296, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 421], "planner": [0, 254, 280, 421], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 181, 182, 183, 184, 186, 187, 188, 189, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 208, 210, 211, 214, 216, 218, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 239, 240, 241, 243, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 330, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 396, 403, 404, 415, 421, 423, 425, 428, 429, 430, 431, 432, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 447, 448], "vmap": [0, 271, 272, 275, 276, 285, 305, 321, 324, 350, 421, 423], "random": [0, 1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 71, 73, 74, 82, 85, 86, 87, 88, 89, 106, 118, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 159, 163, 164, 165, 170, 183, 198, 200, 213, 214, 233, 240, 256, 270, 271, 273, 275, 277, 318, 321, 322, 329, 333, 350, 353, 400, 409, 421, 423, 428, 429, 430, 432, 433, 434, 436, 443, 444, 445, 447, 448], "sac": [0, 341, 353, 355, 421], "redq": [0, 353, 421], "crossq": [0, 335, 421], "iql": [0, 340, 348, 421, 428, 441, 442], "cql": [0, 333, 339, 421], "gail": [0, 346, 421], "dt": [0, 155, 294, 421, 443], "td3": [0, 357, 358, 421], "bc": [0, 5, 357, 421], "a2c": [0, 332, 421], "dreamer": [0, 176, 177, 268, 343, 344, 345, 421, 423], "checkpoint": [0, 69, 96, 98, 102, 114, 115, 117, 121, 421, 445], "builder": [0, 421, 429, 448], "logger": [0, 3, 11, 385, 387, 389, 390, 391, 392, 393, 394, 399, 405, 415, 419, 421, 429, 441], "_util": [0, 3, 154, 251, 421, 432, 438], "implement_for": [0, 3, 421], "set_auto_unwrap_transformed_env": [0, 12, 240, 421], "auto_unwrap_transformed_env": [0, 395, 421], "thing": [0, 3, 7, 8, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 239, 283, 284, 341, 355, 422, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 445, 448], "consid": [0, 1, 2, 3, 8, 15, 18, 21, 25, 32, 36, 37, 39, 44, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 98, 100, 112, 113, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 200, 247, 250, 265, 283, 284, 301, 333, 335, 348, 353, 355, 357, 358, 367, 369, 370, 422, 424, 428, 433, 434, 435, 443, 445], "when": [0, 1, 2, 3, 5, 8, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 116, 120, 124, 127, 130, 131, 133, 134, 135, 140, 141, 142, 145, 146, 147, 149, 151, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 179, 181, 184, 186, 189, 190, 194, 197, 198, 200, 201, 210, 211, 213, 214, 218, 219, 226, 233, 235, 238, 239, 240, 243, 245, 246, 247, 248, 250, 251, 253, 254, 265, 267, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 293, 296, 302, 317, 318, 321, 322, 324, 328, 333, 334, 335, 337, 341, 342, 348, 349, 350, 352, 353, 355, 357, 358, 359, 365, 366, 367, 368, 369, 370, 385, 386, 387, 389, 392, 394, 402, 419, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 436, 437, 441, 442, 443, 444, 445, 447, 448], "debug": [0, 6, 8, 50, 71, 84, 235, 422, 448], "work": [0, 1, 2, 3, 4, 8, 32, 39, 44, 55, 65, 66, 69, 72, 77, 98, 105, 110, 112, 113, 116, 123, 124, 127, 130, 133, 134, 135, 138, 141, 142, 154, 155, 158, 160, 163, 164, 165, 178, 181, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 248, 250, 251, 257, 258, 278, 315, 320, 325, 334, 349, 352, 405, 422, 423, 428, 429, 430, 431, 433, 436, 440, 441, 442, 443, 444, 445, 447, 448], "habitat": [0, 3, 136, 422, 444], "lab": [0, 3, 128, 129, 136, 422], "mujoco": [0, 6, 8, 160, 422, 428, 430, 431], "error": [0, 1, 3, 7, 10, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 70, 72, 73, 77, 84, 98, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 170, 171, 219, 238, 250, 251, 350, 422, 424, 428, 430, 441, 442, 448], "solut": [0, 2, 3, 6, 7, 9, 26, 112, 422, 423, 425, 432, 447], "resourc": [0, 1, 26, 136, 422, 428, 430, 432, 441, 442], "issu": [0, 2, 3, 4, 5, 8, 67, 96, 98, 100, 112, 120, 124, 127, 130, 133, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 181, 190, 219, 234, 309, 314, 315, 318, 319, 320, 321, 322, 422, 447], "customis": [0, 422, 429, 437], "video": [0, 4, 9, 387, 389, 392, 394, 400, 419, 421, 422, 438, 441, 442], "render": [0, 3, 8, 140, 168, 385, 387, 400, 422, 428, 429, 430, 432, 433, 437], "index": [0, 3, 7, 8, 10, 20, 30, 31, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 104, 105, 107, 108, 110, 112, 116, 118, 119, 120, 122, 123, 124, 127, 130, 134, 141, 142, 146, 147, 152, 153, 154, 155, 158, 163, 164, 165, 168, 169, 181, 185, 190, 194, 200, 240, 281, 282, 317, 421, 433, 440, 441, 442, 445, 447], "search": [0, 2, 36, 37, 48, 74, 84, 151, 182, 429], "page": [0, 7, 29, 394, 435], "somewhat": [1, 2, 198, 424, 434, 448], "equival": [1, 3, 26, 30, 31, 32, 35, 36, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 77, 78, 79, 83, 84, 94, 124, 125, 126, 127, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 187, 199, 202, 233, 235, 240, 250, 267, 275, 278, 296, 314, 315, 319, 320, 352, 402, 436, 447, 448], "dataload": [1, 94, 111, 113, 141, 198, 429, 436, 445], "except": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 204, 223, 232, 233, 234, 238, 240, 250, 252, 270, 271, 273, 275, 277, 290, 294, 332, 335, 350, 352, 355, 387, 423, 428, 429, 433, 441, 445, 447, 448], "1": [1, 2, 3, 4, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 208, 210, 211, 212, 214, 216, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 245, 247, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 290, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 365, 366, 367, 368, 369, 370, 373, 375, 376, 377, 381, 382, 384, 385, 387, 396, 400, 402, 403, 415, 419, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448], "thei": [1, 2, 3, 4, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 105, 107, 124, 127, 130, 133, 134, 135, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 186, 189, 204, 210, 218, 227, 235, 239, 240, 245, 250, 277, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 402, 405, 423, 424, 425, 428, 429, 430, 431, 432, 435, 440, 441, 442, 443, 444, 445, 447, 448], "over": [1, 2, 3, 4, 8, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 93, 105, 107, 111, 112, 113, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 181, 183, 198, 200, 214, 226, 234, 250, 290, 293, 302, 305, 324, 342, 344, 350, 373, 385, 408, 423, 425, 428, 429, 430, 432, 433, 434, 435, 436, 441, 442, 443, 448], "non": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 48, 49, 55, 57, 58, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 99, 101, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 181, 187, 188, 190, 194, 198, 205, 218, 230, 233, 239, 240, 241, 242, 243, 245, 250, 256, 271, 273, 275, 277, 283, 321, 322, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 423, 428, 431, 432, 441, 442, 443, 445, 448], "static": [1, 39, 65, 71, 77, 83, 105, 112, 113, 136, 155, 247, 251, 348, 433, 443, 445], "like": [1, 2, 3, 4, 7, 11, 26, 32, 36, 37, 39, 44, 48, 50, 55, 57, 62, 65, 66, 69, 72, 74, 77, 78, 79, 83, 101, 107, 113, 124, 127, 130, 131, 134, 136, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 170, 190, 198, 202, 233, 236, 250, 271, 275, 284, 316, 322, 332, 334, 349, 352, 353, 354, 423, 424, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448], "being": [1, 2, 3, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 73, 77, 94, 99, 118, 121, 124, 127, 130, 133, 134, 135, 136, 140, 141, 142, 154, 155, 158, 160, 163, 164, 165, 179, 189, 197, 200, 201, 208, 213, 221, 233, 238, 239, 240, 250, 270, 273, 277, 294, 334, 335, 349, 350, 352, 355, 387, 402, 407, 417, 418, 419, 423, 424, 428, 429, 430, 431, 436, 441, 442, 443, 445], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 69, 70, 72, 77, 84, 85, 94, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 185, 190, 194, 205, 208, 218, 226, 230, 233, 238, 239, 240, 241, 242, 243, 245, 250, 278, 305, 321, 322, 323, 335, 355, 387, 425, 430, 432, 433, 437, 445, 447, 448], "two": [1, 2, 3, 4, 8, 10, 32, 39, 44, 50, 51, 52, 53, 54, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 84, 107, 111, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 214, 218, 238, 245, 250, 263, 271, 273, 275, 277, 283, 284, 299, 302, 322, 349, 357, 361, 400, 405, 424, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 441, 442, 443, 445, 447, 448], "main": [1, 2, 3, 5, 16, 17, 25, 27, 28, 67, 131, 190, 322, 405, 423, 424, 428, 429, 440, 447, 448], "argument": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 96, 98, 99, 100, 104, 105, 107, 110, 111, 112, 113, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 160, 163, 164, 165, 166, 167, 168, 169, 175, 181, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 198, 199, 202, 203, 204, 206, 208, 209, 210, 212, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 270, 271, 273, 275, 277, 278, 281, 282, 283, 284, 286, 294, 305, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 360, 365, 367, 368, 369, 370, 371, 375, 385, 386, 387, 392, 394, 398, 405, 408, 415, 416, 419, 428, 429, 430, 431, 432, 433, 434, 436, 441, 442, 443, 445, 447, 448], "list": [1, 2, 3, 6, 7, 8, 9, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 99, 101, 107, 110, 111, 112, 113, 114, 116, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 181, 188, 189, 193, 197, 198, 199, 201, 210, 211, 214, 216, 218, 226, 228, 236, 237, 238, 239, 240, 242, 243, 245, 247, 248, 250, 256, 257, 258, 260, 266, 269, 273, 277, 278, 281, 282, 288, 296, 315, 317, 319, 320, 322, 324, 325, 326, 333, 335, 348, 350, 353, 355, 357, 358, 364, 367, 370, 385, 386, 400, 402, 417, 418, 424, 428, 430, 433, 434, 435, 436, 440, 441, 443, 444, 445, 447, 448], "constructor": [1, 2, 3, 20, 23, 24, 25, 26, 67, 69, 78, 79, 83, 104, 118, 124, 127, 130, 134, 141, 142, 149, 154, 155, 158, 163, 164, 165, 168, 186, 190, 238, 257, 258, 278, 308, 318, 322, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 416, 419, 423, 428, 429, 430, 433, 436, 441, 442, 445, 447], "iter": [1, 2, 3, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 93, 94, 101, 107, 111, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 198, 203, 214, 227, 250, 251, 253, 255, 256, 257, 258, 278, 283, 284, 300, 309, 314, 318, 319, 321, 323, 324, 326, 350, 364, 400, 404, 405, 424, 425, 428, 430, 431, 436, 438, 441, 442, 443], "execut": [1, 2, 3, 6, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 64, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 98, 99, 107, 112, 113, 124, 125, 126, 127, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 148, 149, 154, 155, 158, 160, 163, 164, 165, 166, 184, 195, 212, 235, 240, 250, 270, 271, 273, 275, 277, 285, 308, 317, 323, 324, 350, 357, 409, 419, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 445, 446, 447, 448], "queri": [1, 2, 3, 16, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 99, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 218, 243, 247, 250, 324, 424, 428, 435, 443, 447], "defin": [1, 2, 3, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 219, 232, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 285, 288, 289, 292, 293, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 329, 337, 339, 350, 367, 368, 369, 370, 371, 386, 416, 423, 428, 429, 431, 435, 438, 443, 445, 448], "number": [1, 2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 104, 105, 107, 110, 112, 113, 120, 124, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 148, 149, 150, 151, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 183, 184, 186, 187, 189, 190, 191, 194, 195, 198, 199, 200, 202, 203, 204, 206, 209, 210, 213, 214, 217, 219, 220, 221, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 252, 253, 254, 257, 258, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 288, 289, 294, 295, 297, 298, 301, 302, 303, 304, 309, 313, 317, 318, 321, 322, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 392, 394, 396, 398, 400, 405, 407, 408, 409, 417, 418, 419, 423, 424, 428, 429, 430, 431, 433, 434, 436, 438, 441, 442, 443, 444, 445, 448], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 39, 40, 44, 50, 51, 52, 55, 65, 66, 72, 77, 83, 84, 111, 113, 118, 124, 127, 130, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 170, 183, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 250, 255, 271, 273, 277, 278, 286, 287, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 368, 369, 370, 402, 428, 430, 431, 432, 436, 437, 441, 442, 443, 445, 448], "deliv": [1, 2, 3, 20, 198, 428, 429, 433, 436, 447], "stack": [1, 2, 3, 7, 8, 16, 17, 20, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 92, 99, 104, 107, 124, 127, 130, 133, 134, 135, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 190, 198, 212, 247, 271, 273, 275, 276, 277, 317, 323, 324, 333, 335, 348, 353, 355, 357, 358, 386, 396, 421, 429, 432, 433, 440, 441, 443, 447], "user": [1, 2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 105, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 170, 191, 208, 232, 238, 240, 250, 264, 335, 352, 355, 357, 387, 416, 424, 425, 428, 429, 433, 435, 436, 443, 447, 448], "reach": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 71, 111, 124, 127, 130, 134, 140, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 212, 231, 252, 270, 294, 428, 430, 438, 441, 442, 447, 448], "done": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 74, 75, 77, 82, 84, 85, 86, 87, 88, 89, 95, 96, 103, 105, 107, 112, 113, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 184, 186, 187, 190, 197, 198, 199, 201, 202, 203, 208, 212, 213, 214, 216, 220, 221, 223, 225, 227, 230, 231, 233, 234, 237, 238, 239, 240, 241, 247, 250, 254, 271, 273, 277, 280, 302, 317, 332, 333, 334, 335, 336, 337, 339, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 423, 424, 428, 430, 431, 432, 433, 435, 436, 438, 440, 441, 442, 443, 445, 447, 448], "state": [1, 2, 3, 4, 16, 17, 20, 22, 32, 39, 41, 44, 50, 55, 62, 65, 66, 67, 68, 69, 71, 72, 75, 77, 78, 79, 84, 95, 96, 103, 107, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 148, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 170, 181, 182, 186, 189, 190, 191, 193, 194, 195, 198, 199, 202, 205, 208, 212, 214, 221, 231, 232, 237, 238, 239, 240, 241, 242, 247, 248, 250, 254, 259, 264, 268, 271, 272, 273, 275, 276, 277, 278, 280, 285, 288, 292, 295, 297, 298, 304, 310, 317, 321, 327, 332, 334, 335, 339, 341, 349, 350, 352, 353, 354, 355, 365, 366, 367, 368, 369, 370, 371, 405, 419, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 448], "after": [1, 2, 3, 8, 16, 17, 22, 23, 25, 26, 32, 39, 41, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 100, 107, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 149, 150, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 253, 270, 271, 273, 277, 286, 314, 319, 335, 344, 355, 357, 429, 430, 431, 432, 433, 434, 436, 438, 441, 442, 443, 444, 445, 448], "predefin": [1, 387, 429, 431, 436, 445, 447], "becaus": [1, 2, 3, 4, 7, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 71, 72, 77, 84, 99, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 202, 210, 231, 246, 250, 263, 284, 309, 314, 315, 317, 318, 319, 320, 321, 322, 332, 352, 423, 428, 429, 431, 432, 434, 435, 436, 440, 441, 442, 443, 445, 448], "potenti": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 443, 445], "comput": [1, 3, 4, 8, 16, 18, 20, 26, 32, 35, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 182, 214, 228, 240, 244, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 288, 289, 290, 292, 294, 297, 298, 300, 302, 303, 305, 310, 313, 315, 317, 318, 320, 322, 325, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 409, 424, 428, 430, 431, 432, 433, 434, 440, 441, 442, 444, 445], "heavi": [1, 8, 445], "crucial": [1, 2, 3, 252, 270, 294, 340, 348, 350, 428, 429, 430, 431, 433, 435, 437, 441, 442, 443, 447, 448], "configur": [1, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 71, 127, 210, 259, 264, 292, 350, 352, 423, 428, 429, 430, 435, 441, 442, 443], "hyperparamet": [1, 110, 250, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 428, 437, 443, 445], "appropri": [1, 3, 4, 7, 97, 108, 118, 119, 122, 123, 142, 154, 163, 202, 416, 419, 428, 437, 445], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 114, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 423, 424, 428, 431, 432, 434, 438, 441, 442, 443, 444, 447], "take": [1, 2, 3, 8, 28, 32, 39, 44, 50, 65, 66, 71, 72, 77, 115, 121, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 193, 231, 234, 235, 239, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 316, 317, 318, 320, 322, 325, 328, 331, 352, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 396, 407, 423, 425, 428, 429, 430, 432, 433, 434, 435, 441, 442, 443, 445, 448], "whether": [1, 2, 3, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 98, 100, 107, 108, 120, 124, 127, 130, 134, 140, 141, 142, 146, 147, 148, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 182, 186, 195, 197, 198, 201, 232, 238, 240, 247, 248, 250, 257, 258, 273, 277, 278, 317, 322, 326, 332, 333, 334, 335, 336, 337, 339, 341, 342, 346, 349, 350, 352, 353, 354, 355, 357, 358, 365, 367, 370, 395, 419, 428, 429, 430, 432, 433, 441, 442, 443, 447, 448], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 101, 105, 107, 112, 113, 114, 118, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 145, 148, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 170, 181, 182, 183, 186, 187, 190, 193, 194, 197, 199, 202, 203, 205, 210, 211, 212, 214, 219, 220, 221, 223, 226, 227, 231, 232, 234, 237, 239, 240, 241, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 284, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 318, 320, 321, 322, 325, 328, 332, 334, 335, 341, 347, 349, 350, 352, 353, 354, 355, 356, 357, 366, 367, 368, 369, 370, 371, 387, 389, 395, 400, 401, 402, 405, 415, 417, 418, 419, 423, 424, 425, 428, 429, 430, 431, 432, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "occur": [1, 8, 17, 39, 65, 73, 74, 77, 84, 124, 127, 130, 134, 136, 141, 142, 154, 155, 158, 163, 164, 165, 182, 191, 203, 214, 219, 246, 253, 309, 314, 315, 318, 319, 320, 321, 322, 344, 432, 445, 448], "serial": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 247, 248, 250], "parallel": [1, 3, 8, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 170, 240, 246, 273, 277, 332, 416, 417, 418, 419, 429, 430, 441, 442, 447], "syncdatacollector": [1, 2, 3, 16, 17, 21, 22, 23, 24, 25, 26, 41, 55, 75, 187, 190, 223, 255, 273, 277, 415, 418, 421, 428, 429, 430, 431, 432, 436, 438, 441, 442, 445], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 45, 46, 47, 61, 63, 70, 82, 83, 84, 94, 131, 149, 154, 163, 238, 247, 417, 418, 419, 428, 429, 430, 447, 448], "multisyncdatacollector": [1, 17, 23, 24, 25, 26, 255, 418, 421, 430, 436, 447], "split": [1, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 43, 48, 61, 63, 74, 83, 94, 105, 112, 113, 145, 156, 157, 271, 275, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 423, 425, 430, 434, 445, 447], "workload": 1, "across": [1, 3, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 57, 62, 66, 69, 72, 78, 79, 105, 112, 113, 125, 126, 128, 129, 133, 135, 136, 138, 139, 140, 149, 150, 154, 160, 165, 238, 247, 248, 250, 273, 277, 283, 293, 294, 350, 407, 421, 423, 424, 428, 433, 437, 441, 442, 443], "aggreg": [1, 3, 32, 65, 105, 118, 156, 157, 182, 211, 257, 258, 260, 261, 324, 424, 442], "result": [1, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 33, 39, 44, 45, 46, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 84, 85, 105, 107, 111, 112, 113, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 255, 270, 271, 273, 275, 277, 278, 283, 296, 302, 313, 315, 320, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 407, 424, 429, 431, 433, 434, 437, 438, 443, 444, 447, 448], "final": [1, 2, 3, 4, 26, 45, 46, 47, 50, 61, 63, 70, 71, 84, 233, 246, 252, 270, 271, 273, 275, 277, 283, 294, 316, 323, 367, 400, 423, 428, 429, 430, 432, 437, 438, 441, 442, 443, 448], "multiasyncdatacollector": [1, 22, 23, 24, 25, 26, 255, 417, 421, 428, 429, 430, 436, 447], "sever": [1, 2, 3, 8, 32, 39, 44, 51, 55, 65, 66, 72, 77, 83, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 191, 193, 211, 240, 250, 352, 428, 430, 432, 437, 438, 445, 448], "gather": [1, 3, 23, 25, 26, 50, 83, 94, 98, 100, 105, 112, 120, 212, 219, 282, 285, 290, 350, 366, 409, 422, 429, 430, 431, 436, 441, 442, 443, 445, 447, 448], "continu": [1, 2, 3, 9, 33, 36, 50, 85, 86, 87, 113, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 175, 183, 208, 233, 241, 260, 261, 262, 263, 293, 294, 324, 329, 333, 356, 367, 372, 380, 423, 428, 430, 434, 441, 442, 445], "concomitantli": [1, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "network": [1, 4, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 250, 257, 258, 260, 261, 262, 263, 266, 268, 269, 275, 278, 283, 284, 285, 287, 288, 289, 291, 293, 295, 297, 298, 299, 304, 310, 311, 312, 313, 321, 325, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 363, 365, 367, 368, 369, 370, 371, 414, 415, 423, 424, 425, 432, 435, 438, 440, 443, 448], "impli": [1, 84, 448], "mai": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 96, 99, 105, 112, 124, 127, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 160, 163, 164, 165, 170, 198, 210, 214, 227, 238, 240, 242, 247, 248, 250, 253, 273, 277, 278, 283, 322, 334, 341, 349, 352, 355, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 445, 448], "slightli": [1, 28, 424, 431, 432, 441, 443, 444, 445, 448], "lag": [1, 428, 429, 430], "therefor": [1, 2, 3, 7, 62, 69, 78, 79, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 223, 352, 365, 432, 435, 441, 448], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 190], "where": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 39, 41, 43, 44, 45, 46, 47, 50, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 94, 96, 98, 100, 105, 107, 112, 113, 118, 120, 121, 124, 127, 130, 134, 141, 142, 145, 148, 151, 154, 155, 156, 157, 158, 163, 164, 165, 178, 181, 182, 183, 184, 187, 190, 198, 202, 210, 218, 223, 226, 231, 232, 233, 234, 235, 239, 240, 242, 245, 246, 250, 252, 270, 271, 272, 273, 275, 276, 277, 281, 282, 283, 291, 293, 294, 313, 318, 321, 322, 331, 332, 333, 334, 335, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 424, 425, 428, 429, 430, 432, 433, 440, 441, 442, 443, 445, 448], "asynchron": [1, 3, 9, 17, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321, 332, 417, 428, 429, 430], "off": [1, 2, 4, 274, 303, 314, 355, 385, 400, 410, 423, 425, 428, 429, 430, 434, 435, 441, 442, 444, 447, 448], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 98, 100, 105, 107, 112, 120, 124, 127, 130, 133, 134, 135, 140, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 170, 190, 197, 201, 205, 214, 232, 239, 240, 246, 250, 267, 271, 273, 275, 277, 284, 286, 310, 312, 313, 315, 319, 332, 340, 342, 348, 352, 400, 423, 424, 425, 428, 429, 430, 431, 433, 434, 436, 437, 441, 442, 443, 444, 445, 448], "rollout": [1, 2, 3, 11, 16, 17, 20, 22, 26, 28, 50, 71, 77, 84, 118, 124, 125, 126, 127, 130, 134, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 183, 184, 186, 187, 190, 193, 195, 197, 198, 201, 202, 203, 208, 210, 211, 216, 220, 221, 226, 227, 228, 231, 232, 234, 235, 238, 241, 247, 250, 254, 255, 256, 273, 277, 280, 294, 317, 332, 385, 387, 409, 423, 428, 430, 431, 434, 435, 436, 437, 438, 444, 445, 447], "necessari": [1, 4, 6, 8, 16, 17, 20, 22, 23, 24, 25, 26, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 198, 227, 353, 367, 368, 369, 370, 371, 424, 428, 430, 434, 435, 436], "synchronis": [1, 131, 441, 442], "either": [1, 2, 5, 27, 30, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 94, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 212, 231, 232, 248, 250, 327, 350, 357, 358, 391, 425, 428, 429, 431, 441, 444, 445, 447, 448], "update_policy_weights_": [1, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 428, 442, 447], "update_at_each_batch": [1, 16, 17, 22], "true": [1, 2, 3, 4, 8, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 113, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 195, 198, 200, 203, 205, 208, 209, 210, 211, 212, 213, 214, 218, 219, 221, 222, 225, 226, 227, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 301, 302, 303, 308, 309, 310, 311, 312, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 367, 368, 369, 370, 373, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 394, 395, 398, 399, 400, 402, 405, 419, 423, 424, 425, 428, 429, 430, 431, 432, 434, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "second": [1, 2, 3, 8, 28, 50, 51, 52, 53, 54, 118, 154, 187, 235, 271, 273, 275, 277, 315, 334, 349, 352, 355, 387, 389, 392, 394, 404, 428, 430, 436, 441, 442, 443, 445, 447, 448], "devic": [1, 2, 3, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 112, 113, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 178, 181, 183, 187, 194, 197, 198, 199, 201, 202, 203, 208, 210, 211, 216, 217, 218, 220, 221, 223, 227, 230, 231, 233, 236, 239, 240, 241, 243, 245, 247, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 283, 284, 286, 287, 292, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 385, 402, 407, 413, 423, 428, 429, 430, 431, 432, 441, 442, 443, 444, 447], "oper": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 99, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 205, 210, 235, 237, 241, 248, 250, 266, 267, 272, 276, 310, 311, 312, 314, 315, 316, 321, 327, 332, 334, 336, 337, 342, 349, 352, 354, 365, 366, 367, 368, 369, 370, 405, 421, 424, 425, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 448], "instanc": [1, 2, 3, 4, 7, 8, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 39, 44, 45, 46, 47, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 82, 83, 84, 85, 95, 96, 98, 99, 100, 103, 105, 107, 112, 113, 120, 124, 127, 129, 130, 131, 133, 134, 135, 141, 142, 148, 154, 155, 158, 163, 164, 165, 170, 175, 182, 214, 233, 240, 247, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 283, 284, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 333, 335, 337, 340, 341, 348, 350, 353, 355, 357, 358, 365, 367, 368, 369, 370, 385, 387, 391, 395, 400, 409, 410, 411, 415, 417, 418, 423, 424, 425, 428, 430, 431, 432, 433, 434, 443, 445, 448], "cpu": [1, 2, 3, 8, 10, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 107, 112, 120, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 183, 187, 194, 197, 198, 199, 201, 202, 203, 208, 211, 216, 218, 220, 221, 223, 227, 230, 231, 233, 239, 240, 241, 243, 245, 250, 254, 256, 266, 271, 272, 273, 275, 276, 277, 280, 286, 287, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 385, 423, 428, 429, 430, 431, 441, 442, 443, 444, 447], "slower": [1, 441], "than": [1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 32, 65, 84, 105, 112, 113, 116, 118, 124, 127, 130, 134, 138, 141, 142, 152, 153, 154, 155, 158, 160, 163, 164, 165, 198, 211, 212, 221, 252, 263, 273, 275, 277, 278, 305, 309, 314, 321, 322, 326, 350, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 422, 423, 424, 428, 429, 430, 432, 433, 435, 441, 442, 443, 445, 447, 448], "one": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 103, 104, 105, 107, 108, 112, 113, 114, 116, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 183, 184, 187, 190, 193, 195, 197, 199, 200, 201, 208, 211, 213, 214, 218, 223, 226, 229, 230, 232, 233, 234, 239, 240, 242, 245, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 285, 288, 289, 290, 291, 292, 294, 296, 297, 298, 300, 305, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 362, 365, 367, 368, 369, 370, 374, 375, 387, 389, 398, 400, 401, 405, 409, 419, 422, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 448], "cuda": [1, 2, 3, 7, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 125, 126, 127, 130, 134, 136, 137, 138, 141, 142, 154, 155, 158, 163, 164, 165, 194, 210, 217, 218, 233, 239, 240, 243, 245, 250, 271, 272, 275, 276, 321, 397, 428, 429, 430, 431, 441, 442, 444, 448], "multipl": [1, 2, 3, 5, 8, 15, 16, 17, 20, 22, 23, 24, 25, 26, 53, 65, 69, 78, 79, 80, 84, 100, 107, 108, 120, 124, 125, 126, 139, 140, 141, 154, 163, 165, 191, 193, 198, 200, 209, 212, 213, 223, 226, 230, 231, 238, 247, 271, 275, 277, 283, 286, 287, 309, 314, 318, 319, 321, 322, 325, 334, 341, 349, 352, 362, 373, 419, 423, 424, 425, 428, 429, 430, 433, 435, 436, 441, 442, 443, 445, 447], "infer": [1, 3, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 247, 273, 277, 286, 313, 318, 322, 339, 385, 428, 430, 432, 436, 438, 445, 447], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 105, 112, 113, 124, 125, 126, 127, 128, 129, 130, 133, 134, 139, 140, 141, 142, 148, 149, 150, 154, 155, 158, 163, 164, 165, 170, 194, 208, 213, 214, 230, 238, 239, 240, 247, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 322, 323, 324, 325, 328, 335, 341, 355, 387, 394, 400, 417, 418, 419, 422, 423, 424, 425, 428, 429, 430, 431, 434, 435, 436, 437, 438, 441, 442, 443, 447], "dispatch": [1, 3, 23, 24, 25, 26, 39, 65, 77, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 305, 317, 387, 428, 448], "avail": [1, 2, 3, 4, 6, 13, 16, 17, 20, 22, 23, 24, 25, 26, 62, 69, 78, 79, 105, 111, 112, 113, 125, 126, 128, 129, 138, 139, 140, 146, 147, 152, 153, 154, 156, 157, 160, 166, 167, 168, 169, 183, 186, 189, 208, 210, 267, 296, 318, 322, 350, 387, 417, 418, 428, 429, 430, 431, 432, 433, 434, 441, 442, 443, 445, 448], "speed": [1, 2, 3, 4, 8, 35, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 424, 428, 429, 430, 431, 441, 442, 443, 445, 447], "avoid": [1, 2, 3, 32, 39, 44, 55, 65, 66, 72, 77, 98, 100, 112, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 180, 190, 208, 238, 240, 247, 248, 250, 253, 302, 309, 321, 326, 334, 335, 349, 352, 355, 408, 430, 432, 442], "oom": [1, 3, 45, 46, 47, 61, 63, 70, 84, 98, 100, 120], "choic": [1, 2, 57, 154, 198, 423, 424, 428, 429, 435, 441, 442], "pass": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 32, 36, 37, 39, 44, 48, 55, 57, 62, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 82, 83, 96, 98, 100, 105, 107, 112, 113, 118, 120, 124, 127, 130, 131, 132, 134, 135, 141, 142, 145, 149, 154, 155, 156, 157, 158, 163, 164, 165, 168, 186, 187, 190, 195, 197, 198, 201, 211, 212, 221, 238, 242, 247, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 284, 285, 286, 288, 289, 292, 294, 295, 297, 298, 300, 304, 305, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 333, 334, 335, 348, 349, 350, 352, 353, 355, 357, 358, 367, 368, 369, 370, 371, 385, 402, 405, 417, 418, 419, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 445, 447, 448], "ie": [1, 2, 3, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 89, 104, 113, 124, 127, 130, 134, 138, 141, 142, 151, 154, 155, 158, 163, 164, 165, 182, 183, 190, 205, 230, 233, 242, 247, 273, 277, 313, 321, 423, 424, 429, 442], "store": [1, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 42, 43, 44, 45, 46, 47, 50, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 83, 84, 94, 96, 98, 99, 100, 101, 104, 105, 107, 112, 118, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 198, 208, 235, 246, 247, 248, 250, 252, 254, 255, 280, 294, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 394, 421, 425, 428, 430, 431, 434, 436, 438, 441, 442, 444, 448], "while": [1, 2, 3, 7, 8, 28, 32, 39, 44, 55, 65, 66, 67, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 223, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 340, 348, 349, 352, 423, 424, 428, 430, 431, 434, 436, 437, 441, 442, 443, 444, 445, 447], "wait": [1, 24, 26, 27, 67, 166, 431, 443], "also": [1, 2, 3, 8, 9, 11, 16, 17, 28, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 69, 70, 72, 77, 78, 79, 82, 84, 94, 98, 99, 100, 105, 107, 112, 113, 118, 120, 124, 127, 130, 134, 140, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 178, 180, 181, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 200, 202, 203, 204, 206, 208, 209, 210, 214, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 251, 257, 258, 271, 275, 278, 298, 317, 318, 323, 324, 325, 332, 333, 335, 336, 337, 339, 340, 341, 346, 348, 352, 355, 357, 367, 374, 375, 385, 387, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 445, 447, 448], "impact": [1, 2, 3, 140, 197, 201, 253, 332, 334, 349, 352, 354, 429, 431, 441, 442], "memori": [1, 3, 8, 26, 32, 35, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 67, 70, 72, 77, 83, 84, 96, 98, 99, 103, 124, 127, 130, 131, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 190, 194, 218, 233, 239, 240, 243, 245, 247, 250, 265, 275, 276, 321, 419, 421, 425, 428, 429, 431, 441, 445, 447], "manag": [1, 3, 8, 18, 26, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 255, 273, 277, 308, 363, 364, 367, 368, 369, 370, 395, 400, 423, 431, 432, 435, 447], "kei": [1, 2, 7, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 104, 105, 107, 110, 112, 113, 118, 124, 127, 130, 134, 139, 140, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 214, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 252, 254, 256, 266, 267, 270, 273, 277, 279, 280, 294, 296, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 385, 387, 399, 400, 401, 403, 404, 405, 409, 424, 425, 428, 430, 431, 432, 433, 435, 440, 441, 442, 443, 445, 447, 448], "control": [1, 3, 5, 8, 20, 28, 29, 36, 37, 38, 48, 69, 74, 78, 79, 105, 107, 112, 124, 127, 128, 129, 130, 134, 140, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 181, 200, 260, 261, 262, 263, 273, 277, 279, 280, 294, 298, 305, 321, 322, 323, 332, 334, 335, 349, 350, 352, 356, 367, 372, 380, 385, 395, 423, 425, 428, 429, 430, 431, 432, 433, 434, 435, 441, 442, 443, 445, 447], "which": [1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 107, 110, 111, 118, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 146, 147, 149, 150, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 190, 191, 197, 201, 206, 208, 210, 211, 213, 214, 218, 219, 221, 231, 233, 234, 237, 239, 240, 241, 243, 247, 250, 251, 266, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 291, 293, 303, 310, 311, 312, 313, 317, 318, 321, 322, 323, 324, 332, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 361, 365, 367, 368, 369, 370, 385, 387, 396, 401, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 448], "storing_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 429, 442], "dure": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 62, 63, 66, 67, 68, 69, 71, 72, 78, 79, 83, 94, 96, 101, 105, 107, 110, 112, 124, 127, 130, 131, 134, 140, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 186, 187, 190, 193, 197, 198, 201, 203, 205, 206, 208, 212, 216, 228, 230, 233, 235, 237, 238, 240, 241, 242, 247, 248, 250, 253, 255, 256, 273, 277, 284, 317, 367, 369, 370, 400, 405, 424, 428, 429, 430, 431, 434, 435, 436, 438, 441, 442, 443, 445, 448], "heurist": [1, 4, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 252, 317, 322, 428, 432, 436, 448], "usual": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 110, 118, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 238, 287, 352, 357, 366, 367, 368, 369, 370, 371, 386, 422, 423, 424, 425, 428, 429, 430, 431, 434, 436, 437, 442, 445, 448], "same": [1, 2, 3, 4, 20, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 111, 112, 113, 116, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 149, 150, 154, 155, 156, 157, 158, 160, 163, 164, 165, 183, 190, 197, 198, 200, 201, 206, 208, 211, 212, 213, 214, 230, 238, 239, 240, 247, 250, 251, 257, 258, 272, 273, 276, 277, 278, 281, 282, 283, 284, 294, 302, 313, 325, 333, 335, 348, 350, 353, 355, 357, 358, 362, 424, 428, 429, 430, 433, 434, 436, 440, 441, 442, 444, 445, 448], "behavior": [1, 2, 3, 4, 16, 17, 26, 32, 39, 44, 55, 65, 66, 72, 77, 82, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 191, 197, 201, 214, 219, 232, 240, 248, 250, 253, 273, 274, 277, 303, 340, 348, 357, 385, 395, 400, 423, 429, 431, 441, 442, 443, 445], "besid": 1, "those": [1, 2, 3, 5, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 197, 201, 208, 214, 233, 234, 237, 241, 277, 293, 318, 322, 323, 324, 407, 417, 418, 423, 428, 429, 433, 434, 442, 443, 448], "choos": [1, 3, 11, 57, 124, 127, 145, 273, 277, 352, 421, 424, 428, 429, 430, 432, 441, 442, 445, 447], "follow": [1, 2, 3, 6, 7, 8, 11, 14, 19, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 77, 82, 84, 105, 112, 113, 124, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 148, 151, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 168, 169, 178, 186, 190, 210, 218, 243, 247, 248, 250, 257, 258, 271, 273, 275, 277, 278, 315, 318, 319, 320, 331, 332, 333, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 387, 405, 423, 424, 425, 428, 429, 430, 431, 432, 435, 436, 440, 441, 442, 443, 445, 447, 448], "max_frames_per_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 408, 428, 430, 447], "frame": [1, 2, 11, 16, 17, 20, 22, 23, 24, 25, 26, 55, 190, 206, 250, 252, 270, 294, 317, 386, 387, 389, 392, 394, 398, 400, 405, 408, 409, 428, 429, 430, 431, 434, 441, 442, 445, 447, 448], "call": [1, 2, 3, 7, 8, 11, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 101, 105, 106, 107, 111, 112, 114, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 151, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 170, 179, 182, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 284, 285, 286, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 321, 322, 324, 325, 328, 334, 335, 349, 350, 352, 355, 357, 366, 367, 368, 369, 370, 385, 386, 389, 400, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 445, 447, 448], "frames_per_batch": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 55, 67, 75, 187, 190, 223, 273, 277, 408, 428, 429, 430, 431, 432, 436, 438, 441, 442, 445, 447], "each": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 32, 36, 37, 39, 43, 44, 48, 50, 51, 53, 55, 56, 65, 66, 69, 71, 72, 74, 76, 77, 78, 84, 105, 107, 110, 112, 113, 115, 118, 124, 127, 130, 131, 134, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 183, 198, 209, 211, 212, 218, 223, 226, 231, 232, 233, 234, 238, 239, 245, 247, 248, 250, 251, 252, 267, 270, 271, 272, 273, 275, 277, 283, 284, 288, 295, 296, 304, 308, 314, 315, 320, 322, 324, 373, 376, 377, 378, 379, 381, 382, 383, 384, 387, 400, 402, 417, 418, 424, 428, 429, 430, 431, 434, 435, 436, 438, 441, 442, 443, 444, 445, 447, 448], "init_random_fram": [1, 16, 17, 20, 22, 23, 24, 25, 26, 408, 428, 429, 432, 438], "rand_step": [1, 2, 3, 41, 75, 124, 127, 128, 129, 130, 131, 133, 134, 135, 141, 142, 143, 144, 148, 149, 150, 154, 155, 158, 163, 164, 165, 209, 233, 247, 443, 447, 448], "reset_at_each_it": [1, 16, 17, 20, 22, 23, 24, 25, 26, 428], "split_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 428, 429, 430], "trajectori": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 42, 43, 55, 56, 76, 78, 84, 104, 105, 112, 113, 118, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 190, 219, 231, 238, 250, 254, 277, 280, 294, 352, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 396, 421, 424, 428, 429, 430, 431, 433, 436, 438, 443, 447, 448], "pad": [1, 2, 3, 28, 64, 80, 190, 198, 237, 257, 258, 260, 261, 277, 281, 282, 283, 402], "along": [1, 2, 3, 16, 17, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 100, 105, 107, 112, 113, 118, 120, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 175, 189, 190, 191, 212, 214, 216, 219, 226, 230, 236, 250, 277, 278, 281, 282, 287, 314, 318, 321, 322, 335, 350, 357, 428, 429, 431, 433, 435, 441, 442, 443, 445, 447], "point": [1, 2, 3, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 97, 104, 105, 108, 118, 119, 122, 123, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 250, 279, 321, 331, 342, 405, 422, 429, 430, 440, 441, 442, 443, 445, 447, 448], "boolean": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 113, 134, 182, 186, 219, 231, 281, 282, 294, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 425, 431], "repres": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 41, 48, 50, 57, 74, 75, 77, 78, 84, 99, 124, 127, 128, 129, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 206, 219, 235, 247, 250, 267, 281, 282, 296, 302, 314, 315, 319, 320, 361, 367, 402, 423, 428, 430, 431, 432, 433, 434, 435, 441, 442], "valid": [1, 2, 3, 28, 61, 63, 64, 83, 84, 94, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 171, 186, 219, 238, 240, 250, 252, 257, 258, 278, 281, 282, 294, 334, 341, 349, 352, 355, 367, 368, 369, 370, 402, 425, 432, 448], "exploration_typ": [1, 16, 17, 20, 22, 23, 24, 25, 26, 400, 421, 423, 428, 429], "strategi": [1, 2, 3, 20, 110, 145, 183, 270, 282, 290, 423, 425, 428, 429, 432, 434, 441, 442, 445, 447], "reset_when_don": [1, 16, 17, 20, 22], "its": [1, 2, 3, 4, 5, 7, 9, 11, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 91, 100, 107, 112, 113, 124, 127, 130, 134, 140, 141, 142, 148, 154, 155, 156, 157, 158, 163, 164, 165, 168, 171, 187, 189, 190, 195, 202, 210, 231, 232, 233, 238, 240, 246, 247, 248, 250, 251, 252, 257, 258, 273, 277, 281, 282, 283, 284, 293, 314, 318, 319, 322, 325, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 358, 365, 387, 405, 415, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448], "organ": [1, 2, 443, 445], "within": [1, 2, 3, 16, 17, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 99, 104, 105, 113, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 160, 163, 164, 165, 182, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 248, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 308, 313, 315, 317, 320, 322, 325, 328, 329, 337, 342, 357, 365, 385, 387, 423, 424, 429, 432, 433, 434, 435, 436, 437, 438, 441, 443, 447], "differ": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 107, 110, 124, 125, 126, 127, 130, 131, 134, 139, 140, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 186, 190, 198, 199, 200, 211, 214, 221, 230, 238, 240, 242, 250, 251, 267, 271, 272, 273, 275, 276, 277, 278, 280, 283, 284, 285, 296, 322, 348, 350, 352, 361, 367, 368, 369, 373, 374, 375, 400, 405, 407, 417, 418, 423, 424, 425, 428, 429, 430, 432, 433, 435, 437, 440, 441, 442, 443, 444, 445, 447, 448], "how": [1, 2, 3, 11, 14, 19, 23, 24, 25, 29, 32, 39, 44, 55, 62, 65, 66, 72, 77, 78, 104, 105, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 183, 198, 211, 250, 285, 318, 332, 334, 347, 349, 350, 352, 387, 389, 405, 422, 423, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "tabl": [1, 32, 423, 429, 434], "summar": [1, 3, 443], "what": [1, 3, 8, 11, 38, 39, 62, 82, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 181, 202, 233, 238, 319, 335, 346, 350, 357, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 441, 442, 443, 444, 445, 447, 448], "expect": [1, 2, 3, 4, 7, 32, 36, 39, 44, 50, 55, 65, 66, 69, 72, 77, 82, 83, 105, 111, 112, 124, 127, 130, 134, 141, 142, 148, 151, 154, 155, 158, 163, 164, 165, 170, 183, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 205, 207, 209, 210, 211, 212, 214, 216, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 271, 272, 273, 275, 276, 277, 283, 284, 294, 315, 321, 324, 332, 333, 334, 335, 336, 337, 339, 340, 341, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 362, 365, 409, 422, 423, 424, 425, 428, 430, 431, 433, 434, 435, 436, 441, 442, 443, 445, 448], "n": [1, 2, 3, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 200, 205, 242, 250, 271, 272, 275, 280, 291, 293, 294, 317, 322, 332, 333, 341, 350, 366, 402, 425, 429, 431, 432, 445, 447, 448], "b": [1, 2, 3, 7, 8, 28, 36, 37, 39, 45, 46, 47, 48, 61, 63, 65, 69, 70, 71, 72, 74, 77, 78, 79, 84, 98, 99, 118, 127, 208, 241, 271, 272, 275, 276, 283, 284, 286, 287, 295, 304, 325, 367, 368, 369, 370, 371, 373, 387, 429, 445], "cat_result": [1, 16, 17], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 104, 105, 107, 111, 112, 113, 118, 124, 127, 130, 131, 133, 134, 141, 142, 149, 150, 154, 155, 158, 163, 164, 165, 170, 181, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 209, 210, 217, 218, 219, 220, 221, 222, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 250, 251, 271, 273, 275, 277, 294, 314, 321, 332, 356, 367, 368, 369, 370, 371, 373, 387, 394, 405, 407, 419, 422, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "p": [1, 2, 4, 107, 110, 131, 161, 162, 255, 256], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 39, 44, 55, 65, 66, 72, 77, 113, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 194, 197, 199, 201, 209, 218, 223, 227, 232, 233, 236, 238, 239, 240, 243, 245, 246, 248, 250, 251, 271, 274, 275, 278, 283, 298, 302, 303, 321, 322, 324, 331, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 407, 417, 418, 419, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 448], "case": [1, 3, 4, 5, 7, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 96, 103, 104, 105, 107, 118, 124, 127, 130, 133, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 197, 198, 199, 201, 209, 214, 233, 236, 240, 241, 251, 277, 278, 284, 285, 318, 321, 322, 324, 325, 331, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 387, 396, 407, 417, 418, 419, 421, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 445, 447, 448], "dimens": [1, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 69, 70, 71, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 100, 105, 112, 113, 118, 120, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 175, 183, 189, 190, 191, 205, 212, 214, 216, 219, 226, 229, 230, 233, 236, 242, 247, 257, 258, 259, 264, 265, 273, 275, 277, 278, 281, 282, 283, 286, 287, 292, 295, 299, 300, 301, 302, 305, 314, 317, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 419, 421, 424, 428, 429, 430, 431, 433, 441, 442, 443, 445], "time": [1, 2, 3, 4, 7, 8, 16, 17, 20, 23, 24, 25, 26, 28, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 84, 95, 98, 107, 118, 124, 125, 126, 127, 130, 131, 134, 139, 140, 141, 142, 145, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 180, 181, 189, 190, 191, 198, 212, 219, 226, 233, 234, 235, 238, 240, 247, 250, 256, 268, 271, 275, 277, 294, 308, 317, 322, 333, 334, 335, 341, 344, 348, 349, 350, 352, 353, 355, 357, 358, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 405, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 447, 448], "adapt": [1, 29, 184, 212, 231, 247, 253, 349, 428, 432, 443], "equal": [1, 16, 17, 22, 32, 84, 105, 112, 113, 127, 141, 149, 152, 153, 154, 163, 213, 214, 257, 258, 271, 273, 275, 277, 278, 281, 282, 284, 356, 361, 396, 417, 418, 428, 430, 444], "introduc": [1, 2, 154, 163, 271, 273, 275, 277, 294, 428, 441], "some": [1, 2, 3, 4, 7, 8, 9, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 107, 118, 120, 124, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 170, 186, 218, 233, 240, 243, 250, 260, 273, 277, 300, 322, 323, 324, 387, 396, 408, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 445, 447, 448], "confus": [1, 30, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250], "other": [1, 2, 3, 4, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 107, 110, 111, 112, 113, 114, 116, 120, 124, 127, 130, 133, 134, 135, 141, 142, 148, 154, 155, 158, 163, 164, 165, 193, 199, 200, 220, 227, 233, 236, 243, 247, 248, 250, 255, 270, 271, 273, 277, 287, 308, 313, 315, 320, 322, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 367, 385, 402, 417, 418, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 447, 448], "better": [1, 3, 8, 9, 16, 17, 28, 140, 273, 277, 424, 430, 433, 443, 447], "consist": [1, 2, 3, 32, 36, 37, 39, 44, 48, 55, 62, 65, 66, 69, 72, 74, 77, 78, 79, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 246, 250, 255, 258, 278, 428, 429, 430, 443, 444, 448], "interact": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 240, 318, 322, 428, 430, 432, 433, 434, 436, 441, 442, 443, 448], "keep": [1, 2, 3, 4, 7, 8, 17, 62, 69, 78, 79, 107, 111, 118, 127, 154, 163, 181, 214, 218, 245, 247, 248, 250, 294, 317, 387, 398, 405, 428, 429, 430, 431, 436, 437, 438, 442, 443, 445, 448], "separ": [1, 2, 4, 8, 16, 17, 22, 23, 25, 26, 28, 36, 37, 48, 69, 74, 78, 79, 190, 218, 245, 333, 336, 339, 341, 353, 355, 357, 358, 424, 428, 429, 434, 435, 441, 442, 445, 448], "interchang": [1, 283, 284, 430, 433, 437, 444, 445], "between": [1, 2, 3, 4, 5, 16, 17, 18, 22, 26, 29, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 100, 105, 107, 108, 111, 112, 113, 120, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 170, 200, 213, 224, 235, 238, 240, 247, 250, 257, 258, 266, 271, 273, 277, 278, 283, 284, 315, 318, 322, 332, 334, 335, 336, 339, 340, 341, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 361, 367, 400, 405, 424, 428, 429, 431, 432, 436, 441, 442, 443, 445, 448], "wherea": [1, 2, 27, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 154, 155, 158, 160, 163, 164, 165, 200, 238, 240, 250, 335, 350, 355, 425, 437], "correspond": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 70, 72, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88, 89, 104, 105, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 190, 208, 218, 233, 238, 240, 245, 247, 248, 250, 255, 270, 273, 275, 277, 281, 282, 294, 318, 322, 335, 337, 340, 341, 355, 365, 367, 368, 369, 370, 371, 423, 428, 429, 430, 432, 433, 435, 436, 437, 441, 442, 443, 444], "sub": [1, 2, 3, 16, 17, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 105, 112, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 219, 238, 250, 323, 324, 396, 405, 423, 424, 428, 429, 430, 436, 440, 447, 448], "doesn": [1, 4, 32, 39, 44, 55, 65, 66, 72, 77, 118, 124, 127, 130, 134, 141, 142, 149, 154, 155, 158, 163, 164, 165, 197, 201, 250, 251, 432, 433], "understood": [1, 428], "serv": [1, 3, 23, 25, 26, 136, 445, 447, 448], "basi": [1, 118, 283, 445, 447], "we": [1, 2, 3, 5, 7, 9, 11, 28, 29, 32, 36, 39, 44, 50, 55, 62, 65, 66, 69, 71, 72, 77, 78, 79, 98, 111, 113, 118, 124, 125, 126, 127, 130, 131, 134, 138, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 170, 190, 198, 210, 218, 221, 227, 238, 243, 246, 247, 248, 250, 251, 254, 277, 283, 284, 285, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 387, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "anoth": [1, 2, 3, 8, 14, 15, 18, 19, 21, 50, 77, 82, 99, 105, 112, 124, 127, 130, 133, 134, 135, 138, 141, 142, 154, 155, 158, 163, 164, 165, 187, 195, 197, 199, 201, 233, 239, 278, 318, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 424, 428, 430, 431, 432, 434, 435, 440, 441, 442, 443, 448], "wise": [1, 212], "requir": [1, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 99, 104, 105, 112, 113, 124, 127, 130, 134, 138, 141, 142, 149, 154, 155, 158, 160, 163, 164, 165, 187, 190, 194, 208, 218, 230, 233, 238, 239, 240, 243, 245, 248, 250, 255, 273, 277, 278, 285, 305, 321, 322, 323, 324, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 385, 387, 389, 423, 425, 428, 429, 430, 431, 433, 434, 435, 437, 441, 442, 443, 445, 447, 448], "op": [1, 15, 18, 21, 30, 31, 33, 34, 35, 40, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 213, 246, 252, 255, 270, 387, 407], "sinc": [1, 2, 3, 4, 5, 7, 11, 28, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 104, 105, 113, 118, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 160, 163, 164, 165, 170, 181, 195, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 314, 315, 317, 319, 320, 325, 328, 385, 387, 424, 428, 429, 430, 431, 433, 434, 435, 441, 443, 444, 445, 447, 448], "goal": [1, 3, 4, 142, 232, 428, 429, 430, 431, 442, 443], "policy_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 429], "explicitli": [1, 2, 3, 4, 35, 83, 95, 96, 103, 107, 186, 293, 318, 395, 424, 429, 431, 436, 441, 442, 445], "do": [1, 2, 3, 4, 7, 57, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 181, 183, 219, 233, 238, 246, 247, 273, 277, 284, 286, 311, 322, 350, 367, 387, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 448], "deepcopi": [1, 285, 350, 441], "structur": [1, 3, 7, 45, 46, 47, 50, 57, 61, 62, 63, 69, 70, 71, 78, 79, 82, 83, 84, 99, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 197, 201, 233, 283, 294, 332, 341, 352, 355, 367, 368, 369, 370, 371, 421, 424, 428, 430, 431, 433, 436, 441, 442, 443, 444], "place": [1, 2, 3, 29, 32, 38, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 98, 100, 107, 110, 112, 120, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 182, 186, 194, 202, 218, 233, 239, 240, 243, 245, 246, 247, 250, 285, 313, 317, 321, 402, 407, 408, 424, 429, 430, 434, 437, 441, 442, 443, 445], "instanti": [1, 2, 3, 16, 17, 26, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 78, 79, 82, 84, 104, 105, 107, 138, 140, 186, 208, 233, 284, 367, 368, 369, 370, 371, 385, 428, 429, 434, 435, 437, 441, 442, 443, 445, 448], "all": [1, 2, 3, 4, 8, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 107, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 142, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 171, 173, 175, 179, 181, 183, 189, 190, 193, 194, 197, 198, 199, 201, 204, 210, 213, 214, 218, 226, 228, 230, 233, 234, 239, 240, 243, 245, 247, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 284, 285, 288, 289, 292, 294, 297, 298, 300, 305, 308, 313, 315, 317, 320, 321, 322, 324, 325, 328, 329, 332, 333, 335, 344, 348, 350, 352, 353, 354, 355, 357, 358, 362, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 401, 405, 408, 417, 418, 419, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448], "graph": [1, 3, 4, 8, 39, 65, 77, 125, 126, 139, 140, 363, 364, 428, 432, 443], "reli": [1, 2, 3, 11, 28, 66, 72, 233, 271, 272, 273, 275, 276, 277, 332, 352, 424, 428, 430, 432, 434, 436, 443, 448], "third": [1, 214, 235, 315, 441, 442], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 428, 429, 430, 431, 432, 435, 436, 441, 442, 443, 447, 448], "limit": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 190, 210, 332, 334, 349, 350, 352, 354, 424, 428, 429, 431, 441, 442, 443], "chart": 1, "show": [1, 2, 11, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 284, 387, 428, 430, 431, 432, 441, 442, 443, 445, 447], "decis": [1, 2, 3, 259, 264, 292, 313, 338, 351, 423, 431, 433, 434, 441, 442, 445, 448], "multiprocess": [1, 2, 3, 15, 16, 17, 23, 24, 25, 69, 78, 79, 99, 107, 124, 131, 132, 154, 158, 163, 247, 248, 428, 429, 430, 431, 436, 441, 442, 443, 444, 448], "ensur": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 72, 77, 78, 84, 104, 105, 111, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 190, 198, 218, 231, 240, 243, 247, 248, 250, 273, 277, 314, 423, 429, 430, 443, 445], "flexibl": [1, 3, 9, 149, 359, 424, 425, 428, 432, 445, 448], "extens": [1, 2, 62, 69, 78, 79, 113, 255, 425, 445], "mechan": [1, 4, 15, 18, 21, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 429, 435, 443], "accommod": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 433, 434], "variou": [1, 2, 3, 15, 127, 239, 273, 277, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 359, 365, 387, 417, 418, 428, 429, 430, 432, 433, 434, 435, 437, 441, 442, 445, 448], "deploy": [1, 432], "scenario": [1, 2, 21, 146, 147, 154, 168, 169, 238, 385, 428, 434, 441, 442, 443], "facilit": [1, 2, 3, 7, 217, 218, 233, 243, 245, 310, 311, 312, 423, 428, 431, 434, 443], "localweightupdaterbas": [1, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26], "remoteweightupdaterbas": [1, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26], "These": [1, 2, 7, 50, 71, 121, 168, 218, 245, 248, 423, 424, 428, 430, 441, 442, 443, 445, 448], "base": [1, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 32, 50, 62, 69, 72, 78, 79, 83, 109, 115, 118, 119, 121, 122, 124, 125, 126, 127, 130, 134, 138, 139, 140, 141, 142, 148, 149, 150, 154, 155, 158, 163, 164, 165, 168, 181, 199, 223, 237, 239, 243, 244, 273, 277, 283, 285, 310, 316, 332, 333, 335, 336, 337, 339, 340, 341, 343, 348, 352, 353, 354, 355, 357, 358, 394, 405, 423, 424, 425, 428, 429, 431, 433, 434, 435, 437, 441, 442, 443, 445, 448], "interfac": [1, 3, 14, 19, 124, 137, 151, 278, 286, 423, 424, 428, 430, 432, 437, 443, 445], "logic": [1, 3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 441], "allow": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 57, 59, 61, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 84, 99, 105, 107, 110, 112, 113, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 187, 221, 248, 250, 251, 278, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 359, 361, 365, 423, 425, 428, 430, 431, 432, 433, 434, 435, 441, 442, 443, 445, 447, 448], "tailor": [1, 141, 447], "need": [1, 2, 3, 4, 7, 8, 10, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 61, 63, 65, 66, 72, 77, 82, 114, 118, 124, 127, 130, 134, 138, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 190, 193, 195, 198, 205, 211, 218, 221, 234, 238, 239, 240, 245, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 286, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 318, 319, 320, 321, 325, 328, 331, 341, 354, 355, 366, 371, 387, 405, 419, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 447, 448], "respons": [1, 2, 3, 8, 14, 16, 17, 19, 20, 23, 25, 26, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 405, 435, 436, 448], "It": [1, 2, 3, 4, 7, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 71, 72, 73, 74, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 99, 107, 110, 118, 123, 124, 127, 130, 134, 136, 141, 142, 148, 149, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 170, 181, 187, 189, 190, 202, 208, 210, 214, 219, 232, 238, 240, 246, 248, 250, 252, 260, 262, 268, 270, 283, 284, 293, 294, 295, 297, 298, 304, 305, 315, 317, 320, 322, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 358, 365, 366, 367, 385, 394, 400, 422, 423, 424, 428, 429, 431, 432, 433, 441, 442, 443, 444, 445, 447, 448], "particularli": [1, 2, 3, 432, 447, 448], "machin": [1, 2, 7, 23, 24, 25, 55, 138, 441, 442, 447], "fetch": [1, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 125, 126, 128, 129, 210, 434, 444, 445], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "appli": [1, 2, 3, 4, 15, 18, 20, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 213, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 255, 271, 275, 285, 302, 314, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 351, 352, 353, 354, 355, 357, 358, 367, 385, 401, 425, 428, 429, 430, 436, 441, 443, 447, 448], "ask": [1, 2, 3, 8, 105, 112, 113, 198, 387, 430, 431, 433, 434, 441, 442, 444, 448], "contrast": [1, 3, 271, 293, 347, 445], "situat": [1, 2, 141, 146, 147, 198], "decid": [1, 62, 69, 78, 79, 441, 447], "handl": [1, 2, 3, 15, 16, 17, 23, 25, 26, 32, 39, 44, 55, 57, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 246, 247, 248, 250, 277, 278, 332, 350, 352, 405, 417, 418, 428, 429, 430, 431, 433, 435, 442, 445], "essenti": [1, 2, 3, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 429, 433, 441, 443, 445], "system": [1, 4, 5, 96, 430, 441, 442, 443], "kept": [1, 3, 28, 111, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 181, 200, 227, 274, 302, 303, 435, 441], "central": [1, 2, 15, 19, 283, 284, 285, 428, 429, 433, 441, 442, 445], "divers": [1, 4, 154, 163], "benefici": [1, 2], "involv": [1, 133, 135, 136, 146, 147, 160, 187, 190, 238, 273, 277, 433, 435], "complex": [1, 2, 3, 15, 18, 21, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321, 428, 429, 433, 434], "architectur": [1, 4, 264, 435, 441, 442, 447], "special": [1, 3, 86, 88, 421, 428, 431, 432, 448], "hardwar": [1, 3, 432], "By": [1, 2, 3, 36, 37, 48, 59, 74, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 146, 147, 154, 155, 156, 157, 158, 160, 163, 164, 165, 168, 169, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 212, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 305, 322, 350, 395, 400, 419, 424, 428, 431, 441, 444, 445, 448], "retriev": [1, 3, 14, 15, 18, 19, 21, 45, 46, 47, 50, 61, 62, 63, 65, 67, 68, 69, 70, 78, 79, 84, 107, 110, 112, 113, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 181, 191, 199, 202, 214, 254, 257, 280, 317, 318, 322, 325, 329, 332, 333, 334, 335, 337, 349, 352, 353, 355, 357, 358, 365, 367, 368, 369, 370, 419, 425, 429, 430, 434, 443, 448], "seamless": [1, 2, 278], "integr": [1, 2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 263, 273, 277, 280, 321, 423, 433, 434, 436, 441, 442, 443, 444], "infrastructur": [1, 3, 441, 442], "vanillalocalweightupdat": [1, 20], "multiprocessedremoteweightupd": [1, 16, 17], "rayremoteweightupdat": [1, 26], "rpcremoteweightupdat": [1, 25], "distributedremoteweightupdat": [1, 23], "cover": [1, 3, 133, 135, 422, 430, 433, 436, 437, 443, 447], "rang": [1, 2, 3, 4, 8, 62, 67, 68, 69, 71, 78, 79, 98, 100, 107, 118, 124, 127, 130, 131, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 198, 223, 236, 247, 250, 251, 272, 276, 293, 349, 357, 358, 424, 425, 428, 430, 431, 432, 435, 436, 438, 441, 442, 443, 445, 447], "typic": [1, 2, 3, 4, 8, 15, 18, 20, 21, 23, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 198, 202, 232, 250, 291, 293, 318, 333, 335, 350, 352, 355, 423, 424, 425, 430, 432, 433, 435, 436, 441, 442, 443], "larg": [1, 3, 4, 35, 45, 46, 47, 61, 63, 70, 84, 112, 113, 197, 201, 243, 332, 334, 349, 352, 354, 429, 430, 441, 442, 445], "scale": [1, 3, 4, 29, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 210, 214, 225, 232, 236, 247, 248, 253, 268, 274, 297, 298, 302, 303, 310, 311, 312, 318, 322, 324, 332, 333, 335, 348, 352, 353, 354, 355, 403, 409, 419, 423, 428, 429, 430, 431, 434, 442, 447], "design": [1, 15, 32, 39, 44, 55, 57, 59, 65, 66, 72, 77, 110, 116, 123, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 183, 190, 208, 219, 238, 240, 248, 250, 313, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 421, 428, 429, 430, 431, 433, 434, 435, 440, 441, 442, 443, 445, 447, 448], "leverag": [1, 18, 26, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 428, 442, 448], "latenc": [1, 2, 3], "account": [1, 2, 98, 100, 120, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 186, 195, 281, 282, 423, 429, 431, 445, 448], "delai": [1, 27, 357, 435], "transfer": [1, 13, 16, 17, 20, 22, 23, 24, 25, 26, 322], "receiv": [1, 2, 3, 18, 32, 39, 44, 55, 65, 66, 71, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 239, 240, 250, 278, 373, 424, 428, 430, 435, 440, 443], "manner": [1, 2, 134, 218, 243, 423, 428, 429, 430, 436, 440, 443, 445], "maintain": [1, 3, 5, 9, 38, 57, 190, 248, 443], "import": [1, 2, 3, 4, 6, 10, 11, 16, 17, 20, 22, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 144, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 174, 175, 180, 181, 182, 183, 184, 186, 187, 189, 190, 193, 195, 198, 202, 203, 208, 209, 210, 211, 214, 216, 218, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 241, 245, 247, 250, 251, 254, 256, 260, 261, 262, 263, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 283, 284, 285, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 385, 387, 398, 400, 415, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "stale": 1, "lead": [1, 2, 3, 4, 8, 10, 28, 36, 37, 48, 55, 62, 69, 74, 84, 111, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 163, 164, 165, 233, 251, 274, 295, 302, 303, 308, 428, 431, 432, 441, 442, 443, 445, 447], "suboptim": 1, "scalabl": 1, "As": [1, 2, 3, 4, 55, 69, 78, 79, 82, 107, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 223, 265, 322, 367, 423, 428, 429, 430, 431, 432, 433, 435, 436, 441, 442, 443, 444, 445, 447, 448], "grow": [1, 3, 99], "overhead": [1, 2, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 181, 322], "broadcast": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 265, 341, 355], "minim": [1, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 389, 445], "bottleneck": [1, 3, 8, 105, 112, 113], "achiev": [1, 2, 3, 4, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 182, 232, 250, 256, 318, 402, 425, 428, 429, 430, 431, 432, 441, 442, 443, 445, 447, 448], "robust": [1, 219, 253], "varieti": [1, 3, 11], "remain": [1, 111, 189, 199, 200, 210, 232, 287, 435], "date": [1, 15, 18, 127, 189, 390], "simplest": [1, 39, 65, 77, 118, 325, 428, 430, 431, 434, 441, 442, 445, 448], "transit": [1, 32, 39, 44, 55, 65, 66, 72, 77, 105, 113, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 253, 255, 327, 428, 431, 433, 434, 436, 441, 443, 445], "sampl": [1, 4, 8, 9, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 116, 118, 120, 124, 127, 130, 134, 141, 142, 148, 151, 154, 155, 158, 163, 164, 165, 172, 179, 183, 184, 186, 187, 189, 190, 191, 194, 195, 198, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 252, 254, 265, 270, 274, 280, 281, 282, 290, 292, 293, 294, 297, 302, 303, 306, 309, 314, 315, 316, 318, 319, 320, 321, 322, 332, 333, 334, 335, 336, 337, 339, 349, 351, 352, 357, 358, 396, 402, 405, 408, 421, 423, 424, 428, 429, 430, 431, 432, 433, 434, 436, 438, 441, 442, 444, 447, 448], "attent": [1, 2, 8, 141, 190, 428, 431, 448], "given": [1, 2, 3, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 105, 107, 112, 113, 124, 127, 130, 134, 141, 142, 148, 152, 153, 154, 155, 158, 163, 164, 165, 166, 167, 181, 194, 198, 200, 208, 214, 218, 233, 237, 239, 240, 241, 243, 245, 247, 248, 250, 252, 254, 256, 267, 268, 270, 271, 273, 275, 277, 280, 285, 296, 300, 309, 314, 315, 317, 320, 321, 322, 323, 324, 326, 331, 336, 337, 339, 350, 366, 367, 368, 369, 370, 371, 373, 397, 400, 415, 423, 424, 425, 428, 429, 430, 433, 434, 435, 436, 437, 442, 443, 448], "built": [1, 2, 3, 5, 7, 107, 125, 126, 133, 139, 140, 151, 152, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 359, 365, 413, 415, 416, 419, 428, 429, 430, 431, 432, 435, 437, 443, 445, 448], "flatten": [1, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 118, 187, 205, 402, 421, 431, 442], "suffici": [1, 3, 4, 428], "preprocess": [1, 2, 83, 239, 429, 432], "popul": [1, 2, 3, 16, 17, 20, 26, 62, 67, 68, 69, 76, 78, 79, 107, 141, 209, 233, 265, 285, 350, 428, 430, 431, 434, 436, 443, 445], "replaybuff": [1, 2, 3, 16, 17, 20, 26, 41, 62, 67, 68, 75, 78, 79, 98, 99, 104, 105, 106, 107, 112, 113, 122, 190, 219, 223, 250, 337, 342, 365, 413, 415, 421, 430, 432, 436, 438, 441, 442, 444, 445, 447], "lazytensorstorag": [1, 2, 62, 69, 77, 78, 79, 104, 112, 113, 118, 223, 250, 430, 432, 438, 441, 442, 445], "lambda": [1, 2, 16, 17, 20, 22, 26, 27, 39, 50, 65, 69, 77, 84, 118, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 180, 187, 195, 208, 210, 233, 241, 250, 251, 256, 305, 314, 317, 318, 319, 343, 345, 346, 357, 367, 370, 378, 379, 383, 384, 385, 415, 424, 428, 429, 432, 441, 442, 444, 445, 447, 448], "reshap": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 112, 118, 187, 273, 277, 278, 293, 385, 430, 441, 442], "slice": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 105, 107, 112, 113, 183, 189, 190, 445], "recommend": [1, 2, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 112, 118, 138, 190, 285, 424, 436, 441, 442], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 101, 107, 118, 124, 127, 130, 131, 134, 138, 141, 142, 154, 155, 156, 158, 163, 164, 165, 168, 169, 175, 181, 187, 190, 198, 208, 218, 238, 239, 240, 243, 246, 247, 250, 257, 258, 260, 261, 262, 263, 264, 265, 269, 273, 277, 278, 279, 283, 284, 313, 321, 322, 329, 335, 337, 342, 353, 355, 365, 387, 402, 409, 410, 411, 415, 417, 418, 423, 428, 429, 430, 431, 432, 434, 437, 441, 442, 443, 444, 445, 447, 448], "multidimension": [1, 2, 78, 104, 105, 445], "slicesampl": [1, 2, 105, 113, 190, 445], "sampler": [1, 2, 62, 67, 68, 69, 78, 79, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 118, 120, 190, 219, 293, 337, 342, 365, 428, 430, 441, 442, 445], "One": [1, 2, 3, 4, 8, 30, 31, 35, 36, 37, 40, 48, 53, 54, 59, 60, 74, 83, 118, 124, 125, 126, 154, 158, 163, 164, 190, 223, 243, 252, 290, 321, 325, 356, 361, 391, 428, 429, 445, 448], "must": [1, 2, 3, 7, 11, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 101, 105, 107, 112, 113, 114, 115, 116, 118, 120, 124, 125, 127, 130, 131, 134, 139, 141, 142, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 178, 183, 186, 187, 190, 193, 195, 198, 202, 206, 208, 210, 212, 214, 216, 227, 230, 232, 233, 234, 237, 238, 240, 241, 242, 247, 250, 257, 258, 267, 273, 277, 278, 281, 282, 283, 284, 296, 309, 314, 315, 317, 318, 319, 320, 321, 322, 325, 326, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 356, 357, 358, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 424, 428, 429, 430, 431, 434, 440, 443, 445], "shape": [1, 2, 3, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 100, 104, 107, 112, 118, 120, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 175, 181, 183, 187, 189, 191, 197, 198, 201, 202, 203, 208, 210, 211, 214, 216, 220, 221, 223, 227, 230, 231, 233, 236, 241, 247, 248, 249, 250, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 296, 301, 302, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 396, 402, 405, 415, 423, 424, 428, 429, 430, 431, 432, 434, 435, 438, 440, 441, 442, 444, 445, 447, 448], "clearli": [1, 2], "dimension": [1, 62, 66, 69, 77, 78, 79, 200, 273, 277, 367, 372, 380, 424, 442], "num_slic": [1, 2, 105, 112, 113, 445], "4": [1, 2, 3, 7, 30, 32, 36, 37, 41, 48, 50, 53, 54, 55, 59, 62, 65, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 98, 99, 100, 107, 112, 113, 120, 124, 125, 126, 127, 128, 129, 130, 134, 139, 140, 141, 142, 143, 144, 145, 148, 150, 154, 155, 158, 161, 162, 163, 164, 165, 183, 184, 186, 187, 190, 195, 202, 223, 230, 231, 232, 238, 247, 248, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 276, 278, 280, 281, 282, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 385, 386, 423, 427, 428, 429, 430, 431, 437, 441, 442, 443, 445, 446, 447, 448], "trajectory_kei": [1, 28, 112, 113], "traj_id": [1, 2, 3, 16, 17, 20, 28, 41, 75, 187, 223, 436, 445], "total_fram": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 55, 67, 75, 187, 190, 223, 405, 408, 415, 425, 428, 429, 430, 431, 432, 436, 438, 441, 442, 445, 447], "dim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 69, 70, 73, 74, 78, 79, 82, 84, 85, 86, 87, 88, 89, 112, 190, 191, 212, 216, 229, 230, 233, 242, 247, 276, 300, 305, 317, 419, 424, 429, 430, 432, 441, 443, 445], "ndim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 100, 104, 105, 118, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 212, 250, 317], "parallelenv": [1, 2, 3, 16, 17, 20, 22, 25, 118, 124, 127, 130, 134, 141, 142, 149, 155, 156, 157, 158, 160, 163, 164, 165, 238, 273, 277, 385, 416, 421, 428, 429, 430, 433, 440, 447, 448], "make_env": [1, 3, 154, 163, 169, 238, 247, 385, 410, 411, 428, 429, 447, 448], "regular": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 104, 110, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 253, 255, 266, 273, 277, 296, 315, 319, 320, 321, 322, 342, 352, 407, 421, 425, 428, 429, 432, 433, 434, 438, 445, 448], "behav": [1, 3, 136, 148, 271, 275, 290, 340, 348, 350, 432, 444], "accordingli": [1, 2, 3, 105, 195, 212, 231, 232, 275, 319, 431], "3": [1, 2, 3, 6, 7, 10, 11, 16, 17, 20, 22, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 77, 78, 79, 84, 98, 100, 105, 107, 112, 113, 118, 120, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 184, 186, 187, 190, 194, 195, 198, 200, 202, 203, 208, 210, 214, 216, 218, 220, 221, 223, 226, 227, 230, 231, 232, 233, 236, 238, 239, 240, 241, 243, 245, 250, 251, 253, 254, 256, 257, 258, 260, 261, 262, 264, 267, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 284, 285, 290, 293, 295, 305, 309, 310, 311, 312, 314, 315, 318, 320, 321, 324, 325, 326, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 373, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 404, 423, 425, 427, 428, 429, 430, 431, 433, 434, 436, 437, 441, 442, 443, 445, 446, 447, 448], "isn": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 104, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 186, 202, 208, 314, 321, 434, 435, 437, 441, 442], "current": [1, 2, 3, 12, 14, 15, 16, 17, 18, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 102, 105, 107, 113, 124, 127, 130, 134, 136, 141, 142, 149, 152, 153, 154, 155, 158, 163, 164, 165, 172, 181, 186, 187, 190, 208, 219, 232, 233, 234, 238, 239, 240, 248, 250, 268, 294, 298, 302, 306, 317, 332, 334, 335, 342, 349, 352, 354, 355, 390, 425, 428, 429, 430, 431, 435, 441, 442, 443, 445, 448], "fulli": [1, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 272, 276, 429, 432, 435, 443, 445], "ani": [1, 2, 3, 5, 8, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 107, 108, 111, 113, 114, 116, 118, 119, 120, 122, 123, 124, 127, 130, 131, 134, 141, 142, 149, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 169, 170, 182, 184, 186, 187, 189, 190, 191, 194, 195, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 250, 256, 257, 258, 264, 265, 278, 287, 293, 313, 317, 321, 322, 323, 324, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 367, 369, 370, 385, 387, 392, 405, 422, 424, 428, 429, 430, 431, 432, 434, 435, 441, 442, 443, 445, 447, 448], "consecut": [1, 3, 111, 138, 277, 294, 387, 431, 433, 436, 442, 445, 448], "won": [1, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 131, 133, 134, 141, 142, 149, 150, 154, 155, 158, 163, 164, 165, 218, 245, 250, 332, 405, 419, 429, 430, 433, 434], "therebi": [1, 29, 385, 424, 428, 429], "interrupt": [1, 2, 134, 317, 373], "tool": [1, 2, 3, 5, 423, 424, 431, 433, 441, 443, 445, 448], "backend": [1, 3, 7, 23, 24, 26, 27, 84, 124, 127, 130, 133, 134, 141, 142, 154, 155, 158, 163, 164, 165, 174, 180, 251, 425, 428, 430, 431, 432, 433, 436, 437, 443], "gloo": [1, 23, 24, 27], "nccl": [1, 23, 24], "mpi": [1, 23, 24], "distributeddatacollector": [1, 27, 421], "rpc": [1, 25, 27, 68], "rpcdatacollector": [1, 27, 421], "launcher": [1, 23, 24, 25, 27], "rai": [1, 18, 26, 62, 67, 68, 69, 78, 79, 107], "submitit": [1, 23, 24, 25, 27], "mode": [1, 3, 6, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 149, 154, 155, 158, 163, 164, 165, 197, 201, 232, 240, 247, 248, 250, 255, 265, 273, 274, 277, 282, 290, 301, 302, 303, 308, 318, 322, 350, 385, 395, 400, 423, 424, 428, 429, 441, 442, 447, 448], "find": [1, 4, 6, 7, 23, 24, 25, 62, 64, 80, 112, 113, 252, 275, 294, 399, 403, 428, 429, 432, 434, 435, 441, 442], "folder": [1, 2, 45, 46, 47, 61, 63, 70, 84, 168, 190, 429], "wonder": 1, "why": [1, 2, 3, 181, 424, 441, 443, 448], "instead": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 35, 39, 44, 55, 65, 66, 67, 72, 77, 81, 84, 124, 127, 130, 134, 140, 141, 142, 154, 155, 158, 163, 164, 165, 190, 205, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 321, 325, 328, 332, 334, 335, 337, 340, 341, 342, 348, 349, 352, 353, 354, 355, 365, 367, 371, 375, 419, 424, 432, 433, 434, 438, 443, 445, 448], "lower": [1, 2, 3, 26, 32, 33, 193, 247, 297, 298, 325, 430, 441, 443], "io": [1, 11, 139, 140, 149, 152, 153, 166, 167, 275, 276, 432], "footprint": [1, 2, 445], "commun": [1, 2, 3, 142, 154, 158, 163, 422, 430, 448], "yet": [1, 125, 126, 139, 444], "plai": [1, 3, 156, 157, 165, 190, 429, 430, 435, 445, 448], "role": [1, 3, 147, 429, 435, 448], "opposit": [1, 441], "direct": [1, 2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 271, 275, 350, 429, 435], "faster": [1, 2, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 149, 367, 368, 369, 370, 431, 432, 441, 442], "share": [1, 3, 6, 8, 28, 45, 46, 47, 61, 63, 69, 70, 78, 79, 82, 84, 96, 98, 99, 100, 101, 105, 107, 108, 112, 114, 116, 120, 131, 154, 163, 230, 238, 247, 248, 273, 277, 283, 284, 310, 311, 312, 332, 333, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 419, 421, 423, 424, 430, 432, 438, 440, 441, 442, 447, 448], "among": [1, 3, 57, 156, 157, 238, 341, 355, 424, 441, 442], "prohibit": [1, 3, 118], "slow": [1, 3, 4, 11, 45, 46, 47, 61, 63, 70, 84, 99, 112, 113], "compar": [1, 3, 118, 333, 335, 348, 353, 355, 357, 358, 400, 424, 428, 430, 432, 434, 435, 441, 442, 445, 448], "gpu": [1, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 98, 100, 120, 124, 127, 130, 134, 135, 138, 141, 142, 154, 155, 158, 163, 164, 165, 250, 428, 430, 431, 441, 442, 448], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 78, 82, 84, 99, 104, 105, 112, 113, 118, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 214, 238, 247, 248, 252, 253, 254, 265, 268, 271, 273, 275, 277, 280, 292, 293, 301, 302, 318, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 423, 424, 428, 429, 430, 432, 434, 441, 442, 443, 445, 448], "keyword": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 96, 98, 99, 100, 104, 105, 107, 110, 112, 113, 116, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 149, 150, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 169, 175, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 198, 199, 202, 203, 204, 206, 208, 209, 210, 212, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 270, 273, 277, 281, 282, 283, 284, 294, 309, 313, 314, 317, 318, 319, 321, 322, 325, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 360, 365, 367, 368, 369, 370, 371, 375, 385, 387, 392, 394, 405, 416, 428, 429, 430, 432, 434, 437, 441, 442, 445, 447, 448], "build": [1, 2, 3, 7, 28, 32, 36, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 82, 107, 124, 125, 126, 127, 130, 134, 135, 136, 139, 140, 141, 142, 146, 147, 149, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 169, 223, 247, 248, 250, 254, 273, 277, 280, 316, 318, 322, 405, 412, 413, 414, 423, 424, 425, 430, 431, 432, 434, 435, 436, 437, 441, 442, 443, 444, 447, 448], "mani": [1, 2, 3, 4, 69, 125, 126, 128, 129, 130, 133, 135, 136, 139, 140, 141, 149, 150, 160, 198, 233, 332, 334, 341, 349, 352, 423, 428, 429, 430, 432, 433, 434, 436, 438, 441, 442, 443, 445, 447, 448], "eg": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 124, 127, 128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 154, 155, 158, 160, 163, 164, 165, 200, 231, 240, 251, 283, 313, 387], "gymnasium": [1, 2, 3, 5, 77, 124, 127, 130, 133, 134, 135, 141, 142, 143, 144, 154, 155, 158, 163, 164, 165, 174, 180, 203, 227, 231, 246, 251, 429, 430, 432, 443, 447], "warn": [1, 3, 66, 72, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 252, 270, 294, 395, 429], "quickli": [1, 3, 429, 441, 442, 448], "becom": [1, 2, 3, 4, 26, 271, 275, 441, 442, 448], "quit": [1, 3, 11, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 428, 429, 430, 432, 434, 441, 442, 448], "annoi": [1, 3], "filter": [1, 2, 3, 4, 83, 105, 112, 113, 332, 333, 335, 336, 340, 341, 348, 352, 353, 355, 433], "out": [1, 2, 3, 4, 5, 9, 26, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 96, 105, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 170, 198, 230, 233, 250, 252, 271, 272, 275, 281, 282, 285, 286, 287, 309, 313, 314, 315, 318, 319, 320, 321, 322, 350, 363, 364, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 441, 442, 443, 445, 447, 448], "still": [1, 2, 3, 9, 39, 65, 77, 84, 85, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 238, 294, 349, 350, 424, 428, 429, 431, 440, 443, 445, 448], "wish": [1, 3, 11, 16, 17, 22, 180, 435, 445], "displai": [1, 3, 7, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 405, 425, 428, 429, 442, 443], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 181, 182, 183, 184, 186, 187, 190, 191, 194, 195, 197, 198, 201, 202, 203, 205, 208, 209, 210, 212, 213, 214, 216, 218, 219, 220, 221, 223, 225, 226, 227, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 260, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 294, 295, 296, 302, 303, 304, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 365, 367, 368, 369, 370, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 394, 395, 398, 399, 400, 402, 403, 405, 419, 423, 424, 425, 428, 429, 430, 432, 437, 438, 440, 441, 442, 443, 444, 447, 448], "part": [2, 3, 4, 8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 84, 124, 125, 127, 130, 134, 139, 141, 142, 152, 154, 155, 158, 163, 164, 165, 181, 189, 214, 223, 226, 250, 273, 277, 326, 396, 419, 424, 428, 430, 431, 432, 438, 441, 443, 448], "algorithm": [2, 3, 8, 9, 148, 183, 230, 332, 352, 353, 355, 421, 424, 425, 428, 429, 430, 431, 432, 434, 435, 436, 437, 441, 442, 444, 445, 447], "implement": [2, 3, 9, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 72, 73, 74, 77, 81, 82, 85, 86, 87, 88, 89, 102, 114, 115, 124, 127, 130, 134, 141, 142, 148, 149, 154, 155, 158, 163, 164, 165, 187, 194, 197, 199, 203, 206, 210, 212, 220, 221, 227, 231, 237, 239, 240, 241, 247, 248, 250, 251, 255, 257, 271, 272, 273, 274, 275, 276, 277, 301, 302, 303, 332, 333, 335, 338, 339, 340, 346, 348, 350, 351, 352, 354, 355, 357, 385, 396, 410, 421, 423, 425, 428, 429, 430, 431, 432, 441, 442, 443, 447], "wide": [2, 3, 5, 447], "give": [2, 3, 7, 78, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 190, 198, 422, 424, 428, 429, 432, 441, 442, 443, 444, 447], "abil": [2, 350, 443, 445], "panel": [2, 430], "usag": [2, 3, 5, 7, 16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 77, 96, 118, 187, 190, 202, 255, 273, 277, 335, 340, 348, 355, 359, 423, 428, 430, 431, 434, 435, 437, 441, 442, 445], "includ": [2, 3, 4, 7, 9, 26, 32, 39, 44, 55, 65, 66, 72, 77, 82, 84, 95, 96, 98, 99, 100, 101, 103, 114, 116, 120, 124, 127, 130, 134, 141, 142, 148, 152, 153, 154, 155, 158, 163, 164, 165, 205, 208, 232, 238, 240, 247, 248, 250, 273, 277, 332, 335, 350, 355, 408, 423, 425, 428, 429, 430, 431, 432, 441, 442, 443, 445, 448], "almost": [2, 248, 281, 282, 431], "physic": [2, 6, 7, 96, 154, 155, 160, 425, 428, 441, 442, 443], "theori": 2, "crude": 2, "made": [2, 3, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 114, 116, 120, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 233, 250, 285, 294, 337, 350, 365, 428, 429, 431, 441, 442, 444, 445, 447], "liststorag": [2, 50, 62, 67, 68, 69, 77, 78, 79, 99, 107, 445], "veri": [2, 3, 139, 140, 429, 433, 436, 441, 443, 445, 447, 448], "ineffici": [2, 4], "tensor": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 112, 113, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 200, 201, 202, 203, 205, 208, 209, 211, 214, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 330, 332, 333, 335, 336, 337, 339, 340, 341, 344, 345, 348, 350, 352, 353, 354, 355, 357, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 441, 442, 443, 447, 448], "contigu": [2, 3, 8, 33, 36, 44, 85, 99, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 208, 211, 233, 241, 443, 445, 447], "tensorstorag": [2, 69, 77, 98, 104, 105, 118, 121, 436, 445], "lazymemmapstorag": [2, 41, 62, 67, 68, 69, 75, 78, 79, 105, 107, 112, 113, 189, 190, 428, 429, 431, 436, 441, 444, 445], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 145, 148, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 417, 418, 419, 421, 423, 424, 425, 428, 429, 430, 431, 433, 434, 435, 436, 437, 441, 442, 445, 448], "citizen": 2, "pytre": [2, 62, 67, 68, 69, 78, 79, 101, 107, 121], "tupl": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 101, 105, 107, 112, 116, 118, 124, 127, 128, 129, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 190, 208, 210, 214, 250, 256, 260, 266, 267, 273, 276, 277, 278, 285, 292, 295, 296, 314, 315, 319, 320, 325, 332, 333, 334, 335, 336, 340, 341, 343, 348, 349, 350, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 399, 400, 403, 412, 445, 447], "dictionari": [2, 15, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 105, 110, 112, 113, 124, 127, 130, 133, 134, 135, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 208, 233, 238, 240, 248, 250, 318, 322, 335, 355, 357, 400, 417, 418, 419, 425, 429, 430, 433, 435, 441, 443, 448], "nest": [2, 3, 28, 32, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 55, 56, 61, 63, 65, 66, 69, 70, 72, 74, 75, 76, 77, 84, 90, 98, 99, 100, 103, 107, 120, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 182, 190, 231, 234, 238, 250, 317, 367, 368, 369, 370, 371, 385, 395, 425, 429, 430, 432, 442, 443, 445, 447], "construct": [2, 3, 5, 28, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 107, 124, 127, 130, 131, 133, 134, 141, 142, 154, 155, 156, 158, 163, 164, 165, 170, 197, 201, 248, 250, 273, 277, 298, 322, 405, 423, 429, 430, 431, 434, 441, 443, 445, 448], "ram": [2, 133, 135, 437, 445], "prealloc": [2, 3, 154, 163, 443], "ve": [2, 71, 428, 431, 438], "been": [2, 3, 5, 7, 8, 12, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 107, 111, 124, 127, 130, 134, 138, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 210, 231, 232, 239, 240, 271, 273, 275, 277, 285, 317, 332, 350, 352, 354, 428, 429, 430, 431, 440, 441, 442, 443, 445, 447, 448], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 50, 62, 65, 67, 68, 69, 75, 78, 79, 84, 97, 98, 101, 104, 105, 107, 108, 112, 113, 116, 118, 119, 122, 123, 183, 189, 223, 239, 250, 253, 350, 402, 421, 424, 425, 428, 429, 430, 431, 432, 436, 438, 441, 442, 444, 445, 447], "here": [2, 3, 4, 7, 8, 9, 10, 16, 17, 26, 118, 124, 127, 128, 129, 130, 134, 138, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 190, 238, 285, 394, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 438, 441, 442, 443, 445, 447, 448], "start": [2, 3, 4, 5, 16, 26, 29, 50, 67, 82, 83, 84, 105, 112, 113, 124, 127, 130, 131, 134, 141, 142, 145, 154, 155, 158, 163, 164, 165, 181, 196, 401, 427, 428, 429, 432, 439, 442, 443, 445, 446, 448], "replay_buff": [2, 8, 16, 17, 20, 26, 62, 67, 68, 69, 78, 79, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 190, 402, 415, 428, 429, 430, 436, 441, 442, 445], "rb": [2, 41, 62, 67, 68, 69, 75, 78, 79, 99, 104, 105, 107, 112, 113, 118, 190, 223, 250, 429, 431, 432, 436, 438, 442, 444, 445, 447], "10": [2, 3, 7, 27, 28, 30, 31, 32, 35, 39, 40, 50, 51, 55, 62, 67, 68, 69, 71, 77, 78, 79, 80, 83, 84, 98, 99, 100, 104, 107, 112, 113, 118, 120, 124, 125, 126, 127, 130, 131, 134, 139, 140, 141, 142, 148, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 168, 169, 183, 184, 187, 189, 190, 195, 198, 232, 234, 235, 236, 247, 248, 250, 254, 256, 259, 260, 262, 264, 266, 270, 271, 272, 273, 275, 276, 277, 280, 281, 282, 292, 294, 305, 318, 322, 325, 329, 333, 337, 339, 346, 352, 353, 354, 358, 365, 367, 368, 369, 370, 373, 387, 396, 425, 428, 429, 430, 431, 432, 433, 434, 438, 441, 443, 445, 447, 448], "add": [2, 3, 4, 6, 26, 32, 36, 37, 39, 44, 48, 50, 55, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 97, 99, 104, 107, 108, 118, 119, 122, 123, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 208, 210, 237, 240, 250, 273, 277, 286, 316, 332, 401, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 447], "string": [2, 23, 24, 25, 32, 39, 44, 50, 55, 57, 64, 65, 66, 72, 77, 83, 84, 94, 99, 124, 127, 130, 134, 141, 142, 146, 152, 154, 155, 158, 163, 164, 165, 180, 198, 208, 218, 231, 237, 245, 250, 273, 277, 314, 317, 318, 319, 331, 386, 404, 424, 428, 430, 431, 445], "element": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 45, 46, 47, 50, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 77, 78, 79, 82, 84, 98, 99, 100, 101, 104, 105, 107, 112, 113, 118, 120, 124, 127, 130, 134, 141, 142, 151, 154, 155, 158, 163, 164, 165, 183, 190, 195, 198, 219, 228, 232, 233, 252, 257, 258, 271, 272, 275, 308, 309, 314, 317, 321, 322, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 396, 424, 428, 430, 434, 436, 445, 448], "30": [2, 3, 69, 77, 112, 113, 186, 213, 297, 298, 385, 389, 392, 394, 436, 442, 443, 445], "none": [2, 3, 8, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 107, 110, 112, 113, 114, 116, 118, 120, 124, 127, 130, 131, 133, 134, 141, 142, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 205, 207, 208, 210, 211, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 302, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 414, 415, 417, 418, 419, 423, 425, 428, 429, 431, 432, 443, 445, 447], "int": [2, 3, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 163, 164, 165, 168, 169, 170, 175, 183, 185, 186, 187, 189, 190, 191, 192, 194, 196, 198, 200, 205, 206, 208, 212, 213, 214, 216, 218, 219, 222, 229, 230, 231, 234, 237, 238, 240, 242, 245, 250, 252, 253, 254, 257, 258, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 313, 314, 315, 317, 318, 320, 322, 332, 333, 334, 341, 343, 344, 349, 350, 351, 352, 353, 357, 358, 367, 369, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 392, 394, 396, 397, 398, 400, 402, 405, 407, 417, 418, 419, 432, 443, 445], "entri": [2, 3, 16, 17, 22, 28, 32, 36, 37, 39, 41, 44, 45, 46, 47, 48, 50, 55, 61, 63, 64, 65, 66, 70, 72, 74, 75, 77, 83, 84, 91, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 146, 147, 154, 155, 158, 160, 163, 164, 165, 168, 169, 181, 182, 186, 190, 192, 193, 195, 196, 197, 199, 201, 202, 205, 209, 211, 212, 214, 216, 218, 221, 223, 226, 228, 230, 231, 232, 233, 235, 238, 240, 242, 245, 247, 250, 273, 281, 282, 313, 314, 317, 319, 320, 333, 335, 355, 367, 368, 369, 370, 423, 428, 430, 431, 433, 434, 435, 437, 441, 442, 443, 444, 445, 447, 448], "onto": [2, 8, 45, 46, 47, 59, 61, 63, 70, 84, 175, 199, 252, 294, 309, 314, 315, 318, 319, 320, 321, 322, 431, 443], "__setitem__": 2, "indic": [2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 104, 105, 107, 108, 110, 111, 112, 113, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 154, 155, 158, 160, 163, 164, 165, 168, 169, 182, 183, 190, 191, 231, 232, 233, 234, 240, 248, 250, 251, 257, 258, 278, 281, 282, 284, 294, 317, 319, 320, 328, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 409, 419, 422, 425, 430, 431, 432, 436, 437, 438, 443, 445, 448], "without": [2, 3, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 184, 186, 197, 201, 236, 239, 250, 271, 272, 275, 276, 311, 312, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 366, 367, 368, 369, 370, 371, 415, 422, 423, 428, 429, 430, 432, 433, 434, 435, 436, 441, 442, 443, 445, 448], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 50, 55, 61, 62, 63, 65, 66, 70, 71, 72, 77, 78, 84, 104, 105, 124, 127, 130, 134, 141, 142, 148, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 182, 184, 186, 187, 197, 200, 201, 208, 220, 231, 232, 238, 240, 244, 247, 248, 250, 252, 254, 255, 270, 271, 273, 277, 280, 285, 294, 318, 319, 320, 321, 322, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 365, 367, 368, 369, 370, 371, 400, 405, 407, 410, 411, 414, 415, 421, 425, 429, 430, 431, 432, 435, 438, 441, 442, 443, 445, 448], "length": [2, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 71, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 112, 113, 116, 124, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 183, 190, 198, 211, 219, 247, 254, 257, 258, 260, 262, 264, 271, 275, 278, 280, 283, 284, 309, 321, 326, 396, 402, 428, 430, 431, 436, 438, 443, 445, 448], "cursor": [2, 62, 67, 68, 69, 78, 79, 107], "afterward": [2, 32, 39, 44, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 441, 448], "tell": [2, 3, 4, 7, 124, 156, 157, 238, 428, 431, 436, 441, 442], "our": [2, 3, 7, 8, 11, 23, 50, 69, 190, 387, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 447], "far": [2, 62, 67, 68, 69, 71, 78, 79, 107, 274, 302, 303, 438, 443, 448], "restrict": [2, 3, 424, 429, 444, 445, 448], "empti": [2, 3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 101, 107, 124, 127, 130, 134, 140, 141, 142, 151, 154, 155, 158, 163, 164, 165, 175, 197, 198, 201, 218, 220, 234, 240, 243, 245, 248, 250, 321, 391, 428, 443], "64": [2, 3, 45, 46, 47, 61, 63, 70, 84, 107, 190, 222, 260, 261, 269, 273, 277, 284, 285, 295, 365, 428, 429, 430, 431, 432, 434, 438, 440, 443, 445, 447, 448], "dtype": [2, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 99, 100, 104, 105, 112, 113, 120, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 175, 178, 181, 182, 183, 184, 187, 188, 194, 197, 198, 199, 200, 201, 202, 203, 208, 210, 211, 214, 216, 218, 220, 221, 223, 227, 230, 231, 233, 235, 236, 239, 240, 241, 243, 245, 250, 254, 256, 266, 267, 271, 272, 273, 275, 276, 277, 280, 286, 287, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 373, 423, 432, 440, 443, 445, 447, 448], "unit8": 2, "img": 2, "randint": [2, 83, 107, 198, 236, 445], "255": [2, 107, 236, 445], "uint8": [2, 3, 36, 45, 46, 47, 61, 63, 70, 84, 128, 129, 146, 147, 202, 208, 216, 236, 429, 445], "next": [2, 3, 4, 8, 16, 17, 20, 28, 36, 37, 39, 41, 43, 48, 50, 55, 62, 67, 68, 69, 71, 74, 75, 77, 78, 79, 84, 94, 95, 96, 103, 105, 107, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 146, 147, 148, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 183, 186, 187, 189, 190, 195, 197, 198, 201, 202, 203, 208, 209, 210, 211, 212, 216, 220, 221, 223, 226, 227, 231, 233, 235, 238, 241, 246, 247, 250, 254, 272, 273, 276, 277, 280, 298, 317, 327, 329, 332, 333, 335, 336, 337, 339, 340, 341, 342, 348, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 387, 399, 400, 403, 429, 431, 432, 434, 438, 443, 444, 447, 448], "automat": [2, 3, 5, 12, 19, 33, 50, 82, 85, 98, 100, 107, 113, 120, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 186, 197, 201, 214, 233, 246, 248, 257, 273, 277, 309, 317, 318, 322, 385, 395, 423, 428, 430, 433, 434, 441, 442, 443, 445, 447], "hand": [2, 3, 7, 26, 36, 441, 442, 443], "look": [2, 3, 5, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 105, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 208, 218, 219, 243, 250, 255, 318, 322, 323, 324, 424, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448], "assum": [2, 3, 6, 15, 16, 17, 18, 20, 21, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 72, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 95, 96, 103, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 189, 192, 196, 198, 205, 218, 219, 226, 233, 240, 243, 245, 256, 273, 277, 305, 308, 325, 337, 341, 342, 355, 365, 376, 377, 378, 379, 381, 382, 383, 384, 387, 428, 430, 440, 443], "leav": [2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 69, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 182, 227, 424, 428, 436, 445], "match": [2, 3, 6, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 95, 107, 116, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 154, 155, 158, 163, 164, 165, 183, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 205, 207, 209, 210, 211, 212, 214, 216, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 257, 258, 265, 273, 277, 278, 283, 284, 301, 309, 313, 314, 318, 319, 321, 322, 325, 326, 333, 335, 341, 349, 351, 353, 355, 402, 407, 423, 424, 428, 430, 432, 440, 442, 443, 445, 448], "don": [2, 3, 4, 6, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 190, 239, 429, 430, 432, 436, 445, 447, 448], "throw": [2, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 448], "rb_td": 2, "batch_siz": [2, 3, 8, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 50, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 83, 84, 94, 98, 99, 100, 104, 105, 106, 107, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 181, 182, 183, 187, 189, 190, 194, 197, 198, 201, 202, 203, 208, 216, 220, 221, 223, 227, 230, 231, 233, 239, 240, 241, 250, 254, 256, 264, 265, 266, 267, 270, 273, 277, 280, 294, 295, 296, 304, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 387, 396, 402, 423, 424, 428, 429, 430, 431, 436, 441, 442, 443, 445, 447, 448], "max": [2, 28, 59, 63, 78, 83, 94, 104, 105, 118, 140, 200, 234, 294, 333, 334, 335, 341, 351, 353, 355, 428, 430, 431, 432, 438], "label": [2, 63, 64, 71, 83, 84, 428, 441, 445], "100": [2, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 98, 100, 107, 112, 113, 118, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 193, 198, 202, 214, 223, 228, 231, 250, 281, 282, 283, 315, 317, 387, 397, 415, 429, 430, 432, 433, 435, 438, 440, 441, 442, 443, 445, 447, 448], "rb_pytre": 2, "randn": [2, 3, 62, 65, 67, 68, 69, 78, 79, 98, 99, 100, 105, 107, 112, 113, 120, 124, 175, 189, 214, 256, 259, 260, 264, 266, 267, 271, 272, 275, 276, 281, 282, 283, 290, 292, 296, 309, 310, 311, 312, 313, 314, 318, 319, 321, 324, 325, 326, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 404, 423, 432, 445, 447, 448], "c": [2, 3, 6, 7, 36, 39, 45, 46, 47, 61, 63, 65, 69, 70, 77, 78, 79, 84, 99, 214, 236, 241, 275, 276, 429, 445], "zero": [2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 107, 112, 113, 118, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 181, 187, 189, 191, 197, 198, 200, 201, 214, 220, 223, 230, 248, 250, 253, 254, 261, 262, 263, 269, 270, 271, 272, 273, 275, 276, 277, 281, 282, 284, 285, 294, 295, 304, 320, 322, 328, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 373, 431, 432, 445, 447, 448], "assert": [2, 3, 6, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 118, 124, 127, 130, 134, 137, 141, 142, 154, 155, 158, 163, 164, 165, 170, 175, 180, 183, 187, 190, 193, 197, 201, 210, 221, 228, 240, 247, 256, 284, 305, 367, 368, 369, 370, 395, 396, 404, 436, 440, 445, 448], "len": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 98, 100, 107, 120, 198, 216, 257, 258, 278, 284, 428, 432, 436, 438, 441, 443, 444, 445, 447], "ambigu": [2, 62, 67, 68, 69, 78, 79, 107], "signatur": [2, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 107, 116, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 178, 187, 194, 208, 218, 233, 239, 240, 243, 245, 250, 321, 424, 428, 432, 433, 443], "deal": [2, 3, 62, 67, 68, 69, 78, 79, 107, 350, 424, 428, 430, 442, 445], "interpret": [2, 3, 62, 67, 68, 69, 78, 79, 107, 429], "put": [2, 62, 67, 68, 69, 78, 79, 107, 134, 146, 147, 165, 168, 169, 198, 247, 394, 419, 423, 429, 430, 431, 433, 441, 443], "solv": [2, 4, 7, 9, 10, 62, 67, 68, 69, 78, 79, 107, 422, 428, 429, 430, 436, 438, 441, 442, 443, 445], "clear": [2, 3, 11, 32, 36, 37, 39, 44, 48, 49, 55, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 107, 124, 127, 130, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 250, 397, 433, 436], "cut": [2, 62, 67, 68, 69, 78, 79, 107], "distinct": [2, 3, 62, 67, 68, 69, 78, 79, 107, 187, 190, 435, 440], "view": [2, 3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 250, 267, 271, 275, 278, 433, 443, 445, 447, 448], "through": [2, 3, 4, 5, 8, 16, 17, 20, 22, 23, 25, 26, 36, 37, 48, 62, 66, 67, 68, 69, 72, 74, 78, 79, 84, 107, 124, 125, 126, 127, 130, 133, 134, 135, 138, 139, 140, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 186, 195, 197, 198, 201, 219, 251, 256, 278, 295, 317, 318, 322, 323, 324, 328, 331, 350, 367, 368, 369, 370, 395, 423, 424, 428, 429, 430, 433, 435, 440, 441, 442, 443, 444, 445, 448], "collate_fn": [2, 62, 67, 68, 69, 77, 78, 79, 107, 445, 447], "__init__": [2, 3, 7, 130, 148, 166, 180, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 201, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 254, 265, 267, 271, 275, 280, 326, 333, 335, 336, 341, 348, 353, 355, 357, 358, 425, 443, 448], "default": [2, 3, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 113, 118, 120, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 175, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 296, 297, 298, 300, 301, 302, 303, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 325, 326, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 415, 419, 421, 424, 425, 428, 429, 430, 431, 434, 441, 444, 445, 447, 448], "major": 2, "worri": [2, 80, 448], "even": [2, 3, 4, 8, 11, 17, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 112, 114, 116, 120, 124, 127, 130, 131, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 182, 186, 428, 430, 433, 441, 442, 443, 448], "though": [2, 4, 11, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 278, 430, 441, 442], "too": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 65, 71, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 213, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 274, 302, 303, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 429, 434, 437, 443, 445, 448], "latter": [2, 23, 24, 25, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 352, 417, 418], "inv": [2, 3, 183, 193, 200, 203, 208, 216, 223, 228, 230, 235, 239, 242, 250, 443], "obvious": [2, 432], "ignor": [2, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 72, 73, 74, 77, 80, 82, 85, 86, 87, 88, 89, 96, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 200, 203, 227, 236, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 367, 445], "multithread": [2, 3, 62, 69, 78, 79, 94, 149, 150, 436, 445], "thread": [2, 3, 16, 17, 22, 45, 46, 47, 61, 63, 70, 84, 124, 125, 126, 139, 140, 154, 163, 164, 248], "prefetch": [2, 62, 69, 78, 79, 94, 428, 429, 431, 445], "advis": [2, 11, 437, 448], "benchmark": [2, 3, 9, 125, 126, 139, 140], "techniqu": [2, 8, 154, 163, 429, 432, 436, 445], "real": [2, 5, 322, 424, 431, 432, 443, 444], "life": [2, 202, 444], "adopt": [2, 3, 5, 428, 448], "throughput": [2, 9, 140, 428], "practic": [2, 3, 4, 5, 8, 57, 239, 274, 302, 303, 331, 421, 422, 428, 429, 430, 431, 432, 435, 441, 442, 444, 448], "constant": [2, 11, 38, 190, 214, 232, 425, 428, 430, 431, 448], "throughout": [2, 3, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 430, 441, 448], "further": [2, 3, 5, 29, 428, 430, 432, 433], "refin": [2, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365], "coupl": [2, 431, 434, 435, 443, 445], "get": [2, 3, 4, 6, 7, 8, 9, 12, 36, 37, 39, 45, 46, 47, 48, 50, 61, 62, 63, 65, 66, 69, 70, 72, 74, 77, 84, 98, 100, 105, 112, 113, 114, 116, 118, 120, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 189, 191, 197, 200, 201, 210, 214, 219, 232, 233, 236, 240, 247, 248, 270, 309, 318, 319, 322, 329, 367, 368, 369, 370, 371, 387, 391, 423, 424, 427, 428, 429, 430, 431, 432, 439, 441, 442, 443, 445, 446, 447, 448], "first_elt": 2, "128": [2, 113, 125, 126, 139, 140, 261, 264, 429, 431, 432, 438, 441, 444, 445], "wa": [2, 3, 5, 7, 36, 37, 39, 48, 50, 62, 65, 67, 68, 69, 74, 77, 78, 79, 84, 105, 107, 111, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 182, 190, 208, 240, 275, 332, 334, 347, 349, 352, 354, 356, 373, 424, 429, 430, 433, 434, 440, 441, 445, 447], "print": [2, 3, 6, 7, 16, 17, 20, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 104, 105, 107, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 168, 169, 174, 175, 180, 181, 182, 183, 186, 187, 190, 191, 195, 197, 198, 199, 200, 201, 209, 214, 220, 221, 223, 226, 231, 233, 234, 235, 236, 247, 250, 257, 258, 260, 261, 262, 263, 264, 267, 269, 270, 273, 277, 278, 281, 282, 283, 284, 290, 293, 294, 296, 309, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 324, 326, 329, 350, 385, 415, 423, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "influenti": 2, "especi": [2, 3, 7, 8, 191], "larger": [2, 4, 77, 273, 277, 340, 348, 447], "volum": 2, "due": [2, 3, 5, 28, 435, 444, 445, 448], "memorymappedtensor": [2, 41, 61, 63, 75, 83, 98, 389, 436], "well": [2, 3, 8, 26, 28, 32, 39, 44, 55, 62, 64, 65, 66, 69, 72, 77, 78, 79, 82, 105, 110, 114, 121, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 239, 240, 250, 251, 255, 260, 275, 297, 298, 322, 350, 352, 357, 371, 423, 428, 429, 431, 432, 433, 434, 435, 437, 444, 445, 447, 448], "specifi": [2, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 201, 226, 229, 232, 237, 241, 242, 250, 251, 254, 275, 321, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 394, 423, 428, 430, 431, 432, 436, 441], "file": [2, 6, 7, 8, 45, 46, 47, 61, 63, 70, 84, 96, 168, 386, 387, 389, 405, 425, 427, 429, 441, 445, 446], "locat": [2, 7, 45, 46, 47, 61, 63, 70, 83, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 178, 196, 202, 214, 225, 248, 274, 302, 303, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 428, 429, 430, 437, 441, 442, 445], "improv": [2, 4, 11, 206, 332, 424, 432, 441, 442, 445], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 154, 163, 208, 430, 441, 445], "found": [2, 3, 6, 7, 10, 16, 17, 20, 22, 26, 28, 32, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 138, 141, 142, 154, 155, 158, 163, 164, 165, 182, 184, 190, 211, 223, 226, 234, 247, 248, 250, 270, 283, 284, 318, 322, 349, 350, 352, 424, 428, 429, 431, 432, 433, 435, 437, 443, 445, 447], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 73, 74, 82, 85, 86, 87, 88, 89, 98, 105, 152, 153, 200, 238, 253, 275, 276, 340, 431, 432, 436, 445], "sharabl": [2, 154, 163], "collabor": 2, "rather": [2, 4, 116, 141, 152, 153, 198, 221, 248, 423, 424, 428, 429, 430, 433, 435, 441, 442, 445], "incur": [2, 125, 126, 139, 140], "transmiss": 2, "content": [2, 3, 8, 20, 36, 37, 45, 46, 47, 48, 61, 62, 63, 69, 70, 74, 78, 79, 84, 111, 112, 113, 124, 127, 130, 133, 134, 135, 141, 142, 149, 154, 155, 158, 163, 164, 165, 220, 257, 258, 278, 283, 284, 318, 350, 430, 443, 447], "map": [2, 3, 8, 14, 15, 18, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 103, 104, 105, 124, 127, 130, 134, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 168, 169, 171, 175, 183, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 216, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 250, 267, 309, 310, 311, 312, 314, 318, 319, 321, 322, 324, 325, 326, 327, 335, 355, 365, 400, 421, 423, 424, 428, 429, 430, 431, 434, 435, 444], "writer": [2, 62, 67, 68, 69, 78, 79, 97, 100, 105, 107, 108, 112, 118, 119, 120, 123, 430, 445], "tensordictroundrobinwrit": [2, 79, 107], "goe": [2, 4, 84, 156, 157, 428, 430, 441, 442, 448], "prioritizedsampl": [2, 62, 67, 68, 69, 78, 79, 105, 107, 337, 342, 365, 428, 445], "access": [2, 3, 7, 8, 11, 14, 21, 32, 39, 44, 55, 62, 65, 66, 72, 77, 99, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 178, 190, 218, 239, 243, 250, 419, 422, 428, 433, 441, 442, 443, 445, 447], "tensordictreplaybuff": [2, 62, 67, 68, 69, 78, 104, 105, 107, 112, 113, 118, 189, 190, 402, 415, 421, 428, 429, 431, 445], "mp": [2, 23, 24, 25, 131, 247, 248], "def": [2, 3, 27, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 124, 127, 130, 131, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 178, 180, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 201, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 251, 254, 267, 271, 272, 275, 276, 280, 285, 317, 318, 326, 333, 335, 336, 341, 348, 350, 353, 355, 357, 358, 385, 395, 424, 425, 428, 429, 432, 440, 441, 442, 443, 445, 447, 448], "td": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 39, 41, 45, 46, 47, 50, 61, 62, 63, 65, 67, 68, 69, 70, 75, 77, 78, 79, 84, 98, 107, 118, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 152, 153, 154, 155, 158, 159, 163, 164, 165, 166, 167, 181, 184, 187, 189, 191, 195, 197, 198, 199, 200, 201, 209, 210, 211, 212, 214, 223, 226, 230, 233, 236, 240, 247, 254, 256, 266, 267, 270, 273, 277, 279, 280, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 318, 319, 321, 324, 326, 365, 368, 369, 370, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 396, 404, 423, 424, 428, 429, 431, 442, 443, 444, 447], "__name__": [2, 3, 16, 17, 27, 67, 131, 385, 429, 447], "__main__": [2, 3, 16, 17, 27, 67, 131, 385, 447], "21": [2, 50, 84, 112, 113, 154, 156, 157, 163], "proc": 2, "target": [2, 4, 8, 26, 29, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 232, 250, 293, 321, 322, 332, 333, 334, 335, 336, 337, 339, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 365, 366, 367, 368, 369, 370, 371, 408, 414, 415, 424, 425, 431, 432, 438, 441, 443], "arg": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 107, 112, 113, 114, 116, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 198, 199, 202, 203, 204, 206, 208, 209, 210, 212, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 252, 254, 256, 257, 258, 265, 266, 270, 273, 277, 278, 279, 280, 294, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 394, 398, 402, 405, 419, 429, 432], "join": [2, 131, 198, 421, 429, 430, 432, 441], "now": [2, 3, 7, 62, 69, 78, 79, 107, 152, 153, 154, 190, 227, 284, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 444, 445, 448], "20": [2, 50, 77, 83, 84, 112, 113, 118, 124, 127, 130, 134, 138, 141, 142, 152, 153, 154, 155, 158, 163, 164, 165, 232, 250, 269, 271, 272, 275, 276, 293, 313, 396, 431, 445, 448], "_data": [2, 443], "remot": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 62, 67, 68, 69, 78, 79, 107, 154, 163, 421, 448], "difficult": [2, 4, 154, 437], "pai": [2, 8, 190, 428], "word": [2, 3, 11, 71, 350, 428, 436, 443, 448], "1m": [2, 408, 428, 430, 431], "doe": [2, 3, 21, 23, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 70, 72, 77, 78, 83, 84, 95, 96, 103, 104, 105, 112, 114, 116, 123, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 183, 184, 186, 187, 189, 190, 191, 194, 195, 198, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 248, 250, 255, 264, 265, 271, 272, 273, 275, 276, 277, 286, 293, 305, 313, 323, 324, 332, 334, 342, 349, 350, 352, 366, 405, 424, 425, 428, 429, 430, 431, 433, 436, 441, 443, 445, 448], "howev": [2, 3, 5, 7, 32, 39, 44, 55, 65, 66, 72, 77, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 208, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 332, 334, 335, 349, 352, 354, 355, 423, 428, 429, 431, 432, 435, 443, 445, 448], "capac": [2, 62, 69, 78, 79, 98, 100, 104, 112, 120, 430, 436], "There": [2, 3, 10, 107, 239, 255, 273, 277, 332, 352, 423, 424, 425, 430, 431, 432, 434, 436, 441, 442, 443, 445, 447, 448], "circumv": 2, "save": [2, 3, 8, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 84, 95, 96, 98, 99, 100, 101, 103, 107, 114, 115, 116, 120, 121, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 246, 250, 386, 387, 389, 394, 405, 425, 432, 436, 437, 438, 441, 442], "convent": [2, 3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 424, 428, 431, 441, 442, 443], "overridden": [2, 3, 32, 39, 44, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 367, 369, 370, 431, 441], "dim_extend": [2, 62, 69, 78, 79], "obtain": [2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 71, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 189, 218, 232, 245, 254, 256, 293, 295, 402, 428, 430, 433, 434, 435, 441, 442], "counterpart": [2, 3, 190], "desir": [2, 3, 11, 32, 35, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 179, 185, 187, 194, 195, 214, 216, 218, 219, 233, 239, 240, 243, 245, 250, 257, 258, 265, 278, 284, 309, 314, 315, 318, 319, 320, 321, 322, 423, 428, 432, 441, 442, 443, 445], "diversifi": 2, "offer": [2, 3, 7, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 238, 385, 423, 428, 429, 432, 433, 435, 436, 441, 443, 445, 448], "accomplish": [2, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 433], "__especially__": 2, "offlin": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 333, 339, 340, 348, 357, 394, 425, 433, 444, 445], "docstr": [2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 433, 434], "detail": [2, 3, 5, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 236, 240, 250, 255, 267, 271, 275, 285, 293, 315, 332, 342, 350, 352, 422, 425, 429, 432, 436, 440, 445], "happi": [2, 432], "concaten": [2, 8, 16, 17, 26, 50, 51, 53, 84, 141, 190, 191, 214, 230, 275, 278, 324, 428, 429, 434, 441, 442, 443, 445, 448], "schedul": [2, 4, 7, 71, 400, 430, 443], "transformedenv": [2, 3, 11, 12, 55, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 184, 187, 190, 193, 194, 195, 197, 201, 202, 203, 209, 210, 211, 213, 214, 216, 220, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 238, 239, 247, 250, 273, 277, 317, 387, 395, 428, 429, 430, 431, 432, 433, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "stepcount": [2, 50, 55, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 195, 238, 239, 240, 250, 256, 428, 429, 430, 431, 432, 433, 438, 441, 442, 447], "gymenv": [2, 3, 5, 11, 16, 17, 20, 22, 26, 27, 41, 50, 55, 67, 75, 77, 118, 124, 127, 130, 131, 134, 136, 141, 142, 154, 155, 158, 163, 164, 165, 183, 186, 187, 190, 193, 194, 195, 202, 208, 209, 210, 214, 216, 221, 222, 223, 226, 228, 232, 233, 234, 235, 238, 239, 240, 241, 247, 250, 256, 273, 277, 317, 385, 387, 415, 421, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 447, 448], "randompolici": [2, 16, 17, 20, 22, 23, 24, 25, 26, 27, 55, 190, 223, 421, 436, 445], "cartpol": [2, 3, 11, 41, 55, 75, 77, 124, 127, 128, 129, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 187, 190, 226, 232, 247, 250, 317, 385, 429, 431, 434, 436, 437, 438, 445, 448], "v1": [2, 3, 11, 16, 17, 20, 22, 26, 27, 41, 55, 67, 75, 77, 118, 124, 127, 130, 131, 133, 134, 135, 139, 140, 141, 142, 149, 154, 155, 158, 163, 164, 165, 186, 187, 190, 193, 195, 203, 209, 210, 214, 221, 223, 226, 227, 228, 231, 232, 233, 234, 235, 238, 239, 241, 247, 250, 256, 273, 277, 317, 361, 376, 377, 378, 379, 381, 382, 383, 384, 385, 423, 429, 431, 433, 434, 435, 436, 437, 438, 443, 445, 447, 448], "action_spec": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 55, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 148, 154, 155, 156, 157, 158, 159, 163, 164, 165, 183, 184, 187, 190, 194, 197, 199, 201, 210, 214, 220, 223, 239, 240, 241, 242, 250, 254, 267, 280, 296, 298, 309, 314, 318, 319, 333, 335, 337, 339, 353, 355, 357, 358, 415, 423, 428, 429, 430, 431, 432, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 447, 448], "8": [2, 3, 6, 7, 36, 37, 45, 46, 47, 48, 55, 61, 63, 69, 70, 74, 77, 84, 104, 105, 112, 113, 124, 125, 126, 127, 128, 129, 130, 134, 141, 142, 152, 153, 154, 155, 158, 163, 164, 165, 166, 183, 186, 195, 232, 235, 241, 257, 258, 260, 261, 269, 278, 310, 311, 312, 318, 321, 324, 348, 428, 429, 443, 445, 447], "traj_kei": [2, 105, 112, 113, 445], "truncated_kei": [2, 105, 112, 113, 223, 231], "strict_length": [2, 105, 112, 113, 387], "i": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 41, 44, 48, 55, 62, 65, 66, 69, 72, 74, 75, 77, 79, 80, 84, 98, 100, 104, 105, 112, 113, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 195, 196, 198, 212, 218, 223, 226, 238, 240, 245, 250, 272, 273, 276, 277, 296, 308, 315, 317, 318, 320, 321, 322, 332, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 396, 408, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 445, 447, 448], "enumer": [2, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 75, 77, 79, 82, 85, 86, 87, 88, 89, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 359, 424, 428, 429, 430, 431, 438, 441, 445, 447], "break": [2, 5, 16, 17, 20, 26, 32, 39, 44, 55, 65, 66, 67, 69, 72, 77, 79, 94, 105, 112, 113, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 190, 223, 247, 248, 250, 273, 277, 302, 387, 429, 432, 436, 438, 445, 447], "step_count": [2, 16, 17, 20, 55, 124, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 195, 231, 250, 430, 431, 432, 433, 438], "32": [2, 27, 36, 62, 67, 68, 69, 78, 79, 107, 113, 140, 161, 162, 168, 169, 190, 208, 257, 258, 259, 260, 261, 263, 264, 269, 278, 283, 284, 288, 289, 292, 295, 304, 365, 385, 429, 431, 432, 434, 435, 443, 444, 445, 447, 448], "33": [2, 32, 36, 39, 44, 55, 65, 66, 72, 77, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 257, 258, 278], "34": [2, 257, 258, 278], "35": [2, 257, 258, 278], "36": 2, "37": [2, 189], "38": [2, 7, 50], "39": [2, 139, 140], "40": [2, 77, 139, 140], "41": [2, 112], "11": [2, 10, 28, 50, 59, 77, 83, 84, 98, 99, 100, 104, 113, 120, 131, 183, 236, 250, 254, 280], "12": [2, 7, 10, 50, 77, 98, 100, 113, 120, 139, 140, 154, 161, 162, 163, 250, 387, 445], "13": [2, 5, 77, 112, 113, 160, 246, 250, 251], "14": [2, 6, 77, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 214, 250, 251], "15": [2, 28, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 294, 313, 343, 445], "16": [2, 3, 32, 39, 44, 55, 65, 66, 72, 77, 105, 113, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 190, 250, 431, 445], "17": [2, 11, 112, 113, 134, 154, 183, 250], "could": [2, 3, 4, 6, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 322, 429, 430, 437, 441, 442, 444, 448], "sai": [2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 283, 441, 444, 448], "interleav": 2, "cannot": [2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 36, 53, 59, 69, 78, 79, 100, 101, 105, 108, 112, 113, 120, 124, 127, 130, 133, 134, 135, 138, 141, 142, 154, 155, 158, 163, 164, 165, 197, 201, 219, 226, 238, 283, 284, 319, 332, 335, 352, 429, 430, 431, 432, 441, 442, 443], "suggest": [2, 365, 428, 442], "serialenv": [2, 3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 164, 165, 233, 250, 256, 317, 421, 447, 448], "squeez": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 186, 187, 190, 229, 232, 257, 258, 299, 300, 428, 432, 443, 445], "6": [2, 3, 7, 16, 17, 20, 22, 28, 50, 55, 69, 72, 77, 84, 105, 113, 128, 129, 134, 154, 161, 162, 183, 186, 195, 214, 216, 232, 238, 256, 257, 258, 260, 261, 262, 265, 269, 272, 278, 283, 284, 285, 288, 301, 317, 318, 326, 429, 432, 447], "5": [2, 3, 16, 17, 28, 35, 36, 37, 48, 50, 51, 52, 53, 54, 55, 59, 62, 67, 69, 72, 74, 77, 78, 79, 107, 112, 113, 118, 124, 127, 130, 131, 134, 139, 140, 141, 142, 146, 147, 149, 154, 155, 158, 161, 162, 163, 164, 165, 168, 169, 183, 186, 187, 189, 195, 211, 223, 230, 231, 232, 238, 250, 253, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 269, 271, 274, 275, 278, 280, 283, 284, 288, 293, 296, 302, 303, 313, 314, 317, 319, 325, 349, 352, 354, 357, 358, 385, 423, 427, 428, 429, 432, 434, 438, 441, 442, 443, 445, 446, 447, 448], "7": [2, 3, 6, 10, 39, 50, 55, 59, 62, 69, 77, 78, 105, 113, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 183, 186, 195, 232, 235, 254, 256, 257, 258, 261, 278, 280, 283, 373, 428, 445, 447], "9": [2, 3, 7, 28, 32, 50, 55, 62, 69, 77, 78, 84, 105, 113, 118, 128, 129, 145, 156, 157, 165, 183, 186, 195, 232, 235, 240, 247, 250, 281, 282, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 359, 365, 395, 424, 428, 429, 441, 442], "18": [2, 50, 112, 113, 161, 162, 168, 169, 238, 250, 284], "19": [2, 112, 113, 118, 250, 427, 446], "independ": [2, 16, 17, 20, 22, 23, 24, 25, 26, 154, 163, 205, 212, 233, 242, 255, 284, 308, 332, 352, 424, 425, 428, 429, 442, 445, 447], "congruent": 2, "name": [2, 3, 6, 7, 20, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 83, 84, 94, 124, 125, 127, 128, 130, 134, 139, 141, 142, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 168, 169, 171, 178, 182, 183, 184, 186, 187, 189, 190, 191, 194, 195, 199, 200, 202, 203, 204, 206, 208, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 250, 251, 273, 277, 314, 319, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 367, 369, 370, 371, 385, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 425, 428, 429, 430, 431, 432, 435, 436, 437, 441, 442, 443, 444, 448], "randomcroptensordict": [2, 428], "unlik": [2, 30, 69, 78, 79, 111, 134, 146, 147, 168, 169, 253, 255, 317, 342, 352, 387, 423, 429, 432, 434, 436, 447], "stop": [2, 3, 20, 26, 71, 105, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 430, 436, 441, 442, 447, 448], "signal": [2, 3, 16, 17, 20, 22, 28, 50, 105, 112, 113, 118, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 182, 190, 195, 202, 211, 231, 234, 424, 428, 430, 441, 442, 445, 448], "disk": [2, 3, 45, 46, 47, 50, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 98, 107, 405, 425, 428, 429, 431, 432, 436, 437, 441, 445], "dump": [2, 3, 11, 41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 84, 96, 98, 99, 100, 101, 107, 114, 116, 120, 385, 386, 387, 437, 438, 441], "load": [2, 6, 7, 16, 17, 20, 22, 32, 39, 41, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 96, 98, 99, 100, 101, 107, 114, 115, 116, 120, 121, 124, 127, 129, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 180, 198, 247, 248, 250, 405, 419, 425, 428, 430, 432, 445], "json": 2, "metadata": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 335, 357, 430, 433, 435, 436, 441, 442, 448], "anticip": [2, 197, 201], "compli": [2, 255, 423], "back": [2, 29, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 237, 246, 285, 309, 314, 315, 318, 319, 320, 321, 322, 430, 432, 441, 442, 443, 445], "exact": [2, 3, 28, 154, 275], "statu": [2, 3, 130], "prioriti": [2, 4, 62, 78, 79, 98, 99, 100, 101, 104, 105, 114, 116, 120, 335, 336, 337, 339, 340, 341, 342, 348, 353, 355, 357, 358, 365, 425, 428, 429, 445], "heap": 2, "under": [2, 3, 4, 26, 32, 39, 44, 50, 55, 65, 66, 71, 72, 77, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 154, 155, 158, 160, 163, 164, 165, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 211, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 255, 309, 314, 315, 318, 319, 320, 321, 322, 350, 367, 368, 369, 370, 371, 387, 424, 428, 429, 434, 441, 443, 448], "hood": [2, 3, 26, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 255, 443], "naiv": [2, 243, 433], "just": [2, 3, 4, 84, 116, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 145, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 182, 186, 193, 233, 251, 284, 396, 425, 428, 429, 430, 431, 432, 433, 434, 436, 441, 442, 443, 445, 447, 448], "public": [2, 68, 115, 218, 245], "serializ": 2, "consum": [2, 111, 113, 317, 429, 430, 436, 442, 445], "much": [2, 3, 8, 16, 17, 22, 62, 78, 104, 105, 154, 163, 349, 352, 430, 432, 433, 437, 441, 442, 443, 445, 448], "duplic": [2, 32, 39, 44, 55, 65, 66, 72, 77, 111, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 333, 335, 337, 342, 348, 350, 353, 355, 357, 358, 365], "observ": [2, 3, 8, 16, 17, 20, 22, 26, 29, 41, 50, 55, 67, 75, 77, 84, 95, 96, 103, 105, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 176, 181, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 207, 208, 209, 210, 212, 214, 215, 216, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 256, 259, 260, 261, 262, 263, 264, 267, 270, 273, 277, 283, 288, 289, 292, 293, 294, 296, 297, 309, 310, 311, 312, 313, 314, 317, 318, 319, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 348, 349, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 385, 387, 415, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 447, 448], "plu": [2, 16, 17, 22, 71, 154, 163, 443], "enabl": [2, 7, 8, 98, 100, 111, 120, 187, 273, 277, 294, 317, 385, 387, 400, 430, 433, 441, 442, 443, 445], "three": [2, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 65, 94, 335, 423, 425, 430, 432, 433, 434, 441, 442, 443, 445, 448], "flatstoragecheckpoint": 2, "discard": [2, 3, 83, 134, 181, 243, 386, 445, 448], "compress": 2, "At": [2, 235, 270, 279, 429, 430, 431, 436, 440, 443, 444], "correct": [2, 4, 45, 46, 47, 61, 63, 70, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 210, 408, 430, 431], "addit": [2, 3, 4, 15, 18, 21, 32, 39, 44, 55, 57, 65, 66, 72, 77, 84, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 190, 194, 218, 233, 237, 239, 240, 243, 245, 250, 252, 271, 313, 317, 321, 331, 350, 367, 385, 387, 424, 428, 429, 432, 433, 441, 442, 445], "nestedstoragecheckpoint": 2, "represent": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 99, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 218, 243, 245, 250, 332, 352, 428, 443, 444, 448], "appar": [2, 3, 398], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 95, 96, 103, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 175, 178, 183, 193, 200, 208, 211, 233, 241, 252, 258, 264, 267, 283, 289, 294, 296, 309, 314, 315, 318, 319, 320, 321, 322, 324, 325, 326, 329, 332, 337, 339, 340, 341, 352, 357, 358, 365, 423, 424, 429, 430, 431, 432, 433, 434, 435, 441, 442, 443, 448], "assumpt": [2, 3, 82, 443, 445], "accur": [2, 7, 429, 443, 445], "truncat": [2, 3, 16, 17, 20, 22, 41, 43, 50, 55, 56, 64, 75, 77, 80, 83, 95, 96, 103, 105, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 169, 182, 183, 198, 202, 203, 208, 213, 220, 223, 227, 231, 233, 240, 241, 250, 273, 277, 303, 317, 373, 428, 430, 433, 441, 448], "marl": [2, 145, 171, 190, 230, 234, 283, 284, 285, 341, 355, 424, 433, 441, 442], "extra": [2, 10, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 190, 247, 248, 250, 394, 423, 430, 431, 445], "fail": [2, 7, 27, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 184], "concret": [2, 428, 430], "set_se": [2, 3, 16, 17, 20, 22, 26, 41, 50, 55, 75, 77, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 148, 154, 155, 158, 163, 164, 165, 186, 195, 214, 221, 226, 232, 234, 240, 250, 432, 436, 438, 443, 447, 448], "manual_se": [2, 3, 30, 41, 51, 52, 62, 69, 75, 77, 78, 79, 99, 112, 113, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 186, 195, 200, 214, 223, 226, 232, 234, 250, 270, 281, 282, 290, 293, 294, 309, 315, 322, 325, 332, 333, 335, 336, 340, 348, 355, 432, 436, 438, 441, 442, 443, 447, 448], "200": [2, 16, 17, 20, 26, 32, 39, 41, 44, 55, 65, 66, 67, 72, 75, 77, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 223, 250, 260, 261, 268, 297, 298, 385, 387, 428, 431, 432, 436, 438, 445], "22": [2, 112, 113, 246], "rb_test": 2, "_storag": [2, 444, 445], "max_siz": [2, 50, 62, 69, 77, 78, 79, 98, 99, 100, 101, 112, 113, 114, 118, 120, 430, 436], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 35, 45, 46, 47, 61, 63, 70, 84, 149, 238, 264, 281, 282, 283, 331, 335, 385, 428, 430, 432, 441, 442], "state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 247, 248, 250, 283, 284, 335, 355, 419, 425, 428, 429, 448], "load_state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 247, 248, 250, 335, 355, 425, 428], "drawback": 2, "struggl": 2, "big": [2, 430, 436, 445, 448], "sequenti": [2, 9, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 189, 210, 250, 308, 310, 311, 312, 318, 323, 324, 329, 332, 333, 335, 341, 348, 352, 353, 354, 355, 357, 423, 430, 431, 434, 442, 443, 444, 447, 448], "known": [2, 3, 5, 7, 8, 77, 134, 233, 374, 375, 428, 429, 433], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 253, 428, 429, 435], "understand": [2, 8, 39, 428, 429, 432, 433, 434, 441, 442], "purpos": [2, 3, 7, 11, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 271, 332, 334, 346, 349, 352, 354, 415, 428, 430, 431, 432, 435, 437, 441, 442, 444, 448], "guid": [2, 11, 156, 157, 161, 162, 232, 422, 428, 442, 447], "explan": [2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 255], "effect": [2, 3, 32, 36, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 105, 107, 110, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 190, 195, 240, 250, 255, 405, 423, 428, 434, 441, 445, 448], "realm": [2, 434], "practition": 2, "often": [2, 3, 8, 285, 347, 350, 405, 428, 429, 433, 435, 443, 445, 448], "encount": [2, 4, 212, 317, 422, 429, 434, 443], "sometim": [2, 3, 82, 431, 448], "variabl": [2, 3, 4, 7, 8, 14, 19, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 72, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 169, 198, 235, 239, 248, 271, 272, 273, 275, 276, 277, 280, 310, 311, 312, 350, 353, 395, 425, 429], "immedi": [2, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 366, 441, 442], "199": 2, "info": [2, 3, 16, 17, 62, 67, 68, 69, 78, 79, 84, 104, 105, 107, 110, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 146, 147, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 208, 241, 243, 246, 249, 394, 433, 438, 441, 442, 445, 447], "glanc": [2, 433], "seem": [2, 428, 431, 433], "togeth": [2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 50, 65, 71, 73, 74, 99, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 190, 219, 230, 239, 271, 273, 275, 277, 304, 310, 311, 312, 327, 423, 429, 431, 433, 441], "less": [2, 149, 305, 417, 418, 424, 430, 431, 445, 447], "omit": [2, 142, 252, 270, 294, 401, 430, 435, 443, 445], "proper": [2, 3, 4, 6, 7, 367, 368, 369, 370, 429, 430, 441, 442, 443, 445], "imposs": [2, 3, 69, 78, 79, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 332, 334, 349, 352, 354], "determin": [2, 3, 18, 50, 62, 78, 84, 104, 105, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 170, 218, 245, 283, 294, 335, 429, 434, 441, 442], "complic": [2, 39, 65, 77, 443, 445, 448], "matter": [2, 38, 436], "inconsist": [2, 448], "miss": [2, 3, 4, 6, 7, 32, 36, 39, 44, 50, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 208, 238, 240, 250, 251, 323, 324, 332, 335, 355, 422, 428, 431], "primari": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 142, 436], "elimin": [2, 3, 433], "upon": [2, 3, 8, 19, 441, 443], "canon": 2, "definit": [2, 59, 114, 283], "markov": [2, 3, 433, 448], "mdp": [2, 181, 433, 443], "context": [2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 113, 124, 127, 130, 131, 134, 141, 142, 151, 154, 155, 158, 163, 164, 165, 233, 242, 250, 255, 273, 277, 284, 286, 308, 313, 363, 364, 367, 368, 369, 370, 372, 380, 387, 395, 400, 423, 424, 428, 429, 430, 431, 432, 441, 442, 443, 444, 445, 447], "condit": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 83, 85, 86, 87, 88, 89, 141, 195, 232, 247, 314, 315, 317, 319, 320, 331, 424, 428, 441, 443, 445], "complet": [2, 7, 9, 111, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 190, 231, 422, 424, 428, 430, 433, 440], "termin": [2, 3, 7, 16, 17, 20, 22, 41, 43, 50, 55, 56, 71, 75, 77, 95, 96, 103, 112, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 146, 147, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 182, 183, 186, 187, 198, 202, 208, 220, 233, 241, 250, 254, 273, 277, 280, 317, 323, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 428, 429, 430, 441, 442, 443, 447, 448], "reward": [2, 3, 16, 17, 20, 38, 39, 41, 43, 50, 55, 56, 61, 70, 71, 75, 77, 83, 84, 94, 104, 105, 118, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 183, 184, 187, 188, 193, 194, 197, 199, 201, 202, 203, 208, 210, 211, 212, 216, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 237, 239, 240, 241, 242, 244, 245, 247, 248, 250, 254, 273, 280, 313, 317, 327, 332, 333, 335, 336, 337, 339, 340, 341, 344, 348, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 398, 399, 400, 403, 419, 424, 425, 428, 429, 430, 431, 432, 433, 437, 441, 442, 443, 447, 448], "imit": [2, 3, 346], "inform": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 131, 134, 137, 140, 141, 142, 154, 155, 158, 163, 164, 165, 250, 256, 257, 258, 278, 284, 423, 424, 425, 428, 429, 430, 431, 432, 433, 441, 442, 443, 445, 447], "stateless": [2, 3, 50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 195, 248, 350, 385, 428, 433, 443, 448], "simul": [2, 3, 5, 7, 8, 82, 125, 126, 127, 136, 139, 140, 160, 168, 169, 177, 254, 280, 423, 428, 430, 432, 433, 437, 441, 442], "furthermor": [2, 441, 442], "certain": [2, 4, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 83, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 180, 195, 206, 231, 240, 250, 270, 272, 276, 349, 428, 429, 430, 432, 438, 441, 442, 448], "composit": [2, 3, 30, 31, 33, 34, 35, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 91, 110, 116, 123, 124, 127, 130, 132, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 175, 182, 184, 187, 197, 198, 199, 200, 201, 203, 208, 210, 212, 220, 221, 227, 231, 233, 237, 238, 239, 241, 248, 250, 252, 254, 280, 309, 318, 322, 324, 325, 329, 332, 352, 421, 428, 430, 434, 443], "uniform": [2, 62, 78, 104, 105, 441], "unambigu": 2, "distinguish": [2, 3, 69, 78, 79, 146, 147, 168, 169], "happen": [2, 3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 251, 294, 429, 432, 435, 436, 437, 444, 448], "everyth": [2, 429, 430, 431, 437, 438], "belong": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 246, 247, 322, 428, 436, 442], "rule": [2, 77, 154, 197, 201, 322, 423, 430], "field": [2, 3, 16, 17, 20, 22, 28, 32, 36, 39, 41, 44, 45, 46, 47, 50, 55, 61, 63, 64, 65, 66, 70, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 98, 99, 100, 104, 112, 120, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 181, 183, 187, 197, 198, 201, 202, 203, 208, 216, 220, 221, 223, 227, 230, 231, 233, 238, 240, 241, 250, 254, 256, 266, 267, 273, 277, 280, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 409, 422, 423, 429, 443], "taken": [2, 3, 30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 222, 281, 282, 424, 428, 430, 431, 434, 441, 442, 443], "is_shar": [2, 3, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 50, 61, 63, 64, 65, 70, 71, 75, 77, 78, 79, 80, 83, 84, 94, 98, 99, 100, 104, 112, 120, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 181, 183, 187, 197, 198, 201, 202, 203, 208, 216, 220, 221, 223, 227, 230, 231, 233, 241, 247, 254, 256, 266, 267, 273, 277, 280, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 423, 443], "envbas": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 50, 84, 124, 127, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 181, 184, 187, 197, 201, 213, 220, 221, 239, 240, 247, 250, 254, 273, 277, 279, 280, 317, 400, 409, 410, 411, 415, 417, 418, 419, 421, 433], "brought": [2, 430, 431, 434], "step_mdp": [2, 3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 273, 277, 421, 431, 433, 443, 447, 448], "count": [2, 3, 50, 55, 84, 130, 131, 231, 238, 248, 294, 400, 405, 408, 428, 429, 430, 431, 445, 448], "trigger": [2, 7, 39, 65, 77, 141, 248], "turn": [2, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 61, 63, 66, 70, 72, 74, 84, 127, 140, 154, 165, 207, 239, 242, 246, 314, 385, 400, 424, 428, 429, 431, 434, 443, 444], "retain": [2, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "consider": [2, 3, 8, 133, 135, 239, 421, 429, 441, 442, 445], "regard": [2, 267, 315, 332, 342, 352, 428, 430, 443], "expand": [2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 98, 112, 113, 187, 233, 265, 321, 324, 333, 335, 348, 350, 353, 355, 357, 358, 441, 442, 443, 445, 447], "recur": [2, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 371, 434], "anyth": [2, 4, 16, 17, 20, 22, 23, 24, 25, 26, 424], "els": [2, 125, 126, 187, 198, 271, 272, 275, 276, 288, 423, 425, 428, 429, 430, 431, 441, 442, 443, 444], "repetit": [2, 430, 433, 436], "embed": [2, 218, 243, 244, 245, 260, 295, 309, 310, 311, 312, 321, 322, 326, 444], "strictli": [2, 3, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 211, 238, 240, 250, 335, 355, 428, 430], "enforc": [2, 32, 36, 39, 44, 55, 65, 66, 72, 77, 111, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 323, 335, 355, 443], "n_action": [2, 317, 333, 335, 337, 339, 351, 355], "rightmost": [2, 424], "n_ob": [2, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 317, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 435], "estim": [2, 4, 105, 112, 113, 141, 198, 202, 210, 260, 302, 310, 311, 312, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 424, 429, 430, 434, 435, 441, 442], "subsequ": [2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 250, 431, 441], "proce": [2, 441], "state_valu": [2, 311, 312, 326, 334, 340, 348, 349, 352, 353, 355, 367, 368, 369, 370, 372, 374, 376, 378, 380, 381, 383, 423, 428, 442], "f": [2, 125, 126, 134, 139, 140, 235, 251, 276, 331, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 428, 429, 430, 431, 438, 441, 442, 443, 445, 448], "next_state_valu": [2, 357, 358, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 421], "left": [2, 16, 17, 57, 105, 112, 141, 187, 194, 196, 197, 198, 199, 203, 210, 212, 218, 220, 221, 227, 231, 234, 237, 239, 241, 243, 245, 248, 250, 270, 283, 429, 430, 432, 436, 437], "would": [2, 3, 32, 39, 44, 55, 65, 66, 71, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 271, 273, 275, 277, 278, 283, 322, 424, 425, 429, 430, 431, 433, 435, 436, 443, 445, 447, 448], "best": [2, 5, 9, 138, 273, 277, 441, 442, 445, 447], "bug": [2, 4], "worst": [2, 429], "twice": [2, 8, 113], "feasibl": 2, "mostli": [2, 3, 22, 293, 387, 424, 437, 445, 448], "eas": [2, 3, 441, 442], "flat": [2, 118], "ted2flat": [2, 41, 421], "flat2t": [2, 421], "unflatten": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 187, 317], "deseri": [2, 3, 41], "posit": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 124, 127, 128, 129, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 205, 206, 208, 229, 230, 231, 234, 238, 240, 242, 250, 335, 355, 424, 430, 441, 442, 443, 445], "both": [2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 124, 127, 130, 131, 133, 134, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 166, 170, 182, 183, 190, 208, 221, 237, 238, 240, 250, 257, 258, 273, 276, 277, 278, 283, 284, 310, 311, 312, 315, 320, 332, 334, 335, 336, 340, 341, 348, 349, 350, 352, 353, 354, 355, 357, 358, 400, 423, 428, 430, 432, 433, 435, 441, 442, 443, 444, 445, 448], "mark": [2, 3, 20, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 235, 273, 277, 367, 369, 370, 436, 445], "identifi": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 64, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "abov": [2, 3, 7, 32, 39, 44, 55, 65, 66, 72, 77, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 239, 250, 274, 302, 303, 331, 424, 425, 428, 430, 432, 433, 434, 441, 442, 443, 448], "output": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 82, 84, 105, 112, 113, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 182, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 208, 210, 212, 214, 218, 220, 221, 226, 227, 230, 231, 234, 235, 237, 239, 240, 241, 243, 245, 246, 248, 250, 252, 257, 258, 259, 260, 261, 264, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 283, 284, 291, 293, 294, 296, 305, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 385, 387, 396, 423, 424, 428, 429, 430, 431, 432, 433, 434, 437, 440, 441, 442, 443, 444, 447, 448], "adjust": [2, 11, 233, 428, 441, 442, 443], "grumodul": [2, 189, 233, 308, 329, 431], "lstmmodul": [2, 273, 308, 431, 432], "skip": [2, 3, 18, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 195, 206, 208, 212, 238, 240, 250, 318, 322, 335, 350, 355, 367, 368, 369, 370, 386, 387, 398, 400, 428, 429, 443], "accumul": [2, 8, 250], "upcom": [2, 350, 376, 377, 378, 379, 381, 382, 383, 384, 428], "popular": [2, 3, 423, 431, 435, 442], "rainbow": 2, "multistep": [2, 16, 17, 20, 22, 23, 24, 25, 26, 250, 421, 429], "shift": [2, 41, 43, 55, 56, 75, 95, 96, 103, 328, 367, 368, 369, 370, 430], "approxim": [2, 442, 448], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 16, 22, 190, 264, 292, 332, 338, 351, 352, 396, 419, 430, 431, 442, 445], "2x": 2, "small": [2, 113, 243, 248, 253, 428, 430, 432, 441, 442, 448], "clearer": [2, 432, 434], "lazi": [2, 3, 73, 74, 91, 92, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 168, 169, 218, 243, 257, 283, 286, 323, 324, 428, 429, 434, 436, 440, 445, 448], "certainli": 2, "welcom": [2, 433], "wrapper": [2, 3, 22, 45, 46, 47, 61, 63, 70, 71, 78, 79, 84, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 198, 246, 251, 255, 256, 305, 313, 317, 322, 327, 367, 392, 393, 394, 419, 421, 430, 431, 433, 441, 442, 444, 447, 448], "around": [2, 5, 7, 22, 78, 79, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 159, 163, 164, 165, 198, 255, 293, 317, 322, 367, 428, 429, 442, 448], "selecttransform": [2, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "excludetransform": [2, 227, 445], "promptli": 2, "virtual": [2, 3, 133], "instal": [2, 3, 5, 10, 23, 24, 25, 66, 77, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 389, 405, 422, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 448], "d4rl": 2, "repositori": [2, 7, 168, 169, 441, 442], "wheel": [2, 430], "publish": 2, "openml": [2, 151], "scikit": [2, 151], "panda": 2, "raw": [2, 3, 4, 71, 208, 237, 241, 274, 302, 303, 429, 432, 436, 443], "go": [2, 3, 7, 99, 145, 154, 195, 219, 223, 313, 373, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "natur": [2, 3, 428, 434, 435, 436, 445], "modifi": [2, 3, 7, 8, 32, 39, 44, 55, 65, 66, 72, 77, 83, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 190, 194, 195, 205, 208, 210, 218, 233, 239, 240, 243, 245, 248, 250, 285, 294, 313, 321, 322, 408, 424, 428, 429, 430, 432, 433, 441, 442, 443], "fly": [2, 190, 247, 349, 424, 430, 443, 445, 448], "least": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 193, 437, 448], "pre": [2, 7, 27, 32, 39, 44, 55, 65, 66, 72, 77, 83, 100, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 218, 237, 243, 245, 250, 448], "conisder": 2, "per": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 118, 138, 139, 140, 154, 156, 157, 193, 212, 226, 257, 258, 268, 270, 283, 284, 317, 387, 389, 392, 394, 405, 417, 418, 428, 429, 430, 431, 432, 434, 435, 438, 441, 442, 445, 447], "pipelin": [2, 3, 7, 423, 424, 430], "replac": [2, 3, 6, 7, 32, 39, 44, 55, 65, 66, 72, 77, 105, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 200, 202, 209, 247, 248, 250, 270, 423, 441, 445, 447], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 212, 223, 233, 240, 250, 252, 294, 317, 403, 423, 425, 429, 430, 431, 434, 437, 443, 445, 448], "produc": [2, 3, 36, 37, 48, 50, 74, 112, 183, 186, 187, 257, 258, 278, 284, 290, 310, 312, 313, 322, 387, 430, 431, 432, 433, 434, 436, 445, 448], "unless": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 95, 111, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 238, 240, 248, 250, 255, 332, 333, 335, 348, 350, 352, 353, 354, 355, 357, 358, 430], "download": [2, 7, 10, 13, 14, 16, 17, 20, 22, 23, 24, 25, 26, 138, 218, 245, 387, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "forc": [2, 3, 6, 7, 16, 17, 22, 23, 24, 25, 26, 155, 429, 441, 442, 443], "robosetexperiencereplai": [2, 112, 113], "fk1": 2, "v4": [2, 134, 154, 183, 222, 376, 377, 378, 379, 381, 382, 383, 384, 428, 430, 444, 447], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 249], "obs_norm": 2, "norm": [2, 4, 8, 125, 126, 253, 405, 428, 429, 430, 441, 442, 443], "num_work": [2, 61, 63, 83, 94, 149, 154, 163, 428, 429], "os": [2, 63, 83, 94, 429], "cpu_count": [2, 63, 83, 94], "num_chunk": 2, "1000": [2, 4, 50, 69, 77, 98, 99, 104, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 247, 252, 270, 293, 294, 318, 322, 347, 428, 429, 430, 431, 432, 434, 436, 438, 443, 444, 445], "mp_start_method": [2, 154, 163, 238, 429, 447], "fork": [2, 5, 428, 429, 430, 431, 441, 442, 444, 447], "recreat": [2, 443], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 29, 69, 78, 79, 105, 107, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 210, 432, 436, 444], "grain": [2, 3, 69, 78, 79, 105, 107, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187], "nomenclatur": 2, "compact": [2, 50, 75, 95, 96, 103], "propos": [2, 190, 202, 255, 279, 347, 356, 423, 431, 445], "replaybufferensembl": [2, 110, 116, 123], "primit": [2, 3, 4, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358], "individu": [2, 4, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 83, 105, 107, 118, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 250, 428, 442], "dummi": [2, 3, 165, 198, 385, 428, 432, 436, 448], "semant": [2, 73, 74, 133, 135, 444], "ident": [2, 3, 16, 17, 20, 45, 46, 47, 55, 61, 63, 69, 70, 77, 78, 79, 84, 98, 107, 112, 124, 127, 130, 133, 134, 135, 141, 142, 149, 154, 155, 158, 163, 164, 165, 202, 230, 239, 253, 283, 284, 333, 335, 348, 353, 355, 357, 358, 367, 368, 369, 370, 417, 418, 429, 433, 441, 442], "another_kei": [2, 107], "renam": [2, 3, 45, 46, 47, 61, 63, 70, 84, 107, 181, 221, 223, 428], "resiz": [2, 3, 107, 190, 429, 431, 432, 433, 445, 448], "imag": [2, 3, 4, 7, 11, 190, 192, 196, 218, 236, 245, 278, 385, 387, 428, 429, 432, 433, 437, 442, 444, 448], "comops": 2, "totensorimag": [2, 3, 107, 190, 222, 429, 431, 432, 445, 447, 448], "renametransform": [2, 3, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190], "rb0": [2, 107], "in_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 65, 67, 77, 107, 124, 125, 126, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 176, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 266, 273, 277, 280, 295, 304, 305, 309, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 346, 348, 349, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 386, 387, 415, 423, 428, 429, 430, 431, 432, 434, 435, 438, 440, 441, 442, 443, 444, 445, 447, 448], "pixel": [2, 3, 7, 36, 107, 127, 128, 129, 133, 135, 136, 160, 190, 192, 196, 202, 205, 207, 214, 216, 218, 222, 236, 243, 245, 260, 288, 289, 385, 387, 428, 429, 431, 432, 437, 441, 444, 445, 447, 448], "rb1": [2, 107], "out_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 50, 65, 67, 77, 107, 124, 125, 126, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 176, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 266, 267, 273, 277, 280, 295, 296, 304, 305, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 332, 333, 334, 335, 340, 341, 346, 348, 349, 352, 353, 354, 355, 357, 365, 367, 368, 369, 370, 385, 387, 400, 415, 423, 428, 429, 430, 431, 432, 434, 438, 440, 441, 442, 443, 444, 445, 447, 448], "pixels33": [2, 107], "data0": [2, 99, 107], "244": [2, 107, 218, 245], "data1": [2, 99, 107, 447], "_": [2, 8, 62, 67, 68, 69, 78, 79, 99, 107, 127, 131, 138, 168, 169, 191, 197, 198, 200, 201, 210, 214, 221, 236, 247, 250, 293, 309, 321, 322, 326, 331, 332, 333, 335, 336, 340, 341, 348, 352, 353, 355, 357, 358, 367, 368, 369, 370, 389, 428, 429, 430, 431, 432, 438, 441, 442, 443, 445, 447], "parent": [2, 3, 26, 32, 39, 43, 44, 55, 57, 65, 66, 72, 77, 82, 84, 107, 116, 123, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 187, 190, 191, 194, 195, 198, 199, 202, 205, 206, 212, 214, 218, 226, 231, 232, 233, 234, 238, 239, 242, 243, 250, 273, 277, 310, 329, 350, 352, 371, 385, 387, 428, 436, 443, 447, 448], "basic": [2, 3, 21, 148, 423, 430, 435, 436, 438, 441, 447, 448], "properti": [2, 3, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 186, 238, 239, 240, 247, 248, 250, 265, 274, 282, 286, 290, 301, 302, 303, 317, 332, 335, 350, 352, 354, 355, 434, 436, 443, 445], "input": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77, 80, 82, 84, 85, 86, 87, 88, 89, 115, 121, 124, 127, 130, 134, 141, 142, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 270, 271, 272, 273, 275, 276, 277, 278, 283, 284, 285, 286, 287, 294, 296, 297, 298, 299, 300, 302, 305, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 399, 403, 408, 415, 423, 424, 425, 428, 429, 430, 431, 432, 433, 441, 442, 443, 447, 448], "send": [2, 3, 8, 158, 164, 394, 447], "spawn": [2, 3, 4, 23, 27, 138, 149, 154, 163, 238, 429, 441, 442], "check_env_spec": [2, 3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 208, 220, 241, 385, 421, 430, 441, 442, 443], "saniti": [2, 3, 7, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 430], "make_composite_from_td": [2, 82, 421, 443], "fall": [2, 4], "categori": [2, 36, 423, 425], "bound": [2, 3, 4, 26, 32, 34, 36, 39, 44, 55, 65, 66, 72, 77, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 159, 163, 164, 165, 193, 213, 247, 250, 252, 270, 294, 297, 298, 309, 314, 315, 318, 319, 320, 321, 322, 325, 332, 333, 335, 336, 348, 352, 353, 355, 357, 358, 421, 423, 428, 429, 430, 432, 441, 443, 447, 448], "unbound": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 78, 79, 82, 84, 86, 87, 88, 89, 107, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 175, 184, 187, 197, 198, 201, 220, 233, 254, 280, 309, 321, 324, 326, 354, 421, 443, 445], "boundeddiscret": [2, 33, 36], "boundedcontinu": [2, 27, 33, 36, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 211, 241], "unboundeddiscret": [2, 85, 155, 208, 421], "unboundedcontinu": [2, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 220, 233, 324, 329, 421], "implicitli": 2, "onehot": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 60, 73, 74, 82, 85, 86, 87, 88, 89, 125, 126, 133, 135, 136, 139, 140, 149, 150, 152, 153, 160, 166, 167, 267, 296, 314, 319, 337, 339, 340, 341, 365, 421, 423], "multionehot": [2, 51, 52, 54, 337, 340, 341, 365, 421], "multicategor": [2, 52, 53, 54, 421], "binari": [2, 3, 7, 31, 32, 59, 166, 184, 188, 267, 296, 314, 315, 319, 320, 337, 340, 341, 365, 421], "concept": [2, 3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 293, 429, 445], "arbitrari": [2, 3, 30, 59, 69, 124, 127, 130, 134, 140, 141, 142, 154, 155, 158, 163, 164, 165, 186, 424, 428, 429, 443, 445], "combin": [2, 4, 42, 66, 357, 429, 432, 437, 445, 447], "relat": [2, 3, 4, 10, 62, 154, 205, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 429, 438, 443], "nevertheless": [2, 3, 430, 433, 445], "otherwis": [2, 3, 12, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 107, 112, 113, 124, 125, 126, 127, 130, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 190, 191, 195, 200, 208, 214, 232, 233, 234, 238, 239, 240, 247, 250, 251, 253, 255, 271, 274, 275, 283, 284, 302, 303, 308, 314, 319, 322, 325, 333, 335, 344, 350, 351, 355, 367, 369, 370, 400, 402, 424, 425, 428, 429, 430, 431, 443, 448], "similarli": [2, 3, 26, 32, 39, 44, 55, 65, 66, 72, 77, 111, 116, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 212, 250, 283, 323, 324, 340, 348, 448], "possess": [2, 82], "unsqueez": [2, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 105, 175, 184, 187, 190, 191, 236, 242, 428, 431, 432, 441, 442, 443], "move": [2, 4, 32, 39, 44, 55, 65, 66, 72, 77, 82, 124, 127, 130, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 181, 183, 194, 199, 218, 233, 239, 240, 243, 245, 247, 250, 278, 321, 403, 428, 429, 431, 433, 448], "unbind": [2, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 212, 273, 277, 317], "said": [2, 430], "neg": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 62, 65, 78, 82, 104, 105, 190, 205, 219, 230, 242, 334, 343, 349, 352, 367, 369, 370, 424, 430, 441, 442, 443], "seen": [2, 3, 23, 24, 25, 26, 36, 37, 48, 74, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 199, 424, 428, 429, 431, 435, 441, 442, 445], "predict": [2, 3, 55, 71, 266, 268, 279, 280, 313, 327, 332, 334, 339, 342, 344, 345, 349, 352, 354, 366, 428, 429, 435], "deprec": [2, 28, 31, 32, 34, 37, 39, 40, 44, 48, 49, 52, 54, 55, 58, 60, 65, 66, 72, 77, 87, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 247, 250, 273, 277, 332, 334, 335, 337, 340, 341, 342, 348, 349, 352, 353, 354, 355, 365, 367, 368, 369, 370, 375, 448], "mont": [2, 141, 198, 332, 334, 349, 352, 428], "carlo": [2, 141, 198, 332, 334, 349, 352, 428], "mct": [2, 50], "act": [2, 3, 4, 112, 113, 156, 157, 240, 266, 284, 333, 335, 336, 348, 353, 355, 357, 358, 431, 432, 441, 442, 445, 447], "tradit": [2, 435, 441], "integ": [2, 16, 17, 20, 22, 28, 44, 51, 53, 55, 59, 65, 66, 71, 72, 84, 105, 112, 113, 114, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 186, 202, 206, 214, 231, 248, 257, 258, 278, 283, 284, 335, 340, 348, 355, 424, 432, 445], "advanc": [2, 3, 26, 62, 69, 78, 79, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 433, 436, 445], "rebuild": [2, 50], "initi": [2, 4, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 107, 118, 124, 127, 130, 134, 141, 142, 152, 153, 154, 155, 158, 163, 164, 165, 166, 189, 198, 208, 214, 218, 233, 240, 243, 248, 249, 250, 251, 252, 253, 254, 270, 271, 272, 275, 276, 280, 283, 284, 285, 286, 287, 294, 317, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 419, 423, 424, 428, 429, 431, 433, 434, 436, 441, 443, 448], "pair": [2, 3, 45, 46, 47, 55, 61, 63, 65, 70, 77, 84, 124, 127, 128, 129, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 223, 233, 238, 273, 310, 318, 322, 350, 367, 368, 369, 370, 371, 423, 424, 428, 429, 430, 434, 435, 440, 443, 448], "term": [2, 71, 99, 210, 275, 276, 286, 287, 331, 332, 341, 407, 429, 430, 433, 434, 442], "pseudocod": [2, 3], "next_stat": [2, 424], "associ": [2, 3, 32, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 250, 297, 419, 428, 445], "sens": [2, 4, 45, 46, 47, 61, 63, 70, 84, 190, 198, 436, 443], "hard": [2, 3, 7, 118, 128, 129, 154, 347, 429, 448], "let": [2, 3, 6, 7, 11, 28, 32, 39, 44, 50, 55, 62, 65, 66, 69, 72, 77, 78, 79, 80, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 190, 250, 273, 277, 283, 284, 314, 400, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448], "know": [2, 3, 4, 9, 62, 69, 78, 79, 133, 135, 252, 350, 353, 400, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 445], "next_td": 2, "Of": [2, 3, 7, 422, 443, 448], "cours": [2, 3, 4, 422, 443, 448], "handi": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 437], "undertaken": [2, 84, 424, 443], "link": [2, 6, 7, 130, 429, 438], "hash": [2, 44, 50, 65, 66, 72, 77, 84, 127, 142], "past": [2, 4, 141, 190, 317, 429, 445], "node_map": [2, 50], "_index": [2, 65, 77], "Then": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 246, 430, 440], "track": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 79, 104, 105, 111, 127, 141, 226, 235, 247, 248, 250, 294, 317, 392, 398, 429, 431, 433, 436, 442, 443, 445], "next_data": [2, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "data_map": [2, 50], "form": [2, 16, 17, 22, 32, 39, 44, 55, 62, 65, 66, 69, 72, 77, 78, 79, 95, 96, 103, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250, 271, 273, 275, 277, 322, 331, 332, 334, 349, 352, 405, 423, 434, 442], "figur": [2, 3, 84, 142, 198, 428, 430, 431, 442, 443, 448], "flowchart": 2, "o": [2, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 276], "get_tre": [2, 50, 84], "vertex": [2, 84], "longer": [2, 84, 251, 429, 438, 441, 442, 445], "vertic": [2, 84], "branch": [2, 50, 84], "repeat": [2, 84, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 154, 155, 158, 160, 163, 164, 165, 198, 238, 254, 265, 430, 441, 442, 443], "depth": [2, 69, 82, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 160, 163, 164, 165, 254, 257, 258, 260, 261, 262, 263, 268, 269, 278, 280, 283, 284, 285, 288, 289, 314, 423, 429, 433, 435, 436, 440, 441, 442, 445], "until": [2, 3, 7, 26, 140, 234, 239, 250, 395, 430, 431, 438, 441, 442], "anymor": [2, 45, 46, 47, 61, 63, 70, 84, 240, 321], "utmost": 2, "commonli": [2, 105, 112, 113, 448], "emploi": [2, 287], "languag": [2, 29, 71, 141], "scarc": 2, "address": [2, 445], "subdomain": 2, "extern": [2, 3, 197, 201, 248, 441, 448], "token": [2, 45, 46, 47, 63, 64, 71, 80, 83, 94, 141, 142], "dm": [3, 428, 448], "abl": [3, 50, 124, 145, 156, 157, 158, 164, 273, 277, 428, 430, 431, 434, 440, 441, 442, 443, 445], "experi": [3, 62, 69, 78, 79, 104, 105, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 389, 390, 391, 392, 393, 394, 422, 429, 430, 432, 436, 437, 441, 442, 445], "box": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 133, 135, 285, 350], "lib": [3, 5, 6, 7, 9, 10, 16, 17, 20, 22, 26, 27, 67, 124, 127, 130, 131, 134, 141, 142, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 190, 193, 202, 209, 210, 214, 216, 221, 223, 226, 233, 239, 246, 247, 250, 385, 415, 428, 429, 430, 431, 440, 442, 444, 445, 447, 448], "hope": [3, 11], "nn": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 67, 71, 72, 77, 124, 125, 126, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 194, 200, 202, 210, 218, 233, 239, 240, 243, 245, 250, 254, 256, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 282, 283, 284, 285, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 326, 329, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 415, 423, 424, 428, 429, 430, 431, 432, 434, 435, 438, 440, 441, 442, 443, 444, 447], "organis": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 429], "attribut": [3, 4, 7, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 124, 127, 130, 133, 134, 135, 140, 141, 142, 154, 155, 158, 163, 164, 165, 183, 198, 202, 212, 218, 240, 243, 247, 248, 250, 273, 277, 322, 332, 333, 335, 336, 337, 339, 341, 342, 343, 346, 348, 350, 352, 353, 354, 355, 357, 358, 365, 428, 431, 443], "live": [3, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 202, 250], "actual": [3, 4, 7, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 246, 408, 424, 428, 430, 432, 441, 442, 443], "care": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 387, 428, 430, 432, 441, 442, 443, 445], "parametr": [3, 287, 322, 333, 335, 340, 348, 355, 428, 430], "observation_spec": [3, 50, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 184, 187, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 205, 207, 208, 209, 210, 214, 216, 218, 220, 222, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 250, 254, 273, 277, 280, 409, 415, 428, 430, 435, 440, 441, 442, 443, 448], "state_spec": [3, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 184, 194, 199, 214, 239, 241, 242, 250, 254, 280, 443, 448], "reward_spec": [3, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 184, 187, 188, 193, 194, 197, 199, 201, 211, 220, 224, 225, 226, 228, 230, 237, 239, 241, 242, 248, 250, 254, 280, 430, 441, 442, 443, 448], "done_spec": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 197, 199, 201, 202, 220, 230, 237, 239, 241, 250, 441, 442, 443, 448], "flag": [3, 8, 39, 62, 67, 68, 69, 78, 79, 107, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169, 209, 294, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 423, 441, 442, 443, 444], "input_spec": [3, 84, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 183, 187, 194, 197, 199, 200, 212, 216, 220, 221, 226, 227, 230, 231, 232, 233, 237, 239, 240, 241, 244, 250, 430, 443], "full_action_spec": [3, 84, 124, 127, 130, 134, 141, 142, 152, 153, 154, 155, 158, 163, 164, 165, 166, 167, 183, 199, 254, 280, 441, 442], "full_state_spec": [3, 50, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 199, 254, 280], "output_spec": [3, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 194, 197, 199, 203, 210, 212, 220, 221, 227, 231, 237, 239, 240, 241, 248, 250, 443], "full_observation_spec": [3, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 254, 280], "full_reward_spec": [3, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 199, 220, 441, 442], "full_done_spec": [3, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 187, 199, 220, 441, 442], "carri": [3, 26, 53, 83, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 233, 350, 429, 431, 441, 442, 443, 445], "nontensor": [3, 58, 208, 241, 421], "spec_lock": [3, 130], "modif": [3, 5, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 205, 208, 250, 350, 424, 430, 443], "children": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "unlock": [3, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "set_spec_lock_": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "reason": [3, 4, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 218, 243, 250, 277, 424, 428, 429, 430, 435, 436, 441, 443, 445], "easi": [3, 5, 11, 124, 127, 128, 129, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 252, 270, 294, 423, 424, 428, 429, 430, 442, 444, 445, 447, 448], "cach": [3, 14, 61, 63, 83, 94, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 197, 201, 218, 239, 240, 245, 255, 397], "principl": 3, "new_spec": 3, "eras": [3, 30, 31, 33, 34, 35, 40, 51, 52, 53, 54, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240], "relock": 3, "previous": [3, 4, 50, 430, 448], "importantli": [3, 318, 322], "action_s": 3, "help": [3, 4, 32, 39, 44, 55, 65, 66, 72, 77, 82, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 202, 250, 332, 334, 349, 352, 354, 422, 424, 428, 429, 430, 431, 441, 442], "With": [3, 139, 140, 145, 232, 425, 429, 440, 441, 442, 445, 448], "necessarili": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 448], "present": [3, 32, 39, 44, 45, 46, 47, 55, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 82, 84, 104, 105, 107, 111, 124, 127, 130, 133, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 182, 198, 203, 223, 227, 233, 238, 240, 250, 258, 259, 260, 261, 262, 263, 269, 273, 275, 277, 287, 292, 294, 317, 321, 322, 323, 324, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 419, 425, 428, 438, 440, 441, 442, 445, 447], "0s": [3, 233, 431], "step_and_maybe_reset": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 433], "done_kei": [3, 28, 39, 41, 43, 50, 56, 75, 95, 96, 103, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 190, 202, 223, 231, 250, 441, 442], "assign": [3, 4, 16, 17, 22, 32, 33, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 336, 337, 339, 355, 430, 434, 441, 442, 445], "_reset": [3, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 182, 184, 186, 187, 190, 197, 201, 209, 220, 235, 254, 280, 441], "data_": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "append": [3, 8, 11, 50, 62, 67, 68, 69, 78, 79, 107, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 193, 194, 198, 212, 223, 233, 240, 246, 272, 273, 276, 277, 314, 319, 428, 429, 430, 431, 432, 441, 442, 443, 444, 445, 447], "seed": [3, 16, 17, 20, 22, 26, 69, 78, 79, 107, 124, 127, 130, 134, 141, 142, 148, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 170, 184, 187, 197, 201, 208, 220, 240, 385, 405, 441], "determinist": [3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 179, 194, 218, 233, 239, 240, 243, 245, 250, 259, 268, 288, 298, 309, 318, 321, 322, 325, 333, 350, 400, 423, 428, 429, 430, 431, 432, 434, 435, 438, 441, 443, 447, 448], "preced": [3, 55, 127, 190, 431], "risk": [3, 219], "overlap": [3, 78, 118], "reproduc": [3, 66, 72, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 190, 208, 428, 430, 432, 442], "maximum": [3, 4, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 55, 61, 63, 64, 71, 77, 80, 83, 84, 85, 94, 98, 99, 100, 101, 104, 105, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 198, 200, 224, 231, 232, 234, 253, 301, 302, 303, 325, 333, 335, 340, 341, 348, 350, 351, 355, 387, 402, 423, 428, 429, 430, 431, 434, 441, 442, 445], "max_step": [3, 11, 118, 124, 127, 130, 134, 141, 142, 146, 147, 148, 154, 155, 158, 163, 164, 165, 168, 169, 231, 238, 250, 385, 433, 434, 435, 437, 438, 441, 442, 447, 448], "tensordictmodul": [3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 67, 71, 77, 124, 125, 126, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 189, 210, 256, 267, 273, 277, 280, 295, 296, 304, 305, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325, 327, 329, 333, 335, 336, 340, 341, 343, 344, 345, 346, 348, 350, 353, 355, 357, 358, 365, 366, 367, 368, 369, 370, 400, 415, 421, 428, 430, 431, 435, 438, 440, 441, 442, 443, 444, 448], "trail": [3, 247], "treat": [3, 55, 424, 434, 435], "brief": [3, 430, 433, 435, 445], "deliveri": 3, "metaclass": [3, 130], "everi": [3, 8, 18, 32, 36, 37, 39, 44, 48, 55, 59, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 79, 84, 107, 114, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 231, 232, 247, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 284, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 350, 405, 425, 428, 429, 430, 431, 433, 434, 441, 442, 443], "flank": [3, 424, 431], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 190, 208, 238, 240, 247, 250, 254, 267, 268, 280, 281, 282, 283, 284, 285, 288, 289, 297, 298, 312, 315, 332, 335, 342, 343, 344, 345, 352, 355, 367, 372, 380, 427, 428, 430, 432, 434, 435, 436, 437, 441, 442, 445], "union": [3, 25, 32, 36, 37, 39, 44, 48, 49, 53, 54, 55, 57, 59, 60, 65, 66, 72, 73, 74, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 283, 304, 339, 341, 353, 416, 419], "assess": [3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 48, 74, 146, 147, 171, 428], "split_trajectori": [3, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 113, 421], "adjac": [3, 28, 205, 317], "junction": 3, "inittrack": [3, 273, 277, 317, 428, 431], "tutori": [3, 155, 420, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448], "scratch": [3, 8, 429, 443], "mere": [3, 22, 432], "batch_lock": [3, 124, 127, 130, 132, 134, 141, 142, 154, 158, 163, 164, 187, 233, 240, 443], "notabl": 3, "braxenv": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 221, 421, 433], "jumanjienv": [3, 421], "straightforward": [3, 21, 428, 429, 433, 434, 435, 436, 445], "merg": [3, 62, 69, 78, 79, 443], "correctli": [3, 7, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "silent": [3, 32, 39, 44, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328], "_step": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250], "temporari": [3, 428], "hold": [3, 239, 363, 364, 443, 445], "arm": 3, "unbatch": [3, 271, 275], "captur": [3, 252, 270, 294, 432], "base_env": [3, 124, 126, 127, 130, 134, 135, 140, 141, 142, 153, 154, 155, 158, 163, 164, 165, 167, 183, 184, 187, 193, 195, 197, 200, 201, 210, 216, 220, 222, 228, 231, 233, 234, 238, 240, 250, 387, 395, 428, 429, 430, 432, 441, 444, 447, 448], "break_when_all_don": [3, 124, 127, 130, 134, 140, 141, 142, 154, 155, 158, 163, 164, 165], "conditionalskip": 3, "programmat": 3, "pretti": [3, 428, 433, 437, 445], "likewis": 3, "break_when_any_don": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 186, 238, 250, 256, 317, 442], "te": 3, "paragraph": 3, "deep": [3, 9, 190, 211, 260, 261, 262, 263, 266, 294, 332, 335, 347, 355, 356, 428, 441], "dive": 3, "gym3": 3, "envpool": [3, 149, 150], "simultan": [3, 25, 140, 149, 150, 154, 163, 443], "advantag": [3, 8, 141, 198, 269, 332, 334, 349, 352, 354, 367, 368, 369, 370, 371, 372, 374, 376, 378, 380, 381, 383, 424, 425, 428, 429, 430, 431, 442, 443, 448], "inherit": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 279, 283, 284, 350, 425, 430, 441, 442], "from_pixel": [3, 11, 125, 126, 128, 129, 133, 135, 136, 139, 140, 160, 190, 222, 385, 387, 428, 429, 431, 433, 437, 438, 444, 445, 447, 448], "81": [3, 112], "simpli": [3, 6, 45, 46, 47, 61, 63, 70, 83, 84, 116, 118, 123, 203, 227, 246, 350, 367, 423, 424, 428, 430, 435, 441, 442, 448], "d": [3, 39, 62, 65, 69, 77, 78, 79, 94, 104, 105, 253, 271, 275, 318, 322, 447], "privat": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 246, 443, 448], "absenc": 3, "total": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 45, 46, 47, 51, 53, 59, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 107, 113, 118, 334, 349, 352, 396, 398, 400, 405, 408, 409, 427, 428, 429, 430, 431, 435, 441, 442, 444, 445, 446, 447], "accord": [3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 50, 61, 63, 70, 71, 84, 107, 110, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 167, 214, 225, 274, 286, 297, 302, 303, 365, 423, 424, 434, 435, 441, 443, 445], "inner": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 200, 240, 425, 429, 430, 442, 448], "mind": [3, 105, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 441, 442], "wherev": 3, "lost": [3, 8, 246], "intern": [3, 50, 81, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 248, 426], "face": [3, 5, 8, 9, 433, 448], "NOT": [3, 95, 96, 103, 113, 219], "right": [3, 6, 7, 28, 71, 105, 112, 429, 430, 432, 442, 443, 448], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 195, 240, 248, 250, 367, 368, 369, 370, 441], "preclud": 3, "presenc": [3, 39, 65, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 435], "annihil": 3, "supersed": [3, 28], "pettingzoowrapp": [3, 421], "group": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 65, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 171, 198, 211, 230, 362, 423, 429, 434, 436, 442, 445], "__not__": [3, 318, 333, 335, 348, 353, 355, 357, 358], "constrain": [3, 210, 273, 277, 352, 448], "li": 3, "fact": [3, 7, 8, 428, 430, 433, 441, 442, 443, 444, 445, 448], "meaning": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "perfectli": [3, 425, 428, 432, 443], "meaningless": 3, "val": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 395, 435, 447], "agent0": [3, 432], "agent1": 3, "overrid": [3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 69, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 250, 265, 387, 419, 423], "bool": [3, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 181, 182, 183, 184, 186, 187, 190, 191, 195, 197, 198, 200, 201, 202, 203, 205, 208, 210, 212, 213, 214, 216, 218, 220, 221, 223, 225, 226, 227, 230, 231, 233, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 301, 302, 303, 308, 309, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 365, 367, 368, 369, 370, 373, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 394, 395, 398, 399, 400, 402, 403, 405, 419, 429, 430, 432, 443, 447, 448], "500": [3, 428, 429], "note": [3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 178, 182, 197, 201, 238, 247, 248, 250, 255, 271, 273, 275, 277, 294, 318, 322, 342, 421, 424, 429, 432, 434, 440, 441, 442, 448], "launch": [3, 16, 17, 22, 23, 24, 25, 27, 154, 163], "great": [3, 7, 8, 432, 441, 447], "speedup": [3, 8, 441, 448], "precis": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 181, 197, 201, 272, 276, 428, 430], "misspecifi": 3, "caus": [3, 7, 8, 16, 17, 20, 98, 100, 120, 124, 127, 130, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 219, 448], "breakag": 3, "rais": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 98, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 170, 171, 190, 204, 213, 223, 232, 233, 234, 238, 240, 247, 250, 252, 270, 294, 335, 350, 355, 395, 428, 430, 441, 442, 445], "mismatch": [3, 65, 429], "subprocess": [3, 16, 17, 22, 131, 154, 163], "multithreadedenv": [3, 421], "underneath": 3, "higher": [3, 4, 105, 193, 325, 428, 429, 430, 441, 445, 448], "type": [3, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 37, 39, 44, 45, 46, 47, 48, 50, 55, 57, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 83, 84, 85, 94, 107, 124, 127, 130, 134, 141, 142, 145, 148, 151, 154, 155, 156, 157, 158, 163, 164, 165, 172, 178, 179, 181, 187, 190, 194, 197, 199, 202, 203, 208, 210, 212, 218, 220, 221, 227, 231, 233, 237, 238, 239, 240, 241, 243, 245, 247, 248, 250, 252, 257, 258, 278, 283, 284, 287, 295, 304, 306, 314, 318, 321, 322, 329, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 360, 362, 365, 373, 385, 417, 421, 423, 428, 429, 430, 432, 436, 441, 442, 443, 445, 448], "atari": [3, 4, 190, 258, 387, 432, 437, 448], "classic": [3, 148, 157, 429], "benchmark_batched_env": 3, "significantli": [3, 112, 113, 190, 424, 428, 429, 435, 442], "asyncenvpool": [3, 158, 164], "pool": [3, 124, 158, 164, 234], "concurr": [3, 124, 441, 442], "contrari": [3, 424], "permit": [3, 193, 205, 230, 242, 332, 334, 349, 352, 354], "job": [3, 7, 23, 24, 25, 27, 69, 78, 79, 107, 445, 447], "famili": 3, "interest": [3, 318, 322, 423, 429, 430, 433, 442, 443, 448], "prefer": [3, 16, 17, 22, 25, 28, 29, 62, 69, 78, 79, 112, 113, 124, 158, 164, 219, 227, 352, 357, 402, 423, 430, 441, 442, 445, 447], "pleas": [3, 32, 39, 44, 55, 65, 66, 72, 77, 81, 124, 127, 130, 133, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 187, 190, 208, 234, 238, 240, 250, 283, 284, 285, 335, 355, 422], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 154, 158], "threadingasyncenvpool": 3, "executor": [3, 23, 24, 25, 164], "functool": [3, 124], "synchron": [3, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 61, 63, 70, 84, 149, 417, 418, 421, 429, 430, 441], "s0": [3, 124], "clamp": [3, 124, 322, 325, 344, 405, 424, 441, 443], "env_index": [3, 124], "async_step_send": [3, 124, 158, 164], "s0_result": [3, 124], "async_step_recv": [3, 124, 158, 164], "close": [3, 20, 124, 134, 149, 210, 332, 334, 349, 352, 385, 428, 429, 433, 440, 441, 443, 447], "seamlessli": [3, 443], "paradigm": [3, 22, 442], "decpodp": 3, "game": [3, 4, 5, 127, 146, 147, 152, 153, 258, 387, 432, 437], "thank": [3, 428, 432, 433, 447], "carrier": [3, 430, 431, 433, 445], "particular": [3, 32, 39, 44, 55, 65, 66, 72, 77, 83, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 240, 250, 424, 425, 429, 431, 433, 440, 442, 445], "thu": [3, 349, 442], "vma": [3, 168, 169, 385, 441, 442], "robot": [3, 5, 7, 218, 243, 245, 432, 442], "vmasenv": [3, 385, 421, 441, 442], "balanc": [3, 128, 129, 428, 429], "num_env": [3, 26, 124, 133, 137, 150, 168, 169, 385, 441, 442], "n_agent": [3, 168, 169, 283, 284, 285, 295, 304, 365, 385, 424, 441, 442], "ground_rew": 3, "pos_rew": 3, "style": [3, 62, 69, 78, 79], "vari": [3, 133, 135, 136, 156, 157, 160, 168, 219, 424, 432, 442], "creation": [3, 154, 163, 448], "info_spec": [3, 154], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 30, 31, 33, 34, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 125, 126, 127, 130, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 182, 183, 184, 202, 220, 267, 290, 293, 296, 314, 315, 318, 319, 320, 337, 340, 341, 365, 421, 431], "simpl": [3, 9, 21, 32, 39, 44, 55, 59, 65, 66, 72, 77, 82, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 260, 317, 322, 337, 339, 350, 354, 424, 428, 429, 430, 433, 434, 435, 441, 442, 445, 448], "prefix": [3, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 83, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 235, 238, 240, 250, 318, 335, 350, 355, 386, 431, 435, 448], "exactli": [3, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 136, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 271, 275, 290, 335, 355, 428, 431, 436, 441, 442], "action_kei": [3, 16, 17, 20, 22, 23, 24, 25, 26, 50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 159, 163, 164, 165, 181, 183, 184, 200, 210, 212, 252, 254, 270, 279, 280, 294, 317, 424, 441, 442], "reward_kei": [3, 39, 41, 43, 50, 56, 75, 95, 96, 103, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 250, 254, 280, 399, 403, 441, 442], "set_kei": [3, 202, 332, 334, 335, 337, 340, 341, 342, 348, 349, 350, 352, 353, 354, 355, 365, 371, 428, 441, 442], "awai": [3, 430, 433, 441, 442, 447], "leaf": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 74, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 209, 231, 233, 239, 322], "full": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 255, 273, 277, 315, 322, 396, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "autoresettransform": 3, "invalid": [3, 32, 39, 44, 55, 65, 66, 72, 77, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 171, 250, 281, 282], "nan": [3, 186, 246], "auto_reset": [3, 50, 124, 127, 130, 134, 140, 141, 142, 154, 155, 158, 163, 164, 165, 186, 198, 250, 443], "auto_reset_replac": [3, 186], "placehold": [3, 136, 202, 240], "set_gym_backend": [3, 124, 127, 130, 133, 134, 141, 142, 154, 155, 158, 163, 164, 165, 174, 186, 421, 433, 447], "autoresettinggymenv": [3, 186], "self": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 55, 61, 63, 65, 66, 70, 72, 74, 77, 84, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 201, 202, 203, 204, 206, 209, 210, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 250, 251, 252, 254, 267, 270, 273, 277, 280, 283, 284, 295, 304, 318, 321, 326, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 425, 428, 443, 447], "super": [3, 148, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 254, 267, 280, 326, 333, 335, 336, 341, 348, 353, 355, 357, 358, 428, 443, 447], "td_reset": [3, 186], "exclud": [3, 8, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 186, 190, 203, 295, 334, 349, 352, 441, 442, 445], "r": [3, 4, 50, 55, 127, 183, 184, 186, 193, 195, 214, 228, 235, 238, 247, 253, 256, 272, 322, 331, 366, 385, 429, 443, 448], "3633e": [3, 186], "02": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 429, 438], "4877e": [3, 186], "01": [3, 186, 214, 253, 294, 328, 332, 334, 349, 352], "2849e": [3, 186], "7584e": [3, 186], "6609e": [3, 186], "6166e": [3, 186], "8366e": [3, 186], "2761e": [3, 186], "5685e": [3, 186], "4102e": [3, 186], "8111e": [3, 186], "9959e": [3, 186], "0865e": [3, 186], "5644e": [3, 186], "2119e": [3, 186], "2542e": [3, 186], "03": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 186, 214, 235], "9952e": [3, 186], "4059e": [3, 186], "2094e": [3, 186], "9009e": [3, 186], "5140e": [3, 186], "3554e": [3, 186], "2920e": [3, 186], "7893e": [3, 186], "6429e": [3, 186], "3057e": [3, 186], "2867e": [3, 186], "6963e": [3, 186], "3818e": [3, 186], "2576e": [3, 186], "2679e": [3, 186], "1640e": [3, 186], "00": [3, 125, 126, 186, 427, 446], "6972e": [3, 186], "0212e": [3, 186], "5959e": [3, 186], "4637e": [3, 186], "3121e": [3, 186], "2168e": [3, 186], "5232e": [3, 186], "7704e": [3, 186], "7457e": [3, 186], "4127e": [3, 186], "1064e": [3, 186], "0854e": [3, 186], "5712e": [3, 186], "2189e": [3, 186], "5235e": [3, 186], "8289e": [3, 186], "0009e": [3, 186], "0257e": [3, 186], "8893e": [3, 186], "5872e": [3, 186], "9405e": [3, 186], "7766e": [3, 186], "0403e": [3, 186], "0626e": [3, 186], "2959e": [3, 186], "7263e": [3, 186], "2775e": [3, 186], "9564e": [3, 186], "0411e": [3, 186], "6769e": [3, 186], "6354e": [3, 186], "8698e": [3, 186], "1765e": [3, 186], "6292e": [3, 186], "5375e": [3, 186], "1820e": [3, 186], "7023e": [3, 186], "5836e": [3, 186], "9016e": [3, 186], "4826e": [3, 186], "6191e": [3, 186], "6387e": [3, 186], "8667e": [3, 186], "2056e": [3, 186], "1147e": [3, 186], "5991e": [3, 186], "0278e": [3, 186], "5219e": [3, 186], "3067e": [3, 186], "6617e": [3, 186], "3322e": [3, 186], "2629e": [3, 186], "4599e": [3, 186], "7298e": [3, 186], "5848e": [3, 186], "0148e": [3, 186], "5745e": [3, 186], "6982e": [3, 186], "7877e": [3, 186], "3527e": [3, 186], "7285e": [3, 186], "6668e": [3, 186], "0583e": [3, 186], "6956e": [3, 186], "3962e": [3, 186], "9845e": [3, 186], "5015e": [3, 186], "5903e": [3, 186], "9993e": [3, 186], "9418e": [3, 186], "0196e": [3, 186], "6557e": [3, 186], "2109e": [3, 186], "8997e": [3, 186], "1507e": [3, 186], "7363e": [3, 186], "0310e": [3, 186], "9574e": [3, 186], "8980e": [3, 186], "0090e": [3, 186], "forecast": 3, "awar": [3, 7, 98, 99, 100, 101, 114, 116, 120, 273, 277, 429, 431], "detect": [3, 350, 424], "return_contigu": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 440], "tensordictbas": [3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 68, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 118, 124, 127, 130, 132, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 181, 182, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 202, 203, 204, 205, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 250, 252, 254, 270, 273, 277, 279, 280, 294, 313, 315, 317, 320, 321, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 366, 367, 368, 369, 370, 371, 405, 428, 441, 443], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 16, 17, 22, 29, 32, 33, 36, 38, 39, 44, 55, 59, 62, 65, 66, 71, 72, 77, 78, 85, 104, 105, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 183, 186, 190, 194, 197, 201, 210, 211, 214, 218, 223, 224, 225, 232, 233, 236, 239, 240, 243, 245, 248, 250, 252, 253, 255, 256, 265, 268, 271, 274, 275, 278, 281, 282, 286, 287, 293, 297, 298, 301, 303, 321, 325, 328, 330, 331, 332, 333, 334, 335, 339, 340, 341, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 366, 372, 373, 374, 375, 376, 377, 378, 379, 380, 403, 428, 429, 445, 448], "_set_se": [3, 184, 187, 197, 201, 220, 443], "lazystackedtensordict": [3, 50, 74, 99, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 198, 440], "float32": [3, 16, 17, 20, 33, 36, 39, 41, 45, 46, 47, 50, 61, 62, 63, 65, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 98, 99, 100, 104, 105, 112, 120, 124, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 148, 151, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 183, 187, 197, 201, 202, 203, 208, 211, 214, 216, 220, 221, 223, 227, 230, 231, 233, 236, 241, 254, 256, 266, 267, 273, 277, 280, 294, 295, 296, 304, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 324, 326, 329, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 365, 423, 443], "exclusive_field": [3, 50, 99, 124, 198], "stack_dim": [3, 50, 99, 124, 198], "dramat": 3, "carefulli": [3, 441, 442, 448], "against": [3, 5, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 250, 309, 314, 315, 318, 319, 320, 321, 322, 333, 335, 348, 353, 355, 357, 358, 430, 441, 442], "plain": [3, 8, 141, 433], "expens": [3, 105, 112, 113, 385, 445], "absent": [3, 36, 37, 48, 74, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 227, 240], "torchvis": [3, 11, 218, 245, 389, 441, 447, 448], "callabl": [3, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 107, 124, 127, 130, 131, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 180, 185, 187, 194, 195, 198, 202, 208, 233, 240, 241, 250, 251, 257, 258, 278, 285, 322, 331, 350, 385, 410, 411, 417, 418, 419, 429, 445], "bring": [3, 430, 433, 448], "signific": [3, 5, 8, 430, 447, 448], "kind": [3, 69, 82, 435, 441, 445], "consult": 3, "resize_par": 3, "revers": [3, 275], "order": [3, 11, 20, 32, 39, 44, 55, 59, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 111, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 191, 197, 198, 201, 208, 216, 230, 238, 240, 250, 293, 309, 314, 321, 323, 324, 326, 332, 333, 335, 336, 340, 341, 348, 352, 353, 354, 355, 357, 358, 429, 441, 442], "chain": [3, 45, 46, 47, 61, 62, 63, 69, 70, 78, 79, 84, 141, 142, 194, 200, 257, 258, 324, 448], "in_keys_inv": [3, 176, 193, 197, 199, 201, 208, 214, 215, 216, 220, 221, 223, 228, 237, 239, 241, 242, 428, 440, 443, 448], "append_transform": [3, 50, 62, 67, 68, 69, 78, 79, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 176, 183, 184, 186, 187, 189, 190, 191, 194, 195, 198, 199, 202, 203, 204, 206, 208, 209, 210, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 256, 273, 277, 385, 428, 431, 441, 443, 445, 447, 448], "doubletofloat": [3, 428, 430, 440], "float64": [3, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 128, 129, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 183, 194, 197, 201, 218, 233, 239, 240, 243, 245, 250, 321], "think": [3, 422, 430, 441, 442, 448], "in_": 3, "out_": 3, "perspect": [3, 267, 315, 342, 430, 432], "outer": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 425, 428, 429, 448], "ob": [3, 4, 8, 28, 36, 37, 48, 50, 62, 67, 68, 69, 74, 77, 78, 79, 84, 104, 107, 112, 113, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 181, 184, 186, 197, 199, 201, 214, 228, 230, 236, 260, 261, 262, 263, 283, 284, 285, 319, 326, 333, 335, 336, 341, 348, 353, 355, 357, 358, 367, 368, 369, 370, 429, 432, 440, 441, 443, 445, 447, 448], "obs_standard": 3, "out_keys_inv": [3, 176, 193, 197, 199, 201, 208, 214, 215, 216, 220, 221, 228, 230, 237, 239, 241, 242, 443], "illustr": [3, 428, 429, 434, 445], "chang": [3, 5, 7, 11, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 105, 111, 112, 114, 116, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 187, 194, 197, 199, 201, 203, 210, 212, 220, 221, 227, 231, 237, 239, 240, 241, 247, 248, 250, 275, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 424, 428, 431, 441, 442, 443, 444, 445, 448], "schemat": [3, 424], "outermost": 3, "innermost": 3, "similar": [3, 32, 39, 44, 45, 46, 47, 55, 57, 61, 63, 65, 66, 69, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 194, 198, 218, 233, 239, 240, 243, 244, 245, 247, 248, 250, 310, 312, 318, 321, 322, 424, 428, 429, 430, 431, 432, 434, 435, 436, 437, 443, 445, 447, 448], "transform_action_spec": [3, 194, 199, 214, 239, 241, 242, 250], "spec_from_random_valu": 3, "_apply_transform": [3, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 443, 448], "rand": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 99, 107, 125, 126, 139, 140, 148, 152, 153, 159, 166, 167, 184, 187, 197, 201, 220, 230, 254, 280, 318, 332, 333, 335, 336, 337, 339, 340, 341, 348, 350, 352, 353, 355, 357, 358, 443, 447, 448], "approach": [3, 62, 69, 78, 79, 190, 214, 253, 283, 284, 357, 428, 430, 435, 436, 441, 448], "insid": [3, 45, 46, 47, 61, 63, 70, 84, 154, 448], "did": [3, 69, 246, 373, 429, 430, 436, 445, 448], "_inv_apply_transform": [3, 183, 239, 250, 443, 448], "actiondiscret": 3, "rand_act": [3, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 187, 198, 240, 433], "action_discret": 3, "addonetoob": 3, "Is": [3, 239], "rewrit": [3, 239], "_call": [3, 184, 186, 187, 189, 190, 191, 194, 195, 199, 200, 202, 203, 204, 205, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 443], "_inv_cal": [3, 183, 239, 250], "overwrit": [3, 239], "till": [3, 239, 246], "encapsul": [3, 239, 433, 434, 435], "forget": [3, 239, 275], "edit": [3, 239, 250, 436], "top": [3, 4, 118, 125, 126, 139, 140, 196, 239, 254, 280, 434], "transform_output_spec": [3, 187, 194, 197, 199, 203, 210, 212, 220, 221, 227, 231, 237, 239, 241, 248, 250], "transform_input_spec": [3, 183, 187, 194, 197, 199, 200, 212, 216, 220, 221, 226, 230, 231, 232, 233, 237, 239, 241, 244, 250], "transform_observation_spec": [3, 187, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 207, 209, 210, 212, 214, 216, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 250, 443], "transform_state_spec": [3, 194, 199, 214, 239, 241, 242, 250], "transform_reward_spec": [3, 187, 188, 193, 194, 197, 199, 203, 210, 211, 212, 220, 221, 224, 225, 226, 227, 228, 230, 231, 237, 239, 241, 242, 248, 250], "rewardsum": [3, 181, 239, 250, 441, 442], "undo": 3, "addonetoact": 3, "subtract": [3, 232], "regist": [3, 14, 15, 18, 19, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 85, 86, 87, 88, 89, 107, 124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 166, 167, 178, 181, 197, 201, 202, 226, 238, 240, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 385, 387, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 425, 428, 430, 433, 445], "manipul": [3, 4, 8, 128, 129, 218, 239, 243], "third_transform": 3, "unexpect": [3, 16, 17, 20, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 448], "behviour": 3, "fortun": [3, 431, 432, 433, 434, 437], "alreadi": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 98, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 233, 250, 251, 322, 367, 368, 369, 370, 428, 430, 437, 441, 442], "catfram": [3, 317, 429], "notic": [3, 118, 190, 424, 430, 438, 443], "parenthood": 3, "henc": [3, 62, 182, 219, 283, 428, 430, 441, 442, 443], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 154, 163, 240, 385, 395, 443], "discret": [3, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 133, 134, 135, 141, 142, 146, 147, 154, 155, 156, 157, 158, 163, 164, 165, 168, 169, 183, 200, 208, 290, 293, 296, 339, 340, 341, 342, 423, 429, 434, 442], "might": [3, 45, 46, 47, 61, 63, 64, 70, 84, 391, 422, 428, 433, 448], "action_mask": [3, 127, 139, 140, 156, 157, 161, 162, 184], "unavail": [3, 156, 157], "probabl": [3, 4, 8, 71, 107, 110, 255, 256, 265, 267, 270, 271, 273, 275, 277, 278, 281, 282, 290, 302, 303, 318, 322, 335, 352, 423, 424, 429, 432, 434, 447], "probabilistictensordictmodul": [3, 210, 322, 323, 424, 447], "tensordictsequenti": [3, 39, 65, 77, 256, 270, 273, 277, 294, 314, 317, 323, 324, 329, 423, 428, 429, 431, 432, 434, 438, 440, 441, 444, 447], "maskedcategor": [3, 282, 421], "linear": [3, 16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 124, 125, 126, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 194, 210, 218, 233, 239, 240, 243, 245, 250, 254, 256, 257, 258, 260, 261, 262, 263, 267, 269, 270, 278, 280, 283, 284, 286, 287, 294, 296, 297, 298, 309, 310, 311, 312, 316, 317, 318, 319, 321, 324, 326, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 415, 423, 429, 440, 444, 447], "in_feat": 3, "out_feat": 3, "logit": [3, 45, 47, 63, 71, 266, 281, 282, 290, 293, 315, 318, 340, 341, 423], "dist": [3, 10, 281, 282, 290, 322, 424, 434], "distribution_class": [3, 210, 310, 311, 312, 313, 318, 322, 324, 332, 333, 335, 340, 341, 348, 352, 353, 354, 355, 423, 428, 430, 434, 441, 442, 447], "wrap": [3, 5, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 55, 65, 66, 71, 72, 77, 124, 125, 126, 127, 130, 134, 135, 139, 140, 141, 142, 147, 150, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 167, 169, 170, 178, 195, 238, 240, 250, 251, 273, 277, 305, 310, 311, 312, 317, 319, 322, 327, 350, 365, 423, 428, 429, 430, 431, 435, 438, 441, 442, 448], "actionmask": [3, 127], "your_base_env": 3, "mask_kei": [3, 28, 184, 219, 250], "itself": [3, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 174, 186, 250, 350, 357, 430, 433], "ey": 3, "report": [3, 125, 126, 139, 140, 437], "foremost": 3, "callback": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 442], "ad": [3, 4, 20, 28, 32, 39, 44, 50, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 91, 104, 105, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 208, 226, 238, 240, 250, 253, 286, 287, 294, 331, 332, 334, 335, 337, 342, 349, 352, 355, 365, 429, 431, 432, 434, 441, 445, 447, 448], "tensordictrecord": [3, 421], "videorecord": [3, 11, 385, 421, 430, 437, 438, 441], "csvlogger": [3, 11, 385, 387, 421, 429, 437, 438, 441], "wandblogg": [3, 421, 437], "tensorboardlogg": [3, 415, 421, 437], "tag": [3, 7, 11, 385, 387, 389, 392, 419, 437, 438, 441], "mp4": [3, 385, 387, 389, 438, 441], "video_format": [3, 385, 387, 389, 438, 441], "whc": 3, "cwh": 3, "exp": [3, 331, 424], "al": [3, 29, 133, 135, 202, 216, 254, 432, 448], "pong": [3, 150, 216, 432, 448], "v5": [3, 133, 135, 150, 202, 216, 432, 448], "tediou": [3, 433], "workspac": [3, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208], "pixelrendertransform": [3, 421, 441], "stream": 3, "alik": [3, 385], "envcreat": [3, 20, 27, 154, 163, 238, 385, 415, 416, 419, 421, 428, 429, 447, 448], "render_mod": [3, 385, 443], "rgb_arrai": [3, 385, 441, 442, 443], "uncom": [3, 437], "line": [3, 7, 32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 429, 437, 441, 442], "comment": [3, 425, 429, 447], "pixels_record": [3, 385], "mission": 3, "irrespect": [3, 321, 322], "dmcontrol": [3, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "jumanji": [3, 124, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165], "framework": [3, 4, 9, 27, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 148, 154, 155, 158, 163, 164, 165, 271, 447, 448], "Its": [3, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 247, 250, 321, 371], "success": [3, 141, 190, 198, 235, 270, 335, 357, 429, 436, 438, 443, 445, 447], "foundat": [3, 5, 156, 157, 430, 442], "inspir": [3, 432, 443], "gone": [3, 4, 5, 317], "concomittantli": 3, "problem": [3, 7, 8, 9, 20, 429, 430, 431, 436, 441, 442, 443, 445, 448], "decor": [3, 8, 178, 180, 251, 273, 277, 308, 350, 367, 368, 369, 370, 395, 431, 447], "relev": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 71, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 367, 368, 369, 370, 371, 394, 432, 443], "gym_backend": [3, 180, 421], "env1": [3, 256, 440], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 127, 180], "env2": [3, 440], "_env": [3, 6, 133, 448], "classic_control": 3, "pendulumenv": [3, 50, 421, 443], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 144, 174, 211], "side": [3, 4, 448], "v0": [3, 16, 17, 36, 37, 45, 46, 47, 48, 61, 63, 70, 74, 84, 124, 127, 130, 134, 136, 139, 140, 141, 142, 143, 144, 154, 155, 158, 163, 164, 165, 194, 211, 240, 247, 248, 395, 415], "26": [3, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "fun": [3, 180, 251, 430, 441, 442], "reveal": 4, "curv": 4, "exploit": [4, 434], "cv": 4, "flip": [4, 140], "correspondingli": 4, "invers": [4, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 67, 68, 69, 73, 74, 78, 79, 82, 85, 86, 87, 88, 89, 107, 183, 190, 197, 201, 203, 208, 214, 221, 223, 235, 237, 239, 241, 250, 330, 340, 348, 421, 443], "prescript": 4, "tune": [4, 29, 210, 441, 442, 444], "coeffici": [4, 29, 38, 71, 210, 442], "bonu": [4, 332, 334, 349, 352], "beta": [4, 62, 78, 104, 105, 340, 348, 349, 428, 429, 445, 447], "reduc": [4, 6, 35, 118, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 190, 195, 232, 253, 255, 302, 421, 429, 441], "downstream": [4, 424, 428], "formul": [4, 441, 442], "rate": [4, 11, 247, 248, 366, 429, 430, 441, 442], "gradient": [4, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 255, 274, 282, 287, 290, 302, 303, 322, 332, 334, 335, 336, 340, 341, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 366, 367, 368, 369, 370, 405, 428, 430, 441, 442, 443], "easier": [4, 66, 423, 428, 447], "local": [4, 7, 10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 68, 72, 77, 105, 112, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 283, 284, 295, 304, 365, 392, 394, 421, 432, 437, 438, 441, 442], "optima": 4, "product": [4, 9, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 271, 272, 275, 276, 417, 418], "sum": [4, 26, 32, 39, 53, 59, 77, 118, 125, 126, 128, 129, 133, 135, 136, 139, 140, 149, 150, 160, 189, 211, 226, 281, 282, 302, 304, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 348, 349, 351, 352, 353, 354, 355, 357, 358, 366, 373, 424, 428, 429, 430, 431, 432, 435, 438, 441, 442, 443, 448], "stat": [4, 214, 247, 248, 409, 419, 429, 430], "w": [4, 107, 127, 152, 153, 190, 192, 196, 222, 236, 271, 294, 387, 429, 445], "yield": [4, 16, 17, 20, 26, 32, 39, 44, 55, 65, 66, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 198, 250, 350, 428, 435], "insight": [4, 432], "auxiliari": [4, 435], "weight": [4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 71, 72, 77, 105, 107, 110, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 161, 162, 163, 164, 165, 194, 208, 211, 218, 233, 238, 239, 240, 243, 245, 250, 271, 272, 273, 275, 276, 277, 283, 285, 287, 321, 332, 333, 334, 335, 341, 344, 355, 357, 407, 414, 421, 423, 425, 428, 429, 430, 440, 443, 445, 447], "credit": 4, "futur": [4, 28, 32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 95, 96, 103, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 218, 238, 240, 245, 250, 278, 332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 422], "spars": [4, 39, 431], "intermedi": [4, 16, 17, 39, 50, 65, 77, 189, 256, 273, 277, 315, 428, 432, 444], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 428], "discov": 4, "score": [4, 71, 291, 293], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 39, 62, 65, 67, 68, 69, 77, 78, 79, 84, 107, 127, 146, 147, 156, 157, 159, 168, 169, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 254, 273, 277, 314, 319, 404, 423, 424, 428, 432, 433, 441, 445], "explicit": [4, 16, 17, 20, 251, 445], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 29, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 275, 340, 348, 430, 442], "addition": [4, 265], "timestep": [4, 71, 223, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 441, 442], "realli": 4, "huge": [4, 284, 431], "std": [4, 214, 247, 252, 292, 428, 448], "torchrlunseen": [4, 141], "extrins": 4, "wrong": [4, 105, 112], "bonus": 4, "denser": 4, "prior": [4, 72, 298, 344, 442], "freshli": 4, "drop": [4, 111, 113, 181, 248], "meant": [4, 55, 141, 148], "encourag": [4, 154, 293, 428, 429, 445], "measur": [4, 98, 100, 120, 125, 126, 139, 140, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 430, 436], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 29, 434], "ideal": [4, 214, 443], "down": [4, 16, 17, 20, 22, 158, 164, 424, 431, 433], "distil": 4, "nois": [4, 249, 287, 294, 307, 353, 357, 358, 400, 419, 428, 441], "exploratori": [4, 332, 334, 349, 352], "misalign": 4, "trade": [4, 434], "unavoid": 4, "bootstrap": [4, 342, 368, 374, 375, 428, 431], "noisi": [4, 286, 287, 307, 423], "unstabl": [4, 274, 302, 303], "inher": [4, 332, 352], "stochast": [4, 210, 268, 287, 288, 298, 333, 335, 338, 340, 341, 346, 348, 351, 353, 355, 423, 430, 434, 442], "enemi": 4, "pomdp": [4, 445], "loos": [4, 322, 423, 429, 430], "nonexist": 4, "sequenc": [4, 16, 17, 20, 22, 29, 36, 37, 39, 48, 51, 53, 61, 62, 63, 64, 65, 69, 71, 74, 77, 80, 83, 84, 94, 97, 107, 108, 110, 116, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 154, 155, 158, 160, 163, 164, 165, 176, 188, 189, 190, 191, 192, 196, 197, 200, 201, 205, 207, 208, 211, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 230, 232, 234, 235, 236, 237, 239, 241, 247, 248, 257, 258, 265, 267, 271, 275, 278, 281, 282, 283, 284, 290, 296, 300, 313, 323, 324, 338, 386, 387, 400, 401, 402, 404, 405, 423, 428, 430, 431, 432, 440, 441, 442, 448], "lstm": [4, 233, 276, 277, 432], "rel": [4, 107, 233, 265, 301, 428, 429, 441, 442, 445], "tend": 4, "stabl": [4, 9, 10, 151], "compens": 4, "descent": [4, 287], "minimum": [4, 85, 124, 154, 163, 224, 268, 301, 302, 303, 325, 328, 331, 333, 335, 341, 350, 351, 355, 396, 424, 428, 430, 438, 441, 442], "manual": [4, 11, 23, 25, 26, 50, 62, 67, 68, 69, 78, 79, 107, 134, 135, 428, 431, 445], "deviat": [4, 214, 247, 248, 252, 254, 268, 280, 286, 287, 292, 293, 352, 357, 358, 428, 434, 442], "radic": 4, "begin": [4, 16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 186, 271, 272, 275, 276, 331, 395, 424, 432, 433, 434, 435, 436, 437, 438], "stabil": [4, 206, 255, 332, 334, 349, 352, 354], "stage": [4, 428, 443], "never": [4, 16, 17, 22, 33, 85, 105, 235, 436, 447], "prevent": [4, 30, 31, 35, 36, 37, 40, 48, 51, 52, 53, 54, 59, 60, 67, 74, 96, 247, 248, 274, 302, 303, 332, 334, 349, 352, 354, 403, 437, 445], "entir": [4, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 283, 430, 433, 443, 445], "submit": [4, 133, 187, 422, 447], "adequ": [4, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 430, 441, 442], "infeas": 4, "allevi": [4, 423], "prune": [4, 142], "fire": [4, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "illeg": 4, "chess": [4, 127, 152, 153], "grasp": 4, "wherein": 4, "cumul": [4, 39, 226, 232, 254, 373, 430], "q": [4, 9, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 260, 261, 262, 263, 266, 267, 269, 295, 296, 304, 312, 315, 319, 320, 333, 335, 336, 337, 339, 340, 341, 342, 347, 348, 353, 355, 357, 358, 365, 421, 428, 435], "flow": [4, 428, 430, 441, 442, 443, 445], "reparameter": [4, 265, 282, 290], "soft": [4, 347, 355, 356, 441], "critic": [4, 8, 310, 316, 332, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 428, 435], "clip": [4, 71, 193, 224, 332, 334, 349, 352, 354, 357, 358, 405, 430, 442, 443], "oppos": [4, 83], "incorrect": [4, 112], "thought": [4, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "region": 4, "squash": [4, 431, 447], "tanh": [4, 257, 258, 271, 272, 274, 275, 276, 278, 284, 301, 302, 303, 325, 430, 434, 441, 442, 443, 444], "prob": [4, 281, 282, 290, 293, 430, 442], "rememb": [4, 441], "remap": 4, "origin": [4, 8, 39, 45, 46, 47, 61, 63, 64, 65, 70, 71, 77, 80, 84, 138, 199, 200, 210, 218, 240, 245, 250, 271, 318, 321, 322, 333, 335, 347, 348, 350, 352, 353, 355, 357, 358, 428, 432, 440, 443, 448], "world": [5, 148, 327, 344, 432, 437, 441, 442, 443, 448], "histor": 5, "ceas": 5, "farama": [5, 143, 144, 156, 157, 430, 443], "gymwrapp": [5, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 203, 227, 231, 246, 421, 430, 447], "feel": [5, 422, 438, 447], "free": [5, 7, 181, 197, 201, 332, 344, 352, 425, 430, 438, 442, 447], "gladli": 5, "prepar": [6, 43, 430], "conda": [6, 7, 422], "cmake": 6, "activ": [6, 7, 9, 50, 257, 258, 264, 268, 278, 283, 284, 334, 349, 352, 423, 443, 447], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 23, 26, 422], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 136], "y": [6, 7, 39, 65, 69, 77, 151, 269, 283, 305, 428, 442, 445], "facebookresearch": [6, 136], "subdirectori": 6, "verbos": [6, 438], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 91, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 220, 229, 250, 350, 441, 442, 447, 448], "command": [6, 7, 10, 158, 164, 165, 430, 441, 442, 443, 448], "readm": [6, 7, 168, 447], "md": [6, 7], "habitatenv": [6, 421], "_has_habitat": 6, "available_env": [6, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 448], "startswith": [6, 256, 424, 428, 435], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 131, 350, 428], "env_nam": [6, 124, 125, 127, 128, 130, 131, 133, 134, 136, 139, 141, 142, 143, 149, 154, 155, 158, 160, 163, 164, 165, 428, 430, 448], "llvmlite": 6, "config": [6, 7, 218, 245, 259, 264, 292, 409, 410, 411, 413, 416], "var": [6, 7, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 248, 250, 335, 350, 355], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 314, 350], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 35, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 335, 350, 355, 432, 445], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 432], "stand": [7, 42, 128, 129, 154, 163, 440, 443], "joint": [7, 429], "contact": [7, 64, 441], "engin": [7, 160, 443], "biomechan": 7, "graphic": 7, "anim": [7, 442], "area": 7, "demand": [7, 437, 448], "fast": [7, 9, 99, 125, 126, 181, 221, 353, 428, 429, 430, 447], "articul": 7, "acquir": [7, 430], "deepmind": [7, 8, 9, 124, 127, 128, 129, 130, 134, 141, 142, 146, 147, 152, 153, 154, 155, 158, 163, 164, 165, 202, 430, 433], "whomev": 7, "licenc": 7, "incorpor": [7, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 270, 294, 357, 431, 434, 443], "relianc": 7, "obsolet": 7, "legaci": [7, 28], "pro": [7, 422], "tip": [7, 422], "glfw": [7, 428], "osmesa": 7, "egl": 7, "advic": [7, 448], "sudo": [7, 422], "apt": [7, 442], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 142, 310, 311, 312], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 424, 428, 430, 431, 441, 442, 445], "roboti": 7, "html": [7, 16, 17, 149, 151, 152, 153], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 16, 17, 22, 154, 163], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 61, 63, 83, 94], "bin": [7, 267, 293, 315, 423], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 263, 318, 322, 428, 430, 432, 445], "nvidia": [7, 138, 432], "older": [7, 251], "hack": [7, 428], "adatp": 7, "script": [7, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 395, 415, 419, 423, 424, 425, 428, 429, 432, 437, 441, 442, 443, 445], "unnot": [7, 219], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 96, 429, 445], "troubleshoot": 7, "gl": 7, "h": [7, 107, 190, 192, 196, 222, 236, 271, 272, 273, 275, 276, 277, 280, 387, 429, 445], "eglshim": 7, "fatal": 7, "No": [7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 53, 54, 59, 60], "directori": [7, 45, 46, 47, 61, 63, 70, 83, 84, 98, 392, 394, 424, 425, 428, 434, 437, 441], "devel": 7, "ubuntu": [7, 138], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 429, 431, 440], "libstdc": 7, "glibcxx_3": 7, "29": [7, 112, 113], "compil": [7, 16, 17, 20, 28, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 97, 98, 99, 100, 101, 105, 108, 112, 113, 114, 119, 120, 122, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 251, 271, 272, 275, 276, 302, 367], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 32, 35, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 213, 238, 240, 250, 335, 355, 424, 448], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 112, 125, 126], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 441, 442], "global": [7, 32, 39, 44, 55, 65, 66, 69, 72, 77, 78, 79, 107, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 238, 250, 295, 304, 318, 322, 365, 425, 428, 441, 442], "cuda_visible_devic": 7, "id": [7, 28, 71, 84, 105, 107, 112, 113, 124, 127, 130, 133, 134, 141, 142, 154, 155, 158, 163, 164, 165, 166, 167, 294, 335, 353, 390, 394, 436, 445], "slurm_step_gpu": 7, "black": [7, 127, 441], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 442], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 425], "n_training_step": 8, "datapoint": [8, 83, 445], "n_data_per_train": 8, "no_grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 250, 255, 271, 272, 275, 276, 367, 368, 369, 370, 430, 431, 432, 442], "loss_fn": [8, 431, 435, 436, 447], "zero_grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 293, 425, 428, 430, 431, 432, 435, 438, 441, 442, 443], "backpropag": [8, 125, 126, 139, 140, 154, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 358, 365, 435, 442, 443], "differenti": [8, 83, 125, 126, 210, 335, 357, 367, 368, 369, 370, 431, 434, 435, 441, 442, 443], "denomin": 8, "artifact": 8, "numer": [8, 69, 134, 247, 274, 302, 303, 309, 314, 315, 318, 319, 320, 321, 322, 403, 430, 445, 448], "misconcept": 8, "freed": 8, "appear": [8, 11, 33, 59, 84, 85, 105, 112, 113, 130, 141, 198, 424, 443, 445], "compuat": 8, "fix": [8, 38, 154, 233, 333, 335, 351, 355, 429, 438, 443, 448], "retain_graph": [8, 125, 126], "discuss": [8, 9, 436, 441, 442], "inplac": [8, 32, 39, 44, 45, 46, 47, 50, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 321, 428], "forward": [8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 214, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 283, 284, 285, 286, 288, 289, 292, 294, 295, 297, 298, 300, 304, 305, 313, 315, 317, 318, 320, 321, 322, 325, 326, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 367, 368, 369, 370, 371, 421, 424, 431, 443, 447], "submodul": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 174, 233, 250, 273, 277, 329, 350], "param": [8, 32, 39, 44, 55, 65, 66, 71, 72, 77, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 187, 194, 197, 199, 203, 210, 212, 220, 221, 227, 231, 237, 239, 241, 248, 250, 265, 267, 283, 284, 285, 301, 313, 318, 321, 324, 350, 360, 364, 367, 368, 369, 370, 371, 428, 432, 438, 441, 442, 443, 444, 447], "grad": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 322, 428, 430], "whose": [8, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 71, 72, 73, 74, 77, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 295, 321], "factor": [8, 11, 29, 39, 55, 223, 250, 252, 253, 270, 274, 287, 294, 302, 303, 333, 339, 342, 343, 345, 356, 373, 428, 429, 432, 434, 438, 441, 442, 445, 448], "fit": [8, 66, 214, 233, 251, 424, 425, 428], "brax": [8, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 221, 433, 448], "jax": [8, 125, 126, 139, 140, 251], "improperli": 8, "underli": [8, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 350, 431, 433, 435, 437, 443], "tedeiou": 8, "priorit": [8, 62, 78, 104, 105, 335, 336, 337, 339, 340, 341, 348, 353, 355, 357, 358, 428, 429, 436, 447], "amount": [8, 154, 294, 429, 445], "costli": [8, 443], "constitut": [8, 429, 442, 443], "profil": 8, "frequent": [8, 50, 445], "program": [8, 340, 348, 432, 448], "functorch": [8, 10], "incl": 8, "suit": [8, 129, 430, 433, 447, 448], "mujoco_instal": 8, "valueerror": [8, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 111, 216, 236, 432, 447, 448], "idea": [9, 353, 425, 431, 434, 441, 442], "introductori": 9, "intro": [9, 430, 431], "dai": [9, 447], "2022": [9, 10, 255, 447], "spin": [9, 128, 129], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 434], "summari": [9, 214, 247, 428, 429, 430, 431], "reddit": 9, "reagent": 9, "orient": [9, 448], "baselines3": 9, "tf": 9, "bandit": [9, 151], "tensorflow": [9, 281, 282], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 432, 438], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 447], "grade": 9, "factori": [9, 16, 17, 20, 22, 23, 24, 25, 26, 67, 69, 78, 79, 80, 428], "cherri": 9, "jaxrl": 9, "mbrl": [9, 148, 423], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 430, 431, 441, 442], "notebook": [10, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "24": [10, 113, 133, 149, 150, 293, 317, 387, 441], "pip3": [10, 428, 430, 431, 441, 442], "url": [10, 136], "org": [10, 16, 17, 29, 62, 104, 105, 125, 126, 128, 129, 136, 139, 140, 146, 147, 149, 150, 151, 160, 168, 169, 190, 218, 243, 253, 259, 260, 261, 262, 263, 264, 267, 268, 269, 275, 280, 281, 282, 287, 288, 289, 293, 294, 295, 297, 298, 304, 315, 332, 333, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 367, 372, 380, 420, 439, 444], "whl": 10, "u": [10, 271, 272, 275, 276, 443], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 190, 430, 441, 442, 443, 445], "power": [11, 429], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 227, 421], "ultim": [11, 274, 302, 303], "ffmpeg": 11, "whatev": [11, 424, 428], "fed": [11, 442, 445], "feed": [11, 218, 245, 350, 423, 428, 441, 442, 445], "suppos": [11, 154, 400, 425, 448], "snippet": [11, 218, 243, 428], "gave": 11, "extrem": [11, 154, 163, 332, 334, 349, 352, 354], "blurri": [11, 432], "stitch": 11, "exp_nam": [11, 387, 388, 389, 392, 393, 394, 415, 429, 437, 438], "my_exp": [11, 437], "pixels_onli": [11, 128, 129, 133, 135, 136, 160, 428, 429, 437, 438, 447, 448], "my_video": [11, 437], "record_env": [11, 437, 438], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 312, 423], "allow_non": 12, "unwrap": [12, 202, 240, 395], "seealso": 12, "policy_weight": [13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], "worker_id": [13, 16, 17, 20, 22, 23, 24, 25, 26], "kwarg": [13, 16, 17, 20, 22, 23, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 52, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 96, 98, 99, 100, 101, 103, 104, 105, 107, 112, 113, 114, 116, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 184, 185, 187, 194, 218, 220, 229, 233, 238, 239, 240, 242, 244, 245, 247, 249, 250, 252, 254, 256, 257, 258, 260, 261, 262, 263, 266, 269, 270, 273, 274, 277, 278, 279, 280, 283, 284, 285, 290, 294, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 365, 366, 367, 368, 369, 370, 371, 385, 387, 391, 392, 394, 398, 405, 410, 411, 416, 417, 418, 424, 430, 432, 442], "upload": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "typeerror": [13, 16, 17, 20, 22, 23, 24, 25, 26], "remote_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "local_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "overwritten": [13, 16, 17, 20, 22, 23, 24, 25, 26, 50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 205], "localweightsupdaterbas": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "remoteweightsupdaterbas": [13, 14, 16, 17, 20, 22, 23, 24, 25, 26], "decentr": [14, 283], "_get_server_weight": [14, 15, 18, 19, 21], "_get_local_weight": [14, 21], "_maybe_map_weight": [14, 15, 18, 19, 21], "get_weights_from_polici": 14, "extract": [14, 36, 37, 48, 74, 186, 208, 237, 241, 316, 428, 430, 447], "get_weights_from_serv": 14, "weight_map_fn": 14, "cache_policy_weight": 14, "update_weight": [14, 19, 407], "register_collector": [14, 15, 18, 19, 21], "datacollectorbas": [14, 15, 18, 19, 21, 318, 322, 407, 410, 411, 415, 421], "get_server_weight": 15, "dict": [15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 96, 105, 107, 112, 113, 124, 127, 130, 131, 132, 133, 134, 135, 141, 142, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 171, 208, 210, 233, 238, 240, 246, 247, 248, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 269, 278, 292, 318, 322, 335, 355, 357, 387, 391, 392, 400, 405, 410, 411, 417, 418, 419, 423, 428, 429, 430, 445, 447, 448], "all_worker_id": [15, 18, 19], "_sync_weights_with_work": [15, 18, 19], "create_env_fn": [16, 17, 20, 22, 23, 24, 25, 26, 131, 154, 163, 428, 447], "policy_factori": [16, 17, 20, 22, 23, 24, 25, 26], "device_typ": [16, 20, 22, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 218, 243, 245, 257, 258, 259, 260, 261, 262, 263, 269, 278, 283, 284, 286, 287, 292, 295, 321, 402, 413], "env_devic": [16, 17, 20, 22, 23, 24, 25, 26, 429], "create_env_kwarg": [16, 17, 20, 22, 26, 131, 149, 154, 163, 238, 428, 448], "postproc": [16, 17, 20, 22, 23, 24, 25, 26, 55, 223, 429, 445], "explorationtyp": [16, 17, 20, 22, 23, 24, 25, 26, 318, 350, 400, 423, 428, 429, 430, 431, 434, 441, 447], "interactiontyp": [16, 20, 22, 23, 24, 25, 26, 172, 179, 318, 322, 400], "preemptive_threshold": [16, 17, 22], "num_thread": [16, 17, 22, 45, 46, 47, 61, 63, 70, 84, 154, 163], "num_sub_thread": [16, 17, 22, 154, 163], "str": [16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 104, 105, 107, 118, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 142, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 179, 182, 186, 190, 198, 202, 208, 209, 210, 218, 222, 231, 232, 235, 237, 238, 240, 241, 243, 245, 246, 247, 250, 251, 254, 266, 267, 273, 277, 279, 280, 283, 284, 285, 295, 296, 304, 309, 314, 315, 318, 319, 320, 321, 322, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 365, 366, 367, 368, 369, 370, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 419, 429, 430, 432], "set_trunc": [16, 17, 20, 22, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "use_buff": [16, 17, 20, 154, 163, 198], "replay_buffer_chunk": 16, "trust_polici": [16, 17, 20, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "compile_polici": [16, 17, 20], "cudagraph_polici": [16, 17, 20], "no_cuda_sync": [16, 17, 20], "datacollector": [16, 17, 20, 22, 26, 55, 352, 430, 436, 445], "recept": 16, "safe": [16, 17, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 105, 112, 252, 294, 301, 302, 309, 314, 315, 318, 319, 320, 321, 322, 324, 423, 447], "sota": [16, 17, 148, 206, 354, 396, 410, 428, 429, 447], "guard": [16, 17], "doc": [16, 17, 80, 136, 139, 140, 151, 160, 394, 424, 429, 441, 442, 445], "env_mak": [16, 17, 20, 26, 67, 124, 415, 448], "2000": [16, 17, 20, 55, 83, 137, 293, 387, 445], "50": [16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 64, 71, 73, 74, 82, 85, 86, 87, 88, 89, 112, 113, 146, 147, 250, 431, 445], "shutdown": [16, 17, 20, 22, 26, 158, 164, 187, 428, 429, 445, 447], "del": [16, 17, 20, 428, 429, 430, 440, 441, 445, 447, 448], "int64": [16, 17, 20, 28, 30, 31, 35, 40, 41, 45, 46, 47, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 70, 71, 75, 78, 80, 83, 84, 94, 104, 112, 124, 127, 130, 134, 141, 142, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 183, 187, 198, 202, 216, 223, 231, 267, 294, 296, 314, 315, 318, 319, 320, 423, 443], "subclass": [16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 39, 44, 65, 66, 72, 77, 85, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 185, 186, 239, 246, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 321, 322, 323, 325, 328, 350, 352, 429, 431, 436, 443, 445], "tensordictmodulebas": [16, 17, 20, 22, 23, 24, 25, 26, 39, 65, 77, 189, 305, 314, 317, 319, 431], "undergon": [16, 17, 20, 22, 23, 24, 25, 26, 83], "env_obs_kei": [16, 17, 20, 22, 23, 24, 25, 26], "mustn": [16, 17, 20, 22, 23, 24, 25, 26], "pickl": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250], "exclus": [16, 17, 20, 22, 23, 24, 25, 26, 69, 78, 79, 90, 91, 105, 112, 113, 187, 203, 205, 271, 273, 275, 277, 281, 282, 314, 315, 319, 320, 356, 357, 358, 367, 368, 369, 370, 371, 394, 419, 423], "lifespan": [16, 17, 20, 22, 23, 24, 25, 429], "divis": [16, 17, 20, 22, 23, 24, 25, 32, 105, 112, 113, 248, 253, 442], "endless": [16, 17, 20, 22, 23, 24, 25, 198], "fill": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 134, 186, 233, 246, 277, 431, 443, 444], "sit": [16, 17, 20, 22, 23, 24, 25, 26, 407, 429], "cast": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 77, 82, 84, 85, 86, 87, 88, 89, 94, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 149, 150, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 204, 206, 209, 210, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 321, 441, 448], "span": [16, 17, 20, 22, 23, 24, 25, 26, 105, 112, 113], "n_step": [16, 17, 20, 22, 23, 24, 25, 26, 55, 250, 317, 429, 430, 441, 442], "mainli": [16, 17, 20, 22, 23, 24, 25, 26, 71, 394, 423, 441, 442, 443], "round": [16, 17, 20, 22, 23, 24, 25, 26, 127], "closest": [16, 17, 20, 22, 23, 24, 25, 26], "post": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "boolm": [16, 17, 22], "update_policy_weight_": [16, 17, 22], "ratio": [16, 17, 22, 71, 428, 430], "finish": [16, 17, 22, 26, 134, 223, 448], "rest": [16, 17, 22, 39, 255, 423, 430, 431, 441, 443, 447], "earli": [16, 17, 22, 55, 134, 231, 447], "safeti": [16, 17, 22, 148, 154, 163, 248], "harm": [16, 17, 22, 154, 163], "add_truncated_kei": [16, 17, 20, 22, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240], "trust": [16, 17, 20, 124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 195, 277], "cudagraphmodul": [16, 17, 20, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "behaviour": [16, 17, 20, 39, 65, 77, 431, 432, 447], "bypass": [16, 17, 20, 434], "isaaclab": [16, 17, 20, 135], "maniskil": [16, 17, 20], "crash": [16, 17, 20, 223], "unus": [16, 17, 178], "ordereddict": [16, 17, 20, 22, 26, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 247, 248, 250, 335, 355], "worker0": [16, 17, 22], "state_dict0": [16, 17, 22], "worker1": [16, 17, 22], "state_dict1": [16, 17, 22], "reset_idx": [16, 17, 22], "static_se": [16, 17, 20, 22, 26, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240], "increment": [16, 17, 20, 22, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 214, 349], "env_fn": [16, 17, 20, 22, 131, 417, 418], "env_fn_parallel": [16, 17, 20, 22], "300": [16, 17, 20, 22, 112, 113, 262, 263], "out_se": [16, 17, 20, 22, 448], "shut": [16, 17, 20, 22, 158, 164], "irrevers": [16, 17, 22], "remote_collector": [18, 26], "max_interv": 18, "_skip_upd": 18, "interv": [18, 183, 235, 386, 387, 397, 407, 429, 443], "raycollector": [18, 67, 421], "registr": [19, 429], "return_same_td": 20, "interruptor": 20, "cautious": [20, 352], "whole": [20, 32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 83, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 318, 335, 355, 396, 428, 430], "_interruptor": 20, "outsid": [20, 199, 238, 424, 437, 441, 442, 443], "start_collect": 20, "stop_collect": 20, "preeptiv": 20, "chunk": [20, 434], "policy_state_dict": 20, "env_state_dict": 20, "weight_gett": 21, "_map_weight": 21, "_update_local_weight": 21, "exporationtyp": [23, 24, 25], "collector_class": [23, 24, 25, 26], "collector_kwarg": [23, 24, 25, 26], "num_workers_per_collector": [23, 24, 25, 26], "slurm_kwarg": [23, 24, 25], "update_after_each_batch": [23, 24, 25, 26], "max_weight_update_interv": [23, 24, 25, 26], "tcp_port": [23, 24, 25, 27], "deriv": [23, 24, 25, 26, 81, 265, 405], "respect": [23, 24, 25, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 188, 194, 197, 201, 212, 218, 219, 228, 233, 239, 240, 243, 245, 250, 271, 275, 283, 298, 321, 326, 332, 334, 349, 352, 354, 367, 369, 370, 401, 424, 430, 431, 441, 442], "subnod": [23, 24, 25, 26], "readi": [23, 25, 26, 422, 429, 430, 432, 434, 437, 445, 447], "fashion": [23, 25, 26, 45, 46, 47, 61, 63, 70, 84, 113], "distributed_back": [23, 24], "ucc": [23, 24], "submitit_delai": [23, 27], "former": [23, 24, 25, 28, 32, 39, 44, 62, 65, 66, 69, 72, 77, 78, 79, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328, 428], "whilst": [23, 24, 25], "homonym": [23, 24, 25, 443], "visit": [23, 24, 25, 84], "facebookincub": [23, 24, 25], "tcp": [23, 24, 25, 27], "port": [23, 24, 25, 27, 166], "10003": [23, 24, 25, 27], "focus": [23, 25, 26, 428, 435], "update_interv": 24, "frequenc": [24, 293, 428], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 28, 59, 318, 322], "tensorpiperpcbackendopt": 25, "ray_init_config": [26, 67], "remote_config": [26, 62, 67, 68, 69, 78, 79, 107], "num_collector": [26, 417, 418, 428, 429], "coordin": [26, 196], "init": [26, 32, 39, 44, 55, 65, 66, 67, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 239, 247, 250, 283, 284, 285, 394, 429, 430], "autodetect": 26, "num_cpu": [26, 67], "num_gpu": [26, 67], "1024": [26, 67, 264, 445], "equat": [26, 65, 84, 134, 198, 247, 248, 294, 331, 334, 356, 430, 433, 443], "exce": [26, 445], "indefinit": [26, 93], "rayreplaybuff": [26, 421], "enfoc": 26, "distributed_collector": [26, 67], "10000": [26, 154, 253, 405, 431], "add_collector": 26, "async_shutdown": [26, 67], "local_polici": 26, "stop_remote_collector": 26, "num_job": 27, "tcpport": 27, "submitit_main_conf": 27, "slurm_cpus_per_task": 27, "slurm_gpus_per_nod": 27, "slurm_partit": 27, "timeout_min": 27, "submitit_collection_conf": 27, "jump": [27, 433], "host": [27, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "satellit": 27, "rendezv": 27, "hang": 27, "forev": 27, "default_config": [27, 259, 264, 292, 313], "default_slurm_conf_main": 27, "default_slurm_conf": 27, "rollout_tensordict": 28, "nestedkei": [28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 70, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 105, 112, 113, 124, 127, 130, 134, 141, 142, 154, 155, 158, 159, 163, 164, 165, 176, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 248, 250, 252, 256, 267, 270, 294, 296, 313, 317, 322, 337, 365, 385, 387], "as_nest": 28, "x": [28, 39, 55, 65, 66, 69, 71, 72, 77, 113, 142, 208, 210, 236, 241, 251, 253, 255, 256, 258, 267, 269, 271, 272, 273, 275, 276, 277, 278, 280, 283, 284, 305, 314, 318, 319, 328, 331, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 405, 428, 432, 441, 443, 445, 447], "durat": [28, 442], "meta": [28, 45, 46, 47, 61, 63, 70, 82, 84, 132, 136, 332, 334, 349, 352, 354, 425, 430, 441, 442, 445], "aren": [28, 232, 431], "eventu": [28, 295, 431, 443], "recov": [28, 112, 113, 323, 340, 348, 440], "layout": 28, "to_padded_tensor": 28, "nested_tensor": [28, 133, 135], "stride": [28, 32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 257, 258, 260, 261, 269, 283, 429, 441, 447], "jag": 28, "focu": [28, 428, 429, 430, 432, 434, 435, 436, 441], "team": [28, 441, 442, 447], "cat": [28, 50, 198, 326, 333, 335, 336, 348, 353, 355, 357, 358, 441, 445, 447], "arang": [28, 30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 105, 112, 113, 183, 267, 281, 282, 314, 396, 423, 445], "obs_": 28, "trajectory_id": 28, "int32": [28, 32, 33, 50, 79, 85, 112, 139, 140, 152, 153, 165, 175, 317], "data_split": 28, "got": [28, 436], "init_kl_coef": 29, "horizon": [29, 146, 147, 168, 169, 254, 280, 430], "kl": [29, 38, 71, 210, 344, 349], "describ": [29, 45, 46, 47, 61, 63, 70, 82, 84, 159, 191, 301, 302, 337, 390, 424, 428, 430, 441, 442, 443, 448], "ziegler": 29, "et": [29, 254], "relax": [29, 385], "penalti": [29, 71, 346, 349], "strai": [29, 71], "greater": [29, 105, 112, 113, 198, 211, 212, 273, 277, 335, 428, 429], "increas": [29, 96, 190, 234, 255, 294, 441, 442], "pull": [29, 50, 84, 445], "toward": [29, 245], "aggress": 29, "kl_coef": [29, 38, 71], "arxiv": [29, 62, 104, 105, 125, 126, 128, 129, 139, 140, 146, 147, 149, 150, 160, 168, 169, 190, 218, 243, 253, 259, 260, 261, 262, 263, 264, 267, 268, 269, 275, 280, 287, 288, 289, 293, 294, 295, 297, 298, 304, 315, 332, 333, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 351, 352, 355, 356, 357, 367, 372, 380, 444], "pdf": [29, 190, 259, 260, 261, 262, 263, 267, 293, 294, 315, 335, 342, 346, 353, 356, 357, 367, 372, 380], "1909": 29, "08593": 29, "lm": 29, "blob": 29, "master": [29, 441, 442], "lm_human_prefer": 29, "train_polici": 29, "kl_valu": 29, "coef": [29, 210], "newest": 29, "int8": [30, 130, 145, 156, 157, 188], "encod": [30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 73, 74, 82, 85, 86, 87, 88, 89, 125, 126, 130, 133, 135, 136, 139, 140, 149, 150, 152, 153, 160, 166, 167, 183, 200, 289, 290, 293, 297, 331, 429, 430, 431, 434, 443, 445], "null": [30, 33, 34, 36, 37, 39, 48, 49, 57, 58, 62, 73, 74, 78, 82, 85, 86, 87, 88, 89, 104, 105, 188, 208], "denot": [30, 442], "clariti": [30, 50], "assert_is_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "cardin": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 84, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 267, 296, 314, 315, 320, 430], "outcom": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 265, 281, 282, 301, 350, 441], "cartesian": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "clear_device_": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "is_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 448], "np": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 134, 325, 385, 432, 441, 443], "ndarrai": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 134, 294, 325, 385, 432, 441], "ignore_devic": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "arrai": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 71, 73, 74, 82, 85, 86, 87, 88, 89, 104, 124, 127, 130, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165, 198, 202, 271, 272, 275, 276, 428, 441], "use_mask": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 156, 157], "compliant": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "singleton": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 257, 258, 278, 299, 300, 421, 424], "start_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "end_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "classmethod": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 107, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 243, 251, 258, 259, 292], "implements_for_spec": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "torch_funct": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "index_typ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 57, 58, 73, 74, 82, 85, 86, 87, 88, 89], "tensor_to_index": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "exanpl": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 267, 282, 296], "categ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 318], "to_categorical_spec": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "idx_categ": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_categor": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "make_neg_dim": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "convert": [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 124, 125, 126, 127, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 167, 194, 197, 198, 201, 218, 233, 239, 240, 243, 245, 247, 248, 250, 321, 331, 350, 428, 429, 430, 443, 445], "shortcut": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 443, 448], "ndimens": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 428], "violat": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 423], "proxi": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 70, 73, 74, 82, 84, 85, 86, 87, 88, 89, 282, 290, 318, 424], "project": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 66, 73, 74, 82, 85, 86, 87, 88, 89, 200, 252, 275, 294, 309, 314, 315, 318, 319, 320, 321, 322, 394, 423, 447, 448], "uniformli": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 106, 350, 448], "normal": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 68, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 214, 247, 248, 252, 253, 257, 258, 274, 278, 281, 282, 302, 303, 318, 322, 334, 335, 349, 352, 400, 403, 419, 423, 425, 431, 434, 442, 448], "drawn": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 233, 270, 318, 322, 430, 441, 442], "set_provisional_n": [30, 31, 35, 40, 51, 52], "temporarili": [30, 31, 35, 40, 51, 52, 96, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 436, 445], "dest": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 77, 82, 85, 86, 87, 88, 89, 218, 243, 245, 321], "to_numpi": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "transformed_in": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89, 240, 301, 419], "check_spec_encod": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "to_one_hot": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "hot": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60, 125, 126, 133, 135, 136, 139, 140, 146, 147, 149, 150, 152, 153, 156, 157, 160, 166, 167, 168, 169, 183, 184, 200, 267, 290, 291, 296, 314, 315, 319, 320, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 431], "categ_sampl": [30, 31, 35, 40, 53, 54, 59, 60], "onehot_sampl": [30, 31, 35, 40, 53, 54], "to_one_hot_spec": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "categoricalbox": [30, 31, 35, 40, 53, 54, 59, 60, 155], "type_check": [30, 31, 33, 34, 35, 36, 37, 40, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 82, 85, 86, 87, 88, 89], "update_mask": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "disabl": [30, 31, 32, 35, 39, 40, 44, 51, 52, 53, 54, 55, 59, 60, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 274, 303, 385, 428, 441, 442], "unmask": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "ts": [30, 31, 35, 40, 51, 52, 53, 54, 59, 60], "num_bit": 32, "convert_to_binari": 32, "decim": 32, "1001": 32, "bit": [32, 208, 430, 431, 433, 441, 442, 445], "heavysid": 32, "binary_to_decim": 32, "add_modul": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "child": [32, 39, 44, 50, 55, 65, 66, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 429], "fn": [32, 39, 44, 55, 64, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 241, 250, 417, 418], "recurs": [32, 36, 37, 39, 44, 48, 55, 65, 66, 72, 74, 77, 90, 91, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350, 432], "init_weight": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "m": [32, 39, 44, 51, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 200, 250, 256, 322, 429, 443], "fill_": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 429, 431], "net": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 261, 263, 266, 269, 284, 332, 333, 335, 341, 348, 352, 353, 354, 355, 415, 429, 443, 444, 447], "in_featur": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 257, 258, 260, 261, 262, 263, 269, 278, 283, 284, 286, 287, 310, 321, 329, 337, 339, 432, 434, 435], "out_featur": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 148, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 254, 257, 258, 260, 261, 262, 263, 268, 269, 273, 277, 278, 280, 283, 284, 286, 287, 310, 314, 321, 329, 337, 339, 423, 428, 431, 432, 434, 435, 438, 447], "bia": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 208, 218, 233, 238, 239, 240, 243, 245, 250, 253, 257, 258, 260, 261, 262, 263, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 286, 287, 294, 321, 328, 330, 331, 335, 350, 355, 424, 428, 429, 430, 431, 442], "requires_grad": [32, 39, 44, 55, 65, 66, 72, 77, 124, 125, 126, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 238, 240, 250, 293, 322, 335, 355], "bfloat16": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "datatyp": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 445], "member": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350, 387], "xdoctest": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 208, 218, 233, 238, 239, 240, 243, 245, 250, 321, 335, 350, 355], "buf": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "20l": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350], "1l": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350], "5l": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350], "__call__": [32, 39, 44, 55, 64, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 322, 425], "doubl": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 197, 199, 201, 218, 233, 239, 240, 243, 245, 250, 321, 337, 342, 347, 353, 356, 365, 428, 429, 430, 431, 448], "eval": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 247, 250, 255, 423, 428, 429, 430], "evalu": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 135, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 240, 250, 255, 265, 281, 282, 290, 303, 353, 410, 411, 429, 430, 438], "dropout": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 255, 256, 271, 273, 275, 277, 278, 423, 431], "batchnorm": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 253], "comparison": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240, 250, 350, 428, 429], "extra_repr": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "recip": [32, 39, 44, 64, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 288, 289, 292, 294, 297, 298, 300, 305, 313, 315, 317, 320, 325, 328], "get_buff": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "get_submodul": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "qualifi": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "referenc": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "resolv": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "someth": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 145, 154, 155, 158, 163, 164, 165, 250, 422, 429, 430, 443, 448], "get_extra_st": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250], "set_extra_st": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250], "picklabl": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250], "get_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "net_b": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "net_c": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "conv": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 257, 258, 429], "conv2d": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 258, 260, 261, 269, 283], "kernel_s": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 257, 258, 260, 261, 269, 283, 288, 429, 447], "diagram": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "degre": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 195, 250], "named_modul": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "half": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321, 428], "ipu": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "strict": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 355, 432], "descend": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 355], "get_swap_module_params_on_convers": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 355], "persist": [32, 39, 42, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 208, 238, 240, 250, 335, 355], "preserv": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 321, 335, 355], "missing_kei": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 355], "unexpected_kei": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 355], "namedtupl": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 238, 240, 250, 335, 355], "l": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 271, 275, 366, 430, 443], "idx": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "mtia": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "named_buff": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "remove_dupl": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350], "prepend": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 350, 432], "running_var": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "named_children": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "conv4": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "conv5": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "memo": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "named_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 250, 350], "register_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "removablehandl": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "favor": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 250, 430], "register_full_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_buff": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "running_mean": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "alongsid": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 437], "num_featur": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 253], "register_forward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 267, 296], "with_kwarg": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "always_cal": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_module_forward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "regardless": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 334, 349, 352], "register_forward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "invok": [32, 39, 44, 55, 65, 66, 68, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "And": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 435], "forward_pr": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_module_forward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "grad_input": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "grad_output": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "technic": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 429, 431, 432, 434], "caller": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_module_full_backward_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_full_backward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "backward_pr": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_module_full_backward_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_load_state_dict_post_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "incompatible_kei": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "thrown": [32, 39, 44, 55, 65, 66, 72, 73, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 445], "register_load_state_dict_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "local_metadata": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "error_msg": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "noqa": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "b950": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_modul": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 425], "alia": [32, 39, 44, 55, 62, 65, 66, 67, 68, 69, 72, 77, 78, 79, 84, 98, 99, 100, 101, 107, 114, 116, 120, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 357, 358, 365, 371], "register_paramet": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_state_dict_post_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "register_state_dict_pre_hook": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "keep_var": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 335, 355], "requires_grad_": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 432], "autograd": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 335, 355], "freez": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 247, 248, 250], "finetun": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "gan": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "set_submodul": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "share_memori": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 131, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 428], "share_memory_": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250, 447], "destin": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 189, 197, 199, 201, 208, 238, 240, 243, 247, 250, 335, 355, 387], "averag": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 247, 250, 294, 335, 343, 344, 355, 403, 428, 430], "shallow": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 335, 355, 431], "detach": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 208, 238, 240, 250, 335, 346, 350, 355, 357, 367, 368, 369, 370, 428], "non_block": [32, 39, 44, 45, 46, 47, 55, 61, 63, 65, 66, 70, 72, 77, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321, 431], "memory_format": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "channels_last": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "unchang": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 200, 218, 233, 239, 240, 243, 245, 250, 270, 321, 387, 402, 428, 445], "tri": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321, 437], "pin": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "4d": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "ignore_w": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "1913": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "3420": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "5113": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "2325": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "torch_doctest_cuda1": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "gpu1": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "1914": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "5112": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "2324": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "float16": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 272, 276, 321], "cdoubl": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "3741": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "j": [32, 39, 44, 55, 62, 65, 66, 72, 77, 104, 105, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321, 425, 435], "2382": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "5593": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "4443": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "complex128": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "6122": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "1150": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 194, 218, 233, 239, 240, 243, 245, 250, 321], "to_empti": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "dst_type": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "xpu": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "set_to_non": [32, 39, 44, 55, 65, 66, 72, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 250], "upper": [33, 110, 213], "continuousbox": [33, 36, 85, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 175, 208, 211, 233, 241], "provision": 35, "descript": [36, 168, 186, 429, 430], "akin": 36, "unnam": 36, "compositespec": [36, 421, 443, 448], "constraint": [36, 148, 302, 430, 441, 442], "data_cl": 36, "tensorclass": [36, 45, 46, 47, 61, 63, 70, 84, 94, 98, 100, 120], "pixels_spec": 36, "observation_vector_spec": 36, "composite_spec": 36, "observation_vector": [36, 191, 428], "_nodefault": [36, 37, 48, 74], "is_empti": [36, 37, 48, 74, 443], "include_nest": [36, 37, 48, 74], "leaves_onli": [36, 37, 48, 74], "is_leaf": [36, 37, 48, 74], "_compositespecitemsview": [36, 37, 48, 74], "_compositespeckeysview": [36, 37, 48, 74], "reflect": [36, 37, 48, 74, 135, 156, 157, 181, 208, 246, 350, 408, 429, 430, 431, 442], "lock_": [36, 37, 48, 74], "propag": [36, 37, 48, 74, 332, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370, 430, 441, 442], "succeed": [36, 37, 48, 74, 208, 241], "pop": [36, 37, 48, 74], "keyerror": [36, 37, 48, 74, 240], "selected_kei": [36, 37, 48, 74, 227, 428], "unlock_": [36, 37, 48, 74], "_compositespecvaluesview": [36, 37, 48, 74], "multipli": [38, 141, 198, 255, 271, 275, 332, 333, 334, 335, 341, 349, 351, 352, 353, 355, 403, 428, 441], "calcul": [38, 71, 223, 271, 332, 334, 339, 349, 352, 354, 357], "reassign": 39, "reward2go": [39, 421], "reward_key_out": 39, "time_dim": [39, 367, 369, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384], "unrol": [39, 343, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384], "discount": [39, 55, 131, 223, 250, 333, 339, 342, 343, 345, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 424, 429, 430, 441, 442], "lastrewardtotraj": 39, "last_reward_to_traj": 39, "new_tensordict": 39, "is_tdmodule_compat": [39, 65, 77], "reset_out_kei": [39, 65, 77], "orign": [39, 65, 77], "mod": [39, 65, 77, 210, 256, 273, 277, 317, 322, 325, 431, 432, 438], "select_out_kei": [39, 65, 77, 332, 333, 335, 336, 340, 341, 348, 352, 353, 355, 357, 358, 432], "reset_parameters_recurs": [39, 65, 77, 350], "relu": [39, 65, 77, 148, 254, 264, 280, 331], "old_param": [39, 65, 77], "bork": [39, 65, 77], "dork": [39, 65, 77], "reset_paramet": [39, 65, 77, 285], "from_modul": [39, 65, 77, 267, 321, 324, 447], "rid": [39, 65, 77], "out_keys_sourc": [39, 65, 77], "rubric": [39, 65, 77, 214, 324], "revert": [39, 65, 77, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 434, 445], "seq": [39, 65, 77, 256, 271, 273, 275, 277, 317, 431, 432, 438, 440], "z": [39, 65, 77, 272], "shift_kei": [41, 43, 56, 75], "is_full_kei": [41, 43, 56, 75], "is_ful": [41, 43, 56, 75], "tempfil": [41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 98, 107, 415, 428, 429, 431, 432, 436, 441, 444, 445], "register_save_hook": [41, 62, 67, 68, 69, 75, 78, 79, 107], "temporarydirectori": [41, 45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 75, 78, 79, 83, 84, 107, 428, 429, 431, 432, 436, 441, 444, 445], "tmpdir": [41, 62, 67, 68, 69, 75, 78, 79, 83, 107, 428, 429, 432, 441], "rb_load": [41, 62, 67, 68, 69, 78, 79, 107], "register_load_hook": [41, 62, 67, 68, 69, 78, 79, 107], "filesystem": [42, 445], "ted2nest": [43, 421], "tokens_respons": [45, 47, 141], "attention_mask": [45, 46, 61, 63, 64, 70, 71, 80, 83, 94, 141], "token_list": [45, 46, 47], "tokens_response_list": [45, 47], "log_prob": [45, 47, 71, 265, 281, 282, 290, 293, 303, 322, 335, 424], "text": [45, 46, 47, 64, 71, 80, 141, 142, 271, 272, 275, 276, 294, 430], "text_respons": [45, 141], "copy_exist": [45, 46, 47, 61, 63, 70, 84], "return_earli": [45, 46, 47, 61, 63, 70, 84], "share_non_tensor": [45, 46, 47, 61, 63, 70, 84], "memmap": [45, 46, 47, 61, 63, 70, 84, 98, 154, 163, 247, 387, 389, 402], "dataclass": [45, 46, 47, 61, 63, 70, 82, 84, 350], "from_tensordict": [45, 46, 47, 61, 63, 70, 84], "non_tensordict": [45, 46, 47, 61, 63, 70, 84], "getattr": [45, 46, 47, 61, 63, 70, 84], "load_memmap": [45, 46, 47, 61, 63, 70, 84], "load_": [45, 46, 47, 61, 63, 70, 84], "load_memmap_": [45, 46, 47, 61, 63, 70, 84], "fromkei": [45, 46, 47, 61, 63, 70, 84], "saved_td": [45, 46, 47, 61, 63, 70, 84], "td_load": [45, 46, 47, 61, 63, 70, 84], "fake": [45, 46, 47, 61, 63, 70, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 428, 429, 432], "_subclass": [45, 46, 47, 61, 63, 70, 84], "faketensormod": [45, 46, 47, 61, 63, 70, 84], "faketensor": [45, 46, 47, 61, 63, 70, 84], "from_flatten": [45, 46, 47, 61, 63, 70, 84], "attemptedli": [45, 46, 47, 61, 63, 70, 84], "existsok": [45, 46, 47, 61, 63, 70, 84, 98], "mimic": [45, 46, 47, 61, 63, 70, 84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "cross": [45, 46, 47, 61, 63, 70, 84, 254], "tensordictfutur": [45, 46, 47, 61, 63, 70, 84], "serialis": [45, 46, 47, 61, 63, 70, 84], "deepli": [45, 46, 47, 61, 63, 70, 84], "memmap_": [45, 46, 47, 61, 63, 70, 84, 247], "memmap_lik": [45, 46, 47, 61, 63, 70, 84], "contentless": [45, 46, 47, 61, 63, 70, 84], "1_000_000": [45, 46, 47, 61, 62, 63, 67, 68, 69, 70, 78, 79, 84, 107, 112, 428, 431, 441], "alloc": [45, 46, 47, 61, 63, 70, 84, 100, 265, 281, 282, 428], "memmap_refresh_": [45, 46, 47, 61, 63, 70, 84], "refresh": [45, 46, 47, 61, 63, 70, 84, 438, 441, 442], "saved_path": [45, 46, 47, 61, 63, 70, 84], "setattr": [45, 46, 47, 61, 63, 70, 84], "tent": [45, 46, 47, 61, 63, 70, 83, 84], "to_tensordict": [45, 46, 47, 61, 63, 70, 84, 431], "retain_non": [45, 46, 47, 61, 63, 70, 84], "discrard": [45, 46, 47, 61, 63, 70, 84], "switch": [45, 46, 47, 61, 63, 70, 84, 240, 248, 274, 303, 385], "stackedcomposit": [48, 421], "tensordictmap": [50, 421], "observation_kei": [50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "excluded_kei": [50, 203], "consolid": [50, 77, 91, 100], "lazili": [50, 99, 284, 443], "from_tensordict_pair": [50, 77], "querymodul": [50, 77], "get_keys_from_env": 50, "cattensor": [50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 428, 440, 443, 448], "unsqueezetransform": [50, 190, 443, 445], "oracl": 50, "obs_kei": 50, "state_kei": [50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "reset_st": 50, "rollout0": 50, "rollout1": 50, "rollout1b": 50, "collaps": 50, "max_length": [50, 61, 63, 64, 80, 83, 84, 94, 198, 237, 432, 438], "valid_path": [50, 84], "assert_clos": [50, 273, 277], "subtre": [50, 84], "intersect": [50, 251], "Or": [50, 161, 162, 283], "rollout_from_path": [50, 84], "plot": [50, 84, 428, 430, 431, 441, 442, 443], "_nestedkei": [50, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "return_nod": 50, "diverg": [50, 210, 273, 277, 318, 322, 344, 349], "endpoint": 50, "noth": [50, 142, 428, 430], "r0": [50, 428], "123": [50, 84], "392": [50, 84], "989": [50, 84], "809": [50, 84], "847": [50, 84], "r1": 50, "235": 50, "td_root": [50, 84], "node_data": [50, 84], "node_id": [50, 84], "nontensordata": [50, 57, 127, 152, 153, 198, 208, 237, 241, 385], "_parent": [50, 84], "nontensorstack": [50, 57, 99, 124, 127, 142, 198, 208, 237, 241], "weakref": [50, 84], "0x716eeb78fbf0": 50, "0x": 50, "4341220243998689835": 50, "6745467818783115365": 50, "win": [50, 84], "to_str": [50, 84], "node_format_fn": [50, 84], "indent": [50, 84], "rollouts_data": [50, 84], "456": [50, 84], "359": [50, 84], "3094": [50, 84], "75": [50, 84, 112], "948": [50, 84], "68": [50, 84, 112], "9045": [50, 84], "rollout_data": [50, 84], "nvec": [51, 53], "remove_singleton": 51, "ax": [51, 286, 287, 441], "Not": [51, 52, 69, 125, 126, 139, 238, 273, 277], "neither": [51, 52, 53, 54, 166, 443], "use_regist": [53, 59], "mone_hot": [53, 54], "boxlist": [53, 54], "gamma": [55, 223, 250, 280, 332, 333, 335, 336, 337, 339, 341, 342, 343, 345, 348, 350, 352, 353, 354, 355, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 415, 424, 428, 429, 430, 441, 442, 447], "sutton": [55, 424, 441, 442], "1988": 55, "tempor": [55, 273, 277, 280, 368, 369, 374, 375], "44": [55, 112], "ahead": [55, 250, 448], "bias": [55, 271, 272, 275, 276, 328, 424, 428], "mitig": [55, 190], "multisteptransform": [55, 421], "99": [55, 223, 247, 280, 345, 360, 366, 373, 415, 428, 429, 430, 432, 435, 438, 441, 442, 447], "nontermin": 55, "original_reward": 55, "newli": [55, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "OR": 55, "row": [56, 76, 139, 140, 211], "example_data": [57, 141, 198], "conform": 57, "templat": [57, 388], "randomli": [57, 111, 165, 213, 214, 233, 270, 318, 322, 434, 441, 442, 443, 445], "unidimension": 59, "action_valu": [59, 266, 267, 296, 314, 315, 319, 320, 335, 341, 350, 365, 423, 431, 432, 434, 438], "keepdim": 59, "chosen_action_valu": [59, 295, 296, 304, 319, 320, 365, 423, 431, 434], "priori": 59, "uniqu": [59, 84, 112, 113, 142, 146, 147, 190, 202, 232, 233, 234, 238, 317, 394, 436, 445], "tensor_spec": [59, 159, 182, 184, 340, 341, 352, 354], "one_hot_sampl": [59, 60], "chosen_data": [61, 94], "rewarddata": [61, 94, 421], "rejected_data": [61, 94], "from_dataset": [61, 63, 94], "dataset_nam": [61, 63, 71, 83, 94, 151], "550": [61, 63, 71, 83, 94, 112, 113], "root_dir": [61, 63, 83, 94], "from_disk": [61, 63, 83, 94], "carperai": [61, 63, 71, 83], "openai_summarize_comparison": [61, 63, 83], "load_from_disk": [61, 63, 83, 94], "load_dataset": [61, 63, 83, 94], "92534": 61, "input_id": [61, 63, 64, 70, 71, 80, 83, 94, 141, 142], "end_scor": [61, 70, 71, 94], "sub_data": [61, 63], "alpha": [62, 78, 104, 105, 257, 258, 260, 261, 262, 263, 269, 283, 333, 335, 341, 351, 353, 355, 357, 428, 445, 447], "ep": [62, 78, 104, 105, 214, 247, 248, 253, 294, 334, 356, 403, 424, 428, 429, 431, 432, 435, 438], "1e": [62, 78, 104, 105, 214, 247, 248, 253, 265, 268, 301, 428, 429, 430, 442], "08": [62, 78, 104, 105], "pin_memori": [62, 69, 78, 79, 217, 428, 447], "schaul": [62, 104, 105], "quan": [62, 104, 105], "antonogl": [62, 104, 105], "silver": [62, 104, 105], "2015": [62, 104, 105], "ab": [62, 104, 105, 125, 126, 128, 129, 139, 140, 146, 147, 149, 150, 160, 168, 169, 189, 218, 243, 247, 253, 259, 264, 268, 269, 275, 280, 287, 288, 289, 295, 297, 298, 304, 332, 333, 337, 338, 339, 340, 343, 344, 345, 347, 348, 351, 352, 355, 444], "1511": [62, 104, 105, 269], "05952": [62, 104, 105], "expon": [62, 78, 104, 105], "\u03b1": [62, 78, 104, 105], "delta": [62, 78, 104, 105, 271, 275, 301, 318, 322, 421, 424, 441], "1_000": [62, 69, 78, 79, 441, 445], "mini": [62, 69, 78, 79, 442], "incompat": [62, 69, 78, 79, 354, 445], "drop_last": [62, 69, 78, 79, 111, 113], "notion": [62, 69, 78, 79, 293], "caution": [62, 69, 78, 79, 111, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 448], "codebas": [62, 69, 78, 79, 443], "return_info": [62, 67, 68, 69, 78, 79, 104, 105, 107, 445], "tensordictprioritizedreplaybuff": [62, 421, 447], "simplifi": [62, 178, 434, 443, 445], "_weight": [62, 78, 104, 105], "update_prior": [62, 104, 105, 402, 425, 429, 445, 447], "36278465": 62, "invert": [62, 67, 68, 69, 78, 79, 107, 330, 430], "as_remot": [62, 67, 68, 69, 78, 79, 107], "cl": [62, 67, 68, 69, 78, 79, 107, 429], "quantiti": [62, 67, 68, 69, 78, 79, 107], "reserv": [62, 67, 68, 69, 78, 79, 107, 425], "default_remote_class_config": [62, 67, 68, 69, 78, 79, 107], "tqdm": [62, 67, 68, 69, 78, 79, 107, 405, 428, 430, 431, 441, 442, 443], "randomsampl": [62, 67, 68, 69, 78, 79, 107, 428, 441], "td_error": [62, 67, 68, 69, 78, 79, 107, 335, 336, 337, 339, 340, 341, 342, 348, 350, 353, 355, 357, 358, 365, 428, 445, 447], "update_tensordict_prior": [62, 67, 68, 69, 78, 79, 107, 428, 445, 447], "insert_transform": [62, 67, 68, 69, 78, 79, 107, 185, 240], "insert": [62, 67, 68, 69, 78, 79, 97, 107, 108, 118, 119, 122, 123, 185, 190, 194, 230, 240, 242], "set_sampl": [62, 67, 68, 69, 78, 79, 107], "set_storag": [62, 67, 68, 69, 78, 79, 107], "set_writ": [62, 67, 68, 69, 78, 79, 107], "write_count": [62, 67, 68, 69, 78, 79, 107], "prompt_rindex": [63, 64, 71], "promptdatatldr": 63, "116722": 63, "prompt": [64, 71, 141, 198], "return_tensordict": [64, 80], "tensodict": [64, 80], "valid_sampl": 64, "eough": 64, "toknen": 64, "meet": 64, "criterion": 64, "autotoken": [64, 80, 83], "from_pretrain": [64, 71, 80, 142], "gpt2": [64, 71, 80, 83, 142, 259, 264, 292], "pad_token": [64, 80], "eos_token": 64, "enough": [64, 445], "inde": [64, 200, 430, 432, 443], "index_kei": [65, 77], "hash_kei": 65, "_hash": 65, "hash_modul": [65, 72, 77], "siphash": [65, 66, 77, 142], "hash_to_int": 65, "hashtoint": 65, "query_modul": [65, 77], "key1": [65, 77, 191, 230, 396, 404, 447], "key2": [65, 77, 191, 230, 396, 404, 447], "write_hash": 65, "n_compon": 66, "dtype_cast": 66, "as_tensor": [66, 72, 432], "init_method": 66, "emb": [66, 431], "sklearn": [66, 151], "byte": [66, 72, 184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250], "builtin": [66, 72], "pythonhashse": [66, 72], "todo": 66, "optiona": 67, "transform_factori": [67, 69, 78, 79], "asyncio": [67, 124], "ray_buff": 67, "object_store_memori": 67, "600": [67, 71], "await": 67, "sleep": [67, 131, 448], "invoc": 68, "friendli": [68, 428], "include_info": [68, 78, 79], "storagecheckpointerbas": [69, 114], "roundrobinwrit": 69, "_pytre": [69, 445], "tree_map": [69, 445], "assert0": [69, 445], "ref_model": 71, "reward_model": [71, 327], "max_new_token": 71, "score_clip": 71, "kl_schedul": 71, "klcontrollerbas": 71, "num_step": [71, 432], "causal": 71, "sentenc": 71, "frozen": [71, 210, 247, 248], "llm": [71, 83, 94, 141, 198], "gpt2rewardmodel": 71, "get_dataload": [71, 421], "promptdata": [71, 421], "gpt2lmheadmodel": 71, "dl": [71, 198], "block_siz": [71, 94], "tensorclass_typ": [71, 94], "openai_summarize_tldr": 71, "config_class": 71, "model_path": 71, "rollout_from_model": 71, "rollout_from_data": 71, "reward_kl": [71, 210], "reward_raw": 71, "sample_log_prob": [71, 210, 310, 311, 312, 318, 322, 324, 352], "create_rollout_td": 71, "log_ratio": 71, "replic": [71, 424], "rindex": 71, "eo": 71, "generation_config": 71, "generationconfig": 71, "ti": [71, 376, 377, 378, 379, 381, 382, 383, 384, 429], "log_probs_gen": 71, "logprobs_of_label": 71, "hash_a": 72, "4669941682990263259": 72, "3778166555168484291": 72, "9122128731510687521": 72, "hash_b": 72, "heterogen": [73, 74, 99, 124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 170, 283, 284, 428, 429], "220": 75, "resembl": 77, "tensormap": 77, "collat": [77, 107], "subtyp": 77, "embedding_storag": 77, "tensor_dict_storag": 77, "new_index": 77, "key3": 77, "retrieve_valu": 77, "storage_constructor": 77, "write_fn": 77, "tensordictstorag": 77, "thumb": [77, 154, 430], "lazydynamicstorag": 77, "fixedstorag": 77, "randomprojectionhash": 77, "priority_kei": [78, 79, 104, 335, 337, 340, 341, 342, 348, 350, 353, 355, 357, 358, 365, 445, 447], "reduct": [78, 104, 105, 118, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 351, 352, 353, 354, 355, 357, 358], "prioritizedreplaybuff": [78, 421, 447], "min": [78, 104, 105, 118, 294, 333, 334, 335, 341, 351, 353, 355, 429, 430], "median": [78, 104, 105, 118, 139, 140, 183, 318, 322], "huggingfac": [80, 316], "co": [80, 202, 443], "pad_trunc": 80, "am": 80, "me": 80, "reassur": 80, "ok": 80, "primarili": [82, 219, 434], "educ": 82, "guess": 82, "knowledg": [82, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 435, 437], "tokenizer_fn": 83, "tensordicttoken": [83, 421], "pre_tokenization_hook": 83, "valid_s": 83, "tokenizer_class": 83, "tokenizer_model_nam": 83, "tokein": 83, "elementwis": 83, "vocabulari": [83, 141, 142, 237], "loader": [83, 430], "185068": 83, "dataset_to_tensordict": 83, "data_dir": 83, "batch_dim": [83, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 419], "valid_mask_kei": 83, "batch_dimens": 83, "filder": 83, "from_dict": [83, 198], "data_memmap": 83, "ref": 84, "branching_act": 84, "prev_act": 84, "edg": [84, 432], "travers": 84, "breadth": 84, "bf": 84, "fully_expand": 84, "get_vertex_by_hash": 84, "get_vertex_by_id": 84, "is_termin": 84, "make_nod": 84, "node_observ": 84, "bag": 84, "num_children": 84, "num_vertic": 84, "count_repeat": 84, "recustruct": 84, "scope": [84, 124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 432, 448], "plotli": 84, "make_label": 84, "visual": [84, 218, 243, 245, 387, 430, 441, 443], "notimplementederror": [84, 428], "unsupport": 84, "selected_act": 84, "mctsforest": [84, 142, 421], "key_typ": 84, "liter": [84, 124, 141, 198, 308], "recurse_through_entri": 91, "recurse_through_stack": 91, "infinit": [94, 146, 147, 168, 169, 436, 445], "block": [94, 97, 123, 423, 428, 431, 432, 435, 436, 441, 445], "pairwisedataset": [94, 421], "256": [94, 146, 147, 208, 264, 429, 430, 432, 441, 442], "checkpoint_fil": 96, "h5": 96, "h5_kwarg": 96, "iff": 96, "suffix": [96, 400], "h5py": 96, "create_dataset": 96, "consequ": [96, 275, 436], "immut": [97, 124, 127, 130, 134, 141, 142, 154, 158, 163, 164, 221, 240], "piec": [97, 108, 119, 122, 123, 428, 429, 430, 437, 441, 442, 443, 445], "scratch_dir": [98, 428, 429, 431, 436, 441, 444, 445], "sent": [98, 100, 120, 247], "mistak": [98, 100, 120], "overewritten": 98, "tensorstoragecheckpoint": 98, "pathlib": [98, 405, 432], "main_ckpt_dir": 98, "rb_memmap": 98, "10_000_000": 98, "myclass": [98, 100, 120], "foo": [98, 100, 120, 313, 445, 448], "bar": [98, 100, 120, 313, 398, 399, 400, 405, 425, 429], "attach": [98, 99, 100, 101, 114, 116, 120, 429], "entiti": [98, 99, 100, 101, 114, 116, 120], "lazystacktensordict": 99, "heterougen": 99, "linearli": 99, "densifi": 99, "unlimit": [99, 101], "st": 99, "expans": [100, 350], "zero_": [100, 120, 175], "liststoag": 102, "max_capac": [104, 105, 428, 445], "max_priority_within_buff": [104, 105], "data_0": 104, "data_1": 104, "smoothen": 104, "tdrb": 104, "pack": [104, 271, 275, 430, 433, 448], "nd": [104, 105], "1d": [104, 105, 112, 113, 118], "sum_tre": [104, 105], "min_tre": [104, 105], "slice_len": [105, 112, 113, 387], "end_kei": [105, 112, 113], "cache_valu": [105, 112, 113], "closer": [105, 447], "readili": [105, 112, 113, 322], "conjunct": [105, 112, 113, 429], "Will": [105, 112, 149, 387], "buffer0": [105, 112], "immutablewrit": [105, 112], "buffer1": [105, 112], "other_sampl": [105, 112], "shorter": [105, 112, 113], "short": [105, 112, 113, 124, 125, 126, 127, 130, 134, 139, 140, 141, 142, 154, 155, 158, 163, 164, 165, 170, 275, 276, 429, 430, 433, 434, 442, 445], "Be": [105, 112, 113], "fewer": [105, 112], "tolist": 105, "120110917137936e": 105, "06": [105, 265, 301], "storageensembl": [107, 110], "samplerensembl": 107, "writerensembl": [107, 116], "sample_from_al": [107, 110], "num_buffer_sampl": [107, 110], "ensembl": [107, 110, 116, 117, 123, 321, 353], "forbidden": 107, "0x13a2ef430": 107, "0x13a2f9310": 107, "interpol": [107, 222, 429, 432], "interpolationmod": 107, "bilinear": [107, 222], "0x13a2f9220": 107, "0x13a2f9f70": 107, "0x13a2d9b50": 107, "0x13a2f95b0": 107, "0x128648260": 107, "roundrobin": [108, 119], "buffer_id": [110, 116], "shuffl": [111, 113, 442], "incomplet": [111, 113], "fresh": 111, "haven": [111, 444], "draw": [111, 270], "use_gpu": [112, 113], "slicesamplerwithoutreplac": [112, 445], "acceler": [112, 113, 441, 442], "reconstruct": [112, 113, 344, 428, 448], "ep_1": [112, 113], "ep_2": [112, 113], "73": 112, "74": 112, "76": 112, "77": 112, "42": [112, 278, 293, 332, 333, 335, 336, 340, 348, 355], "43": 112, "45": 112, "67": [112, 440], "69": 112, "70": 112, "71": 112, "27": [112, 113, 125, 126, 154, 163], "28": [112, 113, 283], "31": [112, 139, 140], "80": [112, 125, 126], "82": 112, "83": 112, "84": [112, 222, 431, 432], "78": 112, "79": 112, "320": [112, 113, 128, 129], "700": [112, 113], "dataid": [112, 113], "available_dataset": [112, 113], "counter": [113, 238, 317, 398, 425, 432], "23": [113, 251], "request": [113, 187, 219], "51": 113, "__len__": 114, "rank_kei": 118, "rank": [118, 254], "samplerwithoutreplac": [118, 430, 442, 445], "get_insert_index": 118, "themselv": [124, 255, 429], "dens": [124, 281, 282], "maybe_dens": 124, "min_get": [124, 158, 164], "maker": [124, 419, 429], "sort": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 191, 294], "another_act": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "discretebox": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "mutabl": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "action_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 430, 442], "had": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 434, 436], "all_act": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "any_don": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "loc": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 214, 225, 247, 248, 274, 302, 303, 310, 311, 312, 318, 322, 324, 332, 333, 335, 348, 352, 353, 354, 355, 409, 419, 423, 428, 429, 430, 431, 434, 442, 447], "_callabletransform": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "auto_specs_": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "action_spac": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 202, 267, 296, 314, 315, 319, 320, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 431, 432, 434, 438], "check_dtyp": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170], "discrep": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 332, 334, 336, 337, 349, 352, 354, 365], "broken": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170], "rng": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 170, 443], "done_keys_group": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "another_don": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "done_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "empty_cach": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 240], "fake_tensordict": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 429, 432], "envnam": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "full_action_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 441, 442], "full_done_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "full_observation_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "full_reward_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "pipeline_st": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "full_state_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "input_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "is_spec_lock": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "maybe_reset": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "speak": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 195, 322, 428], "observation_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "output_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "register_gym": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 433], "entry_point": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "info_kei": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "reward_threshold": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "nondeterminist": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "max_episode_step": [124, 127, 130, 133, 134, 135, 141, 142, 154, 155, 158, 163, 164, 165], "order_enforc": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "autoreset": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "disable_env_check": [124, 127, 130, 133, 134, 141, 142, 149, 150, 154, 155, 158, 163, 164, 165], "apply_api_compat": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "nasium": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 178], "dmcontrolenv": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 387, 421, 428, 433, 440, 448], "dmc": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "cheetah": [124, 127, 128, 129, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 387, 428], "removeemptyspec": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "threshold": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 270, 333, 334, 430], "learnt": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 415], "checker": [124, 127, 130, 133, 134, 141, 142, 149, 150, 154, 155, 158, 163, 164, 165], "stepapicompat": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "deem": [124, 127, 130, 134, 141, 142, 146, 147, 154, 155, 158, 163, 164, 165, 168, 169], "task_nam": [124, 127, 128, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "envgym": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0855": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0215": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0881": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0412": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "1101": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0080": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0254": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0424": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "veloc": [124, 127, 128, 129, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 441, 442, 443, 448], "9609e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "9776e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "04": [124, 127, 130, 134, 138, 141, 142, 154, 155, 158, 163, 164, 165, 235], "6347e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "3842e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "5338e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "3064e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0381e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "6656e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "05": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 235, 253, 443], "0204e": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0833": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0275": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0612": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0770": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "1256": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0082": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0186": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0476": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "2221": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "2256": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "5930": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "6937": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "5865": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "5479": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0187": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "6825": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "5224": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0018": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "1005": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0335": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 195], "0268": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0133": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0627": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0074": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0488": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0353": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0075": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0069": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0098": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0058": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0033": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0157": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0004": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 235], "0381": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0452": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "11355747": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "04257728": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "00408397": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "04155852": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0389733": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "01409826": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0978704": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "08808327": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "03970837": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "00535434": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "02353762": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "05116226": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "02788907": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "06848346": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "05154399": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "0371798": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "05128025": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "dydact": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "ant": [124, 125, 126, 127, 130, 134, 137, 141, 142, 154, 155, 158, 163, 164, 165, 444], "gym_env": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 447], "reset_kei": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 190, 226, 232, 233, 234, 441], "multitask": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "multiag": [124, 127, 130, 134, 141, 142, 145, 154, 155, 156, 157, 158, 163, 164, 165, 182, 284, 295, 304, 334, 349, 352, 365], "another_reward": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "reward_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "auto_cast_to_devic": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 442], "soon": [124, 127, 130, 134, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165], "__sort": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "as__": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "categorical_action_encod": [124, 125, 126, 127, 130, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 154, 155, 158, 160, 163, 164, 165, 178, 432], "argmaxmodul": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "argmax": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 267, 296, 315, 320, 432, 434], "n_act": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 210, 332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 435], "ourselv": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 430, 448], "emul": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "epoch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 405, 430, 441, 442], "input_td": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "rollout_td": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "state_spec_unbatch": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "prevail": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 182, 191, 226], "next_tensordict": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181, 187, 191, 203, 204, 205, 210, 217, 220, 221, 227, 230, 243, 247], "precomput": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165], "_stepmdp": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181], "exclude_act": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 181], "reset_data": [124, 127, 130, 134, 141, 142, 154, 155, 158, 163, 164, 165, 448], "googl": [125, 126, 146, 147, 152, 153, 253, 430, 431, 441, 442], "convers": [125, 126, 139, 140, 141, 178, 424], "2106": [125, 126, 338, 357], "13281": [125, 126], "frame_skip": [125, 126, 128, 129, 133, 134, 135, 136, 139, 140, 143, 144, 149, 150, 160, 206, 398, 400, 408, 425, 428, 429, 430, 447], "allow_done_after_reset": [125, 126, 128, 129, 130, 133, 135, 136, 139, 140, 149, 150, 152, 153, 160, 166, 167], "toler": [125, 126, 128, 129, 133, 135, 136, 139, 140, 149, 150, 152, 153, 160, 166, 167, 265, 301], "is_avail": [125, 126, 428, 429, 430, 431, 441, 442, 444], "87": [125, 126], "acrobot": [125, 126, 128, 129, 448], "advant": [125, 126, 139, 140], "timer": [125, 126, 139, 140], "timeit": [125, 126, 139, 140, 432], "310": [125, 126], "ms": [125, 126, 139, 140], "268": [125, 126], "433": [125, 126], "213": [125, 126], "8605": [125, 126], "pipelineenv": 126, "get_environ": 126, "san": 127, "fen": [127, 152, 153], "pgn": 127, "legal": 127, "board": [127, 165], "include_san": 127, "algebra": [127, 443], "notat": 127, "include_fen": 127, "forsyth": 127, "edward": 127, "include_pgn": 127, "portabl": [127, 437], "include_legal_mov": 127, "include_hash": 127, "mask_act": 127, "subset": [127, 443, 444], "29275": 127, "rnbqkbnr": [127, 152, 153], "pppppppp": [127, 152, 153], "kqkq": [127, 152, 153], "legal_mov": 127, "219": 127, "5p2": 127, "ppppp1pp": 127, "event": [127, 281, 282, 290, 376, 377, 378, 379, 381, 382, 383, 384, 445], "white": 127, "f4": 127, "96": 127, "kq": 127, "5n2": 127, "rnbqkb1r": 127, "nf3": 127, "na6": 127, "c4": 127, "f6": 127, "h4": 127, "rb8": 127, "na3": 127, "ra": 127, "get_legal_mov": 127, "uci": 127, "dm_control": [128, 129, 428, 440, 448], "2006": [128, 129, 333, 339], "12983": [128, 129], "240": [128, 129, 447], "swingup": [128, 129, 448], "swingup_spars": [128, 129], "ball_in_cup": [128, 129], "catch": [128, 129, 432], "balance_spars": [128, 129], "three_pol": [128, 129], "two_pol": [128, 129], "finger": [128, 129], "turn_easi": [128, 129], "turn_hard": [128, 129], "fish": [128, 129], "upright": [128, 129, 429], "swim": [128, 129], "hopper": [128, 129], "hop": [128, 129], "humanoid": [128, 129, 154, 163, 440], "walk": [128, 129, 154, 163, 429, 440], "run_pure_st": [128, 129], "bring_bal": [128, 129], "bring_peg": [128, 129], "insert_bal": [128, 129], "insert_peg": [128, 129], "point_mass": [128, 129], "reacher": [128, 129], "swimmer": [128, 129], "swimmer6": [128, 129], "swimmer15": [128, 129], "walker": [128, 129], "dog": [128, 129], "trot": [128, 129], "humanoid_cmu": [128, 129], "lqr": [128, 129], "lqr_2_1": [128, 129], "lqr_6_2": [128, 129], "quadrup": [128, 129], "escap": [128, 129], "stacker": [128, 129], "stack_2": [128, 129], "stack_4": [128, 129], "deviceless": 130, "run_type_check": [130, 148], "hint": 130, "counterenv": 130, "creator": [131, 410, 411, 417, 418, 419], "substitut": [131, 232, 247, 434], "vecnorm": [131, 248, 419], "env_creat": [131, 428], "test_env1": 131, "_td": [131, 343], "observation_count": [131, 448], "test_env2": 131, "ps": 131, "p1": 131, "p2": 131, "9934": 131, "make_vari": [131, 238], "variant": [131, 238, 255, 423], "trajcount": 131, "env_creator_pendulum": 131, "env_creator_cartpol": 131, "env_str": 132, "device_map": 132, "registri": [133, 166], "asyncvectorenv": 133, "pixel_observ": [133, 135, 136, 160], "pixelobservationwrapp": [133, 135, 136, 160], "adventur": [133, 135], "airraid": [133, 135, 448], "alien": [133, 135], "time_limit": 133, "timelimit": [133, 146, 147, 168, 169], "default_info_dict_read": [133, 134, 135, 154], "reader": [133, 134, 135, 154, 429], "set_info_dict_read": [133, 134, 135, 154, 433], "info_dict": [133, 134, 135, 154], "gymlikeenv": [133, 135, 421], "auto_register_info_dict": [133, 134, 135, 154], "multibinari": [133, 135], "multidiscret": [133, 135], "rag": [133, 135], "gym_conversion_exampl": [133, 135], "info_dict_read": [134, 154], "ignore_priv": 134, "baseinfodictread": 134, "tensordictprim": [134, 154, 256, 273, 277, 329, 423, 431], "succe": [134, 154], "underscor": 134, "primer": [134, 141, 198, 233, 256, 273, 277, 329, 431], "halfcheetah": [134, 154, 183, 222, 428, 447], "reward_ctrl": [134, 154], "reward_run": [134, 154], "x_posit": [134, 154], "x_veloc": [134, 154], "raise_if_clos": 134, "read_act": 134, "read_don": 134, "nonsens": 134, "fallback": 134, "read_ob": 134, "dictat": [134, 211, 318, 322, 352, 428, 443], "read_reward": 134, "hoc": [134, 154, 434], "dict_read": 134, "my_info_kei": 134, "some_env": 134, "vecenv": 135, "vectorenv": 135, "convert_actions_to_numpi": 135, "secur": 136, "habitat3": 136, "ai": [136, 444], "habitatrenderpick": 136, "isaacgym": [137, 138], "isaacgymwrapp": [137, 421], "isaacgymenv": [138, 421], "webpag": 138, "isaac": 138, "essenc": [138, 433], "instadeepai": [139, 140], "2306": [139, 140], "09884": [139, 140], "snake": [139, 140], "grid": [139, 140, 387], "bodi": [139, 140], "body_st": [139, 140], "fruit_posit": [139, 140], "col": [139, 140], "head_posit": [139, 140], "tail": [139, 140], "game2048": [139, 140], "maze": [139, 140], "cleaner": [139, 140], "cvrp": [139, 140], "multicvrp": [139, 140], "minesweep": [139, 140], "rubikscub": [139, 140], "knapsack": [139, 140], "sudoku": [139, 140], "tsp": [139, 140], "connector": [139, 140], "v2": [139, 140, 161, 162, 361, 376, 377, 378, 379, 381, 382, 383, 384, 431], "mmst": [139, 140], "graphcolor": [139, 140], "partli": [139, 140], "scrambl": [139, 140], "robotwarehous": [139, 140], "tetri": [139, 140], "binpack": [139, 140], "jobshop": [139, 140], "0x1fca91910": 139, "122": [139, 140, 448], "0x1ff9baee0": 139, "134": [139, 140], "0x1ff9ba7c0": 139, "172": [139, 140], "jit": 140, "eager": 140, "tdreset": [140, 250, 440], "whichev": 140, "drastic": [140, 154, 445], "histori": 141, "cot": 141, "from_dataload": [141, 198], "vllm": 141, "vllmwrapper": 141, "token_kei": 141, "str2str": [141, 198], "str_kei": 141, "attention_kei": 141, "assign_reward": 141, "vocab_s": [141, 142], "no_stack": 141, "has_attent": 141, "assign_don": 141, "batchless": 141, "dataloadingprim": [141, 233], "pretrainedtokenizerbas": [141, 237], "as_llm_data": 141, "data_kei": [141, 198], "data_spec": [141, 198], "stack_method": [141, 198], "as_nested_tensor": [141, 198], "as_padded_tensor": [141, 198], "group_repeat": [141, 198], "bert": [141, 237], "uncas": [141, 237], "tokens_in": 141, "tokens_out": 141, "grpo": [141, 198], "overview": [142, 430, 432, 435, 441, 442, 447], "hashing_modul": 142, "text_output": 142, "decod": [142, 176, 288], "batch_decod": 142, "text_kei": 142, "gpt2token": 142, "make_tensordict": 142, "mo": [143, 144], "minecart": [143, 144], "mo_gym": [144, 211], "qualnam": 145, "neural": [145, 156, 157, 257, 258, 291, 293, 299, 321, 423, 429, 430, 431, 434, 441, 442, 443, 448], "group_map": [145, 146, 147, 152, 153, 156, 157, 166, 167, 168, 169, 171, 441], "constructiuon": [145, 156, 157], "premad": [145, 146, 147, 156, 157, 168, 169, 365], "all_in_one_group": [145, 152, 153, 171], "agent_0": [145, 156, 157, 166, 171, 230], "agent_1": [145, 156, 157, 166, 171, 230], "agent_2": [145, 156, 157, 166, 171], "agent_3": [145, 166], "one_group_per_ag": [145, 156, 157], "meltingpot": [146, 147], "2211": [146, 147], "13746": [146, 147], "melt": [146, 147], "pot": [146, 147], "novel": [146, 147, 435], "social": [146, 147], "familiar": [146, 147, 429, 442, 448], "unfamiliar": [146, 147], "broad": [146, 147], "cooper": [146, 147, 441, 442], "decept": [146, 147], "reciproc": [146, 147], "stubborn": [146, 147], "substrat": [146, 147], "ml_collect": 146, "config_dict": 146, "configdict": 146, "categorical_act": [146, 147, 152, 153, 156, 157, 161, 162, 166, 167, 168, 169], "marlgroupmaptyp": [146, 147, 152, 153, 156, 157, 166, 167, 168, 169, 171, 421, 441], "agent_nam": [146, 147, 168, 169, 171], "agent_names_to_indices_map": [146, 147, 168, 169], "env_torchrl": [146, 147], "commons_harvest__open": [146, 147], "rgb": [146, 147], "144": [146, 147], "192": [146, 147], "collective_reward": [146, 147], "ready_to_shoot": [146, 147], "88": [146, 147, 161, 162], "substrate_config": 147, "get_config": 147, "mp_env": 147, "build_from_config": 147, "default_player_rol": 147, "mymbenv": [148, 254, 280], "world_model": [148, 254, 280, 344], "hidden_observ": [148, 254, 280], "mlp": [148, 254, 257, 258, 260, 261, 262, 263, 269, 273, 277, 280, 284, 285, 310, 314, 329, 337, 339, 423, 429, 432, 434, 435, 438, 440, 444, 447], "worldmodelwrapp": [148, 254, 280], "activation_class": [148, 254, 257, 258, 260, 261, 262, 263, 268, 269, 278, 280, 283, 284, 429, 434, 441, 442, 447], "activate_last_lay": [148, 254, 263, 278, 280], "sail": [149, 150], "sg": [149, 150], "2206": [149, 150], "10558": [149, 150], "readthedoc": [149, 152, 153], "en": [149, 152, 153], "python_interfac": 149, "envpoolmixin": 150, "env_bas": 150, "task_id": 150, "env_typ": 150, "gym_reset_return_info": 150, "envpool_env": 150, "www": [151, 281, 282], "fetch_openml": 151, "adult_num": 151, "adult_onehot": 151, "mushroom_num": 151, "mushroom_onehot": 151, "covertyp": 151, "shuttl": 151, "magic": [151, 432, 433], "106": 151, "openspiel": [152, 153], "open_spiel": [152, 153], "game_str": 152, "return_st": [152, 153, 156, 157], "4672": [152, 153], "current_play": [152, 153], "674": 152, "2048": [152, 153], "add_nois": [152, 153], "amazon": [152, 153], "backgammon": [152, 153], "restor": [152, 153], "td_restor": [152, 153], "pyspiel": 153, "load_gam": 153, "new_initial_st": 153, "3009": 153, "my_env_fun": [154, 163], "custom_attribute_list": [154, 163], "custom_attribut": [154, 163], "custom_method_list": [154, 163], "custom_method": [154, 163], "deploi": [154, 163, 187, 432], "slight": [154, 163, 429], "share_individual_td": [154, 163], "shared_memori": [154, 163], "policy_proof": [154, 163], "ll": [154, 163, 271, 272, 275, 276, 428, 429, 430, 431, 433, 434, 435, 436, 438, 442, 448], "hidden": [154, 163, 189, 260, 268, 271, 272, 273, 275, 276, 277, 288, 289, 297, 298, 310, 311, 312, 313, 321, 324, 334, 349, 352, 423, 431, 440, 447], "serial_for_singl": [154, 163, 429], "circular": [154, 163, 428], "list_of_kwarg": [154, 163], "com_veloc": [154, 163], "head_height": [154, 163], "joint_angl": [154, 163], "torso_vert": [154, 163], "timeout": 154, "idl": 154, "batched_pipe_timeout": 154, "stringent": [154, 430, 441, 442], "penv": [154, 238], "env_fix": 154, "influenc": 154, "myenv": [154, 187, 197, 201], "pipe": 154, "update_kwarg": [154, 163], "th": [155, 205, 242, 271, 275, 443], "thdot": [155, 443], "max_spe": [155, 443], "max_torqu": [155, 443], "gen_param": [155, 443], "gravit": [155, 443], "torqu": [155, 443], "pettingzoo": [156, 157, 441, 442], "pet": [156, 157], "zoo": [156, 157], "__": [156, 157], "aecenv": [156, 157], "dead": [156, 157], "done_on_ani": [156, 157, 441], "compulsori": [156, 157], "adversary_0": [156, 157], "adversari": [156, 157, 346, 441], "sisl": 156, "multiwalker_v9": 156, "aec": [156, 157], "n_piston": [156, 157], "pistonball_v6": [156, 157], "piston": [156, 157], "piston_0": [156, 157], "piston_1": [156, 157], "piston_20": [156, 157], "tictactoe_v3": [156, 157], "player": [156, 157, 165], "player_1": [156, 157], "player_2": [156, 157], "butterfli": 157, "parallel_env": [157, 428, 447, 448], "_setup": [158, 164], "queue": [158, 198, 247, 445, 447], "async_reset_send": [158, 164], "async_reset_recv": [158, 164], "cube": 159, "roboh": 160, "expos": [160, 197, 201, 323, 429], "vikashplu": 160, "wiki": 160, "2310": 160, "06828": 160, "from_depth": 160, "smacv2": [161, 162], "starcraft": [161, 162], "challeng": [161, 162, 433, 443, 444], "10gen_terran": [161, 162], "10gen_zerg": [161, 162], "10gen_protoss": [161, 162], "3m": [161, 162], "8m": [161, 162], "25m": [161, 162], "5m_vs_6m": [161, 162], "8m_vs_9m": [161, 162], "10m_vs_11m": [161, 162], "27m_vs_30m": [161, 162], "mmm": [161, 162], "mmm2": [161, 162], "2s3z": [161, 162], "3s5z": [161, 162], "3s5z_vs_3s6z": [161, 162], "3s_vs_3z": [161, 162], "3s_vs_4z": [161, 162], "3s_vs_5z": [161, 162], "1c3s5z": [161, 162], "2m_vs_1z": [161, 162], "corridor": [161, 162], "6h_vs_8z": [161, 162], "2s_vs_1sc": [161, 162], "so_many_banel": [161, 162], "bane_vs_ban": [161, 162], "2c_vs_64zg": [161, 162], "old": [161, 162, 349, 448], "smac": [161, 162], "map_nam": [161, 162], "176": [161, 162], "battle_won": [161, 162], "dead_al": [161, 162], "dead_enemi": [161, 162], "episode_limit": [161, 162], "322": [161, 162], "procedur": [161, 162], "distribution_config": [161, 162], "n_unit": [161, 162], "n_enemi": [161, 162], "team_gen": [161, 162], "dist_typ": [161, 162], "weighted_team": [161, 162], "unit_typ": [161, 162], "marin": [161, 162], "maraud": [161, 162], "medivac": [161, 162], "exception_unit_typ": [161, 162], "start_posit": [161, 162], "surrounded_and_reflect": [161, 162], "map_x": [161, 162], "map_i": [161, 162], "capability_config": [161, 162], "131": [161, 162], "starcraft2env": 162, "tic": 165, "tac": 165, "toe": 165, "single_play": 165, "player1": 165, "desired_batch_s": 165, "player0": 165, "uniti": [166, 167], "ml": [166, 167], "technolog": [166, 167], "llapi": [166, 167], "mlagents_env": [166, 167], "unityenviron": [166, 167], "file_nam": 166, "registered_nam": 166, "nor": 166, "localhost": 166, "connect": 166, "3dball": 166, "group_0": 166, "vectorsensor_size8": 166, "continuous_act": [166, 168, 169, 385, 441, 442], "agent_10": 166, "agent_11": 166, "agent_4": 166, "agent_5": 166, "agent_6": 166, "agent_7": 166, "agent_8": 166, "agent_9": 166, "group_reward": 166, "proroklab": [168, 169], "vectorizedmultiagentsimul": [168, 169], "2207": [168, 169], "03530": [168, 169], "basescenario": 168, "defaultt": 168, "chosen": [168, 169, 232, 233, 295, 296, 304, 320, 387, 423, 437], "sparsiti": 168, "unbatched_action_spec": [168, 169], "unbatched_observation_spec": [168, 169], "unbatched_reward_spec": [168, 169], "het_spec": [168, 169], "het_specs_map": [168, 169], "flock": [168, 169, 385], "agent_collision_rew": [168, 169], "agent_distance_rew": [168, 169], "ca": 171, "environment4": 171, "get_group_map": 171, "sumbodul": 174, "unsqueeze_null_shap": 175, "dynamic_shap": 175, "model_bas": [176, 177, 254, 280], "model_based_env": [176, 343], "dreamerenv": [176, 343, 421], "model_based_env_ev": 176, "spec_typ": 178, "convert_specnam": 178, "remap_state_to_observ": 178, "spectyp": 178, "probabilistictdmodul": [179, 278, 318, 322, 366, 400], "keep_oth": [181, 443], "exclude_reward": 181, "exclude_don": 181, "next_": 181, "write_full_fals": 182, "_terminated_or_trunc": 182, "num_interv": 183, "out_action_kei": 183, "samplingstrategi": 183, "optino": 183, "intenum": 183, "action_disc": 183, "masker": 184, "maskedenv": 184, "ones_lik": [184, 281], "scatter": 184, "transformthatmeasuresbyt": [184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250], "bytes_in_td": [184, 186, 187, 189, 190, 191, 194, 195, 199, 202, 203, 204, 206, 209, 210, 217, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 250], "fill_float": 186, "fill_int": 186, "fill_bool": 186, "someenvclass": 186, "autoresetenv": 186, "fooenv": 186, "sign": [186, 228, 367, 441], "envtyp": 186, "reshape_fn": [187, 432], "reset_func": 187, "env_kwarg": [187, 417, 418, 428], "accompani": [187, 231], "tensordict_batch_s": 187, "tensordict_reset": [187, 443], "transform_env_batch_s": [187, 194, 239, 250], "untouch": [187, 194, 197, 199, 203, 210, 212, 220, 221, 227, 231, 237, 239, 241, 248, 250], "transform_full_done_spec": [187, 194, 197, 199, 203, 210, 212, 220, 221, 227, 231, 237, 239, 241, 248, 250], "biner": 188, "burn_in": 189, "burn": 189, "burnt": 189, "gru_modul": [189, 273, 329], "input_s": [189, 233, 271, 272, 273, 275, 276, 277, 329, 431, 432], "hidden_s": [189, 233, 271, 272, 273, 275, 276, 277, 329, 431, 432], "default_recurrent_mod": [189, 273, 277], "burn_in_transform": 189, "gru": [189, 233, 272, 273, 329, 432], "num_lay": [189, 271, 273, 275, 277, 288, 289, 329, 432], "is_init": [189, 209, 273, 277, 294, 317, 329, 431, 432], "86": 189, "3008": 189, "0344": 189, "padding_valu": [190, 281, 282], "as_invers": 190, "movement": 190, "1312": 190, "5602": 190, "consumpt": [190, 421], "pictur": 190, "pixels_trsf": [190, 445], "grayscal": [190, 429, 431, 432, 445, 448], "data_exclud": [190, 445], "make_rb_transform_and_sampl": 190, "sampler_kwarg": 190, "redund": [190, 431], "del_kei": [191, 230, 243, 440, 443], "unsqueeze_if_oor": 191, "observation_posit": 191, "observation_veloc": 191, "delet": [191, 230, 394], "crop": [192, 219, 387], "center": [192, 293, 387], "width": [192, 196, 222], "height": [192, 196, 222], "squar": [192, 196, 274, 302, 303, 387], "scalar": [193, 224, 252, 261, 263, 270, 286, 287, 294, 328, 332, 333, 334, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 365, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 423, 429, 435, 443], "rewardsc": [194, 240, 428, 429, 431], "rewardclip": 194, "transformed_env": [194, 240, 433], "transform_env_devic": [194, 199, 239, 250], "cond": 195, "met": [195, 331, 441, 443], "altogeth": 195, "exectu": 195, "palliat": [195, 434], "step_count_kei": [195, 231], "inner_count": 195, "middle_env": 195, "middle_count": 195, "auto_unwrap": [195, 240, 395], "9670": 195, "2546": 195, "9669": 195, "9802": 195, "1981": 195, "1601": 195, "9926": 195, "1214": 195, "5556": 195, "9994": 195, "7622": 195, "9984": 195, "0561": 195, "7933": 195, "9895": 195, "1445": 195, "7779": 195, "dtype_in": 197, "dtype_out": 197, "scan": [197, 201, 323, 324], "resp": [197, 201], "not_transform": [197, 201], "auto_batch_s": 198, "progress": [198, 398, 399, 400, 405, 425, 429, 431, 448], "maybe_dense_stack": 198, "unrel": 198, "llmenv": [198, 421], "endless_dataload": 198, "set_capture_non_tensor_stack": 198, "dummydataload": 198, "generate_random_str": 198, "ascii_lowercas": 198, "__iter__": 198, "__next__": 198, "zxwvupirska": 198, "stringa": 198, "zxwvupirsk": 198, "roll": 198, "init_st": 198, "nngcmflsana": 198, "vrrbnhzpmga": 198, "nngcmflsan": 198, "vrrb": 198, "dummytensordataload": 198, "generate_random_tensor": 198, "pad_tensor": 198, "padding_length": 198, "orig_devic": 199, "unspecifi": 199, "transform_done_spec": [199, 230, 237, 239, 241, 250], "num_actions_effect": 200, "max_act": 200, "include_forward": 200, "num_act": [200, 258, 341, 432, 434], "action_out": 200, "eol_kei": 202, "lives_kei": 202, "eol_attribut": 202, "breakout": 202, "210": [202, 216], "160": [202, 216], "eol_transform": 202, "eol": 202, "dqnloss": [202, 332, 333, 335, 336, 339, 341, 342, 343, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 365, 412, 421, 424, 429, 431, 432, 438], "register_kei": 202, "loss_or_advantag": 202, "lossmodul": [202, 405, 414, 415, 421, 424], "valueestimatorbas": [202, 350, 421], "finit": [204, 293, 434, 445], "first_dim": 205, "last_dim": 205, "allow_positive_dim": [205, 230, 242], "frameskip": 205, "repeatedli": [206, 430, 442], "hash_fn": 208, "use_raw_nontensor": [208, 237, 241], "repertoir": 208, "reproducible_hash": 208, "unarytransform": 208, "observation_str": 208, "tobyt": [208, 241], "observation_hash": 208, "x08": 208, "x8b": 208, "xbexav": 208, "xbf": 208, "x00": 208, "xee": 208, "xb5": 208, "x17": 208, "x8f": 208, "xbe": [208, 241], "x88": 208, "xccu": 208, "xc0vr": 208, "get_input_from_hash": 208, "hash_tensor": 208, "init_kei": [209, 317], "tracker": 209, "log_prob_kei": [210, 322, 424], "pi_curr": 210, "pi_0": 210, "overfit": 210, "probabilist": [210, 318, 332, 352, 421, 430, 447], "get_dist": [210, 322, 323], "normalparamextractor": [210, 310, 311, 312, 318, 324, 332, 333, 335, 341, 348, 352, 353, 354, 355, 357, 358, 423, 430, 434, 442, 447], "probabilisticactor": [210, 310, 311, 312, 313, 332, 333, 335, 338, 340, 341, 348, 351, 352, 353, 354, 355, 357, 358, 423, 428, 430, 434, 441, 442], "tanhnorm": [210, 310, 311, 312, 318, 324, 332, 333, 335, 348, 352, 353, 354, 355, 357, 358, 421, 430, 442, 447], "return_log_prob": [210, 310, 311, 312, 318, 322, 324, 354, 423, 430, 434, 441, 442, 447], "apply_": 210, "copy_": [210, 428], "formula": [210, 274, 302, 303, 332, 334, 349, 352, 424, 430], "mogymwrapp": [211, 421], "mo_env": 211, "sea": 211, "treasur": 211, "so_env": 211, "stack_reward": 212, "stack_observ": 212, "auto_batch_size_": 212, "macro": [212, 317], "noop": 213, "trial": 213, "standard_norm": [214, 225, 247, 248, 428, 429, 431], "affin": [214, 225, 247, 248], "layer": [214, 247, 253, 257, 258, 260, 261, 266, 268, 271, 272, 273, 275, 276, 277, 278, 283, 284, 286, 287, 288, 289, 299, 300, 307, 316, 325, 423, 429, 430, 431, 432, 434, 441, 444], "epsilon": [214, 252, 270, 294, 356, 403, 429, 430, 431, 434], "recover": 214, "set_default_tensor_typ": 214, "doubletensor": 214, "isclos": 214, "next_ob": [214, 367, 368, 369, 370, 447], "init_stat": [214, 428, 429, 430, 431], "3752e": 214, "5087e": 214, "9294e": 214, "9636": 214, "5608": 214, "6408": 214, "num_it": [214, 429, 430], "reduce_dim": [214, 428, 429, 430, 431], "cat_dim": [214, 428, 429, 430, 431], "keep_dim": [214, 317, 429, 431], "statist": [214, 247, 248, 253, 354, 419, 428, 429, 430, 448], "gaussian": [214, 233, 252, 254, 280, 286, 287, 292, 430, 432, 441], "empir": [214, 254, 280, 318, 322, 428, 430, 442], "3d": [214, 257], "reorder": 216, "in_keys_in": [216, 242], "channel": [216, 236, 283, 288, 289, 429], "r3m": [218, 444], "resnet": [218, 243, 245], "ego4d": [218, 243, 245], "univers": [218, 243, 245, 433], "suraj": [218, 243], "nair": [218, 243], "aravind": [218, 243], "rajeswaran": [218, 243], "vikash": [218, 243, 245], "kumar": [218, 243, 245], "chelsea": [218, 243], "finn": [218, 243], "abhinav": [218, 243], "gupta": [218, 243], "2203": [218, 243, 280, 444], "12601": [218, 243, 444], "_init": [218, 243, 428], "resnet50": [218, 245, 444], "model_nam": [218, 243, 245, 390], "resnet34": 218, "resnet18": 218, "r3m_vec": [218, 444], "stack_imag": [218, 245], "tread": [218, 245], "hub": [218, 245, 433], "resnet50_weight": [218, 245], "imagenet1k_v1": [218, 245], "download_path": [218, 245], "tensor_pixels_kei": [218, 245], "sub_seq_len": 219, "sample_dim": [219, 428], "hesit": 219, "mix": [219, 295, 304, 365, 428, 441, 442], "improp": 219, "dummyenv": 220, "another_oth": 220, "other_reward": 220, "create_copi": 221, "stuff": [221, 436], "newnam": 221, "r2g": 223, "reward_to_go": 223, "bernoulli_": 223, "9010": 223, "9404": [223, 373], "9701": [223, 373], "9900": [223, 373], "0000": [223, 234, 235, 270, 293, 325, 373], "clamp_min": 224, "clamp_max": 224, "clip_min": 224, "clip_max": 224, "episode_": 226, "reward1": 226, "reward2": 226, "episode_reward": [226, 441, 442], "keep_reward": 227, "keep_don": 227, "logical_or": 228, "in_key_inv": 230, "unstack": 230, "update_don": 231, "disjunct": 231, "recognis": 231, "target_return": 232, "default_valu": [233, 329], "expand_spec": 233, "single_default_valu": 233, "call_before_env_reset": 233, "unit": [233, 254, 268, 271, 272, 288, 289, 297, 298, 430], "scala": 233, "mykei": 233, "__unless": 233, "exists__": 233, "get_primers_from_modul": [233, 256, 273, 277, 421], "recurrent_st": [233, 273, 277, 329, 431], "10th": 234, "0216": 234, "1149": 234, "1990": 234, "2749": 234, "3281": 234, "9290": 234, "3702": 234, "8978": 234, "time_kei": 235, "elaps": [235, 437], "monitor": [235, 433], "expend": 235, "_polici": 235, "time_reset": 235, "time_polici": 235, "time_step": [235, 276, 317], "0882": 235, "0002": 235, "5797e": 235, "6289e": 235, "7990e": 235, "0824e": 235, "0837e": 235, "6056e": 235, "2016e": 235, "1062e": 235, "7009e": 235, "from_int": 236, "shape_toler": 236, "ri": 236, "additional_token": 237, "skip_special_token": 237, "add_special_token": 237, "return_attention_mask": 237, "missing_toler": 237, "call_before_reset": 237, "traj_count": 238, "traj": 238, "countingenv": 238, "mocking_class": 238, "make_env_c0": 238, "make_env_c1": 238, "set_contain": 239, "reset_par": 239, "smoothli": [240, 253], "add_1": 240, "cache_spec": 240, "set_missing_toler": 240, "inv_fn": 241, "unari": 241, "durin": 241, "ommit": 241, "observation_trsf": 241, "xbc": 241, "x7f": 241, "x859": 241, "x81": 241, "x9a": 241, "xbd": 241, "xb8t8": 241, "test_input_spec": 241, "test_output_spec": 241, "danger": 242, "vc1": 243, "vc1_vec": 243, "untrain": 243, "make_noload_model": 243, "vip": [244, 245, 444], "implicit": [245, 340, 348, 445], "jason": 245, "ma": 245, "shagun": 245, "sodhani": 245, "dinesh": 245, "jayaraman": 245, "osbert": 245, "bastani": 245, "ami": 245, "zhang": 245, "vip_vec": 245, "final_nam": 246, "sb3": 246, "terminal_obs_read": 246, "truli": [246, 447], "vecnormv2": 247, "new_api": [247, 248], "to_observation_norm": [247, 248], "frozen_copi": [247, 248], "shared_td": 247, "race": 247, "decai": [247, 248, 252, 270, 356, 403, 428, 429, 431, 448], "underflow": [247, 403], "build_td_for_shared_vecnorm": 247, "memmori": 247, "td_share": 247, "v": [247, 271, 272, 275, 276, 310, 340, 348, 355, 428, 429], "unfreez": [247, 248], "observationnorm": [247, 248, 419, 428, 429, 430, 431, 447], "train_env": 247, "eval_env": 247, "9999": 248, "0001": [248, 268], "shared_data": 248, "varianc": [248, 253, 254, 255, 274, 302, 303, 424, 428, 430, 442], "vs": [248, 251, 273, 277], "_cast_int_to_float": 248, "state_dim": [249, 259, 264, 292, 297, 298, 313], "action_dim": [249, 259, 260, 262, 264, 292, 313, 428, 440], "gsde": [249, 353, 419], "gsdemodul": 249, "rb_transform": 250, "resist": 250, "insensit": 250, "sensit": [250, 429, 431], "_orig": 250, "95": [250, 280, 360, 430, 431], "window": [250, 317, 441, 445, 447], "module_nam": [251, 350], "from_vers": 251, "to_vers": 251, "class_method": 251, "import_modul": 251, "get_class_that_defined_method": 251, "module_set": 251, "setters_dict": 251, "setter": 251, "setter_dict": 251, "po": 252, "sigma_init": [252, 441], "sigma_end": [252, 441], "annealing_num_step": [252, 270, 294, 428, 429, 431, 432, 434, 438, 441], "sigma": [252, 271, 272, 274, 275, 276, 294, 302, 303, 430, 441], "omiss": [252, 270, 294], "momentum": 253, "max_r": 253, "max_d": 253, "warmup_step": 253, "batchrenorm": 253, "1702": 253, "03275": 253, "corenet": 253, "enhanc": 253, "warmup": 253, "phase": [253, 255, 442, 445], "outlier": 253, "period": 253, "warm": 253, "renorm": 253, "entropi": [254, 290, 332, 333, 334, 335, 340, 341, 348, 349, 351, 352, 353, 355, 357, 358, 442], "botev": 254, "2013": 254, "cem": 254, "plan": [254, 279, 280], "k": [254, 256, 271, 272, 275, 276], "maximis": [254, 260, 262, 280, 429, 430, 442], "modelbasedenv": [254, 280], "planning_horizon": [254, 280], "optim_step": [254, 280, 432, 438], "mpc": [254, 279, 280], "num_candid": [254, 280], "candid": [254, 280], "top_k": [254, 280], "modelbasedenvbas": [254, 279, 280, 421], "safemodul": [254, 279, 310, 312, 322, 332, 333, 335, 340, 341, 348, 352, 353, 354, 355, 357, 358, 410, 411, 415, 421, 447], "hausknecht": 255, "wagen": 255, "reus": [255, 260, 394], "consistentdropoutmodul": [255, 423], "capit": 255, "conceptu": 255, "devianc": 255, "set_exploration_typ": [255, 350, 400, 421, 423, 430, 431, 432, 434, 441, 447], "_main_async_collector": 255, "asyncdatacollector": [255, 421], "ditto": 255, "consistentdropout": 256, "input_shap": 256, "batcht": 256, "make_tensordict_prim": [256, 273, 277, 431], "input_dtyp": 256, "get_default_dtyp": [256, 403], "mask_6127171760": 256, "env0": [256, 448], "num_cel": [257, 258, 260, 261, 262, 263, 268, 269, 273, 277, 278, 283, 284, 310, 329, 429, 430, 431, 432, 434, 435, 438, 441, 442, 447], "elu": [257, 258, 260, 261, 262, 263, 268, 269, 283, 429, 447], "activation_kwarg": [257, 258, 278], "norm_class": [257, 258, 260, 261, 278], "norm_kwarg": [257, 258, 278], "bias_last_lay": [257, 258, 260, 261, 262, 263, 269, 278], "aggregator_class": [257, 258, 260, 261, 429, 431, 447], "squashdim": [257, 258, 260, 269, 283, 447], "aggregator_kwarg": [257, 258, 260, 261, 429, 431], "squeeze_output": [257, 258, 260, 261, 429, 431], "convolut": [257, 258, 260, 261, 283, 299, 432, 434], "cell": [257, 258, 271, 272, 273, 275, 276, 277, 278, 283, 284, 430, 432, 433, 434, 435, 436, 437, 438], "kernel": [257, 258, 283], "cnet": [257, 258], "conv3d": 257, "rectangular": [257, 258], "lazyconv2d": [258, 260, 261, 269, 283], "default_atari_dqn": [258, 432], "semin": 258, "transformer_config": [259, 292, 313], "decisiontransform": [259, 292], "dtconfig": [259, 264, 292], "2202": [259, 264, 351], "05607": [259, 264, 351], "return_to_go": [259, 264, 292, 313], "conv_net_kwarg": [260, 261], "mlp_net_kwarg": [260, 261, 262], "use_avg_pool": [260, 261], "WITH": [260, 261, 262, 263, 294, 356], "1509": [260, 261, 262, 263, 280, 294, 337, 347, 356], "02971": [260, 261, 262, 263, 294, 356], "convnet": [260, 261, 269, 283, 431, 432, 434, 447], "ndims_in": 260, "avgpool": [260, 261], "lazylinear": [260, 261, 262, 263, 269, 278, 423, 430, 434, 443, 444], "2304": 260, "adaptiveavgpool2d": [261, 429, 431], "output_s": [261, 429, 431], "squeeze2dlay": 261, "400": [262, 263, 442], "mlp_net_kwargs_net1": 263, "mlp_net_kwargs_net2": 263, "mlp1": 263, "mlp2": 263, "desdescrib": 264, "n_embd": 264, "n_layer": [264, 271, 275], "n_head": 264, "n_inner": 264, "n_posit": 264, "resid_pdrop": 264, "attn_pdrop": 264, "gpt2config": 264, "atol": [265, 301], "rtol": [265, 301], "batch_shap": [265, 290, 301], "event_shap": [265, 301], "absolut": [265, 301, 428], "_instanc": 265, "densiti": [265, 281, 282, 290, 303], "mass": [265, 281, 282, 290, 303, 443], "rsampl": [265, 282, 290, 322], "sample_shap": [265, 281, 282, 290], "softmax": [266, 282, 290, 314, 315], "var_num": [267, 296, 314, 315, 320], "action_value_kei": [267, 296, 314, 315, 319, 320, 335, 350, 365], "action_mask_kei": [267, 270, 296, 314, 315, 319, 320], "1707": [267, 315, 342, 352], "06887": [267, 315, 342], "mult": [267, 284, 296, 314, 315, 319, 320], "tensordict_modul": [267, 271, 272, 275, 276, 296, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 335, 336, 340, 341, 348, 352, 353, 354, 355, 357, 358, 423], "nbin": [267, 314, 423], "customdistributionalqv": 267, "log_softmax": [267, 314], "qvalue_actor": [267, 296, 314, 319, 423], "to_modul": [267, 321, 324, 428, 447], "std_bia": 268, "std_min_val": 268, "belief": [268, 288, 297, 298], "1912": [268, 343, 344, 345], "01603": [268, 343, 344, 345], "softplu": [268, 328, 330, 331], "out_features_valu": 269, "cnn_kwarg": [269, 429], "mlp_kwarg": [269, 429], "duel": 269, "cnn": [269, 283, 429, 432, 434, 447], "06581": 269, "512": 269, "greedi": [270, 296, 315, 320, 429, 431, 432, 434], "eps_init": [270, 294, 429, 431, 432, 434, 438], "eps_end": [270, 294, 429], "explorative_polici": [270, 294], "9055": 270, "9277": 270, "6295": 270, "2532": 270, "grad_fn": [270, 309, 322], "addbackward0": 270, "batch_first": [271, 273, 275, 277, 431], "bidirect": [271, 275, 431], "cudnn": [271, 272, 273, 275, 276, 277, 431, 432], "rnn": [271, 272, 273, 275, 276, 277, 308, 341, 355, 431, 432, 434], "device_count": [271, 272, 275, 276, 448], "n_in": [271, 272, 275, 276], "n_out": [271, 272, 275, 276], "h0": [271, 272, 275, 276], "h1": [271, 272, 275, 276], "vectoris": [271, 272, 275, 276], "call_gru": [271, 272], "h_out": [271, 272, 275, 276], "batched_cal": [271, 272, 275, 276], "gate": [271, 272, 275], "r_t": 271, "w_": [271, 272, 275, 276], "ir": [271, 272], "x_t": [271, 275], "b_": [271, 272, 275, 276], "hr": [271, 272, 275], "h_": [271, 272, 275], "z_t": 271, "iz": [271, 272], "hz": [271, 272], "n_t": 271, "odot": [271, 272, 275, 276], "hn": [271, 272, 275], "h_t": [271, 275], "sigmoid": [271, 272, 275, 276], "hadamard": [271, 272, 275, 276], "multilay": [271, 275], "_t": [271, 275, 442, 443], "ge": [271, 275], "bernoulli": [271, 275], "b_ih": [271, 272, 275, 276, 277], "b_hh": [271, 272, 275, 276, 277], "h_0": [271, 275, 276], "pack_padded_sequ": [271, 275], "pack_sequ": [271, 275], "num": [271, 275, 438], "_layer": [271, 275], "_size": [271, 272, 275, 276], "h_n": [271, 275], "packedsequ": [271, 275], "weight_ih_l": [271, 275], "learnabl": [271, 272, 275, 276], "w_ir": 271, "w_iz": 271, "w_in": 271, "num_direct": [271, 275], "weight_hh_l": [271, 275], "w_hr": 271, "w_hz": 271, "w_hn": 271, "bias_ih_l": [271, 275], "b_ir": 271, "b_iz": 271, "b_in": 271, "bias_hh_l": [271, 275], "b_hr": 271, "b_hz": 271, "b_hn": 271, "mathcal": [271, 272, 275, 276], "sqrt": [271, 272, 275, 276, 294], "frac": [271, 272, 275, 276, 430], "seq_len": [271, 275], "subtli": 271, "matrix": [271, 275, 286, 287], "hx": [271, 272, 275, 276], "lstmcell": [272, 277, 432], "gru_cel": 272, "weight_ih": [272, 276], "weight_hh": [272, 276], "bias_ih": [272, 276], "bias_hh": [272, 276], "rocm": [272, 276], "embedd": [273, 277], "grucel": [273, 321], "python_bas": [273, 277], "custom_kei": [273, 277], "hasn": [273, 277], "set_recurrent_mod": [273, 277, 431], "recurrent_mod": [273, 277, 308], "rs": [273, 428], "gru_module_train": 273, "policy_train": [273, 277], "traj_td": [273, 277], "make_cudnn_bas": [273, 277], "make_python_bas": [273, 277, 432], "supplementari": [273, 277, 430, 448], "That": [273, 277, 430, 441], "dealt": [273, 277], "poorli": [273, 277], "meth": [273, 277, 350, 443], "data_collector": [273, 277, 429], "policy_infer": [273, 277], "td_inf": [273, 277], "upscal": [274, 302, 303], "tanh_loc": [274, 302, 303], "event_dim": [274, 301, 302], "poor": [274, 302, 303], "explos": [274, 302, 303], "proj_siz": 275, "c0": [275, 276], "c1": [275, 276], "call_lstm": [275, 276], "c_out": [275, 276], "i_t": 275, "ii": [275, 276], "hi": [275, 276], "f_t": 275, "hf": [275, 276], "g_t": 275, "ig": [275, 276], "hg": [275, 276], "o_t": 275, "ho": [275, 276], "c_t": 275, "c_": 275, "1402": 275, "1128": 275, "c_0": [275, 276], "proj": 275, "c_n": 275, "w_ii": 275, "w_if": 275, "w_ig": 275, "w_io": 275, "w_hi": 275, "w_hf": 275, "w_hg": 275, "w_ho": 275, "b_ii": 275, "b_if": 275, "b_ig": 275, "b_io": 275, "b_hi": 275, "b_hf": 275, "b_hg": 275, "b_ho": 275, "weight_hr_l": 275, "_revers": 275, "analog": [275, 434], "cn": 275, "lstm_cell": 276, "h_1": 276, "c_1": 276, "cx": 276, "recurrent_state_h": 277, "recurrent_state_c": 277, "triplet": [277, 319, 320], "lstm_modul": 277, "rs_h": 277, "rs_c": 277, "hidden0": [277, 432], "hidden1": [277, 432], "single_bias_last_lay": 278, "layer_class": 278, "layer_kwarg": 278, "perceptron": [278, 434], "noisylinear": [278, 286, 421, 429], "noisylazylinear": [278, 421], "mpcplanner": 279, "tensordict_out": [279, 448], "mppi": 280, "covari": 280, "william": [280, 354], "aldrich": 280, "theodor": 280, "01149": 280, "hansen": 280, "wang": 280, "su": 280, "04955": 280, "valueoper": [280, 310, 311, 312, 332, 333, 334, 335, 336, 341, 348, 349, 352, 353, 354, 355, 357, 358, 415, 423, 428, 430, 435], "tdlambdaestim": [280, 421, 428], "value_net": [280, 337, 339, 354, 367, 368, 369, 370, 430, 432, 434, 435, 438], "adv": 280, "lmbda": [280, 360, 367, 370, 372, 378, 379, 380, 383, 384, 424, 428, 430, 442], "value_network": [280, 336, 337, 339, 340, 342, 348, 355, 367, 368, 369, 370, 424, 428, 430, 432, 435, 438, 441], "temperatur": [280, 333, 340, 348], "neg_inf": [281, 282], "inf": [281, 282], "api_doc": [281, 282], "tf_agent": [281, 282], "unnorm": [281, 282, 290], "sparse_mask": [281, 282], "1203": [281, 282], "0928": [281, 282], "0831": [281, 282], "1972": [281, 282], "grad_method": [282, 290], "reparamgradientstrategi": [282, 290], "passthrough": [282, 290], "relaxedonehot": [282, 290], "sample_non_valid": 282, "zeros_lik": [282, 443], "share_param": [283, 284, 285, 441, 442], "use_td_param": [283, 284, 285], "get_stateful_net": [283, 284, 285, 350, 423, 424], "from_stateful_net": [283, 284, 285, 350, 424], "homogen": [283, 284, 441, 442], "tensordictparam": [283, 284, 322], "_empty_net": [283, 284], "roughli": [283, 284, 447], "agent_network": [283, 284], "modulelist": [283, 284], "2592": 283, "n_agent_input": [284, 285, 441, 442], "n_agent_output": [284, 285, 441, 442], "toech": 284, "centalis": 284, "shown": [284, 423, 432, 440, 441, 442, 445], "agent_dim": 285, "vmap_random": [285, 350, 424], "stateful_net": [285, 350], "Such": [285, 350], "multiagentmlp": [285, 441, 442], "snet": 285, "hasattr": [285, 428], "kaiming_normal_": 285, "std_init": [286, 287], "initialize_paramet": 286, "isol": [286, 350, 432], "1706": [287, 304], "10295v3": 287, "induc": [287, 322], "aid": 287, "1803": [288, 289, 295], "10122": [288, 289], "rnn_hidden": 288, "latent": 289, "ordin": [291, 421], "parametris": [291, 293], "inres": 292, "mu": [292, 294, 430], "impos": [293, 423], "proxim": [293, 352, 430, 442], "atom": 293, "tang": 293, "agraw": 293, "2020": 293, "1901": 293, "10500": 293, "discretis": 293, "num_atom": 293, "num_sampl": 293, "middl": 293, "adam": [293, 302, 428, 429, 430, 431, 432, 435, 438, 441, 442, 443], "lr": [293, 428, 429, 430, 431, 438, 441, 442, 443], "optimis": [293, 441, 442], "minimis": 293, "penalis": 293, "0308": 293, "1586": 293, "4727": 293, "2260": 293, "1120": 293, "histogram": 293, "return_typ": 293, "hist": [293, 445], "158": 293, "478": 293, "228": 293, "112": 293, "bin_edg": 293, "8000": 293, "6000": 293, "4000": 293, "ornstein": [294, 428, 432], "uhlenbeck": [294, 428, 432], "ou": [294, 428], "correl": 294, "noise_t": 294, "noise_": 294, "theta": [294, 430, 443], "sigma_t": 294, "sigma_": 294, "anneal": [294, 429, 434, 441], "ou_prev_nois": 294, "ou_step": 294, "x0": 294, "sigma_min": 294, "n_steps_ann": 294, "is_init_kei": 294, "_ou_prev_nois": 294, "_ou_step": 294, "state_shap": [295, 365], "mixing_embed_dim": [295, 365], "qmix": [295, 441, 442], "mixer": [295, 304, 365], "monoton": 295, "hyper": 295, "11485": 295, "qmixerloss": [295, 304], "qmix_vdn": [295, 304], "vdn": [295, 304], "hidden_dim": [297, 298], "scale_lb": [297, 298], "posterior": [297, 344], "rssm": [297, 298, 344], "1811": [297, 298], "04551": [297, 298], "obs_embed": 297, "rnn_hidden_dim": 298, "dream": 298, "safe_tanh": 302, "tanhtransform": 302, "overflow": [302, 309, 314, 315, 318, 319, 320, 321, 322], "get_mod": [302, 322], "decomposit": 304, "05296": 304, "hide": [305, 430, 441, 442], "satisfi": [305, 423], "vmap_dim": 305, "lam": 305, "sample_in": 305, "sample_in_td": 305, "vm": 305, "translat": [309, 318], "character": [309, 314, 318, 319, 321, 445], "td_modul": [309, 310, 311, 312, 318, 321, 322, 324, 326, 434, 447], "3635": 309, "0340": 309, "1476": 309, "3911": 309, "1664": 309, "5455": 309, "2247": 309, "4583": 309, "2916": 309, "2160": 309, "5337": 309, "5193": 309, "addmmbackward0": 309, "actorvalueoper": [310, 334, 349, 352, 423, 434], "get_policy_oper": [310, 311, 312, 334, 349, 352, 423], "standalon": [310, 311, 312, 432, 434], "tdmodul": [310, 311, 312, 415], "get_critic_oper": 310, "common_oper": [310, 312], "policy_oper": [310, 311, 312], "value_oper": [310, 311, 312], "module_hidden": [310, 312], "td_module_hidden": [310, 312], "module_act": [310, 312], "td_module_act": [310, 311, 312], "module_valu": [310, 311, 312], "td_module_valu": [310, 311, 312], "state_action_valu": [310, 326, 333, 335, 340, 348, 355, 366, 415, 423, 428, 441, 447], "td_clone": [310, 311, 312], "tensordictmodulewrapp": [310, 410, 411, 415], "get_policy_head": [310, 311, 312], "safesequenti": [310, 311, 312, 365], "head": [310, 312, 322, 329, 334, 349, 352, 421], "get_value_head": [310, 311, 312], "get_value_oper": [310, 311, 312, 334, 349, 352], "action_modul": 311, "actorcriticoper": [312, 423, 434], "actorcriticwrapp": [312, 423, 428], "inferec": 313, "set_tensor_kei": 313, "dt_inference_wrapp": 313, "baz": 313, "inference_context": 313, "obs_dim": 313, "tanhdelta": [313, 421, 428, 441], "dtactor": 313, "actor_modul": [313, 447], "dist_class": 313, "dist_kwarg": 313, "distribution_kwarg": [313, 318, 322, 430, 441, 442], "inference_actor": 313, "sequence_length": 313, "mask_context": 313, "out_act": 313, "qvaluemodul": [314, 319, 365, 431, 432, 434, 438], "distributionaldqnnet": 314, "make_log_softmax": 314, "my_action_valu": [315, 320], "chanc": 315, "lmheadmodel": 316, "actor_head": [316, 334, 349, 352], "base_model": 316, "lm_head": 316, "lookahead": 317, "reshape_cat": 317, "actor_bas": 317, "obs_cat": 317, "obs_cat_reshap": 317, "action_orig": 317, "multistepenvwrapp": 317, "alter": [317, 350, 423], "ego": 317, "default_interaction_typ": [318, 322, 434], "interaction_typ": [318, 322], "set_interaction_typ": [318, 322], "compositedistribut": [318, 322, 332, 352, 424, 434], "distribution_map": [318, 322], "name_map": [318, 322], "cache_dist": [318, 322], "n_empirical_estim": [318, 322], "compound": [318, 434], "chose": 320, "functionalmodul": 321, "functionalmodulewithbuff": 321, "td_fmodul": 321, "td_function": 321, "td_state": 321, "params_repeat": 321, "td_vmap": [321, 324], "random_sampl": [321, 322], "suppli": 322, "paliat": 322, "get_median": 322, "get_mean": 322, "sample_key_nam": 322, "_log_prob": 322, "composite_lp_aggreg": 322, "clampbackward0": 322, "anihil": 322, "probabilistictensordictsequenti": [323, 332, 334, 349, 352, 354, 410, 411, 424, 447], "partial_toler": [323, 324, 440], "AND": [323, 324, 335], "tensordictsequ": 324, "safeprobabilisticmodul": [324, 423], "spec1": 324, "net1": 324, "module1": 324, "td_module1": 324, "spec2": 324, "module2": 324, "td_module2": 324, "boundari": [325, 430, 432, 441, 442], "resolut": 325, "9944": 325, "9991": 325, "3020": 325, "2299": 325, "5418": 325, "2989": 325, "6849": 325, "3169": 325, "2690": 325, "9649": 325, "5686": 325, "8602": 325, "0315": 325, "8455": 325, "6027": 325, "4746": 325, "7843": 325, "7782": 325, "2111": 325, "5115": 325, "4687": 325, "5760": 325, "custommodul": 326, "imaginari": 327, "imagin": 327, "transition_model": 327, "get_reward_oper": 327, "get_transition_model_oper": 327, "min_val": [328, 331], "_bia": 328, "surject": 331, "expln": 331, "biased_softplu": [331, 421], "biased_softplus_": 331, "syntax": [331, 428], "add_custom_map": 331, "1602": 332, "01783v2": 332, "actor_network": [332, 333, 334, 335, 336, 338, 340, 341, 348, 349, 351, 352, 353, 354, 355, 357, 358, 424, 428, 430, 435, 441, 442], "critic_network": [332, 334, 349, 352, 354, 430, 442], "entropy_bonu": [332, 334, 349, 352, 430], "favour": [332, 334, 349, 352], "samples_mc_entropi": [332, 334, 349, 351, 352], "entropy_coef": [332, 334, 349, 352, 430, 442], "critic_coef": [332, 334, 349, 352, 430], "loss_critic_typ": [332, 334, 349, 352, 354, 430], "l1": [332, 334, 336, 337, 341, 349, 352, 353, 354, 357, 358, 361, 365, 423, 428], "l2": [332, 334, 336, 337, 338, 339, 341, 344, 345, 349, 352, 353, 354, 357, 358, 361, 365, 428, 441], "smooth_l1": [332, 333, 334, 335, 336, 337, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358, 361, 365, 430], "separate_loss": [332, 334, 335, 336, 340, 341, 348, 349, 352, 353, 354, 355, 357, 358], "advantage_kei": [332, 334, 349, 352, 354, 367, 368, 369, 370], "value_target_kei": [332, 334, 349, 352, 354, 367, 368, 369, 370], "value_target": [332, 334, 349, 352, 354, 367, 368, 369, 370, 430, 442], "ddp": [332, 334, 349, 352, 354], "fsdp": [332, 334, 349, 352, 354], "divid": [332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 349, 351, 352, 353, 354, 355, 357, 358, 408, 428, 441, 442, 443], "clip_valu": [332, 334, 349, 352, 354], "loss_crit": [332, 352, 430, 442], "loss_entropi": [332, 352, 430, 442], "loss_object": [332, 352, 430, 442], "next_reward": [332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370], "next_don": [332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370], "next_termin": [332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 367, 368, 369, 370], "loss_obj": 332, "next_observ": [332, 333, 335, 336, 337, 339, 340, 341, 348, 352, 353, 354, 355, 357, 358, 440], "sacloss": [332, 347, 356, 421], "default_kei": [332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 357, 358, 365, 371], "_acceptedkei": [332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 357, 358, 365, 371], "fraction": 332, "make_value_estim": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 359, 365, 424, 428, 429, 441, 442, 447], "value_typ": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 360, 365, 428], "valueestim": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 360, 365, 421, 424, 428, 441, 442], "hyperparam": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 428], "enum": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 360, 365, 428], "default_value_estim": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 428, 447], "default_value_kwarg": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 421, 428], "dqn_loss": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 359, 365], "td1": [332, 333, 335, 336, 337, 339, 341, 342, 343, 348, 350, 352, 353, 354, 355, 357, 358, 365, 428], "conserv": [333, 339], "04779": [333, 339], "qvalue_network": [333, 335, 340, 341, 348, 353, 355, 357, 358], "unti": [333, 335, 348, 353, 355, 357, 358], "loss_funct": [333, 335, 336, 337, 338, 339, 340, 341, 348, 353, 355, 357, 358, 361, 365, 428, 441], "alpha_init": [333, 335, 341, 351, 353, 355], "min_alpha": [333, 335, 341, 351, 353, 355], "max_alpha": [333, 335, 341, 351, 353, 355], "fixed_alpha": [333, 335, 341, 351, 353, 355], "target_entropi": [333, 335, 341, 351, 353, 355], "prod": [333, 335, 351, 355], "delay_actor": [333, 336, 355, 357, 358], "delay_qvalu": [333, 341, 353, 355, 357, 358], "min_q_weight": 333, "max_q_backup": 333, "backup": 333, "deterministic_backup": 333, "num_random": 333, "with_lagrang": 333, "lagrang": 333, "lagrange_thresh": 333, "valueclass": [333, 335, 336, 341, 353, 355, 357, 358], "qvalu": [333, 335, 340, 341, 348, 353, 355, 357, 358], "loss_actor": [333, 335, 336, 340, 341, 348, 353, 354, 355, 357, 358, 401, 428, 441], "loss_actor_bc": 333, "loss_alpha": [333, 335, 341, 353, 355], "loss_cql": [333, 339], "loss_qvalu": [333, 335, 339, 340, 341, 348, 353, 355, 357, 358], "loss_alpha_prim": 333, "clip_epsilon": [334, 430, 442], "normalize_advantag": [334, 349, 352, 442], "normalize_advantage_exclude_dim": [334, 349, 352], "multiobject": [334, 349, 352], "value_kei": [334, 349, 352, 367, 368, 369, 370, 428], "somemodul": [334, 349, 352], "someactor": [334, 349, 352], "value_head": [334, 349, 352], "somevalu": [334, 349, 352], "loss_modul": [334, 347, 349, 350, 352, 356, 405, 414, 415, 424, 425, 428, 429, 430, 441, 442, 445], "IN": 335, "FOR": 335, "simplic": [335, 429, 430, 436, 444, 445, 447], "openreview": [335, 353], "pczqttstix": 335, "qvalue_loss": [335, 357], "actor_loss": [335, 357], "alpha_loss": 335, "num_qvalue_net": [335, 340, 341, 348, 353, 355, 357, 358], "maybe_init_target_entropi": 335, "fault_toler": 335, "target_entropy_buff": 335, "delay_valu": [336, 337, 339, 342, 354, 355, 365, 429, 431, 432, 438, 441], "loss_valu": [336, 340, 348, 354, 355, 428, 430, 441, 442], "pred_valu": [336, 339, 357, 358, 428], "pred_value_max": [336, 428], "target_valu": [336, 339, 353, 357, 358, 366, 424, 428], "target_value_max": [336, 428], "qvalueactor": [337, 339, 365, 429, 431], "double_dqn": 337, "06461": [337, 347], "mult_one_hot": [337, 340, 341, 365], "loss_val": [337, 339, 424, 428, 430, 431, 432, 435, 436, 438, 441, 442, 445], "01345": 338, "distanc": [339, 349, 361, 366, 367, 442], "dcql_loss": 339, "2110": [340, 348], "06169": [340, 348], "expectil": [340, 348], "tau": [340, 348, 356, 428, 429, 441], "antmaz": [340, 348], "sticht": [340, 348], "onehotcategor": [340, 341, 421], "target_entropy_weight": 341, "skip_done_st": [341, 355], "disctount": 342, "distributionalqvalueactor": [342, 423], "input_tensordict": [342, 428], "actor_model": 343, "value_model": [343, 345], "imagination_horizon": 343, "discount_loss": [343, 345], "lambda_kl": 344, "lambda_reco": 344, "lambda_reward": 344, "reco_loss": 344, "reward_loss": 344, "free_nat": 344, "nat": 344, "delayed_clamp": 344, "global_averag": 344, "value_loss": 345, "fake_data": 345, "1606": 346, "03476": 346, "discriminator_network": 346, "use_grad_penalti": 346, "gp_lambda": 346, "discrimin": 346, "ddpgloss": [347, 356, 415, 421, 428, 435, 441, 447], "td3loss": [347, 356, 421], "value_network_update_interv": 347, "qvalueclass": 348, "loss_value_diff": 348, "diff": 348, "old_polici": 349, "new_polici": 349, "apart": [349, 442], "dtarg": 349, "samples_mc_kl": 349, "analyt": 349, "decrement": 349, "loss_": [350, 401, 424, 428, 435], "equip": [350, 431, 432, 434], "gh": 350, "_forward_value_estimator_kei": 350, "value_estim": [350, 367, 368, 369, 370, 371, 424, 428, 442], "myloss": 350, "action2": 350, "augment": [350, 436, 438, 445], "deterministic_sampling_mod": 350, "convert_to_funct": [350, 428], "expand_dim": 350, "create_target_param": [350, 428], "compare_against": [350, 428], "_param": 350, "resampl": 350, "_target_param": 350, "network_nam": 350, "blend": 350, "add_random_modul": [350, 424], "flavor": [352, 428, 441, 442, 447], "clipppoloss": [352, 421, 430, 442], "klpenppoloss": [352, 421], "06347": 352, "gae": [352, 421, 424, 428, 430, 442], "ppo_loss": 352, "tdlambda": [352, 360, 424, 428], "base_lay": 352, "randn_lik": 352, "samplelogprob": 352, "ay8zfzm0tdd": 353, "sub_sample_len": 353, "subsampl": [353, 396, 425], "action_log_prob_actor": 353, "state_action_value_actor": [353, 357, 358], "connectionist": 354, "1992": 354, "doi": 354, "1007": 354, "bf00992696": 354, "actor_net": [354, 428, 430], "1801": 355, "01290": 355, "applic": [355, 365, 433, 434, 443], "1812": 355, "05905": 355, "redqloss": [356, 421], "math": 356, "theta_t": [356, 443], "theta_": [356, 443], "polyak": 356, "minimalist": 357, "06860": 357, "policy_nois": [357, 358], "noise_clip": [357, 358], "td3_bc": 357, "bc_loss": 357, "lmbd": 357, "td0": [359, 428, 441], "strict_shap": 361, "view_a": 361, "qmixer": [365, 421], "local_valu": 365, "visibl": [365, 442], "acceptedkei": 365, "global_valu": 365, "penultim": 365, "local_value_network": 365, "mixer_network": 365, "value_modul": [365, 430, 447], "qnet": [365, 428], "next_val_kei": 366, "pred_next_v": 366, "mse": 366, "q_valu": 366, "n_steps_to_next": 366, "value_next_st": 366, "1506": [367, 372, 380], "02438": [367, 372, 380], "exponenti": [367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 403], "average_ga": [367, 430], "skip_exist": [367, 368, 369, 370], "get_default_devic": [367, 368, 369, 370, 371], "gradient_mod": 367, "value_error": [367, 368, 369, 370, 371], "target_param": [367, 368, 369, 370, 371, 428, 442], "98": [367, 368, 369, 370], "94": [367, 370], "unpack": [367, 368, 369, 370], "tensor_kei": [367, 368, 369, 370, 371], "next_valu": [367, 368, 369, 370, 371], "aka": [368, 429, 441], "average_reward": [368, 369, 370], "tdestim": [368, 369, 371], "infti": 369, "valuefunctionbas": 371, "old_stat": [372, 374, 376, 378, 380, 381, 383], "new_stat": [372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "rolling_gamma": [376, 377, 378, 379, 381, 382, 383, 384], "g1": [376, 377, 378, 379, 381, 382, 383, 384], "g2": [376, 377, 378, 379, 381, 382, 383, 384], "g3": [376, 377, 378, 379, 381, 382, 383, 384], "g4": [376, 377, 378, 379, 381, 382, 383, 384], "v3": [376, 377, 378, 379, 381, 382, 383, 384], "preproc": [385, 432, 441], "as_non_tensor": [385, 441], "render_method": 385, "pass_tensordict": 385, "syntact": 385, "sugar": 385, "out_file_bas": 386, "skip_reset": 386, "center_crop": 387, "make_grid": 387, "fp": [387, 392, 394], "log_video": 387, "csv": [387, 389, 391, 429, 437, 438], "wandb": [387, 391, 394, 437, 447], "tensorboard": [387, 391, 393, 437, 447], "log_dir": [387, 388, 389, 391, 393, 394, 429, 438], "cheetah_video": 387, "run_video": 387, "openxexperiencereplai": 387, "sec": [387, 443], "video_fp": [387, 389, 392], "cmu_stretch": 387, "run_video_0": 387, "pt": [389, 425], "cur_dir": 389, "csv_log": 389, "add_video": 389, "video_": 389, "experiment_nam": [390, 391], "uuid": [390, 429, 448], "logger_typ": 391, "logger_nam": 391, "mlflow": [391, 392], "wandb_kwarg": 391, "mlflow_kwarg": 391, "tracking_uri": 392, "uri": 392, "datastor": 392, "tb_log": 393, "tensoarboard": 393, "td_log": 393, "save_dir": 394, "resum": 394, "uncategor": 394, "my_funct": 395, "sub_traj_len": 396, "min_sub_traj_len": 396, "register_op": [396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 425, 429], "process_optim_batch": [396, 402, 403, 425], "td_out": [396, 404], "_process_optim_batch_hook": [396, 425], "batch_subsampl": 396, "clear_cuda": 397, "pre_optim_step": [397, 425], "log_pbar": [398, 399, 400, 403, 425, 429], "count_fram": 398, "pre_steps_log": [398, 399, 425], "count_frames_log": 398, "lognam": 399, "r_train": 399, "log_reward": [399, 429], "record_interv": [400, 428, 429], "record_fram": [400, 408, 428, 429], "policy_explor": [400, 415, 428, 429, 432, 434, 438], "log_kei": [400, 429], "underestim": 400, "r_evalu": [400, 428], "loss_compon": 401, "appl": 401, "optimizer_hook": 401, "flatten_tensordict": [402, 429], "max_dim": 402, "rb_trainer": 402, "batch_process": [402, 403, 404, 425], "post_loss": [402, 425], "999": [403, 429], "jitter": 403, "finfo": 403, "default_dtyp": 403, "reward_norm": 403, "update_reward_stat": 403, "normalize_reward": 403, "make_train": [404, 421], "_process_batch_hook": [404, 425], "select_kei": [404, 425], "versatil": [405, 433], "optim_steps_per_batch": [405, 425, 429], "clip_grad_norm": 405, "clip_norm": 405, "progress_bar": 405, "save_trainer_interv": 405, "log_interv": [405, 429], "save_trainer_fil": [405, 425], "load_from_fil": [405, 425], "update_weights_interv": [407, 429], "post_step": [407, 425, 429], "cfg": [408, 409, 410, 411, 412, 413, 414, 415, 416, 419], "dictconfig": [408, 409, 410, 411, 413, 414, 415, 416, 419], "unknowingli": 408, "annealing_fram": [408, 428], "init_env_step": [408, 409, 428], "proof_environ": [409, 428], "sta": 409, "ot": 409, "actor_model_explor": [410, 411, 428], "make_env_kwarg": [410, 411], "targetnetupdat": [412, 414, 415], "replayargsconfig": 413, "target_net_updat": [415, 428, 429], "constitu": 415, "egreedywrapp": 415, "env_proof": 415, "obs_spec": 415, "net_valu": 415, "dir": [415, 425, 429], "gettempdir": 415, "argpars": [416, 419], "namespac": [416, 419], "parser": [416, 419], "transformed_env_constructor": [416, 421], "num_env_per_collector": [417, 418], "video_tag": 419, "norm_obs_onli": 419, "use_env_cr": 419, "custom_env_mak": 419, "custom_env": 419, "return_transformed_env": 419, "action_dim_gsd": 419, "state_dim_gsd": 419, "obs_norm_state_dict": 419, "distributedsyncdatacollector": 421, "submitit_delayed_launch": 421, "remotetensordictreplaybuff": 421, "rational": 421, "footnot": 421, "binarydiscretetensorspec": 421, "boundedtensorspec": 421, "discretetensorspec": 421, "lazystackedcompositespec": 421, "lazystackedtensorspec": 421, "multidiscretetensorspec": 421, "multionehotdiscretetensorspec": 421, "nontensorspec": 421, "onehotdiscretetensorspec": 421, "unboundedcontinuoustensorspec": 421, "unboundeddiscretetensorspec": 421, "prompttensordicttoken": 421, "rolloutfrommodel": 421, "tokenizeddatasetload": 421, "create_infinite_iter": 421, "constantklcontrol": 421, "adaptiveklcontrol": 421, "llmdata": 421, "llminput": 421, "llmoutput": 421, "densifyreward": 421, "h5combin": 421, "h5split": 421, "nested2t": 421, "check_no_exclusive_kei": 421, "consolidate_spec": 421, "contains_lazy_spec": 421, "envmetadata": 421, "chessenv": 421, "tictactoeenv": 421, "llmhashingenv": 421, "check_marl_group": 421, "get_available_librari": 421, "terminated_or_trunc": 421, "dreamerdecod": 421, "braxwrapp": 421, "dmcontrolwrapp": 421, "jumanjiwrapp": 421, "meltingpotenv": 421, "meltingpotwrapp": 421, "mogymenv": 421, "multithreadedenvwrapp": 421, "openmlenv": 421, "openspielwrapp": 421, "openspielenv": 421, "pettingzooenv": [421, 441], "robohiveenv": 421, "smacv2env": 421, "smacv2wrapp": 421, "unitymlagentsenv": 421, "unitymlagentswrapp": 421, "vmaswrapp": 421, "register_gym_spec_convers": 421, "qvaluehook": 421, "distributionalqvaluehook": 421, "reset_nois": 421, "cemplann": 421, "mpcplannerbas": 421, "mppiplann": 421, "independentnorm": 421, "truncatednorm": 421, "maskedonehotcategor": 421, "onehotordin": 421, "inv_softplu": 421, "vmapmodul": 421, "distributionaldqnloss": [421, 429], "discretesacloss": 421, "crossqloss": 421, "iqlloss": 421, "discreteiqlloss": 421, "cqlloss": 421, "discretecqlloss": 421, "gailloss": 421, "dtloss": 421, "onlinedtloss": 421, "td3bcloss": 421, "ppoloss": 421, "a2closs": 421, "reinforceloss": 421, "dreameractorloss": 421, "dreamermodelloss": 421, "dreamervalueloss": 421, "td0estim": [421, 428], "td1estim": [421, 428], "td0_return_estim": 421, "td0_advantage_estim": 421, "td1_return_estim": 421, "vec_td1_return_estim": 421, "td1_advantage_estim": 421, "vec_td1_advantage_estim": 421, "td_lambda_return_estim": 421, "vec_td_lambda_return_estim": 421, "td_lambda_advantage_estim": 421, "vec_td_lambda_advantage_estim": 421, "generalized_advantage_estim": 421, "vec_generalized_advantage_estim": 421, "hardupd": [421, 428, 435], "softupd": [421, 428, 429, 431, 432, 435, 438, 441], "distance_loss": [421, 428], "group_optim": 421, "hold_out_net": 421, "hold_out_param": [421, 428], "batchsubsampl": [421, 425], "clearcudacach": 421, "countframeslog": 421, "logscalar": [421, 425, 429], "optimizerhook": [421, 429], "logvalidationreward": [421, 425, 428, 429], "replaybuffertrain": [421, 425, 429], "rewardnorm": 421, "selectkei": [421, 425], "trainerhookbas": [421, 425, 429], "updateweight": [421, 425, 429], "make_collector_offpolici": 421, "make_collector_onpolici": 421, "make_dqn_loss": 421, "make_replay_buff": [421, 428], "make_target_updat": 421, "parallel_env_constructor": [421, 428], "sync_async_collector": 421, "sync_sync_collector": 421, "correct_for_frame_skip": 421, "get_stats_random_rollout": 421, "mlflowlogg": 421, "get_logg": 421, "generate_exp_nam": 421, "journei": 422, "textbook": 422, "highlight": [422, 441], "ever": [422, 442], "bump": 422, "benefit": [422, 433, 441, 442, 445], "pr": 422, "ground": [423, 428, 443], "recycl": [423, 445], "noisier": 423, "Their": [423, 441, 442], "sd": [423, 448], "prob_modul": 423, "uncertainti": 423, "soften": 423, "backbon": [423, 431, 434, 440, 447], "make_actor": 423, "make_valu": 423, "shared_param": 423, "make_common": 423, "reusabl": [424, 428, 445], "swappabl": [424, 428], "characterist": [424, 428, 443], "trainabl": [424, 428, 435, 444], "smth": [424, 428], "metric": [424, 428], "plenti": [424, 432], "amort": [424, 429, 430], "told": [424, 430], "pseudo": [424, 436, 443], "buri": 424, "str_valu": 424, "nutshel": [424, 428], "barto": [424, 441, 442], "chapter": [424, 437], "value_net_loss": 424, "pow": [424, 428], "room": 424, "signifi": [424, 441, 442], "underperform": 424, "thin": 424, "intric": [424, 434], "set_composite_lp_aggreg": [424, 442], "action_td": 424, "action0": 424, "f0": 424, "action1": 424, "f1": 424, "f2": 424, "legitim": [424, 448], "f3": 424, "action0_log_prob": 424, "action1_log_prob": 424, "inferior": 424, "multivari": 424, "dirichlet": 424, "prev_log_prob": 424, "new_log_prob": 424, "log_weight": 424, "appreci": [424, 433], "multihead": 424, "believ": 425, "scheme": [425, 448], "substanti": 425, "_pre_steps_log_hook": 425, "_pre_optim_hook": 425, "sub_batch": 425, "_post_loss_hook": 425, "_post_optim_hook": 425, "post_optim": [425, 429], "_post_optim_log": 425, "post_optim_log": 425, "_post_steps_hook": 425, "_post_steps_log_hook": 425, "post_steps_log": 425, "logginghook": 425, "logging_hook": 425, "save_dict": 425, "some_valu": 425, "torchsnapshot": 425, "ckpt_backend": 425, "filepath": 425, "save_train": 425, "000": [427, 446], "galleri": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "mem": [427, 446], "mb": [427, 446], "coding_ddpg": [427, 428, 446], "coding_dqn": [427, 429, 446], "coding_ppo": [427, 430, 446], "dqn_with_rnn": [427, 431, 446], "multi_task": [427, 440, 446], "multiagent_competitive_ddpg": [427, 441, 446], "multiagent_ppo": [427, 442, 446], "pretrained_model": [427, 444, 446], "rb_tutori": [427, 445, 446], "torchrl_demo": [427, 446, 447], "torchrl_env": [427, 446, 448], "author": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 448], "vincent": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 443, 445, 448], "moen": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 443, 445, 448], "assembl": 428, "maxim": [428, 435, 443], "transpar": [428, 431], "bash": 428, "is_fork": [428, 429, 430, 431, 441, 442, 444], "get_start_method": [428, 429, 430, 431, 441, 442, 444], "collector_devic": 428, "loss_dict": 428, "modal": 428, "oblivi": [428, 430, 445], "elementari": 428, "didact": [428, 432], "dilut": 428, "pessimist": [428, 429, 430], "target_actor_network_param": 428, "actor_in_kei": 428, "actor_crit": 428, "compromis": 428, "hp": 428, "_value_estim": 428, "elif": [428, 429], "unknown": 428, "_loss_actor": 428, "td_copi": 428, "actor_network_param": [428, 441], "value_network_param": [428, 441], "_loss_valu": 428, "pred_val": 428, "target_value_network_param": 428, "glue": 428, "_forward": 428, "remaind": 428, "env_librari": 428, "env_task": 428, "env_arg": [428, 429], "torchr": 428, "rescal": 428, "presum": 428, "make_transformed_env": 428, "reward_sc": 428, "marker": 428, "env_per_collector": 428, "transform_state_dict": 428, "make_t_env": 428, "cheat": 428, "10m": 428, "cautiou": 428, "magnitud": [428, 441], "thousand": [428, 431], "get_env_stat": 428, "proof_env": 428, "5000": [428, 432, 438], "recal": [428, 430, 445], "ddpgmlpactor": 428, "ddpgmlpqnet": 428, "materi": 428, "ornsteinuhlenbeckprocessmodul": [428, 434], "make_ddpg_actor": 428, "q_net": 428, "tight": 428, "decoupl": [428, 435, 447], "10_000": [428, 430], "traj_len": [428, 431], "make_record": 428, "recorder_obj": 428, "pick": [428, 429, 434], "buffer_s": [428, 429], "random_crop_len": 428, "prb": 428, "buffer_scratch_dir": [428, 429, 431, 436, 444], "25": 428, "dataflow": 428, "ceil_div": 428, "utd": [428, 431], "update_to_data": 428, "realiz": 428, "_must_": 428, "001": [428, 443], "outdat": 428, "trick": [428, 429], "despit": 428, "optimizer_actor": 428, "weight_decai": [428, 429], "optimizer_valu": 428, "total_collection_step": 428, "rewards_ev": 428, "collected_fram": 428, "pbar": [428, 430, 431, 441, 442, 443], "numel": [428, 430, 431, 432, 438, 441, 444, 445], "current_fram": [428, 441], "sampled_tensordict": 428, "gn1": 428, "clip_grad_norm_": [428, 430, 441, 442, 443], "gn2": 428, "gn": [428, 443], "td_record": 428, "rn": 428, "set_descript": [428, 430, 431, 441, 442, 443], "2f": 428, "mention": [428, 431, 445, 448], "matplotlib": [428, 430, 431, 432, 441, 442, 443, 445, 448], "pyplot": [428, 430, 431, 432, 441, 442, 443, 445, 448], "plt": [428, 430, 431, 432, 441, 442, 443, 445, 448], "zip": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "legend": [428, 441], "xlabel": [428, 431, 442, 443], "ylabel": [428, 442], "tight_layout": 428, "takeawai": [428, 429, 432], "distpatch": 428, "jupyt": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "ipynb": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448], "sphinx": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448], "road": 429, "aspect": [429, 435], "highest": [429, 434], "prerequisit": [429, 431], "lookup": 429, "cart": 429, "pole": 429, "un": 429, "actuat": 429, "frictionless": 429, "duelingcnndqnet": 429, "egreedymodul": [429, 431, 432, 434, 438], "is_notebook": 429, "shell": 429, "get_ipython": 429, "__class__": 429, "zmqinteractiveshel": 429, "qtconsol": 429, "terminalinteractiveshel": 429, "ipython": [429, 442, 443], "nameerror": [429, 441], "umbrella": 429, "misplac": 429, "misus": 429, "orchestr": [429, 435, 437], "five": 429, "64x64": 429, "motion": [429, 443], "obs_norm_sd": 429, "mp_context": 429, "simpler": [429, 433], "get_norm_stat": 429, "test_env": 429, "mathbb": 429, "rightarrow": 429, "make_model": 429, "dummy_env": 429, "init_bia": 429, "exploration_modul": [429, 431, 432, 434, 438], "eps_greedy_v": 429, "eps_greedy_val_env": 429, "actor_explor": 429, "get_replay_buff": 429, "n_optim": [429, 435, 436], "parametriz": 429, "get_collector": 429, "bunch": 429, "ubiquit": [429, 433], "get_loss_modul": 429, "target_updat": [429, 441], "995": 429, "hopefulli": 429, "variat": 429, "2e": [429, 443], "wd": 429, "upd": 429, "harder": [429, 447], "5_000": 429, "500000": 429, "100000": 429, "005": [429, 441], "mandatori": [429, 430, 442, 443], "fairer": 429, "budget": 429, "dqn_exp_": 429, "uuid1": [429, 448], "cumbersom": 429, "buffer_hook": 429, "weight_updat": 429, "aliv": 429, "total_reward": 429, "print_csv_files_in_fold": 429, "folder_path": 429, "csv_file": 429, "output_str": 429, "dirpath": 429, "endswith": 429, "strip": 429, "qvaluenetwork": 429, "accuraci": 429, "fanci": [429, 436], "demonstr": [430, 432, 436, 441, 442, 443, 445, 448], "talk": 430, "six": 430, "sophist": [430, 442], "invent": 430, "theta_k": 430, "pi_": 430, "exceed": 430, "discourag": [430, 443], "indispens": 430, "analyz": 430, "lingua": 430, "franca": 430, "defaultdict": [430, 443], "3e": [430, 431, 441, 442], "max_grad_norm": [430, 441, 442], "sub_batch_s": 430, "num_epoch": [430, 442], "entropy_ep": [430, 442], "charact": [430, 432], "inverteddoublependulum": 430, "transmit": 430, "stai": 430, "confid": [430, 441, 442], "ran": 430, "f_": 430, "mu_": 430, "difficulti": [430, 448], "d_ob": 430, "d_action": 430, "policy_modul": [430, 441, 442], "briefli": [430, 441, 442], "refil": [430, 442], "easiest": [430, 435, 441, 442], "mathemat": [430, 441, 442], "tradeoff": [430, 442], "advantage_modul": 430, "lr_schedul": [430, 443], "cosineannealinglr": [430, 443], "eval_str": 430, "tensordict_data": [430, 442], "data_view": [430, 442], "subdata": [430, 441, 442], "cum_reward_str": 430, "4f": [430, 431, 443], "stepcount_str": 430, "param_group": [430, 441], "lr_str": 430, "eval_rollout": 430, "nice": [430, 433, 436], "cap": [430, 445], "figsiz": [430, 443], "subplot": [430, 441, 443, 448], "titl": [430, 431, 432, 442, 443], "84x84": [431, 432], "accessori": 431, "stamp": 431, "assist": 431, "n_cell": 431, "customiz": 431, "wouldn": 431, "qval": 431, "stoch_polici": 431, "opportun": [431, 441], "uniniti": 431, "again": [431, 432, 433, 434, 436, 442, 444, 445, 448], "strongli": 431, "million": 431, "sake": [431, 444, 445], "20_000": [431, 443], "longest": 431, "npai": 431, "action_spread": 431, "rom": 432, "licens": 432, "strong": 432, "impress": 432, "arduino": 432, "raspberri": 432, "pi": [432, 441, 442, 443], "alon": 432, "examplifi": 432, "ship": 432, "stick": 432, "nearest": 432, "value_mlp": [432, 438], "100_000": [432, 438], "init_rand_step": [432, 438], "total_count": [432, 438], "total_episod": [432, 438], "t0": [432, 438], "screen": [432, 441], "color": [432, 441], "unblock": 432, "policy_transform": 432, "fake_td": 432, "exported_polici": 432, "div": 432, "graph_modul": 432, "print_read": 432, "group0": 432, "group0_agent0_ob": 432, "collid": [432, 442], "group0_agent0": 432, "agent0_ob": 432, "comma": 432, "digress": 432, "exported_stochastic_polici": 432, "trace": 432, "batchsizetransform": 432, "recurrent_polici": 432, "fake_ob": 432, "fake_hidden0": 432, "fake_hidden1": 432, "fake_is_init": 432, "exported_recurrent_polici": 432, "platform": [432, 447], "aoti": 432, "_inductor": 432, "aoti_compile_and_packag": 432, "aoti_load_packag": 432, "pt2": 432, "pkg_path": 432, "package_path": 432, "compiled_modul": 432, "onnxruntim": 432, "showcas": [432, 443], "web": 432, "explain": [432, 444], "tensorrt": 432, "android": 432, "ale_pi": 432, "aleinterfac": 432, "loadrom": 432, "reset_gam": 432, "screen_ob": 432, "getscreenrgb": 432, "tick_param": 432, "bottom": 432, "labelleft": 432, "labelbottom": 432, "imshow": [432, 448], "dynamo_export": 432, "onnx_policy_export": 432, "onnx_file_path": 432, "ort_sess": 432, "inferencesess": 432, "cpuexecutionprovid": 432, "onnxruntime_input": 432, "get_input": 432, "onnx_polici": 432, "lightweight": [432, 437], "onnxruntime_output": 432, "topic": [433, 434, 435], "straight": 433, "backtrack": 433, "reset_with_act": 433, "stepped_data": 433, "spatial": 433, "useless": 433, "policyless": 433, "examin": [433, 441], "tackl": 434, "delv": 434, "extractor": 434, "additivegaussianmodul": [434, 441], "exploration_polici": [434, 441], "greedili": 434, "2d": [434, 441, 442], "innov": [434, 435], "rollout_explor": 434, "sole": 435, "supervis": [435, 436, 445, 448], "n_collect": 435, "get_next_batch": 435, "concis": 435, "ddpg_loss": 435, "total_loss": 435, "prove": 435, "reliev": 435, "concern": 435, "accustom": 436, "surprisingli": 436, "fundament": 436, "art": [436, 441, 442], "countless": 436, "yourself": [436, 441, 442], "everywher": 437, "log_scalar": 437, "my_scalar": 437, "saw": [437, 443, 445], "excess": 437, "lesson": 438, "voluntarili": 438, "torchrl_logg": 438, "training_loop": 438, "video_record": 438, "arbitrarili": 438, "t1": 438, "conclud": [438, 444], "tutorials_python": 439, "tutorials_jupyt": 439, "env1_obs_kei": 440, "observation_stand": 440, "env2_obs_kei": 440, "observation_walk": 440, "tdreset1": 440, "tdreset2": 440, "lazy_stack": 440, "policy_common": 440, "policy_stand": 440, "policy_walk": 440, "But": 440, "env1_mak": 440, "env2_mak": 440, "_single_task": 440, "td_rollout": 440, "matteo": [441, 442], "bettini": [441, 442], "benchmarl": [441, 442], "simple_tag": 441, "maddpg": [441, 442], "multiagentparticleenviron": 441, "mpe": 441, "centralis": [441, 442], "tie": [441, 442], "iddpg": [441, 442], "richard": 441, "andrew": 441, "mit": 441, "press": 441, "2018": 441, "mathbf": [441, 442], "decentralis": [441, 442], "literatur": [441, 442], "overcom": [441, 442], "stationari": [441, 442], "establish": 441, "gui": [441, 442], "is_sphinx": 441, "__sphinx_build__": 441, "n_iter": [441, 442, 443], "evad": 441, "iteration_when_stop_training_evad": 441, "memory_s": 441, "n_optimiser_step": 441, "train_batch_s": 441, "polyak_tau": 441, "chaser": 441, "red": 441, "circl": [441, 442], "green": 441, "touch": [441, 443], "penal": [441, 442], "obstacl": 441, "drag": [441, 442], "elast": [441, 442], "collis": [441, 442], "imped": 441, "n_chaser": 441, "n_evad": 441, "n_obstacl": 441, "use_vma": 441, "simple_tag_v3": 441, "num_good": 441, "num_adversari": 441, "num_obstacl": 441, "max_cycl": 441, "num_vmas_env": [441, 442], "num_good_ag": 441, "num_landmark": 441, "four": [441, 442, 443], "n_agents_in_that_group": 441, "stress": [441, 442], "paramount": [441, 442], "n_rollout_step": [441, 442], "evolut": [441, 442], "group_nam": 441, "n_agents_in_group": 441, "minor": 441, "agents_exploration_polici": 441, "utilis": [441, 442], "n_obs_per_ag": [441, 442], "n_actions_per_ag": [441, 442], "share_parameters_polici": [441, 442], "policy_net": [441, 442], "_agent": 441, "grant": [441, 442], "converg": [441, 442], "share_parameters_crit": [441, 442], "obs_act": 441, "cat_modul": 441, "critic_modul": 441, "fantast": [441, 442], "reset_td": 441, "interfer": 441, "subject": [441, 443], "flatten_kei": 441, "process_batch": 441, "group_shap": 441, "get_item_shap": [441, 442], "nested_done_kei": 441, "nested_terminated_kei": 441, "desc": [441, 442], "episode_reward_mean_": 441, "episode_reward_mean_map": 441, "train_group_map": 441, "group_batch": 441, "_group": 441, "loss_nam": 441, "episode_reward_mean": [441, 442], "fig": [441, 445], "set_ylabel": 441, "axvlin": 441, "orang": 441, "set_xlabel": 441, "video_logg": 441, "vmas_log": 441, "env_with_rend": 441, "vmas_rend": 441, "print_log_dir": 441, "profici": [441, 442], "lidar": 442, "sensor": 442, "mappo": 442, "ippo": 442, "analys": 442, "visualis": 442, "vmas_devic": 442, "6_000": 442, "minibatch_s": 442, "generalis": 442, "simd": 442, "warp": 442, "todai": 442, "surround": 442, "dot": [442, 443], "scenario_nam": 442, "critic_net": 442, "minibatch": 442, "episode_reward_mean_list": 442, "critic_network_param": 442, "target_critic_network_param": 442, "xvfb": 442, "pyvirtualdisplai": 442, "1400": 442, "900": 442, "pil": 442, "rendering_callback": 442, "fromarrai": 442, "gif": 442, "save_al": 442, "append_imag": 442, "freeli": 443, "broader": 443, "wider": 443, "acquaint": 443, "avenu": 443, "_apply_to_composit": 443, "default_x": 443, "default_i": 443, "upward": 443, "angular": 443, "sin": 443, "rad": 443, "angl": 443, "deleg": 443, "new_th": 443, "new_thdot": 443, "g_forc": 443, "angle_norm": 443, "albeit": 443, "high_th": 443, "high_thdot": 443, "low_th": 443, "low_thdot": 443, "trivial": 443, "irrelev": 443, "_make_spec": 443, "td_param": 443, "render_fp": 443, "random_": 443, "_make_step": 443, "staticmethod": 443, "skeleton": 443, "unitari": 443, "sine": 443, "cosin": 443, "sintransform": 443, "costransform": 443, "t_sin": 443, "t_co": 443, "cat_transform": 443, "simple_rollout": 443, "unexplor": 443, "init_td": 443, "traj_return": 443, "last_reward": 443, "is_ipython": 443, "inlin": 443, "get_backend": 443, "ion": 443, "gcf": 443, "clear_output": 443, "r3mtransform": 444, "embodi": 444, "env_transform": [444, 448], "wiser": 444, "batteri": 445, "gc": 445, "buffer_list": 445, "lowest": 445, "medium": 445, "buffer_lazytensor": 445, "tempdir": 445, "buffer_lazymemmap": 445, "fullest": 445, "mydata": 445, "buffer_lazi": 445, "background": 445, "question": [445, 447], "_i": 445, "artifici": 445, "hamper": 445, "she": 445, "pars": 445, "proport": 445, "reappear": 445, "unfold": 445, "problemat": 445, "4th": 445, "prioritizedslicesampl": 445, "tensordictmaxvaluewrit": 445, "demo": 447, "icml": 447, "vmoen": 447, "fb": 447, "invest": 447, "media": 447, "predominantli": 447, "data2": 447, "sub_key1": 447, "scturctur": 447, "data_stack": 447, "data_sampl": 447, "_sampler": 447, "_sum_tre": 447, "modulenotfounderror": 447, "noopresetenv": [447, 448], "backbone_modul": 447, "params_expand": 447, "exec_sequ": 447, "tensordict_exp": 447, "base_modul": 447, "tensordicts_prealloc": 447, "tensordicts_stack": 447, "tensordict_rollout": [447, 448], "automatical": 447, "60": 447, "particularili": 447, "concatmodul": 447, "loss_td": 447, "contributor": 447, "curiou": 447, "nascent": 447, "unsupervis": 448, "unifi": 448, "_build_env": 448, "deserv": 448, "__episode__": 448, "__trajectory__": 448, "void": 448, "reproduct": 448, "tensordict_tprim": 448, "wrapper1": 448, "wrapper2": 448, "obviou": 448, "truth": 448, "env_transformed_bi": 448, "stanc": 448, "transformeddistribut": 448, "base_dist": 448, "concat": 448, "mofidi": 448, "transformedenviron": 448, "moderet": 448, "computation": 448, "incom": 448, "amongst": 448, "has_cuda": 448, "convention": 448, "markovian": 448, "bar_": 448, "get_someth": 448, "aargh": 448, "is_clos": 448, "foo_list": 448, "121": 448, "evolv": 448, "steadi": 448, "approx": 448, "absor": 448, "_extra_st": 448}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [251, 0, 1, "", "implement_for"], [395, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "LocalWeightUpdaterBase"], [15, 0, 1, "", "MultiProcessedRemoteWeightUpdate"], [16, 0, 1, "", "MultiSyncDataCollector"], [17, 0, 1, "", "MultiaSyncDataCollector"], [18, 0, 1, "", "RayRemoteWeightUpdater"], [19, 0, 1, "", "RemoteWeightUpdaterBase"], [20, 0, 1, "", "SyncDataCollector"], [21, 0, 1, "", "VanillaLocalWeightUpdater"], [22, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.LocalWeightUpdaterBase": [[14, 1, 1, "", "register_collector"], [14, 1, 1, "", "update_weights"]], "torchrl.collectors.MultiProcessedRemoteWeightUpdate": [[15, 1, 1, "", "_get_server_weights"], [15, 1, 1, "", "_maybe_map_weights"], [15, 1, 1, "", "_sync_weights_with_worker"], [15, 1, 1, "", "all_worker_ids"], [15, 1, 1, "", "register_collector"]], "torchrl.collectors.MultiSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayRemoteWeightUpdater": [[18, 1, 1, "", "_get_server_weights"], [18, 1, 1, "", "_maybe_map_weights"], [18, 1, 1, "", "_skip_update"], [18, 1, 1, "", "_sync_weights_with_worker"], [18, 1, 1, "", "all_worker_ids"], [18, 1, 1, "", "register_collector"]], "torchrl.collectors.RemoteWeightUpdaterBase": [[19, 1, 1, "id0", "register_collector"], [19, 1, 1, "", "update_weights"]], "torchrl.collectors.SyncDataCollector": [[20, 1, 1, "", "iterator"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "rollout"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaLocalWeightUpdater": [[21, 1, 1, "", "_get_local_weights"], [21, 1, 1, "", "_get_server_weights"], [21, 1, 1, "", "_map_weights"], [21, 1, 1, "", "_maybe_map_weights"], [21, 1, 1, "", "_update_local_weights"], [21, 1, 1, "", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "reset"], [22, 1, 1, "", "set_seed"], [22, 1, 1, "", "shutdown"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[23, 0, 1, "", "DistributedDataCollector"], [24, 0, 1, "", "DistributedSyncDataCollector"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RayCollector"], [27, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[26, 1, 1, "", "add_collectors"], [26, 1, 1, "", "async_shutdown"], [26, 1, 1, "", "load_state_dict"], [26, 1, 1, "", "local_policy"], [26, 2, 1, "", "remote_collectors"], [26, 1, 1, "", "set_seed"], [26, 1, 1, "", "shutdown"], [26, 1, 1, "", "start"], [26, 1, 1, "", "state_dict"], [26, 1, 1, "", "stop_remote_collectors"], [26, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[28, 3, 1, "", "split_trajectories"]], "torchrl.data": [[29, 0, 1, "", "AdaptiveKLController"], [30, 0, 1, "", "Binary"], [31, 0, 1, "", "BinaryDiscreteTensorSpec"], [32, 0, 1, "", "BinaryToDecimal"], [33, 0, 1, "", "Bounded"], [34, 0, 1, "", "BoundedTensorSpec"], [35, 0, 1, "", "Categorical"], [36, 0, 1, "", "Composite"], [37, 0, 1, "", "CompositeSpec"], [38, 0, 1, "", "ConstantKLController"], [39, 0, 1, "", "DensifyReward"], [40, 0, 1, "", "DiscreteTensorSpec"], [41, 0, 1, "", "Flat2TED"], [42, 0, 1, "", "H5Combine"], [43, 0, 1, "", "H5Split"], [44, 0, 1, "", "HashToInt"], [45, 0, 1, "", "LLMData"], [46, 0, 1, "", "LLMInput"], [47, 0, 1, "", "LLMOutput"], [48, 0, 1, "", "LazyStackedCompositeSpec"], [49, 0, 1, "", "LazyStackedTensorSpec"], [50, 0, 1, "", "MCTSForest"], [51, 0, 1, "", "MultiCategorical"], [52, 0, 1, "", "MultiDiscreteTensorSpec"], [53, 0, 1, "", "MultiOneHot"], [54, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [55, 0, 1, "", "MultiStep"], [56, 0, 1, "", "Nested2TED"], [57, 0, 1, "", "NonTensor"], [58, 0, 1, "", "NonTensorSpec"], [59, 0, 1, "", "OneHot"], [60, 0, 1, "", "OneHotDiscreteTensorSpec"], [61, 0, 1, "", "PairwiseDataset"], [62, 0, 1, "", "PrioritizedReplayBuffer"], [63, 0, 1, "", "PromptData"], [64, 0, 1, "", "PromptTensorDictTokenizer"], [65, 0, 1, "", "QueryModule"], [66, 0, 1, "", "RandomProjectionHash"], [67, 0, 1, "", "RayReplayBuffer"], [68, 0, 1, "", "RemoteTensorDictReplayBuffer"], [69, 0, 1, "", "ReplayBuffer"], [70, 0, 1, "", "RewardData"], [71, 0, 1, "", "RolloutFromModel"], [72, 0, 1, "", "SipHash"], [73, 0, 1, "", "Stacked"], [74, 0, 1, "", "StackedComposite"], [75, 0, 1, "", "TED2Flat"], [76, 0, 1, "", "TED2Nested"], [77, 0, 1, "", "TensorDictMap"], [78, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [79, 0, 1, "", "TensorDictReplayBuffer"], [80, 0, 1, "", "TensorDictTokenizer"], [81, 0, 1, "", "TensorMap"], [82, 0, 1, "", "TensorSpec"], [83, 0, 1, "", "TokenizedDatasetLoader"], [84, 0, 1, "", "Tree"], [85, 0, 1, "", "Unbounded"], [86, 0, 1, "", "UnboundedContinuous"], [87, 0, 1, "", "UnboundedContinuousTensorSpec"], [88, 0, 1, "", "UnboundedDiscrete"], [89, 0, 1, "", "UnboundedDiscreteTensorSpec"], [90, 0, 1, "", "check_no_exclusive_keys"], [91, 0, 1, "", "consolidate_spec"], [92, 0, 1, "", "contains_lazy_spec"], [93, 0, 1, "", "create_infinite_iterator"], [94, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[29, 1, 1, "", "update"]], "torchrl.data.Binary": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 2, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "set_provisional_n"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "to_one_hot"], [31, 1, 1, "", "to_one_hot_spec"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "update_mask"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "mtia"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_load_state_dict_pre_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_post_hook"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "set_submodule"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 2, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 2, 1, "", "device"], [36, 1, 1, "", "empty"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "get"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_empty"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "items"], [36, 1, 1, "", "keys"], [36, 1, 1, "", "lock_"], [36, 1, 1, "", "make_neg_dim"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "pop"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "separates"], [36, 1, 1, "", "set"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unlock_"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "values"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "pop"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "separates"], [37, 1, 1, "", "set"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "compile"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "is_tdmodule_compatible"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "mtia"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_full_backward_pre_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_load_state_dict_pre_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "register_state_dict_post_hook"], [39, 1, 1, "", "register_state_dict_pre_hook"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "", "reset_out_keys"], [39, 1, 1, "", "reset_parameters_recursive"], [39, 1, 1, "", "select_out_keys"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "", "set_submodule"], [39, 1, 1, "", "share_memory"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "set_provisional_n"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "compile"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "mtia"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_load_state_dict_pre_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "register_state_dict_post_hook"], [44, 1, 1, "", "register_state_dict_pre_hook"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_submodule"], [44, 1, 1, "", "share_memory"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.data.LLMData": [[45, 2, 1, "", "device"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "fields"], [45, 1, 1, "", "from_tensordict"], [45, 1, 1, "", "get"], [45, 1, 1, "", "load"], [45, 1, 1, "", "load_"], [45, 1, 1, "", "load_memmap"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "memmap"], [45, 1, 1, "", "memmap_"], [45, 1, 1, "", "memmap_like"], [45, 1, 1, "", "memmap_refresh_"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to_tensordict"], [45, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[46, 2, 1, "", "device"], [46, 1, 1, "", "dumps"], [46, 1, 1, "", "fields"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[47, 2, 1, "", "device"], [47, 1, 1, "", "dumps"], [47, 1, 1, "", "fields"], [47, 1, 1, "", "from_tensordict"], [47, 1, 1, "", "get"], [47, 1, 1, "", "load"], [47, 1, 1, "", "load_"], [47, 1, 1, "", "load_memmap"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "memmap"], [47, 1, 1, "", "memmap_"], [47, 1, 1, "", "memmap_like"], [47, 1, 1, "", "memmap_refresh_"], [47, 1, 1, "", "save"], [47, 1, 1, "", "set"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "to_tensordict"], [47, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 2, 1, "", "device"], [48, 1, 1, "", "empty"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "get"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_empty"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "items"], [48, 1, 1, "", "keys"], [48, 1, 1, "", "lock_"], [48, 1, 1, "", "make_neg_dim"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "pop"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "separates"], [48, 1, 1, "", "set"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unlock_"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "values"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[50, 2, 1, "", "action_keys"], [50, 2, 1, "", "done_keys"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "get_keys_from_env"], [50, 2, 1, "", "observation_keys"], [50, 2, 1, "", "reward_keys"], [50, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 4, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "set_provisional_n"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[57, 1, 1, "", "assert_is_in"], [57, 1, 1, "", "cardinality"], [57, 1, 1, "", "clear_device_"], [57, 1, 1, "", "clone"], [57, 1, 1, "", "contains"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 2, 1, "", "device"], [57, 1, 1, "", "encode"], [57, 1, 1, "", "enumerate"], [57, 1, 1, "", "expand"], [57, 1, 1, "", "flatten"], [57, 1, 1, "", "implements_for_spec"], [57, 1, 1, "", "index"], [57, 1, 1, "", "is_in"], [57, 1, 1, "", "make_neg_dim"], [57, 2, 1, "", "ndim"], [57, 1, 1, "", "ndimension"], [57, 1, 1, "", "one"], [57, 1, 1, "", "ones"], [57, 1, 1, "", "project"], [57, 1, 1, "", "rand"], [57, 1, 1, "", "reshape"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "squeeze"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_numpy"], [57, 1, 1, "", "type_check"], [57, 1, 1, "", "unflatten"], [57, 1, 1, "", "unsqueeze"], [57, 1, 1, "", "view"], [57, 1, 1, "", "zero"], [57, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 4, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_categorical"], [59, 1, 1, "", "to_categorical_spec"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "to_one_hot"], [59, 1, 1, "", "to_one_hot_spec"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "update_mask"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[61, 2, 1, "", "device"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "fields"], [61, 1, 1, "", "from_dataset"], [61, 1, 1, "", "from_tensordict"], [61, 1, 1, "", "get"], [61, 1, 1, "", "load"], [61, 1, 1, "", "load_"], [61, 1, 1, "", "load_memmap"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "memmap"], [61, 1, 1, "", "memmap_"], [61, 1, 1, "", "memmap_like"], [61, 1, 1, "", "memmap_refresh_"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to_tensordict"], [61, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[63, 2, 1, "", "device"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "fields"], [63, 1, 1, "", "from_dataset"], [63, 1, 1, "", "from_tensordict"], [63, 1, 1, "", "get"], [63, 1, 1, "", "load"], [63, 1, 1, "", "load_"], [63, 1, 1, "", "load_memmap"], [63, 1, 1, "", "load_state_dict"], [63, 1, 1, "", "memmap"], [63, 1, 1, "", "memmap_"], [63, 1, 1, "", "memmap_like"], [63, 1, 1, "", "memmap_refresh_"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set"], [63, 1, 1, "", "state_dict"], [63, 1, 1, "", "to_tensordict"], [63, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[65, 1, 1, "", "add_module"], [65, 1, 1, "", "apply"], [65, 1, 1, "", "bfloat16"], [65, 1, 1, "", "buffers"], [65, 1, 1, "", "children"], [65, 1, 1, "", "compile"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 1, 1, "", "double"], [65, 1, 1, "", "eval"], [65, 1, 1, "", "extra_repr"], [65, 1, 1, "", "float"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_buffer"], [65, 1, 1, "", "get_extra_state"], [65, 1, 1, "", "get_parameter"], [65, 1, 1, "", "get_submodule"], [65, 1, 1, "", "half"], [65, 1, 1, "", "ipu"], [65, 1, 1, "", "is_tdmodule_compatible"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "modules"], [65, 1, 1, "", "mtia"], [65, 1, 1, "", "named_buffers"], [65, 1, 1, "", "named_children"], [65, 1, 1, "", "named_modules"], [65, 1, 1, "", "named_parameters"], [65, 1, 1, "", "parameters"], [65, 1, 1, "", "register_backward_hook"], [65, 1, 1, "", "register_buffer"], [65, 1, 1, "", "register_forward_hook"], [65, 1, 1, "", "register_forward_pre_hook"], [65, 1, 1, "", "register_full_backward_hook"], [65, 1, 1, "", "register_full_backward_pre_hook"], [65, 1, 1, "", "register_load_state_dict_post_hook"], [65, 1, 1, "", "register_load_state_dict_pre_hook"], [65, 1, 1, "", "register_module"], [65, 1, 1, "", "register_parameter"], [65, 1, 1, "", "register_state_dict_post_hook"], [65, 1, 1, "", "register_state_dict_pre_hook"], [65, 1, 1, "", "requires_grad_"], [65, 1, 1, "", "reset_out_keys"], [65, 1, 1, "", "reset_parameters_recursive"], [65, 1, 1, "", "select_out_keys"], [65, 1, 1, "", "set_extra_state"], [65, 1, 1, "", "set_submodule"], [65, 1, 1, "", "share_memory"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_empty"], [65, 1, 1, "", "train"], [65, 1, 1, "", "type"], [65, 1, 1, "", "xpu"], [65, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "as_remote"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 2, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 2, 1, "", "storage"], [67, 2, 1, "", "write_count"], [67, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[70, 2, 1, "", "device"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "fields"], [70, 1, 1, "", "from_tensordict"], [70, 1, 1, "", "get"], [70, 1, 1, "", "load"], [70, 1, 1, "", "load_"], [70, 1, 1, "", "load_memmap"], [70, 1, 1, "", "load_state_dict"], [70, 1, 1, "", "memmap"], [70, 1, 1, "", "memmap_"], [70, 1, 1, "", "memmap_like"], [70, 1, 1, "", "memmap_refresh_"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set"], [70, 1, 1, "", "state_dict"], [70, 1, 1, "", "to_tensordict"], [70, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[71, 1, 1, "", "create_rollout_td"], [71, 1, 1, "", "generate"], [71, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "cardinality"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 2, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "enumerate"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 2, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "get"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_empty"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "items"], [74, 1, 1, "", "keys"], [74, 1, 1, "", "lock_"], [74, 1, 1, "", "make_neg_dim"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "pop"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "separates"], [74, 1, 1, "", "set"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unlock_"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "values"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[77, 1, 1, "", "add_module"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "bfloat16"], [77, 1, 1, "", "buffers"], [77, 1, 1, "", "children"], [77, 1, 1, "", "compile"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 1, 1, "", "double"], [77, 1, 1, "", "eval"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "float"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "from_tensordict_pair"], [77, 1, 1, "", "get_buffer"], [77, 1, 1, "", "get_extra_state"], [77, 1, 1, "", "get_parameter"], [77, 1, 1, "", "get_submodule"], [77, 1, 1, "", "half"], [77, 1, 1, "", "ipu"], [77, 1, 1, "", "is_tdmodule_compatible"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "modules"], [77, 1, 1, "", "mtia"], [77, 1, 1, "", "named_buffers"], [77, 1, 1, "", "named_children"], [77, 1, 1, "", "named_modules"], [77, 1, 1, "", "named_parameters"], [77, 1, 1, "", "parameters"], [77, 1, 1, "", "register_backward_hook"], [77, 1, 1, "", "register_buffer"], [77, 1, 1, "", "register_forward_hook"], [77, 1, 1, "", "register_forward_pre_hook"], [77, 1, 1, "", "register_full_backward_hook"], [77, 1, 1, "", "register_full_backward_pre_hook"], [77, 1, 1, "", "register_load_state_dict_post_hook"], [77, 1, 1, "", "register_load_state_dict_pre_hook"], [77, 1, 1, "", "register_module"], [77, 1, 1, "", "register_parameter"], [77, 1, 1, "", "register_state_dict_post_hook"], [77, 1, 1, "", "register_state_dict_pre_hook"], [77, 1, 1, "", "requires_grad_"], [77, 1, 1, "", "reset_out_keys"], [77, 1, 1, "", "reset_parameters_recursive"], [77, 1, 1, "", "select_out_keys"], [77, 1, 1, "", "set_extra_state"], [77, 1, 1, "", "set_submodule"], [77, 1, 1, "", "share_memory"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_empty"], [77, 1, 1, "", "train"], [77, 1, 1, "", "type"], [77, 1, 1, "", "xpu"], [77, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 1, 1, "", "as_remote"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 2, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 2, 1, "", "storage"], [78, 2, 1, "", "write_count"], [78, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[83, 1, 1, "", "dataset_to_tensordict"], [83, 1, 1, "", "load"]], "torchrl.data.Tree": [[84, 2, 1, "", "branching_action"], [84, 2, 1, "", "device"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "edges"], [84, 1, 1, "", "fields"], [84, 1, 1, "", "from_tensordict"], [84, 2, 1, "", "full_action_spec"], [84, 2, 1, "", "full_done_spec"], [84, 2, 1, "", "full_observation_spec"], [84, 2, 1, "", "full_reward_spec"], [84, 2, 1, "", "full_state_spec"], [84, 1, 1, "", "fully_expanded"], [84, 1, 1, "", "get"], [84, 1, 1, "", "get_vertex_by_hash"], [84, 1, 1, "", "get_vertex_by_id"], [84, 2, 1, "", "is_terminal"], [84, 1, 1, "", "load"], [84, 1, 1, "", "load_"], [84, 1, 1, "", "load_memmap"], [84, 1, 1, "", "load_state_dict"], [84, 1, 1, "", "make_node"], [84, 1, 1, "", "max_length"], [84, 1, 1, "", "memmap"], [84, 1, 1, "", "memmap_"], [84, 1, 1, "", "memmap_like"], [84, 1, 1, "", "memmap_refresh_"], [84, 2, 1, "", "node_observation"], [84, 2, 1, "", "node_observations"], [84, 2, 1, "", "num_children"], [84, 1, 1, "", "num_vertices"], [84, 2, 1, "", "parent"], [84, 1, 1, "", "plot"], [84, 2, 1, "", "prev_action"], [84, 1, 1, "", "rollout_from_path"], [84, 1, 1, "", "save"], [84, 2, 1, "", "selected_actions"], [84, 1, 1, "", "set"], [84, 1, 1, "", "state_dict"], [84, 1, 1, "", "to_string"], [84, 1, 1, "", "to_tensordict"], [84, 1, 1, "", "unbind"], [84, 1, 1, "", "valid_paths"], [84, 1, 1, "", "vertices"], [84, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[85, 1, 1, "", "assert_is_in"], [85, 1, 1, "", "cardinality"], [85, 1, 1, "", "clear_device_"], [85, 1, 1, "", "clone"], [85, 1, 1, "", "contains"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 2, 1, "", "device"], [85, 1, 1, "", "encode"], [85, 1, 1, "", "enumerate"], [85, 1, 1, "", "expand"], [85, 1, 1, "", "flatten"], [85, 1, 1, "", "implements_for_spec"], [85, 1, 1, "", "index"], [85, 1, 1, "", "is_in"], [85, 1, 1, "", "make_neg_dim"], [85, 2, 1, "", "ndim"], [85, 1, 1, "", "ndimension"], [85, 1, 1, "", "one"], [85, 1, 1, "", "ones"], [85, 1, 1, "", "project"], [85, 1, 1, "", "rand"], [85, 1, 1, "", "reshape"], [85, 1, 1, "", "sample"], [85, 1, 1, "", "squeeze"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_numpy"], [85, 1, 1, "", "type_check"], [85, 1, 1, "", "unflatten"], [85, 1, 1, "", "unsqueeze"], [85, 1, 1, "", "view"], [85, 1, 1, "", "zero"], [85, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[95, 0, 1, "", "FlatStorageCheckpointer"], [96, 0, 1, "", "H5StorageCheckpointer"], [97, 0, 1, "", "ImmutableDatasetWriter"], [98, 0, 1, "", "LazyMemmapStorage"], [99, 0, 1, "", "LazyStackStorage"], [100, 0, 1, "", "LazyTensorStorage"], [101, 0, 1, "", "ListStorage"], [102, 0, 1, "", "ListStorageCheckpointer"], [103, 0, 1, "", "NestedStorageCheckpointer"], [104, 0, 1, "", "PrioritizedSampler"], [105, 0, 1, "", "PrioritizedSliceSampler"], [106, 0, 1, "", "RandomSampler"], [107, 0, 1, "", "ReplayBufferEnsemble"], [108, 0, 1, "", "RoundRobinWriter"], [109, 0, 1, "", "Sampler"], [110, 0, 1, "", "SamplerEnsemble"], [111, 0, 1, "", "SamplerWithoutReplacement"], [112, 0, 1, "", "SliceSampler"], [113, 0, 1, "", "SliceSamplerWithoutReplacement"], [114, 0, 1, "", "Storage"], [115, 0, 1, "", "StorageCheckpointerBase"], [116, 0, 1, "", "StorageEnsemble"], [117, 0, 1, "", "StorageEnsembleCheckpointer"], [118, 0, 1, "", "TensorDictMaxValueWriter"], [119, 0, 1, "", "TensorDictRoundRobinWriter"], [120, 0, 1, "", "TensorStorage"], [121, 0, 1, "", "TensorStorageCheckpointer"], [122, 0, 1, "", "Writer"], [123, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[99, 1, 1, "", "attach"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "load"], [99, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[100, 1, 1, "", "attach"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "load"], [100, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[104, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[105, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[107, 1, 1, "", "add"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "as_remote"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "dumps"], [107, 1, 1, "", "empty"], [107, 1, 1, "", "extend"], [107, 1, 1, "", "insert_transform"], [107, 1, 1, "", "load"], [107, 1, 1, "", "loads"], [107, 1, 1, "", "register_load_hook"], [107, 1, 1, "", "register_save_hook"], [107, 1, 1, "", "sample"], [107, 2, 1, "", "sampler"], [107, 1, 1, "", "save"], [107, 1, 1, "", "set_sampler"], [107, 1, 1, "", "set_storage"], [107, 1, 1, "", "set_writer"], [107, 2, 1, "", "storage"], [107, 2, 1, "", "write_count"], [107, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[108, 1, 1, "", "add"], [108, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[116, 1, 1, "", "attach"], [116, 1, 1, "", "dump"], [116, 1, 1, "", "load"], [116, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"], [118, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[120, 1, 1, "", "attach"], [120, 1, 1, "", "dump"], [120, 1, 1, "", "load"], [120, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[122, 1, 1, "", "add"], [122, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[123, 1, 1, "", "add"], [123, 1, 1, "", "extend"]], "torchrl.envs": [[124, 0, 1, "", "AsyncEnvPool"], [125, 3, 1, "", "BraxEnv"], [126, 3, 1, "", "BraxWrapper"], [127, 0, 1, "", "ChessEnv"], [128, 3, 1, "", "DMControlEnv"], [129, 3, 1, "", "DMControlWrapper"], [130, 0, 1, "", "EnvBase"], [131, 0, 1, "", "EnvCreator"], [132, 0, 1, "", "EnvMetaData"], [133, 3, 1, "", "GymEnv"], [134, 0, 1, "", "GymLikeEnv"], [135, 3, 1, "", "GymWrapper"], [136, 3, 1, "", "HabitatEnv"], [137, 3, 1, "", "IsaacGymEnv"], [138, 3, 1, "", "IsaacGymWrapper"], [139, 3, 1, "", "JumanjiEnv"], [140, 3, 1, "", "JumanjiWrapper"], [141, 0, 1, "", "LLMEnv"], [142, 0, 1, "", "LLMHashingEnv"], [143, 3, 1, "", "MOGymEnv"], [144, 3, 1, "", "MOGymWrapper"], [145, 3, 1, "", "MarlGroupMapType"], [146, 3, 1, "", "MeltingpotEnv"], [147, 3, 1, "", "MeltingpotWrapper"], [148, 3, 1, "", "ModelBasedEnvBase"], [149, 3, 1, "", "MultiThreadedEnv"], [150, 3, 1, "", "MultiThreadedEnvWrapper"], [151, 3, 1, "", "OpenMLEnv"], [152, 3, 1, "", "OpenSpielEnv"], [153, 3, 1, "", "OpenSpielWrapper"], [154, 0, 1, "", "ParallelEnv"], [155, 0, 1, "", "PendulumEnv"], [156, 3, 1, "", "PettingZooEnv"], [157, 3, 1, "", "PettingZooWrapper"], [158, 0, 1, "", "ProcessorAsyncEnvPool"], [159, 3, 1, "", "RandomPolicy"], [160, 3, 1, "", "RoboHiveEnv"], [161, 3, 1, "", "SMACv2Env"], [162, 3, 1, "", "SMACv2Wrapper"], [163, 0, 1, "", "SerialEnv"], [164, 0, 1, "", "ThreadingAsyncEnvPool"], [165, 0, 1, "", "TicTacToeEnv"], [166, 3, 1, "", "UnityMLAgentsEnv"], [167, 3, 1, "", "UnityMLAgentsWrapper"], [168, 3, 1, "", "VmasEnv"], [169, 3, 1, "", "VmasWrapper"], [170, 3, 1, "", "check_env_specs"], [171, 3, 1, "", "check_marl_grouping"], [172, 3, 1, "", "exploration_type"], [173, 3, 1, "", "get_available_libraries"], [174, 3, 1, "", "gym_backend"], [175, 3, 1, "", "make_composite_from_td"], [148, 1, 1, "", "rand_step"], [178, 3, 1, "", "register_gym_spec_conversion"], [148, 1, 1, "", "reset"], [148, 1, 1, "", "rollout"], [179, 3, 1, "", "set_exploration_type"], [180, 3, 1, "", "set_gym_backend"], [148, 1, 1, "", "set_seed"], [148, 1, 1, "", "step"], [181, 3, 1, "", "step_mdp"], [182, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[124, 2, 1, "", "action_key"], [124, 2, 1, "", "action_keys"], [124, 2, 1, "", "action_spec"], [124, 2, 1, "", "action_spec_unbatched"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "all_actions"], [124, 1, 1, "", "any_done"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 1, 1, "", "auto_specs_"], [124, 2, 1, "", "batch_dims"], [124, 2, 1, "", "batch_locked"], [124, 2, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "cardinality"], [124, 1, 1, "", "check_env_specs"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 2, 1, "", "done_key"], [124, 2, 1, "", "done_keys"], [124, 2, 1, "", "done_keys_groups"], [124, 2, 1, "", "done_spec"], [124, 2, 1, "", "done_spec_unbatched"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 2, 1, "", "full_action_spec"], [124, 2, 1, "", "full_action_spec_unbatched"], [124, 2, 1, "", "full_done_spec"], [124, 2, 1, "", "full_done_spec_unbatched"], [124, 2, 1, "", "full_observation_spec_unbatched"], [124, 2, 1, "", "full_reward_spec"], [124, 2, 1, "", "full_reward_spec_unbatched"], [124, 2, 1, "", "full_state_spec"], [124, 2, 1, "", "full_state_spec_unbatched"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 2, 1, "", "input_spec"], [124, 2, 1, "", "input_spec_unbatched"], [124, 1, 1, "", "ipu"], [124, 2, 1, "", "is_spec_locked"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "mtia"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 2, 1, "", "observation_keys"], [124, 2, 1, "", "observation_spec"], [124, 2, 1, "", "observation_spec_unbatched"], [124, 2, 1, "", "output_spec"], [124, 2, 1, "", "output_spec_unbatched"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_load_state_dict_pre_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_post_hook"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "", "reset"], [124, 2, 1, "", "reset_keys"], [124, 2, 1, "", "reward_key"], [124, 2, 1, "", "reward_keys"], [124, 2, 1, "", "reward_spec"], [124, 2, 1, "", "reward_spec_unbatched"], [124, 1, 1, "", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "", "set_seed"], [124, 1, 1, "", "set_spec_lock_"], [124, 1, 1, "", "set_submodule"], [124, 2, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 2, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 2, 1, "", "state_keys"], [124, 2, 1, "", "state_spec"], [124, 2, 1, "", "state_spec_unbatched"], [124, 1, 1, "", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "step_mdp"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[127, 2, 1, "", "action_key"], [127, 2, 1, "", "action_keys"], [127, 2, 1, "", "action_spec"], [127, 2, 1, "", "action_spec_unbatched"], [127, 1, 1, "", "add_module"], [127, 1, 1, "", "add_truncated_keys"], [127, 1, 1, "", "all_actions"], [127, 1, 1, "", "any_done"], [127, 1, 1, "", "append_transform"], [127, 1, 1, "", "apply"], [127, 1, 1, "", "auto_specs_"], [127, 2, 1, "", "batch_dims"], [127, 2, 1, "", "batch_locked"], [127, 2, 1, "", "batch_size"], [127, 1, 1, "", "bfloat16"], [127, 1, 1, "", "buffers"], [127, 1, 1, "", "cardinality"], [127, 1, 1, "", "check_env_specs"], [127, 1, 1, "", "children"], [127, 1, 1, "", "compile"], [127, 1, 1, "", "cpu"], [127, 1, 1, "", "cuda"], [127, 2, 1, "", "done_key"], [127, 2, 1, "", "done_keys"], [127, 2, 1, "", "done_keys_groups"], [127, 2, 1, "", "done_spec"], [127, 2, 1, "", "done_spec_unbatched"], [127, 1, 1, "", "double"], [127, 1, 1, "", "empty_cache"], [127, 1, 1, "", "eval"], [127, 1, 1, "", "extra_repr"], [127, 1, 1, "", "fake_tensordict"], [127, 1, 1, "", "float"], [127, 1, 1, "", "forward"], [127, 2, 1, "", "full_action_spec"], [127, 2, 1, "", "full_action_spec_unbatched"], [127, 2, 1, "", "full_done_spec"], [127, 2, 1, "", "full_done_spec_unbatched"], [127, 2, 1, "", "full_observation_spec_unbatched"], [127, 2, 1, "", "full_reward_spec"], [127, 2, 1, "", "full_reward_spec_unbatched"], [127, 2, 1, "", "full_state_spec"], [127, 2, 1, "", "full_state_spec_unbatched"], [127, 1, 1, "", "get_buffer"], [127, 1, 1, "", "get_extra_state"], [127, 1, 1, "", "get_legal_moves"], [127, 1, 1, "", "get_parameter"], [127, 1, 1, "", "get_submodule"], [127, 1, 1, "", "half"], [127, 2, 1, "", "input_spec"], [127, 2, 1, "", "input_spec_unbatched"], [127, 1, 1, "", "ipu"], [127, 2, 1, "", "is_spec_locked"], [127, 1, 1, "", "load_state_dict"], [127, 1, 1, "", "maybe_reset"], [127, 1, 1, "", "modules"], [127, 1, 1, "", "mtia"], [127, 1, 1, "", "named_buffers"], [127, 1, 1, "", "named_children"], [127, 1, 1, "", "named_modules"], [127, 1, 1, "", "named_parameters"], [127, 2, 1, "", "observation_keys"], [127, 2, 1, "", "observation_spec"], [127, 2, 1, "", "observation_spec_unbatched"], [127, 2, 1, "", "output_spec"], [127, 2, 1, "", "output_spec_unbatched"], [127, 1, 1, "", "parameters"], [127, 1, 1, "", "rand_action"], [127, 1, 1, "", "rand_step"], [127, 1, 1, "", "register_backward_hook"], [127, 1, 1, "", "register_buffer"], [127, 1, 1, "", "register_forward_hook"], [127, 1, 1, "", "register_forward_pre_hook"], [127, 1, 1, "", "register_full_backward_hook"], [127, 1, 1, "", "register_full_backward_pre_hook"], [127, 1, 1, "", "register_gym"], [127, 1, 1, "", "register_load_state_dict_post_hook"], [127, 1, 1, "", "register_load_state_dict_pre_hook"], [127, 1, 1, "", "register_module"], [127, 1, 1, "", "register_parameter"], [127, 1, 1, "", "register_state_dict_post_hook"], [127, 1, 1, "", "register_state_dict_pre_hook"], [127, 1, 1, "", "requires_grad_"], [127, 1, 1, "", "reset"], [127, 2, 1, "", "reset_keys"], [127, 2, 1, "", "reward_key"], [127, 2, 1, "", "reward_keys"], [127, 2, 1, "", "reward_spec"], [127, 2, 1, "", "reward_spec_unbatched"], [127, 1, 1, "", "rollout"], [127, 1, 1, "", "set_extra_state"], [127, 1, 1, "", "set_seed"], [127, 1, 1, "", "set_spec_lock_"], [127, 1, 1, "", "set_submodule"], [127, 2, 1, "", "shape"], [127, 1, 1, "", "share_memory"], [127, 2, 1, "", "specs"], [127, 1, 1, "", "state_dict"], [127, 2, 1, "", "state_keys"], [127, 2, 1, "", "state_spec"], [127, 2, 1, "", "state_spec_unbatched"], [127, 1, 1, "", "step"], [127, 1, 1, "", "step_and_maybe_reset"], [127, 1, 1, "", "step_mdp"], [127, 1, 1, "", "to"], [127, 1, 1, "", "to_empty"], [127, 1, 1, "", "train"], [127, 1, 1, "", "type"], [127, 1, 1, "", "xpu"], [127, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[130, 2, 1, "", "action_key"], [130, 2, 1, "", "action_keys"], [130, 2, 1, "", "action_spec"], [130, 2, 1, "", "action_spec_unbatched"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "all_actions"], [130, 1, 1, "", "any_done"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 1, 1, "", "auto_specs_"], [130, 2, 1, "", "batch_dims"], [130, 2, 1, "", "batch_locked"], [130, 2, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "cardinality"], [130, 1, 1, "", "check_env_specs"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 2, 1, "", "done_key"], [130, 2, 1, "", "done_keys"], [130, 2, 1, "", "done_keys_groups"], [130, 2, 1, "", "done_spec"], [130, 2, 1, "", "done_spec_unbatched"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 2, 1, "", "full_action_spec"], [130, 2, 1, "", "full_action_spec_unbatched"], [130, 2, 1, "", "full_done_spec"], [130, 2, 1, "", "full_done_spec_unbatched"], [130, 2, 1, "", "full_observation_spec_unbatched"], [130, 2, 1, "", "full_reward_spec"], [130, 2, 1, "", "full_reward_spec_unbatched"], [130, 2, 1, "", "full_state_spec"], [130, 2, 1, "", "full_state_spec_unbatched"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 2, 1, "", "input_spec"], [130, 2, 1, "", "input_spec_unbatched"], [130, 1, 1, "", "ipu"], [130, 2, 1, "", "is_spec_locked"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 2, 1, "", "observation_keys"], [130, 2, 1, "", "observation_spec"], [130, 2, 1, "", "observation_spec_unbatched"], [130, 2, 1, "", "output_spec"], [130, 2, 1, "", "output_spec_unbatched"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "id0", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "id1", "reset"], [130, 2, 1, "", "reset_keys"], [130, 2, 1, "", "reward_key"], [130, 2, 1, "", "reward_keys"], [130, 2, 1, "", "reward_spec"], [130, 2, 1, "", "reward_spec_unbatched"], [130, 1, 1, "id2", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "id3", "set_seed"], [130, 1, 1, "", "set_spec_lock_"], [130, 1, 1, "", "set_submodule"], [130, 2, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 2, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 2, 1, "", "state_keys"], [130, 2, 1, "", "state_spec"], [130, 2, 1, "", "state_spec_unbatched"], [130, 1, 1, "id4", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "step_mdp"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[131, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[134, 2, 1, "", "action_key"], [134, 2, 1, "", "action_keys"], [134, 2, 1, "", "action_spec"], [134, 2, 1, "", "action_spec_unbatched"], [134, 1, 1, "", "add_module"], [134, 1, 1, "", "add_truncated_keys"], [134, 1, 1, "", "all_actions"], [134, 1, 1, "", "any_done"], [134, 1, 1, "", "append_transform"], [134, 1, 1, "", "apply"], [134, 1, 1, "", "auto_register_info_dict"], [134, 1, 1, "", "auto_specs_"], [134, 2, 1, "", "batch_dims"], [134, 2, 1, "", "batch_locked"], [134, 2, 1, "", "batch_size"], [134, 1, 1, "", "bfloat16"], [134, 1, 1, "", "buffers"], [134, 1, 1, "", "cardinality"], [134, 1, 1, "", "check_env_specs"], [134, 1, 1, "", "children"], [134, 1, 1, "", "close"], [134, 1, 1, "", "compile"], [134, 1, 1, "", "cpu"], [134, 1, 1, "", "cuda"], [134, 2, 1, "", "done_key"], [134, 2, 1, "", "done_keys"], [134, 2, 1, "", "done_keys_groups"], [134, 2, 1, "", "done_spec"], [134, 2, 1, "", "done_spec_unbatched"], [134, 1, 1, "", "double"], [134, 1, 1, "", "empty_cache"], [134, 1, 1, "", "eval"], [134, 1, 1, "", "extra_repr"], [134, 1, 1, "", "fake_tensordict"], [134, 1, 1, "", "float"], [134, 1, 1, "", "forward"], [134, 2, 1, "", "full_action_spec"], [134, 2, 1, "", "full_action_spec_unbatched"], [134, 2, 1, "", "full_done_spec"], [134, 2, 1, "", "full_done_spec_unbatched"], [134, 2, 1, "", "full_observation_spec_unbatched"], [134, 2, 1, "", "full_reward_spec"], [134, 2, 1, "", "full_reward_spec_unbatched"], [134, 2, 1, "", "full_state_spec"], [134, 2, 1, "", "full_state_spec_unbatched"], [134, 1, 1, "", "get_buffer"], [134, 1, 1, "", "get_extra_state"], [134, 1, 1, "", "get_parameter"], [134, 1, 1, "", "get_submodule"], [134, 1, 1, "", "half"], [134, 2, 1, "", "input_spec"], [134, 2, 1, "", "input_spec_unbatched"], [134, 1, 1, "", "ipu"], [134, 2, 1, "", "is_spec_locked"], [134, 1, 1, "", "load_state_dict"], [134, 1, 1, "", "maybe_reset"], [134, 1, 1, "", "modules"], [134, 1, 1, "", "mtia"], [134, 1, 1, "", "named_buffers"], [134, 1, 1, "", "named_children"], [134, 1, 1, "", "named_modules"], [134, 1, 1, "", "named_parameters"], [134, 2, 1, "", "observation_keys"], [134, 2, 1, "", "observation_spec"], [134, 2, 1, "", "observation_spec_unbatched"], [134, 2, 1, "", "output_spec"], [134, 2, 1, "", "output_spec_unbatched"], [134, 1, 1, "", "parameters"], [134, 1, 1, "", "rand_action"], [134, 1, 1, "", "rand_step"], [134, 1, 1, "", "read_action"], [134, 1, 1, "", "read_done"], [134, 1, 1, "", "read_obs"], [134, 1, 1, "", "read_reward"], [134, 1, 1, "", "register_backward_hook"], [134, 1, 1, "", "register_buffer"], [134, 1, 1, "", "register_forward_hook"], [134, 1, 1, "", "register_forward_pre_hook"], [134, 1, 1, "", "register_full_backward_hook"], [134, 1, 1, "", "register_full_backward_pre_hook"], [134, 1, 1, "", "register_gym"], [134, 1, 1, "", "register_load_state_dict_post_hook"], [134, 1, 1, "", "register_load_state_dict_pre_hook"], [134, 1, 1, "", "register_module"], [134, 1, 1, "", "register_parameter"], [134, 1, 1, "", "register_state_dict_post_hook"], [134, 1, 1, "", "register_state_dict_pre_hook"], [134, 1, 1, "", "requires_grad_"], [134, 1, 1, "", "reset"], [134, 2, 1, "", "reset_keys"], [134, 2, 1, "", "reward_key"], [134, 2, 1, "", "reward_keys"], [134, 2, 1, "", "reward_spec"], [134, 2, 1, "", "reward_spec_unbatched"], [134, 1, 1, "", "rollout"], [134, 1, 1, "", "set_extra_state"], [134, 1, 1, "", "set_info_dict_reader"], [134, 1, 1, "", "set_seed"], [134, 1, 1, "", "set_spec_lock_"], [134, 1, 1, "", "set_submodule"], [134, 2, 1, "", "shape"], [134, 1, 1, "", "share_memory"], [134, 2, 1, "", "specs"], [134, 1, 1, "", "state_dict"], [134, 2, 1, "", "state_keys"], [134, 2, 1, "", "state_spec"], [134, 2, 1, "", "state_spec_unbatched"], [134, 1, 1, "", "step"], [134, 1, 1, "", "step_and_maybe_reset"], [134, 1, 1, "", "step_mdp"], [134, 1, 1, "", "to"], [134, 1, 1, "", "to_empty"], [134, 1, 1, "", "train"], [134, 1, 1, "", "type"], [134, 1, 1, "", "xpu"], [134, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[141, 2, 1, "", "action_key"], [141, 2, 1, "", "action_keys"], [141, 2, 1, "", "action_spec"], [141, 2, 1, "", "action_spec_unbatched"], [141, 1, 1, "", "add_module"], [141, 1, 1, "", "add_truncated_keys"], [141, 1, 1, "", "all_actions"], [141, 1, 1, "", "any_done"], [141, 1, 1, "", "append_transform"], [141, 1, 1, "", "apply"], [141, 1, 1, "", "auto_specs_"], [141, 2, 1, "", "batch_dims"], [141, 2, 1, "", "batch_locked"], [141, 2, 1, "", "batch_size"], [141, 1, 1, "", "bfloat16"], [141, 1, 1, "", "buffers"], [141, 1, 1, "", "cardinality"], [141, 1, 1, "", "check_env_specs"], [141, 1, 1, "", "children"], [141, 1, 1, "", "compile"], [141, 1, 1, "", "cpu"], [141, 1, 1, "", "cuda"], [141, 2, 1, "", "done_key"], [141, 2, 1, "", "done_keys"], [141, 2, 1, "", "done_keys_groups"], [141, 2, 1, "", "done_spec"], [141, 2, 1, "", "done_spec_unbatched"], [141, 1, 1, "", "double"], [141, 1, 1, "", "empty_cache"], [141, 1, 1, "", "eval"], [141, 1, 1, "", "extra_repr"], [141, 1, 1, "", "fake_tensordict"], [141, 1, 1, "", "float"], [141, 1, 1, "", "forward"], [141, 1, 1, "id0", "from_dataloader"], [141, 2, 1, "", "full_action_spec"], [141, 2, 1, "", "full_action_spec_unbatched"], [141, 2, 1, "", "full_done_spec"], [141, 2, 1, "", "full_done_spec_unbatched"], [141, 2, 1, "", "full_observation_spec_unbatched"], [141, 2, 1, "", "full_reward_spec"], [141, 2, 1, "", "full_reward_spec_unbatched"], [141, 2, 1, "", "full_state_spec"], [141, 2, 1, "", "full_state_spec_unbatched"], [141, 1, 1, "", "get_buffer"], [141, 1, 1, "", "get_extra_state"], [141, 1, 1, "", "get_parameter"], [141, 1, 1, "", "get_submodule"], [141, 1, 1, "", "half"], [141, 2, 1, "", "input_spec"], [141, 2, 1, "", "input_spec_unbatched"], [141, 1, 1, "", "ipu"], [141, 2, 1, "", "is_spec_locked"], [141, 1, 1, "", "load_state_dict"], [141, 1, 1, "", "maybe_reset"], [141, 1, 1, "", "modules"], [141, 1, 1, "", "mtia"], [141, 1, 1, "", "named_buffers"], [141, 1, 1, "", "named_children"], [141, 1, 1, "", "named_modules"], [141, 1, 1, "", "named_parameters"], [141, 2, 1, "", "observation_keys"], [141, 2, 1, "", "observation_spec"], [141, 2, 1, "", "observation_spec_unbatched"], [141, 2, 1, "", "output_spec"], [141, 2, 1, "", "output_spec_unbatched"], [141, 1, 1, "", "parameters"], [141, 1, 1, "", "rand_action"], [141, 1, 1, "", "rand_step"], [141, 1, 1, "", "register_backward_hook"], [141, 1, 1, "", "register_buffer"], [141, 1, 1, "", "register_forward_hook"], [141, 1, 1, "", "register_forward_pre_hook"], [141, 1, 1, "", "register_full_backward_hook"], [141, 1, 1, "", "register_full_backward_pre_hook"], [141, 1, 1, "", "register_gym"], [141, 1, 1, "", "register_load_state_dict_post_hook"], [141, 1, 1, "", "register_load_state_dict_pre_hook"], [141, 1, 1, "", "register_module"], [141, 1, 1, "", "register_parameter"], [141, 1, 1, "", "register_state_dict_post_hook"], [141, 1, 1, "", "register_state_dict_pre_hook"], [141, 1, 1, "", "requires_grad_"], [141, 1, 1, "", "reset"], [141, 2, 1, "", "reset_keys"], [141, 2, 1, "", "reward_key"], [141, 2, 1, "", "reward_keys"], [141, 2, 1, "", "reward_spec"], [141, 2, 1, "", "reward_spec_unbatched"], [141, 1, 1, "", "rollout"], [141, 1, 1, "", "set_extra_state"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "set_spec_lock_"], [141, 1, 1, "", "set_submodule"], [141, 2, 1, "", "shape"], [141, 1, 1, "", "share_memory"], [141, 2, 1, "", "specs"], [141, 1, 1, "", "state_dict"], [141, 2, 1, "", "state_keys"], [141, 2, 1, "", "state_spec"], [141, 2, 1, "", "state_spec_unbatched"], [141, 1, 1, "", "step"], [141, 1, 1, "", "step_and_maybe_reset"], [141, 1, 1, "", "step_mdp"], [141, 1, 1, "", "to"], [141, 1, 1, "", "to_empty"], [141, 1, 1, "", "train"], [141, 1, 1, "", "type"], [141, 1, 1, "", "xpu"], [141, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[142, 2, 1, "", "action_key"], [142, 2, 1, "", "action_keys"], [142, 2, 1, "", "action_spec"], [142, 2, 1, "", "action_spec_unbatched"], [142, 1, 1, "", "add_module"], [142, 1, 1, "", "add_truncated_keys"], [142, 1, 1, "", "all_actions"], [142, 1, 1, "", "any_done"], [142, 1, 1, "", "append_transform"], [142, 1, 1, "", "apply"], [142, 1, 1, "", "auto_specs_"], [142, 2, 1, "", "batch_dims"], [142, 2, 1, "", "batch_locked"], [142, 2, 1, "", "batch_size"], [142, 1, 1, "", "bfloat16"], [142, 1, 1, "", "buffers"], [142, 1, 1, "", "cardinality"], [142, 1, 1, "", "check_env_specs"], [142, 1, 1, "", "children"], [142, 1, 1, "", "compile"], [142, 1, 1, "", "cpu"], [142, 1, 1, "", "cuda"], [142, 2, 1, "", "done_key"], [142, 2, 1, "", "done_keys"], [142, 2, 1, "", "done_keys_groups"], [142, 2, 1, "", "done_spec"], [142, 2, 1, "", "done_spec_unbatched"], [142, 1, 1, "", "double"], [142, 1, 1, "", "empty_cache"], [142, 1, 1, "", "eval"], [142, 1, 1, "", "extra_repr"], [142, 1, 1, "", "fake_tensordict"], [142, 1, 1, "", "float"], [142, 1, 1, "", "forward"], [142, 2, 1, "", "full_action_spec"], [142, 2, 1, "", "full_action_spec_unbatched"], [142, 2, 1, "", "full_done_spec"], [142, 2, 1, "", "full_done_spec_unbatched"], [142, 2, 1, "", "full_observation_spec_unbatched"], [142, 2, 1, "", "full_reward_spec"], [142, 2, 1, "", "full_reward_spec_unbatched"], [142, 2, 1, "", "full_state_spec"], [142, 2, 1, "", "full_state_spec_unbatched"], [142, 1, 1, "", "get_buffer"], [142, 1, 1, "", "get_extra_state"], [142, 1, 1, "", "get_parameter"], [142, 1, 1, "", "get_submodule"], [142, 1, 1, "", "half"], [142, 2, 1, "", "input_spec"], [142, 2, 1, "", "input_spec_unbatched"], [142, 1, 1, "", "ipu"], [142, 2, 1, "", "is_spec_locked"], [142, 1, 1, "", "load_state_dict"], [142, 1, 1, "", "make_tensordict"], [142, 1, 1, "", "maybe_reset"], [142, 1, 1, "", "modules"], [142, 1, 1, "", "mtia"], [142, 1, 1, "", "named_buffers"], [142, 1, 1, "", "named_children"], [142, 1, 1, "", "named_modules"], [142, 1, 1, "", "named_parameters"], [142, 2, 1, "", "observation_keys"], [142, 2, 1, "", "observation_spec"], [142, 2, 1, "", "observation_spec_unbatched"], [142, 2, 1, "", "output_spec"], [142, 2, 1, "", "output_spec_unbatched"], [142, 1, 1, "", "parameters"], [142, 1, 1, "", "rand_action"], [142, 1, 1, "", "rand_step"], [142, 1, 1, "", "register_backward_hook"], [142, 1, 1, "", "register_buffer"], [142, 1, 1, "", "register_forward_hook"], [142, 1, 1, "", "register_forward_pre_hook"], [142, 1, 1, "", "register_full_backward_hook"], [142, 1, 1, "", "register_full_backward_pre_hook"], [142, 1, 1, "", "register_gym"], [142, 1, 1, "", "register_load_state_dict_post_hook"], [142, 1, 1, "", "register_load_state_dict_pre_hook"], [142, 1, 1, "", "register_module"], [142, 1, 1, "", "register_parameter"], [142, 1, 1, "", "register_state_dict_post_hook"], [142, 1, 1, "", "register_state_dict_pre_hook"], [142, 1, 1, "", "requires_grad_"], [142, 1, 1, "", "reset"], [142, 2, 1, "", "reset_keys"], [142, 2, 1, "", "reward_key"], [142, 2, 1, "", "reward_keys"], [142, 2, 1, "", "reward_spec"], [142, 2, 1, "", "reward_spec_unbatched"], [142, 1, 1, "", "rollout"], [142, 1, 1, "", "set_extra_state"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "set_spec_lock_"], [142, 1, 1, "", "set_submodule"], [142, 2, 1, "", "shape"], [142, 1, 1, "", "share_memory"], [142, 2, 1, "", "specs"], [142, 1, 1, "", "state_dict"], [142, 2, 1, "", "state_keys"], [142, 2, 1, "", "state_spec"], [142, 2, 1, "", "state_spec_unbatched"], [142, 1, 1, "", "step"], [142, 1, 1, "", "step_and_maybe_reset"], [142, 1, 1, "", "step_mdp"], [142, 1, 1, "", "to"], [142, 1, 1, "", "to_empty"], [142, 1, 1, "", "train"], [142, 1, 1, "", "type"], [142, 1, 1, "", "xpu"], [142, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[154, 2, 1, "", "action_key"], [154, 2, 1, "", "action_keys"], [154, 2, 1, "", "action_spec"], [154, 2, 1, "", "action_spec_unbatched"], [154, 1, 1, "", "add_module"], [154, 1, 1, "", "add_truncated_keys"], [154, 1, 1, "", "all_actions"], [154, 1, 1, "", "any_done"], [154, 1, 1, "", "append_transform"], [154, 1, 1, "", "apply"], [154, 1, 1, "", "auto_specs_"], [154, 2, 1, "", "batch_dims"], [154, 2, 1, "", "batch_locked"], [154, 2, 1, "", "batch_size"], [154, 1, 1, "", "bfloat16"], [154, 1, 1, "", "buffers"], [154, 1, 1, "", "cardinality"], [154, 1, 1, "", "check_env_specs"], [154, 1, 1, "", "children"], [154, 1, 1, "", "compile"], [154, 1, 1, "", "cpu"], [154, 1, 1, "", "cuda"], [154, 2, 1, "", "done_key"], [154, 2, 1, "", "done_keys"], [154, 2, 1, "", "done_keys_groups"], [154, 2, 1, "", "done_spec"], [154, 2, 1, "", "done_spec_unbatched"], [154, 1, 1, "", "double"], [154, 1, 1, "", "empty_cache"], [154, 1, 1, "", "eval"], [154, 1, 1, "", "extra_repr"], [154, 1, 1, "", "fake_tensordict"], [154, 1, 1, "", "float"], [154, 1, 1, "", "forward"], [154, 2, 1, "", "full_action_spec"], [154, 2, 1, "", "full_action_spec_unbatched"], [154, 2, 1, "", "full_done_spec"], [154, 2, 1, "", "full_done_spec_unbatched"], [154, 2, 1, "", "full_observation_spec_unbatched"], [154, 2, 1, "", "full_reward_spec"], [154, 2, 1, "", "full_reward_spec_unbatched"], [154, 2, 1, "", "full_state_spec"], [154, 2, 1, "", "full_state_spec_unbatched"], [154, 1, 1, "", "get_buffer"], [154, 1, 1, "", "get_extra_state"], [154, 1, 1, "", "get_parameter"], [154, 1, 1, "", "get_submodule"], [154, 1, 1, "", "half"], [154, 2, 1, "", "input_spec"], [154, 2, 1, "", "input_spec_unbatched"], [154, 1, 1, "", "ipu"], [154, 2, 1, "", "is_spec_locked"], [154, 1, 1, "", "load_state_dict"], [154, 1, 1, "", "maybe_reset"], [154, 1, 1, "", "modules"], [154, 1, 1, "", "mtia"], [154, 1, 1, "", "named_buffers"], [154, 1, 1, "", "named_children"], [154, 1, 1, "", "named_modules"], [154, 1, 1, "", "named_parameters"], [154, 2, 1, "", "observation_keys"], [154, 2, 1, "", "observation_spec"], [154, 2, 1, "", "observation_spec_unbatched"], [154, 2, 1, "", "output_spec"], [154, 2, 1, "", "output_spec_unbatched"], [154, 1, 1, "", "parameters"], [154, 1, 1, "", "rand_action"], [154, 1, 1, "", "rand_step"], [154, 1, 1, "", "register_backward_hook"], [154, 1, 1, "", "register_buffer"], [154, 1, 1, "", "register_forward_hook"], [154, 1, 1, "", "register_forward_pre_hook"], [154, 1, 1, "", "register_full_backward_hook"], [154, 1, 1, "", "register_full_backward_pre_hook"], [154, 1, 1, "", "register_gym"], [154, 1, 1, "", "register_load_state_dict_post_hook"], [154, 1, 1, "", "register_load_state_dict_pre_hook"], [154, 1, 1, "", "register_module"], [154, 1, 1, "", "register_parameter"], [154, 1, 1, "", "register_state_dict_post_hook"], [154, 1, 1, "", "register_state_dict_pre_hook"], [154, 1, 1, "", "requires_grad_"], [154, 1, 1, "", "reset"], [154, 2, 1, "", "reset_keys"], [154, 2, 1, "", "reward_key"], [154, 2, 1, "", "reward_keys"], [154, 2, 1, "", "reward_spec"], [154, 2, 1, "", "reward_spec_unbatched"], [154, 1, 1, "", "rollout"], [154, 1, 1, "", "set_extra_state"], [154, 1, 1, "", "set_seed"], [154, 1, 1, "", "set_spec_lock_"], [154, 1, 1, "", "set_submodule"], [154, 2, 1, "", "shape"], [154, 1, 1, "", "share_memory"], [154, 2, 1, "", "specs"], [154, 1, 1, "", "state_dict"], [154, 2, 1, "", "state_keys"], [154, 2, 1, "", "state_spec"], [154, 2, 1, "", "state_spec_unbatched"], [154, 1, 1, "", "step"], [154, 1, 1, "", "step_and_maybe_reset"], [154, 1, 1, "", "step_mdp"], [154, 1, 1, "", "to"], [154, 1, 1, "", "to_empty"], [154, 1, 1, "", "train"], [154, 1, 1, "", "type"], [154, 1, 1, "", "update_kwargs"], [154, 1, 1, "", "xpu"], [154, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[155, 2, 1, "", "action_key"], [155, 2, 1, "", "action_keys"], [155, 2, 1, "", "action_spec"], [155, 2, 1, "", "action_spec_unbatched"], [155, 1, 1, "", "add_module"], [155, 1, 1, "", "add_truncated_keys"], [155, 1, 1, "", "all_actions"], [155, 1, 1, "", "any_done"], [155, 1, 1, "", "append_transform"], [155, 1, 1, "", "apply"], [155, 1, 1, "", "auto_specs_"], [155, 2, 1, "", "batch_dims"], [155, 2, 1, "", "batch_size"], [155, 1, 1, "", "bfloat16"], [155, 1, 1, "", "buffers"], [155, 1, 1, "", "cardinality"], [155, 1, 1, "", "check_env_specs"], [155, 1, 1, "", "children"], [155, 1, 1, "", "compile"], [155, 1, 1, "", "cpu"], [155, 1, 1, "", "cuda"], [155, 2, 1, "", "done_key"], [155, 2, 1, "", "done_keys"], [155, 2, 1, "", "done_keys_groups"], [155, 2, 1, "", "done_spec"], [155, 2, 1, "", "done_spec_unbatched"], [155, 1, 1, "", "double"], [155, 1, 1, "", "empty_cache"], [155, 1, 1, "", "eval"], [155, 1, 1, "", "extra_repr"], [155, 1, 1, "", "fake_tensordict"], [155, 1, 1, "", "float"], [155, 1, 1, "", "forward"], [155, 2, 1, "", "full_action_spec"], [155, 2, 1, "", "full_action_spec_unbatched"], [155, 2, 1, "", "full_done_spec"], [155, 2, 1, "", "full_done_spec_unbatched"], [155, 2, 1, "", "full_observation_spec_unbatched"], [155, 2, 1, "", "full_reward_spec"], [155, 2, 1, "", "full_reward_spec_unbatched"], [155, 2, 1, "", "full_state_spec"], [155, 2, 1, "", "full_state_spec_unbatched"], [155, 1, 1, "", "gen_params"], [155, 1, 1, "", "get_buffer"], [155, 1, 1, "", "get_extra_state"], [155, 1, 1, "", "get_parameter"], [155, 1, 1, "", "get_submodule"], [155, 1, 1, "", "half"], [155, 2, 1, "", "input_spec"], [155, 2, 1, "", "input_spec_unbatched"], [155, 1, 1, "", "ipu"], [155, 2, 1, "", "is_spec_locked"], [155, 1, 1, "", "load_state_dict"], [155, 1, 1, "", "maybe_reset"], [155, 1, 1, "", "modules"], [155, 1, 1, "", "mtia"], [155, 1, 1, "", "named_buffers"], [155, 1, 1, "", "named_children"], [155, 1, 1, "", "named_modules"], [155, 1, 1, "", "named_parameters"], [155, 2, 1, "", "observation_keys"], [155, 2, 1, "", "observation_spec"], [155, 2, 1, "", "observation_spec_unbatched"], [155, 2, 1, "", "output_spec"], [155, 2, 1, "", "output_spec_unbatched"], [155, 1, 1, "", "parameters"], [155, 1, 1, "", "rand_action"], [155, 1, 1, "", "rand_step"], [155, 1, 1, "", "register_backward_hook"], [155, 1, 1, "", "register_buffer"], [155, 1, 1, "", "register_forward_hook"], [155, 1, 1, "", "register_forward_pre_hook"], [155, 1, 1, "", "register_full_backward_hook"], [155, 1, 1, "", "register_full_backward_pre_hook"], [155, 1, 1, "", "register_gym"], [155, 1, 1, "", "register_load_state_dict_post_hook"], [155, 1, 1, "", "register_load_state_dict_pre_hook"], [155, 1, 1, "", "register_module"], [155, 1, 1, "", "register_parameter"], [155, 1, 1, "", "register_state_dict_post_hook"], [155, 1, 1, "", "register_state_dict_pre_hook"], [155, 1, 1, "", "requires_grad_"], [155, 1, 1, "", "reset"], [155, 2, 1, "", "reset_keys"], [155, 2, 1, "", "reward_key"], [155, 2, 1, "", "reward_keys"], [155, 2, 1, "", "reward_spec"], [155, 2, 1, "", "reward_spec_unbatched"], [155, 1, 1, "", "rollout"], [155, 1, 1, "", "set_extra_state"], [155, 1, 1, "", "set_seed"], [155, 1, 1, "", "set_spec_lock_"], [155, 1, 1, "", "set_submodule"], [155, 2, 1, "", "shape"], [155, 1, 1, "", "share_memory"], [155, 2, 1, "", "specs"], [155, 1, 1, "", "state_dict"], [155, 2, 1, "", "state_keys"], [155, 2, 1, "", "state_spec"], [155, 2, 1, "", "state_spec_unbatched"], [155, 1, 1, "", "step"], [155, 1, 1, "", "step_and_maybe_reset"], [155, 1, 1, "", "step_mdp"], [155, 1, 1, "", "to"], [155, 1, 1, "", "to_empty"], [155, 1, 1, "", "train"], [155, 1, 1, "", "type"], [155, 1, 1, "", "xpu"], [155, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[158, 1, 1, "", "_setup"], [158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "async_reset_recv"], [158, 1, 1, "", "async_reset_send"], [158, 1, 1, "", "async_step_recv"], [158, 1, 1, "", "async_step_send"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_locked"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 1, 1, "", "shutdown"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[163, 2, 1, "", "action_key"], [163, 2, 1, "", "action_keys"], [163, 2, 1, "", "action_spec"], [163, 2, 1, "", "action_spec_unbatched"], [163, 1, 1, "", "add_module"], [163, 1, 1, "", "add_truncated_keys"], [163, 1, 1, "", "all_actions"], [163, 1, 1, "", "any_done"], [163, 1, 1, "", "append_transform"], [163, 1, 1, "", "apply"], [163, 1, 1, "", "auto_specs_"], [163, 2, 1, "", "batch_dims"], [163, 2, 1, "", "batch_locked"], [163, 2, 1, "", "batch_size"], [163, 1, 1, "", "bfloat16"], [163, 1, 1, "", "buffers"], [163, 1, 1, "", "cardinality"], [163, 1, 1, "", "check_env_specs"], [163, 1, 1, "", "children"], [163, 1, 1, "", "compile"], [163, 1, 1, "", "cpu"], [163, 1, 1, "", "cuda"], [163, 2, 1, "", "done_key"], [163, 2, 1, "", "done_keys"], [163, 2, 1, "", "done_keys_groups"], [163, 2, 1, "", "done_spec"], [163, 2, 1, "", "done_spec_unbatched"], [163, 1, 1, "", "double"], [163, 1, 1, "", "empty_cache"], [163, 1, 1, "", "eval"], [163, 1, 1, "", "extra_repr"], [163, 1, 1, "", "fake_tensordict"], [163, 1, 1, "", "float"], [163, 1, 1, "", "forward"], [163, 2, 1, "", "full_action_spec"], [163, 2, 1, "", "full_action_spec_unbatched"], [163, 2, 1, "", "full_done_spec"], [163, 2, 1, "", "full_done_spec_unbatched"], [163, 2, 1, "", "full_observation_spec_unbatched"], [163, 2, 1, "", "full_reward_spec"], [163, 2, 1, "", "full_reward_spec_unbatched"], [163, 2, 1, "", "full_state_spec"], [163, 2, 1, "", "full_state_spec_unbatched"], [163, 1, 1, "", "get_buffer"], [163, 1, 1, "", "get_extra_state"], [163, 1, 1, "", "get_parameter"], [163, 1, 1, "", "get_submodule"], [163, 1, 1, "", "half"], [163, 2, 1, "", "input_spec"], [163, 2, 1, "", "input_spec_unbatched"], [163, 1, 1, "", "ipu"], [163, 2, 1, "", "is_spec_locked"], [163, 1, 1, "", "load_state_dict"], [163, 1, 1, "", "maybe_reset"], [163, 1, 1, "", "modules"], [163, 1, 1, "", "mtia"], [163, 1, 1, "", "named_buffers"], [163, 1, 1, "", "named_children"], [163, 1, 1, "", "named_modules"], [163, 1, 1, "", "named_parameters"], [163, 2, 1, "", "observation_keys"], [163, 2, 1, "", "observation_spec"], [163, 2, 1, "", "observation_spec_unbatched"], [163, 2, 1, "", "output_spec"], [163, 2, 1, "", "output_spec_unbatched"], [163, 1, 1, "", "parameters"], [163, 1, 1, "", "rand_action"], [163, 1, 1, "", "rand_step"], [163, 1, 1, "", "register_backward_hook"], [163, 1, 1, "", "register_buffer"], [163, 1, 1, "", "register_forward_hook"], [163, 1, 1, "", "register_forward_pre_hook"], [163, 1, 1, "", "register_full_backward_hook"], [163, 1, 1, "", "register_full_backward_pre_hook"], [163, 1, 1, "", "register_gym"], [163, 1, 1, "", "register_load_state_dict_post_hook"], [163, 1, 1, "", "register_load_state_dict_pre_hook"], [163, 1, 1, "", "register_module"], [163, 1, 1, "", "register_parameter"], [163, 1, 1, "", "register_state_dict_post_hook"], [163, 1, 1, "", "register_state_dict_pre_hook"], [163, 1, 1, "", "requires_grad_"], [163, 1, 1, "", "reset"], [163, 2, 1, "", "reset_keys"], [163, 2, 1, "", "reward_key"], [163, 2, 1, "", "reward_keys"], [163, 2, 1, "", "reward_spec"], [163, 2, 1, "", "reward_spec_unbatched"], [163, 1, 1, "", "rollout"], [163, 1, 1, "", "set_extra_state"], [163, 1, 1, "", "set_seed"], [163, 1, 1, "", "set_spec_lock_"], [163, 1, 1, "", "set_submodule"], [163, 2, 1, "", "shape"], [163, 1, 1, "", "share_memory"], [163, 2, 1, "", "specs"], [163, 1, 1, "", "state_dict"], [163, 2, 1, "", "state_keys"], [163, 2, 1, "", "state_spec"], [163, 2, 1, "", "state_spec_unbatched"], [163, 1, 1, "", "step"], [163, 1, 1, "", "step_and_maybe_reset"], [163, 1, 1, "", "step_mdp"], [163, 1, 1, "", "to"], [163, 1, 1, "", "to_empty"], [163, 1, 1, "", "train"], [163, 1, 1, "", "type"], [163, 1, 1, "", "update_kwargs"], [163, 1, 1, "", "xpu"], [163, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[164, 1, 1, "", "_setup"], [164, 2, 1, "", "action_key"], [164, 2, 1, "", "action_keys"], [164, 2, 1, "", "action_spec"], [164, 2, 1, "", "action_spec_unbatched"], [164, 1, 1, "", "add_module"], [164, 1, 1, "", "add_truncated_keys"], [164, 1, 1, "", "all_actions"], [164, 1, 1, "", "any_done"], [164, 1, 1, "", "append_transform"], [164, 1, 1, "", "apply"], [164, 1, 1, "", "async_reset_recv"], [164, 1, 1, "", "async_reset_send"], [164, 1, 1, "", "async_step_recv"], [164, 1, 1, "", "async_step_send"], [164, 1, 1, "", "auto_specs_"], [164, 2, 1, "", "batch_dims"], [164, 2, 1, "", "batch_locked"], [164, 2, 1, "", "batch_size"], [164, 1, 1, "", "bfloat16"], [164, 1, 1, "", "buffers"], [164, 1, 1, "", "cardinality"], [164, 1, 1, "", "check_env_specs"], [164, 1, 1, "", "children"], [164, 1, 1, "", "compile"], [164, 1, 1, "", "cpu"], [164, 1, 1, "", "cuda"], [164, 2, 1, "", "done_key"], [164, 2, 1, "", "done_keys"], [164, 2, 1, "", "done_keys_groups"], [164, 2, 1, "", "done_spec"], [164, 2, 1, "", "done_spec_unbatched"], [164, 1, 1, "", "double"], [164, 1, 1, "", "empty_cache"], [164, 1, 1, "", "eval"], [164, 1, 1, "", "extra_repr"], [164, 1, 1, "", "fake_tensordict"], [164, 1, 1, "", "float"], [164, 1, 1, "", "forward"], [164, 2, 1, "", "full_action_spec"], [164, 2, 1, "", "full_action_spec_unbatched"], [164, 2, 1, "", "full_done_spec"], [164, 2, 1, "", "full_done_spec_unbatched"], [164, 2, 1, "", "full_observation_spec_unbatched"], [164, 2, 1, "", "full_reward_spec"], [164, 2, 1, "", "full_reward_spec_unbatched"], [164, 2, 1, "", "full_state_spec"], [164, 2, 1, "", "full_state_spec_unbatched"], [164, 1, 1, "", "get_buffer"], [164, 1, 1, "", "get_extra_state"], [164, 1, 1, "", "get_parameter"], [164, 1, 1, "", "get_submodule"], [164, 1, 1, "", "half"], [164, 2, 1, "", "input_spec"], [164, 2, 1, "", "input_spec_unbatched"], [164, 1, 1, "", "ipu"], [164, 2, 1, "", "is_spec_locked"], [164, 1, 1, "", "load_state_dict"], [164, 1, 1, "", "maybe_reset"], [164, 1, 1, "", "modules"], [164, 1, 1, "", "mtia"], [164, 1, 1, "", "named_buffers"], [164, 1, 1, "", "named_children"], [164, 1, 1, "", "named_modules"], [164, 1, 1, "", "named_parameters"], [164, 2, 1, "", "observation_keys"], [164, 2, 1, "", "observation_spec"], [164, 2, 1, "", "observation_spec_unbatched"], [164, 2, 1, "", "output_spec"], [164, 2, 1, "", "output_spec_unbatched"], [164, 1, 1, "", "parameters"], [164, 1, 1, "", "rand_action"], [164, 1, 1, "", "rand_step"], [164, 1, 1, "", "register_backward_hook"], [164, 1, 1, "", "register_buffer"], [164, 1, 1, "", "register_forward_hook"], [164, 1, 1, "", "register_forward_pre_hook"], [164, 1, 1, "", "register_full_backward_hook"], [164, 1, 1, "", "register_full_backward_pre_hook"], [164, 1, 1, "", "register_gym"], [164, 1, 1, "", "register_load_state_dict_post_hook"], [164, 1, 1, "", "register_load_state_dict_pre_hook"], [164, 1, 1, "", "register_module"], [164, 1, 1, "", "register_parameter"], [164, 1, 1, "", "register_state_dict_post_hook"], [164, 1, 1, "", "register_state_dict_pre_hook"], [164, 1, 1, "", "requires_grad_"], [164, 1, 1, "", "reset"], [164, 2, 1, "", "reset_keys"], [164, 2, 1, "", "reward_key"], [164, 2, 1, "", "reward_keys"], [164, 2, 1, "", "reward_spec"], [164, 2, 1, "", "reward_spec_unbatched"], [164, 1, 1, "", "rollout"], [164, 1, 1, "", "set_extra_state"], [164, 1, 1, "", "set_seed"], [164, 1, 1, "", "set_spec_lock_"], [164, 1, 1, "", "set_submodule"], [164, 2, 1, "", "shape"], [164, 1, 1, "", "share_memory"], [164, 1, 1, "", "shutdown"], [164, 2, 1, "", "specs"], [164, 1, 1, "", "state_dict"], [164, 2, 1, "", "state_keys"], [164, 2, 1, "", "state_spec"], [164, 2, 1, "", "state_spec_unbatched"], [164, 1, 1, "", "step"], [164, 1, 1, "", "step_and_maybe_reset"], [164, 1, 1, "", "step_mdp"], [164, 1, 1, "", "to"], [164, 1, 1, "", "to_empty"], [164, 1, 1, "", "train"], [164, 1, 1, "", "type"], [164, 1, 1, "", "xpu"], [164, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[165, 2, 1, "", "action_key"], [165, 2, 1, "", "action_keys"], [165, 2, 1, "", "action_spec"], [165, 2, 1, "", "action_spec_unbatched"], [165, 1, 1, "", "add_module"], [165, 1, 1, "", "add_truncated_keys"], [165, 1, 1, "", "all_actions"], [165, 1, 1, "", "any_done"], [165, 1, 1, "", "append_transform"], [165, 1, 1, "", "apply"], [165, 1, 1, "", "auto_specs_"], [165, 2, 1, "", "batch_dims"], [165, 2, 1, "", "batch_size"], [165, 1, 1, "", "bfloat16"], [165, 1, 1, "", "buffers"], [165, 1, 1, "", "cardinality"], [165, 1, 1, "", "check_env_specs"], [165, 1, 1, "", "children"], [165, 1, 1, "", "compile"], [165, 1, 1, "", "cpu"], [165, 1, 1, "", "cuda"], [165, 2, 1, "", "done_key"], [165, 2, 1, "", "done_keys"], [165, 2, 1, "", "done_keys_groups"], [165, 2, 1, "", "done_spec"], [165, 2, 1, "", "done_spec_unbatched"], [165, 1, 1, "", "double"], [165, 1, 1, "", "empty_cache"], [165, 1, 1, "", "eval"], [165, 1, 1, "", "extra_repr"], [165, 1, 1, "", "fake_tensordict"], [165, 1, 1, "", "float"], [165, 1, 1, "", "forward"], [165, 2, 1, "", "full_action_spec"], [165, 2, 1, "", "full_action_spec_unbatched"], [165, 2, 1, "", "full_done_spec"], [165, 2, 1, "", "full_done_spec_unbatched"], [165, 2, 1, "", "full_observation_spec_unbatched"], [165, 2, 1, "", "full_reward_spec"], [165, 2, 1, "", "full_reward_spec_unbatched"], [165, 2, 1, "", "full_state_spec"], [165, 2, 1, "", "full_state_spec_unbatched"], [165, 1, 1, "", "get_buffer"], [165, 1, 1, "", "get_extra_state"], [165, 1, 1, "", "get_parameter"], [165, 1, 1, "", "get_submodule"], [165, 1, 1, "", "half"], [165, 2, 1, "", "input_spec"], [165, 2, 1, "", "input_spec_unbatched"], [165, 1, 1, "", "ipu"], [165, 2, 1, "", "is_spec_locked"], [165, 1, 1, "", "load_state_dict"], [165, 1, 1, "", "maybe_reset"], [165, 1, 1, "", "modules"], [165, 1, 1, "", "mtia"], [165, 1, 1, "", "named_buffers"], [165, 1, 1, "", "named_children"], [165, 1, 1, "", "named_modules"], [165, 1, 1, "", "named_parameters"], [165, 2, 1, "", "observation_keys"], [165, 2, 1, "", "observation_spec"], [165, 2, 1, "", "observation_spec_unbatched"], [165, 2, 1, "", "output_spec"], [165, 2, 1, "", "output_spec_unbatched"], [165, 1, 1, "", "parameters"], [165, 1, 1, "", "rand_action"], [165, 1, 1, "", "rand_step"], [165, 1, 1, "", "register_backward_hook"], [165, 1, 1, "", "register_buffer"], [165, 1, 1, "", "register_forward_hook"], [165, 1, 1, "", "register_forward_pre_hook"], [165, 1, 1, "", "register_full_backward_hook"], [165, 1, 1, "", "register_full_backward_pre_hook"], [165, 1, 1, "", "register_gym"], [165, 1, 1, "", "register_load_state_dict_post_hook"], [165, 1, 1, "", "register_load_state_dict_pre_hook"], [165, 1, 1, "", "register_module"], [165, 1, 1, "", "register_parameter"], [165, 1, 1, "", "register_state_dict_post_hook"], [165, 1, 1, "", "register_state_dict_pre_hook"], [165, 1, 1, "", "requires_grad_"], [165, 1, 1, "", "reset"], [165, 2, 1, "", "reset_keys"], [165, 2, 1, "", "reward_key"], [165, 2, 1, "", "reward_keys"], [165, 2, 1, "", "reward_spec"], [165, 2, 1, "", "reward_spec_unbatched"], [165, 1, 1, "", "rollout"], [165, 1, 1, "", "set_extra_state"], [165, 1, 1, "", "set_seed"], [165, 1, 1, "", "set_spec_lock_"], [165, 1, 1, "", "set_submodule"], [165, 2, 1, "", "shape"], [165, 1, 1, "", "share_memory"], [165, 2, 1, "", "specs"], [165, 1, 1, "", "state_dict"], [165, 2, 1, "", "state_keys"], [165, 2, 1, "", "state_spec"], [165, 2, 1, "", "state_spec_unbatched"], [165, 1, 1, "", "step"], [165, 1, 1, "", "step_and_maybe_reset"], [165, 1, 1, "", "step_mdp"], [165, 1, 1, "", "to"], [165, 1, 1, "", "to_empty"], [165, 1, 1, "", "train"], [165, 1, 1, "", "type"], [165, 1, 1, "", "xpu"], [165, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[176, 3, 1, "", "DreamerDecoder"], [177, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[183, 0, 1, "", "ActionDiscretizer"], [184, 0, 1, "", "ActionMask"], [185, 0, 1, "", "AutoResetEnv"], [186, 0, 1, "", "AutoResetTransform"], [187, 0, 1, "", "BatchSizeTransform"], [188, 0, 1, "", "BinarizeReward"], [189, 0, 1, "", "BurnInTransform"], [190, 0, 1, "", "CatFrames"], [191, 0, 1, "", "CatTensors"], [192, 0, 1, "", "CenterCrop"], [193, 0, 1, "", "ClipTransform"], [194, 0, 1, "", "Compose"], [195, 0, 1, "", "ConditionalSkip"], [196, 0, 1, "", "Crop"], [197, 0, 1, "", "DTypeCastTransform"], [198, 0, 1, "", "DataLoadingPrimer"], [199, 0, 1, "", "DeviceCastTransform"], [200, 0, 1, "", "DiscreteActionProjection"], [201, 0, 1, "", "DoubleToFloat"], [202, 0, 1, "", "EndOfLifeTransform"], [203, 0, 1, "", "ExcludeTransform"], [204, 0, 1, "", "FiniteTensorDictCheck"], [205, 0, 1, "", "FlattenObservation"], [206, 0, 1, "", "FrameSkipTransform"], [207, 0, 1, "", "GrayScale"], [208, 0, 1, "", "Hash"], [209, 0, 1, "", "InitTracker"], [210, 0, 1, "", "KLRewardTransform"], [211, 0, 1, "", "LineariseRewards"], [212, 0, 1, "", "MultiAction"], [213, 0, 1, "", "NoopResetEnv"], [214, 0, 1, "", "ObservationNorm"], [215, 0, 1, "", "ObservationTransform"], [216, 0, 1, "", "PermuteTransform"], [217, 0, 1, "", "PinMemoryTransform"], [218, 0, 1, "", "R3MTransform"], [219, 0, 1, "", "RandomCropTensorDict"], [220, 0, 1, "", "RemoveEmptySpecs"], [221, 0, 1, "", "RenameTransform"], [222, 0, 1, "", "Resize"], [223, 0, 1, "", "Reward2GoTransform"], [224, 0, 1, "", "RewardClipping"], [225, 0, 1, "", "RewardScaling"], [226, 0, 1, "", "RewardSum"], [227, 0, 1, "", "SelectTransform"], [228, 0, 1, "", "SignTransform"], [229, 0, 1, "", "SqueezeTransform"], [230, 0, 1, "", "Stack"], [231, 0, 1, "", "StepCounter"], [232, 0, 1, "", "TargetReturn"], [233, 0, 1, "", "TensorDictPrimer"], [234, 0, 1, "", "TimeMaxPool"], [235, 0, 1, "", "Timer"], [236, 0, 1, "", "ToTensorImage"], [237, 0, 1, "", "Tokenizer"], [238, 0, 1, "", "TrajCounter"], [239, 0, 1, "", "Transform"], [240, 0, 1, "", "TransformedEnv"], [241, 0, 1, "", "UnaryTransform"], [242, 0, 1, "", "UnsqueezeTransform"], [243, 0, 1, "", "VC1Transform"], [244, 0, 1, "", "VIPRewardTransform"], [245, 0, 1, "", "VIPTransform"], [246, 0, 1, "", "VecGymEnvTransform"], [247, 0, 1, "", "VecNorm"], [248, 0, 1, "", "VecNormV2"], [249, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[183, 0, 1, "", "SamplingStrategy"], [183, 1, 1, "", "inv"], [183, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[185, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[186, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_env_batch_size"], [187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[188, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[189, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "make_rb_transform_and_sampler"], [190, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[192, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[194, 1, 1, "", "append"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "init"], [194, 1, 1, "", "insert"], [194, 1, 1, "", "to"], [194, 1, 1, "", "transform_action_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[195, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"], [197, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[200, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "register_keys"], [202, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[204, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[206, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[207, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[208, 1, 1, "", "get_input_from_hash"], [208, 1, 1, "", "reproducible_hash"], [208, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[214, 1, 1, "", "init_stats"], [214, 1, 1, "", "transform_action_spec"], [214, 1, 1, "", "transform_observation_spec"], [214, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[217, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[218, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[219, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_input_spec"], [220, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[222, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[223, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[224, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[225, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_input_spec"], [226, 1, 1, "", "transform_observation_spec"], [226, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "transform_done_spec"], [230, 1, 1, "", "transform_input_spec"], [230, 1, 1, "", "transform_observation_spec"], [230, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_input_spec"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "to"], [233, 1, 1, "", "transform_input_spec"], [233, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "transform_done_spec"], [237, 1, 1, "", "transform_input_spec"], [237, 1, 1, "", "transform_observation_spec"], [237, 1, 1, "", "transform_output_spec"], [237, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "load_state_dict"], [238, 1, 1, "", "state_dict"], [238, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[239, 1, 1, "", "clone"], [239, 2, 1, "", "container"], [239, 1, 1, "", "forward"], [239, 1, 1, "", "init"], [239, 1, 1, "", "inv"], [239, 2, 1, "", "parent"], [239, 1, 1, "", "reset_parent"], [239, 1, 1, "", "set_container"], [239, 1, 1, "", "to"], [239, 1, 1, "", "transform_action_spec"], [239, 1, 1, "", "transform_done_spec"], [239, 1, 1, "", "transform_env_batch_size"], [239, 1, 1, "", "transform_env_device"], [239, 1, 1, "", "transform_input_spec"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "transform_output_spec"], [239, 1, 1, "", "transform_reward_spec"], [239, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[240, 1, 1, "", "add_truncated_keys"], [240, 1, 1, "", "append_transform"], [240, 2, 1, "", "batch_locked"], [240, 2, 1, "", "batch_size"], [240, 1, 1, "", "empty_cache"], [240, 1, 1, "", "eval"], [240, 2, 1, "", "input_spec"], [240, 1, 1, "", "insert_transform"], [240, 1, 1, "", "load_state_dict"], [240, 2, 1, "", "output_spec"], [240, 1, 1, "", "rand_action"], [240, 1, 1, "", "set_missing_tolerance"], [240, 1, 1, "", "set_seed"], [240, 1, 1, "", "state_dict"], [240, 1, 1, "", "to"], [240, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[241, 1, 1, "", "transform_action_spec"], [241, 1, 1, "", "transform_done_spec"], [241, 1, 1, "", "transform_input_spec"], [241, 1, 1, "", "transform_observation_spec"], [241, 1, 1, "", "transform_output_spec"], [241, 1, 1, "", "transform_reward_spec"], [241, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[242, 1, 1, "", "transform_action_spec"], [242, 1, 1, "", "transform_observation_spec"], [242, 1, 1, "", "transform_reward_spec"], [242, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "make_noload_model"], [243, 1, 1, "", "to"], [243, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[245, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[247, 1, 1, "", "build_td_for_shared_vecnorm"], [247, 1, 1, "", "forward"], [247, 1, 1, "", "freeze"], [247, 1, 1, "", "frozen_copy"], [247, 1, 1, "", "get_extra_state"], [247, 2, 1, "", "loc"], [247, 2, 1, "", "scale"], [247, 1, 1, "", "set_extra_state"], [247, 2, 1, "", "standard_normal"], [247, 1, 1, "", "to_observation_norm"], [247, 1, 1, "", "transform_observation_spec"], [247, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[248, 1, 1, "", "clone"], [248, 1, 1, "id0", "freeze"], [248, 1, 1, "id1", "frozen_copy"], [248, 1, 1, "id2", "get_extra_state"], [248, 2, 1, "id3", "loc"], [248, 2, 1, "id4", "scale"], [248, 1, 1, "id5", "set_extra_state"], [248, 2, 1, "id6", "standard_normal"], [248, 1, 1, "", "to_observation_norm"], [248, 1, 1, "id7", "transform_observation_spec"], [248, 1, 1, "id8", "transform_output_spec"], [248, 1, 1, "id9", "transform_reward_spec"], [248, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[250, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[250, 1, 1, "", "add_module"], [250, 1, 1, "", "apply"], [250, 1, 1, "", "bfloat16"], [250, 1, 1, "", "buffers"], [250, 1, 1, "", "children"], [250, 1, 1, "", "compile"], [250, 2, 1, "", "container"], [250, 1, 1, "", "cpu"], [250, 1, 1, "", "cuda"], [250, 1, 1, "", "double"], [250, 1, 1, "", "eval"], [250, 1, 1, "", "extra_repr"], [250, 1, 1, "", "float"], [250, 1, 1, "", "forward"], [250, 1, 1, "", "get_buffer"], [250, 1, 1, "", "get_extra_state"], [250, 1, 1, "", "get_parameter"], [250, 1, 1, "", "get_submodule"], [250, 1, 1, "", "half"], [250, 1, 1, "", "init"], [250, 1, 1, "", "inv"], [250, 1, 1, "", "ipu"], [250, 1, 1, "", "load_state_dict"], [250, 1, 1, "", "modules"], [250, 1, 1, "", "mtia"], [250, 2, 1, "", "n_steps"], [250, 1, 1, "", "named_buffers"], [250, 1, 1, "", "named_children"], [250, 1, 1, "", "named_modules"], [250, 1, 1, "", "named_parameters"], [250, 1, 1, "", "parameters"], [250, 2, 1, "", "parent"], [250, 1, 1, "", "register_backward_hook"], [250, 1, 1, "", "register_buffer"], [250, 1, 1, "", "register_forward_hook"], [250, 1, 1, "", "register_forward_pre_hook"], [250, 1, 1, "", "register_full_backward_hook"], [250, 1, 1, "", "register_full_backward_pre_hook"], [250, 1, 1, "", "register_load_state_dict_post_hook"], [250, 1, 1, "", "register_load_state_dict_pre_hook"], [250, 1, 1, "", "register_module"], [250, 1, 1, "", "register_parameter"], [250, 1, 1, "", "register_state_dict_post_hook"], [250, 1, 1, "", "register_state_dict_pre_hook"], [250, 1, 1, "", "requires_grad_"], [250, 1, 1, "", "set_extra_state"], [250, 1, 1, "", "set_submodule"], [250, 1, 1, "", "share_memory"], [250, 1, 1, "", "state_dict"], [250, 1, 1, "", "to"], [250, 1, 1, "", "to_empty"], [250, 1, 1, "", "train"], [250, 1, 1, "", "transform_action_spec"], [250, 1, 1, "", "transform_done_spec"], [250, 1, 1, "", "transform_env_batch_size"], [250, 1, 1, "", "transform_env_device"], [250, 1, 1, "", "transform_input_spec"], [250, 1, 1, "", "transform_observation_spec"], [250, 1, 1, "", "transform_output_spec"], [250, 1, 1, "", "transform_reward_spec"], [250, 1, 1, "", "transform_state_spec"], [250, 1, 1, "", "type"], [250, 1, 1, "", "xpu"], [250, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[251, 1, 1, "", "get_class_that_defined_method"], [251, 1, 1, "", "import_module"], [251, 1, 1, "", "module_set"], [251, 1, 1, "", "reset"]], "torchrl.modules": [[252, 0, 1, "", "AdditiveGaussianModule"], [253, 0, 1, "", "BatchRenorm1d"], [254, 0, 1, "", "CEMPlanner"], [255, 0, 1, "", "ConsistentDropout"], [256, 0, 1, "", "ConsistentDropoutModule"], [257, 0, 1, "", "Conv3dNet"], [258, 0, 1, "", "ConvNet"], [259, 0, 1, "", "DTActor"], [260, 0, 1, "", "DdpgCnnActor"], [261, 0, 1, "", "DdpgCnnQNet"], [262, 0, 1, "", "DdpgMlpActor"], [263, 0, 1, "", "DdpgMlpQNet"], [264, 0, 1, "", "DecisionTransformer"], [265, 0, 1, "", "Delta"], [266, 0, 1, "", "DistributionalDQNnet"], [267, 0, 1, "", "DistributionalQValueHook"], [268, 0, 1, "", "DreamerActor"], [269, 0, 1, "", "DuelingCnnDQNet"], [270, 0, 1, "", "EGreedyModule"], [271, 0, 1, "", "GRU"], [272, 0, 1, "", "GRUCell"], [273, 0, 1, "", "GRUModule"], [274, 0, 1, "", "IndependentNormal"], [275, 0, 1, "", "LSTM"], [276, 0, 1, "", "LSTMCell"], [277, 0, 1, "", "LSTMModule"], [278, 0, 1, "", "MLP"], [279, 0, 1, "", "MPCPlannerBase"], [280, 0, 1, "", "MPPIPlanner"], [281, 0, 1, "", "MaskedCategorical"], [282, 0, 1, "", "MaskedOneHotCategorical"], [283, 0, 1, "", "MultiAgentConvNet"], [284, 0, 1, "", "MultiAgentMLP"], [285, 0, 1, "", "MultiAgentNetBase"], [286, 0, 1, "", "NoisyLazyLinear"], [287, 0, 1, "", "NoisyLinear"], [288, 0, 1, "", "ObsDecoder"], [289, 0, 1, "", "ObsEncoder"], [290, 0, 1, "", "OneHotCategorical"], [291, 0, 1, "", "OneHotOrdinal"], [292, 0, 1, "", "OnlineDTActor"], [293, 0, 1, "", "Ordinal"], [294, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [295, 0, 1, "", "QMixer"], [296, 0, 1, "", "QValueHook"], [297, 0, 1, "", "RSSMPosterior"], [298, 0, 1, "", "RSSMPrior"], [299, 0, 1, "", "Squeeze2dLayer"], [300, 0, 1, "", "SqueezeLayer"], [301, 0, 1, "", "TanhDelta"], [302, 0, 1, "", "TanhNormal"], [303, 0, 1, "", "TruncatedNormal"], [304, 0, 1, "", "VDNMixer"], [305, 0, 1, "", "VmapModule"], [306, 0, 1, "", "recurrent_mode"], [307, 0, 1, "", "reset_noise"], [308, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[253, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[254, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[255, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[257, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[258, 1, 1, "", "default_atari_dqn"], [258, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[259, 1, 1, "", "default_config"], [259, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[260, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[261, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[262, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[263, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[264, 0, 1, "", "DTConfig"], [264, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[265, 1, 1, "", "expand"], [265, 1, 1, "", "log_prob"], [265, 2, 1, "", "mean"], [265, 2, 1, "", "mode"], [265, 1, 1, "", "rsample"], [265, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[266, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[268, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[269, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "step"]], "torchrl.modules.GRU": [[271, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[272, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_cudnn_based"], [273, 1, 1, "", "make_python_based"], [273, 1, 1, "id0", "make_tensordict_primer"], [273, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[274, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[275, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[276, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "make_cudnn_based"], [277, 1, 1, "", "make_python_based"], [277, 1, 1, "id0", "make_tensordict_primer"], [277, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[278, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[280, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[281, 1, 1, "", "log_prob"], [281, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[282, 1, 1, "", "log_prob"], [282, 2, 1, "", "mode"], [282, 1, 1, "", "rsample"], [282, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "from_stateful_net"], [285, 1, 1, "", "get_stateful_net"], [285, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[286, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[288, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[289, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[290, 1, 1, "", "entropy"], [290, 1, 1, "", "log_prob"], [290, 2, 1, "", "mode"], [290, 1, 1, "", "rsample"], [290, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[292, 1, 1, "", "default_config"], [292, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[295, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[297, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[298, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[300, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[301, 2, 1, "", "mean"], [301, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[302, 1, 1, "", "get_mode"], [302, 2, 1, "", "mean"], [302, 2, 1, "", "mode"], [302, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[303, 1, 1, "", "log_prob"], [303, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[304, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[305, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[309, 0, 1, "", "Actor"], [310, 0, 1, "", "ActorCriticOperator"], [311, 0, 1, "", "ActorCriticWrapper"], [312, 0, 1, "", "ActorValueOperator"], [313, 0, 1, "", "DecisionTransformerInferenceWrapper"], [314, 0, 1, "", "DistributionalQValueActor"], [315, 0, 1, "", "DistributionalQValueModule"], [316, 0, 1, "", "LMHeadActorValueOperator"], [317, 0, 1, "", "MultiStepActorWrapper"], [318, 0, 1, "", "ProbabilisticActor"], [319, 0, 1, "", "QValueActor"], [320, 0, 1, "", "QValueModule"], [321, 0, 1, "", "SafeModule"], [322, 0, 1, "", "SafeProbabilisticModule"], [323, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [324, 0, 1, "", "SafeSequential"], [325, 0, 1, "", "TanhModule"], [326, 0, 1, "", "ValueOperator"], [327, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[310, 1, 1, "", "get_critic_operator"], [310, 1, 1, "", "get_policy_head"], [310, 1, 1, "", "get_value_head"], [310, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[311, 1, 1, "", "get_policy_head"], [311, 1, 1, "", "get_policy_operator"], [311, 1, 1, "", "get_value_head"], [311, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[312, 1, 1, "", "get_policy_head"], [312, 1, 1, "", "get_policy_operator"], [312, 1, 1, "", "get_value_head"], [312, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "mask_context"], [313, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[315, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[317, 1, 1, "", "forward"], [317, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[320, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[321, 1, 1, "", "random"], [321, 1, 1, "", "random_sample"], [321, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[322, 1, 1, "", "random"], [322, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[325, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[327, 1, 1, "", "get_reward_operator"], [327, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[328, 0, 1, "", "biased_softplus"], [329, 0, 1, "", "get_primers_from_module"], [330, 0, 1, "", "inv_softplus"], [331, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[328, 1, 1, "", "forward"]], "torchrl.objectives": [[332, 0, 1, "", "A2CLoss"], [333, 0, 1, "", "CQLLoss"], [334, 0, 1, "", "ClipPPOLoss"], [335, 0, 1, "", "CrossQLoss"], [336, 0, 1, "", "DDPGLoss"], [337, 0, 1, "", "DQNLoss"], [338, 0, 1, "", "DTLoss"], [339, 0, 1, "", "DiscreteCQLLoss"], [340, 0, 1, "", "DiscreteIQLLoss"], [341, 0, 1, "", "DiscreteSACLoss"], [342, 0, 1, "", "DistributionalDQNLoss"], [343, 0, 1, "", "DreamerActorLoss"], [344, 0, 1, "", "DreamerModelLoss"], [345, 0, 1, "", "DreamerValueLoss"], [346, 0, 1, "", "GAILLoss"], [347, 0, 1, "", "HardUpdate"], [348, 0, 1, "", "IQLLoss"], [349, 0, 1, "", "KLPENPPOLoss"], [350, 0, 1, "", "LossModule"], [351, 0, 1, "", "OnlineDTLoss"], [352, 0, 1, "", "PPOLoss"], [353, 0, 1, "", "REDQLoss"], [354, 0, 1, "", "ReinforceLoss"], [355, 0, 1, "", "SACLoss"], [356, 0, 1, "", "SoftUpdate"], [357, 0, 1, "", "TD3BCLoss"], [358, 0, 1, "", "TD3Loss"], [359, 0, 1, "", "ValueEstimators"], [360, 0, 1, "", "default_value_kwargs"], [361, 0, 1, "", "distance_loss"], [362, 0, 1, "", "group_optimizers"], [363, 0, 1, "", "hold_out_net"], [364, 0, 1, "", "hold_out_params"], [366, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[332, 4, 1, "", "default_keys"], [332, 1, 1, "", "forward"], [332, 2, 1, "", "functional"], [332, 1, 1, "", "loss_critic"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[334, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[335, 1, 1, "", "actor_loss"], [335, 1, 1, "", "alpha_loss"], [335, 4, 1, "", "default_keys"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "load_state_dict"], [335, 1, 1, "", "make_value_estimator"], [335, 1, 1, "", "maybe_init_target_entropy"], [335, 1, 1, "", "qvalue_loss"], [335, 1, 1, "", "set_keys"], [335, 1, 1, "", "state_dict"], [335, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[339, 4, 1, "", "default_keys"], [339, 1, 1, "", "forward"], [339, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[340, 4, 1, "", "default_keys"], [340, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[341, 4, 1, "", "default_keys"], [341, 1, 1, "", "forward"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[342, 4, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[343, 4, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[344, 4, 1, "", "default_keys"], [344, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[345, 4, 1, "", "default_keys"], [345, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[346, 4, 1, "", "default_keys"], [346, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[348, 4, 1, "", "default_keys"], [348, 1, 1, "", "forward"], [348, 1, 1, "", "loss_value_diff"], [348, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[349, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[350, 1, 1, "", "convert_to_functional"], [350, 1, 1, "", "forward"], [350, 1, 1, "", "from_stateful_net"], [350, 2, 1, "", "functional"], [350, 1, 1, "", "get_stateful_net"], [350, 1, 1, "", "make_value_estimator"], [350, 1, 1, "", "named_parameters"], [350, 1, 1, "", "parameters"], [350, 1, 1, "", "reset_parameters_recursive"], [350, 1, 1, "", "set_keys"], [350, 2, 1, "", "value_estimator"], [350, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[351, 4, 1, "", "default_keys"], [351, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[352, 4, 1, "", "default_keys"], [352, 1, 1, "", "forward"], [352, 2, 1, "", "functional"], [352, 1, 1, "", "loss_critic"], [352, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[353, 4, 1, "", "default_keys"], [353, 1, 1, "", "forward"], [353, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[354, 4, 1, "", "default_keys"], [354, 1, 1, "", "forward"], [354, 2, 1, "", "functional"], [354, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[355, 4, 1, "", "default_keys"], [355, 1, 1, "", "forward"], [355, 1, 1, "", "load_state_dict"], [355, 1, 1, "", "make_value_estimator"], [355, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[357, 1, 1, "", "actor_loss"], [357, 4, 1, "", "default_keys"], [357, 1, 1, "", "forward"], [357, 1, 1, "", "make_value_estimator"], [357, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[358, 4, 1, "", "default_keys"], [358, 1, 1, "", "forward"], [358, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[365, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[365, 4, 1, "", "default_keys"], [365, 1, 1, "", "forward"], [365, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[367, 0, 1, "", "GAE"], [368, 0, 1, "", "TD0Estimator"], [369, 0, 1, "", "TD1Estimator"], [370, 0, 1, "", "TDLambdaEstimator"], [371, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[367, 1, 1, "", "forward"], [367, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[368, 1, 1, "", "forward"], [368, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[369, 1, 1, "", "forward"], [369, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[370, 1, 1, "", "forward"], [370, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[371, 4, 1, "", "default_keys"], [371, 1, 1, "", "forward"], [371, 1, 1, "", "set_keys"], [371, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[372, 0, 1, "", "generalized_advantage_estimate"], [373, 0, 1, "", "reward2go"], [374, 0, 1, "", "td0_advantage_estimate"], [375, 0, 1, "", "td0_return_estimate"], [376, 0, 1, "", "td1_advantage_estimate"], [377, 0, 1, "", "td1_return_estimate"], [378, 0, 1, "", "td_lambda_advantage_estimate"], [379, 0, 1, "", "td_lambda_return_estimate"], [380, 0, 1, "", "vec_generalized_advantage_estimate"], [381, 0, 1, "", "vec_td1_advantage_estimate"], [382, 0, 1, "", "vec_td1_return_estimate"], [383, 0, 1, "", "vec_td_lambda_advantage_estimate"], [384, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[385, 3, 1, "", "PixelRenderTransform"], [386, 3, 1, "", "TensorDictRecorder"], [387, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[388, 3, 1, "", "Logger"], [390, 3, 1, "", "generate_exp_name"], [391, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[389, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[392, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[393, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[394, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[396, 0, 1, "", "BatchSubSampler"], [397, 0, 1, "", "ClearCudaCache"], [398, 0, 1, "", "CountFramesLog"], [399, 0, 1, "", "LogScalar"], [400, 0, 1, "", "LogValidationReward"], [401, 0, 1, "", "OptimizerHook"], [402, 0, 1, "", "ReplayBufferTrainer"], [403, 0, 1, "", "RewardNormalizer"], [404, 0, 1, "", "SelectKeys"], [405, 0, 1, "", "Trainer"], [406, 0, 1, "", "TrainerHookBase"], [407, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[396, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[397, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[398, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[399, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[400, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[401, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[402, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[403, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[404, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[405, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[406, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[407, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[408, 3, 1, "", "correct_for_frame_skip"], [409, 3, 1, "", "get_stats_random_rollout"], [410, 3, 1, "", "make_collector_offpolicy"], [411, 3, 1, "", "make_collector_onpolicy"], [412, 3, 1, "", "make_dqn_loss"], [413, 3, 1, "", "make_replay_buffer"], [414, 3, 1, "", "make_target_updater"], [415, 3, 1, "", "make_trainer"], [416, 3, 1, "", "parallel_env_constructor"], [417, 3, 1, "", "sync_async_collector"], [418, 3, 1, "", "sync_sync_collector"], [419, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 423, 424, 425, 426, 428, 429, 430, 432, 434, 441, 442, 443, 447, 448], "instal": [0, 6, 7, 447], "get": [0, 433, 434, 435, 436, 437, 438], "start": [0, 433, 434, 435, 436, 437, 438], "tutori": [0, 430, 441, 442], "basic": [0, 445], "intermedi": [0, 8], "advanc": 0, "refer": [0, 421], "knowledg": [0, 422], "base": [0, 2, 7, 422, 432], "indic": 0, "tabl": 0, "collector": [1, 428, 429, 430, 431, 436, 438, 441, 442, 447], "packag": [1, 2, 3, 423, 424, 425, 426], "batch": [1, 3, 428, 443, 445], "size": [1, 3, 428, 445], "polici": [1, 2, 4, 424, 428, 430, 431, 432, 434, 438, 440, 441, 442, 443], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 423], "environ": [1, 3, 4, 6, 7, 428, 429, 430, 431, 433, 438, 440, 441, 442, 443, 447, 448], "local": 1, "remot": 1, "updat": [1, 428], "extend": 1, "class": [1, 3, 443, 447], "default": 1, "implement": [1, 4], "practic": 1, "consider": [1, 435], "replai": [1, 2, 3, 428, 429, 430, 431, 436, 438, 441, 442, 445, 447], "buffer": [1, 2, 3, 428, 429, 430, 431, 436, 438, 441, 442, 445, 447], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 428, 429, 430, 436, 438, 441, 442, 447], "helper": [1, 3], "function": [1, 4, 424, 429, 430, 435, 441, 442, 447], "compos": [2, 194], "support": 2, "type": 2, "choos": 2, "storag": [2, 114, 428, 436, 445], "sampl": [2, 445], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 429, 445], "trajectori": [2, 445], "checkpoint": [2, 425], "episod": [2, 4], "format": 2, "ted": [2, 433], "The": [2, 428], "rational": 2, "behind": 2, "structur": [2, 445], "A": [2, 429, 445], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 423, 445, 447], "special": [2, 434, 447], "case": 2, "footnot": 2, "multi": [2, 3, 423, 424, 440, 441, 442], "agent": [2, 3, 4, 423, 424, 441, 442], "present": 2, "rnn": 2, "transform": [2, 3, 239, 428, 430, 433, 441, 442, 443, 445, 447, 448], "step": [2, 3, 428, 430, 433, 436, 441, 442, 445, 448], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 82], "numer": 2, "subclass": [2, 3], "categor": [2, 35], "tree": [2, 84], "forest": 2, "tensordictmap": [2, 77], "mctsforest": [2, 50], "reinforc": [2, 424, 430, 441, 442], "learn": [2, 4, 423, 430, 441, 442], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 423, 424, 425, 441], "env": [3, 443, 447, 448], "spec": [3, 443, 448], "lock": 3, "method": [3, 428], "partial": 3, "reset": [3, 443, 448], "vector": [3, 447], "async": [3, 447], "exampl": [3, 11, 429, 445], "custom": [3, 11, 443, 445], "nativ": 3, "auto": 3, "dynam": [3, 4, 445], "forward": [3, 4, 428], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 445], "expos": 3, "outsid": 3, "world": 3, "design": [3, 438], "your": [3, 4, 6, 428, 432, 438, 443], "own": [3, 438], "tip": 3, "us": [3, 4, 6, 9, 424, 431, 444, 445, 447], "clone": [3, 7], "mask": 3, "action": [3, 4, 424, 431, 443], "record": [3, 425, 428, 437], "video": [3, 11, 437], "domain": [3, 423], "specif": [3, 423, 440], "librari": [3, 447], "thing": [4, 428, 443], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 433, 435, 447], "gener": [4, 11, 423], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 423], "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 428, 429, 435, 438], "return": [4, 424], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 447], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 440], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 428, 429, 430], "standard": 4, "explor": [4, 423, 428, 429, 434], "valu": [4, 423, 424, 428, 430, 431, 434], "loss": [4, 428, 429, 430, 431, 438, 441, 442], "earli": 4, "train": [4, 8, 424, 428, 430, 431, 432, 435, 438, 441, 442, 443], "roughli": 4, "uniformli": 4, "random": [4, 424, 441, 442], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 429], "increas": 4, "an": [4, 430, 431, 433, 443], "can": 4, "low": 4, "model": [4, 423, 428, 429, 431, 432, 435, 444, 447], "also": 4, "offlin": 4, "observ": [4, 428], "space": 4, "effect": [4, 443], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 432], "gym": [5, 447, 448], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 428], "render": [7, 11, 438, 441, 442, 448], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 428], "pytorch": [8, 9, 10, 432], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 443], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "localweightupdaterbas": 14, "multiprocessedremoteweightupd": 15, "multisyncdatacollector": 16, "multiasyncdatacollector": 17, "rayremoteweightupdat": 18, "remoteweightupdaterbas": 19, "syncdatacollector": 20, "vanillalocalweightupdat": 21, "asyncdatacollector": 22, "distributeddatacollector": 23, "distributedsyncdatacollector": 24, "rpcdatacollector": 25, "raycollector": 26, "submitit_delayed_launch": 27, "split_trajectori": 28, "adaptiveklcontrol": 29, "binari": [30, 432], "binarydiscretetensorspec": 31, "binarytodecim": 32, "bound": 33, "boundedtensorspec": 34, "composit": 36, "compositespec": 37, "constantklcontrol": 38, "densifyreward": 39, "discretetensorspec": 40, "flat2t": 41, "h5combin": 42, "h5split": 43, "hashtoint": 44, "llmdata": 45, "llminput": 46, "llmoutput": 47, "lazystackedcompositespec": 48, "lazystackedtensorspec": 49, "multicategor": 51, "multidiscretetensorspec": 52, "multionehot": 53, "multionehotdiscretetensorspec": 54, "multistep": 55, "nested2t": 56, "nontensor": 57, "nontensorspec": 58, "onehot": 59, "onehotdiscretetensorspec": 60, "pairwisedataset": 61, "prioritizedreplaybuff": 62, "promptdata": 63, "prompttensordicttoken": 64, "querymodul": 65, "randomprojectionhash": 66, "rayreplaybuff": 67, "remotetensordictreplaybuff": 68, "replaybuff": 69, "rewarddata": 70, "rolloutfrommodel": 71, "siphash": 72, "stack": [73, 230], "stackedcomposit": 74, "ted2flat": 75, "ted2nest": 76, "tensordictprioritizedreplaybuff": 78, "tensordictreplaybuff": 79, "tensordicttoken": 80, "tensormap": 81, "tokenizeddatasetload": 83, "unbound": 85, "unboundedcontinu": 86, "unboundedcontinuoustensorspec": 87, "unboundeddiscret": 88, "unboundeddiscretetensorspec": 89, "check_no_exclusive_kei": 90, "consolidate_spec": 91, "contains_lazy_spec": 92, "create_infinite_iter": 93, "get_dataload": 94, "flatstoragecheckpoint": 95, "h5storagecheckpoint": 96, "immutabledatasetwrit": 97, "lazymemmapstorag": 98, "lazystackstorag": 99, "lazytensorstorag": 100, "liststorag": 101, "liststoragecheckpoint": 102, "nestedstoragecheckpoint": 103, "prioritizedsampl": 104, "prioritizedslicesampl": 105, "randomsampl": 106, "replaybufferensembl": 107, "roundrobinwrit": 108, "sampler": 109, "samplerensembl": 110, "samplerwithoutreplac": 111, "slicesampl": 112, "slicesamplerwithoutreplac": 113, "storagecheckpointerbas": 115, "storageensembl": 116, "storageensemblecheckpoint": 117, "tensordictmaxvaluewrit": 118, "tensordictroundrobinwrit": 119, "tensorstorag": 120, "tensorstoragecheckpoint": 121, "writer": 122, "writerensembl": 123, "asyncenvpool": 124, "braxenv": 125, "braxwrapp": 126, "chessenv": 127, "dmcontrolenv": 128, "dmcontrolwrapp": 129, "envbas": [130, 443], "envcreat": 131, "envmetadata": 132, "gymenv": 133, "gymlikeenv": 134, "gymwrapp": 135, "habitatenv": 136, "isaacgymenv": 137, "isaacgymwrapp": 138, "jumanjienv": 139, "jumanjiwrapp": 140, "llmenv": 141, "llmhashingenv": 142, "mogymenv": 143, "mogymwrapp": 144, "marlgroupmaptyp": 145, "meltingpotenv": 146, "meltingpotwrapp": 147, "modelbasedenvbas": 148, "multithreadedenv": 149, "multithreadedenvwrapp": 150, "openmlenv": 151, "openspielenv": 152, "openspielwrapp": 153, "parallelenv": 154, "pendulumenv": 155, "pettingzooenv": 156, "pettingzoowrapp": 157, "processorasyncenvpool": 158, "randompolici": 159, "robohiveenv": 160, "smacv2env": 161, "smacv2wrapp": 162, "serialenv": 163, "threadingasyncenvpool": 164, "tictactoeenv": 165, "unitymlagentsenv": 166, "unitymlagentswrapp": 167, "vmasenv": 168, "vmaswrapp": 169, "check_env_spec": 170, "check_marl_group": 171, "exploration_typ": 172, "get_available_librari": 173, "gym_backend": 174, "make_composite_from_td": 175, "dreamerdecod": 176, "dreamerenv": 177, "register_gym_spec_convers": 178, "set_exploration_typ": 179, "set_gym_backend": 180, "step_mdp": 181, "terminated_or_trunc": 182, "actiondiscret": 183, "actionmask": 184, "autoresetenv": 185, "autoresettransform": 186, "batchsizetransform": 187, "binarizereward": 188, "burnintransform": 189, "catfram": [190, 445], "cattensor": 191, "centercrop": 192, "cliptransform": 193, "conditionalskip": 195, "crop": 196, "dtypecasttransform": 197, "dataloadingprim": 198, "devicecasttransform": 199, "discreteactionproject": 200, "doubletofloat": 201, "endoflifetransform": 202, "excludetransform": 203, "finitetensordictcheck": 204, "flattenobserv": 205, "frameskiptransform": 206, "grayscal": 207, "hash": 208, "inittrack": 209, "klrewardtransform": 210, "linearisereward": 211, "multiact": 212, "noopresetenv": 213, "observationnorm": 214, "observationtransform": 215, "permutetransform": 216, "pinmemorytransform": 217, "r3mtransform": 218, "randomcroptensordict": 219, "removeemptyspec": 220, "renametransform": 221, "resiz": 222, "reward2gotransform": 223, "rewardclip": 224, "rewardsc": 225, "rewardsum": 226, "selecttransform": 227, "signtransform": 228, "squeezetransform": 229, "stepcount": 231, "targetreturn": 232, "tensordictprim": 233, "timemaxpool": 234, "timer": 235, "totensorimag": 236, "token": 237, "trajcount": 238, "transformedenv": 240, "unarytransform": 241, "unsqueezetransform": 242, "vc1transform": 243, "viprewardtransform": 244, "viptransform": 245, "vecgymenvtransform": 246, "vecnorm": [247, 448], "vecnormv2": 248, "gsdenois": 249, "multisteptransform": 250, "implement_for": 251, "additivegaussianmodul": 252, "batchrenorm1d": 253, "cemplann": 254, "consistentdropout": 255, "consistentdropoutmodul": 256, "conv3dnet": 257, "convnet": 258, "dtactor": 259, "ddpgcnnactor": 260, "ddpgcnnqnet": 261, "ddpgmlpactor": 262, "ddpgmlpqnet": 263, "decisiontransform": 264, "delta": 265, "distributionaldqnnet": 266, "distributionalqvaluehook": 267, "dreameractor": 268, "duelingcnndqnet": 269, "egreedymodul": 270, "gru": 271, "grucel": 272, "grumodul": 273, "independentnorm": 274, "lstm": [275, 431], "lstmcell": 276, "lstmmodul": 277, "mlp": [278, 431], "mpcplannerbas": 279, "mppiplann": 280, "maskedcategor": 281, "maskedonehotcategor": 282, "multiagentconvnet": 283, "multiagentmlp": 284, "multiagentnetbas": 285, "noisylazylinear": 286, "noisylinear": 287, "obsdecod": 288, "obsencod": 289, "onehotcategor": 290, "onehotordin": 291, "onlinedtactor": 292, "ordin": 293, "ornsteinuhlenbeckprocessmodul": 294, "qmixer": [295, 424], "qvaluehook": 296, "rssmposterior": 297, "rssmprior": 298, "squeeze2dlay": 299, "squeezelay": 300, "tanhdelta": 301, "tanhnorm": 302, "truncatednorm": 303, "vdnmixer": 304, "vmapmodul": 305, "recurrent_mod": 306, "reset_nois": 307, "set_recurrent_mod": 308, "actor": [309, 423, 428, 434], "actorcriticoper": 310, "actorcriticwrapp": 311, "actorvalueoper": 312, "decisiontransformerinferencewrapp": 313, "distributionalqvalueactor": 314, "distributionalqvaluemodul": 315, "lmheadactorvalueoper": 316, "multistepactorwrapp": 317, "probabilisticactor": 318, "qvalueactor": [319, 423], "qvaluemodul": 320, "safemodul": [321, 423], "safeprobabilisticmodul": 322, "safeprobabilistictensordictsequenti": 323, "safesequenti": 324, "tanhmodul": 325, "valueoper": 326, "worldmodelwrapp": 327, "biased_softplu": 328, "get_primers_from_modul": 329, "inv_softplu": 330, "map": [331, 441], "a2closs": 332, "cqlloss": 333, "clipppoloss": 334, "crossqloss": 335, "ddpgloss": 336, "dqnloss": 337, "dtloss": 338, "discretecqlloss": 339, "discreteiqlloss": 340, "discretesacloss": 341, "distributionaldqnloss": 342, "dreameractorloss": 343, "dreamermodelloss": 344, "dreamervalueloss": 345, "gailloss": 346, "hardupd": 347, "iqlloss": 348, "klpenppoloss": 349, "lossmodul": [350, 428, 435], "onlinedtloss": 351, "ppoloss": 352, "redqloss": 353, "reinforceloss": 354, "sacloss": 355, "softupd": 356, "td3bcloss": 357, "td3loss": 358, "valueestim": 359, "default_value_kwarg": 360, "distance_loss": 361, "group_optim": 362, "hold_out_net": 363, "hold_out_param": 364, "qmixerloss": 365, "next_state_valu": 366, "gae": 367, "td0estim": 368, "td1estim": 369, "tdlambdaestim": 370, "valueestimatorbas": 371, "generalized_advantage_estim": 372, "reward2go": 373, "td0_advantage_estim": 374, "td0_return_estim": 375, "td1_advantage_estim": 376, "td1_return_estim": 377, "td_lambda_advantage_estim": 378, "td_lambda_return_estim": 379, "vec_generalized_advantage_estim": 380, "vec_td1_advantage_estim": 381, "vec_td1_return_estim": 382, "vec_td_lambda_advantage_estim": 383, "vec_td_lambda_return_estim": 384, "pixelrendertransform": 385, "tensordictrecord": 386, "videorecord": 387, "logger": [388, 425, 437, 438], "csvlogger": 389, "generate_exp_nam": 390, "get_logg": 391, "mlflowlogg": 392, "tensorboardlogg": 393, "wandblogg": 394, "set_auto_unwrap_transformed_env": 395, "batchsubsampl": 396, "clearcudacach": 397, "countframeslog": 398, "logscalar": 399, "logvalidationreward": 400, "optimizerhook": 401, "replaybuffertrain": 402, "rewardnorm": 403, "selectkei": 404, "trainer": [405, 425, 429], "trainerhookbas": 406, "updateweight": 407, "correct_for_frame_skip": 408, "get_stats_random_rollout": 409, "make_collector_offpolici": 410, "make_collector_onpolici": 411, "make_dqn_loss": 412, "make_replay_buff": 413, "make_target_updat": 414, "make_train": 415, "parallel_env_constructor": 416, "sync_async_collector": 417, "sync_sync_collector": 418, "transformed_env_constructor": 419, "readm": [420, 439], "tuto": [420, 439], "api": 421, "contribut": [422, 447], "content": 422, "modul": [423, 428, 431, 432, 434, 438, 447], "tensordictmodul": [423, 432, 434, 447], "wrapper": [423, 434], "probabilist": [423, 434], "q": [423, 429, 431, 434], "oper": 423, "join": 423, "hook": [423, 425, 429], "regular": 423, "planner": 423, "object": [424, 428, 435, 447], "torch": 424, "vmap": [424, 447], "dqn": [424, 429, 431], "ddpg": [424, 428, 441], "sac": 424, "redq": 424, "crossq": 424, "iql": 424, "cql": 424, "gail": 424, "dt": 424, "td3": 424, "bc": 424, "ppo": [424, 430, 442], "head": 424, "a2c": 424, "dreamer": 424, "builder": 425, "_util": 426, "comput": [427, 429, 443, 446], "time": [427, 428, 446], "code": [428, 443], "overview": [428, 431], "setup": [428, 431], "__init__": 428, "estim": 428, "put": 428, "togeth": [428, 443], "call": 428, "parallel": [428, 440, 448], "execut": [428, 440, 443], "stat": 428, "build": [428, 429, 438, 445], "evalu": 428, "construct": 428, "target": [428, 429, 435], "network": [428, 429, 430, 431, 434, 441, 442], "experi": [428, 443], "result": [428, 430, 441, 442], "conclus": [428, 429, 430, 431, 432, 441, 442, 443, 445], "next": [428, 430, 433, 436, 441, 442, 445], "deep": 429, "collect": [429, 430, 436], "paramet": [429, 430, 435], "hyperparamet": [429, 430, 441, 442], "regist": 429, "possibl": 429, "improv": 429, "defin": [430, 441, 442], "loop": [430, 431, 432, 438, 441, 442, 443], "recurr": [431, 432], "convolut": 431, "select": 431, "further": [431, 435], "read": 431, "export": 432, "introduct": [432, 447], "fast": 432, "recap": 432, "simpl": [432, 443], "stochast": 432, "aotinductor": 432, "free": 432, "c": 432, "onnx": 432, "run": [432, 433, 448], "rollout": [432, 433, 440, 441, 442, 443, 448], "creat": 433, "s": [434, 435], "output": 435, "log": 437, "first": 438, "divers": 440, "competit": 441, "group": 441, "critic": [441, 442], "pendulum": 443, "write": 443, "_step": 443, "simul": 443, "_reset": 443, "metadata": 443, "_spec": 443, "shape": 443, "seed": [443, 448], "wrap": 443, "test": 443, "our": 443, "pretrain": 444, "vanilla": 445, "integr": 445, "tensorclass": 445, "other": 445, "pytre": 445, "iter": 445, "over": 445, "fix": 445, "priorit": 445, "save": 445, "raw": 445, "imag": 445, "more": 445, "complex": 445, "config": 447, "sequenc": 447, "program": 447, "ensembl": 447, "meta": 447, "sync": 447, "multiprocess": 447, "frame_skip": 448, "deepmind": 448, "control": 448, "devic": 448, "close": 448, "access": 448, "attribut": 448, "kwarg": 448}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})