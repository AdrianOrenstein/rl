Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.RayLLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.LLMData", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.CategoricalSequential", "reference/generated/torchrl.modules.llm.LLMOnDevice", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.vLLMWorker", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.RayLLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.LLMData.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.CategoricalSequential.rst", "reference/generated/torchrl.modules.llm.LLMOnDevice.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.vLLMWorker.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "RayLLMCollector", "vLLMUpdater", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "ContentBase", "History", "LLMData", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "BrowserTransform", "DataLoadingPrimer", "KLRewardTransform", "MCPToolTransform", "PolicyVersion", "PythonInterpreter", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "CategoricalSequential", "LLMOnDevice", "TransformersWrapper", "make_vllm_worker", "stateless_init_process_group", "vLLMWorker", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98, 101, 102, 103, 104, 105, 109, 111, 112, 114, 116, 117, 118, 120, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 145, 146, 152, 153, 155, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 219, 225, 227, 228, 231, 235, 240, 241, 245, 246, 247, 248, 250, 259, 260, 261, 262, 263, 265, 266, 267, 270, 273, 274, 275, 277, 280, 284, 285, 287, 288, 289, 290, 292, 297, 298, 300, 302, 304, 305, 306, 310, 311, 313, 321, 326, 327, 329, 333, 335, 337, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 361, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 422, 424, 427, 431, 437, 438, 442, 443, 446, 453, 454, 455, 456, 459, 460, 461, 462, 466, 467, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 486, 487], "open": [0, 5, 7, 62, 64, 71, 85, 96, 97, 98, 102, 185, 278, 337, 400, 467, 478, 480, 481, 486], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "reinforc": [0, 3, 9, 150, 151, 180, 217, 275, 282, 287, 288, 289, 290, 294, 321, 349, 366, 367, 369, 372, 373, 374, 376, 381, 382, 388, 389, 390, 391, 458, 465, 467, 471, 472, 477, 482, 485, 486], "learn": [0, 3, 7, 8, 9, 22, 56, 134, 150, 151, 155, 158, 167, 180, 217, 275, 282, 287, 288, 289, 290, 294, 307, 314, 320, 321, 349, 366, 367, 368, 369, 372, 373, 374, 376, 380, 381, 382, 386, 387, 388, 389, 390, 391, 399, 458, 462, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 482, 484, 485, 486, 487], "rl": [0, 1, 2, 3, 5, 8, 10, 15, 16, 18, 21, 29, 143, 152, 217, 259, 314, 343, 352, 360, 366, 368, 383, 384, 386, 388, 399, 433, 457, 459, 460, 461, 462, 463, 466, 467, 468, 474, 477, 480, 481, 483, 484, 487], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 25, 65, 81, 131, 132, 133, 142, 153, 177, 186, 339, 458, 459, 461, 462, 464, 466, 467, 468, 470, 471, 472, 474, 480, 481, 482, 487], "pytorch": [0, 1, 2, 3, 29, 32, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 184, 187, 188, 189, 217, 262, 263, 282, 298, 302, 313, 314, 442, 457, 459, 461, 463, 466, 468, 469, 473, 477, 480, 481, 482, 486, 487], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 23, 25, 29, 36, 43, 48, 56, 66, 67, 73, 78, 81, 128, 131, 134, 138, 142, 146, 149, 150, 151, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 217, 238, 266, 274, 275, 277, 282, 302, 320, 333, 335, 339, 356, 399, 401, 431, 432, 459, 460, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 108, 109, 111, 115, 116, 117, 122, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 144, 145, 146, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 209, 210, 211, 213, 214, 216, 217, 220, 221, 223, 225, 227, 228, 229, 232, 235, 239, 240, 241, 245, 246, 250, 253, 257, 258, 259, 260, 264, 265, 266, 267, 268, 270, 272, 274, 275, 277, 278, 281, 283, 284, 285, 287, 297, 298, 300, 301, 302, 304, 306, 307, 308, 310, 311, 312, 314, 321, 330, 332, 333, 335, 339, 343, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 422, 424, 431, 432, 437, 454, 455, 456, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 111, 128, 129, 130, 131, 134, 137, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 241, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 270, 271, 273, 274, 275, 277, 356, 384, 391, 399, 401, 456, 467, 468, 470, 471, 480, 481, 482, 484], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 111, 114, 115, 116, 117, 118, 120, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 241, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 317, 319, 320, 321, 322, 323, 329, 330, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 382, 383, 384, 386, 387, 388, 389, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 422, 423, 424, 433, 439, 442, 445, 446, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "pypi": [0, 2, 486], "see": [0, 1, 2, 3, 6, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 103, 109, 111, 116, 117, 128, 131, 134, 138, 141, 143, 145, 146, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 221, 223, 239, 245, 260, 263, 265, 266, 267, 270, 272, 274, 275, 276, 277, 282, 283, 284, 285, 298, 300, 301, 302, 304, 305, 311, 312, 313, 320, 322, 330, 331, 333, 335, 339, 342, 344, 346, 352, 355, 356, 368, 369, 380, 384, 386, 391, 399, 401, 424, 431, 439, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 480, 481, 482, 484, 486, 487], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 109, 111, 122, 128, 131, 134, 137, 138, 139, 141, 142, 145, 146, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 263, 266, 270, 275, 276, 277, 278, 279, 280, 283, 294, 302, 305, 313, 333, 335, 339, 343, 348, 349, 355, 356, 360, 366, 376, 384, 386, 399, 401, 404, 409, 417, 431, 438, 459, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 486, 487], "about": [0, 3, 5, 7, 9, 22, 23, 25, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 81, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 461, 462, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487], "instruct": [0, 6, 7, 10, 28, 143, 181, 186, 227, 229, 460, 462, 466, 467, 468, 469, 478, 480, 481, 484], "dedic": [0, 1, 2, 3, 22, 23, 25, 27, 51, 70, 79, 80, 111, 158, 167, 344, 345, 346, 460, 461, 466, 471, 473, 474, 476, 479, 481], "section": [0, 2, 3, 4, 33, 134, 298, 302, 460, 467, 470, 471, 476, 480, 481], "below": [0, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 86, 95, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 223, 239, 245, 260, 265, 266, 267, 270, 272, 277, 284, 285, 298, 301, 302, 305, 311, 330, 333, 335, 339, 352, 355, 368, 386, 399, 401, 439, 466, 467, 468, 469, 470, 471, 480, 482], "pip": [0, 10, 470, 471, 472, 473, 474, 475, 476, 478, 481, 486, 487], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 48, 49, 51, 52, 54, 56, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 84, 85, 92, 95, 96, 97, 98, 102, 103, 105, 109, 110, 111, 114, 116, 117, 125, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 214, 216, 217, 218, 219, 220, 224, 225, 228, 232, 235, 240, 241, 243, 245, 246, 249, 250, 253, 254, 259, 260, 261, 264, 265, 267, 269, 270, 272, 273, 274, 275, 277, 278, 284, 285, 291, 292, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 332, 333, 335, 339, 343, 347, 349, 351, 352, 353, 354, 356, 359, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 428, 433, 439, 446, 452, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 474, 475, 479, 480, 481, 482, 483, 484, 486, 487], "python": [0, 1, 3, 5, 6, 7, 10, 15, 16, 27, 29, 30, 63, 68, 69, 70, 73, 78, 79, 80, 85, 111, 154, 170, 171, 197, 207, 298, 299, 300, 302, 303, 304, 308, 309, 460, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "first": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 102, 104, 109, 116, 117, 122, 124, 128, 131, 134, 137, 138, 139, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 213, 214, 217, 218, 222, 223, 232, 239, 241, 245, 246, 262, 263, 267, 270, 275, 278, 285, 292, 298, 300, 302, 304, 305, 308, 309, 311, 313, 316, 343, 347, 348, 349, 352, 353, 355, 356, 368, 378, 383, 384, 386, 399, 423, 424, 441, 461, 465, 466, 467, 468, 469, 470, 471, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "low": [0, 3, 37, 40, 67, 78, 83, 86, 109, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 210, 220, 227, 235, 238, 260, 268, 328, 329, 330, 347, 349, 352, 356, 359, 466, 467, 468, 470, 480, 481, 482, 486], "high": [0, 3, 9, 37, 40, 62, 64, 71, 79, 85, 86, 96, 97, 98, 109, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 186, 187, 188, 189, 202, 210, 220, 227, 235, 238, 240, 260, 268, 328, 329, 330, 347, 349, 352, 356, 359, 400, 404, 409, 417, 466, 467, 468, 480, 481, 482, 484, 486], "level": [0, 2, 3, 4, 28, 40, 41, 49, 63, 68, 69, 70, 75, 79, 80, 111, 137, 139, 186, 217, 258, 266, 300, 304, 383, 466, 467, 470, 474, 486], "abstract": [0, 1, 3, 8, 20, 82, 83, 126, 134, 242, 306, 408, 434, 443, 463, 468, 470, 482, 486], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 111, 114, 115, 116, 117, 118, 120, 122, 124, 128, 131, 134, 135, 137, 138, 139, 145, 146, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 209, 210, 212, 213, 214, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 231, 232, 235, 237, 238, 239, 240, 243, 245, 250, 253, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 279, 281, 282, 290, 292, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309, 310, 311, 312, 314, 317, 322, 325, 333, 335, 338, 339, 342, 347, 348, 351, 352, 353, 355, 356, 357, 358, 359, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 422, 431, 432, 439, 442, 452, 456, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "intend": [0, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 216, 227, 332, 384, 461, 486], "effici": [0, 1, 2, 4, 8, 17, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 298, 314, 369, 461, 466, 467, 468, 469, 470, 473, 474, 476, 479, 480, 481, 483, 484, 486], "modular": [0, 358, 460, 470, 484, 486], "document": [0, 2, 5, 7, 11, 22, 23, 27, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 143, 146, 156, 157, 158, 159, 162, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 333, 335, 339, 399, 401, 457, 467, 469, 470, 471, 474, 477, 486], "properli": [0, 1, 3, 29, 86, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 223, 300, 304, 404, 468, 475, 480, 481, 482, 486], "test": [0, 3, 5, 29, 128, 129, 130, 131, 134, 138, 144, 145, 146, 150, 151, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 193, 265, 270, 437, 452, 460, 468, 469, 470, 483, 486], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 108, 109, 111, 114, 116, 117, 118, 122, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 142, 144, 145, 146, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 208, 209, 210, 213, 214, 216, 217, 221, 222, 223, 225, 228, 229, 230, 235, 238, 239, 241, 243, 245, 250, 252, 253, 254, 257, 258, 259, 260, 262, 265, 266, 267, 270, 272, 273, 274, 275, 277, 279, 280, 281, 282, 287, 288, 289, 290, 291, 294, 298, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 314, 318, 320, 321, 323, 324, 325, 333, 335, 336, 337, 339, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 422, 424, 426, 429, 430, 431, 432, 433, 438, 452, 454, 455, 458, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487], "code": [0, 3, 5, 7, 8, 15, 16, 67, 73, 128, 131, 134, 138, 143, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 197, 245, 267, 270, 280, 298, 299, 302, 303, 352, 356, 358, 460, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487], "aim": [0, 2, 3, 7, 51, 74, 75, 245, 270, 272, 305, 445, 459, 461, 462, 466, 467, 486], "support": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 43, 62, 64, 66, 71, 78, 85, 95, 96, 97, 98, 102, 104, 118, 120, 124, 125, 127, 128, 129, 130, 131, 137, 139, 144, 153, 155, 158, 160, 164, 177, 185, 187, 192, 199, 214, 217, 229, 235, 241, 260, 261, 264, 268, 275, 294, 318, 320, 329, 332, 333, 335, 336, 339, 348, 349, 352, 355, 358, 376, 384, 399, 400, 404, 405, 406, 407, 429, 458, 460, 461, 463, 468, 469, 471, 472, 478, 481, 482, 484, 486], "research": [0, 7, 9, 150, 151, 280, 486], "most": [0, 1, 2, 3, 7, 8, 15, 16, 56, 58, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 227, 273, 466, 468, 470, 471, 472, 473, 474, 475, 476, 482, 486, 487], "written": [0, 1, 2, 3, 29, 30, 45, 62, 63, 64, 66, 68, 69, 70, 71, 76, 79, 80, 84, 85, 96, 97, 98, 100, 102, 109, 111, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 185, 186, 187, 188, 189, 194, 208, 209, 210, 217, 229, 232, 237, 238, 253, 258, 261, 262, 267, 273, 277, 278, 283, 321, 343, 352, 355, 356, 360, 366, 368, 383, 386, 388, 399, 400, 403, 422, 423, 424, 460, 461, 462, 463, 466, 469, 470, 472, 479, 482, 486], "highli": [0, 2, 368, 386, 471, 486, 487], "wai": [0, 1, 2, 3, 4, 111, 122, 142, 180, 181, 184, 217, 245, 248, 265, 266, 272, 273, 300, 302, 304, 386, 404, 405, 406, 407, 461, 466, 467, 468, 470, 471, 473, 474, 479, 480, 481, 482, 483, 484, 486, 487], "easili": [0, 1, 2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 460, 462, 466, 467, 468, 471, 472, 473, 476, 480, 481, 486, 487], "swap": [0, 1, 3, 137, 273, 468, 470, 483, 486], "compon": [0, 1, 2, 3, 63, 67, 68, 69, 70, 79, 80, 102, 103, 104, 105, 111, 118, 120, 124, 186, 294, 323, 348, 349, 354, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 438, 442, 460, 466, 467, 468, 469, 470, 472, 473, 476, 478, 479, 480, 481, 482, 483, 486], "transform": [0, 1, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 43, 51, 56, 63, 65, 68, 69, 70, 72, 79, 80, 81, 97, 99, 100, 107, 111, 120, 125, 128, 131, 134, 135, 138, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 286, 287, 291, 294, 295, 300, 304, 319, 322, 323, 329, 331, 335, 339, 347, 350, 351, 359, 362, 363, 365, 372, 385, 401, 422, 424, 439, 456, 458, 465, 467, 469, 470, 472, 474, 475, 476, 477, 478, 483, 485], "them": [0, 2, 3, 7, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 111, 122, 127, 128, 131, 134, 135, 138, 142, 146, 149, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 199, 225, 228, 235, 238, 260, 264, 267, 268, 274, 275, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 331, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 367, 369, 375, 382, 383, 387, 389, 391, 392, 405, 406, 407, 424, 466, 467, 469, 470, 471, 472, 474, 475, 479, 480, 481, 482, 483, 484, 486, 487], "write": [0, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 56, 62, 63, 64, 65, 68, 69, 70, 71, 79, 80, 84, 85, 96, 97, 98, 109, 111, 116, 120, 127, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 243, 244, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 343, 355, 356, 358, 360, 369, 370, 371, 373, 374, 375, 382, 387, 389, 391, 392, 400, 401, 403, 408, 424, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487], "new": [0, 1, 2, 3, 4, 8, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 108, 109, 111, 115, 128, 131, 134, 138, 146, 153, 158, 159, 162, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 214, 253, 257, 266, 267, 274, 275, 277, 292, 298, 300, 304, 321, 333, 335, 339, 355, 356, 361, 366, 367, 368, 371, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 400, 401, 402, 431, 462, 466, 468, 471, 473, 480, 481, 482, 486, 487], "ones": [0, 2, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 116, 117, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 163, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 218, 221, 222, 225, 226, 228, 241, 245, 250, 257, 260, 266, 267, 270, 272, 275, 277, 282, 308, 309, 320, 332, 333, 335, 339, 355, 366, 367, 368, 369, 370, 382, 383, 386, 387, 389, 391, 392, 399, 401, 410, 466, 468, 470, 480, 481, 482, 484, 486, 487], "littl": [0, 1, 3, 81, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267, 282, 366, 368, 383, 386, 388, 468, 469, 470, 474, 484, 486, 487], "effort": [0, 3, 482, 484, 486], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 114, 115, 116, 117, 118, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239, 241, 244, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 323, 324, 325, 327, 329, 330, 332, 333, 335, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 422, 423, 431, 432, 433, 435, 437, 439, 442, 444, 445, 446, 452, 456, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "repo": [0, 6, 217, 261, 270, 459, 481, 486], "attempt": [0, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 277, 282, 333, 335, 339, 356, 371, 374, 382, 399, 401, 402, 462, 473, 486], "align": [0, 298, 302, 486], "exist": [0, 1, 2, 3, 4, 22, 27, 29, 30, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 102, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 218, 226, 265, 267, 277, 278, 292, 333, 335, 339, 356, 369, 389, 399, 400, 401, 446, 456, 460, 480, 481, 486, 487], "ecosystem": [0, 470, 474, 486], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 104, 111, 114, 116, 122, 124, 128, 131, 134, 135, 138, 142, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 217, 239, 258, 259, 260, 261, 262, 264, 265, 266, 267, 277, 279, 298, 300, 302, 304, 310, 312, 329, 333, 335, 339, 349, 351, 356, 366, 369, 383, 384, 386, 388, 399, 400, 401, 404, 424, 460, 462, 466, 467, 468, 469, 470, 471, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487], "dataset": [0, 47, 51, 62, 63, 64, 65, 70, 71, 72, 77, 79, 80, 84, 85, 95, 96, 97, 98, 101, 109, 111, 114, 116, 117, 155, 180, 181, 184, 185, 186, 187, 190, 274, 400, 424, 458, 460, 466, 467, 471, 483, 484, 486, 487], "pillar": [0, 486], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 73, 74, 75, 83, 85, 86, 87, 88, 89, 90, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 184, 187, 188, 189, 190, 191, 193, 196, 199, 204, 210, 211, 213, 214, 216, 217, 218, 222, 223, 225, 226, 227, 228, 233, 239, 240, 241, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 273, 274, 275, 278, 281, 283, 300, 304, 306, 307, 351, 373, 377, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 432, 433, 435, 437, 445, 446, 447, 448, 452, 453, 454, 455, 456, 458, 459, 461, 462, 465, 470, 472, 473, 474, 475, 477, 483, 484, 485], "model": [0, 3, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 96, 97, 98, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 225, 245, 260, 270, 272, 276, 277, 284, 285, 286, 291, 293, 305, 306, 307, 311, 312, 319, 322, 331, 333, 335, 336, 339, 344, 345, 346, 350, 355, 361, 363, 366, 367, 368, 369, 371, 372, 373, 374, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 399, 400, 401, 402, 442, 447, 448, 449, 458, 459, 462, 463, 465, 468, 471, 474, 477, 480, 481, 482, 484, 485, 487], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 174, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 193, 196, 199, 202, 209, 211, 214, 216, 217, 222, 225, 226, 228, 230, 232, 235, 237, 241, 247, 250, 257, 258, 264, 266, 267, 268, 273, 275, 277, 281, 282, 294, 297, 300, 304, 307, 310, 311, 321, 323, 332, 335, 337, 339, 342, 343, 348, 351, 352, 353, 355, 356, 358, 359, 360, 366, 367, 368, 369, 370, 371, 373, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 400, 402, 404, 405, 406, 407, 408, 422, 424, 431, 433, 439, 442, 444, 447, 452, 454, 455, 456, 458, 461, 462, 463, 465, 469, 470, 471, 472, 473, 477, 478, 482, 483, 484, 485, 487], "util": [0, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 32, 36, 43, 48, 56, 66, 67, 70, 72, 73, 78, 116, 117, 128, 129, 130, 131, 134, 138, 144, 145, 146, 151, 158, 159, 160, 161, 162, 167, 168, 169, 175, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 245, 250, 260, 272, 277, 280, 283, 284, 285, 291, 298, 300, 302, 304, 333, 335, 339, 362, 363, 364, 365, 384, 399, 401, 452, 458, 464, 466, 468, 470, 472, 473, 474, 481, 482, 484, 486, 487], "e": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 104, 108, 109, 122, 124, 128, 131, 134, 135, 138, 139, 146, 158, 159, 162, 167, 168, 169, 172, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 214, 216, 218, 221, 222, 223, 224, 232, 235, 238, 239, 241, 245, 253, 260, 262, 265, 266, 267, 270, 272, 277, 278, 298, 300, 301, 302, 304, 307, 311, 323, 329, 330, 333, 335, 337, 339, 342, 347, 349, 351, 352, 354, 355, 356, 366, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 400, 401, 403, 404, 405, 406, 407, 422, 433, 445, 455, 460, 461, 462, 467, 468, 470, 472, 473, 475, 480, 481, 483, 484, 486, 487], "g": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 122, 128, 131, 134, 135, 138, 139, 146, 158, 159, 162, 167, 168, 169, 172, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 214, 216, 218, 221, 222, 232, 235, 238, 241, 245, 253, 260, 262, 265, 266, 267, 270, 272, 277, 278, 298, 300, 301, 302, 303, 304, 307, 311, 329, 330, 333, 335, 337, 339, 347, 352, 355, 356, 369, 389, 399, 400, 401, 403, 413, 414, 415, 416, 418, 419, 420, 421, 422, 455, 461, 462, 467, 468, 470, 472, 475, 480, 481, 482, 483, 484, 486, 487], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 56, 63, 68, 69, 70, 72, 76, 79, 80, 111, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 196, 214, 217, 250, 258, 277, 282, 300, 304, 321, 368, 383, 386, 399, 439, 442, 444, 447, 448, 452, 454, 455, 458, 462, 463, 470, 484, 487], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 101, 108, 109, 111, 112, 114, 116, 117, 118, 123, 126, 127, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 217, 221, 225, 228, 235, 245, 257, 260, 265, 266, 267, 270, 272, 273, 274, 275, 277, 281, 284, 285, 298, 299, 302, 303, 305, 307, 310, 311, 333, 335, 339, 343, 348, 349, 352, 354, 355, 356, 360, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 428, 433, 445, 452, 453, 454, 455, 456, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487], "etc": [0, 2, 3, 7, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 257, 267, 277, 278, 305, 311, 329, 333, 335, 339, 399, 401, 460, 462, 467, 468, 474, 484, 486, 487], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 111, 115, 118, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 205, 209, 210, 213, 217, 222, 225, 228, 229, 237, 240, 241, 257, 258, 260, 264, 265, 266, 267, 274, 275, 277, 279, 282, 284, 285, 305, 308, 310, 311, 312, 321, 332, 333, 335, 339, 351, 357, 358, 366, 368, 383, 386, 388, 391, 395, 396, 399, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 433, 442, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "few": [0, 2, 8, 117, 138, 189, 424, 433, 460, 468, 469, 472, 480, 481, 484, 486, 487], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 37, 62, 64, 86, 128, 131, 134, 137, 138, 139, 140, 146, 158, 159, 162, 164, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 225, 228, 356, 360, 386, 426, 461, 466, 468, 469, 478, 480, 481, 482, 486, 487], "possibl": [0, 2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 103, 109, 116, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 221, 245, 260, 265, 266, 267, 270, 272, 277, 284, 285, 298, 299, 302, 303, 333, 335, 339, 355, 399, 401, 422, 437, 442, 461, 466, 468, 469, 470, 472, 474, 475, 480, 481, 482, 484, 486, 487], "standard": [0, 2, 3, 58, 131, 241, 252, 274, 275, 279, 280, 281, 295, 307, 313, 314, 319, 347, 368, 383, 386, 391, 392, 404, 405, 406, 407, 466, 467, 471, 472, 481, 484, 486], "numpi": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 235, 263, 268, 278, 442, 470, 482, 484, 486, 487], "common": [0, 2, 3, 4, 83, 128, 138, 144, 211, 229, 344, 345, 346, 350, 366, 367, 368, 369, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 452, 459, 461, 462, 463, 466, 468, 472, 475, 479, 480, 481, 482, 483, 486, 487], "openai": [0, 7, 33, 137, 139, 146, 164, 188, 468, 482, 486, 487], "gym": [0, 1, 3, 4, 8, 15, 16, 18, 21, 27, 28, 29, 30, 68, 128, 131, 134, 135, 137, 138, 139, 140, 142, 143, 146, 150, 151, 153, 154, 158, 159, 162, 164, 167, 168, 169, 172, 173, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 213, 217, 220, 229, 236, 237, 241, 243, 248, 250, 253, 260, 266, 273, 274, 277, 278, 401, 452, 459, 466, 467, 468, 469, 471, 475, 476, 482, 483, 484], "onli": [0, 1, 2, 3, 4, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 102, 104, 108, 109, 111, 116, 117, 124, 128, 131, 132, 133, 134, 137, 138, 139, 140, 142, 145, 146, 153, 154, 158, 159, 160, 161, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 213, 217, 218, 220, 221, 222, 223, 225, 227, 228, 232, 235, 239, 241, 245, 246, 250, 257, 258, 259, 260, 261, 265, 266, 267, 270, 272, 274, 275, 277, 278, 282, 302, 304, 308, 310, 311, 333, 335, 339, 343, 347, 348, 352, 353, 355, 356, 357, 358, 366, 368, 369, 370, 374, 375, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 399, 401, 404, 405, 406, 407, 408, 424, 431, 446, 460, 462, 463, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 246, 248, 249, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 323, 324, 325, 328, 329, 330, 332, 333, 335, 336, 339, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 426, 429, 431, 433, 435, 436, 437, 438, 439, 440, 442, 446, 452, 454, 455, 456, 461, 469, 471, 474, 480, 481, 482, 484, 486], "On": [0, 3, 7, 22, 23, 25, 27, 40, 299, 303, 461, 467, 480, 481], "end": [0, 2, 3, 15, 16, 21, 29, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 100, 109, 111, 115, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 229, 235, 243, 258, 259, 265, 267, 277, 284, 285, 298, 299, 302, 303, 306, 333, 335, 339, 351, 369, 389, 399, 401, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "come": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 56, 122, 128, 131, 134, 138, 145, 146, 149, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 225, 228, 342, 343, 344, 345, 346, 352, 360, 366, 368, 383, 386, 388, 424, 466, 467, 468, 469, 473, 474, 475, 476, 480, 481, 484, 486, 487], "set": [0, 1, 2, 3, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 85, 96, 97, 98, 102, 103, 104, 111, 115, 118, 124, 128, 131, 134, 136, 138, 139, 145, 146, 150, 151, 152, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 209, 211, 213, 214, 217, 218, 221, 225, 228, 235, 236, 237, 238, 245, 250, 258, 259, 260, 261, 265, 266, 267, 270, 272, 274, 275, 277, 278, 298, 300, 302, 304, 306, 310, 311, 318, 320, 321, 329, 333, 335, 339, 342, 347, 355, 356, 368, 369, 375, 380, 383, 384, 386, 389, 399, 400, 401, 404, 408, 424, 432, 433, 437, 439, 448, 456, 459, 460, 461, 462, 464, 466, 467, 468, 469, 470, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 486, 487], "re": [0, 2, 3, 8, 13, 22, 23, 25, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 111, 115, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 232, 277, 304, 308, 309, 312, 333, 335, 339, 352, 356, 399, 401, 431, 463, 466, 468, 469, 471, 473, 478, 479, 480, 482, 486, 487], "usabl": [0, 463, 469, 486], "function": [0, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 102, 103, 104, 105, 111, 118, 120, 124, 128, 131, 134, 135, 138, 139, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 208, 209, 213, 214, 225, 228, 235, 237, 264, 265, 267, 268, 274, 275, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 315, 316, 317, 319, 321, 324, 325, 327, 330, 332, 333, 335, 339, 344, 345, 346, 347, 349, 351, 352, 354, 355, 356, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 442, 452, 458, 460, 461, 466, 469, 470, 471, 472, 475, 478, 479, 482, 484, 487], "cost": [0, 2, 39, 103, 366, 368, 383, 386, 388, 462, 466, 467, 470, 480, 481, 482, 484], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 101, 103, 109, 111, 112, 114, 116, 117, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 164, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 285, 286, 287, 288, 289, 290, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 317, 319, 322, 324, 325, 328, 329, 330, 331, 333, 335, 336, 337, 339, 340, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 428, 432, 442, 445, 447, 452, 453, 454, 455, 456, 458, 460, 461, 463, 466, 467, 468, 470, 472, 473, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 43, 48, 56, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 81, 84, 85, 96, 97, 98, 104, 108, 109, 112, 116, 124, 128, 131, 134, 135, 138, 142, 146, 149, 153, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 216, 217, 225, 228, 235, 260, 263, 265, 274, 275, 277, 300, 304, 310, 311, 321, 333, 335, 337, 338, 339, 349, 354, 368, 386, 399, 400, 401, 458, 463, 466, 467, 469, 470, 471, 478, 480, 481, 482, 483, 484, 486, 487], "good": [0, 1, 4, 9, 158, 196, 466, 468, 469, 470, 472, 481, 486, 487], "runtim": [0, 2, 3, 32, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 482], "perform": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 97, 128, 131, 132, 133, 134, 137, 138, 139, 140, 145, 146, 158, 159, 162, 164, 167, 168, 169, 172, 173, 175, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 225, 228, 235, 240, 262, 265, 267, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 312, 315, 316, 319, 320, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 368, 369, 378, 386, 389, 399, 401, 437, 442, 462, 466, 467, 468, 469, 470, 471, 474, 476, 479, 480, 481, 482, 487], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 20, 22, 23, 25, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 100, 109, 111, 116, 117, 120, 127, 128, 129, 130, 131, 134, 137, 138, 139, 144, 145, 146, 149, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 223, 258, 260, 274, 277, 283, 300, 304, 321, 333, 335, 339, 344, 345, 346, 356, 369, 375, 380, 384, 391, 399, 401, 424, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487], "read": [0, 2, 3, 7, 32, 40, 41, 45, 49, 63, 65, 68, 69, 70, 72, 75, 76, 79, 80, 102, 103, 104, 105, 108, 111, 118, 120, 124, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 236, 237, 243, 244, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 273, 274, 277, 283, 317, 343, 344, 345, 346, 348, 351, 352, 355, 356, 358, 360, 361, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 401, 402, 404, 405, 406, 407, 408, 424, 437, 442, 461, 466, 467, 468, 470, 471, 472, 479, 480, 481, 482, 483, 486, 487], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 17, 27, 32, 192, 463, 466, 471, 474, 478, 479, 483, 487], "beyond": [0, 51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 470], "api": [0, 1, 2, 3, 5, 32, 40, 41, 43, 49, 51, 66, 75, 78, 83, 131, 134, 160, 161, 164, 189, 191, 245, 272, 274, 275, 282, 333, 335, 339, 399, 461, 462, 463, 470, 471, 472, 473, 474, 475, 480, 481, 482, 484, 486, 487], "check": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 91, 93, 99, 100, 107, 116, 128, 131, 134, 135, 137, 138, 139, 146, 152, 158, 159, 162, 167, 168, 169, 174, 175, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 218, 223, 231, 237, 246, 260, 263, 267, 277, 278, 292, 333, 335, 338, 339, 343, 348, 349, 352, 353, 354, 355, 356, 369, 380, 391, 399, 401, 424, 457, 461, 462, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "paper": [0, 129, 130, 132, 133, 140, 144, 145, 150, 151, 153, 154, 164, 172, 173, 245, 270, 272, 285, 298, 322, 331, 373, 381, 391, 466, 468, 480, 481], "releas": [0, 4, 7, 10, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "sync": [0, 1, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 128, 196, 444, 452, 463, 466], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 111, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 260, 265, 274, 277, 282, 333, 335, 339, 357, 358, 399, 400, 401, 404, 424, 466, 468, 469, 473, 476, 480, 481, 482, 487], "make": [0, 1, 2, 3, 4, 7, 11, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 83, 85, 96, 97, 98, 111, 114, 118, 120, 127, 128, 131, 134, 138, 139, 142, 143, 145, 146, 148, 154, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 223, 230, 238, 241, 245, 246, 250, 254, 258, 262, 266, 270, 277, 280, 283, 298, 299, 300, 302, 303, 304, 310, 311, 313, 333, 335, 339, 348, 356, 366, 368, 383, 386, 388, 399, 400, 401, 404, 405, 406, 407, 422, 439, 448, 456, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "sure": [0, 1, 3, 4, 7, 43, 118, 131, 138, 142, 184, 189, 191, 223, 250, 348, 456, 461, 466, 468, 469, 470, 473, 480, 481, 482, 484, 486, 487], "alwai": [0, 2, 3, 15, 16, 25, 36, 37, 43, 48, 56, 66, 67, 73, 78, 83, 86, 95, 99, 100, 107, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 240, 262, 274, 275, 277, 333, 335, 338, 339, 376, 384, 399, 401, 461, 462, 467, 468, 469, 470, 480, 481, 482, 484], "enjoi": [0, 2, 3, 474], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 153, 156, 157, 160, 161, 439, 468, 480, 481, 482, 486], "featur": [0, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 36, 43, 60, 66, 78, 83, 84, 109, 116, 117, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 194, 214, 217, 232, 235, 237, 243, 260, 261, 269, 274, 280, 284, 285, 295, 296, 298, 299, 300, 302, 303, 304, 305, 310, 313, 314, 333, 335, 339, 356, 363, 366, 368, 383, 386, 388, 399, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 456, 461, 462, 466, 467, 468, 469, 470, 472, 473, 474, 476, 482, 484, 486, 487], "recent": [0, 7, 273, 275, 278, 487], "version": [0, 1, 2, 3, 6, 14, 17, 19, 20, 24, 26, 29, 30, 31, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 62, 64, 66, 67, 72, 73, 78, 87, 88, 89, 90, 97, 116, 128, 131, 134, 137, 138, 139, 140, 146, 153, 154, 158, 159, 160, 162, 164, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 217, 264, 273, 274, 275, 277, 278, 280, 300, 304, 312, 318, 333, 335, 339, 346, 366, 368, 383, 384, 386, 388, 389, 399, 401, 404, 407, 459, 460, 461, 462, 466, 468, 469, 470, 471, 473, 476, 480, 481, 482, 483, 487], "although": [0, 1, 3, 8, 27, 36, 43, 48, 66, 67, 73, 78, 86, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 462, 463, 466, 467, 474, 484], "core": [0, 2, 3, 8, 29, 30, 63, 68, 69, 70, 79, 80, 111, 463, 469, 472, 486], "guarante": [0, 2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 118, 120, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 274, 275, 277, 333, 335, 339, 356, 399, 400, 401, 474], "backward": [0, 8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 298, 299, 302, 303, 320, 333, 335, 339, 356, 366, 367, 369, 370, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 401, 466, 468, 469, 470, 473, 474, 476, 480, 481, 482], "compat": [0, 2, 3, 7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 73, 78, 103, 111, 114, 116, 117, 118, 122, 128, 131, 134, 138, 140, 146, 155, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 258, 270, 274, 275, 277, 278, 298, 299, 300, 302, 303, 304, 333, 335, 339, 353, 366, 367, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 388, 389, 391, 392, 395, 399, 401, 404, 466, 469, 478, 484], "2": [0, 1, 2, 3, 8, 9, 10, 15, 16, 18, 27, 28, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 78, 79, 80, 81, 84, 85, 95, 97, 102, 104, 108, 109, 111, 116, 117, 122, 124, 128, 129, 130, 131, 134, 135, 138, 144, 145, 146, 149, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 209, 213, 214, 216, 218, 221, 222, 223, 225, 226, 227, 228, 237, 238, 241, 243, 245, 247, 250, 253, 257, 258, 259, 260, 265, 266, 267, 270, 272, 274, 275, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 319, 320, 321, 329, 332, 333, 335, 336, 339, 347, 348, 349, 351, 355, 359, 360, 366, 367, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 401, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 433, 460, 461, 462, 465, 466, 467, 468, 469, 470, 472, 473, 479, 480, 481, 482, 484, 485, 486, 487], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 102, 103, 104, 108, 109, 111, 116, 117, 124, 128, 129, 130, 131, 134, 137, 138, 140, 141, 144, 145, 146, 152, 153, 154, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 317, 320, 321, 324, 325, 328, 329, 330, 332, 333, 335, 338, 339, 343, 347, 349, 354, 355, 356, 358, 359, 362, 363, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 433, 440, 452, 456, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 20, 25, 26, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 97, 103, 138, 158, 167, 187, 189, 238, 245, 248, 272, 333, 335, 339, 369, 372, 384, 399, 462, 463, 466, 467, 468, 469, 472, 474, 484, 486, 487], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 114, 116, 117, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 282, 283, 293, 294, 297, 300, 304, 306, 307, 310, 311, 321, 322, 323, 331, 332, 333, 335, 339, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 422, 423, 433, 437, 438, 439, 441, 442, 458, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 487], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 102, 181, 192, 197, 237, 247, 265, 266, 275, 333, 335, 339, 344, 345, 346, 355, 374, 382, 391, 458, 466, 480, 482, 486], "willing": 0, "contribut": [0, 2, 186, 308], "cd": [0, 7], "path": [0, 3, 6, 7, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 100, 102, 111, 119, 125, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 245, 272, 277, 307, 333, 335, 339, 399, 400, 401, 426, 431, 442, 463, 467, 470, 476, 480], "root": [0, 2, 3, 40, 41, 49, 51, 63, 68, 69, 70, 75, 79, 80, 85, 99, 100, 107, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 217, 239, 261, 262, 300, 301, 304, 329, 330, 404, 462, 469, 471, 480, 481, 482, 484, 487], "http": [0, 2, 5, 6, 7, 10, 15, 16, 22, 23, 25, 33, 63, 81, 108, 109, 129, 130, 132, 133, 140, 142, 144, 145, 150, 151, 153, 154, 155, 156, 157, 160, 161, 164, 170, 171, 172, 173, 186, 217, 245, 270, 280, 286, 287, 288, 289, 290, 291, 294, 295, 296, 302, 307, 308, 309, 314, 315, 316, 320, 321, 322, 324, 325, 331, 349, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 404, 409, 417, 457, 477, 478, 483, 486], "github": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 129, 130, 132, 133, 137, 140, 144, 145, 150, 151, 153, 154, 156, 157, 160, 161, 164, 170, 171, 172, 173, 214, 217, 270, 280, 472, 476, 478, 480, 481, 486], "com": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 129, 130, 132, 133, 140, 142, 144, 145, 150, 151, 153, 154, 156, 157, 160, 161, 164, 170, 171, 172, 173, 217, 280, 478, 486], "setup": [0, 1, 7, 129, 130, 142, 144, 145, 170, 460], "py": [0, 3, 33, 137, 139, 207, 217, 292, 322, 331, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "develop": [0, 3, 4, 7, 51, 142, 466, 486], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 118, 122, 123, 124, 125, 126, 128, 131, 134, 136, 138, 140, 141, 143, 146, 158, 159, 162, 163, 164, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 208, 210, 212, 213, 214, 216, 217, 220, 222, 223, 227, 233, 237, 239, 245, 246, 248, 255, 260, 262, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 294, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 311, 312, 314, 320, 332, 333, 334, 335, 337, 339, 347, 348, 349, 351, 352, 353, 356, 358, 359, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 395, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 422, 425, 426, 429, 431, 432, 435, 442, 444, 452, 458, 460, 462, 465, 466, 468, 470, 472, 473, 474, 477, 478, 482, 485, 487], "seri": [0, 2, 3, 7, 8, 60, 101, 112, 122, 123, 126, 127, 167, 240, 266, 424, 461, 462, 466, 467, 468, 475, 476, 480, 481, 484, 487], "quick": [0, 470], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 216, 235, 238, 261, 266, 277, 280, 386, 401, 459, 461, 462, 466, 467, 468, 469, 472, 476, 478, 480, 481, 482, 484, 486, 487], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 109, 111, 112, 114, 115, 116, 117, 122, 124, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 145, 146, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 208, 209, 210, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 232, 235, 237, 238, 239, 240, 241, 245, 246, 249, 250, 253, 254, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 272, 274, 275, 277, 278, 283, 284, 285, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 321, 332, 333, 335, 339, 343, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 418, 419, 420, 421, 422, 428, 431, 432, 438, 439, 442, 444, 446, 452, 456, 459, 462, 466, 467, 468, 469, 470, 471, 473, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487], "hurri": [0, 471], "last": [0, 1, 2, 3, 4, 15, 16, 18, 21, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 115, 116, 117, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 153, 154, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 210, 213, 216, 222, 232, 239, 241, 246, 259, 261, 263, 273, 278, 279, 284, 285, 297, 298, 300, 302, 304, 305, 308, 309, 315, 326, 329, 332, 347, 351, 356, 369, 404, 406, 407, 460, 467, 468, 469, 470, 471, 472, 478, 480, 481, 482, 483, 484, 486, 487], "item": [0, 2, 3, 8, 15, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 103, 109, 111, 115, 122, 179, 210, 231, 266, 275, 308, 309, 370, 371, 373, 433, 462, 463, 466, 468, 469, 473, 474, 478, 480, 481, 482, 484], "navig": [0, 192, 478, 481], "previou": [0, 3, 4, 10, 56, 63, 68, 69, 70, 72, 79, 80, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 232, 260, 277, 298, 302, 325, 347, 468, 469, 470, 471, 472, 476, 482, 487], "whenev": [0, 1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 108, 109, 116, 117, 132, 133, 137, 139, 140, 150, 151, 164, 172, 173, 180, 181, 184, 207, 232, 236, 267, 273, 333, 335, 339, 384, 399, 404, 405, 406, 407, 422, 444, 461, 475, 478, 484], "want": [0, 1, 2, 3, 6, 7, 8, 18, 29, 43, 66, 78, 117, 179, 217, 241, 320, 333, 335, 339, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 461, 466, 467, 468, 469, 470, 471, 473, 474, 475, 480, 481, 482, 483, 484, 486, 487], "ted": [0, 45, 57, 76, 77, 99, 100, 107, 458, 465, 477, 485], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 30, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 96, 97, 98, 111, 116, 117, 122, 128, 129, 130, 131, 134, 138, 142, 144, 145, 146, 150, 151, 153, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 221, 222, 235, 239, 245, 258, 260, 263, 264, 265, 266, 267, 270, 272, 274, 275, 277, 279, 282, 284, 285, 292, 297, 300, 304, 309, 310, 311, 314, 320, 322, 329, 331, 333, 335, 339, 344, 346, 349, 351, 352, 355, 356, 359, 367, 368, 369, 374, 380, 382, 383, 384, 386, 389, 391, 399, 400, 401, 404, 405, 406, 407, 408, 422, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "modul": [0, 1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 122, 128, 129, 130, 131, 134, 138, 146, 149, 152, 155, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 216, 221, 227, 229, 235, 237, 245, 246, 259, 260, 265, 266, 267, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 397, 399, 401, 402, 404, 405, 406, 407, 408, 422, 442, 449, 452, 458, 462, 463, 465, 467, 468, 471, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485], "optim": [0, 1, 2, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 281, 307, 313, 314, 320, 329, 333, 335, 339, 367, 369, 384, 385, 386, 389, 396, 399, 401, 437, 438, 442, 452, 462, 463, 465, 468, 469, 470, 471, 472, 474, 477, 480, 481, 482, 485], "collect": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 51, 56, 63, 68, 69, 70, 79, 80, 111, 115, 128, 131, 134, 138, 146, 158, 159, 162, 164, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 193, 196, 214, 217, 232, 241, 245, 272, 321, 351, 367, 370, 373, 375, 387, 389, 391, 392, 424, 433, 439, 442, 444, 445, 446, 452, 460, 463, 465, 466, 469, 470, 471, 472, 473, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487], "storag": [0, 1, 8, 15, 16, 18, 21, 29, 36, 43, 45, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 82, 85, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 116, 117, 119, 120, 121, 122, 124, 125, 128, 131, 134, 136, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 216, 217, 225, 228, 250, 277, 333, 335, 339, 368, 383, 386, 399, 400, 401, 458, 463, 465, 467, 468, 469, 470, 471, 473, 476, 477, 480, 481, 483, 485], "log": [0, 3, 4, 8, 11, 72, 292, 293, 294, 308, 309, 317, 329, 330, 335, 339, 348, 349, 352, 356, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 431, 435, 436, 437, 442, 452, 461, 462, 463, 465, 466, 467, 468, 471, 472, 476, 477, 480, 481, 482, 485, 486], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 142, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 333, 335, 339, 356, 368, 386, 399, 401, 432, 456, 458, 459, 460, 461, 462, 465, 467, 468, 469, 471, 472, 473, 474, 475, 477, 480, 481, 484, 485, 486], "own": [0, 1, 15, 16, 21, 27, 28, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 424, 458, 462, 465, 467, 468, 471, 477, 480, 481, 482, 485], "train": [0, 1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 31, 33, 36, 39, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 95, 96, 97, 98, 128, 131, 134, 138, 143, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 225, 233, 245, 259, 264, 267, 270, 272, 277, 279, 280, 282, 287, 289, 297, 321, 333, 335, 337, 339, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 442, 444, 452, 458, 460, 461, 463, 465, 467, 471, 474, 475, 477, 483, 484, 485, 486, 487], "loop": [0, 1, 8, 18, 29, 62, 64, 71, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 279, 297, 320, 321, 367, 369, 375, 382, 386, 387, 389, 391, 392, 400, 404, 405, 406, 407, 442, 462, 463, 465, 466, 467, 471, 473, 474, 475, 477, 479, 484, 485, 486], "ppo": [0, 1, 4, 8, 352, 356, 368, 383, 386, 399, 458, 461, 465, 466, 467, 470, 472, 473, 477, 480, 485], "pendulum": [0, 3, 15, 16, 18, 21, 27, 28, 29, 30, 68, 122, 128, 131, 132, 133, 134, 135, 137, 138, 139, 146, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 220, 221, 223, 230, 236, 237, 241, 248, 250, 254, 255, 258, 260, 261, 262, 265, 266, 267, 268, 274, 275, 277, 283, 300, 304, 401, 452, 461, 465, 467, 468, 471, 472, 473, 477, 485, 486, 487], "introduct": [0, 462, 465, 471, 477, 480, 481, 485, 487], "multi": [0, 1, 7, 9, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 99, 100, 107, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 238, 267, 277, 298, 300, 302, 304, 305, 310, 311, 312, 333, 335, 339, 351, 356, 399, 401, 402, 404, 405, 406, 407, 458, 465, 466, 467, 468, 469, 471, 472, 477, 482, 485, 486], "agent": [0, 9, 69, 74, 75, 143, 149, 150, 151, 156, 157, 160, 161, 165, 166, 170, 171, 172, 173, 175, 192, 238, 257, 258, 259, 308, 309, 310, 311, 312, 314, 322, 331, 368, 383, 386, 402, 458, 465, 471, 477, 482, 485], "env": [0, 1, 2, 5, 6, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 36, 40, 43, 45, 48, 51, 56, 66, 67, 68, 72, 73, 76, 78, 85, 97, 111, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 300, 304, 306, 307, 333, 335, 339, 351, 355, 384, 399, 401, 422, 423, 424, 432, 446, 447, 448, 452, 454, 455, 456, 458, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 102, 103, 107, 108, 109, 110, 111, 116, 117, 122, 124, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 319, 320, 321, 322, 323, 329, 330, 331, 332, 333, 335, 336, 337, 339, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 417, 422, 424, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 452, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 487], "pretrain": [0, 465, 477, 485], "recurr": [0, 2, 216, 298, 299, 300, 302, 304, 325, 342, 404, 465, 467, 472, 477, 484, 485], "dqn": [0, 2, 210, 229, 285, 294, 348, 349, 366, 367, 369, 370, 371, 373, 375, 376, 377, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 399, 402, 449, 458, 461, 465, 470, 472, 473, 476, 477, 485], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 56, 68, 76, 128, 129, 130, 131, 134, 138, 146, 152, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 194, 196, 206, 222, 227, 237, 239, 259, 262, 279, 282, 283, 294, 297, 300, 304, 310, 311, 314, 321, 323, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 366, 367, 368, 369, 370, 374, 375, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 437, 444, 447, 448, 452, 454, 455, 458, 460, 461, 463, 465, 467, 471, 473, 474, 477, 483, 484, 485, 486, 487], "replai": [0, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 63, 68, 69, 70, 79, 80, 108, 109, 110, 111, 112, 113, 115, 117, 118, 120, 122, 123, 127, 216, 217, 227, 246, 250, 260, 266, 277, 369, 370, 371, 373, 374, 375, 382, 387, 389, 391, 392, 401, 439, 442, 450, 452, 458, 460, 462, 463, 465, 470, 477, 482, 483, 485], "buffer": [0, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 127, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 216, 217, 221, 227, 235, 245, 246, 250, 260, 265, 266, 267, 270, 272, 277, 279, 321, 333, 335, 339, 347, 355, 358, 368, 369, 370, 371, 373, 374, 375, 382, 383, 386, 387, 389, 391, 392, 399, 400, 401, 404, 405, 406, 407, 408, 439, 442, 450, 452, 458, 460, 462, 463, 465, 470, 475, 477, 482, 483, 485, 487], "export": [0, 6, 7, 465, 477, 485], "llm": [0, 2, 29, 30, 31, 72, 84, 95, 96, 97, 98, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 334, 335, 336, 337, 338, 339, 399, 400, 401, 458, 465, 477, 485], "build": [0, 1, 2, 3, 7, 32, 36, 40, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 111, 128, 129, 130, 131, 134, 138, 139, 140, 144, 145, 146, 150, 151, 153, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 250, 274, 275, 277, 281, 307, 333, 335, 339, 350, 352, 356, 399, 401, 442, 449, 450, 451, 461, 462, 463, 465, 468, 469, 470, 472, 473, 474, 475, 477, 480, 481, 482, 483, 485, 486, 487], "tool": [0, 1, 2, 3, 5, 179, 192, 195, 197, 460, 461, 462, 465, 469, 471, 477, 480, 482, 484, 485, 487], "enabl": [0, 2, 7, 8, 102, 104, 115, 124, 192, 214, 300, 304, 321, 335, 339, 351, 422, 424, 437, 460, 465, 468, 471, 477, 480, 481, 482, 484, 485], "competit": [0, 3, 150, 151, 465, 477, 481, 485], "ddpg": [0, 287, 288, 289, 290, 370, 381, 390, 458, 461, 465, 467, 473, 477, 481, 485], "task": [0, 2, 3, 9, 72, 74, 75, 84, 128, 131, 132, 133, 134, 138, 141, 146, 150, 151, 158, 159, 160, 161, 162, 164, 167, 168, 169, 172, 173, 179, 180, 181, 184, 186, 187, 188, 189, 191, 245, 258, 267, 270, 272, 374, 382, 460, 465, 466, 467, 468, 469, 471, 472, 477, 478, 480, 481, 482, 485, 487], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 156, 157, 158, 159, 162, 167, 168, 169, 172, 179, 180, 181, 184, 187, 188, 189, 193, 205, 239, 260, 275, 291, 300, 304, 347, 366, 368, 384, 386, 388, 399, 424, 442, 458, 460, 462, 463, 465, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 484, 485, 486], "object": [0, 2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 40, 43, 48, 56, 58, 62, 64, 66, 67, 71, 73, 78, 83, 84, 85, 96, 97, 98, 102, 103, 104, 105, 111, 114, 118, 120, 124, 127, 128, 131, 134, 138, 144, 146, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 225, 228, 229, 235, 238, 241, 245, 265, 266, 267, 270, 274, 275, 277, 300, 304, 307, 310, 311, 322, 329, 331, 333, 335, 339, 343, 344, 352, 355, 356, 357, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 446, 447, 448, 451, 452, 456, 458, 461, 463, 465, 467, 468, 469, 470, 474, 476, 477, 480, 481, 482, 484, 485, 487], "loss": [0, 3, 8, 64, 229, 308, 320, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 399, 402, 403, 404, 438, 442, 449, 452, 460, 462, 463, 465, 470, 471, 473, 474, 475, 477, 482, 484, 485], "trainer": [0, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 465, 466, 477, 485], "exampl": [0, 1, 2, 4, 9, 10, 15, 16, 18, 21, 22, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 95, 96, 97, 98, 102, 103, 104, 108, 109, 111, 116, 117, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 317, 319, 320, 321, 322, 323, 331, 332, 333, 335, 336, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 393, 394, 399, 400, 401, 402, 404, 405, 406, 407, 410, 422, 424, 432, 433, 434, 435, 436, 438, 439, 440, 441, 444, 452, 458, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487], "packag": [0, 6, 7, 10, 207, 458, 459, 478, 487], "batch": [0, 2, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 40, 56, 58, 60, 63, 65, 68, 69, 70, 72, 79, 80, 81, 83, 95, 102, 103, 104, 105, 109, 110, 111, 115, 116, 117, 122, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 152, 153, 155, 156, 157, 158, 159, 162, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 214, 217, 221, 223, 232, 239, 241, 243, 246, 250, 257, 260, 262, 266, 267, 269, 273, 274, 275, 277, 280, 292, 298, 299, 300, 302, 303, 304, 308, 309, 310, 311, 312, 313, 317, 321, 322, 328, 332, 335, 339, 342, 351, 355, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 433, 436, 439, 440, 441, 442, 444, 454, 455, 456, 458, 461, 462, 463, 467, 468, 469, 470, 471, 474, 476, 478, 479, 480, 481, 483, 486, 487], "size": [0, 2, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 115, 116, 117, 118, 124, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 210, 214, 216, 217, 218, 221, 224, 225, 228, 229, 230, 232, 235, 238, 239, 243, 245, 247, 248, 250, 254, 256, 257, 258, 260, 262, 263, 266, 267, 268, 269, 272, 274, 277, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 331, 332, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 360, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 424, 433, 439, 458, 461, 462, 467, 468, 469, 470, 471, 472, 474, 478, 480, 481, 482, 487], "copi": [0, 2, 3, 14, 17, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 213, 217, 235, 248, 259, 265, 266, 267, 274, 275, 277, 278, 300, 304, 312, 333, 335, 339, 347, 369, 384, 389, 399, 400, 401, 404, 422, 458, 462, 466, 467, 469, 471, 480, 484, 486], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 63, 66, 67, 72, 73, 78, 109, 111, 114, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 235, 238, 245, 260, 265, 266, 267, 270, 272, 277, 298, 299, 300, 302, 303, 304, 310, 312, 314, 333, 335, 338, 339, 355, 366, 367, 368, 369, 375, 378, 386, 389, 391, 399, 401, 444, 451, 458, 460, 461, 463, 466, 467, 468, 479, 482, 484, 486], "synchron": [0, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 62, 64, 71, 85, 96, 97, 98, 153, 185, 400, 454, 455, 458, 467, 468, 480], "distribut": [0, 2, 3, 4, 9, 10, 14, 17, 20, 22, 23, 24, 25, 26, 27, 28, 31, 63, 68, 69, 70, 79, 80, 111, 131, 160, 161, 194, 196, 237, 241, 275, 279, 281, 292, 293, 294, 295, 301, 307, 308, 309, 317, 318, 319, 320, 324, 325, 328, 329, 330, 337, 347, 348, 349, 352, 356, 357, 366, 367, 368, 369, 374, 375, 376, 382, 383, 386, 387, 388, 389, 391, 392, 399, 458, 462, 463, 467, 468, 470, 472, 474, 480, 481, 482, 486, 487], "interoper": [0, 15, 16, 458], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 109, 116, 117, 128, 129, 130, 131, 132, 133, 134, 137, 138, 144, 145, 146, 152, 153, 154, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 235, 240, 241, 257, 265, 266, 267, 274, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 356, 357, 358, 359, 362, 369, 375, 389, 399, 401, 424, 431, 437, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 480, 481, 482, 486], "asynchron": [0, 3, 9, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 366, 399, 400, 401, 454, 458, 466, 467, 468], "singl": [0, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 40, 41, 43, 46, 48, 49, 51, 54, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 85, 96, 97, 98, 103, 111, 117, 122, 128, 131, 134, 137, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 217, 218, 238, 245, 250, 260, 265, 267, 272, 277, 284, 285, 298, 299, 300, 302, 303, 304, 305, 311, 333, 335, 339, 354, 358, 367, 368, 369, 371, 373, 375, 376, 382, 383, 386, 387, 389, 391, 392, 396, 399, 400, 401, 404, 405, 406, 407, 413, 414, 415, 416, 418, 419, 420, 421, 422, 456, 458, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 486], "node": [0, 2, 20, 22, 23, 25, 27, 28, 40, 41, 49, 51, 62, 64, 71, 75, 85, 96, 97, 98, 146, 185, 188, 265, 337, 400, 458, 474, 486], "helper": [0, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 466, 467, 469, 480, 482], "compos": [0, 3, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 110, 111, 112, 113, 122, 123, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 222, 223, 235, 249, 265, 266, 267, 274, 277, 333, 335, 339, 350, 351, 369, 378, 389, 399, 401, 424, 458, 466, 467, 468, 469, 470, 474, 478, 479, 481, 483, 484, 486, 487], "episod": [0, 3, 51, 109, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 213, 250, 253, 259, 281, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 458, 467, 471, 476, 480, 481, 484], "format": [0, 1, 3, 36, 43, 45, 48, 54, 55, 56, 57, 60, 61, 66, 67, 73, 76, 77, 78, 85, 97, 99, 100, 107, 114, 122, 128, 131, 134, 138, 146, 158, 159, 160, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 217, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401, 424, 458, 460, 466, 467, 470, 471, 473, 475, 478, 486, 487], "tensorspec": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 128, 131, 134, 138, 146, 152, 158, 159, 162, 163, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 210, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236, 237, 238, 239, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 297, 321, 325, 343, 347, 348, 349, 352, 353, 354, 355, 356, 357, 359, 367, 369, 371, 374, 375, 387, 389, 391, 392, 401, 402, 458, 482], "tree": [0, 1, 51, 62, 64, 71, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 217, 400, 458, 480, 484], "forest": [0, 51, 85, 458], "larg": [0, 3, 4, 39, 62, 64, 71, 85, 96, 97, 98, 116, 117, 185, 225, 228, 270, 366, 368, 383, 386, 388, 399, 400, 458, 467, 468, 480, 481, 484], "languag": [0, 33, 72, 187, 458], "human": [0, 33, 180, 458, 482], "feedback": [0, 180, 458, 476, 486], "rlhf": [0, 180, 194, 237, 458, 461], "spec": [0, 1, 2, 15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 205, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 241, 243, 245, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 294, 297, 300, 304, 321, 323, 325, 343, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 401, 402, 458, 461, 462, 466, 467, 468, 469, 470, 471, 472, 476, 478, 479, 480, 481, 486], "lock": [0, 40, 41, 49, 62, 64, 71, 75, 85, 96, 97, 98, 128, 131, 134, 138, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 214, 223, 260, 274, 275, 400, 458, 462, 482], "method": [0, 1, 2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 122, 124, 128, 131, 134, 137, 138, 139, 140, 145, 146, 158, 159, 162, 163, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 236, 237, 239, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 292, 297, 300, 304, 310, 311, 312, 333, 335, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 363, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 380, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 408, 422, 423, 453, 458, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 480, 482, 484, 487], "partial": [0, 2, 15, 16, 18, 21, 29, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 216, 217, 259, 260, 261, 352, 442, 458, 469], "step": [0, 1, 4, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 56, 72, 85, 99, 100, 107, 109, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 232, 233, 236, 237, 239, 241, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 277, 279, 280, 281, 295, 297, 298, 300, 302, 304, 306, 307, 320, 321, 351, 352, 356, 366, 377, 386, 401, 403, 404, 405, 406, 407, 410, 411, 412, 423, 426, 433, 437, 442, 458, 460, 463, 467, 469, 470, 472, 473, 475, 476, 479, 482, 483, 486], "reset": [0, 1, 2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 111, 117, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 212, 213, 214, 217, 229, 232, 236, 240, 245, 253, 258, 259, 260, 261, 262, 265, 266, 267, 270, 273, 274, 277, 278, 283, 298, 300, 304, 312, 321, 333, 335, 339, 341, 351, 384, 399, 401, 423, 458, 460, 462, 466, 467, 468, 469, 471, 474, 478, 479, 480, 481, 486], "vector": [0, 1, 8, 34, 60, 129, 130, 139, 144, 145, 149, 160, 161, 164, 172, 173, 227, 273, 275, 287, 289, 298, 299, 302, 303, 305, 404, 407, 417, 418, 419, 420, 421, 458, 461, 462, 466, 467, 469, 479, 480, 481, 482, 483, 487], "async": [0, 15, 16, 18, 21, 22, 23, 25, 27, 29, 68, 128, 162, 168, 273, 458, 460], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 270, 277, 310, 311, 333, 335, 339, 359, 365, 376, 386, 393, 399, 401, 456, 458, 460, 461, 466, 467, 468, 469, 472, 473, 475, 478, 480, 481], "nativ": [0, 1, 7, 9, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 424, 458, 469, 484], "auto": [0, 31, 104, 124, 134, 139, 212, 213, 267, 273, 321, 367, 369, 375, 385, 387, 389, 391, 392, 458, 462, 480, 481], "dynam": [0, 2, 7, 15, 16, 18, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 202, 277, 374, 382, 458, 468, 471, 482], "mask": [0, 1, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 97, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 211, 246, 277, 282, 283, 294, 297, 308, 309, 323, 335, 339, 347, 348, 349, 353, 354, 375, 389, 439, 458, 467, 469, 470, 487], "action": [0, 2, 8, 9, 15, 16, 18, 21, 27, 29, 30, 45, 51, 60, 68, 72, 76, 78, 85, 108, 109, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 210, 211, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 239, 240, 241, 243, 247, 248, 250, 254, 258, 260, 264, 266, 267, 268, 269, 273, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 300, 304, 305, 306, 307, 308, 309, 310, 319, 321, 322, 323, 325, 328, 329, 331, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 359, 360, 366, 367, 368, 369, 370, 371, 373, 374, 375, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 452, 456, 458, 460, 461, 463, 466, 467, 468, 470, 471, 472, 473, 478, 479, 480, 481, 483, 486, 487], "record": [0, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 203, 210, 237, 277, 333, 335, 339, 386, 399, 401, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 452, 458, 467, 468, 472, 476, 480], "domain": [0, 2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 97, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 192, 202, 227, 235, 260, 268, 343, 348, 349, 352, 353, 354, 355, 356, 357, 358, 363, 458, 468, 473, 478, 480, 481, 482, 486, 487], "interfac": [0, 1, 3, 128, 141, 155, 305, 313, 335, 339, 458, 461, 462, 466, 468, 470, 475, 478, 482, 484], "structur": [0, 1, 3, 7, 51, 58, 62, 63, 64, 70, 71, 72, 79, 80, 83, 84, 85, 96, 97, 98, 103, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 186, 187, 188, 189, 193, 209, 225, 228, 260, 310, 321, 335, 339, 366, 375, 386, 389, 400, 404, 405, 406, 407, 408, 458, 462, 466, 468, 469, 471, 474, 480, 481, 482, 483], "actor": [0, 3, 4, 27, 29, 30, 31, 68, 163, 194, 237, 281, 286, 287, 289, 294, 295, 297, 307, 319, 321, 323, 336, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 399, 402, 458, 462, 467, 469, 471, 473, 476, 480, 483, 486], "explor": [0, 1, 276, 279, 282, 297, 314, 321, 343, 348, 349, 352, 353, 354, 355, 356, 366, 384, 437, 447, 448, 452, 458, 468, 469, 470, 471, 473, 474, 476, 480, 481, 482], "valu": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 108, 109, 111, 116, 117, 122, 128, 131, 134, 138, 139, 146, 149, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 207, 208, 209, 210, 213, 215, 217, 218, 220, 223, 225, 226, 227, 228, 229, 235, 240, 241, 245, 246, 249, 250, 251, 253, 255, 257, 260, 261, 265, 266, 267, 272, 273, 274, 275, 277, 278, 279, 280, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 301, 304, 305, 307, 308, 309, 310, 311, 313, 314, 317, 321, 322, 323, 328, 329, 330, 331, 333, 335, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 432, 433, 435, 436, 437, 438, 439, 442, 452, 458, 463, 467, 470, 473, 474, 475, 479, 480, 481, 482, 484, 486, 487], "gener": [0, 1, 2, 3, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 72, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 111, 113, 115, 128, 131, 134, 135, 138, 146, 150, 151, 152, 155, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 211, 214, 221, 223, 225, 226, 230, 235, 237, 239, 241, 247, 248, 253, 254, 258, 260, 264, 266, 268, 273, 275, 277, 282, 283, 292, 300, 304, 308, 309, 317, 335, 339, 343, 352, 356, 360, 361, 380, 387, 394, 401, 404, 409, 417, 427, 442, 458, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "hook": [0, 2, 14, 17, 19, 20, 24, 26, 31, 36, 43, 45, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 111, 125, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 323, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 399, 401, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 458], "planner": [0, 281, 307, 458], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 108, 109, 111, 112, 115, 116, 117, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 209, 210, 211, 213, 214, 215, 216, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 235, 237, 238, 241, 243, 245, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 266, 267, 268, 270, 272, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 433, 440, 441, 452, 458, 461, 463, 466, 467, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "vmap": [0, 298, 299, 302, 303, 312, 332, 355, 358, 367, 369, 375, 382, 384, 387, 389, 391, 392, 399, 404, 405, 406, 407, 458, 461], "random": [0, 1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 72, 74, 75, 83, 86, 87, 88, 89, 90, 110, 122, 128, 131, 134, 138, 146, 152, 158, 159, 162, 163, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 193, 210, 227, 240, 241, 260, 267, 283, 297, 298, 300, 302, 352, 355, 356, 363, 367, 384, 387, 399, 437, 446, 458, 461, 466, 467, 468, 470, 471, 472, 474, 482, 483, 484, 486, 487], "sac": [0, 375, 387, 389, 458], "redq": [0, 387, 458], "crossq": [0, 369, 458], "iql": [0, 374, 382, 458, 466, 480, 481], "cql": [0, 367, 373, 458], "gail": [0, 380, 458], "dt": [0, 159, 321, 458, 482], "td3": [0, 391, 392, 458], "bc": [0, 5, 391, 458], "a2c": [0, 366, 458], "dreamer": [0, 203, 204, 295, 377, 378, 379, 458, 461], "checkpoint": [0, 70, 100, 102, 106, 118, 119, 121, 125, 458, 484], "builder": [0, 186, 190, 458, 467, 487], "logger": [0, 3, 11, 422, 424, 426, 427, 428, 429, 430, 431, 436, 442, 452, 456, 458, 467, 480], "_util": [0, 3, 158, 278, 458, 470, 476], "implement_for": [0, 3, 458], "set_auto_unwrap_transformed_env": [0, 12, 267, 458], "auto_unwrap_transformed_env": [0, 432, 458], "thing": [0, 1, 3, 7, 8, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 266, 310, 311, 375, 389, 459, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481, 484, 487], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 36, 40, 41, 43, 48, 49, 56, 63, 66, 67, 70, 73, 75, 78, 79, 80, 102, 104, 116, 117, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 227, 274, 277, 292, 308, 310, 311, 328, 333, 335, 339, 367, 369, 382, 387, 389, 391, 392, 399, 401, 404, 406, 407, 459, 462, 466, 471, 472, 473, 482, 484], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 115, 116, 117, 118, 120, 124, 128, 131, 134, 135, 137, 138, 139, 145, 146, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 208, 211, 213, 216, 217, 221, 222, 225, 227, 228, 237, 238, 240, 241, 245, 246, 253, 260, 262, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 280, 281, 292, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 320, 323, 329, 333, 335, 339, 351, 352, 355, 356, 358, 362, 367, 368, 369, 371, 375, 376, 382, 383, 384, 386, 387, 389, 391, 392, 393, 399, 401, 402, 403, 404, 405, 406, 407, 422, 423, 424, 426, 429, 431, 439, 456, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 472, 474, 475, 480, 481, 482, 483, 484, 486, 487], "debug": [0, 6, 8, 51, 72, 85, 196, 262, 459, 487], "work": [0, 1, 2, 3, 4, 8, 24, 26, 36, 43, 48, 56, 66, 67, 70, 73, 78, 102, 109, 114, 116, 117, 120, 127, 128, 131, 134, 137, 138, 139, 142, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 208, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 275, 277, 278, 284, 285, 305, 333, 335, 339, 349, 354, 359, 368, 383, 386, 399, 401, 442, 459, 460, 461, 466, 467, 468, 469, 471, 474, 479, 480, 481, 482, 483, 484, 486, 487], "habitat": [0, 3, 140, 459, 483], "lab": [0, 3, 132, 133, 140, 143, 459], "mujoco": [0, 6, 8, 164, 459, 466, 468, 469], "error": [0, 1, 3, 7, 10, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 71, 73, 74, 78, 85, 96, 97, 98, 102, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 170, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 246, 265, 277, 278, 333, 335, 339, 384, 399, 400, 401, 459, 462, 466, 468, 480, 481, 487], "solut": [0, 2, 3, 6, 7, 9, 27, 116, 459, 461, 463, 470, 486], "resourc": [0, 1, 13, 22, 23, 25, 27, 140, 192, 459, 460, 466, 468, 470, 480, 481], "issu": [0, 2, 3, 4, 5, 8, 68, 100, 102, 104, 116, 124, 128, 131, 134, 137, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 217, 246, 261, 343, 348, 349, 352, 353, 354, 355, 356, 368, 386, 459, 486], "customis": [0, 459, 467, 475], "video": [0, 4, 9, 96, 424, 426, 429, 431, 437, 456, 458, 459, 476, 480, 481], "render": [0, 3, 8, 145, 172, 422, 424, 437, 459, 466, 467, 468, 470, 471, 475], "index": [0, 3, 7, 8, 10, 18, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 101, 102, 103, 104, 108, 109, 111, 112, 114, 116, 120, 122, 123, 124, 126, 127, 128, 131, 134, 138, 146, 150, 151, 156, 157, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 185, 187, 188, 189, 208, 212, 217, 221, 227, 267, 308, 309, 351, 400, 458, 471, 478, 479, 480, 481, 484, 486], "search": [0, 2, 40, 41, 49, 75, 85, 155, 209, 467], "page": [0, 7, 33, 192, 431, 473, 478], "import": [1, 2, 3, 4, 6, 10, 11, 15, 16, 18, 21, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 108, 109, 111, 116, 117, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 207, 208, 209, 210, 211, 213, 214, 216, 217, 220, 222, 223, 229, 230, 235, 236, 237, 238, 241, 243, 245, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266, 268, 272, 274, 275, 277, 278, 281, 283, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 312, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 422, 424, 435, 437, 452, 460, 461, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "syncdatacollector": [1, 2, 3, 15, 16, 19, 21, 22, 23, 25, 27, 29, 30, 45, 56, 76, 214, 217, 250, 282, 300, 304, 452, 455, 458, 466, 467, 468, 469, 470, 474, 476, 480, 481, 484], "currentmodul": 1, "somewhat": [1, 2, 193, 462, 472, 487], "equival": [1, 3, 27, 30, 31, 34, 35, 36, 39, 40, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 128, 129, 130, 131, 134, 137, 138, 139, 140, 143, 144, 145, 146, 153, 154, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 226, 229, 260, 262, 267, 277, 294, 302, 305, 323, 333, 335, 339, 348, 349, 353, 354, 386, 399, 400, 401, 439, 474, 486, 487], "dataload": [1, 29, 95, 115, 117, 187, 193, 467, 474, 484], "except": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 231, 250, 259, 260, 261, 265, 267, 277, 279, 297, 298, 300, 302, 304, 317, 321, 333, 335, 339, 366, 369, 384, 386, 389, 399, 400, 401, 424, 461, 466, 467, 471, 480, 484, 486, 487], "1": [1, 2, 3, 4, 8, 10, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 111, 116, 117, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239, 241, 243, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 272, 274, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 338, 339, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 418, 419, 421, 422, 424, 433, 437, 439, 440, 452, 456, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487], "thei": [1, 2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 109, 111, 128, 131, 134, 137, 138, 139, 146, 149, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 216, 231, 237, 245, 254, 262, 266, 267, 272, 277, 304, 333, 335, 339, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 439, 442, 461, 462, 463, 466, 467, 468, 469, 470, 473, 479, 480, 481, 482, 483, 484, 486, 487], "over": [1, 2, 3, 4, 8, 15, 16, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 94, 97, 109, 111, 115, 116, 117, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 227, 241, 253, 261, 275, 277, 308, 317, 320, 329, 332, 333, 335, 339, 358, 376, 378, 384, 399, 401, 404, 410, 422, 445, 461, 463, 466, 467, 468, 470, 471, 472, 473, 474, 480, 481, 482, 487], "non": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 36, 37, 38, 40, 41, 43, 48, 49, 50, 56, 58, 59, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 103, 105, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 214, 215, 217, 221, 232, 245, 257, 260, 266, 267, 268, 269, 270, 272, 275, 277, 283, 298, 300, 302, 304, 310, 333, 335, 339, 355, 356, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 461, 466, 469, 470, 480, 481, 482, 484, 487], "static": [1, 43, 66, 72, 78, 84, 109, 116, 117, 140, 159, 183, 189, 274, 278, 333, 335, 339, 382, 399, 471, 482, 484], "like": [1, 2, 3, 4, 7, 11, 24, 27, 36, 40, 41, 43, 48, 49, 51, 56, 58, 63, 66, 67, 70, 73, 75, 78, 79, 80, 84, 105, 111, 117, 128, 131, 134, 135, 138, 140, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 229, 260, 263, 277, 298, 302, 311, 333, 335, 339, 350, 356, 366, 368, 383, 386, 387, 388, 399, 401, 461, 462, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487], "being": [1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 36, 43, 48, 56, 66, 67, 73, 74, 78, 95, 103, 122, 125, 128, 131, 134, 137, 138, 139, 140, 145, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 216, 225, 227, 228, 235, 240, 248, 260, 265, 266, 267, 277, 297, 300, 304, 321, 333, 335, 339, 368, 369, 383, 384, 386, 389, 399, 401, 424, 439, 444, 454, 455, 456, 461, 462, 466, 467, 468, 469, 474, 480, 481, 482, 484], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 70, 71, 73, 78, 85, 86, 95, 96, 97, 98, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 212, 217, 221, 232, 235, 245, 253, 257, 260, 265, 266, 267, 268, 269, 270, 272, 277, 305, 332, 333, 335, 339, 355, 356, 357, 369, 389, 399, 400, 401, 424, 463, 468, 471, 475, 484, 486, 487], "two": [1, 2, 3, 4, 8, 10, 36, 43, 48, 51, 52, 53, 54, 55, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 85, 111, 115, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 222, 241, 245, 265, 272, 277, 290, 298, 300, 302, 304, 310, 311, 326, 329, 333, 335, 339, 356, 383, 391, 395, 399, 401, 437, 442, 462, 466, 467, 468, 469, 470, 471, 472, 474, 475, 479, 480, 481, 482, 484, 486, 487], "main": [1, 2, 3, 5, 15, 16, 20, 25, 28, 32, 68, 135, 186, 217, 222, 356, 442, 460, 461, 462, 466, 467, 478, 479, 486, 487], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 102, 103, 104, 108, 109, 111, 114, 115, 116, 117, 120, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 239, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 297, 298, 300, 302, 304, 305, 308, 309, 310, 311, 313, 321, 332, 333, 335, 336, 339, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 394, 399, 400, 401, 402, 404, 405, 406, 407, 408, 412, 422, 423, 424, 429, 431, 435, 442, 445, 452, 453, 456, 466, 467, 468, 469, 470, 471, 472, 474, 480, 481, 482, 484, 486, 487], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 103, 105, 111, 114, 115, 116, 117, 118, 120, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 215, 216, 220, 225, 226, 228, 237, 238, 241, 243, 245, 253, 255, 263, 264, 265, 266, 267, 269, 270, 272, 274, 277, 283, 284, 285, 287, 293, 296, 300, 304, 305, 308, 309, 315, 323, 333, 334, 335, 336, 339, 349, 351, 353, 354, 356, 358, 359, 360, 367, 369, 382, 384, 387, 389, 391, 392, 398, 399, 401, 404, 407, 422, 423, 437, 439, 454, 455, 462, 466, 468, 471, 472, 473, 474, 478, 479, 480, 482, 483, 484, 486, 487], "constructor": [1, 2, 3, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 68, 70, 79, 80, 84, 108, 122, 128, 131, 134, 138, 146, 153, 158, 159, 162, 167, 168, 169, 172, 179, 180, 181, 184, 186, 187, 188, 189, 213, 217, 265, 284, 285, 305, 342, 352, 356, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 404, 405, 406, 407, 408, 453, 456, 460, 461, 466, 467, 468, 471, 474, 480, 481, 484, 486], "iter": [1, 2, 3, 16, 18, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 94, 95, 105, 111, 115, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 230, 241, 254, 277, 278, 280, 282, 283, 284, 285, 305, 310, 311, 327, 333, 335, 339, 343, 348, 352, 353, 355, 357, 358, 360, 384, 398, 399, 401, 437, 441, 442, 462, 463, 466, 468, 469, 474, 476, 480, 481, 482], "execut": [1, 2, 3, 6, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 102, 103, 111, 116, 117, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 144, 145, 146, 152, 153, 158, 159, 162, 164, 167, 168, 169, 170, 179, 180, 181, 184, 187, 188, 189, 195, 197, 211, 222, 223, 239, 262, 267, 297, 298, 300, 302, 304, 312, 336, 342, 351, 357, 358, 384, 391, 399, 401, 446, 456, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481, 484, 485, 486, 487], "queri": [1, 2, 3, 15, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 103, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 245, 270, 274, 277, 333, 335, 339, 358, 399, 400, 401, 462, 466, 473, 478, 482, 486], "defin": [1, 2, 3, 15, 16, 18, 20, 21, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 246, 259, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 312, 315, 316, 319, 320, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 363, 371, 373, 384, 399, 401, 404, 405, 406, 407, 408, 423, 453, 461, 466, 467, 469, 473, 476, 482, 484, 487], "number": [1, 2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 111, 114, 116, 117, 124, 128, 129, 130, 131, 134, 137, 138, 139, 144, 145, 146, 152, 153, 154, 155, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 229, 230, 231, 233, 236, 237, 240, 241, 244, 246, 247, 248, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 277, 279, 280, 281, 284, 285, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 315, 316, 321, 322, 324, 325, 328, 329, 330, 331, 333, 335, 336, 337, 339, 343, 347, 351, 352, 355, 356, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 429, 431, 433, 435, 437, 442, 444, 445, 446, 454, 455, 456, 460, 461, 462, 466, 467, 468, 469, 471, 472, 474, 476, 480, 481, 482, 483, 484, 487], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 56, 66, 67, 73, 78, 84, 85, 115, 117, 122, 128, 131, 134, 138, 139, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 282, 298, 300, 304, 305, 313, 314, 333, 335, 339, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 405, 406, 407, 439, 460, 466, 468, 469, 470, 474, 475, 480, 481, 482, 484, 487], "deliv": [1, 2, 3, 18, 193, 466, 467, 471, 474, 486], "stack": [1, 2, 3, 7, 8, 15, 16, 18, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 103, 108, 111, 128, 131, 134, 137, 138, 139, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 193, 200, 201, 217, 222, 239, 274, 298, 300, 302, 303, 304, 351, 357, 358, 367, 369, 382, 387, 389, 391, 392, 400, 404, 423, 433, 458, 460, 467, 470, 471, 478, 479, 480, 482, 486], "user": [1, 2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 97, 109, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 170, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 218, 235, 259, 265, 267, 277, 291, 333, 335, 339, 369, 386, 389, 391, 399, 401, 424, 453, 460, 462, 463, 466, 467, 471, 473, 474, 482, 486, 487], "reach": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 72, 115, 128, 131, 134, 138, 145, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 239, 258, 279, 297, 321, 466, 468, 476, 478, 480, 481, 486, 487], "done": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 74, 75, 76, 78, 83, 85, 86, 87, 88, 89, 90, 99, 100, 107, 109, 111, 116, 117, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 211, 213, 214, 217, 225, 226, 228, 229, 230, 235, 239, 240, 241, 243, 247, 248, 250, 252, 254, 257, 258, 260, 261, 264, 265, 266, 267, 268, 274, 277, 281, 298, 300, 304, 307, 329, 351, 366, 367, 368, 369, 370, 371, 373, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 460, 461, 462, 466, 468, 469, 470, 471, 473, 474, 476, 479, 480, 481, 482, 484, 486, 487], "state": [1, 2, 3, 4, 15, 16, 18, 19, 20, 21, 29, 30, 36, 43, 45, 48, 51, 56, 63, 66, 67, 68, 69, 70, 72, 73, 76, 78, 79, 80, 85, 99, 100, 107, 111, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 152, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 213, 216, 217, 218, 220, 221, 223, 226, 229, 232, 235, 239, 241, 248, 258, 259, 264, 265, 266, 267, 268, 269, 274, 275, 277, 281, 286, 291, 295, 298, 299, 300, 302, 303, 304, 305, 307, 312, 315, 319, 322, 324, 325, 331, 333, 335, 339, 344, 351, 355, 361, 366, 368, 369, 373, 375, 383, 384, 386, 387, 388, 389, 399, 401, 402, 403, 404, 405, 406, 407, 408, 442, 456, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 480, 481, 482, 487], "after": [1, 2, 3, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 45, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 96, 97, 98, 104, 111, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 153, 154, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 280, 297, 298, 300, 304, 313, 333, 335, 339, 348, 353, 369, 378, 389, 391, 399, 400, 401, 404, 460, 467, 468, 469, 470, 471, 472, 474, 476, 478, 480, 481, 482, 483, 484, 487], "predefin": [1, 424, 467, 469, 474, 484, 486], "becaus": [1, 2, 3, 4, 7, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 96, 97, 98, 103, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 229, 237, 258, 273, 277, 290, 311, 333, 335, 339, 343, 348, 349, 351, 352, 353, 354, 355, 356, 366, 386, 399, 400, 401, 404, 461, 466, 467, 469, 470, 472, 473, 474, 478, 479, 480, 481, 482, 484, 487], "potenti": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 482, 484], "comput": [1, 3, 4, 8, 15, 17, 18, 27, 29, 36, 39, 43, 48, 56, 66, 67, 72, 73, 78, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 241, 255, 267, 271, 275, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 316, 317, 319, 321, 324, 325, 327, 329, 330, 332, 333, 335, 339, 344, 347, 349, 351, 352, 354, 356, 359, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 446, 460, 462, 466, 468, 469, 470, 471, 472, 478, 479, 480, 481, 483, 484], "heavi": [1, 8, 484], "crucial": [1, 2, 3, 279, 297, 321, 374, 382, 384, 460, 466, 467, 468, 469, 471, 473, 475, 480, 481, 482, 486, 487], "configur": [1, 8, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 29, 72, 131, 180, 194, 237, 286, 291, 319, 335, 339, 368, 384, 386, 399, 461, 466, 467, 468, 473, 480, 481, 482], "hyperparamet": [1, 114, 277, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 466, 475, 482, 484], "appropri": [1, 3, 4, 7, 101, 112, 122, 123, 126, 127, 146, 158, 167, 188, 189, 229, 453, 456, 460, 466, 475, 484], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 118, 120, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 461, 462, 466, 469, 470, 472, 476, 480, 481, 482, 483, 486], "take": [1, 2, 3, 8, 20, 32, 36, 43, 48, 51, 66, 67, 72, 73, 78, 119, 125, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 220, 222, 258, 261, 262, 266, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 338, 339, 347, 349, 350, 351, 352, 354, 356, 359, 362, 365, 386, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 433, 444, 460, 461, 463, 466, 467, 468, 470, 471, 472, 473, 480, 481, 482, 484, 487], "consider": [1, 2, 3, 8, 137, 139, 266, 467, 480, 481, 484], "whether": [1, 2, 3, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 97, 102, 104, 111, 112, 124, 128, 131, 134, 138, 145, 146, 150, 151, 152, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 213, 222, 223, 225, 228, 259, 265, 267, 274, 275, 277, 284, 285, 300, 304, 305, 333, 335, 336, 339, 351, 356, 360, 366, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 432, 456, 466, 467, 468, 470, 471, 480, 481, 482, 486, 487], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 105, 109, 111, 116, 117, 118, 122, 125, 128, 131, 132, 133, 134, 137, 138, 139, 140, 145, 146, 149, 152, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 213, 214, 217, 220, 221, 222, 225, 226, 229, 230, 232, 237, 238, 239, 241, 246, 247, 248, 250, 253, 254, 258, 259, 261, 264, 266, 267, 268, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 311, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 352, 354, 355, 356, 359, 362, 366, 368, 369, 375, 381, 383, 384, 386, 387, 388, 389, 390, 391, 399, 400, 401, 403, 404, 405, 406, 407, 408, 424, 426, 432, 437, 438, 439, 442, 452, 454, 455, 456, 461, 462, 463, 466, 467, 468, 469, 470, 472, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487], "occur": [1, 8, 16, 43, 66, 74, 75, 78, 85, 128, 131, 134, 138, 140, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 218, 230, 241, 246, 273, 280, 333, 335, 339, 343, 348, 349, 352, 353, 354, 355, 356, 378, 399, 470, 484, 487], "serial": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 274, 275, 277, 333, 335, 339, 399, 401], "parallel": [1, 3, 8, 31, 128, 131, 134, 137, 138, 139, 146, 158, 159, 160, 161, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 267, 273, 300, 304, 336, 366, 453, 454, 455, 456, 467, 468, 480, 481, 486], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 64, 71, 83, 84, 85, 95, 96, 97, 98, 135, 153, 158, 167, 185, 265, 274, 275, 336, 337, 338, 400, 454, 455, 456, 466, 467, 468, 486, 487], "multisyncdatacollector": [1, 16, 22, 23, 25, 27, 30, 282, 455, 458, 468, 474, 486], "split": [1, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 47, 49, 62, 64, 75, 84, 95, 109, 116, 117, 149, 160, 161, 180, 298, 302, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 461, 463, 468, 472, 484, 486], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 67, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 109, 116, 117, 129, 130, 132, 133, 137, 139, 140, 142, 144, 145, 153, 154, 158, 164, 169, 265, 274, 275, 277, 300, 304, 310, 320, 321, 384, 399, 401, 444, 458, 460, 461, 462, 466, 471, 475, 480, 481, 482], "aggreg": [1, 3, 36, 66, 109, 122, 160, 161, 186, 209, 238, 275, 284, 285, 287, 288, 358, 462, 481], "result": [1, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 36, 37, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 85, 86, 96, 97, 98, 109, 111, 115, 116, 117, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 282, 297, 298, 300, 302, 304, 305, 310, 323, 329, 333, 335, 339, 347, 349, 354, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 444, 462, 467, 469, 471, 472, 475, 476, 482, 483, 486, 487], "final": [1, 2, 3, 4, 27, 51, 62, 64, 71, 72, 85, 96, 97, 98, 181, 184, 185, 260, 273, 279, 297, 298, 300, 302, 304, 310, 321, 350, 357, 400, 404, 437, 461, 466, 467, 468, 470, 475, 476, 478, 480, 481, 482, 487], "multiasyncdatacollector": [1, 15, 21, 22, 23, 25, 27, 30, 282, 454, 458, 466, 467, 468, 474, 486], "sever": [1, 2, 3, 8, 36, 43, 48, 52, 56, 66, 67, 73, 78, 84, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 218, 220, 238, 267, 277, 333, 335, 339, 386, 399, 401, 466, 468, 470, 475, 476, 484, 487], "gather": [1, 3, 22, 25, 27, 51, 84, 95, 102, 104, 109, 116, 124, 239, 246, 309, 312, 317, 384, 399, 403, 446, 459, 460, 467, 468, 469, 474, 480, 481, 482, 484, 486, 487], "continu": [1, 2, 3, 9, 37, 40, 51, 86, 87, 88, 97, 117, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 202, 210, 235, 260, 268, 287, 288, 289, 290, 320, 321, 358, 363, 367, 390, 404, 409, 417, 461, 466, 468, 472, 480, 481, 484], "concomitantli": [1, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189], "network": [1, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 284, 285, 287, 288, 289, 290, 293, 295, 296, 302, 305, 310, 311, 312, 314, 315, 316, 318, 320, 322, 324, 325, 326, 331, 333, 335, 339, 344, 345, 346, 347, 355, 359, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 397, 399, 401, 402, 404, 405, 406, 407, 408, 451, 452, 461, 462, 463, 470, 473, 476, 479, 482, 487], "impli": [1, 85, 487], "mai": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 96, 97, 98, 100, 103, 109, 116, 128, 131, 134, 137, 138, 139, 140, 146, 158, 159, 162, 164, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 241, 254, 265, 267, 269, 274, 275, 277, 280, 300, 304, 305, 310, 333, 335, 339, 356, 368, 375, 383, 386, 389, 399, 400, 401, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 481, 482, 483, 484, 487], "slightli": [1, 32, 462, 469, 470, 480, 482, 483, 484, 487], "lag": [1, 466, 467, 468], "therefor": [1, 2, 3, 7, 63, 70, 79, 80, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 250, 386, 401, 402, 460, 470, 473, 480, 487], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 217], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 34, 36, 43, 45, 47, 48, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 100, 102, 104, 109, 111, 116, 117, 122, 124, 125, 128, 131, 134, 138, 146, 149, 152, 155, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 208, 209, 210, 211, 214, 217, 222, 229, 237, 245, 250, 253, 258, 259, 260, 261, 262, 266, 267, 269, 272, 273, 277, 279, 297, 298, 299, 300, 302, 303, 304, 308, 309, 310, 318, 320, 321, 333, 335, 339, 347, 352, 355, 356, 365, 366, 367, 368, 369, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 462, 463, 466, 467, 468, 470, 471, 478, 479, 480, 481, 482, 484, 487], "off": [1, 2, 4, 301, 330, 348, 389, 422, 437, 447, 461, 463, 466, 467, 468, 472, 473, 480, 481, 483, 486, 487], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 35, 36, 37, 38, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 102, 104, 109, 111, 116, 124, 128, 131, 134, 137, 138, 139, 143, 145, 146, 158, 159, 160, 161, 162, 167, 168, 169, 170, 172, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 225, 228, 232, 241, 259, 266, 267, 273, 277, 294, 298, 300, 302, 304, 308, 311, 313, 333, 335, 339, 344, 346, 347, 349, 353, 366, 374, 376, 382, 386, 399, 401, 437, 461, 462, 463, 466, 467, 468, 469, 471, 472, 474, 475, 478, 480, 481, 482, 483, 484, 487], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 111, 158, 167, 275, 487], "rollout": [1, 2, 3, 11, 15, 16, 18, 21, 27, 29, 30, 32, 51, 72, 78, 85, 122, 128, 129, 130, 131, 134, 138, 140, 141, 144, 145, 146, 150, 151, 152, 153, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 180, 181, 184, 187, 188, 189, 193, 210, 211, 213, 214, 217, 220, 222, 223, 225, 228, 229, 230, 235, 237, 238, 243, 247, 248, 253, 254, 255, 258, 259, 261, 262, 265, 268, 274, 275, 277, 281, 282, 283, 300, 304, 307, 321, 351, 366, 422, 424, 446, 461, 466, 468, 469, 472, 473, 474, 475, 476, 483, 484, 486], "necessari": [1, 4, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 254, 387, 404, 405, 406, 407, 408, 460, 462, 466, 468, 472, 473, 474, 478], "synchronis": [1, 135, 480, 481], "either": [1, 2, 5, 28, 34, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 95, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 239, 258, 259, 275, 277, 333, 335, 336, 339, 361, 384, 391, 392, 399, 401, 428, 460, 463, 466, 467, 469, 480, 483, 484, 486, 487], "update_policy_weights_": [1, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 30, 196, 460, 466, 481, 486], "update_at_each_batch": [1, 15, 16, 21], "true": [1, 2, 3, 4, 8, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 209, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 227, 230, 232, 235, 236, 237, 238, 239, 240, 241, 245, 246, 248, 249, 252, 253, 254, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 296, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 328, 329, 330, 333, 335, 336, 339, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 404, 405, 406, 407, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 431, 432, 435, 436, 437, 439, 442, 456, 460, 461, 462, 463, 466, 467, 468, 469, 470, 472, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "second": [1, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 52, 53, 54, 55, 122, 158, 192, 195, 214, 262, 298, 300, 302, 304, 349, 368, 383, 386, 389, 424, 426, 429, 431, 441, 466, 468, 474, 480, 481, 482, 484, 486, 487], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 108, 116, 117, 124, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 205, 208, 210, 214, 221, 225, 226, 228, 229, 230, 235, 237, 238, 243, 244, 245, 247, 248, 250, 254, 257, 258, 260, 263, 266, 267, 268, 270, 272, 274, 277, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 313, 314, 319, 321, 322, 323, 331, 333, 334, 335, 336, 337, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 360, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 422, 439, 444, 450, 461, 466, 467, 468, 469, 470, 480, 481, 482, 483, 486], "oper": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 103, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 232, 237, 262, 264, 268, 275, 277, 293, 294, 299, 303, 333, 335, 339, 344, 345, 346, 348, 349, 350, 355, 361, 366, 368, 370, 371, 376, 383, 386, 388, 399, 400, 401, 402, 403, 404, 405, 406, 407, 442, 458, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 479, 480, 481, 482, 487], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 83, 84, 85, 86, 96, 97, 98, 99, 100, 102, 103, 104, 107, 109, 111, 116, 117, 124, 128, 131, 133, 134, 135, 137, 138, 139, 143, 146, 152, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 209, 241, 260, 267, 274, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 310, 311, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 336, 337, 339, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 367, 369, 371, 374, 375, 382, 384, 387, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 422, 424, 428, 432, 437, 446, 447, 448, 452, 454, 455, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 478, 482, 484, 487], "cpu": [1, 2, 3, 8, 10, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 108, 111, 116, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 210, 214, 221, 225, 226, 228, 229, 230, 235, 238, 243, 245, 247, 248, 250, 254, 257, 258, 260, 266, 267, 268, 270, 272, 277, 281, 283, 293, 298, 299, 300, 302, 303, 304, 307, 313, 314, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 360, 363, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 422, 461, 466, 467, 468, 469, 480, 481, 482, 483, 486], "slower": [1, 480], "than": [1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 66, 85, 109, 116, 117, 120, 122, 128, 131, 134, 138, 142, 146, 156, 157, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 222, 238, 239, 248, 275, 279, 290, 300, 302, 304, 305, 332, 343, 348, 355, 356, 360, 384, 399, 401, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 459, 461, 462, 466, 467, 468, 470, 471, 473, 480, 481, 482, 484, 486, 487], "one": [1, 2, 3, 4, 5, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 111, 112, 116, 117, 118, 120, 122, 123, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 217, 220, 222, 223, 225, 226, 227, 228, 235, 238, 240, 241, 245, 250, 253, 256, 257, 259, 260, 261, 266, 267, 269, 272, 274, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 311, 312, 315, 316, 317, 318, 319, 321, 323, 324, 325, 327, 332, 333, 335, 339, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 362, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 396, 399, 400, 401, 402, 404, 405, 406, 407, 411, 412, 424, 426, 435, 437, 438, 442, 446, 456, 459, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 487], "cuda": [1, 2, 3, 7, 15, 16, 18, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 129, 130, 131, 134, 138, 140, 141, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 237, 244, 245, 260, 266, 267, 270, 272, 277, 298, 299, 302, 303, 333, 335, 339, 355, 399, 401, 434, 466, 467, 468, 469, 480, 481, 483, 487], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 54, 66, 70, 79, 80, 81, 85, 104, 111, 112, 124, 128, 129, 130, 144, 145, 158, 167, 169, 187, 193, 218, 220, 227, 236, 239, 240, 250, 253, 257, 258, 265, 274, 298, 302, 304, 310, 313, 314, 343, 348, 352, 353, 355, 356, 359, 368, 375, 383, 386, 396, 410, 456, 461, 462, 463, 466, 467, 468, 471, 473, 474, 480, 481, 482, 484, 486], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 217, 274, 313, 336, 347, 352, 356, 373, 399, 422, 460, 466, 468, 470, 474, 476, 484, 486], "dispatch": [1, 3, 22, 23, 25, 27, 43, 66, 78, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 332, 333, 335, 339, 351, 399, 401, 424, 466, 487], "avail": [1, 2, 3, 4, 6, 27, 63, 68, 69, 70, 79, 80, 97, 109, 111, 115, 116, 117, 129, 130, 132, 133, 142, 144, 145, 150, 151, 156, 157, 158, 160, 161, 164, 170, 171, 172, 173, 191, 194, 210, 213, 216, 235, 237, 294, 323, 352, 356, 384, 399, 424, 454, 455, 458, 466, 467, 468, 469, 470, 471, 472, 480, 481, 482, 484, 487], "speed": [1, 2, 3, 4, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 462, 466, 467, 468, 469, 480, 481, 482, 484, 486], "avoid": [1, 2, 3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 104, 116, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 217, 235, 265, 267, 274, 275, 277, 280, 329, 333, 335, 339, 343, 355, 360, 368, 369, 383, 386, 389, 399, 401, 445, 468, 470, 481], "oom": [1, 3, 62, 64, 71, 85, 96, 97, 98, 102, 104, 124, 185, 400], "choic": [1, 2, 58, 158, 193, 461, 462, 466, 467, 473, 480, 481], "pass": [1, 2, 3, 4, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 36, 40, 41, 43, 48, 49, 56, 58, 63, 66, 67, 68, 70, 72, 73, 75, 78, 79, 80, 83, 84, 97, 100, 102, 104, 109, 111, 116, 117, 122, 124, 128, 131, 134, 135, 136, 138, 139, 146, 149, 153, 158, 159, 160, 161, 162, 167, 168, 169, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 217, 223, 225, 228, 238, 239, 247, 248, 265, 269, 274, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 311, 312, 313, 315, 316, 319, 321, 322, 324, 325, 327, 331, 332, 333, 335, 336, 339, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 367, 368, 369, 382, 383, 384, 386, 387, 389, 391, 392, 399, 401, 404, 405, 406, 407, 408, 422, 439, 442, 454, 455, 456, 460, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 484, 486, 487], "ie": [1, 2, 3, 22, 25, 28, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 74, 75, 78, 79, 83, 84, 86, 87, 88, 89, 90, 108, 117, 128, 131, 134, 138, 142, 146, 155, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 210, 217, 232, 257, 260, 269, 274, 300, 304, 333, 335, 339, 347, 355, 399, 461, 462, 467, 481], "store": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 46, 47, 48, 51, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 100, 102, 103, 104, 105, 108, 109, 111, 116, 122, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 235, 262, 273, 274, 275, 277, 279, 281, 282, 307, 321, 333, 335, 339, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 431, 458, 460, 463, 466, 468, 469, 472, 474, 476, 480, 481, 483, 487], "while": [1, 2, 3, 7, 8, 15, 16, 18, 21, 29, 32, 36, 43, 48, 56, 66, 67, 68, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 250, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 368, 374, 382, 383, 386, 399, 401, 461, 462, 466, 468, 469, 472, 474, 475, 480, 481, 482, 483, 484, 486], "wait": [1, 13, 15, 16, 21, 22, 23, 24, 25, 27, 28, 68, 170, 469, 482], "also": [1, 2, 3, 8, 9, 11, 15, 16, 20, 32, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 70, 71, 73, 78, 79, 80, 83, 85, 95, 96, 97, 98, 102, 103, 104, 109, 111, 116, 117, 122, 124, 128, 131, 134, 138, 145, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 208, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 229, 230, 231, 233, 235, 236, 237, 241, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 277, 278, 284, 285, 298, 302, 305, 325, 333, 335, 339, 351, 352, 357, 358, 359, 366, 367, 369, 370, 371, 373, 374, 375, 380, 382, 386, 389, 391, 399, 400, 401, 404, 411, 412, 422, 424, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 484, 486, 487], "impact": [1, 2, 3, 13, 22, 23, 25, 145, 225, 228, 280, 366, 368, 383, 386, 388, 399, 467, 469, 480, 481], "memori": [1, 3, 8, 27, 36, 39, 43, 48, 56, 62, 64, 66, 67, 68, 71, 73, 78, 84, 85, 96, 97, 98, 100, 102, 103, 107, 128, 131, 134, 135, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 221, 245, 260, 266, 267, 270, 272, 274, 275, 277, 292, 302, 303, 333, 335, 339, 355, 399, 400, 401, 456, 458, 463, 466, 467, 469, 480, 484, 486], "manag": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 282, 300, 304, 342, 397, 398, 404, 405, 406, 407, 432, 437, 460, 461, 469, 470, 473, 478, 486], "kei": [1, 2, 7, 15, 16, 18, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 108, 109, 111, 114, 116, 117, 122, 128, 131, 134, 138, 144, 145, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 279, 281, 283, 293, 294, 297, 300, 304, 306, 307, 321, 323, 333, 335, 339, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 422, 424, 436, 437, 438, 440, 441, 442, 446, 462, 463, 466, 468, 469, 470, 471, 473, 478, 479, 480, 481, 482, 484, 486, 487], "control": [1, 3, 5, 8, 18, 32, 33, 40, 41, 42, 49, 70, 75, 79, 80, 109, 111, 116, 128, 131, 132, 133, 134, 138, 145, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 195, 208, 227, 287, 288, 289, 290, 300, 304, 306, 307, 321, 325, 332, 334, 335, 339, 355, 356, 357, 366, 368, 369, 383, 384, 386, 390, 399, 404, 409, 417, 422, 432, 461, 463, 466, 467, 468, 469, 470, 471, 472, 473, 480, 481, 482, 484, 486], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 103, 111, 114, 115, 122, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 142, 144, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 217, 218, 222, 225, 228, 233, 235, 237, 238, 240, 241, 245, 246, 248, 258, 260, 261, 264, 265, 266, 267, 268, 270, 274, 277, 278, 293, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 312, 318, 320, 330, 333, 335, 339, 344, 345, 346, 347, 351, 352, 355, 356, 357, 358, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 402, 404, 405, 406, 407, 422, 424, 433, 438, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 487], "storing_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 467, 481], "dure": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 63, 64, 67, 68, 69, 70, 72, 73, 79, 80, 84, 95, 100, 105, 109, 111, 114, 116, 128, 131, 134, 135, 138, 145, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 191, 193, 196, 198, 199, 213, 214, 217, 220, 225, 228, 230, 232, 233, 235, 239, 243, 255, 257, 260, 262, 264, 265, 267, 268, 269, 274, 275, 277, 280, 282, 283, 300, 304, 311, 351, 368, 386, 399, 404, 406, 407, 437, 442, 462, 466, 467, 468, 469, 472, 473, 474, 476, 480, 481, 482, 484, 487], "heurist": [1, 4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 279, 351, 356, 466, 470, 474, 487], "usual": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 114, 122, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 265, 314, 386, 391, 399, 403, 404, 405, 406, 407, 408, 423, 459, 460, 461, 462, 463, 466, 467, 468, 469, 472, 474, 475, 481, 484, 487], "same": [1, 2, 3, 4, 18, 20, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 149, 153, 154, 158, 159, 160, 161, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 217, 225, 227, 228, 233, 235, 238, 239, 240, 241, 257, 265, 266, 267, 274, 277, 278, 284, 285, 299, 303, 305, 308, 309, 310, 311, 321, 329, 333, 335, 339, 347, 359, 367, 369, 382, 384, 387, 389, 391, 392, 396, 399, 400, 401, 462, 466, 467, 468, 471, 472, 474, 478, 479, 480, 481, 483, 484, 487], "default": [1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 122, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 321, 323, 324, 325, 327, 328, 329, 330, 333, 335, 336, 337, 339, 342, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 452, 456, 462, 463, 466, 467, 468, 469, 472, 480, 483, 484, 486, 487], "behavior": [1, 2, 3, 4, 15, 16, 27, 36, 43, 48, 56, 66, 67, 73, 78, 83, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 218, 225, 228, 241, 246, 259, 267, 275, 277, 280, 300, 301, 304, 330, 333, 335, 339, 368, 374, 382, 386, 391, 399, 401, 422, 432, 437, 461, 467, 469, 480, 481, 482, 484], "besid": 1, "those": [1, 2, 3, 5, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 199, 217, 222, 225, 228, 235, 241, 260, 261, 264, 268, 304, 320, 352, 356, 357, 358, 444, 454, 455, 461, 466, 467, 471, 472, 481, 482, 487], "choos": [1, 3, 11, 58, 128, 131, 149, 300, 304, 386, 458, 462, 466, 467, 468, 470, 480, 481, 484, 486], "follow": [1, 2, 3, 6, 7, 8, 11, 20, 36, 43, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 78, 83, 85, 96, 97, 98, 109, 116, 117, 128, 129, 130, 131, 134, 137, 138, 139, 144, 145, 146, 152, 155, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 213, 217, 237, 245, 270, 274, 275, 277, 284, 285, 298, 300, 302, 304, 305, 333, 335, 339, 349, 352, 353, 354, 365, 366, 367, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 400, 401, 424, 442, 461, 462, 463, 466, 467, 468, 469, 470, 473, 474, 479, 480, 481, 482, 484, 486, 487], "max_frames_per_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 445, 466, 468, 486], "frame": [1, 2, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 179, 217, 233, 277, 279, 297, 321, 351, 423, 424, 426, 429, 431, 435, 437, 442, 445, 446, 460, 466, 467, 468, 469, 472, 480, 481, 484, 486, 487], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 102, 103, 104, 105, 109, 110, 111, 115, 116, 118, 120, 124, 125, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 311, 312, 313, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 355, 356, 358, 359, 362, 367, 368, 369, 375, 382, 383, 384, 386, 387, 389, 391, 392, 399, 400, 401, 403, 404, 405, 406, 407, 422, 423, 426, 437, 462, 463, 467, 468, 469, 470, 471, 472, 474, 475, 480, 481, 482, 484, 486, 487], "frames_per_batch": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 214, 217, 250, 300, 304, 445, 466, 467, 468, 469, 470, 474, 476, 480, 481, 484, 486], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 36, 40, 41, 43, 47, 48, 49, 51, 52, 54, 56, 57, 66, 67, 70, 72, 73, 75, 77, 78, 79, 85, 109, 111, 114, 116, 117, 119, 122, 128, 131, 134, 135, 138, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 236, 238, 239, 245, 250, 253, 258, 259, 260, 261, 265, 266, 272, 274, 275, 277, 278, 279, 294, 297, 298, 299, 300, 302, 304, 310, 311, 315, 322, 323, 331, 333, 335, 339, 342, 348, 349, 354, 356, 358, 368, 383, 386, 399, 401, 404, 410, 413, 414, 415, 416, 418, 419, 420, 421, 424, 437, 439, 454, 455, 460, 462, 466, 467, 468, 469, 472, 473, 474, 476, 480, 481, 482, 483, 484, 486, 487], "init_random_fram": [1, 15, 16, 18, 21, 22, 23, 25, 27, 445, 466, 467, 470, 476], "rand_step": [1, 2, 3, 45, 76, 128, 131, 132, 133, 134, 135, 137, 138, 139, 146, 147, 148, 152, 153, 154, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 236, 260, 274, 482, 486, 487], "reset_at_each_it": [1, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 466], "split_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 466, 467, 468], "trajectori": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 43, 46, 47, 56, 57, 77, 79, 85, 108, 109, 116, 117, 122, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 246, 258, 265, 277, 281, 304, 307, 321, 386, 401, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 433, 458, 462, 466, 467, 468, 469, 471, 474, 476, 482, 486, 487], "pad": [1, 2, 3, 32, 65, 81, 97, 193, 199, 201, 217, 264, 284, 285, 287, 288, 304, 308, 309, 310, 335, 339, 439], "along": [1, 2, 3, 15, 16, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 104, 109, 111, 116, 117, 122, 124, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 216, 217, 218, 239, 241, 243, 246, 253, 257, 263, 277, 304, 305, 308, 309, 314, 333, 335, 339, 348, 352, 355, 356, 369, 384, 391, 399, 400, 401, 466, 467, 469, 471, 473, 480, 481, 482, 484, 486], "point": [1, 2, 3, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 101, 108, 109, 112, 122, 123, 126, 127, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 277, 306, 333, 335, 339, 355, 365, 376, 399, 401, 442, 459, 467, 468, 479, 480, 481, 482, 484, 486, 487], "boolean": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 109, 116, 117, 138, 189, 209, 213, 222, 246, 258, 308, 309, 321, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 460, 463, 469], "repres": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 40, 41, 45, 49, 51, 58, 75, 76, 78, 79, 85, 103, 128, 131, 132, 133, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 233, 246, 262, 274, 277, 294, 308, 309, 323, 329, 335, 339, 348, 349, 353, 354, 395, 404, 439, 461, 466, 468, 469, 470, 471, 472, 473, 480, 481], "valid": [1, 2, 3, 32, 62, 64, 65, 84, 85, 95, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 175, 179, 180, 181, 184, 187, 188, 189, 213, 246, 265, 267, 277, 279, 284, 285, 305, 308, 309, 321, 368, 375, 383, 386, 389, 404, 405, 406, 407, 439, 463, 470, 487], "exploration_typ": [1, 15, 16, 18, 21, 22, 23, 25, 27, 437, 458, 461, 466, 467], "strategi": [1, 2, 3, 18, 97, 114, 149, 210, 297, 309, 317, 461, 463, 466, 467, 470, 472, 480, 481, 484, 486], "reset_when_don": [1, 15, 16, 18, 21], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 104, 111, 116, 117, 128, 131, 134, 138, 145, 146, 152, 158, 159, 160, 161, 162, 167, 168, 169, 172, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 216, 217, 223, 229, 237, 258, 259, 260, 265, 267, 273, 274, 275, 277, 278, 279, 284, 285, 300, 304, 308, 309, 310, 311, 320, 333, 334, 335, 339, 348, 352, 353, 356, 359, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 392, 399, 400, 401, 402, 424, 442, 452, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487], "organ": [1, 2, 478, 482, 484], "within": [1, 2, 3, 15, 16, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 103, 108, 109, 117, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 275, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 342, 347, 349, 351, 354, 356, 359, 362, 363, 371, 376, 391, 399, 400, 401, 402, 404, 422, 424, 460, 461, 462, 467, 470, 471, 472, 473, 474, 475, 476, 480, 482, 486], "differ": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 111, 114, 128, 129, 130, 131, 134, 135, 138, 144, 145, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 217, 222, 226, 227, 238, 241, 248, 257, 265, 267, 269, 277, 278, 294, 298, 299, 302, 303, 305, 307, 310, 311, 312, 323, 333, 335, 339, 356, 382, 384, 386, 395, 399, 401, 404, 405, 406, 410, 411, 412, 437, 442, 444, 454, 455, 460, 461, 462, 463, 466, 467, 468, 470, 471, 473, 475, 479, 480, 481, 482, 483, 484, 486, 487], "how": [1, 2, 3, 11, 20, 22, 23, 25, 33, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 108, 109, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 238, 277, 312, 333, 335, 339, 352, 366, 368, 381, 383, 384, 386, 399, 401, 424, 426, 442, 459, 461, 466, 467, 468, 469, 470, 471, 472, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487], "tabl": [1, 36, 461, 467, 472], "summar": [1, 3, 482], "what": [1, 3, 8, 11, 42, 43, 63, 83, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 208, 229, 260, 265, 353, 369, 380, 384, 391, 399, 459, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 480, 481, 482, 483, 484, 486, 487], "expect": [1, 2, 3, 4, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 109, 115, 116, 128, 131, 134, 138, 146, 152, 155, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236, 237, 238, 239, 241, 243, 245, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 298, 299, 300, 302, 303, 304, 310, 311, 321, 333, 335, 339, 349, 355, 358, 366, 367, 368, 369, 370, 371, 373, 374, 375, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 396, 399, 401, 402, 446, 459, 461, 462, 463, 466, 468, 469, 471, 472, 473, 474, 478, 480, 481, 482, 484, 487], "n": [1, 2, 3, 6, 7, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 227, 232, 269, 277, 298, 299, 302, 307, 318, 320, 321, 333, 335, 339, 351, 356, 366, 367, 375, 384, 399, 401, 403, 439, 460, 463, 467, 469, 470, 484, 486, 487], "b": [1, 2, 3, 7, 8, 29, 32, 40, 41, 43, 49, 62, 64, 66, 70, 71, 72, 73, 75, 78, 79, 80, 85, 96, 97, 98, 102, 103, 122, 131, 185, 195, 235, 268, 298, 299, 302, 303, 310, 311, 313, 314, 322, 331, 333, 335, 339, 359, 399, 400, 404, 405, 406, 407, 408, 410, 424, 467, 478, 484], "cat_result": [1, 15, 16], "na": [1, 181, 184, 197], "t": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 108, 109, 111, 115, 116, 117, 122, 128, 131, 134, 135, 137, 138, 146, 153, 154, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 272, 273, 274, 277, 278, 298, 300, 302, 304, 308, 321, 333, 335, 339, 348, 355, 366, 390, 399, 400, 401, 404, 405, 406, 407, 408, 410, 424, 431, 442, 444, 456, 459, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 486, 487], "p": [1, 2, 4, 111, 114, 135, 165, 166, 282, 283], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 36, 43, 48, 56, 66, 67, 73, 78, 117, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 225, 226, 228, 236, 245, 250, 254, 259, 260, 263, 265, 266, 267, 270, 272, 273, 275, 277, 278, 298, 301, 302, 305, 310, 325, 329, 330, 333, 335, 339, 355, 356, 358, 365, 366, 367, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 444, 454, 455, 456, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 487], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 107, 108, 109, 111, 122, 128, 131, 134, 137, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 185, 187, 188, 189, 225, 226, 228, 236, 241, 260, 263, 267, 268, 278, 304, 305, 311, 312, 352, 355, 356, 358, 359, 365, 366, 367, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 404, 405, 406, 407, 424, 433, 444, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 474, 475, 480, 481, 482, 484, 486, 487], "dimens": [1, 3, 15, 16, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 70, 71, 72, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 109, 116, 117, 122, 124, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 185, 186, 187, 188, 189, 193, 201, 202, 210, 216, 217, 218, 232, 239, 241, 243, 246, 253, 256, 257, 260, 263, 269, 274, 275, 284, 285, 286, 291, 292, 300, 302, 304, 305, 308, 309, 310, 313, 314, 319, 322, 326, 327, 328, 329, 332, 348, 351, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 456, 458, 462, 466, 467, 468, 469, 471, 478, 480, 481, 482, 484], "time": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 97, 99, 102, 111, 122, 128, 129, 130, 131, 134, 135, 138, 144, 145, 146, 149, 155, 158, 159, 160, 161, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 208, 216, 217, 218, 239, 246, 253, 260, 261, 262, 265, 267, 274, 277, 283, 295, 298, 302, 304, 321, 333, 335, 339, 342, 351, 356, 367, 368, 369, 375, 378, 382, 383, 384, 386, 387, 389, 391, 392, 399, 401, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 442, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487], "adapt": [1, 33, 211, 239, 258, 274, 280, 383, 466, 470, 482], "equal": [1, 15, 16, 21, 36, 85, 109, 116, 117, 131, 153, 156, 157, 158, 167, 187, 240, 241, 284, 285, 298, 300, 302, 304, 305, 308, 309, 311, 368, 386, 390, 395, 399, 433, 454, 455, 466, 468, 483], "introduc": [1, 2, 158, 167, 298, 300, 302, 304, 321, 466, 480], "some": [1, 2, 3, 4, 7, 8, 9, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 70, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 102, 104, 111, 122, 124, 128, 129, 130, 131, 134, 137, 138, 139, 144, 145, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 245, 260, 267, 270, 277, 287, 300, 327, 333, 335, 339, 356, 357, 358, 399, 401, 424, 433, 445, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481, 482, 484, 486, 487], "confus": [1, 34, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 333, 335, 339, 399, 401], "other": [1, 2, 3, 4, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 111, 114, 115, 116, 117, 118, 120, 124, 128, 131, 134, 137, 138, 139, 143, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 220, 222, 226, 227, 247, 254, 260, 263, 270, 274, 275, 277, 282, 297, 298, 300, 304, 314, 333, 335, 339, 342, 347, 349, 354, 356, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 400, 401, 402, 404, 422, 439, 454, 455, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481, 482, 483, 486, 487], "better": [1, 3, 8, 9, 15, 16, 32, 145, 300, 304, 462, 468, 471, 482, 486], "consist": [1, 2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 273, 277, 282, 285, 305, 333, 335, 339, 399, 401, 460, 466, 467, 468, 482, 483, 487], "interact": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 190, 192, 267, 352, 356, 460, 466, 468, 470, 471, 472, 474, 480, 481, 482, 487], "keep": [1, 2, 3, 4, 7, 8, 16, 63, 70, 79, 80, 111, 115, 122, 131, 158, 167, 196, 208, 241, 245, 272, 274, 275, 277, 321, 351, 368, 386, 399, 401, 424, 435, 442, 466, 467, 468, 469, 474, 475, 476, 481, 482, 484, 487], "separ": [1, 2, 4, 8, 15, 16, 18, 21, 22, 25, 27, 29, 32, 40, 41, 49, 70, 75, 79, 80, 217, 245, 272, 367, 370, 373, 375, 387, 389, 391, 392, 404, 462, 466, 467, 472, 473, 480, 481, 484, 487], "interchang": [1, 310, 311, 468, 471, 475, 483, 484], "between": [1, 2, 3, 4, 5, 15, 16, 17, 18, 21, 24, 27, 29, 30, 31, 33, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 104, 109, 111, 112, 115, 116, 117, 124, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 227, 240, 251, 262, 265, 267, 274, 275, 277, 284, 285, 293, 298, 300, 304, 305, 310, 311, 333, 335, 337, 339, 349, 352, 356, 366, 368, 369, 370, 373, 374, 375, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 404, 437, 442, 462, 466, 467, 469, 470, 474, 478, 480, 481, 482, 484, 487], "wherea": [1, 2, 28, 29, 36, 43, 48, 56, 66, 67, 73, 78, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 153, 154, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 227, 265, 267, 277, 333, 335, 339, 369, 384, 389, 399, 401, 463, 475], "correspond": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 108, 109, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 235, 245, 260, 265, 267, 272, 274, 275, 277, 282, 297, 300, 302, 304, 308, 309, 321, 333, 335, 339, 352, 356, 369, 371, 374, 375, 389, 399, 400, 401, 402, 404, 405, 406, 407, 408, 461, 466, 467, 468, 470, 471, 473, 474, 475, 480, 481, 482, 483], "sub": [1, 2, 3, 15, 16, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 109, 116, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 246, 265, 275, 277, 333, 335, 339, 357, 358, 399, 401, 433, 442, 461, 462, 466, 467, 468, 474, 479, 486, 487], "doesn": [1, 4, 36, 43, 48, 56, 66, 67, 73, 78, 122, 128, 131, 134, 138, 146, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 225, 228, 277, 278, 333, 335, 339, 399, 401, 470, 471], "understood": [1, 466], "serv": [1, 3, 22, 25, 27, 140, 484, 486, 487], "basi": [1, 122, 310, 484, 486], "we": [1, 2, 3, 5, 7, 9, 11, 30, 31, 32, 33, 36, 40, 43, 48, 51, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 102, 115, 117, 122, 128, 129, 130, 131, 134, 135, 138, 142, 144, 145, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 222, 237, 245, 248, 254, 265, 270, 273, 274, 275, 277, 278, 281, 304, 308, 310, 311, 312, 333, 335, 339, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 424, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "anoth": [1, 2, 3, 8, 14, 17, 19, 20, 24, 26, 31, 51, 78, 83, 97, 103, 109, 116, 128, 131, 134, 137, 138, 139, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 214, 223, 225, 226, 228, 260, 266, 305, 335, 339, 352, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 462, 466, 468, 469, 470, 472, 473, 479, 480, 481, 482, 487], "wise": [1, 239], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 103, 108, 109, 116, 117, 128, 131, 134, 138, 142, 146, 153, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 217, 221, 222, 235, 245, 257, 260, 265, 266, 267, 270, 272, 275, 277, 282, 300, 304, 305, 312, 332, 333, 335, 339, 355, 356, 357, 358, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 422, 424, 426, 460, 461, 463, 466, 467, 468, 469, 471, 472, 473, 475, 478, 480, 481, 482, 484, 486, 487], "op": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 44, 52, 53, 54, 55, 58, 59, 60, 61, 83, 86, 87, 88, 89, 90, 240, 273, 279, 282, 297, 424, 444], "sinc": [1, 2, 3, 4, 5, 7, 11, 29, 30, 31, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 108, 109, 117, 122, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 164, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 223, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 348, 349, 351, 353, 354, 359, 362, 399, 401, 422, 424, 462, 466, 467, 468, 469, 471, 472, 473, 478, 480, 482, 483, 484, 486, 487], "goal": [1, 3, 4, 146, 188, 259, 460, 466, 467, 468, 469, 478, 481, 482], "policy_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 467], "explicitli": [1, 2, 3, 4, 39, 84, 99, 100, 107, 111, 213, 320, 352, 432, 462, 467, 469, 474, 480, 481, 484], "do": [1, 2, 3, 4, 7, 58, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 195, 197, 208, 210, 222, 246, 260, 265, 273, 274, 300, 304, 311, 313, 345, 356, 384, 399, 404, 424, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 486, 487], "deepcopi": [1, 312, 384, 399, 480], "place": [1, 2, 3, 19, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 102, 104, 111, 114, 116, 124, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 213, 221, 229, 245, 260, 266, 267, 270, 272, 273, 274, 277, 312, 333, 335, 339, 347, 351, 355, 399, 400, 401, 404, 439, 444, 445, 460, 462, 467, 468, 472, 475, 480, 481, 482, 484], "instanti": [1, 2, 3, 15, 16, 27, 29, 30, 62, 63, 64, 68, 69, 70, 71, 79, 80, 83, 85, 96, 97, 98, 108, 109, 111, 142, 145, 185, 189, 213, 235, 260, 311, 400, 404, 405, 406, 407, 408, 422, 466, 467, 472, 473, 475, 480, 481, 482, 484, 487], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 111, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 145, 146, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 206, 208, 210, 216, 217, 220, 221, 225, 226, 228, 231, 237, 240, 241, 245, 253, 255, 257, 260, 261, 266, 267, 270, 272, 274, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 311, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 342, 347, 349, 351, 354, 355, 356, 358, 359, 362, 363, 366, 367, 368, 369, 378, 382, 384, 386, 387, 388, 389, 391, 392, 396, 399, 400, 401, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 438, 442, 445, 454, 455, 456, 459, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 486, 487], "graph": [1, 3, 4, 8, 43, 66, 78, 129, 130, 144, 145, 333, 335, 339, 397, 398, 399, 466, 470, 482], "reli": [1, 2, 3, 11, 32, 67, 73, 179, 260, 298, 299, 300, 302, 303, 304, 337, 366, 386, 404, 462, 466, 468, 470, 472, 474, 482, 487], "third": [1, 241, 262, 349, 480, 481], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 62, 64, 71, 75, 85, 96, 97, 98, 185, 400, 466, 467, 468, 469, 470, 473, 474, 480, 481, 482, 486, 487], "limit": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 194, 217, 237, 366, 368, 383, 384, 386, 388, 399, 462, 466, 467, 469, 480, 481, 482], "chart": 1, "show": [1, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 277, 311, 333, 335, 339, 399, 401, 424, 466, 468, 469, 470, 478, 480, 481, 482, 484, 486], "decis": [1, 2, 3, 286, 291, 319, 347, 372, 385, 461, 469, 471, 472, 480, 481, 484, 487], "multiprocess": [1, 2, 3, 14, 15, 16, 22, 23, 25, 70, 79, 80, 103, 111, 128, 135, 136, 158, 162, 167, 274, 275, 466, 467, 468, 469, 474, 480, 481, 482, 483, 487], "ensur": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 85, 108, 109, 115, 128, 131, 134, 138, 143, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 217, 245, 258, 267, 270, 274, 275, 277, 300, 304, 333, 335, 339, 348, 368, 383, 386, 399, 401, 461, 467, 468, 482, 484], "flexibl": [1, 3, 9, 153, 393, 460, 462, 463, 466, 470, 484, 487], "extens": [1, 2, 63, 70, 79, 80, 117, 282, 463, 484], "mechan": [1, 4, 14, 17, 19, 24, 26, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 333, 335, 339, 399, 401, 467, 473, 482], "accommod": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 471, 472], "variou": [1, 2, 3, 14, 131, 179, 266, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 393, 399, 402, 424, 454, 455, 460, 466, 467, 468, 470, 471, 472, 473, 475, 480, 481, 484, 487], "deploy": [1, 470], "scenario": [1, 2, 19, 24, 26, 150, 151, 158, 172, 173, 222, 265, 422, 466, 472, 480, 481, 482], "facilit": [1, 2, 3, 7, 244, 245, 260, 270, 272, 344, 345, 346, 461, 466, 469, 472, 482], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 460], "These": [1, 2, 7, 51, 72, 125, 172, 245, 272, 275, 335, 339, 460, 461, 462, 466, 468, 480, 481, 482, 484, 487], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 51, 63, 70, 73, 79, 80, 84, 113, 119, 122, 123, 125, 126, 128, 129, 130, 131, 134, 138, 142, 144, 145, 146, 152, 153, 154, 158, 159, 162, 167, 168, 169, 172, 179, 180, 181, 184, 187, 188, 189, 190, 196, 199, 200, 201, 208, 222, 226, 250, 264, 266, 270, 271, 300, 304, 310, 312, 335, 339, 344, 350, 366, 367, 369, 370, 371, 373, 374, 375, 377, 382, 386, 387, 388, 389, 391, 392, 431, 442, 460, 461, 462, 463, 466, 467, 469, 471, 472, 473, 475, 478, 480, 481, 482, 484, 487], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 82, 83, 86, 87, 88, 89, 90, 106, 118, 119, 128, 131, 134, 138, 146, 152, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 230, 233, 237, 239, 247, 248, 254, 258, 264, 266, 267, 268, 274, 275, 277, 278, 282, 284, 298, 299, 300, 301, 302, 303, 304, 328, 329, 330, 333, 335, 339, 366, 367, 369, 372, 373, 374, 380, 382, 384, 385, 386, 388, 389, 391, 399, 401, 422, 433, 447, 460, 461, 463, 466, 467, 468, 469, 470, 480, 481, 482, 486], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 460, 480], "allow": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 40, 41, 43, 48, 49, 56, 58, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 85, 96, 97, 98, 103, 109, 111, 114, 116, 117, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 213, 214, 248, 275, 277, 278, 305, 333, 335, 339, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 399, 400, 401, 402, 460, 461, 463, 466, 468, 469, 470, 471, 472, 473, 480, 481, 482, 484, 486, 487], "tailor": [1, 187, 460, 486], "need": [1, 2, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 73, 78, 83, 118, 122, 128, 131, 134, 138, 142, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 220, 222, 223, 232, 238, 245, 248, 261, 265, 266, 267, 272, 274, 275, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 313, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 352, 353, 354, 355, 359, 362, 365, 375, 388, 389, 399, 401, 403, 408, 424, 442, 456, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487], "handl": [1, 2, 3, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 31, 36, 43, 48, 56, 58, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 273, 274, 275, 277, 304, 305, 333, 335, 336, 339, 366, 384, 386, 399, 401, 442, 454, 455, 460, 466, 467, 468, 469, 471, 473, 478, 481, 484], "well": [1, 2, 3, 8, 27, 32, 36, 43, 48, 56, 63, 65, 66, 67, 70, 73, 78, 79, 80, 83, 109, 114, 118, 125, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 266, 267, 277, 278, 282, 287, 302, 324, 325, 333, 335, 339, 356, 384, 386, 391, 399, 401, 404, 408, 460, 461, 466, 467, 469, 470, 471, 472, 473, 475, 483, 484, 486, 487], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "everi": [1, 3, 8, 15, 16, 17, 18, 21, 29, 30, 36, 40, 41, 43, 48, 49, 56, 60, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 85, 111, 118, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 258, 259, 274, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 310, 311, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 368, 383, 384, 386, 399, 401, 442, 463, 466, 467, 468, 469, 471, 472, 480, 481, 482], "even": [1, 2, 3, 4, 8, 11, 16, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 103, 104, 105, 109, 116, 118, 120, 124, 128, 131, 134, 135, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 213, 466, 468, 471, 478, 480, 481, 482, 487], "simplest": [1, 43, 66, 78, 122, 333, 335, 339, 359, 399, 466, 468, 469, 472, 480, 481, 484, 487], "vanillaweightupdat": 1, "dict": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 100, 109, 111, 116, 117, 128, 131, 134, 135, 136, 137, 138, 139, 146, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 237, 260, 265, 267, 273, 274, 275, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 296, 305, 319, 333, 335, 339, 352, 356, 369, 389, 391, 399, 400, 401, 424, 428, 429, 437, 442, 447, 448, 454, 455, 456, 461, 466, 467, 468, 484, 486, 487], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 18, 24, 26, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 99, 100, 107, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 202, 216, 219, 224, 232, 245, 246, 253, 260, 267, 270, 272, 283, 300, 304, 332, 342, 359, 371, 375, 376, 389, 401, 402, 413, 414, 415, 416, 418, 419, 420, 421, 424, 466, 468, 479, 482], "divers": [1, 4, 158, 167], "abl": [1, 3, 51, 128, 149, 160, 161, 162, 168, 300, 304, 460, 466, 468, 469, 472, 479, 480, 481, 482, 484], "leav": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 70, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 185, 187, 188, 189, 209, 254, 400, 462, 466, 474, 484], "untouch": [1, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 230, 237, 239, 247, 248, 254, 258, 264, 266, 268, 275, 277, 401], "particularli": [1, 2, 3, 196, 470, 486, 487], "benefici": [1, 2], "involv": [1, 137, 139, 140, 150, 151, 164, 214, 217, 265, 300, 304, 471, 473], "complex": [1, 2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401, 466, 467, 471, 472], "architectur": [1, 4, 291, 473, 480, 481, 486], "special": [1, 3, 87, 89, 189, 458, 460, 466, 469, 470, 487], "hardwar": [1, 3, 470], "By": [1, 2, 3, 14, 17, 18, 19, 20, 24, 26, 40, 41, 49, 60, 75, 97, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 150, 151, 158, 159, 160, 161, 162, 164, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 239, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 332, 356, 384, 399, 401, 432, 437, 456, 460, 462, 466, 469, 480, 483, 484, 487], "retriev": [1, 3, 14, 17, 20, 24, 26, 51, 62, 63, 64, 66, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 111, 114, 116, 117, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 193, 208, 218, 226, 229, 241, 281, 284, 307, 335, 339, 351, 352, 356, 359, 363, 366, 367, 368, 369, 371, 383, 386, 387, 389, 391, 392, 399, 400, 402, 404, 405, 406, 407, 456, 463, 467, 468, 472, 482, 487], "appli": [1, 2, 3, 4, 14, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 97, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 240, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 277, 282, 298, 302, 312, 329, 333, 335, 339, 348, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 399, 401, 404, 422, 438, 463, 466, 467, 468, 474, 478, 480, 482, 486, 487], "seamless": [1, 2, 305], "integr": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 290, 300, 304, 307, 333, 335, 339, 355, 399, 401, 461, 471, 472, 474, 478, 480, 481, 482, 483], "infrastructur": [1, 3, 480, 481], "transit": [1, 36, 43, 48, 56, 66, 67, 73, 78, 109, 117, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 280, 282, 333, 335, 339, 361, 399, 401, 466, 469, 471, 472, 474, 480, 482, 484], "sampl": [1, 4, 8, 9, 30, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 102, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 120, 122, 124, 128, 131, 134, 138, 146, 152, 155, 158, 159, 162, 167, 168, 169, 176, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 275, 277, 279, 281, 292, 297, 301, 307, 308, 309, 317, 319, 320, 321, 324, 329, 330, 333, 335, 339, 340, 343, 348, 349, 350, 352, 353, 354, 355, 356, 366, 367, 368, 369, 370, 371, 373, 383, 385, 386, 391, 392, 399, 401, 433, 439, 442, 445, 458, 461, 462, 466, 467, 468, 469, 470, 471, 472, 474, 476, 480, 481, 483, 486, 487], "attent": [1, 2, 8, 187, 217, 335, 339, 466, 469, 487], "given": [1, 2, 3, 15, 16, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 109, 111, 116, 117, 128, 131, 134, 138, 146, 152, 156, 157, 158, 159, 162, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 221, 227, 235, 241, 245, 260, 264, 266, 267, 268, 270, 272, 274, 275, 277, 279, 281, 283, 294, 295, 297, 298, 300, 302, 304, 307, 312, 323, 327, 333, 335, 339, 343, 348, 349, 351, 354, 355, 356, 357, 358, 360, 365, 370, 371, 373, 384, 399, 401, 403, 404, 405, 406, 407, 408, 410, 434, 437, 452, 461, 462, 463, 466, 467, 468, 471, 472, 473, 474, 475, 481, 482, 487], "built": [1, 2, 3, 5, 7, 111, 129, 130, 137, 144, 145, 155, 156, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 393, 399, 402, 450, 452, 453, 456, 466, 467, 468, 469, 470, 473, 475, 478, 482, 484, 487], "flatten": [1, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 122, 185, 214, 232, 400, 401, 404, 439, 458, 469, 481], "suffici": [1, 3, 4, 466], "preprocess": [1, 2, 84, 266, 467, 470], "popul": [1, 2, 3, 15, 16, 18, 27, 29, 30, 63, 68, 69, 70, 77, 79, 80, 111, 187, 236, 260, 292, 312, 384, 399, 460, 466, 468, 469, 472, 474, 482, 484], "replaybuff": [1, 2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 63, 68, 69, 76, 79, 80, 102, 103, 108, 109, 110, 111, 116, 117, 126, 217, 246, 250, 277, 371, 376, 402, 450, 452, 458, 468, 470, 474, 476, 480, 481, 483, 484, 486], "lazytensorstorag": [1, 2, 15, 16, 18, 21, 29, 63, 70, 78, 79, 80, 108, 116, 117, 122, 250, 277, 468, 470, 476, 480, 481, 484], "lambda": [1, 2, 15, 16, 18, 21, 27, 28, 29, 30, 43, 51, 66, 70, 78, 85, 122, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 207, 214, 222, 223, 235, 237, 260, 268, 275, 277, 278, 283, 332, 333, 335, 339, 348, 351, 352, 353, 377, 379, 380, 391, 399, 404, 407, 415, 416, 420, 421, 422, 452, 462, 466, 467, 470, 480, 481, 483, 484, 486, 487], "reshap": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 116, 122, 214, 300, 304, 305, 320, 422, 468, 480, 481], "slice": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 109, 111, 116, 117, 210, 216, 217, 484], "recommend": [1, 2, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 62, 63, 64, 70, 71, 79, 80, 85, 96, 97, 98, 116, 122, 142, 179, 180, 181, 184, 185, 217, 312, 337, 368, 386, 400, 462, 474, 480, 481], "achiev": [1, 2, 3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 259, 277, 283, 333, 335, 339, 352, 399, 401, 439, 463, 466, 467, 468, 469, 470, 478, 480, 481, 482, 484, 486, 487], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 103, 105, 111, 122, 128, 131, 134, 135, 138, 142, 146, 158, 159, 160, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 214, 217, 222, 235, 245, 265, 266, 267, 270, 273, 274, 275, 277, 284, 285, 287, 288, 289, 290, 291, 292, 296, 300, 304, 305, 306, 310, 311, 333, 335, 336, 337, 339, 347, 355, 356, 363, 369, 371, 376, 387, 389, 399, 400, 401, 402, 424, 439, 446, 447, 448, 452, 454, 455, 460, 461, 466, 467, 468, 469, 470, 472, 475, 478, 480, 481, 482, 483, 484, 486, 487], "multidimension": [1, 2, 79, 108, 109, 484], "slicesampl": [1, 2, 109, 117, 217, 484], "sampler": [1, 2, 63, 68, 69, 70, 79, 80, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 124, 217, 246, 320, 371, 376, 402, 466, 468, 480, 481, 484], "One": [1, 2, 3, 4, 8, 34, 35, 39, 40, 41, 44, 49, 54, 55, 60, 61, 75, 84, 122, 128, 129, 130, 158, 162, 167, 168, 217, 250, 270, 279, 317, 355, 359, 390, 395, 428, 466, 467, 484, 487], "must": [1, 2, 3, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 103, 104, 105, 109, 111, 116, 117, 118, 119, 120, 122, 124, 128, 129, 131, 134, 135, 138, 144, 146, 156, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 210, 213, 214, 217, 220, 222, 223, 229, 233, 235, 237, 239, 241, 243, 254, 257, 259, 260, 261, 264, 265, 267, 268, 269, 274, 277, 284, 285, 294, 300, 304, 305, 308, 309, 310, 311, 323, 333, 335, 339, 343, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 390, 391, 392, 399, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 462, 466, 467, 468, 469, 472, 478, 479, 482, 484], "shape": [1, 2, 3, 15, 16, 18, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 102, 103, 104, 108, 111, 116, 122, 124, 128, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 179, 180, 181, 184, 185, 186, 187, 188, 189, 193, 202, 208, 210, 214, 216, 218, 225, 228, 229, 230, 235, 237, 238, 241, 243, 247, 248, 250, 254, 257, 258, 260, 263, 268, 274, 276, 277, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 328, 329, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 395, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 433, 439, 442, 452, 461, 462, 466, 467, 468, 469, 470, 472, 473, 476, 478, 479, 480, 481, 483, 484, 486, 487], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 29, 58, 266, 301, 329, 330, 365, 459, 466, 467, 468, 469, 470, 473, 478, 480, 481, 483, 487], "dimension": [1, 63, 67, 70, 78, 79, 80, 187, 227, 300, 304, 404, 409, 417, 462, 481], "num_slic": [1, 2, 109, 116, 117, 484], "4": [1, 2, 3, 7, 34, 36, 40, 41, 45, 49, 51, 54, 55, 56, 60, 63, 66, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 102, 103, 104, 111, 116, 117, 124, 128, 129, 130, 131, 132, 133, 134, 138, 144, 145, 146, 147, 148, 149, 152, 154, 158, 159, 162, 165, 166, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 210, 211, 213, 214, 217, 222, 223, 229, 250, 257, 258, 259, 265, 274, 275, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 302, 303, 305, 307, 308, 309, 310, 311, 315, 316, 317, 319, 320, 321, 322, 323, 331, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 360, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 422, 423, 460, 461, 465, 466, 467, 468, 469, 475, 480, 481, 482, 484, 485, 486, 487], "trajectory_kei": [1, 32, 116, 117], "traj_id": [1, 2, 3, 15, 16, 18, 29, 32, 45, 76, 214, 250, 474, 484], "total_fram": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 214, 217, 250, 442, 445, 452, 463, 466, 467, 468, 469, 470, 474, 476, 480, 481, 484, 486], "dim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 116, 185, 201, 217, 218, 239, 243, 256, 257, 260, 269, 274, 303, 327, 332, 351, 400, 456, 462, 467, 468, 470, 480, 482, 484], "ndim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 102, 104, 108, 109, 122, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 239, 277, 351], "parallelenv": [1, 2, 3, 15, 16, 18, 21, 25, 29, 30, 122, 128, 131, 134, 138, 146, 153, 159, 160, 161, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 265, 275, 300, 304, 422, 453, 458, 466, 467, 468, 471, 479, 486, 487], "make_env": [1, 3, 158, 167, 173, 265, 274, 275, 422, 447, 448, 460, 466, 467, 486, 487], "regular": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 62, 64, 71, 85, 96, 97, 98, 108, 114, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 277, 280, 282, 293, 300, 304, 323, 349, 353, 354, 355, 356, 376, 386, 400, 401, 444, 458, 463, 466, 467, 470, 471, 472, 476, 478, 484, 487], "behav": [1, 3, 140, 152, 298, 302, 317, 374, 382, 384, 399, 470, 483], "accordingli": [1, 2, 3, 109, 223, 239, 258, 259, 302, 353, 469], "3": [1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 21, 27, 29, 30, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 85, 96, 97, 98, 102, 104, 109, 111, 116, 117, 122, 124, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 146, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 211, 213, 214, 217, 221, 222, 223, 227, 229, 230, 235, 237, 241, 243, 245, 247, 248, 250, 253, 254, 257, 258, 259, 260, 263, 265, 266, 267, 268, 270, 272, 275, 277, 278, 280, 281, 283, 284, 285, 287, 288, 289, 291, 294, 296, 298, 299, 300, 302, 303, 304, 305, 307, 308, 310, 311, 312, 317, 320, 322, 332, 333, 335, 339, 343, 344, 345, 346, 348, 349, 352, 354, 355, 358, 359, 360, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 441, 461, 463, 465, 466, 467, 468, 469, 471, 472, 474, 475, 480, 481, 482, 484, 485, 486, 487], "isn": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 62, 64, 71, 85, 96, 97, 98, 108, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 185, 187, 188, 189, 213, 229, 235, 348, 355, 400, 404, 472, 473, 475, 480, 481], "current": [1, 2, 3, 12, 14, 15, 16, 17, 24, 26, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 106, 109, 111, 117, 128, 131, 134, 138, 140, 146, 153, 156, 157, 158, 159, 162, 167, 168, 169, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 213, 214, 217, 235, 246, 259, 260, 261, 265, 266, 267, 275, 277, 295, 321, 325, 329, 333, 335, 337, 339, 340, 351, 366, 368, 369, 376, 383, 386, 388, 389, 399, 400, 401, 404, 427, 463, 466, 467, 468, 469, 473, 480, 481, 482, 484, 487], "fulli": [1, 8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 299, 303, 333, 335, 339, 399, 401, 467, 470, 473, 482, 484], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 100, 101, 102, 103, 104, 105, 111, 112, 115, 117, 118, 120, 122, 123, 124, 126, 127, 128, 131, 134, 135, 138, 139, 146, 153, 158, 159, 160, 161, 162, 167, 168, 169, 170, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 232, 233, 235, 236, 237, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 283, 284, 285, 291, 292, 305, 314, 320, 333, 335, 339, 347, 351, 355, 356, 357, 358, 366, 367, 368, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 404, 406, 407, 422, 424, 429, 442, 459, 462, 466, 467, 468, 469, 470, 472, 473, 478, 480, 481, 482, 484, 486, 487], "consecut": [1, 3, 115, 142, 304, 321, 424, 469, 471, 474, 481, 484, 487], "won": [1, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 135, 137, 138, 146, 153, 154, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 245, 272, 277, 333, 335, 339, 366, 399, 400, 401, 442, 456, 467, 468, 471, 472], "therebi": [1, 33, 422, 462, 466, 467], "interrupt": [1, 2, 138, 189, 351, 410], "start": [1, 2, 3, 4, 5, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 51, 68, 83, 84, 85, 109, 116, 117, 128, 131, 134, 135, 138, 143, 146, 149, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 224, 438, 465, 466, 467, 470, 477, 481, 482, 484, 485, 487], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 43, 49, 51, 62, 63, 64, 66, 67, 70, 71, 73, 75, 78, 85, 96, 97, 98, 102, 104, 109, 116, 117, 118, 120, 122, 124, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 211, 216, 218, 222, 225, 227, 228, 237, 241, 246, 259, 260, 263, 267, 274, 275, 297, 333, 335, 339, 343, 352, 353, 356, 363, 399, 400, 404, 405, 406, 407, 408, 424, 428, 461, 462, 465, 466, 467, 468, 469, 470, 477, 480, 481, 482, 484, 485, 486, 487], "rid": [1, 43, 66, 78, 333, 335, 339, 399], "natur": [1, 2, 3, 13, 22, 23, 25, 466, 472, 473, 474, 484], "background": [1, 13, 15, 16, 21, 22, 23, 25, 30, 484], "simpli": [1, 3, 6, 62, 64, 71, 84, 85, 96, 97, 98, 120, 122, 127, 185, 191, 230, 254, 273, 384, 399, 400, 404, 461, 462, 466, 468, 473, 478, 480, 481, 487], "replay_buff": [1, 2, 8, 15, 16, 18, 21, 27, 29, 30, 63, 68, 69, 70, 79, 80, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 217, 439, 452, 466, 467, 468, 474, 480, 481, 484], "rb": [1, 2, 15, 16, 18, 21, 29, 45, 63, 68, 69, 70, 76, 79, 80, 103, 108, 109, 111, 116, 117, 122, 217, 250, 277, 467, 469, 470, 474, 476, 481, 483, 484, 486], "paus": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "sleep": [1, 15, 16, 18, 21, 29, 68, 135, 487], "10": [1, 2, 3, 7, 28, 32, 34, 35, 36, 39, 43, 44, 51, 52, 56, 63, 68, 69, 70, 72, 78, 79, 80, 81, 84, 85, 102, 103, 104, 108, 111, 116, 117, 122, 124, 128, 129, 130, 131, 134, 135, 138, 144, 145, 146, 152, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 193, 195, 197, 210, 211, 214, 216, 217, 222, 223, 259, 261, 262, 263, 274, 275, 277, 281, 283, 286, 287, 289, 291, 293, 297, 298, 299, 300, 302, 303, 304, 307, 308, 309, 319, 321, 332, 352, 356, 359, 363, 367, 371, 373, 380, 386, 387, 388, 392, 402, 404, 405, 406, 407, 410, 424, 433, 463, 466, 467, 468, 469, 470, 471, 472, 476, 480, 482, 484, 486, 487], "i": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 45, 48, 49, 56, 63, 66, 67, 70, 73, 75, 76, 78, 80, 81, 85, 102, 104, 108, 109, 116, 117, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 223, 224, 239, 245, 250, 253, 265, 267, 272, 277, 299, 300, 303, 304, 323, 333, 335, 339, 342, 349, 351, 352, 354, 355, 356, 366, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 401, 404, 405, 406, 407, 433, 445, 460, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487], "rang": [1, 2, 3, 4, 8, 63, 68, 69, 70, 72, 79, 80, 102, 104, 111, 122, 128, 131, 134, 135, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 250, 263, 274, 277, 278, 299, 303, 320, 338, 383, 391, 392, 462, 463, 466, 468, 469, 470, 473, 474, 476, 480, 481, 482, 484, 486], "optim_step": [1, 281, 307, 470, 476], "rest": [1, 15, 16, 21, 43, 282, 461, 468, 469, 480, 482, 486], "multithread": [1, 2, 3, 63, 70, 79, 80, 95, 153, 154, 474, 484], "mind": [1, 3, 109, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 480, 481], "gil": 1, "relat": [1, 2, 3, 4, 10, 63, 158, 184, 232, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 467, 476, 482], "restrict": [1, 2, 3, 462, 467, 478, 483, 484, 487], "hand": [1, 2, 3, 7, 27, 40, 480, 481, 482], "let": [1, 2, 3, 6, 7, 11, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 81, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 277, 310, 311, 333, 335, 339, 348, 399, 401, 437, 460, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487], "child": [1, 20, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 467], "fill": [1, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 138, 189, 213, 260, 273, 304, 469, 482, 483], "truli": [1, 273, 486], "decoupl": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 466, 473, 486], "been": [1, 2, 3, 5, 7, 8, 12, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 111, 115, 128, 131, 134, 138, 142, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 194, 237, 258, 259, 266, 267, 298, 300, 302, 304, 312, 351, 366, 384, 386, 388, 399, 466, 467, 468, 469, 479, 480, 481, 482, 484, 486, 487], "shut": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 162, 168], "down": [1, 4, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 162, 168, 462, 469, 471], "async_shutdown": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 68], "mean": [1, 2, 3, 4, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 62, 64, 71, 79, 83, 85, 96, 97, 98, 103, 108, 109, 116, 117, 122, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 213, 241, 265, 274, 275, 279, 280, 281, 292, 295, 298, 300, 302, 304, 307, 319, 320, 328, 329, 352, 356, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 461, 462, 466, 467, 468, 470, 472, 480, 481, 482, 484, 487], "drastic": [1, 145, 158, 484], "load": [1, 2, 6, 7, 15, 16, 18, 21, 29, 30, 31, 36, 43, 45, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 96, 97, 98, 100, 102, 103, 104, 105, 111, 118, 119, 120, 124, 125, 128, 131, 133, 134, 138, 146, 158, 159, 162, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 274, 275, 277, 333, 335, 339, 399, 400, 401, 442, 456, 460, 463, 466, 468, 470, 478, 484], "factor": [1, 8, 11, 33, 43, 56, 250, 277, 279, 280, 297, 301, 314, 321, 329, 330, 367, 373, 376, 377, 379, 390, 410, 466, 467, 470, 472, 476, 480, 481, 484, 487], "signific": [1, 3, 5, 8, 468, 486, 487], "understand": [1, 2, 8, 13, 22, 23, 25, 43, 466, 467, 470, 471, 472, 478, 480, 481], "affect": [1, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 223, 267, 275, 277, 333, 335, 339, 399, 401, 404, 405, 406, 407, 480], "algorithm": [1, 2, 3, 8, 9, 13, 22, 23, 25, 152, 210, 257, 366, 386, 387, 389, 458, 462, 463, 466, 467, 468, 469, 470, 472, 473, 474, 475, 480, 481, 483, 484, 486], "legitim": [1, 462, 487], "unless": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 115, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 275, 277, 282, 333, 335, 339, 366, 367, 369, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 468], "benchmark": [1, 2, 3, 9, 129, 130, 138, 144, 145, 189], "backend": [1, 3, 7, 15, 16, 18, 21, 22, 23, 27, 28, 29, 85, 128, 131, 134, 137, 138, 146, 158, 159, 162, 167, 168, 169, 178, 179, 180, 181, 184, 187, 188, 189, 207, 278, 339, 460, 463, 466, 468, 469, 470, 471, 474, 475, 482], "gloo": [1, 22, 23, 28], "nccl": [1, 22, 23, 337], "mpi": [1, 22, 23], "distributeddatacollector": [1, 24, 28, 458], "rpc": [1, 25, 26, 28, 29, 30, 69], "rpcdatacollector": [1, 26, 28, 458], "launcher": [1, 22, 23, 25, 28], "rai": [1, 17, 18, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 111, 336, 338], "submitit": [1, 22, 23, 25, 28], "mode": [1, 3, 6, 13, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 143, 146, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 225, 228, 259, 267, 274, 275, 277, 282, 292, 300, 301, 304, 309, 317, 328, 329, 330, 333, 335, 339, 342, 352, 356, 368, 384, 386, 399, 401, 422, 432, 437, 461, 462, 466, 467, 480, 481, 486, 487], "find": [1, 4, 6, 7, 22, 23, 25, 63, 65, 81, 116, 117, 279, 302, 321, 436, 440, 466, 467, 470, 472, 473, 478, 480, 481], "folder": [1, 2, 62, 64, 71, 85, 96, 97, 98, 172, 185, 217, 400, 467], "machin": [1, 2, 7, 22, 23, 25, 56, 142, 480, 481, 486], "wonder": 1, "why": [1, 2, 3, 208, 462, 480, 482, 487], "instead": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 36, 39, 43, 48, 56, 66, 67, 68, 73, 78, 82, 85, 128, 131, 134, 138, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 232, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 355, 359, 362, 366, 368, 369, 371, 374, 375, 376, 382, 383, 386, 387, 388, 389, 399, 401, 402, 404, 408, 412, 456, 462, 470, 471, 472, 476, 482, 484, 487], "lower": [1, 2, 3, 27, 36, 37, 220, 274, 275, 324, 325, 359, 468, 480, 482], "io": [1, 11, 144, 145, 153, 156, 157, 170, 171, 302, 303, 470], "footprint": [1, 2, 484], "commun": [1, 2, 3, 24, 26, 146, 158, 162, 167, 188, 337, 459, 468, 487], "yet": [1, 129, 130, 144, 401, 483], "plai": [1, 3, 160, 161, 169, 179, 217, 467, 468, 473, 484, 487], "role": [1, 3, 97, 151, 179, 181, 184, 467, 473, 487], "opposit": [1, 480], "direct": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 298, 302, 333, 335, 339, 384, 399, 401, 467, 473], "faster": [1, 2, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 153, 308, 404, 405, 406, 407, 469, 470, 480, 481], "share": [1, 3, 6, 8, 15, 16, 18, 21, 29, 32, 62, 64, 70, 71, 79, 80, 83, 85, 96, 97, 98, 100, 102, 103, 104, 105, 109, 111, 112, 116, 118, 120, 124, 135, 158, 167, 185, 257, 265, 274, 275, 300, 304, 310, 311, 344, 345, 346, 366, 367, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 400, 456, 458, 461, 462, 468, 470, 476, 478, 479, 480, 481, 486, 487], "among": [1, 3, 58, 160, 161, 265, 375, 389, 462, 480, 481], "prohibit": [1, 3, 18, 122], "slow": [1, 3, 4, 11, 62, 64, 71, 85, 96, 97, 98, 103, 116, 117, 185, 400], "compar": [1, 3, 122, 367, 369, 382, 387, 389, 391, 392, 437, 462, 466, 468, 470, 472, 473, 480, 481, 484, 487], "gpu": [1, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 104, 124, 128, 131, 134, 138, 139, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 336, 339, 399, 401, 466, 468, 469, 480, 481, 487], "driver": [1, 7], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 102, 103, 104, 108, 109, 111, 114, 116, 117, 120, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 239, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 297, 300, 304, 308, 309, 310, 311, 321, 333, 335, 339, 343, 347, 348, 351, 352, 353, 355, 356, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 394, 399, 400, 401, 402, 404, 405, 406, 407, 408, 412, 422, 424, 429, 431, 442, 453, 466, 467, 468, 470, 472, 475, 480, 481, 484, 486, 487], "mani": [1, 2, 3, 4, 70, 129, 130, 132, 133, 134, 137, 139, 140, 144, 145, 153, 154, 164, 187, 193, 260, 366, 368, 375, 383, 386, 399, 461, 466, 467, 468, 470, 471, 472, 474, 476, 480, 481, 482, 484, 486, 487], "eg": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 118, 120, 124, 128, 131, 132, 133, 134, 137, 138, 139, 140, 142, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 227, 258, 267, 278, 310, 347, 400, 424], "gymnasium": [1, 2, 3, 5, 15, 16, 18, 21, 29, 78, 128, 131, 134, 137, 138, 139, 143, 146, 147, 148, 158, 159, 162, 167, 168, 169, 178, 179, 180, 181, 184, 187, 188, 189, 207, 230, 254, 258, 273, 278, 467, 468, 470, 482, 486], "warn": [1, 3, 67, 73, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 274, 279, 297, 321, 432, 467, 478], "quickli": [1, 3, 467, 480, 481, 487], "becom": [1, 2, 3, 4, 27, 298, 302, 480, 481, 487], "quit": [1, 3, 11, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 466, 467, 468, 470, 472, 480, 481, 487], "annoi": [1, 3], "filter": [1, 2, 3, 4, 84, 109, 116, 117, 366, 367, 369, 370, 374, 375, 382, 386, 387, 389, 471], "out": [1, 2, 3, 4, 5, 9, 14, 17, 19, 20, 24, 26, 27, 31, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 100, 109, 116, 117, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 257, 260, 277, 279, 298, 299, 302, 308, 309, 312, 313, 314, 333, 335, 339, 343, 347, 348, 349, 352, 353, 354, 355, 356, 384, 397, 398, 399, 400, 401, 462, 463, 466, 467, 468, 469, 470, 471, 472, 474, 480, 481, 482, 484, 486, 487], "still": [1, 2, 3, 9, 43, 66, 78, 85, 86, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 265, 321, 333, 335, 339, 383, 384, 399, 462, 466, 467, 469, 479, 482, 484, 487], "wish": [1, 3, 11, 15, 16, 21, 207, 473, 484], "displai": [1, 3, 7, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 442, 463, 466, 467, 478, 481, 482], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 209, 210, 211, 213, 214, 217, 218, 221, 223, 225, 228, 229, 230, 232, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 248, 250, 252, 253, 254, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 287, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 321, 322, 323, 329, 330, 331, 333, 335, 336, 339, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 402, 404, 405, 406, 407, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 431, 432, 435, 436, 437, 439, 440, 442, 456, 461, 462, 463, 466, 467, 468, 470, 475, 476, 478, 479, 480, 481, 482, 483, 486, 487], "central": [2, 14, 20, 24, 26, 310, 311, 312, 466, 467, 471, 480, 481, 484], "part": [2, 3, 4, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 85, 128, 129, 131, 134, 138, 144, 146, 156, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 216, 241, 250, 253, 277, 333, 335, 339, 360, 399, 401, 433, 456, 460, 462, 466, 468, 469, 470, 476, 480, 482, 487], "wide": [2, 3, 5, 486], "give": [2, 3, 7, 79, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 368, 383, 386, 459, 460, 462, 466, 467, 470, 480, 481, 482, 483, 486], "abil": [2, 384, 482, 484], "panel": [2, 468], "usag": [2, 3, 5, 7, 15, 16, 18, 21, 22, 23, 25, 27, 43, 66, 78, 100, 122, 180, 196, 214, 217, 229, 282, 300, 304, 333, 335, 339, 369, 374, 382, 389, 393, 399, 461, 466, 468, 469, 472, 473, 475, 480, 481, 484], "includ": [2, 3, 4, 7, 9, 27, 36, 43, 48, 56, 66, 67, 73, 78, 83, 85, 99, 100, 102, 103, 104, 105, 107, 118, 120, 124, 128, 131, 134, 138, 146, 152, 156, 157, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 232, 235, 259, 265, 267, 274, 275, 277, 300, 304, 333, 335, 339, 366, 369, 384, 389, 399, 401, 445, 460, 461, 463, 466, 467, 468, 469, 470, 478, 480, 481, 482, 484, 487], "almost": [2, 275, 308, 309, 469], "physic": [2, 6, 7, 100, 158, 159, 164, 463, 466, 480, 481, 482], "theori": 2, "crude": 2, "made": [2, 3, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 97, 102, 103, 104, 105, 118, 120, 124, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 260, 277, 312, 321, 333, 335, 339, 371, 384, 399, 401, 402, 466, 467, 469, 480, 481, 483, 484, 486], "liststorag": [2, 51, 63, 68, 69, 70, 78, 79, 80, 103, 111, 484], "veri": [2, 3, 144, 145, 184, 467, 471, 474, 478, 480, 482, 484, 486, 487], "ineffici": [2, 4], "tensor": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 227, 228, 229, 230, 232, 235, 236, 238, 241, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 333, 335, 336, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 364, 366, 367, 369, 370, 371, 373, 374, 375, 378, 379, 382, 384, 386, 387, 388, 389, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 480, 481, 482, 486, 487], "contigu": [2, 3, 8, 37, 40, 48, 86, 103, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 235, 238, 260, 268, 482, 484, 486], "tensorstorag": [2, 70, 78, 102, 108, 109, 122, 125, 474, 484], "lazymemmapstorag": [2, 45, 63, 68, 69, 70, 76, 79, 80, 109, 111, 116, 117, 216, 217, 466, 467, 469, 474, 480, 483, 484], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 140, 145, 146, 149, 152, 155, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 454, 455, 456, 458, 461, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478, 480, 481, 484, 487], "citizen": 2, "pytre": [2, 63, 68, 69, 70, 79, 80, 105, 111, 125], "tupl": [2, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 100, 105, 109, 111, 116, 120, 122, 128, 131, 132, 133, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 235, 237, 241, 277, 283, 287, 293, 294, 300, 303, 304, 305, 312, 319, 322, 323, 333, 335, 339, 348, 349, 353, 354, 359, 366, 367, 368, 369, 370, 374, 375, 377, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 404, 405, 406, 407, 436, 437, 440, 449, 478, 484, 486], "dictionari": [2, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 109, 114, 116, 117, 128, 131, 134, 137, 138, 139, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 260, 265, 267, 275, 277, 333, 335, 339, 352, 356, 369, 389, 391, 399, 400, 401, 437, 454, 455, 456, 463, 467, 468, 471, 473, 480, 482, 487], "nest": [2, 3, 32, 36, 40, 41, 43, 45, 47, 48, 49, 56, 57, 62, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 85, 91, 96, 97, 98, 102, 103, 104, 107, 111, 124, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 217, 258, 261, 265, 277, 333, 335, 339, 351, 399, 400, 401, 404, 405, 406, 407, 408, 422, 432, 463, 467, 468, 470, 481, 482, 484, 486], "construct": [2, 3, 5, 32, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 111, 128, 131, 134, 135, 137, 138, 146, 158, 159, 160, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 225, 228, 275, 277, 300, 304, 325, 333, 335, 339, 356, 399, 401, 442, 460, 461, 467, 468, 469, 472, 480, 482, 484, 487], "ram": [2, 137, 139, 475, 484], "prealloc": [2, 3, 158, 167, 482], "ve": [2, 72, 466, 469, 476, 478], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 45, 51, 63, 66, 68, 69, 70, 76, 79, 80, 85, 101, 102, 105, 108, 109, 111, 112, 116, 117, 120, 122, 123, 126, 127, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 216, 250, 266, 277, 280, 384, 399, 401, 439, 458, 460, 462, 463, 466, 467, 468, 469, 470, 474, 476, 480, 481, 483, 484, 486], "here": [2, 3, 4, 7, 8, 9, 10, 15, 16, 27, 122, 128, 131, 132, 133, 134, 138, 142, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 197, 217, 265, 312, 335, 431, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 474, 476, 480, 481, 482, 484, 486, 487], "add": [2, 3, 4, 6, 27, 36, 40, 41, 43, 48, 49, 51, 56, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 97, 101, 103, 108, 111, 112, 122, 123, 126, 127, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 235, 237, 264, 267, 277, 300, 304, 313, 333, 335, 339, 350, 366, 399, 401, 438, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486], "string": [2, 22, 23, 25, 36, 43, 48, 51, 56, 58, 65, 66, 67, 73, 78, 84, 85, 95, 103, 128, 131, 134, 138, 146, 150, 156, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 235, 245, 258, 264, 272, 277, 300, 304, 333, 335, 339, 348, 351, 352, 353, 365, 399, 401, 423, 441, 462, 466, 468, 469, 478, 484], "element": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 51, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 83, 85, 96, 97, 98, 102, 103, 104, 105, 108, 109, 111, 116, 117, 122, 124, 128, 131, 134, 138, 146, 155, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 186, 187, 188, 189, 193, 210, 217, 222, 223, 246, 255, 259, 260, 275, 279, 284, 285, 298, 299, 302, 342, 343, 348, 351, 355, 356, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 404, 433, 460, 462, 466, 468, 472, 474, 478, 484, 487], "30": [2, 3, 70, 78, 116, 117, 192, 213, 240, 324, 325, 422, 426, 429, 431, 474, 481, 482, 484], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 114, 116, 117, 118, 120, 122, 124, 128, 131, 134, 135, 137, 138, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 232, 234, 235, 237, 238, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 322, 323, 329, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 451, 452, 454, 455, 456, 461, 463, 466, 467, 469, 470, 482, 484, 486], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 116, 117, 118, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 164, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 210, 212, 213, 214, 216, 217, 218, 219, 221, 224, 227, 232, 233, 235, 239, 240, 241, 243, 245, 246, 249, 256, 257, 258, 261, 264, 265, 267, 269, 272, 277, 279, 280, 281, 284, 285, 286, 287, 289, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 336, 337, 339, 347, 348, 349, 351, 352, 354, 356, 366, 367, 368, 375, 377, 378, 383, 384, 385, 386, 387, 391, 392, 399, 400, 401, 404, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 429, 431, 433, 434, 435, 437, 439, 442, 444, 454, 455, 456, 470, 482, 484], "entri": [2, 3, 15, 16, 21, 32, 36, 40, 41, 43, 45, 48, 49, 51, 56, 62, 64, 65, 66, 67, 71, 73, 75, 76, 78, 84, 85, 92, 96, 97, 98, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 150, 151, 158, 159, 162, 164, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 213, 217, 219, 220, 223, 224, 225, 226, 228, 229, 232, 236, 238, 239, 241, 243, 245, 248, 250, 253, 255, 257, 258, 259, 260, 262, 265, 267, 269, 272, 274, 277, 300, 308, 309, 333, 335, 339, 347, 348, 351, 353, 354, 367, 369, 389, 399, 400, 401, 404, 405, 406, 407, 461, 466, 468, 469, 471, 472, 473, 475, 480, 481, 482, 483, 484, 486, 487], "onto": [2, 8, 60, 62, 64, 71, 85, 96, 97, 98, 185, 202, 226, 279, 321, 343, 348, 349, 352, 353, 354, 355, 356, 400, 404, 469, 482], "__setitem__": 2, "indic": [2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 108, 109, 111, 112, 114, 115, 116, 117, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 153, 154, 158, 159, 162, 164, 167, 168, 169, 172, 173, 179, 180, 181, 184, 185, 187, 188, 189, 209, 210, 217, 218, 222, 258, 259, 260, 261, 267, 275, 277, 278, 284, 285, 305, 308, 309, 311, 321, 335, 339, 351, 353, 354, 362, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 402, 446, 456, 459, 463, 468, 469, 470, 474, 475, 476, 482, 484, 487], "without": [2, 3, 7, 9, 14, 15, 16, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 225, 228, 263, 266, 277, 298, 299, 302, 303, 333, 335, 337, 339, 345, 346, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 401, 403, 404, 405, 406, 407, 408, 452, 459, 461, 466, 467, 468, 470, 471, 472, 473, 474, 478, 480, 481, 482, 484, 487], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 43, 48, 51, 56, 62, 63, 64, 66, 67, 71, 72, 73, 78, 79, 85, 96, 97, 98, 108, 109, 128, 131, 134, 138, 146, 152, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 211, 213, 214, 225, 227, 228, 235, 247, 258, 259, 265, 267, 271, 274, 275, 277, 279, 281, 282, 297, 298, 307, 312, 321, 333, 335, 338, 339, 352, 353, 354, 355, 356, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 437, 442, 444, 447, 448, 451, 452, 458, 460, 463, 467, 468, 469, 470, 473, 476, 480, 481, 482, 484, 487], "length": [2, 25, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 109, 116, 117, 120, 128, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 210, 217, 238, 246, 274, 281, 284, 285, 287, 289, 291, 298, 302, 305, 307, 310, 311, 335, 339, 343, 355, 360, 401, 433, 439, 466, 468, 469, 474, 476, 478, 482, 484, 487], "cursor": [2, 63, 68, 69, 70, 79, 80, 111], "afterward": [2, 36, 43, 48, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 480, 487], "tell": [2, 3, 4, 7, 128, 160, 161, 179, 265, 466, 469, 474, 480, 481], "our": [2, 3, 7, 8, 11, 22, 51, 70, 179, 217, 222, 424, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 486], "far": [2, 63, 68, 69, 70, 72, 79, 80, 111, 179, 184, 301, 329, 330, 476, 482, 487], "empti": [2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 105, 111, 128, 131, 134, 138, 145, 146, 155, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 225, 228, 245, 247, 261, 267, 270, 272, 275, 277, 333, 335, 339, 355, 399, 400, 401, 428, 466, 482], "64": [2, 3, 62, 64, 71, 85, 96, 97, 98, 111, 185, 217, 249, 287, 288, 296, 300, 304, 311, 312, 322, 400, 402, 466, 467, 468, 469, 470, 472, 476, 479, 482, 484, 486, 487], "dtype": [2, 3, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 108, 109, 116, 117, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 205, 208, 209, 210, 211, 214, 215, 221, 222, 225, 226, 227, 228, 229, 230, 235, 237, 238, 241, 243, 245, 247, 248, 250, 254, 257, 258, 260, 262, 263, 266, 267, 268, 270, 272, 277, 281, 283, 293, 294, 298, 299, 300, 302, 303, 304, 307, 313, 314, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 360, 363, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 410, 461, 470, 478, 479, 482, 484, 486, 487], "unit8": 2, "img": 2, "randint": [2, 84, 111, 193, 263, 484], "255": [2, 111, 263, 484], "uint8": [2, 3, 40, 62, 64, 71, 85, 96, 97, 98, 132, 133, 150, 151, 185, 229, 235, 243, 263, 400, 467, 484], "next": [2, 3, 4, 8, 15, 16, 18, 30, 32, 40, 41, 43, 45, 47, 49, 51, 56, 63, 68, 69, 70, 72, 75, 76, 78, 79, 80, 85, 95, 99, 100, 107, 109, 111, 116, 117, 122, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 144, 145, 146, 150, 151, 152, 156, 157, 158, 159, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 184, 187, 188, 189, 193, 195, 197, 202, 208, 210, 213, 214, 216, 217, 222, 223, 225, 228, 229, 230, 235, 236, 237, 238, 239, 243, 247, 248, 250, 253, 254, 258, 260, 262, 265, 268, 273, 274, 275, 277, 281, 299, 300, 303, 304, 307, 325, 351, 361, 363, 366, 367, 369, 370, 371, 373, 374, 375, 376, 382, 386, 387, 388, 389, 391, 392, 401, 402, 403, 404, 405, 406, 407, 408, 424, 436, 437, 440, 467, 469, 470, 472, 476, 478, 482, 483, 486, 487], "ask": [2, 3, 8, 109, 116, 117, 424, 468, 469, 471, 472, 480, 481, 483, 487], "automat": [2, 3, 5, 12, 20, 37, 51, 83, 86, 102, 104, 111, 117, 124, 128, 131, 134, 137, 138, 139, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 196, 213, 225, 228, 241, 260, 273, 275, 284, 300, 304, 337, 343, 351, 352, 356, 422, 432, 461, 466, 468, 471, 472, 480, 481, 482, 484, 486], "look": [2, 3, 5, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 109, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 235, 245, 246, 270, 277, 282, 333, 335, 339, 352, 356, 357, 358, 399, 401, 462, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487], "lead": [2, 3, 4, 8, 10, 29, 32, 40, 41, 49, 56, 63, 70, 75, 85, 115, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 260, 278, 301, 322, 329, 330, 342, 466, 469, 470, 480, 481, 482, 484, 486], "match": [2, 3, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 111, 120, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 232, 234, 236, 237, 238, 239, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 284, 285, 292, 300, 304, 305, 310, 311, 328, 333, 335, 339, 343, 347, 348, 352, 353, 355, 356, 359, 360, 367, 368, 369, 375, 383, 385, 386, 387, 389, 399, 401, 439, 444, 461, 462, 466, 468, 470, 479, 481, 482, 484, 487], "don": [2, 3, 4, 6, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 179, 217, 266, 308, 467, 468, 470, 474, 484, 486, 487], "throw": [2, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 400, 401, 487], "rb_td": 2, "batch_siz": [2, 3, 8, 15, 16, 18, 29, 32, 40, 43, 45, 51, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 102, 103, 104, 108, 109, 110, 111, 116, 117, 122, 124, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 208, 209, 210, 214, 216, 217, 221, 225, 228, 229, 230, 235, 243, 247, 248, 250, 254, 257, 258, 260, 266, 267, 268, 277, 281, 283, 291, 292, 293, 294, 297, 300, 304, 307, 321, 322, 323, 331, 332, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 424, 433, 439, 460, 461, 462, 466, 467, 468, 469, 474, 478, 480, 481, 482, 484, 486, 487], "max": [2, 32, 60, 64, 79, 84, 95, 108, 109, 122, 145, 186, 227, 261, 321, 367, 368, 369, 375, 385, 387, 389, 399, 466, 468, 469, 470, 476], "label": [2, 64, 65, 72, 84, 85, 466, 480, 484], "100": [2, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 102, 104, 111, 116, 117, 122, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 220, 222, 229, 241, 250, 255, 258, 277, 308, 309, 310, 333, 335, 339, 349, 351, 399, 401, 424, 434, 452, 467, 468, 470, 471, 473, 476, 479, 480, 481, 482, 484, 486, 487], "rb_pytre": 2, "randn": [2, 3, 63, 66, 68, 69, 70, 79, 80, 102, 103, 104, 109, 111, 116, 117, 124, 128, 202, 216, 241, 283, 286, 287, 291, 293, 294, 298, 299, 302, 303, 308, 309, 310, 317, 319, 323, 343, 344, 345, 346, 347, 348, 352, 353, 355, 358, 359, 360, 366, 367, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 388, 389, 391, 392, 399, 404, 405, 406, 407, 441, 461, 470, 484, 486, 487], "c": [2, 3, 6, 7, 15, 16, 18, 21, 29, 40, 43, 62, 64, 66, 70, 71, 78, 79, 80, 85, 96, 97, 98, 103, 185, 241, 263, 268, 302, 303, 333, 335, 339, 399, 400, 467, 484], "zero": [2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 104, 111, 116, 117, 122, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 214, 216, 218, 222, 225, 227, 228, 241, 247, 250, 257, 275, 277, 280, 281, 288, 289, 290, 296, 297, 298, 299, 300, 302, 303, 304, 308, 309, 311, 312, 321, 322, 331, 333, 335, 339, 354, 356, 362, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 410, 469, 470, 484, 486, 487], "assert": [2, 3, 6, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 111, 122, 128, 131, 134, 138, 141, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 185, 187, 188, 189, 202, 207, 210, 214, 217, 220, 225, 228, 237, 248, 255, 267, 274, 283, 311, 332, 400, 404, 405, 406, 407, 432, 433, 441, 474, 479, 484, 487], "len": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 102, 104, 111, 124, 193, 243, 284, 285, 305, 311, 466, 470, 474, 476, 480, 482, 483, 484, 486], "ambigu": [2, 63, 68, 69, 70, 79, 80, 111], "signatur": [2, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 111, 120, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 214, 221, 235, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401, 462, 466, 470, 471, 482], "deal": [2, 3, 63, 68, 69, 70, 79, 80, 111, 384, 399, 462, 466, 468, 481, 484], "interpret": [2, 3, 63, 68, 69, 70, 79, 80, 111, 460, 467], "put": [2, 63, 68, 69, 70, 79, 80, 111, 138, 150, 151, 169, 172, 173, 274, 431, 456, 461, 467, 468, 469, 471, 478, 480, 482], "solv": [2, 4, 7, 9, 10, 63, 68, 69, 70, 79, 80, 111, 459, 466, 467, 468, 474, 476, 480, 481, 482, 484], "clear": [2, 3, 11, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 111, 128, 131, 134, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 434, 471, 474], "cut": [2, 63, 68, 69, 70, 79, 80, 111], "distinct": [2, 3, 63, 68, 69, 70, 79, 80, 111, 214, 217, 473, 479], "view": [2, 3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 277, 294, 298, 302, 305, 333, 335, 339, 399, 401, 471, 482, 484, 486, 487], "through": [2, 3, 4, 5, 8, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 40, 41, 49, 63, 67, 68, 69, 70, 73, 75, 79, 80, 85, 111, 128, 129, 130, 131, 134, 137, 138, 139, 142, 144, 145, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 192, 213, 223, 225, 228, 246, 278, 283, 305, 322, 351, 352, 356, 357, 358, 362, 365, 384, 404, 405, 406, 407, 432, 460, 461, 462, 466, 467, 468, 471, 473, 479, 480, 481, 482, 483, 484, 487], "collate_fn": [2, 63, 68, 69, 70, 78, 79, 80, 111, 180, 181, 184, 484, 486], "__init__": [2, 3, 7, 134, 152, 170, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 207, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 281, 292, 294, 298, 302, 307, 336, 360, 367, 369, 370, 375, 382, 387, 389, 391, 392, 401, 463, 482, 487], "major": 2, "worri": [2, 81, 487], "though": [2, 4, 11, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 305, 468, 480, 481], "too": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 66, 72, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 240, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 301, 329, 330, 333, 335, 339, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 467, 472, 475, 482, 484, 487], "latter": [2, 22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 386, 399, 401, 454, 455], "inv": [2, 3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 220, 227, 230, 235, 243, 250, 255, 257, 262, 266, 269, 277, 401, 482], "obvious": [2, 470], "ignor": [2, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 73, 74, 75, 78, 81, 83, 86, 87, 88, 89, 90, 100, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 227, 230, 254, 263, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 399, 401, 404, 478, 484], "thread": [2, 3, 15, 16, 18, 21, 29, 30, 62, 64, 71, 85, 96, 97, 98, 128, 129, 130, 144, 145, 158, 167, 168, 185, 275, 400], "prefetch": [2, 63, 70, 79, 80, 95, 466, 467, 469, 484], "advis": [2, 11, 475, 487], "techniqu": [2, 8, 158, 167, 467, 470, 474, 484], "real": [2, 5, 356, 462, 469, 470, 482, 483], "life": [2, 229, 483], "adopt": [2, 3, 5, 466, 487], "throughput": [2, 9, 145, 466], "constant": [2, 11, 42, 217, 241, 259, 463, 466, 468, 469, 487], "throughout": [2, 3, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 468, 480, 487], "further": [2, 3, 5, 33, 466, 468, 470, 471], "refin": [2, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402], "coupl": [2, 368, 386, 469, 472, 473, 482, 484], "first_elt": 2, "128": [2, 117, 129, 130, 144, 145, 288, 291, 467, 469, 470, 476, 480, 483, 484], "wa": [2, 3, 5, 7, 40, 41, 43, 49, 51, 63, 66, 68, 69, 70, 75, 78, 79, 80, 85, 109, 111, 115, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 209, 217, 235, 267, 302, 333, 335, 339, 366, 368, 381, 383, 386, 388, 390, 399, 410, 462, 467, 468, 471, 472, 479, 480, 484, 486], "print": [2, 3, 6, 7, 15, 16, 18, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 108, 109, 111, 116, 117, 122, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 207, 208, 209, 210, 213, 214, 217, 218, 222, 223, 225, 226, 227, 228, 236, 241, 247, 248, 250, 253, 258, 260, 261, 262, 263, 274, 275, 277, 284, 285, 287, 288, 289, 290, 291, 294, 296, 297, 300, 304, 305, 308, 309, 310, 311, 317, 320, 321, 323, 333, 335, 339, 343, 344, 345, 346, 347, 348, 351, 352, 353, 355, 356, 358, 360, 363, 384, 399, 400, 401, 422, 452, 460, 461, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 218], "larger": [2, 4, 78, 300, 304, 374, 382, 486], "volum": 2, "due": [2, 3, 5, 13, 22, 23, 25, 32, 368, 386, 473, 483, 484, 487], "memorymappedtensor": [2, 45, 62, 64, 76, 84, 102, 426, 474], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 111, 128, 131, 134, 138, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 224, 225, 226, 228, 253, 256, 259, 264, 268, 269, 277, 278, 281, 302, 333, 335, 337, 339, 355, 356, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 399, 401, 431, 461, 466, 468, 469, 470, 474, 478, 480], "file": [2, 6, 7, 8, 62, 64, 71, 85, 96, 97, 98, 100, 172, 185, 400, 423, 424, 426, 442, 463, 465, 467, 480, 484, 485], "locat": [2, 7, 62, 64, 71, 84, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 205, 224, 229, 241, 252, 275, 301, 329, 330, 400, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 466, 467, 468, 475, 480, 481, 484], "improv": [2, 4, 11, 233, 366, 462, 470, 480, 481, 484], "failur": [2, 4, 368, 386, 399], "recoveri": 2, "were": [2, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 158, 167, 235, 368, 386, 460, 468, 480, 484], "found": [2, 3, 6, 7, 10, 15, 16, 18, 21, 27, 32, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 96, 97, 98, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 211, 217, 238, 250, 253, 261, 274, 275, 277, 297, 310, 311, 333, 335, 339, 352, 356, 383, 384, 386, 399, 400, 401, 462, 466, 467, 469, 470, 471, 473, 475, 478, 482, 484, 486], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 74, 75, 83, 86, 87, 88, 89, 90, 102, 109, 156, 157, 227, 265, 280, 302, 303, 374, 469, 470, 474, 484], "sharabl": [2, 158, 167], "collabor": 2, "rather": [2, 4, 120, 156, 157, 187, 193, 248, 275, 461, 462, 466, 467, 468, 471, 473, 480, 481, 484], "incur": [2, 129, 130, 144, 145], "transmiss": 2, "overhead": [2, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 356], "content": [2, 3, 8, 18, 40, 41, 49, 62, 63, 64, 70, 71, 75, 79, 80, 85, 96, 97, 98, 115, 116, 117, 128, 131, 134, 137, 138, 139, 146, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 183, 184, 185, 187, 188, 189, 192, 247, 284, 285, 305, 310, 311, 352, 384, 399, 400, 468, 478, 482, 486], "map": [2, 3, 8, 14, 17, 19, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 102, 107, 108, 109, 128, 131, 134, 138, 146, 149, 150, 151, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 210, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 294, 333, 335, 339, 343, 344, 345, 346, 348, 352, 353, 355, 356, 358, 359, 360, 361, 368, 369, 383, 386, 389, 399, 400, 401, 402, 404, 437, 458, 461, 462, 466, 467, 468, 469, 472, 473, 483], "writer": [2, 63, 68, 69, 70, 79, 80, 101, 104, 109, 111, 112, 116, 122, 123, 124, 127, 468, 484], "tensordictroundrobinwrit": [2, 80, 111], "goe": [2, 4, 85, 160, 161, 466, 468, 480, 481, 487], "prioritizedsampl": [2, 63, 68, 69, 70, 79, 80, 109, 111, 371, 376, 402, 466, 484], "access": [2, 3, 7, 8, 11, 29, 30, 36, 43, 48, 56, 63, 66, 67, 73, 78, 103, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 217, 245, 266, 270, 277, 333, 335, 339, 399, 401, 456, 459, 466, 471, 480, 481, 482, 484, 486], "tensordictreplaybuff": [2, 63, 68, 69, 70, 79, 108, 109, 111, 116, 117, 122, 216, 217, 439, 452, 458, 466, 467, 469, 484], "mp": [2, 22, 23, 25, 135, 274, 275], "def": [2, 3, 28, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 111, 128, 131, 134, 135, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 275, 277, 278, 281, 294, 298, 299, 302, 303, 307, 312, 333, 335, 339, 351, 352, 360, 367, 369, 370, 375, 382, 384, 387, 389, 391, 392, 399, 401, 422, 432, 460, 462, 463, 466, 467, 470, 478, 479, 480, 481, 482, 484, 486, 487], "td": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 43, 45, 51, 62, 63, 64, 66, 68, 69, 70, 71, 76, 78, 79, 80, 85, 96, 97, 98, 102, 111, 122, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 147, 148, 156, 157, 158, 159, 162, 163, 167, 168, 169, 170, 171, 179, 180, 181, 184, 185, 187, 188, 189, 193, 208, 211, 214, 216, 218, 222, 223, 225, 226, 227, 228, 236, 237, 238, 239, 241, 250, 253, 257, 260, 263, 267, 274, 281, 283, 293, 294, 297, 306, 307, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 352, 353, 355, 358, 360, 399, 400, 402, 405, 406, 407, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 433, 441, 461, 462, 466, 467, 469, 481, 482, 483, 486], "__name__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 135, 275, 422, 467, 486], "__main__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 135, 275, 422, 486], "21": [2, 51, 85, 116, 117, 158, 160, 161, 167, 222], "proc": 2, "target": [2, 4, 8, 27, 33, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 259, 277, 320, 333, 335, 339, 355, 356, 366, 367, 368, 369, 370, 371, 373, 375, 376, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 399, 401, 402, 403, 404, 405, 406, 407, 408, 445, 451, 452, 462, 463, 469, 470, 476, 480, 482], "arg": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 51, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 109, 111, 116, 117, 118, 120, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 204, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 239, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 277, 279, 281, 283, 284, 285, 292, 293, 297, 300, 304, 305, 306, 307, 321, 332, 333, 334, 335, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 431, 435, 439, 442, 456, 467, 470, 478], "join": [2, 135, 193, 458, 467, 468, 470, 480], "now": [2, 3, 7, 63, 70, 79, 80, 111, 156, 157, 158, 217, 254, 311, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 484, 487], "20": [2, 51, 78, 84, 85, 116, 117, 122, 128, 131, 134, 138, 142, 146, 156, 157, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 259, 277, 296, 298, 299, 302, 303, 320, 347, 433, 465, 469, 484, 485, 487], "_data": [2, 482], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 72, 73, 74, 75, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 103, 111, 114, 122, 127, 128, 131, 134, 138, 140, 146, 152, 153, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 211, 214, 216, 217, 229, 235, 237, 241, 246, 259, 265, 267, 273, 275, 277, 279, 287, 289, 295, 297, 310, 311, 320, 321, 322, 324, 325, 331, 332, 333, 335, 339, 349, 351, 354, 356, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 390, 392, 399, 401, 402, 403, 404, 422, 431, 437, 459, 461, 462, 466, 467, 469, 470, 471, 480, 481, 482, 483, 484, 486, 487], "difficult": [2, 4, 158, 475], "pai": [2, 8, 217, 466], "word": [2, 3, 11, 72, 384, 399, 466, 474, 482, 487], "1m": [2, 445, 466, 468, 469], "doe": [2, 3, 19, 22, 36, 43, 48, 56, 62, 63, 64, 66, 67, 71, 73, 78, 79, 84, 85, 96, 97, 98, 99, 100, 107, 108, 109, 116, 118, 120, 127, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 275, 277, 282, 291, 292, 298, 299, 300, 302, 303, 304, 313, 320, 332, 333, 335, 339, 347, 357, 358, 366, 368, 376, 383, 384, 386, 399, 400, 401, 403, 442, 462, 463, 466, 467, 468, 469, 471, 474, 480, 482, 484, 487], "howev": [2, 3, 5, 7, 36, 43, 48, 56, 66, 67, 73, 78, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 277, 333, 335, 339, 366, 368, 369, 383, 386, 388, 389, 399, 401, 461, 466, 467, 469, 470, 473, 482, 484, 487], "capac": [2, 63, 70, 79, 80, 102, 104, 108, 116, 124, 468, 474], "There": [2, 3, 10, 111, 181, 266, 282, 300, 304, 366, 386, 461, 462, 463, 468, 469, 470, 472, 474, 480, 481, 482, 484, 486, 487], "circumv": 2, "account": [2, 102, 104, 124, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 213, 223, 308, 309, 461, 467, 469, 484, 487], "save": [2, 3, 8, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 85, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 111, 118, 119, 120, 124, 125, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 273, 277, 333, 335, 339, 399, 400, 401, 423, 424, 426, 431, 442, 463, 470, 474, 475, 476, 480, 481], "convent": [2, 3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 462, 466, 469, 480, 481, 482], "overridden": [2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 404, 406, 407, 469, 480], "dim_extend": [2, 63, 70, 79, 80], "obtain": [2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 216, 245, 259, 272, 281, 283, 320, 322, 439, 466, 468, 471, 472, 473, 480, 481], "counterpart": [2, 3, 217], "desir": [2, 3, 11, 15, 16, 18, 21, 29, 36, 39, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 212, 214, 221, 223, 241, 243, 245, 246, 260, 266, 267, 270, 272, 277, 284, 285, 292, 305, 311, 333, 335, 339, 343, 348, 349, 352, 353, 354, 355, 356, 399, 401, 461, 466, 470, 478, 480, 481, 482, 484], "diversifi": 2, "offer": [2, 3, 7, 128, 129, 130, 131, 134, 138, 144, 145, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 265, 422, 460, 461, 466, 467, 470, 471, 473, 474, 480, 482, 484, 487], "accomplish": [2, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 471, 478], "__especially__": 2, "offlin": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 367, 373, 374, 382, 391, 401, 431, 463, 471, 483, 484], "docstr": [2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 471, 472], "detail": [2, 3, 5, 6, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 263, 267, 277, 282, 294, 298, 302, 312, 320, 333, 335, 339, 349, 366, 376, 384, 386, 399, 401, 459, 463, 467, 470, 474, 479, 484], "happi": [2, 470], "concaten": [2, 8, 15, 16, 27, 51, 52, 54, 85, 179, 187, 217, 218, 241, 257, 302, 305, 358, 466, 467, 472, 480, 481, 482, 484, 487], "schedul": [2, 4, 7, 72, 437, 468, 482], "transformedenv": [2, 3, 11, 12, 56, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 214, 217, 220, 221, 223, 225, 228, 229, 230, 236, 237, 238, 240, 241, 243, 247, 248, 249, 250, 253, 254, 255, 258, 259, 260, 261, 265, 266, 274, 277, 300, 304, 351, 401, 424, 432, 466, 467, 468, 469, 470, 471, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487], "stepcount": [2, 51, 56, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 223, 265, 266, 267, 277, 283, 401, 466, 467, 468, 469, 470, 471, 476, 480, 481, 486], "gymenv": [2, 3, 5, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 51, 56, 68, 76, 78, 122, 128, 131, 134, 135, 138, 140, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 213, 214, 217, 220, 221, 222, 223, 229, 235, 236, 237, 241, 243, 248, 249, 250, 253, 255, 259, 260, 261, 262, 265, 266, 267, 268, 274, 275, 277, 283, 300, 304, 351, 401, 422, 424, 452, 458, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 486, 487], "randompolici": [2, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 56, 217, 250, 458, 474, 484], "cartpol": [2, 3, 11, 45, 56, 76, 78, 128, 131, 132, 133, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 213, 214, 217, 222, 253, 259, 274, 277, 351, 422, 467, 469, 472, 474, 475, 476, 484, 487], "v1": [2, 3, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 56, 68, 76, 78, 122, 128, 131, 134, 135, 137, 138, 139, 144, 145, 146, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 214, 217, 220, 222, 223, 230, 236, 237, 241, 248, 250, 253, 254, 255, 258, 259, 260, 261, 262, 265, 266, 268, 274, 275, 277, 283, 300, 304, 351, 395, 401, 413, 414, 415, 416, 418, 419, 420, 421, 422, 461, 467, 469, 471, 472, 473, 474, 475, 476, 482, 484, 486, 487], "action_spec": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 128, 129, 130, 131, 134, 138, 144, 145, 146, 152, 158, 159, 160, 161, 162, 163, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 214, 217, 221, 225, 226, 228, 237, 241, 247, 250, 266, 267, 268, 269, 277, 281, 294, 307, 323, 325, 343, 348, 352, 353, 367, 369, 371, 373, 387, 389, 391, 392, 401, 452, 461, 466, 467, 468, 469, 470, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 486, 487], "8": [2, 3, 6, 7, 40, 41, 49, 56, 70, 75, 78, 108, 109, 116, 117, 128, 129, 130, 131, 132, 133, 134, 138, 146, 156, 157, 158, 159, 162, 167, 168, 169, 170, 179, 180, 181, 184, 187, 188, 189, 210, 213, 222, 223, 259, 262, 268, 275, 284, 285, 287, 288, 296, 305, 344, 345, 346, 352, 355, 358, 382, 466, 467, 482, 484, 486], "traj_kei": [2, 109, 116, 117, 484], "truncated_kei": [2, 109, 116, 117, 250, 258], "strict_length": [2, 109, 116, 117, 424], "enumer": [2, 15, 16, 18, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 76, 78, 80, 83, 86, 87, 88, 89, 90, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 393, 399, 401, 462, 466, 467, 468, 469, 476, 480, 484, 486], "break": [2, 5, 15, 16, 18, 21, 27, 29, 36, 43, 48, 56, 66, 67, 68, 70, 73, 78, 80, 95, 109, 116, 117, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 217, 250, 274, 275, 277, 300, 304, 329, 333, 335, 339, 399, 401, 424, 467, 470, 474, 476, 484, 486], "step_count": [2, 15, 16, 18, 56, 128, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 223, 258, 277, 468, 469, 470, 471, 476], "32": [2, 28, 40, 63, 68, 69, 70, 79, 80, 111, 117, 138, 145, 165, 166, 172, 173, 189, 217, 235, 284, 285, 286, 287, 288, 290, 291, 296, 305, 310, 311, 315, 316, 319, 322, 331, 402, 422, 467, 469, 470, 472, 473, 482, 483, 484, 486, 487], "33": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 284, 285, 305, 333, 335, 339, 399, 401], "34": [2, 284, 285, 305], "35": [2, 284, 285, 305], "36": [2, 181], "37": [2, 216], "38": [2, 7, 51], "39": [2, 144, 145], "40": [2, 78, 144, 145], "41": [2, 116], "11": [2, 10, 32, 51, 60, 78, 84, 85, 102, 103, 104, 108, 117, 124, 135, 210, 222, 263, 277, 281, 307], "12": [2, 7, 10, 51, 78, 102, 104, 117, 124, 144, 145, 158, 165, 166, 167, 181, 222, 275, 277, 424, 484], "13": [2, 5, 78, 116, 117, 164, 222, 273, 275, 277, 278], "14": [2, 6, 78, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 222, 241, 277, 278], "15": [2, 32, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 222, 277, 321, 347, 377, 484], "16": [2, 3, 15, 16, 21, 29, 36, 43, 48, 56, 66, 67, 73, 78, 109, 117, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 277, 333, 335, 339, 399, 401, 469, 484], "17": [2, 11, 116, 117, 138, 158, 189, 210, 222, 277], "could": [2, 3, 4, 6, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 356, 399, 401, 467, 468, 475, 480, 481, 483, 487], "sai": [2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 310, 333, 335, 339, 399, 401, 480, 483, 487], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 54, 60, 70, 79, 80, 104, 105, 109, 112, 116, 117, 124, 128, 131, 134, 137, 138, 139, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 225, 228, 246, 253, 265, 310, 311, 353, 366, 369, 386, 467, 468, 469, 470, 480, 481, 482], "suggest": [2, 402, 466, 481], "serialenv": [2, 3, 128, 131, 134, 138, 146, 158, 159, 162, 168, 169, 179, 180, 181, 184, 187, 188, 189, 260, 275, 277, 283, 351, 458, 486, 487], "squeez": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 213, 214, 217, 222, 256, 259, 284, 285, 326, 327, 466, 470, 482, 484], "6": [2, 3, 7, 15, 16, 18, 21, 29, 30, 32, 51, 56, 70, 73, 78, 85, 109, 117, 132, 133, 138, 158, 165, 166, 181, 189, 210, 213, 222, 223, 241, 243, 259, 265, 275, 283, 284, 285, 287, 288, 289, 292, 296, 299, 305, 310, 311, 312, 315, 328, 351, 352, 360, 467, 470, 486], "5": [2, 3, 15, 16, 18, 21, 29, 32, 39, 40, 41, 49, 51, 52, 53, 54, 55, 56, 60, 63, 68, 70, 73, 75, 78, 79, 80, 111, 116, 117, 122, 128, 131, 134, 135, 138, 144, 145, 146, 150, 151, 153, 158, 159, 162, 165, 166, 167, 168, 169, 172, 173, 179, 181, 184, 186, 187, 188, 189, 195, 197, 210, 213, 214, 216, 222, 223, 238, 250, 257, 258, 259, 265, 275, 277, 280, 281, 282, 283, 284, 285, 287, 288, 293, 294, 295, 296, 298, 301, 302, 305, 307, 310, 311, 315, 320, 323, 329, 330, 336, 347, 348, 351, 353, 359, 383, 386, 388, 391, 392, 422, 460, 461, 465, 466, 467, 470, 472, 476, 480, 481, 482, 484, 485, 486, 487], "7": [2, 3, 6, 10, 43, 51, 56, 60, 63, 70, 78, 79, 109, 117, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 210, 213, 222, 223, 259, 262, 275, 281, 283, 284, 285, 288, 305, 307, 310, 410, 466, 484, 486], "9": [2, 3, 7, 32, 36, 51, 56, 63, 70, 78, 79, 85, 109, 117, 122, 132, 133, 149, 160, 161, 169, 210, 213, 222, 223, 259, 262, 267, 274, 275, 277, 308, 309, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 393, 399, 402, 432, 462, 466, 467, 480, 481], "18": [2, 51, 116, 117, 165, 166, 172, 173, 265, 277, 311], "19": [2, 116, 117, 122, 222, 277], "independ": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 158, 167, 232, 239, 260, 269, 282, 311, 342, 366, 386, 462, 463, 466, 467, 481, 484, 486], "congruent": 2, "name": [2, 3, 6, 7, 18, 31, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 96, 97, 98, 128, 129, 131, 132, 134, 138, 144, 146, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 164, 167, 168, 169, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 209, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 229, 230, 231, 233, 235, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 277, 278, 300, 304, 333, 335, 336, 339, 348, 353, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 400, 401, 402, 404, 406, 407, 408, 422, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 463, 466, 467, 468, 469, 470, 473, 474, 475, 478, 480, 481, 482, 483, 487], "randomcroptensordict": [2, 466], "unlik": [2, 34, 70, 79, 80, 115, 138, 150, 151, 172, 173, 189, 280, 282, 335, 351, 376, 386, 424, 461, 467, 470, 472, 474, 486], "stop": [2, 3, 15, 16, 18, 21, 27, 29, 72, 109, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 468, 474, 480, 481, 486, 487], "signal": [2, 3, 15, 16, 18, 21, 32, 51, 109, 116, 117, 122, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 209, 217, 223, 229, 238, 258, 261, 462, 466, 468, 480, 481, 484, 487], "disk": [2, 3, 51, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 102, 111, 185, 400, 442, 463, 466, 467, 469, 470, 474, 475, 480, 484], "dump": [2, 3, 11, 45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 85, 96, 97, 98, 100, 102, 103, 104, 105, 111, 118, 120, 124, 185, 400, 422, 423, 424, 475, 476, 480], "json": [2, 195, 478], "metadata": [2, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 369, 391, 468, 471, 473, 474, 480, 481, 487], "anticip": [2, 225, 228], "compli": [2, 282, 461], "back": [2, 14, 17, 20, 24, 26, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 199, 264, 273, 312, 343, 348, 349, 352, 353, 354, 355, 356, 468, 470, 480, 481, 482, 484], "exact": [2, 3, 32, 158, 302], "statu": [2, 3, 24, 134], "prioriti": [2, 4, 63, 79, 80, 102, 103, 104, 105, 108, 109, 118, 120, 124, 369, 370, 371, 373, 374, 375, 376, 382, 387, 389, 391, 392, 402, 463, 466, 467, 484], "heap": 2, "under": [2, 3, 4, 27, 36, 43, 48, 51, 56, 66, 67, 72, 73, 78, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 238, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 282, 333, 335, 339, 343, 348, 349, 352, 353, 354, 355, 356, 384, 399, 401, 404, 405, 406, 407, 408, 424, 462, 466, 467, 472, 480, 482, 487], "hood": [2, 3, 27, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 282, 482], "naiv": [2, 270, 471], "just": [2, 3, 4, 85, 120, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 149, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 184, 187, 188, 189, 209, 213, 220, 260, 278, 311, 433, 460, 463, 466, 467, 468, 469, 470, 471, 472, 474, 478, 480, 481, 482, 484, 486, 487], "public": [2, 69, 119, 245, 272], "serializ": [2, 30], "consum": [2, 115, 117, 351, 467, 468, 474, 481, 484], "much": [2, 3, 8, 15, 16, 21, 63, 79, 108, 109, 158, 167, 383, 386, 468, 470, 471, 475, 480, 481, 482, 484, 487], "duplic": [2, 36, 43, 48, 56, 66, 67, 73, 78, 115, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 367, 369, 371, 376, 382, 384, 387, 389, 391, 392, 399, 401, 402], "observ": [2, 3, 8, 15, 16, 18, 21, 27, 29, 30, 33, 45, 51, 56, 68, 76, 78, 85, 99, 100, 107, 109, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 203, 208, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 232, 234, 235, 236, 237, 239, 241, 242, 243, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 283, 286, 287, 288, 289, 290, 291, 294, 297, 300, 304, 310, 315, 316, 319, 320, 321, 323, 324, 343, 344, 345, 346, 347, 348, 351, 352, 353, 360, 361, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 382, 383, 386, 387, 388, 389, 391, 392, 401, 402, 404, 405, 406, 407, 408, 422, 424, 452, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 475, 476, 479, 480, 481, 482, 484, 486, 487], "plu": [2, 15, 16, 21, 72, 158, 167, 179, 482], "three": [2, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 66, 95, 186, 369, 461, 463, 468, 470, 471, 472, 480, 481, 482, 484, 487], "flatstoragecheckpoint": 2, "discard": [2, 3, 84, 138, 208, 270, 423, 484, 487], "compress": 2, "At": [2, 262, 297, 306, 467, 468, 469, 474, 479, 482, 483], "correct": [2, 4, 62, 64, 71, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 191, 194, 217, 237, 399, 400, 445, 468, 469, 478], "addit": [2, 3, 4, 14, 17, 24, 26, 36, 43, 48, 56, 58, 66, 67, 73, 78, 85, 97, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 221, 245, 260, 264, 266, 267, 270, 272, 277, 279, 298, 333, 335, 336, 339, 347, 351, 355, 365, 368, 384, 386, 399, 401, 404, 422, 424, 462, 466, 467, 470, 471, 480, 481, 484], "nestedstoragecheckpoint": 2, "represent": [2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 103, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 245, 270, 272, 277, 333, 335, 339, 366, 386, 399, 401, 466, 482, 483, 487], "appar": [2, 3, 435], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 97, 99, 100, 107, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 205, 210, 220, 227, 235, 238, 260, 268, 279, 285, 291, 294, 310, 316, 321, 323, 343, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 363, 366, 371, 373, 374, 375, 386, 391, 392, 402, 461, 462, 467, 468, 469, 470, 471, 472, 473, 480, 481, 482, 487], "assumpt": [2, 3, 83, 482, 484], "accur": [2, 7, 467, 482, 484], "truncat": [2, 3, 15, 16, 18, 21, 45, 47, 51, 56, 57, 65, 76, 78, 81, 84, 97, 99, 100, 107, 109, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 170, 172, 173, 179, 180, 181, 184, 187, 188, 189, 193, 209, 210, 229, 230, 235, 240, 247, 250, 254, 258, 260, 267, 268, 277, 300, 304, 330, 335, 339, 351, 404, 410, 466, 468, 471, 480, 487], "marl": [2, 149, 175, 217, 257, 261, 310, 311, 312, 375, 389, 462, 471, 480, 481], "extra": [2, 10, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 217, 274, 275, 277, 333, 335, 339, 399, 401, 431, 461, 468, 469, 484], "fail": [2, 7, 28, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 211], "concret": [2, 466, 468, 478], "set_se": [2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 51, 56, 76, 78, 128, 129, 130, 131, 134, 138, 144, 145, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 213, 222, 223, 241, 248, 253, 259, 261, 267, 277, 460, 470, 474, 476, 482, 486, 487], "manual_se": [2, 3, 34, 45, 52, 53, 63, 70, 76, 78, 79, 80, 103, 116, 117, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 211, 213, 222, 223, 227, 241, 250, 253, 259, 261, 275, 277, 297, 308, 309, 317, 320, 321, 343, 349, 356, 359, 366, 367, 369, 370, 374, 382, 389, 470, 474, 476, 480, 481, 482, 486, 487], "200": [2, 15, 16, 18, 27, 36, 43, 45, 48, 56, 66, 67, 68, 73, 76, 78, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 250, 277, 287, 288, 295, 324, 325, 333, 335, 339, 399, 401, 422, 424, 466, 469, 470, 474, 476, 484], "22": [2, 29, 116, 117, 273], "rb_test": 2, "_storag": [2, 483, 484], "max_siz": [2, 51, 63, 70, 78, 79, 80, 102, 103, 104, 105, 116, 117, 118, 122, 124, 468, 474], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 39, 62, 64, 71, 85, 96, 97, 98, 153, 185, 222, 265, 291, 308, 309, 310, 365, 369, 400, 422, 466, 468, 470, 480, 481], "state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 274, 275, 277, 310, 311, 333, 335, 339, 369, 389, 399, 400, 401, 456, 460, 463, 466, 467, 487], "load_state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 274, 275, 277, 333, 335, 339, 369, 389, 399, 400, 401, 463, 466], "drawback": 2, "struggl": 2, "big": [2, 468, 474, 484, 487], "sequenti": [2, 9, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 216, 237, 277, 333, 335, 339, 342, 344, 345, 346, 352, 357, 358, 363, 366, 367, 369, 375, 382, 386, 387, 388, 389, 391, 399, 401, 461, 468, 469, 472, 481, 482, 483, 486, 487], "known": [2, 3, 5, 7, 8, 78, 138, 189, 260, 411, 412, 466, 467, 471], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 280, 466, 467, 473], "essenti": [2, 3, 13, 22, 23, 25, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 467, 471, 480, 482, 484], "purpos": [2, 3, 7, 11, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 298, 366, 368, 380, 383, 386, 388, 399, 452, 466, 468, 469, 470, 473, 475, 480, 481, 483, 487], "guid": [2, 11, 160, 161, 165, 166, 259, 459, 466, 481, 486], "explan": [2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 282, 333, 335, 339, 399, 401], "effect": [2, 3, 18, 29, 30, 36, 40, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 109, 111, 114, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 217, 223, 267, 277, 282, 333, 335, 339, 368, 386, 399, 401, 442, 461, 466, 472, 480, 484, 487], "realm": [2, 472], "As": [2, 3, 4, 56, 70, 79, 80, 83, 111, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 250, 292, 356, 404, 461, 466, 467, 468, 469, 470, 471, 473, 474, 480, 481, 482, 483, 484, 486, 487], "practition": 2, "often": [2, 3, 8, 312, 368, 381, 384, 386, 399, 442, 466, 467, 471, 473, 482, 484, 487], "encount": [2, 4, 239, 351, 459, 467, 472, 482], "situat": [2, 150, 151, 187, 193], "sometim": [2, 3, 83, 469, 487], "variabl": [2, 3, 4, 7, 8, 20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 73, 74, 75, 83, 86, 87, 88, 89, 90, 97, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 150, 151, 154, 155, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 184, 187, 188, 189, 193, 262, 266, 275, 298, 299, 300, 302, 303, 304, 307, 344, 345, 346, 384, 387, 432, 463, 467], "immedi": [2, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 403, 480, 481], "199": 2, "info": [2, 3, 15, 16, 63, 68, 69, 70, 79, 80, 85, 108, 109, 111, 114, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 150, 151, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 184, 187, 188, 189, 235, 268, 270, 273, 276, 431, 471, 476, 478, 480, 481, 484, 486], "glanc": [2, 471], "seem": [2, 466, 469, 471], "togeth": [2, 3, 11, 15, 16, 18, 21, 22, 23, 25, 27, 51, 66, 72, 74, 75, 103, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 246, 257, 266, 298, 300, 302, 304, 331, 344, 345, 346, 361, 461, 467, 469, 471, 480], "less": [2, 24, 153, 332, 454, 455, 462, 468, 469, 484, 486], "omit": [2, 146, 188, 279, 297, 321, 438, 468, 473, 482, 484], "proper": [2, 3, 4, 6, 7, 335, 339, 404, 405, 406, 407, 467, 468, 478, 480, 481, 482, 484], "imposs": [2, 3, 70, 79, 80, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 366, 368, 383, 386, 388], "determin": [2, 3, 17, 51, 63, 79, 85, 108, 109, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 184, 187, 188, 189, 245, 272, 310, 321, 335, 339, 369, 467, 472, 480, 481], "complic": [2, 43, 66, 78, 333, 335, 339, 399, 482, 484, 487], "matter": [2, 42, 474], "inconsist": [2, 487], "miss": [2, 3, 4, 6, 7, 36, 40, 43, 48, 51, 56, 66, 67, 73, 78, 128, 131, 134, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 235, 265, 267, 273, 277, 278, 333, 335, 339, 357, 358, 366, 369, 389, 399, 401, 459, 466, 469], "primari": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 146, 188, 474], "elimin": [2, 3, 471], "upon": [2, 3, 8, 20, 480, 482], "canon": 2, "definit": [2, 60, 118, 310, 478], "markov": [2, 3, 471, 487], "mdp": [2, 208, 471, 482], "context": [2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 111, 117, 128, 131, 134, 135, 138, 146, 155, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 260, 269, 277, 282, 300, 304, 311, 313, 333, 335, 339, 342, 347, 397, 398, 399, 401, 404, 405, 406, 407, 409, 417, 424, 432, 437, 460, 461, 462, 466, 467, 468, 469, 470, 480, 481, 482, 483, 484, 486], "condit": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 187, 222, 223, 259, 274, 348, 349, 351, 353, 354, 365, 462, 466, 480, 482, 484], "complet": [2, 7, 9, 24, 29, 30, 115, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 192, 217, 258, 401, 459, 462, 466, 468, 471, 478, 479], "termin": [2, 3, 7, 15, 16, 18, 21, 29, 45, 47, 51, 56, 57, 68, 72, 76, 78, 99, 100, 107, 116, 128, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 150, 151, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 184, 187, 188, 189, 193, 209, 210, 213, 214, 229, 235, 247, 260, 268, 277, 281, 300, 304, 307, 351, 357, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 466, 467, 468, 478, 480, 481, 482, 486, 487], "reward": [2, 3, 15, 16, 18, 42, 43, 45, 47, 51, 56, 57, 62, 71, 72, 76, 78, 84, 85, 95, 108, 109, 122, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 210, 211, 214, 215, 220, 221, 225, 226, 228, 229, 230, 235, 237, 238, 239, 243, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 264, 266, 267, 268, 269, 271, 272, 274, 275, 277, 281, 300, 307, 347, 351, 361, 366, 367, 369, 370, 371, 373, 374, 375, 378, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 435, 436, 437, 440, 456, 460, 462, 463, 466, 467, 468, 469, 470, 471, 475, 478, 480, 481, 482, 486, 487], "imit": [2, 3, 380], "inform": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 128, 131, 134, 135, 138, 141, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 283, 284, 285, 305, 311, 333, 335, 339, 399, 400, 401, 461, 462, 463, 466, 467, 468, 469, 470, 471, 478, 480, 481, 482, 484, 486], "stateless": [2, 3, 30, 51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 214, 223, 275, 337, 338, 384, 399, 422, 466, 471, 482, 487], "simul": [2, 3, 5, 7, 8, 83, 129, 130, 131, 140, 144, 145, 164, 172, 173, 204, 281, 307, 460, 461, 466, 468, 470, 471, 475, 480, 481], "furthermor": [2, 480, 481], "certain": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 222, 223, 233, 258, 267, 277, 297, 299, 303, 333, 335, 339, 383, 399, 401, 466, 467, 468, 470, 476, 480, 481, 487], "composit": [2, 3, 34, 35, 37, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 92, 97, 114, 120, 127, 128, 131, 134, 136, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 209, 211, 214, 225, 226, 227, 228, 230, 235, 237, 239, 247, 248, 254, 258, 260, 264, 265, 266, 268, 275, 277, 279, 281, 307, 343, 352, 356, 358, 359, 363, 366, 386, 401, 458, 466, 468, 472, 478, 482], "uniform": [2, 63, 79, 108, 109, 335, 339, 480], "unambigu": 2, "distinguish": [2, 3, 70, 79, 80, 150, 151, 172, 173], "happen": [2, 3, 24, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 278, 321, 467, 470, 473, 474, 475, 483, 487], "everyth": [2, 467, 468, 469, 475, 476], "belong": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 273, 274, 356, 466, 474, 481], "rule": [2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 225, 228, 277, 333, 335, 339, 356, 399, 401, 461, 468], "field": [2, 3, 15, 16, 18, 21, 29, 30, 32, 36, 40, 43, 45, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 85, 96, 97, 98, 102, 103, 104, 108, 116, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 214, 225, 228, 229, 230, 235, 243, 247, 248, 250, 254, 257, 258, 260, 265, 267, 268, 277, 281, 283, 293, 294, 300, 304, 307, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 360, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 446, 459, 461, 467, 482], "taken": [2, 3, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 210, 249, 308, 309, 462, 466, 468, 469, 472, 480, 481, 482], "is_shar": [2, 3, 15, 16, 18, 29, 32, 40, 43, 45, 51, 62, 64, 65, 66, 71, 72, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 102, 103, 104, 108, 116, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 184, 185, 187, 188, 189, 193, 208, 210, 214, 225, 228, 229, 230, 235, 243, 247, 248, 250, 254, 257, 258, 260, 268, 274, 281, 283, 293, 294, 300, 304, 307, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 360, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 402, 461, 482], "envbas": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 51, 85, 128, 131, 135, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 211, 214, 225, 228, 240, 247, 248, 266, 267, 274, 277, 281, 300, 304, 306, 307, 351, 401, 437, 446, 447, 448, 452, 454, 455, 456, 458, 460, 471], "brought": [2, 468, 469, 472], "step_mdp": [2, 3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 300, 304, 458, 469, 471, 482, 486, 487], "count": [2, 3, 15, 16, 18, 21, 29, 51, 56, 85, 134, 135, 222, 258, 265, 275, 321, 437, 442, 445, 466, 467, 468, 469, 484, 487], "trigger": [2, 7, 43, 66, 78, 187, 275, 333, 335, 339, 399], "turn": [2, 22, 23, 25, 27, 30, 40, 41, 49, 62, 64, 67, 71, 73, 75, 85, 96, 97, 98, 131, 145, 158, 169, 185, 222, 234, 266, 269, 273, 348, 400, 404, 422, 437, 462, 466, 467, 469, 472, 482, 483], "retain": [2, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "regard": [2, 294, 349, 366, 376, 386, 466, 468, 482], "expand": [2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 116, 117, 185, 214, 260, 292, 355, 358, 367, 369, 382, 384, 387, 389, 391, 392, 399, 400, 480, 481, 482, 484, 486], "recur": [2, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 404, 405, 406, 407, 408, 472], "anyth": [2, 4, 15, 16, 18, 21, 22, 23, 25, 27, 462], "els": [2, 129, 130, 193, 214, 298, 299, 302, 303, 315, 461, 463, 466, 467, 468, 469, 478, 480, 481, 482, 483], "repetit": [2, 468, 471, 474], "embed": [2, 245, 270, 271, 272, 287, 322, 343, 344, 345, 346, 355, 356, 360, 483], "strictli": [2, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 238, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401, 466, 468], "enforc": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 115, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 336, 339, 357, 368, 369, 386, 389, 399, 401, 482], "n_action": [2, 351, 367, 369, 371, 373, 385, 389], "rightmost": [2, 462], "n_ob": [2, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 237, 351, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 473], "estim": [2, 4, 109, 116, 117, 180, 181, 184, 187, 193, 194, 229, 237, 287, 329, 344, 345, 346, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 399, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 462, 467, 468, 472, 473, 480, 481], "subsequ": [2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 277, 333, 335, 339, 399, 401, 469, 480], "proce": [2, 480], "state_valu": [2, 345, 346, 360, 368, 374, 382, 383, 386, 387, 389, 404, 405, 406, 407, 409, 411, 413, 415, 417, 418, 420, 461, 466, 481], "f": [2, 15, 16, 18, 21, 29, 129, 130, 138, 144, 145, 179, 189, 197, 262, 278, 303, 365, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 466, 467, 468, 469, 476, 480, 481, 482, 484, 487], "next_state_valu": [2, 391, 392, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 458], "broadcast": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 292, 375, 389], "left": [2, 58, 109, 116, 182, 183, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 222, 224, 225, 226, 230, 237, 239, 245, 247, 248, 254, 258, 261, 264, 266, 268, 270, 272, 275, 277, 297, 310, 401, 467, 468, 470, 474, 475], "would": [2, 3, 36, 43, 48, 56, 66, 67, 72, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 298, 300, 302, 304, 305, 310, 333, 335, 339, 356, 399, 401, 462, 463, 467, 468, 469, 471, 473, 474, 482, 484, 486, 487], "best": [2, 5, 9, 142, 300, 304, 480, 481, 484, 486], "bug": [2, 4], "worst": [2, 467], "twice": [2, 8, 117], "feasibl": 2, "mostli": [2, 3, 21, 320, 424, 462, 475, 484, 487], "eas": [2, 3, 480, 481], "flat": [2, 122, 404], "manner": [2, 138, 189, 195, 245, 270, 461, 466, 467, 468, 474, 479, 482, 484], "ted2flat": [2, 45, 458], "flat2t": [2, 458], "unflatten": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 214, 351], "deseri": [2, 3, 45], "posit": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 111, 128, 131, 132, 133, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 232, 233, 235, 256, 257, 258, 261, 265, 267, 269, 277, 333, 335, 339, 369, 389, 399, 401, 462, 468, 480, 481, 482, 484], "both": [2, 3, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 128, 131, 134, 135, 137, 138, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 170, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 210, 217, 235, 248, 264, 265, 267, 277, 284, 285, 300, 303, 304, 305, 310, 311, 333, 335, 339, 344, 345, 346, 349, 354, 366, 368, 369, 370, 374, 375, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 404, 437, 461, 466, 468, 470, 471, 473, 478, 480, 481, 482, 483, 484, 487], "mark": [2, 3, 18, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 262, 300, 304, 404, 406, 407, 474, 484], "identifi": [2, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 65, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 478], "abov": [2, 3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 86, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 266, 277, 301, 329, 330, 333, 335, 339, 365, 399, 401, 462, 463, 466, 468, 470, 471, 472, 480, 481, 482, 487], "output": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 85, 97, 109, 116, 117, 128, 131, 132, 133, 134, 137, 138, 139, 140, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 209, 214, 215, 217, 220, 221, 223, 224, 225, 226, 228, 230, 232, 235, 237, 239, 241, 245, 247, 248, 253, 254, 257, 258, 261, 262, 264, 266, 267, 268, 270, 272, 273, 275, 277, 279, 284, 285, 286, 287, 288, 291, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 310, 311, 318, 320, 321, 323, 332, 333, 335, 339, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 408, 422, 424, 433, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 475, 478, 479, 480, 481, 482, 483, 486, 487], "typic": [2, 3, 4, 8, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 229, 259, 277, 318, 320, 333, 335, 339, 352, 367, 369, 384, 386, 389, 399, 401, 460, 461, 462, 463, 468, 470, 471, 473, 474, 480, 481, 482], "adjust": [2, 11, 260, 466, 480, 481, 482], "grumodul": [2, 216, 260, 342, 363, 469], "lstmmodul": [2, 300, 342, 469, 470], "skip": [2, 3, 17, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 223, 233, 235, 239, 265, 267, 277, 333, 335, 339, 352, 356, 369, 384, 389, 399, 401, 404, 405, 406, 407, 423, 424, 435, 437, 466, 467, 482], "accumul": [2, 8, 277], "upcom": [2, 384, 399, 413, 414, 415, 416, 418, 419, 420, 421, 466], "popular": [2, 3, 460, 461, 469, 473, 481], "rainbow": 2, "multistep": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 277, 458, 467], "shift": [2, 45, 47, 56, 57, 76, 99, 100, 107, 362, 404, 405, 406, 407, 468], "approxim": [2, 481, 487], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 15, 21, 217, 291, 319, 366, 372, 385, 386, 433, 456, 460, 468, 469, 481, 484], "2x": 2, "small": [2, 117, 270, 275, 280, 466, 468, 470, 480, 481, 487], "clearer": [2, 470, 472], "lazi": [2, 3, 74, 75, 92, 93, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 245, 270, 284, 310, 313, 357, 358, 466, 467, 472, 474, 479, 484, 487], "certainli": 2, "welcom": [2, 471], "wrapper": [2, 3, 21, 62, 64, 71, 72, 79, 80, 85, 96, 97, 98, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 184, 185, 187, 188, 189, 193, 273, 278, 282, 283, 332, 334, 335, 339, 347, 351, 356, 361, 400, 404, 429, 430, 431, 456, 458, 468, 469, 471, 478, 480, 481, 483, 486, 487], "around": [2, 5, 7, 21, 79, 80, 128, 131, 134, 138, 146, 152, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 282, 320, 334, 351, 356, 404, 460, 466, 467, 478, 481, 487], "selecttransform": [2, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "excludetransform": [2, 254, 484], "promptli": 2, "virtual": [2, 3, 137], "instal": [2, 3, 5, 10, 22, 23, 25, 67, 78, 128, 131, 134, 138, 143, 146, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 426, 442, 459, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 487], "respons": [2, 3, 8, 15, 16, 18, 20, 22, 25, 27, 29, 30, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 195, 197, 335, 339, 442, 460, 473, 474, 478, 487], "d4rl": 2, "repositori": [2, 7, 172, 173, 480, 481], "wheel": [2, 468], "publish": 2, "openml": [2, 155], "scikit": [2, 155], "panda": 2, "raw": [2, 3, 4, 72, 199, 235, 264, 268, 301, 329, 330, 467, 470, 474, 482], "go": [2, 3, 7, 103, 149, 158, 179, 223, 246, 250, 347, 410, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "modifi": [2, 3, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 84, 97, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 217, 221, 223, 232, 235, 237, 245, 260, 266, 267, 270, 272, 275, 277, 312, 321, 333, 335, 339, 347, 355, 356, 399, 401, 445, 460, 462, 466, 467, 468, 470, 471, 480, 481, 482], "fly": [2, 217, 274, 383, 462, 468, 482, 484, 487], "least": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 220, 475, 487], "pre": [2, 7, 28, 36, 43, 48, 56, 66, 67, 73, 78, 84, 104, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 245, 264, 270, 272, 277, 333, 335, 339, 399, 401, 487], "conisder": 2, "per": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 30, 109, 116, 122, 142, 144, 145, 158, 160, 161, 220, 239, 253, 284, 285, 295, 297, 310, 311, 351, 424, 426, 429, 431, 442, 454, 455, 466, 467, 468, 469, 470, 472, 473, 476, 480, 481, 484, 486], "pipelin": [2, 3, 7, 138, 189, 460, 461, 462, 468], "replac": [2, 3, 6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 109, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 213, 227, 229, 236, 274, 275, 277, 297, 333, 335, 339, 367, 369, 375, 382, 387, 389, 391, 392, 399, 401, 404, 405, 406, 407, 461, 480, 484, 486], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 239, 250, 260, 267, 277, 279, 321, 333, 335, 339, 351, 399, 400, 401, 440, 461, 463, 467, 468, 469, 472, 475, 482, 484, 487], "produc": [2, 3, 40, 41, 49, 51, 75, 116, 179, 210, 213, 214, 284, 285, 305, 311, 317, 344, 346, 347, 356, 424, 468, 469, 470, 471, 472, 474, 484, 487], "download": [2, 7, 10, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 142, 245, 272, 424, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "forc": [2, 3, 6, 7, 15, 16, 21, 22, 23, 25, 27, 159, 467, 480, 481, 482], "robosetexperiencereplai": [2, 116, 117], "fk1": 2, "v4": [2, 138, 158, 189, 210, 249, 413, 414, 415, 416, 418, 419, 420, 421, 466, 468, 483, 486], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 276], "obs_norm": 2, "norm": [2, 4, 8, 129, 130, 280, 442, 466, 467, 468, 480, 481, 482], "num_work": [2, 24, 26, 62, 64, 84, 95, 153, 158, 167, 466, 467], "os": [2, 64, 84, 95, 467], "cpu_count": [2, 64, 84, 95], "num_chunk": 2, "1000": [2, 4, 18, 29, 51, 70, 78, 102, 103, 108, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 274, 279, 297, 320, 321, 352, 356, 381, 466, 467, 468, 469, 470, 472, 474, 476, 482, 483, 484], "mp_start_method": [2, 158, 167, 265, 467, 486], "fork": [2, 5, 466, 467, 468, 469, 480, 481, 483, 486], "recreat": [2, 482], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 33, 70, 79, 80, 109, 111, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 194, 214, 237, 460, 470, 474, 483], "grain": [2, 3, 70, 79, 80, 109, 111, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 214], "nomenclatur": 2, "compact": [2, 51, 76, 99, 100, 107], "propos": [2, 217, 229, 282, 306, 381, 390, 461, 469, 484], "replaybufferensembl": [2, 114, 120, 127], "primit": [2, 3, 4, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 460], "individu": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 109, 111, 122, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 275, 277, 333, 335, 339, 368, 383, 386, 399, 401, 460, 466, 481], "dummi": [2, 3, 169, 193, 422, 466, 470, 474, 487], "semant": [2, 74, 75, 137, 139, 483], "ident": [2, 3, 15, 16, 18, 56, 62, 64, 70, 71, 78, 79, 80, 85, 96, 97, 98, 102, 111, 116, 128, 131, 134, 137, 138, 139, 146, 153, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 186, 187, 188, 189, 229, 257, 266, 275, 280, 310, 311, 367, 369, 382, 387, 389, 391, 392, 400, 404, 405, 406, 407, 454, 455, 467, 471, 480, 481], "another_kei": [2, 111], "renam": [2, 3, 62, 64, 71, 85, 96, 97, 98, 111, 185, 208, 248, 250, 400, 466], "resiz": [2, 3, 111, 217, 467, 469, 470, 471, 484, 487], "imag": [2, 3, 4, 7, 11, 96, 217, 219, 222, 224, 245, 263, 272, 305, 422, 424, 466, 467, 470, 471, 475, 481, 483, 487], "comops": 2, "totensorimag": [2, 3, 111, 217, 249, 467, 469, 470, 484, 486, 487], "renametransform": [2, 3, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217], "rb0": [2, 111], "in_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 111, 128, 129, 130, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 203, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 281, 283, 293, 300, 304, 307, 322, 331, 332, 333, 335, 339, 343, 344, 345, 346, 347, 348, 351, 352, 353, 355, 356, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 380, 382, 383, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 423, 424, 452, 461, 466, 467, 468, 469, 470, 472, 473, 476, 479, 480, 481, 482, 483, 484, 486, 487], "pixel": [2, 3, 7, 40, 111, 131, 132, 133, 137, 139, 140, 164, 217, 219, 224, 229, 232, 234, 241, 243, 245, 249, 263, 270, 272, 287, 315, 316, 422, 424, 466, 467, 469, 470, 475, 480, 483, 484, 486, 487], "rb1": [2, 111], "out_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 111, 128, 129, 130, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 203, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 281, 283, 293, 294, 300, 304, 307, 322, 323, 331, 332, 333, 335, 339, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 366, 367, 368, 369, 374, 375, 380, 382, 383, 386, 387, 388, 389, 391, 399, 401, 402, 404, 405, 406, 407, 422, 424, 437, 452, 461, 466, 467, 468, 469, 470, 472, 476, 479, 480, 481, 482, 483, 484, 486, 487], "pixels33": [2, 111], "data0": [2, 103, 111], "244": [2, 111, 245, 272], "data1": [2, 103, 111, 486], "_": [2, 8, 63, 68, 69, 70, 79, 80, 103, 111, 131, 135, 142, 172, 173, 193, 218, 225, 227, 228, 237, 241, 248, 263, 274, 277, 320, 343, 355, 356, 360, 365, 366, 367, 369, 370, 374, 375, 382, 386, 387, 389, 391, 392, 404, 405, 406, 407, 426, 466, 467, 468, 469, 470, 476, 480, 481, 482, 484, 486], "parent": [2, 3, 27, 36, 43, 47, 48, 56, 58, 66, 67, 73, 78, 83, 85, 111, 120, 127, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 217, 218, 221, 222, 223, 226, 229, 232, 233, 239, 241, 245, 253, 258, 259, 260, 261, 265, 266, 269, 270, 277, 300, 304, 333, 335, 339, 344, 363, 384, 386, 399, 401, 408, 422, 424, 466, 474, 482, 486, 487], "basic": [2, 3, 19, 152, 461, 468, 473, 474, 476, 480, 486, 487], "properti": [2, 3, 14, 17, 19, 20, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 111, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 265, 266, 267, 274, 275, 277, 292, 301, 309, 313, 317, 328, 329, 330, 333, 335, 339, 351, 366, 369, 384, 386, 388, 389, 399, 400, 401, 472, 474, 482, 484], "input": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 119, 125, 128, 131, 134, 138, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 282, 283, 284, 285, 287, 288, 289, 290, 293, 294, 297, 298, 299, 300, 302, 303, 304, 305, 310, 311, 312, 313, 314, 321, 323, 324, 325, 326, 327, 329, 332, 333, 335, 339, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 436, 440, 445, 452, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 478, 480, 481, 482, 486, 487], "send": [2, 3, 8, 20, 31, 162, 168, 431, 458, 486], "receiv": [2, 3, 14, 17, 19, 20, 24, 26, 31, 36, 43, 48, 56, 66, 67, 72, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 266, 267, 275, 277, 305, 333, 335, 339, 399, 401, 410, 458, 462, 466, 468, 473, 479, 482], "spawn": [2, 3, 4, 22, 28, 142, 153, 158, 167, 265, 467, 480, 481], "check_env_spec": [2, 3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 210, 235, 247, 268, 422, 458, 468, 480, 481, 482], "saniti": [2, 3, 7, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 468], "make_composite_from_td": [2, 83, 458, 482], "fall": [2, 4, 14, 17, 20, 24, 26, 31], "categori": [2, 40, 461, 463], "bound": [2, 3, 4, 27, 36, 38, 40, 43, 48, 56, 66, 67, 73, 78, 86, 128, 131, 134, 138, 146, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 220, 240, 274, 277, 279, 297, 321, 324, 325, 333, 335, 339, 343, 348, 349, 352, 353, 354, 355, 356, 359, 366, 367, 369, 370, 382, 386, 387, 389, 391, 392, 399, 401, 458, 461, 466, 467, 468, 470, 480, 482, 486, 487], "unbound": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 79, 80, 83, 85, 87, 88, 89, 90, 96, 97, 98, 111, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 193, 202, 211, 214, 225, 228, 247, 260, 281, 307, 343, 355, 358, 360, 388, 400, 458, 478, 482, 484], "boundeddiscret": [2, 37, 40], "boundedcontinu": [2, 28, 37, 40, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 235, 238, 268], "unboundeddiscret": [2, 86, 159, 235, 458], "unboundedcontinu": [2, 86, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 247, 260, 358, 363, 458], "implicitli": 2, "onehot": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 61, 74, 75, 83, 86, 87, 88, 89, 90, 129, 130, 137, 139, 140, 143, 144, 145, 153, 154, 156, 157, 164, 170, 171, 294, 323, 348, 353, 371, 373, 374, 375, 402, 458, 461], "multionehot": [2, 52, 53, 55, 371, 374, 375, 402, 458], "multicategor": [2, 53, 54, 55, 458], "binari": [2, 3, 7, 35, 36, 60, 170, 211, 215, 294, 323, 348, 349, 353, 354, 371, 374, 375, 402, 458, 478], "concept": [2, 3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 320, 467, 478, 484], "arbitrari": [2, 3, 34, 60, 70, 128, 131, 134, 138, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 213, 462, 466, 467, 482, 484], "combin": [2, 4, 46, 67, 391, 467, 470, 475, 484, 486], "nevertheless": [2, 3, 468, 471, 484], "otherwis": [2, 3, 12, 15, 16, 18, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 109, 111, 116, 117, 128, 129, 130, 131, 134, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 218, 222, 223, 227, 235, 241, 259, 260, 261, 265, 266, 267, 274, 277, 278, 280, 282, 298, 301, 302, 310, 311, 329, 330, 333, 335, 339, 342, 348, 353, 356, 359, 367, 369, 378, 384, 385, 389, 399, 400, 401, 404, 406, 407, 437, 439, 462, 463, 466, 467, 468, 469, 478, 482, 487], "similarli": [2, 3, 27, 36, 43, 48, 56, 66, 67, 73, 78, 115, 120, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 239, 277, 310, 333, 335, 339, 357, 358, 374, 382, 399, 401, 404, 460, 487], "possess": [2, 83], "unsqueez": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 109, 202, 211, 214, 217, 218, 263, 269, 466, 469, 470, 480, 481, 482], "move": [2, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 128, 131, 134, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 221, 226, 245, 260, 266, 267, 270, 272, 274, 275, 277, 305, 333, 335, 339, 355, 399, 401, 440, 466, 467, 469, 471, 487], "unbind": [2, 62, 63, 64, 70, 71, 79, 80, 85, 96, 97, 98, 185, 239, 351, 400], "said": [2, 468], "neg": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 63, 66, 79, 83, 108, 109, 191, 217, 232, 246, 257, 269, 368, 377, 383, 386, 404, 406, 407, 462, 468, 480, 481, 482], "seen": [2, 3, 22, 23, 25, 27, 40, 41, 49, 75, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 226, 462, 466, 467, 469, 473, 480, 481, 484], "predict": [2, 3, 56, 72, 293, 295, 306, 307, 347, 361, 366, 368, 373, 376, 378, 379, 383, 386, 388, 399, 403, 466, 467, 473], "deprec": [2, 32, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 66, 67, 73, 78, 88, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 274, 277, 333, 335, 339, 366, 368, 369, 371, 374, 375, 376, 382, 383, 386, 387, 388, 389, 399, 401, 402, 404, 405, 406, 407, 412, 487], "mont": [2, 180, 181, 184, 187, 193, 366, 368, 383, 386, 399, 401, 466], "carlo": [2, 180, 181, 184, 187, 193, 366, 368, 383, 386, 399, 401, 466], "mct": [2, 51], "act": [2, 3, 4, 116, 117, 160, 161, 267, 293, 311, 367, 369, 370, 382, 387, 389, 391, 392, 469, 470, 480, 481, 484, 486], "tradit": [2, 473, 480], "integ": [2, 15, 16, 18, 21, 29, 30, 32, 48, 52, 54, 56, 60, 66, 67, 72, 73, 85, 109, 116, 117, 118, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189, 195, 196, 210, 213, 229, 233, 241, 258, 275, 284, 285, 305, 310, 311, 369, 374, 382, 389, 462, 470, 484], "advanc": [2, 3, 27, 63, 70, 79, 80, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 471, 474, 484], "rebuild": [2, 51], "initi": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 96, 97, 98, 111, 122, 128, 131, 134, 138, 146, 156, 157, 158, 159, 162, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 216, 235, 241, 245, 260, 267, 270, 275, 276, 277, 278, 279, 280, 281, 297, 298, 299, 302, 303, 307, 310, 311, 312, 313, 314, 321, 333, 335, 337, 338, 339, 351, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 456, 461, 462, 466, 467, 469, 471, 472, 474, 478, 480, 482, 487], "pair": [2, 3, 56, 62, 64, 66, 71, 78, 85, 96, 97, 98, 128, 131, 132, 133, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 250, 260, 265, 300, 344, 352, 356, 384, 399, 400, 404, 405, 406, 407, 408, 461, 462, 466, 467, 468, 472, 473, 479, 482, 487], "term": [2, 72, 103, 194, 237, 302, 303, 313, 314, 365, 366, 375, 444, 467, 468, 471, 472, 481], "pseudocod": [2, 3], "next_stat": [2, 462], "associ": [2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 68, 71, 73, 75, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 277, 324, 333, 335, 338, 339, 399, 400, 401, 456, 466, 484], "sens": [2, 4, 62, 64, 71, 85, 96, 97, 98, 185, 193, 217, 400, 474, 482], "hard": [2, 3, 7, 122, 132, 133, 158, 381, 467, 487], "know": [2, 3, 4, 9, 63, 70, 79, 80, 137, 139, 279, 384, 387, 399, 437, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 481, 484], "next_td": 2, "Of": [2, 3, 7, 459, 482, 487], "cours": [2, 3, 4, 459, 482, 487], "handi": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 475], "undertaken": [2, 85, 462, 482], "link": [2, 6, 7, 134, 467, 476], "hash": [2, 48, 51, 66, 67, 73, 78, 85, 131, 146, 188], "past": [2, 4, 217, 351, 467, 484], "node_map": [2, 51], "_index": [2, 66, 78], "Then": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 184, 273, 468, 479], "track": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 80, 108, 109, 115, 131, 187, 196, 253, 262, 274, 275, 277, 321, 351, 401, 429, 435, 460, 467, 469, 471, 474, 481, 482, 484], "next_data": [2, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "data_map": [2, 51], "form": [2, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 99, 100, 107, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 298, 300, 302, 304, 333, 335, 339, 356, 365, 366, 368, 383, 386, 399, 401, 442, 461, 472], "figur": [2, 3, 85, 146, 188, 466, 468, 469, 481, 482, 487], "flowchart": 2, "o": [2, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 303, 333, 335, 339, 399, 401], "get_tre": [2, 51, 85], "vertex": [2, 85], "longer": [2, 85, 278, 467, 476, 480, 481, 484], "vertic": [2, 85], "branch": [2, 51, 85], "repeat": [2, 85, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 153, 154, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 190, 193, 265, 281, 292, 468, 480, 481, 482], "depth": [2, 70, 83, 128, 131, 134, 138, 146, 152, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 281, 284, 285, 287, 288, 289, 290, 295, 296, 305, 307, 310, 311, 312, 315, 316, 348, 461, 467, 471, 473, 474, 479, 480, 481, 484], "until": [2, 3, 7, 27, 29, 145, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 261, 266, 277, 401, 432, 468, 469, 476, 480, 481], "anymor": [2, 62, 64, 71, 85, 96, 97, 98, 185, 267, 355, 400], "utmost": 2, "post": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 460], "grpo": [2, 187, 193, 399, 458], "commonli": [2, 109, 116, 117, 487], "emploi": [2, 314], "scarc": 2, "address": [2, 31, 337, 484], "subdomain": 2, "extern": [2, 3, 225, 228, 275, 337, 478, 480, 487], "token": [2, 29, 64, 65, 72, 81, 84, 95, 97, 98, 146, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 195, 197, 198, 335, 339, 460, 478], "dm": [3, 466, 487], "experi": [3, 63, 70, 79, 80, 108, 109, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 426, 427, 428, 429, 430, 431, 459, 467, 468, 470, 474, 475, 480, 481, 484], "box": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 137, 139, 312, 384, 399, 478], "lib": [3, 5, 6, 7, 9, 10, 15, 16, 18, 21, 27, 28, 29, 30, 68, 128, 131, 134, 135, 138, 143, 146, 150, 151, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 220, 229, 236, 237, 241, 243, 248, 250, 253, 260, 266, 273, 274, 277, 401, 422, 452, 466, 467, 468, 469, 479, 481, 483, 484, 486, 487], "hope": [3, 11], "nn": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 42, 43, 48, 56, 66, 67, 68, 72, 73, 78, 128, 129, 130, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 222, 227, 229, 237, 245, 260, 266, 267, 270, 272, 277, 281, 283, 284, 285, 287, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 309, 310, 311, 312, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 351, 352, 353, 355, 356, 357, 358, 360, 363, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 452, 461, 462, 466, 467, 468, 469, 470, 472, 473, 476, 479, 480, 481, 482, 483, 486], "organis": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267, 467], "attribut": [3, 4, 7, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 128, 131, 134, 137, 138, 139, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 229, 239, 245, 267, 270, 274, 275, 277, 333, 335, 339, 356, 366, 367, 369, 370, 371, 373, 375, 376, 377, 380, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 466, 469, 482], "live": [3, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 111, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 229, 277, 333, 335, 339, 399, 401], "actual": [3, 4, 7, 14, 17, 19, 20, 24, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 273, 400, 445, 462, 466, 468, 470, 480, 481, 482], "care": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 424, 466, 468, 470, 480, 481, 482, 484], "parametr": [3, 314, 356, 367, 369, 374, 382, 389, 466, 468], "observation_spec": [3, 51, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 211, 214, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 232, 234, 235, 236, 237, 241, 243, 245, 247, 249, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 277, 281, 300, 304, 307, 401, 446, 452, 466, 468, 473, 479, 480, 481, 482, 487], "state_spec": [3, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 221, 226, 241, 266, 268, 269, 277, 281, 307, 401, 482, 487], "reward_spec": [3, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 214, 215, 220, 221, 225, 226, 228, 238, 247, 251, 252, 253, 255, 257, 264, 266, 268, 269, 275, 277, 281, 307, 401, 468, 478, 480, 481, 482, 487], "done_spec": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 225, 226, 228, 229, 247, 257, 264, 266, 268, 277, 401, 480, 481, 482, 487], "flag": [3, 8, 43, 63, 68, 69, 70, 79, 80, 111, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 236, 321, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 461, 480, 481, 482, 483], "input_spec": [3, 85, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 221, 225, 226, 227, 239, 243, 247, 248, 253, 254, 257, 258, 259, 260, 264, 266, 267, 268, 271, 277, 401, 468, 482], "full_action_spec": [3, 85, 128, 131, 134, 138, 146, 156, 157, 158, 159, 162, 167, 168, 169, 170, 171, 179, 180, 181, 184, 187, 188, 189, 210, 226, 281, 307, 480, 481], "full_state_spec": [3, 51, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 210, 226, 281, 307], "output_spec": [3, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 230, 237, 239, 247, 248, 254, 258, 264, 266, 267, 268, 275, 277, 401, 482], "full_observation_spec": [3, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189, 281, 307], "full_reward_spec": [3, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 214, 226, 247, 480, 481], "full_done_spec": [3, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 214, 226, 247, 480, 481], "carri": [3, 27, 54, 84, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 260, 275, 384, 399, 460, 467, 469, 480, 481, 482, 484], "nontensor": [3, 59, 97, 184, 189, 235, 268, 458], "spec_lock": [3, 134], "modif": [3, 5, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 232, 235, 277, 333, 335, 339, 384, 399, 401, 462, 468, 482], "children": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "unlock": [3, 40, 41, 49, 62, 64, 71, 75, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 400], "set_spec_lock_": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "reason": [3, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 245, 270, 277, 304, 333, 335, 339, 399, 401, 462, 466, 467, 468, 473, 474, 480, 482, 484], "easi": [3, 5, 11, 128, 131, 132, 133, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 297, 321, 339, 461, 462, 466, 467, 468, 481, 483, 484, 486, 487], "cach": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 74, 75, 83, 84, 86, 87, 88, 89, 90, 95, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 213, 225, 228, 245, 266, 267, 272, 282, 434], "principl": 3, "new_spec": 3, "eras": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267], "relock": 3, "previous": [3, 4, 51, 468, 487], "importantli": [3, 352, 356], "action_s": 3, "help": [3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 229, 277, 333, 335, 339, 366, 368, 383, 386, 388, 399, 401, 459, 462, 466, 467, 468, 469, 478, 480, 481], "With": [3, 144, 145, 149, 259, 463, 467, 478, 479, 480, 481, 484, 487], "necessarili": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 487], "present": [3, 29, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 96, 97, 98, 108, 109, 111, 115, 128, 131, 134, 137, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 230, 250, 254, 260, 265, 267, 277, 285, 286, 287, 288, 289, 290, 296, 300, 302, 304, 314, 319, 321, 333, 335, 339, 351, 355, 356, 357, 358, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 456, 460, 463, 466, 476, 479, 480, 481, 484, 486], "0s": [3, 260, 469], "step_and_maybe_reset": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 460, 471, 478], "done_kei": [3, 32, 43, 45, 47, 51, 57, 76, 99, 100, 107, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 213, 217, 229, 250, 258, 277, 401, 480, 481], "assign": [3, 4, 15, 16, 21, 31, 36, 37, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 86, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 337, 339, 369, 370, 371, 373, 389, 399, 400, 401, 468, 472, 478, 480, 481, 484], "_reset": [3, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 211, 213, 214, 217, 225, 228, 236, 247, 262, 281, 307, 480], "data_": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "append": [3, 8, 11, 51, 63, 68, 69, 70, 79, 80, 97, 111, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 191, 193, 213, 220, 221, 239, 250, 260, 267, 273, 299, 300, 303, 304, 348, 353, 460, 466, 467, 468, 469, 470, 478, 480, 481, 482, 483, 484, 486], "seed": [3, 15, 16, 18, 21, 27, 29, 30, 70, 79, 80, 111, 128, 131, 134, 138, 146, 152, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 174, 179, 180, 181, 184, 187, 188, 189, 190, 211, 214, 225, 228, 235, 247, 267, 422, 442, 480], "determinist": [3, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 206, 221, 245, 260, 266, 267, 270, 272, 277, 286, 295, 315, 325, 333, 335, 339, 343, 352, 355, 356, 359, 367, 368, 384, 386, 399, 401, 437, 461, 466, 467, 468, 469, 470, 472, 473, 476, 480, 482, 486, 487], "preced": [3, 56, 131, 217, 469], "risk": [3, 246], "overlap": [3, 79, 122], "reproduc": [3, 67, 73, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 217, 235, 466, 468, 470, 481], "maximum": [3, 4, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 56, 62, 64, 65, 72, 78, 81, 84, 85, 86, 95, 102, 103, 104, 105, 108, 109, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 186, 187, 188, 189, 193, 227, 251, 258, 259, 261, 280, 328, 329, 330, 359, 367, 369, 374, 375, 382, 384, 385, 389, 399, 424, 439, 461, 466, 467, 468, 469, 472, 480, 481, 484], "max_step": [3, 11, 122, 128, 131, 134, 138, 146, 150, 151, 152, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 258, 265, 277, 422, 471, 472, 473, 475, 476, 480, 481, 486, 487], "tensordictmodul": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 66, 68, 72, 78, 128, 129, 130, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 216, 222, 237, 283, 294, 300, 304, 307, 322, 323, 331, 332, 333, 335, 339, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 361, 363, 367, 369, 370, 374, 375, 377, 378, 379, 380, 382, 384, 387, 389, 391, 392, 399, 402, 403, 404, 405, 406, 407, 437, 452, 458, 466, 468, 469, 473, 476, 479, 480, 481, 482, 483, 487], "trail": [3, 186, 274, 478], "treat": [3, 56, 462, 472, 473], "brief": [3, 468, 471, 473, 484], "deliveri": 3, "metaclass": [3, 134, 139], "flank": [3, 462, 469], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 137, 138, 139, 143, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 235, 265, 267, 274, 277, 281, 294, 295, 307, 308, 309, 310, 311, 312, 315, 316, 324, 325, 333, 335, 339, 346, 349, 366, 369, 376, 377, 378, 379, 386, 389, 399, 401, 404, 409, 417, 465, 466, 468, 470, 472, 473, 474, 475, 480, 481, 484], "union": [3, 25, 36, 40, 41, 43, 48, 49, 50, 54, 55, 56, 58, 60, 61, 66, 67, 73, 74, 75, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 310, 331, 333, 335, 339, 373, 375, 387, 399, 401, 453, 456], "assess": [3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 49, 75, 150, 151, 175, 184, 466], "split_trajectori": [3, 15, 16, 18, 21, 22, 23, 25, 27, 109, 116, 117, 458], "adjac": [3, 32, 232, 351], "junction": 3, "inittrack": [3, 300, 304, 351, 466, 469], "tutori": [3, 159, 192, 457, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 487], "scratch": [3, 8, 467, 482], "mere": [3, 21, 470], "batch_lock": [3, 128, 131, 134, 136, 138, 146, 158, 162, 167, 168, 179, 180, 181, 184, 187, 188, 189, 214, 260, 267, 482], "contrast": [3, 298, 320, 381, 484], "notabl": 3, "braxenv": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 248, 458, 471], "jumanjienv": [3, 458], "straightforward": [3, 19, 466, 467, 471, 472, 473, 474, 484], "merg": [3, 63, 70, 79, 80, 482], "correctli": [3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "silent": [3, 36, 43, 48, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362], "_step": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 401], "temporari": [3, 466], "hold": [3, 266, 397, 398, 401, 482, 484], "arm": 3, "unbatch": [3, 298, 302], "captur": [3, 279, 297, 321, 470], "base_env": [3, 128, 130, 131, 134, 138, 139, 145, 146, 157, 158, 159, 162, 167, 168, 169, 171, 179, 180, 181, 184, 187, 188, 189, 210, 211, 214, 220, 222, 223, 225, 227, 228, 237, 243, 247, 249, 255, 258, 260, 261, 265, 267, 277, 424, 432, 460, 466, 467, 468, 470, 480, 483, 486, 487], "break_when_all_don": [3, 128, 131, 134, 138, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "conditionalskip": 3, "programmat": 3, "pretti": [3, 466, 471, 475, 484], "likewis": 3, "break_when_any_don": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 213, 265, 277, 283, 351, 481], "te": 3, "paragraph": 3, "deep": [3, 9, 217, 238, 287, 288, 289, 290, 293, 321, 366, 369, 381, 389, 390, 466, 480], "dive": 3, "gym3": 3, "envpool": [3, 153, 154], "simultan": [3, 25, 145, 153, 154, 158, 167, 482], "advantag": [3, 8, 187, 193, 296, 366, 368, 383, 386, 388, 399, 401, 404, 405, 406, 407, 408, 409, 411, 413, 415, 417, 418, 420, 462, 463, 466, 467, 468, 469, 481, 482, 487], "scale": [3, 4, 33, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189, 217, 237, 241, 252, 259, 263, 274, 275, 280, 295, 301, 324, 325, 329, 330, 344, 345, 346, 352, 356, 358, 366, 367, 369, 382, 386, 387, 388, 389, 440, 446, 456, 461, 466, 467, 468, 469, 472, 481, 486], "varieti": [3, 11], "inherit": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 306, 310, 311, 384, 463, 468, 480, 481], "from_pixel": [3, 11, 129, 130, 132, 133, 137, 139, 140, 144, 145, 164, 217, 249, 422, 424, 466, 467, 469, 471, 475, 476, 483, 484, 486, 487], "81": [3, 116], "d": [3, 43, 63, 66, 70, 78, 79, 80, 95, 108, 109, 280, 298, 302, 333, 335, 339, 352, 356, 399, 486], "privat": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 273, 482, 487], "absenc": 3, "total": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 111, 117, 122, 181, 185, 222, 337, 368, 383, 386, 399, 400, 433, 435, 437, 442, 445, 446, 465, 466, 467, 468, 469, 473, 480, 481, 483, 484, 485, 486], "accord": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 62, 64, 71, 72, 85, 96, 97, 98, 111, 114, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 170, 171, 179, 180, 181, 184, 185, 187, 188, 189, 241, 252, 301, 313, 324, 329, 330, 400, 402, 461, 462, 472, 473, 480, 482, 484], "inner": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 227, 267, 463, 467, 468, 481, 487], "kept": [3, 24, 26, 32, 115, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 208, 227, 254, 301, 329, 330, 473, 480], "wherev": 3, "lost": [3, 8, 273], "intern": [3, 51, 82, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 275, 464], "face": [3, 5, 8, 9, 335, 339, 471, 487], "NOT": [3, 99, 100, 107, 117, 246], "right": [3, 6, 7, 32, 72, 109, 116, 189, 222, 467, 468, 470, 481, 482, 487], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 43, 66, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 186, 187, 188, 189, 333, 335, 339, 399, 473], "annihil": 3, "supersed": [3, 32], "pettingzoowrapp": [3, 458], "group": [3, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 184, 187, 188, 189, 193, 238, 257, 337, 338, 396, 461, 467, 472, 474, 481, 484], "__not__": [3, 352, 367, 369, 382, 387, 389, 391, 392], "constrain": [3, 194, 237, 300, 304, 386, 487], "li": 3, "fact": [3, 7, 8, 466, 468, 471, 480, 481, 482, 483, 484, 487], "meaning": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "perfectli": [3, 463, 466, 470, 482], "meaningless": 3, "val": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 180, 275, 432, 473, 486], "agent0": [3, 470], "agent1": 3, "overrid": [3, 14, 17, 19, 20, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 97, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 277, 292, 333, 335, 339, 399, 401, 424, 456, 461, 478], "bool": [3, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 208, 209, 210, 211, 213, 214, 217, 218, 222, 223, 225, 227, 228, 229, 230, 232, 235, 237, 239, 240, 241, 243, 245, 247, 248, 250, 252, 253, 254, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 272, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 328, 329, 330, 333, 335, 336, 339, 342, 343, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 402, 404, 405, 406, 407, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 431, 432, 435, 436, 437, 439, 440, 442, 456, 467, 468, 470, 478, 482, 486, 487], "500": [3, 466, 467], "note": [3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 209, 225, 228, 265, 274, 275, 277, 282, 298, 300, 302, 304, 321, 333, 335, 339, 352, 356, 368, 376, 386, 399, 401, 458, 462, 467, 470, 472, 478, 479, 480, 481, 487], "launch": [3, 15, 16, 21, 22, 23, 25, 28, 158, 167], "bottleneck": [3, 8, 109, 116, 117], "great": [3, 7, 8, 470, 480, 486], "speedup": [3, 8, 480, 487], "precis": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 208, 225, 228, 299, 303, 466, 468], "misspecifi": 3, "caus": [3, 7, 8, 15, 16, 18, 102, 104, 124, 128, 131, 134, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 246, 399, 487], "breakag": 3, "rais": [3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 170, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 231, 240, 250, 259, 260, 261, 265, 267, 274, 277, 279, 297, 321, 333, 335, 339, 369, 384, 389, 399, 400, 401, 432, 466, 468, 480, 481, 484], "mismatch": [3, 66, 368, 386, 399, 467], "subprocess": [3, 15, 16, 21, 135, 158, 167], "multithreadedenv": [3, 458], "underneath": 3, "higher": [3, 4, 109, 220, 359, 466, 467, 468, 480, 484, 487], "cover": [3, 137, 139, 459, 468, 471, 474, 475, 482, 486], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 111, 128, 131, 134, 138, 146, 149, 152, 155, 158, 159, 160, 161, 162, 167, 168, 169, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208, 214, 217, 221, 225, 226, 229, 230, 235, 237, 239, 245, 247, 248, 254, 258, 260, 264, 265, 266, 267, 268, 270, 272, 274, 275, 277, 279, 284, 285, 305, 310, 311, 314, 322, 331, 333, 335, 336, 337, 339, 340, 348, 352, 355, 356, 363, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 394, 396, 399, 400, 401, 402, 410, 422, 454, 458, 461, 466, 467, 468, 470, 474, 478, 480, 481, 482, 484, 487], "atari": [3, 4, 217, 285, 424, 470, 475, 487], "classic": [3, 143, 152, 161, 467], "benchmark_batched_env": 3, "significantli": [3, 13, 22, 23, 25, 116, 117, 217, 368, 386, 399, 462, 466, 467, 473, 481], "asyncenvpool": [3, 29, 162, 168], "pool": [3, 128, 162, 168, 261], "concurr": [3, 128, 480, 481], "contrari": [3, 462], "permit": [3, 220, 232, 257, 269, 366, 368, 383, 386, 388], "job": [3, 7, 22, 23, 25, 28, 70, 79, 80, 111, 484, 486], "famili": 3, "interest": [3, 352, 356, 461, 467, 468, 471, 481, 482, 487], "prefer": [3, 15, 16, 21, 25, 32, 33, 63, 70, 79, 80, 116, 117, 128, 162, 168, 190, 246, 254, 386, 391, 439, 461, 468, 480, 481, 484, 486], "pleas": [3, 36, 43, 48, 56, 66, 67, 73, 78, 82, 128, 131, 134, 137, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 217, 235, 261, 265, 267, 277, 310, 311, 312, 333, 335, 339, 369, 389, 399, 401, 459], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 158, 162], "threadingasyncenvpool": 3, "executor": [3, 22, 23, 25, 168], "functool": [3, 15, 16, 18, 21, 29, 128], "s0": [3, 128], "clamp": [3, 128, 356, 359, 378, 442, 462, 480, 482], "env_index": [3, 128], "async_step_send": [3, 128, 162, 168], "s0_result": [3, 128], "async_step_recv": [3, 128, 162, 168], "close": [3, 13, 15, 16, 18, 21, 22, 23, 25, 29, 68, 128, 138, 153, 182, 183, 186, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 237, 266, 275, 277, 366, 368, 383, 386, 399, 401, 422, 466, 467, 471, 478, 479, 480, 482, 486], "seamlessli": [3, 196, 482], "paradigm": [3, 21, 481], "decpodp": 3, "game": [3, 4, 5, 131, 150, 151, 156, 157, 222, 285, 424, 470, 475], "thank": [3, 466, 470, 471, 486], "carrier": [3, 468, 469, 471, 484], "particular": [3, 36, 43, 48, 56, 66, 67, 73, 78, 84, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 267, 277, 333, 335, 339, 399, 401, 462, 463, 467, 469, 471, 479, 481, 484], "thu": [3, 383, 481], "vma": [3, 172, 173, 422, 480, 481], "robot": [3, 5, 7, 245, 270, 272, 470, 481], "vmasenv": [3, 422, 458, 480, 481], "balanc": [3, 132, 133, 186, 466, 467], "num_env": [3, 15, 16, 21, 27, 128, 137, 141, 154, 172, 173, 180, 181, 184, 190, 422, 480, 481], "n_agent": [3, 172, 173, 310, 311, 312, 322, 331, 402, 422, 462, 480, 481], "ground_rew": 3, "pos_rew": 3, "style": [3, 63, 70, 79, 80, 195], "vari": [3, 137, 139, 140, 160, 161, 164, 172, 246, 462, 470, 481], "creation": [3, 158, 167, 487], "info_spec": [3, 158], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 34, 35, 37, 38, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 129, 130, 131, 134, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 184, 187, 188, 189, 209, 210, 211, 229, 247, 294, 317, 320, 323, 348, 349, 352, 353, 354, 371, 374, 375, 402, 458, 469], "simpl": [3, 9, 19, 20, 36, 43, 48, 56, 60, 66, 67, 73, 78, 83, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 287, 333, 335, 339, 351, 356, 371, 373, 384, 388, 399, 401, 404, 462, 466, 467, 468, 471, 472, 473, 480, 481, 484, 487], "prefix": [3, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 262, 265, 267, 277, 333, 335, 339, 352, 369, 384, 389, 399, 400, 401, 423, 469, 473, 478, 487], "exactli": [3, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 140, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 298, 302, 317, 333, 335, 339, 369, 389, 399, 401, 466, 469, 474, 480, 481], "action_kei": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 128, 131, 134, 138, 146, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 194, 208, 210, 211, 227, 237, 239, 279, 281, 297, 306, 307, 321, 351, 462, 480, 481], "reward_kei": [3, 43, 45, 47, 51, 57, 76, 99, 100, 107, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 277, 281, 307, 436, 440, 480, 481], "set_kei": [3, 229, 366, 368, 369, 371, 374, 375, 376, 382, 383, 384, 386, 387, 388, 389, 399, 402, 408, 466, 480, 481], "awai": [3, 468, 471, 480, 481, 486], "leaf": [3, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 75, 83, 85, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 236, 258, 260, 266, 356], "full": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 282, 300, 304, 335, 349, 356, 433, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "autoresettransform": 3, "invalid": [3, 36, 43, 48, 56, 66, 67, 73, 78, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 175, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 308, 309, 333, 335, 339, 399, 401], "nan": [3, 213, 273], "auto_reset": [3, 51, 128, 131, 134, 138, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 213, 277, 482], "auto_reset_replac": [3, 213], "placehold": [3, 139, 140, 184, 229, 267, 273], "set_gym_backend": [3, 15, 16, 18, 21, 29, 128, 131, 134, 137, 138, 146, 158, 159, 162, 167, 168, 169, 178, 179, 180, 181, 184, 187, 188, 189, 213, 458, 471, 486], "autoresettinggymenv": [3, 213], "self": [3, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 236, 237, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 277, 278, 279, 281, 294, 297, 300, 304, 307, 310, 311, 322, 331, 333, 335, 339, 352, 355, 360, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 463, 466, 478, 482, 486], "super": [3, 152, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 281, 294, 307, 360, 367, 369, 370, 375, 382, 387, 389, 391, 392, 401, 466, 482, 486], "td_reset": [3, 179, 213], "exclud": [3, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 213, 217, 230, 322, 368, 383, 386, 480, 481, 484], "r": [3, 4, 51, 56, 131, 181, 184, 195, 197, 210, 211, 213, 220, 222, 223, 241, 255, 262, 265, 274, 275, 280, 283, 299, 356, 365, 403, 422, 467, 482, 487], "3633e": [3, 213], "02": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 213, 275, 467, 476], "4877e": [3, 213], "01": [3, 213, 241, 275, 280, 321, 362, 366, 368, 383, 386, 399], "2849e": [3, 213], "7584e": [3, 213], "6609e": [3, 213], "6166e": [3, 213], "8366e": [3, 213], "2761e": [3, 213], "5685e": [3, 213], "4102e": [3, 213], "8111e": [3, 213], "9959e": [3, 213], "0865e": [3, 213], "5644e": [3, 213], "2119e": [3, 213], "2542e": [3, 213], "03": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 213, 241, 262], "9952e": [3, 213], "4059e": [3, 213], "2094e": [3, 213], "9009e": [3, 213], "5140e": [3, 213], "3554e": [3, 213], "2920e": [3, 213], "7893e": [3, 213], "6429e": [3, 213], "3057e": [3, 213], "2867e": [3, 213], "6963e": [3, 213], "3818e": [3, 213], "2576e": [3, 213], "2679e": [3, 213], "1640e": [3, 213], "00": [3, 129, 130, 213, 465, 485], "6972e": [3, 213], "0212e": [3, 213], "5959e": [3, 213], "4637e": [3, 213], "3121e": [3, 213], "2168e": [3, 213], "5232e": [3, 213], "7704e": [3, 213], "7457e": [3, 213], "4127e": [3, 213], "1064e": [3, 213], "0854e": [3, 213], "5712e": [3, 213], "2189e": [3, 213], "5235e": [3, 213], "8289e": [3, 213], "0009e": [3, 213], "0257e": [3, 213], "8893e": [3, 213], "5872e": [3, 213], "9405e": [3, 213], "7766e": [3, 213], "0403e": [3, 213], "0626e": [3, 213], "2959e": [3, 213], "7263e": [3, 213], "2775e": [3, 213], "9564e": [3, 213], "0411e": [3, 213], "6769e": [3, 213], "6354e": [3, 213], "8698e": [3, 213], "1765e": [3, 213], "6292e": [3, 213], "5375e": [3, 213], "1820e": [3, 213], "7023e": [3, 213], "5836e": [3, 213], "9016e": [3, 213], "4826e": [3, 213], "6191e": [3, 213], "6387e": [3, 213], "8667e": [3, 213], "2056e": [3, 213], "1147e": [3, 213], "5991e": [3, 213], "0278e": [3, 213], "5219e": [3, 213], "3067e": [3, 213], "6617e": [3, 213], "3322e": [3, 213], "2629e": [3, 213], "4599e": [3, 213], "7298e": [3, 213], "5848e": [3, 213], "0148e": [3, 213], "5745e": [3, 213], "6982e": [3, 213], "7877e": [3, 213], "3527e": [3, 213], "7285e": [3, 213], "6668e": [3, 213], "0583e": [3, 213], "6956e": [3, 213], "3962e": [3, 213], "9845e": [3, 213], "5015e": [3, 213], "5903e": [3, 213], "9993e": [3, 213], "9418e": [3, 213], "0196e": [3, 213], "6557e": [3, 213], "2109e": [3, 213], "8997e": [3, 213], "1507e": [3, 213], "7363e": [3, 213], "0310e": [3, 213], "9574e": [3, 213], "8980e": [3, 213], "0090e": [3, 213], "forecast": 3, "awar": [3, 7, 102, 103, 104, 105, 118, 120, 124, 300, 304, 467, 469], "detect": [3, 187, 384, 399, 462], "return_contigu": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 479], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 69, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 122, 128, 131, 134, 136, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 279, 281, 297, 300, 304, 306, 307, 321, 333, 335, 339, 347, 349, 351, 354, 355, 356, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 442, 466, 480, 482], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 37, 40, 42, 43, 48, 56, 60, 63, 66, 67, 72, 73, 78, 79, 86, 108, 109, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 213, 217, 221, 225, 228, 237, 238, 241, 245, 250, 251, 252, 259, 260, 263, 266, 267, 270, 272, 275, 277, 279, 280, 282, 283, 292, 295, 298, 301, 302, 305, 308, 309, 313, 314, 320, 324, 325, 328, 330, 333, 335, 339, 355, 359, 362, 364, 365, 366, 367, 368, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 399, 401, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 440, 466, 467, 484, 487], "_set_se": [3, 211, 214, 225, 228, 247, 482], "lazystackedtensordict": [3, 29, 51, 75, 103, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 479], "float32": [3, 15, 16, 18, 37, 40, 43, 45, 51, 62, 63, 64, 66, 71, 72, 76, 78, 79, 80, 83, 84, 85, 86, 96, 97, 98, 102, 103, 104, 108, 109, 116, 124, 128, 129, 130, 131, 134, 137, 138, 139, 144, 145, 146, 152, 155, 156, 157, 158, 159, 162, 165, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 184, 185, 187, 188, 189, 202, 208, 210, 214, 225, 228, 229, 230, 235, 238, 241, 243, 247, 248, 250, 254, 257, 258, 260, 263, 268, 281, 283, 293, 294, 300, 304, 307, 321, 322, 323, 331, 333, 335, 339, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 358, 360, 363, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 400, 402, 461, 478, 482], "exclusive_field": [3, 29, 51, 103, 128, 181, 184, 193], "stack_dim": [3, 29, 51, 103, 128, 181, 184, 193, 201], "dramat": 3, "carefulli": [3, 480, 481, 487], "against": [3, 5, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 343, 348, 349, 352, 353, 354, 355, 356, 367, 369, 382, 387, 389, 391, 392, 399, 401, 468, 480, 481], "plain": [3, 8, 367, 369, 375, 382, 387, 389, 391, 392, 405, 406, 407, 471], "expens": [3, 30, 109, 116, 117, 422, 484], "absent": [3, 40, 41, 49, 75, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 254, 267], "torchvis": [3, 11, 245, 272, 426, 480, 486, 487], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 111, 128, 131, 134, 135, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 212, 214, 221, 222, 223, 229, 235, 260, 267, 268, 277, 278, 284, 285, 305, 312, 333, 335, 339, 356, 365, 384, 399, 401, 422, 447, 448, 454, 455, 456, 467, 484], "bring": [3, 468, 471, 487], "kind": [3, 70, 83, 473, 480, 484], "consult": 3, "resize_par": 3, "revers": [3, 302], "order": [3, 11, 18, 20, 29, 30, 36, 43, 48, 56, 60, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 111, 115, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 218, 225, 228, 235, 243, 257, 265, 267, 277, 320, 333, 335, 339, 343, 348, 355, 357, 358, 360, 366, 367, 369, 370, 374, 375, 382, 386, 387, 388, 389, 391, 392, 399, 401, 467, 480, 481], "chain": [3, 62, 63, 64, 70, 71, 79, 80, 85, 96, 97, 98, 146, 185, 187, 188, 221, 227, 284, 285, 358, 400, 487], "in_keys_inv": [3, 199, 203, 220, 225, 226, 228, 235, 241, 242, 243, 247, 248, 250, 255, 264, 266, 268, 269, 466, 479, 482, 487], "append_transform": [3, 51, 63, 68, 69, 70, 79, 80, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 203, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 283, 300, 304, 401, 422, 460, 466, 469, 478, 480, 482, 484, 486, 487], "doubletofloat": [3, 466, 468, 479], "float64": [3, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 132, 133, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 221, 225, 228, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "think": [3, 181, 183, 184, 186, 459, 468, 480, 481, 487], "in_": 3, "out_": 3, "perspect": [3, 294, 349, 376, 468, 470], "outer": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267, 463, 466, 467, 487], "ob": [3, 4, 8, 32, 40, 41, 49, 51, 63, 68, 69, 70, 75, 78, 79, 80, 85, 108, 111, 116, 117, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 208, 211, 213, 222, 225, 226, 228, 241, 255, 257, 263, 287, 288, 289, 290, 310, 311, 312, 353, 360, 367, 369, 370, 375, 382, 387, 389, 391, 392, 404, 405, 406, 407, 467, 470, 479, 480, 482, 484, 486, 487], "obs_standard": 3, "out_keys_inv": [3, 199, 203, 220, 225, 226, 228, 235, 241, 242, 243, 247, 248, 255, 257, 264, 266, 268, 269, 482], "illustr": [3, 466, 467, 472, 484], "chang": [3, 5, 7, 11, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 102, 103, 104, 105, 109, 115, 116, 118, 120, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 228, 230, 237, 239, 247, 248, 254, 258, 264, 266, 267, 268, 274, 275, 277, 302, 333, 335, 339, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 462, 466, 469, 480, 481, 482, 483, 484, 487], "schemat": [3, 462], "outermost": 3, "innermost": 3, "similar": [3, 36, 43, 48, 56, 58, 62, 64, 66, 67, 70, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 271, 272, 274, 275, 277, 333, 335, 339, 344, 346, 352, 355, 356, 399, 400, 401, 462, 466, 467, 468, 469, 470, 472, 473, 474, 475, 482, 484, 486, 487], "transform_action_spec": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 221, 226, 241, 266, 268, 269, 277, 401], "spec_from_random_valu": 3, "_apply_transform": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 401, 482, 487], "rand": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 103, 111, 129, 130, 144, 145, 152, 156, 157, 163, 170, 171, 211, 214, 225, 228, 247, 257, 281, 307, 352, 366, 367, 369, 370, 371, 373, 374, 375, 382, 384, 386, 387, 389, 391, 392, 399, 482, 486, 487], "approach": [3, 63, 70, 79, 80, 217, 241, 280, 310, 311, 337, 391, 460, 466, 468, 473, 474, 480, 487], "insid": [3, 62, 64, 71, 85, 96, 97, 98, 158, 185, 400, 487], "did": [3, 70, 273, 410, 467, 468, 474, 484, 487], "_inv_apply_transform": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 266, 277, 401, 482, 487], "actiondiscret": 3, "rand_act": [3, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 214, 267, 471], "action_discret": 3, "addonetoob": 3, "Is": [3, 266], "rewrit": [3, 266], "_call": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 401, 478, 482], "_inv_cal": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 266, 277, 401], "overwrit": [3, 266], "till": [3, 266, 273], "encapsul": [3, 266, 471, 472, 473], "forget": [3, 266, 302], "edit": [3, 97, 266, 277, 474], "top": [3, 4, 122, 129, 130, 144, 145, 224, 266, 281, 307, 335, 339, 472], "transform_output_spec": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 230, 237, 239, 247, 248, 254, 258, 264, 266, 268, 275, 277, 401], "transform_input_spec": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 214, 221, 225, 226, 227, 239, 243, 247, 248, 253, 257, 258, 259, 260, 264, 266, 268, 271, 277, 401], "transform_observation_spec": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 214, 217, 218, 219, 220, 221, 224, 225, 226, 229, 230, 232, 234, 236, 237, 239, 241, 243, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 277, 401, 482], "transform_state_spec": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 221, 226, 241, 266, 268, 269, 277, 401], "transform_reward_spec": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 214, 215, 220, 221, 225, 226, 230, 237, 238, 239, 247, 248, 251, 252, 253, 254, 255, 257, 258, 264, 266, 268, 269, 275, 277, 401, 478], "rewardsum": [3, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 208, 266, 277, 401, 480, 481], "undo": 3, "addonetoact": 3, "subtract": [3, 259], "regist": [3, 14, 17, 19, 20, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 111, 128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 208, 225, 228, 229, 253, 265, 267, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 422, 424, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 463, 466, 468, 471, 484], "manipul": [3, 4, 8, 132, 133, 245, 266, 270], "third_transform": 3, "unexpect": [3, 15, 16, 18, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 487], "behviour": 3, "fortun": [3, 469, 470, 471, 472, 475], "alreadi": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 209, 260, 277, 278, 333, 335, 339, 356, 399, 400, 401, 404, 405, 406, 407, 466, 468, 475, 480, 481], "catfram": [3, 351, 467], "notic": [3, 122, 217, 462, 468, 476, 482], "parenthood": 3, "henc": [3, 30, 63, 209, 246, 310, 466, 468, 480, 481, 482], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 158, 167, 267, 422, 432, 482], "discret": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 137, 138, 139, 146, 150, 151, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189, 210, 227, 235, 317, 320, 323, 373, 374, 375, 376, 461, 467, 472, 481], "might": [3, 62, 64, 65, 71, 85, 96, 97, 98, 185, 400, 428, 459, 466, 471, 487], "action_mask": [3, 131, 144, 145, 160, 161, 165, 166, 211], "unavail": [3, 160, 161], "probabl": [3, 4, 8, 72, 111, 114, 282, 283, 292, 294, 297, 298, 300, 302, 304, 305, 308, 309, 317, 329, 330, 335, 339, 352, 356, 369, 386, 461, 462, 467, 470, 472, 486], "probabilistictensordictmodul": [3, 194, 237, 356, 357, 462, 486], "tensordictsequenti": [3, 43, 66, 78, 283, 297, 300, 304, 321, 333, 335, 339, 348, 351, 357, 358, 363, 399, 461, 466, 467, 469, 470, 472, 476, 479, 480, 483, 486], "maskedcategor": [3, 309, 458], "linear": [3, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 128, 129, 130, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 237, 245, 260, 266, 267, 270, 272, 277, 281, 283, 284, 285, 287, 288, 289, 290, 294, 296, 297, 305, 307, 310, 311, 313, 314, 321, 323, 324, 325, 333, 335, 339, 343, 344, 345, 346, 350, 351, 352, 353, 355, 358, 360, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 452, 461, 467, 479, 483, 486], "in_feat": 3, "out_feat": 3, "logit": [3, 64, 72, 98, 293, 308, 309, 317, 320, 349, 352, 374, 375, 461], "dist": [3, 10, 308, 309, 317, 356, 462, 472], "distribution_class": [3, 237, 344, 345, 346, 347, 352, 356, 358, 366, 367, 369, 374, 375, 382, 386, 387, 388, 389, 461, 466, 468, 472, 480, 481, 486], "wrap": [3, 5, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 128, 129, 130, 131, 134, 138, 139, 143, 144, 145, 146, 151, 154, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 171, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 223, 265, 267, 277, 278, 300, 304, 332, 333, 335, 339, 344, 345, 346, 351, 353, 356, 361, 384, 399, 401, 402, 460, 461, 466, 467, 468, 469, 473, 476, 478, 480, 481, 487], "actionmask": [3, 131], "your_base_env": 3, "mask_kei": [3, 32, 211, 246, 277], "itself": [3, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 213, 277, 333, 335, 339, 384, 391, 399, 401, 460, 468, 471], "ey": 3, "report": [3, 129, 130, 144, 145, 475], "foremost": 3, "callback": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 481], "ad": [3, 4, 18, 29, 32, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 92, 108, 109, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 217, 235, 253, 265, 267, 277, 280, 313, 314, 321, 333, 335, 339, 365, 366, 368, 369, 371, 376, 383, 386, 389, 399, 401, 402, 460, 467, 469, 470, 472, 478, 480, 484, 486, 487], "tensordictrecord": [3, 458], "videorecord": [3, 11, 422, 458, 468, 475, 476, 480], "csvlogger": [3, 11, 422, 424, 458, 467, 475, 476, 480], "wandblogg": [3, 458, 475], "tensorboardlogg": [3, 452, 458, 475], "tag": [3, 7, 11, 183, 184, 422, 424, 426, 429, 456, 460, 475, 476, 478, 480], "mp4": [3, 422, 424, 426, 476, 480], "video_format": [3, 422, 424, 426, 476, 480], "whc": 3, "cwh": 3, "exp": [3, 365, 462], "al": [3, 15, 16, 18, 21, 29, 33, 137, 139, 229, 243, 281, 470, 487], "pong": [3, 15, 16, 18, 21, 29, 154, 243, 470, 487], "v5": [3, 15, 16, 18, 21, 29, 137, 139, 154, 229, 243, 470, 487], "grow": [3, 103], "tediou": [3, 471], "workspac": [3, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 235], "pixelrendertransform": [3, 458, 480], "stream": 3, "alik": [3, 422], "envcreat": [3, 18, 28, 158, 167, 265, 275, 422, 452, 453, 456, 458, 466, 467, 486, 487], "render_mod": [3, 422, 482], "rgb_arrai": [3, 422, 480, 481, 482], "uncom": [3, 475], "line": [3, 7, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 467, 475, 480, 481], "comment": [3, 463, 467, 486], "pixels_record": [3, 422], "mission": [3, 195], "irrespect": [3, 355, 356], "dmcontrol": [3, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "jumanji": [3, 128, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "framework": [3, 4, 9, 28, 128, 129, 130, 131, 134, 138, 144, 145, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 298, 478, 486, 487], "Its": [3, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 274, 277, 333, 335, 339, 355, 399, 401, 408], "success": [3, 181, 183, 187, 193, 217, 262, 297, 369, 391, 467, 474, 476, 482, 484, 486], "foundat": [3, 5, 160, 161, 468, 481], "inspir": [3, 470, 482], "gone": [3, 4, 5, 351], "maintain": [3, 5, 9, 42, 58, 217, 275, 482], "concomittantli": 3, "problem": [3, 7, 8, 9, 18, 184, 399, 467, 468, 469, 474, 480, 481, 482, 484, 487], "decor": [3, 8, 205, 207, 278, 300, 304, 342, 384, 404, 405, 406, 407, 432, 460, 469, 486], "relev": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 72, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 404, 405, 406, 407, 408, 431, 470, 482], "gym_backend": [3, 207, 458], "env1": [3, 283, 479], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 131, 207], "env2": [3, 479], "_env": [3, 6, 137, 487], "classic_control": 3, "pendulumenv": [3, 51, 458, 482], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 148, 178, 238], "side": [3, 4, 487], "v0": [3, 15, 16, 40, 41, 49, 75, 128, 131, 134, 138, 140, 143, 144, 145, 146, 147, 148, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 221, 238, 267, 274, 275, 432, 452], "26": [3, 117, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 222], "fun": [3, 207, 278, 468, 480, 481], "reveal": 4, "curv": 4, "exploit": [4, 472], "cv": 4, "flip": [4, 145], "correspondingli": 4, "invers": [4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 111, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 217, 225, 228, 230, 235, 241, 248, 250, 262, 264, 266, 268, 277, 364, 368, 374, 382, 386, 399, 401, 458, 482], "prescript": 4, "tune": [4, 33, 194, 237, 460, 480, 481, 483], "coeffici": [4, 33, 42, 72, 194, 237, 368, 383, 386, 399, 481], "bonu": [4, 186, 366, 368, 383, 386, 399], "beta": [4, 63, 79, 108, 109, 374, 382, 383, 466, 467, 484, 486], "reduc": [4, 6, 39, 122, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 217, 223, 259, 275, 280, 282, 329, 458, 467, 480], "downstream": [4, 462, 466], "formul": [4, 480, 481], "rate": [4, 11, 274, 275, 403, 467, 468, 480, 481], "gradient": [4, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 282, 301, 309, 314, 317, 329, 330, 333, 335, 339, 356, 366, 368, 369, 370, 374, 375, 380, 382, 383, 384, 386, 387, 388, 389, 391, 392, 399, 401, 403, 404, 405, 406, 407, 442, 466, 468, 480, 481, 482], "easier": [4, 67, 461, 466, 486], "local": [4, 7, 10, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 69, 73, 78, 96, 109, 116, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 275, 277, 310, 311, 322, 331, 333, 335, 336, 339, 399, 401, 402, 429, 431, 470, 475, 476, 480, 481], "optima": 4, "product": [4, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 298, 299, 302, 303, 454, 455], "sum": [4, 15, 16, 27, 36, 43, 54, 60, 78, 122, 129, 130, 132, 133, 137, 139, 140, 144, 145, 153, 154, 164, 186, 216, 238, 253, 308, 309, 329, 331, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 399, 403, 410, 462, 466, 467, 468, 469, 470, 473, 476, 480, 481, 482, 487], "stat": [4, 241, 274, 275, 446, 456, 467, 468], "w": [4, 111, 131, 156, 157, 217, 219, 224, 249, 263, 298, 321, 424, 467, 484], "yield": [4, 15, 16, 18, 27, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401, 460, 466, 473], "insight": [4, 180, 470], "auxiliari": [4, 473], "credit": 4, "futur": [4, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 99, 100, 107, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 245, 265, 267, 272, 277, 305, 333, 335, 339, 366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 400, 401, 402, 459], "spars": [4, 43, 469], "intermedi": [4, 15, 16, 43, 51, 66, 78, 216, 283, 300, 304, 333, 335, 339, 349, 399, 466, 470, 483], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": [4, 181], "likelihood": [4, 466], "discov": 4, "score": [4, 72, 186, 318, 320], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 43, 63, 66, 68, 69, 70, 78, 79, 80, 85, 111, 131, 150, 151, 160, 161, 163, 172, 173, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 239, 240, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 281, 333, 335, 339, 348, 353, 399, 401, 441, 461, 462, 466, 470, 471, 480, 484], "explicit": [4, 15, 16, 18, 278, 484], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 33, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 302, 374, 382, 468, 481], "addition": [4, 292], "timestep": [4, 72, 250, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 480, 481], "realli": 4, "huge": [4, 311, 469], "std": [4, 241, 274, 279, 319, 466, 487], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 465, 469, 471, 473, 474, 475, 476, 477, 479, 483, 484, 485], "unseen": 4, "extrins": 4, "wrong": [4, 109, 116], "bonus": 4, "denser": 4, "prior": [4, 73, 325, 378, 481], "freshli": 4, "drop": [4, 115, 117, 208, 275, 368, 386, 399], "meant": [4, 56, 152, 187, 333], "encourag": [4, 158, 320, 466, 467, 484], "measur": [4, 102, 104, 124, 129, 130, 144, 145, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 368, 386, 399, 401, 468, 474], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 33, 472], "ideal": [4, 222, 241, 399, 482], "distil": 4, "nois": [4, 276, 314, 321, 341, 387, 391, 392, 437, 456, 466, 480], "exploratori": [4, 366, 368, 383, 386, 399], "misalign": 4, "trade": [4, 472], "unavoid": 4, "bootstrap": [4, 376, 404, 405, 411, 412, 466, 469], "noisi": [4, 313, 314, 341, 461], "unstabl": [4, 301, 329, 330], "inher": [4, 366, 386], "stochast": [4, 194, 237, 295, 314, 315, 325, 367, 369, 372, 374, 375, 380, 382, 385, 387, 389, 461, 468, 472, 481], "enemi": 4, "pomdp": [4, 484], "loos": [4, 186, 356, 461, 467, 468], "nonexist": 4, "sequenc": [4, 15, 16, 18, 21, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 101, 111, 112, 114, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 153, 154, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 199, 203, 215, 216, 217, 218, 219, 224, 225, 227, 228, 232, 234, 235, 238, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 259, 261, 262, 263, 264, 266, 268, 274, 275, 284, 285, 292, 294, 298, 302, 305, 308, 309, 310, 311, 317, 323, 327, 333, 335, 339, 347, 357, 358, 372, 399, 423, 424, 437, 438, 439, 441, 442, 461, 466, 468, 469, 470, 479, 480, 481, 487], "lstm": [4, 260, 303, 304, 470], "rel": [4, 111, 260, 292, 328, 466, 467, 480, 481, 484], "tend": 4, "stabl": [4, 9, 10, 155], "compens": 4, "descent": [4, 314], "minimum": [4, 86, 128, 158, 167, 251, 295, 328, 329, 330, 359, 362, 365, 367, 369, 375, 384, 385, 389, 399, 433, 462, 466, 468, 476, 480, 481], "manual": [4, 11, 22, 25, 27, 51, 63, 68, 69, 70, 79, 80, 111, 138, 139, 189, 196, 466, 469, 484], "deviat": [4, 241, 274, 275, 279, 281, 295, 307, 313, 314, 319, 320, 386, 391, 392, 466, 472, 481], "radic": 4, "begin": [4, 15, 16, 18, 21, 22, 23, 25, 27, 109, 116, 213, 298, 299, 302, 303, 365, 432, 462, 470, 471, 472, 473, 474, 475, 476, 478], "stabil": [4, 233, 282, 366, 368, 383, 386, 388, 399], "stage": [4, 466, 482], "never": [4, 15, 16, 21, 29, 37, 86, 109, 262, 474, 486], "prevent": [4, 34, 35, 39, 40, 41, 44, 49, 52, 53, 54, 55, 60, 61, 68, 75, 100, 274, 275, 301, 329, 330, 366, 368, 383, 386, 388, 399, 440, 475, 484], "entir": [4, 15, 16, 18, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 275, 310, 468, 471, 482, 484], "submit": [4, 137, 214, 459, 486], "system": [4, 5, 97, 100, 179, 181, 184, 186, 195, 196, 197, 460, 468, 480, 481, 482], "adequ": [4, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 468, 480, 481], "infeas": 4, "allevi": [4, 461], "prune": [4, 146, 188], "fire": [4, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "illeg": 4, "chess": [4, 131, 156, 157], "grasp": 4, "wherein": 4, "cumul": [4, 43, 253, 259, 281, 410, 468], "q": [4, 9, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 287, 288, 289, 290, 293, 294, 296, 322, 323, 331, 346, 349, 353, 354, 367, 369, 370, 371, 373, 374, 375, 376, 381, 382, 387, 389, 391, 392, 402, 458, 466, 473, 478], "flow": [4, 404, 466, 468, 480, 481, 482, 484], "reparameter": [4, 292, 309, 317], "soft": [4, 381, 389, 390, 480], "critic": [4, 8, 344, 350, 366, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 399, 466, 473], "clip": [4, 72, 220, 251, 366, 368, 383, 386, 388, 391, 392, 399, 442, 468, 481, 482], "oppos": [4, 84], "incorrect": [4, 116], "thought": [4, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "region": 4, "squash": [4, 469, 486], "tanh": [4, 284, 285, 298, 299, 301, 302, 303, 305, 311, 328, 329, 330, 359, 468, 472, 480, 481, 482, 483], "prob": [4, 308, 309, 317, 320, 468, 481], "rememb": [4, 480], "remap": 4, "origin": [4, 8, 43, 62, 64, 65, 66, 71, 72, 78, 81, 85, 96, 97, 98, 142, 185, 194, 226, 227, 237, 245, 267, 272, 277, 298, 333, 335, 339, 352, 355, 356, 367, 369, 381, 382, 384, 386, 387, 389, 391, 392, 399, 400, 466, 470, 478, 479, 482, 487], "world": [5, 152, 335, 339, 361, 378, 460, 470, 475, 480, 481, 482, 487], "histor": 5, "ceas": 5, "farama": [5, 147, 148, 160, 161, 468, 482], "gymwrapp": [5, 128, 131, 134, 138, 143, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 230, 254, 258, 273, 458, 468, 486], "feel": [5, 459, 476, 486], "free": [5, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 208, 225, 228, 366, 378, 386, 463, 468, 476, 481, 486], "gladli": 5, "prepar": [6, 47, 182, 468], "conda": [6, 7, 459], "cmake": 6, "activ": [6, 7, 9, 51, 284, 285, 291, 295, 305, 310, 311, 368, 383, 386, 461, 482, 486], "sim": 6, "bullet": 6, "headless": [6, 7, 143, 192, 478], "cluster": [6, 7, 8, 22, 27, 459], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 140], "y": [6, 7, 43, 66, 70, 78, 155, 296, 310, 332, 333, 335, 339, 399, 466, 481, 484], "facebookresearch": [6, 140], "subdirectori": 6, "verbos": [6, 29, 30, 186, 401, 476, 478], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 247, 256, 277, 333, 335, 339, 384, 399, 400, 401, 480, 481, 486, 487], "command": [6, 7, 10, 162, 168, 169, 468, 478, 480, 481, 482, 487], "readm": [6, 7, 172, 486], "md": [6, 7], "habitatenv": [6, 458], "_has_habitat": 6, "available_env": [6, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 150, 151, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 184, 187, 188, 189, 487], "startswith": [6, 283, 462, 466, 473], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 135, 384, 466], "env_nam": [6, 128, 129, 131, 132, 134, 135, 137, 138, 140, 144, 146, 147, 153, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 466, 468, 487], "llvmlite": 6, "config": [6, 7, 245, 272, 286, 291, 319, 446, 447, 448, 450, 453], "var": [6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 275, 277, 333, 335, 339, 369, 384, 389, 399, 401], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 348, 367, 369, 375, 382, 384, 387, 389, 391, 392, 405, 406, 407], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 36, 39, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 369, 384, 389, 399, 401, 470, 484], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 470], "stand": [7, 46, 132, 133, 158, 167, 479, 482], "joint": [7, 467], "contact": [7, 65, 480], "engin": [7, 164, 336, 401, 460, 478, 482], "biomechan": 7, "graphic": 7, "anim": [7, 481], "area": 7, "demand": [7, 475, 487], "fast": [7, 9, 103, 129, 130, 208, 248, 387, 466, 467, 468, 486], "articul": 7, "acquir": [7, 468], "deepmind": [7, 8, 9, 128, 131, 132, 133, 134, 138, 146, 150, 151, 156, 157, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 229, 468, 471], "whomev": 7, "licenc": 7, "incorpor": [7, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 297, 321, 391, 469, 472, 482], "relianc": 7, "obsolet": 7, "legaci": [7, 32], "pro": [7, 459], "tip": [7, 459], "glfw": [7, 466], "osmesa": 7, "egl": 7, "advic": [7, 487], "sudo": [7, 459], "apt": [7, 481], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 146, 188, 344, 345, 346], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 462, 466, 468, 469, 480, 481, 484], "roboti": 7, "html": [7, 15, 16, 153, 155, 156, 157, 478], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 15, 16, 21, 158, 167], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 62, 64, 84, 95], "bin": [7, 294, 320, 349, 461], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 290, 352, 356, 466, 468, 470, 484], "nvidia": [7, 142, 470], "older": [7, 278], "hack": [7, 466], "adatp": 7, "script": [7, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 432, 452, 456, 460, 461, 462, 463, 466, 467, 470, 475, 480, 481, 482, 484], "unnot": [7, 246], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 100, 467, 484], "troubleshoot": 7, "gl": 7, "h": [7, 111, 217, 219, 224, 249, 263, 298, 299, 300, 302, 303, 304, 307, 424, 467, 484], "eglshim": 7, "fatal": 7, "No": [7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 34, 35, 39, 44, 54, 55, 60, 61], "directori": [7, 62, 64, 71, 84, 85, 96, 97, 98, 102, 185, 400, 429, 431, 460, 462, 463, 466, 472, 475, 480], "devel": 7, "ubuntu": [7, 142], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 467, 469, 479], "libstdc": 7, "glibcxx_3": 7, "29": [7, 116, 117], "compil": [7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 101, 102, 103, 104, 105, 109, 112, 116, 117, 118, 123, 124, 126, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 278, 298, 299, 302, 303, 329, 333, 335, 339, 399, 401, 404], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 15, 16, 18, 21, 24, 29, 36, 39, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 240, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401, 462, 487], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 116, 129, 130], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 480, 481], "global": [7, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 111, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 265, 277, 322, 331, 333, 335, 337, 339, 352, 356, 399, 401, 402, 463, 466, 480, 481], "cuda_visible_devic": 7, "id": [7, 14, 17, 19, 20, 24, 26, 32, 72, 85, 109, 111, 116, 117, 128, 131, 134, 137, 138, 146, 158, 159, 162, 167, 168, 169, 170, 171, 179, 180, 181, 184, 186, 187, 188, 189, 321, 369, 387, 427, 431, 474, 484], "slurm_step_gpu": 7, "black": [7, 131, 480], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 481], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "nonetyp": [7, 14, 17, 19, 20, 24, 26, 31], "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 463], "n_training_step": 8, "datapoint": [8, 84, 484], "n_data_per_train": 8, "no_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 277, 282, 298, 299, 302, 303, 333, 335, 339, 399, 401, 404, 405, 406, 407, 468, 469, 470, 481], "loss_fn": [8, 469, 473, 474, 486], "zero_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 320, 333, 335, 339, 399, 401, 463, 466, 468, 469, 470, 473, 476, 480, 481, 482], "backpropag": [8, 129, 130, 144, 145, 158, 366, 367, 368, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 402, 473, 481, 482], "differenti": [8, 84, 129, 130, 194, 237, 369, 391, 404, 405, 406, 407, 469, 472, 473, 480, 481, 482], "denomin": 8, "artifact": 8, "numer": [8, 70, 138, 189, 274, 301, 329, 330, 343, 348, 349, 352, 353, 354, 355, 356, 440, 468, 484, 487], "misconcept": 8, "freed": 8, "appear": [8, 11, 37, 60, 85, 86, 109, 116, 117, 134, 187, 193, 462, 482, 484], "compuat": 8, "fix": [8, 42, 158, 260, 367, 369, 385, 389, 467, 476, 482, 487], "retain_graph": [8, 129, 130], "discuss": [8, 9, 474, 480, 481], "inplac": [8, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 355, 399, 400, 401, 466], "forward": [8, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 241, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 310, 311, 312, 313, 315, 316, 319, 321, 322, 324, 325, 327, 331, 332, 333, 335, 339, 347, 349, 351, 352, 354, 355, 356, 359, 360, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 399, 401, 402, 404, 405, 406, 407, 408, 458, 462, 469, 482, 486], "submodul": [8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 260, 277, 300, 304, 333, 335, 339, 363, 384, 399, 401], "param": [8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 230, 237, 239, 247, 248, 254, 258, 264, 266, 268, 275, 277, 292, 294, 310, 311, 312, 328, 333, 335, 339, 347, 352, 355, 358, 384, 394, 398, 399, 401, 404, 405, 406, 407, 408, 466, 470, 476, 480, 481, 482, 483, 486], "grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 356, 399, 401, 466, 468], "whose": [8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 322, 333, 335, 339, 355, 399, 401], "fit": [8, 67, 241, 260, 278, 462, 463, 466], "brax": [8, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 248, 471, 487], "jax": [8, 129, 130, 144, 145, 278], "improperli": 8, "underli": [8, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 384, 469, 471, 473, 475, 482], "tedeiou": 8, "priorit": [8, 63, 79, 108, 109, 369, 370, 371, 373, 374, 375, 382, 387, 389, 391, 392, 466, 467, 474, 486], "amount": [8, 158, 321, 404, 467, 484], "costli": [8, 482], "constitut": [8, 467, 481, 482], "profil": 8, "frequent": [8, 51, 484], "program": [8, 374, 382, 470, 487], "functorch": [8, 10], "incl": 8, "suit": [8, 133, 468, 471, 486, 487], "mujoco_instal": 8, "valueerror": [8, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 115, 243, 263, 470, 486, 487], "idea": [9, 387, 463, 469, 472, 480, 481], "introductori": 9, "intro": [9, 468, 469], "dai": [9, 486], "2022": [9, 10, 282, 486], "spin": [9, 132, 133], "hug": [9, 335, 339], "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 472], "summari": [9, 241, 274, 275, 466, 467, 468, 469], "reddit": 9, "reagent": 9, "orient": [9, 487], "baselines3": 9, "tf": 9, "bandit": [9, 155], "tensorflow": [9, 308, 309], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 470, 476], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 486], "grade": 9, "factori": [9, 15, 16, 18, 21, 22, 23, 25, 27, 68, 70, 79, 80, 81, 83, 466], "cherri": 9, "jaxrl": 9, "mbrl": [9, 152, 461], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 468, 469, 480, 481], "notebook": [10, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "24": [10, 117, 137, 153, 154, 181, 320, 351, 424, 480], "pip3": [10, 466, 468, 469, 480, 481], "url": [10, 96, 140, 478], "org": [10, 15, 16, 33, 63, 108, 109, 129, 130, 132, 133, 140, 144, 145, 150, 151, 153, 154, 155, 164, 172, 173, 217, 245, 270, 280, 286, 287, 288, 289, 290, 291, 294, 295, 296, 302, 307, 308, 309, 314, 315, 316, 320, 321, 322, 324, 325, 331, 349, 366, 367, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 388, 389, 390, 391, 404, 409, 417, 457, 477, 483], "whl": 10, "u": [10, 298, 299, 302, 303, 482], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 217, 468, 480, 481, 482, 484], "power": [11, 467], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 254, 458], "ultim": [11, 301, 329, 330], "ffmpeg": 11, "whatev": [11, 462, 466], "fed": [11, 179, 481, 484], "feed": [11, 245, 272, 384, 399, 461, 466, 480, 481, 484], "suppos": [11, 158, 437, 463, 487], "snippet": [11, 245, 270, 466], "gave": 11, "extrem": [11, 158, 167, 366, 368, 383, 386, 388, 399], "blurri": [11, 470], "stitch": 11, "exp_nam": [11, 424, 425, 426, 429, 430, 431, 452, 467, 475, 476], "my_exp": [11, 475], "pixels_onli": [11, 132, 133, 137, 139, 140, 164, 466, 467, 475, 476, 486, 487], "my_video": [11, 475], "record_env": [11, 475, 476], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 346, 461], "allow_non": 12, "unwrap": [12, 229, 267, 432], "seealso": 12, "timeout": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 158, 192, 195, 197], "close_env": [13, 15, 16, 18, 21, 22, 23, 25, 29], "shutdown": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 162, 168, 214, 466, 467, 484, 486], "init_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "kwarg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 53, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 111, 116, 117, 118, 120, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 211, 212, 214, 221, 245, 247, 256, 260, 265, 266, 267, 269, 271, 272, 274, 276, 277, 279, 281, 283, 284, 285, 287, 288, 289, 290, 293, 296, 297, 300, 301, 304, 305, 306, 307, 310, 311, 312, 317, 321, 330, 332, 333, 334, 335, 336, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 422, 424, 428, 429, 431, 435, 442, 447, 448, 453, 454, 455, 462, 468, 470, 481], "init": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 68, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 266, 274, 277, 310, 311, 312, 333, 335, 339, 399, 401, 404, 431, 460, 467, 468], "implic": [13, 22, 23, 25], "notimplementederror": [13, 22, 23, 25, 85, 466], "subclass": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 40, 43, 48, 66, 67, 73, 78, 86, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 212, 213, 266, 273, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 355, 356, 357, 359, 362, 384, 386, 460, 467, 469, 474, 482, 484], "policy_or_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 43, 66, 78, 216, 332, 333, 335, 339, 348, 351, 353, 399, 469], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "upload": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "transfer": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 356], "extract": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 75, 192, 199, 213, 235, 264, 268, 350, 466, 468, 486], "Will": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 109, 116, 153, 424], "_get_server_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "typeerror": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "weight_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 460, 467], "overwritten": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 232, 335, 339], "localweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "remoteweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "get_server_weight": 14, "policy_weight": [14, 17, 19, 24, 26], "design": [14, 24, 26, 36, 43, 48, 56, 58, 60, 66, 67, 73, 78, 114, 120, 127, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 217, 235, 246, 265, 267, 275, 277, 333, 335, 339, 347, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 392, 399, 401, 402, 458, 460, 466, 467, 468, 469, 471, 472, 473, 478, 479, 480, 481, 482, 484, 486, 487], "date": [14, 17, 131, 216, 427], "datacollectorbas": [14, 15, 17, 19, 20, 23, 24, 26, 31, 352, 356, 444, 447, 448, 452, 458], "all_worker_id": [14, 17, 19, 20, 24, 26, 31], "scope": [14, 17, 19, 20, 24, 26, 31, 85, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 470, 487], "classmethod": [14, 17, 19, 20, 24, 26, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 111, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 235, 270, 278, 285, 286, 319, 400], "from_polici": [14, 17, 19, 20, 24, 26, 31], "increment_vers": [14, 17, 19, 20, 24, 26, 29, 30, 31, 196], "increment": [14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189, 196, 241, 383, 460], "post_hook": [14, 17, 19, 20, 24, 26, 31], "push_weight": [14, 17, 19, 20, 24, 26, 31], "noth": [14, 17, 19, 20, 24, 26, 31, 51, 146, 188, 466, 468], "register_collector": [14, 17, 19, 20, 24, 26, 31], "register_post_hook": [14, 17, 19, 20, 24, 26, 31], "create_env_fn": [15, 16, 18, 21, 22, 23, 25, 27, 135, 158, 167, 466, 486], "policy_factori": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "device_typ": [15, 18, 21, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 245, 270, 272, 284, 285, 286, 287, 288, 289, 290, 296, 305, 310, 311, 313, 314, 319, 322, 355, 439, 450], "env_devic": [15, 16, 18, 21, 22, 23, 25, 27, 467], "create_env_kwarg": [15, 16, 18, 21, 27, 135, 153, 158, 167, 265, 466, 487], "collector_class": [15, 16, 22, 23, 25, 26, 27], "postproc": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 250, 467, 484], "explorationtyp": [15, 16, 18, 21, 22, 23, 25, 27, 352, 384, 437, 461, 466, 467, 468, 469, 472, 480, 486], "interactiontyp": [15, 18, 21, 22, 23, 25, 27, 176, 206, 352, 356, 437], "preemptive_threshold": [15, 16, 21], "num_thread": [15, 16, 21, 62, 64, 71, 85, 96, 97, 98, 138, 158, 167, 185, 189, 400], "num_sub_thread": [15, 16, 21, 158, 167], "str": [15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 102, 108, 109, 111, 122, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 209, 213, 217, 229, 235, 236, 237, 245, 249, 258, 259, 262, 264, 265, 267, 268, 270, 272, 273, 274, 277, 278, 281, 293, 294, 300, 304, 306, 307, 310, 311, 312, 322, 323, 331, 333, 335, 336, 337, 339, 343, 348, 349, 352, 353, 354, 355, 356, 359, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 456, 467, 468, 470, 478], "set_trunc": [15, 16, 18, 21, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "use_buff": [15, 16, 18, 158, 167], "extend_buff": [15, 16, 18], "replay_buffer_chunk": 15, "trust_polici": [15, 16, 18, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "compile_polici": [15, 16, 18], "cudagraph_polici": [15, 16, 18], "no_cuda_sync": [15, 16, 18], "datacollector": [15, 16, 18, 21, 27, 29, 30, 56, 386, 468, 474, 484], "recept": 15, "safe": [15, 16, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 109, 116, 185, 279, 321, 328, 329, 343, 348, 349, 352, 353, 354, 355, 356, 358, 400, 461, 486], "sota": [15, 16, 152, 233, 388, 433, 447, 460, 466, 467, 486], "guard": [15, 16], "doc": [15, 16, 81, 140, 143, 144, 145, 155, 164, 431, 462, 467, 480, 481, 484], "env_mak": [15, 16, 18, 27, 68, 128, 452, 487], "2000": [15, 16, 18, 56, 84, 141, 320, 424, 484], "50": [15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 72, 74, 75, 83, 86, 87, 88, 89, 90, 116, 117, 150, 151, 277, 469, 484], "del": [15, 16, 18, 29, 466, 467, 468, 479, 480, 484, 486, 487], "int64": [15, 16, 18, 29, 32, 34, 35, 39, 44, 45, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 71, 72, 76, 79, 81, 84, 85, 95, 96, 97, 98, 108, 116, 128, 131, 134, 138, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 193, 210, 214, 222, 229, 243, 250, 258, 294, 321, 323, 348, 349, 352, 353, 354, 400, 461, 482], "undergon": [15, 16, 18, 21, 22, 23, 25, 27, 84], "env_obs_kei": [15, 16, 18, 21, 22, 23, 25, 27], "mustn": [15, 16, 18, 21, 22, 23, 25, 27], "pickl": [15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 333, 335, 339, 399, 401], "exclus": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 70, 79, 80, 91, 92, 109, 116, 117, 191, 214, 230, 232, 298, 300, 302, 304, 308, 309, 336, 348, 349, 353, 354, 390, 391, 392, 404, 405, 406, 407, 408, 431, 456, 461], "lifespan": [15, 16, 18, 21, 22, 23, 25, 29, 30, 467], "divis": [15, 16, 18, 21, 22, 23, 25, 36, 109, 116, 117, 275, 280, 481], "endless": [15, 16, 18, 21, 22, 23, 25, 193], "sit": [15, 16, 18, 21, 22, 23, 25, 27, 444, 467], "cast": [15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 153, 154, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 236, 237, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 333, 335, 339, 355, 368, 383, 386, 399, 400, 401, 480, 487], "deriv": [15, 16, 22, 23, 25, 27, 82, 292, 442], "span": [15, 16, 18, 21, 22, 23, 25, 27, 109, 116, 117], "n_step": [15, 16, 18, 21, 22, 23, 25, 27, 56, 277, 351, 467, 468, 480, 481], "mainli": [15, 16, 18, 21, 22, 23, 25, 27, 72, 180, 181, 184, 431, 461, 480, 481, 482], "round": [15, 16, 18, 21, 22, 23, 25, 27, 131, 179], "closest": [15, 16, 18, 21, 22, 23, 25, 27], "boolm": [15, 16, 21], "ratio": [15, 16, 21, 72, 368, 386, 466, 468], "finish": [15, 16, 18, 21, 27, 29, 138, 189, 250, 487], "earli": [15, 16, 21, 56, 138, 189, 258, 486], "safeti": [15, 16, 21, 152, 158, 167, 275, 478], "harm": [15, 16, 21, 158, 167], "add_truncated_kei": [15, 16, 18, 21, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267], "trust": [15, 16, 18, 128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 223, 304], "cudagraphmodul": [15, 16, 18, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "behaviour": [15, 16, 18, 43, 66, 78, 333, 335, 339, 399, 469, 470, 486], "bypass": [15, 16, 18, 472], "isaaclab": [15, 16, 18, 139, 143], "maniskil": [15, 16, 18], "crash": [15, 16, 18, 250], "multiprocessedweightupdat": [15, 16], "ordereddict": [15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 274, 275, 277, 333, 335, 339, 369, 389, 399, 401], "worker0": [15, 16, 21], "state_dict0": [15, 16, 21], "worker1": [15, 16, 21], "state_dict1": [15, 16, 21], "reset_idx": [15, 16, 21], "static_se": [15, 16, 18, 21, 27, 29, 30, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267], "env_fn": [15, 16, 18, 21, 29, 30, 135, 454, 455], "env_fn_parallel": [15, 16, 18, 21, 29, 30], "300": [15, 16, 18, 21, 29, 30, 116, 117, 289, 290], "out_se": [15, 16, 18, 21, 29, 30, 487], "irrevers": [15, 16, 21], "pipe": [15, 16, 18, 21, 29, 158], "tqdm": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 111, 442, 466, 468, 469, 480, 481, 482], "ale_pi": [15, 16, 18, 21, 29, 470], "10000": [15, 16, 21, 27, 158, 280, 442, 469], "progress": [15, 16, 18, 21, 29, 30, 435, 436, 437, 442, 463, 467, 469, 487], "bar": [15, 16, 18, 21, 29, 102, 104, 124, 347, 435, 436, 437, 442, 463, 467], "pbar": [15, 16, 18, 21, 29, 466, 468, 469, 480, 481, 482], "100_000": [15, 16, 18, 21, 29, 470, 476], "prec_wc": [15, 16, 18, 21, 29], "wc": [15, 16, 18, 21, 29], "write_count": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 111], "set_descript": [15, 16, 18, 21, 29, 466, 468, 469, 480, 481, 482], "remote_collector": [17, 27], "max_interv": 17, "leverag": [17, 27, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 466, 481, 487], "_maybe_map_weight": [17, 20, 24, 26, 31], "_sync_weights_with_work": [17, 20, 24, 26, 31], "_skip_upd": 17, "interv": [17, 210, 262, 423, 424, 434, 444, 467, 482], "raycollector": [17, 68, 458], "return_same_td": 18, "interruptor": 18, "cautious": [18, 386], "whole": [18, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 84, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 352, 369, 389, 399, 401, 433, 466, 468], "_interruptor": 18, "outsid": [18, 226, 265, 462, 475, 480, 481, 482], "start_collect": 18, "stop_collect": 18, "preeptiv": 18, "chunk": [18, 29, 30, 472], "policy_state_dict": [18, 29, 30], "env_state_dict": [18, 29, 30], "256": [18, 29, 95, 150, 151, 235, 291, 467, 468, 470, 480, 481], "weight_gett": 19, "vanillaweightsend": 19, "fetch": [19, 62, 64, 71, 85, 96, 97, 98, 129, 130, 132, 133, 185, 194, 237, 400, 472, 483, 484], "sender": 19, "update_weight": [19, 24, 26, 444], "piec": [20, 101, 112, 123, 126, 127, 466, 467, 468, 475, 480, 481, 482, 484], "scheme": [20, 463, 487], "_push_weight": 20, "unchang": [20, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 227, 245, 260, 266, 267, 270, 272, 277, 297, 333, 335, 339, 355, 399, 401, 424, 439, 466, 484], "__call__": [20, 36, 43, 48, 56, 65, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 356, 399, 401, 463], "proxi": [20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 185, 309, 317, 352, 400, 462], "weakref": [20, 51, 85], "registr": [20, 467], "exporationtyp": [22, 23, 25], "collector_kwarg": [22, 23, 25, 27], "num_workers_per_collector": [22, 23, 25, 27], "slurm_kwarg": [22, 23, 25], "update_after_each_batch": [22, 23, 25, 27], "max_weight_update_interv": [22, 23, 25, 27], "tcp_port": [22, 23, 25, 28], "respect": [22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 211, 215, 221, 225, 228, 239, 245, 246, 255, 260, 266, 267, 270, 272, 277, 298, 302, 310, 325, 333, 335, 339, 355, 360, 366, 368, 383, 386, 388, 399, 401, 404, 406, 407, 438, 462, 468, 469, 480, 481], "subnod": [22, 23, 25, 27], "readi": [22, 25, 27, 29, 30, 459, 467, 468, 470, 472, 475, 484, 486], "fashion": [22, 25, 27, 62, 64, 71, 85, 96, 97, 98, 117, 185, 400], "distributed_back": [22, 23], "ucc": [22, 23], "submitit_delai": [22, 28], "former": [22, 23, 25, 32, 36, 43, 48, 63, 66, 67, 70, 73, 78, 79, 80, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362, 466], "whilst": [22, 23, 25], "homonym": [22, 23, 25, 482], "visit": [22, 23, 25, 85, 184], "facebookincub": [22, 23, 25], "tcp": [22, 23, 25, 28], "port": [22, 23, 25, 28, 31, 170, 337], "10003": [22, 23, 25, 28], "distributedweightupdat": 22, "liter": [23, 85, 96, 97, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 191, 193, 196, 335, 339, 342], "update_interv": 23, "frequenc": [23, 320, 466], "restart": 24, "rank": [24, 122, 281, 337, 338], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 32, 60, 352, 356], "tensorpiperpcbackendopt": 25, "rpcweightupdat": 25, "collector_info": 26, "collector_rref": 26, "ray_init_config": [27, 30, 68], "remote_config": [27, 29, 30, 63, 68, 69, 70, 79, 80, 111], "num_collector": [27, 454, 455, 466, 467], "coordin": [27, 224], "autodetect": 27, "num_cpu": [27, 68], "num_gpu": [27, 68], "1024": [27, 68, 291, 484], "equat": [27, 66, 85, 138, 189, 274, 275, 321, 365, 368, 390, 399, 468, 471, 482], "exce": [27, 484], "indefinit": [27, 94], "rayreplaybuff": [27, 63, 69, 70, 79, 80, 111, 458], "enfoc": 27, "rayweightupdat": 27, "distributed_collector": [27, 68], "add_collector": 27, "local_polici": 27, "stop_remote_collector": 27, "num_job": 28, "tcpport": 28, "submitit_main_conf": 28, "slurm_cpus_per_task": 28, "slurm_gpus_per_nod": 28, "slurm_partit": 28, "timeout_min": 28, "submitit_collection_conf": 28, "delai": [28, 391, 473], "jump": [28, 471], "host": [28, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "satellit": 28, "rendezv": 28, "hang": 28, "forev": 28, "default_config": [28, 286, 291, 319, 347], "default_slurm_conf_main": 28, "default_slurm_conf": 28, "dialog_turns_per_batch": [29, 30], "yield_only_last_step": [29, 30], "yield_completed_trajectori": [29, 30], "total_dialog_turn": [29, 30], "async_env": [29, 30], "flatten_data": [29, 30], "queue": [29, 162, 274, 401, 484, 486], "track_policy_vers": [29, 30, 196, 460], "policyvers": [29, 30, 460], "simplifi": [29, 63, 205, 472, 482, 484], "steps_per_batch": 29, "total_step": 29, "mediat": 29, "vllm": [29, 31, 187, 334, 335, 336, 337, 338, 339, 478], "vllmwrapper": [29, 179, 187, 335], "mocking_class": [29, 265], "dummystrdataload": 29, "llmenv": [29, 182, 190, 193, 339], "llm_model": 29, "gpt2": [29, 65, 72, 81, 84, 146, 188, 286, 291, 319, 335, 339], "get_token": 29, "pad_token": [29, 65, 81], "eos_token": [29, 65, 183], "from_dataload": [29, 187, 193], "from_text": [29, 179, 187, 193, 335, 339], "group_repeat": [29, 180, 181, 184, 187, 190, 193], "attention_mask": [29, 62, 64, 65, 71, 72, 81, 84, 95, 98, 187, 335, 339], "text": [29, 65, 72, 81, 96, 98, 146, 179, 180, 181, 183, 184, 186, 187, 188, 195, 197, 298, 299, 302, 303, 321, 335, 339, 401, 460, 468, 478], "nontensorstack": [29, 51, 58, 103, 128, 131, 146, 179, 181, 184, 188, 193, 199, 235, 264, 268, 339], "plsgqejeyd": 29, "text_respons": [29, 98, 179, 181, 183, 184, 186, 187, 189, 195, 197, 335, 339, 460, 478], "ec": 29, "tjbjz3perwhz": 29, "tokens_respons": [29, 98, 187, 335, 339], "as_remot": [29, 30, 63, 68, 69, 70, 79, 80, 111], "cl": [29, 30, 63, 68, 69, 70, 79, 80, 111, 467], "quantiti": [29, 30, 63, 68, 69, 70, 79, 80, 111], "reserv": [29, 30, 63, 68, 69, 70, 79, 80, 111, 463], "alia": [29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 102, 103, 104, 105, 111, 118, 120, 124, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 389, 391, 392, 399, 401, 402, 408], "get_policy_model": [29, 30], "rayllmcollector": [29, 458, 460], "get_policy_vers": [29, 30], "uuid": [29, 30, 196, 427, 467, 487], "disabl": [29, 30, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 301, 330, 333, 335, 339, 399, 401, 422, 466, 480, 481], "is_initi": [29, 30], "policy_vers": [29, 30, 196, 460], "sync_it": 30, "lightweight": [30, 470, 475], "dialog": 30, "yeild": 30, "block": [30, 95, 101, 127, 143, 184, 186, 197, 460, 461, 466, 469, 470, 473, 474, 480, 484], "idl": [30, 158], "somehwat": 30, "master_address": [31, 337], "master_port": [31, 337], "model_metadata": 31, "vllm_tp_size": 31, "master": [31, 33, 337, 480, 481], "localhost": [31, 170, 337], "Not": [31, 52, 53, 70, 129, 130, 144, 265, 300, 304], "get_model_metadata": 31, "transformerswrapp": [31, 179, 339], "rollout_tensordict": 32, "nestedkei": [32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 66, 71, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 109, 116, 117, 128, 131, 134, 138, 146, 158, 159, 162, 163, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 199, 203, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 274, 275, 277, 279, 283, 294, 297, 321, 323, 347, 351, 356, 371, 400, 401, 402, 422, 424], "as_nest": 32, "x": [32, 43, 56, 66, 67, 70, 72, 73, 78, 117, 146, 188, 235, 237, 263, 268, 278, 280, 282, 283, 285, 294, 296, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 332, 333, 335, 339, 348, 352, 353, 362, 365, 399, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 442, 460, 466, 470, 480, 482, 484, 486], "durat": [32, 481], "meta": [32, 62, 64, 71, 83, 85, 96, 97, 98, 136, 140, 185, 366, 368, 383, 386, 388, 400, 463, 468, 480, 481, 484], "aren": [32, 259, 469], "eventu": [32, 322, 469, 482], "recov": [32, 116, 117, 357, 374, 382, 479], "layout": 32, "to_padded_tensor": 32, "nested_tensor": [32, 137, 139], "stride": [32, 36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 284, 285, 287, 288, 296, 310, 333, 335, 339, 399, 401, 467, 480, 486], "jag": 32, "focu": [32, 466, 467, 468, 470, 472, 473, 474, 480], "team": [32, 480, 481, 486], "cat": [32, 51, 193, 360, 367, 369, 370, 382, 387, 389, 391, 392, 480, 484, 486], "arang": [32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 109, 116, 117, 210, 294, 308, 309, 348, 433, 461, 484], "obs_": 32, "trajectory_id": 32, "int32": [32, 36, 37, 51, 80, 86, 116, 144, 145, 156, 157, 169, 202, 351], "data_split": 32, "got": [32, 474], "init_kl_coef": 33, "horizon": [33, 150, 151, 172, 173, 281, 307, 468], "kl": [33, 42, 72, 194, 237, 378, 383, 399], "describ": [33, 62, 64, 71, 83, 85, 96, 97, 98, 163, 185, 218, 328, 329, 371, 400, 427, 462, 466, 468, 480, 481, 482, 487], "ziegler": 33, "et": [33, 281], "relax": [33, 422], "penalti": [33, 72, 191, 380, 383], "strai": [33, 72], "greater": [33, 109, 116, 117, 222, 238, 239, 300, 304, 369, 466, 467], "increas": [33, 100, 217, 261, 282, 321, 368, 386, 399, 480, 481], "pull": [33, 51, 85, 180, 484], "toward": [33, 272], "aggress": 33, "kl_coef": [33, 42, 72], "arxiv": [33, 63, 108, 109, 129, 130, 132, 133, 144, 145, 150, 151, 153, 154, 164, 172, 173, 217, 245, 270, 280, 286, 287, 288, 289, 290, 291, 294, 295, 296, 302, 307, 314, 315, 316, 320, 321, 322, 324, 325, 331, 349, 366, 367, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 386, 389, 390, 391, 404, 409, 417, 483], "pdf": [33, 217, 286, 287, 288, 289, 290, 294, 320, 321, 349, 369, 376, 380, 387, 390, 391, 404, 409, 417], "1909": 33, "08593": 33, "lm": 33, "blob": 33, "lm_human_prefer": 33, "train_polici": 33, "kl_valu": 33, "coef": [33, 194, 237, 368, 383, 386], "newest": 33, "int8": [34, 134, 149, 160, 161, 215], "encod": [34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 129, 130, 134, 137, 138, 139, 140, 143, 144, 145, 153, 154, 156, 157, 164, 170, 171, 179, 189, 210, 227, 316, 317, 320, 324, 335, 339, 365, 467, 468, 469, 472, 482, 484], "null": [34, 37, 38, 40, 41, 43, 49, 50, 58, 59, 63, 74, 75, 79, 83, 86, 87, 88, 89, 90, 108, 109, 179, 187, 215, 235], "denot": [34, 481], "clariti": [34, 51], "assert_is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "cardin": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 294, 323, 348, 349, 354, 468], "outcom": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 292, 308, 309, 328, 384, 399, 480], "cartesian": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "clear_device_": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 487], "np": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 138, 189, 273, 359, 422, 470, 480, 482], "ndarrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 138, 189, 321, 359, 422, 470, 480], "ignore_devic": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "arrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 72, 74, 75, 83, 86, 87, 88, 89, 90, 108, 128, 131, 134, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 193, 229, 298, 299, 302, 303, 466, 480], "use_mask": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 160, 161], "erase_memoize_cach": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "memoiz": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 138, 189], "memoize_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "compliant": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "singleton": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 186, 284, 285, 305, 326, 327, 458, 462, 478], "start_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "end_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "implements_for_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "torch_funct": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "index_typ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 58, 59, 74, 75, 83, 86, 87, 88, 89, 90], "tensor_to_index": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "exanpl": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 294, 309, 323], "categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 352], "to_categorical_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_categor": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "make_neg_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "convert": [34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 128, 129, 130, 131, 134, 137, 138, 139, 140, 143, 144, 145, 146, 153, 154, 156, 157, 158, 159, 162, 164, 167, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 221, 225, 228, 245, 260, 266, 267, 270, 272, 274, 275, 277, 333, 335, 339, 355, 365, 384, 399, 400, 401, 466, 467, 468, 482, 484], "shortcut": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 482, 487], "ndimens": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 466], "violat": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 461], "project": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 74, 75, 83, 86, 87, 88, 89, 90, 227, 279, 302, 321, 343, 348, 349, 352, 353, 354, 355, 356, 431, 461, 486, 487], "uniformli": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 110, 384, 399, 487], "normal": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 69, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 241, 274, 275, 279, 280, 284, 285, 301, 305, 308, 309, 329, 330, 352, 356, 368, 369, 383, 386, 401, 437, 440, 456, 461, 463, 469, 472, 481, 487], "drawn": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 260, 297, 352, 356, 468, 480, 481], "set_provisional_n": [34, 35, 39, 44, 52, 53], "temporarili": [34, 35, 39, 44, 52, 53, 100, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 474, 484], "dest": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 245, 270, 272, 355], "to_numpi": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "transformed_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 267, 328, 456], "check_spec_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_one_hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 129, 130, 137, 139, 140, 143, 144, 145, 150, 151, 153, 154, 156, 157, 160, 161, 164, 170, 171, 172, 173, 210, 227, 294, 317, 318, 323, 348, 349, 353, 354, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 469], "categ_sampl": [34, 35, 39, 44, 54, 55, 60, 61], "onehot_sampl": [34, 35, 39, 44, 54, 55], "to_one_hot_spec": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "categoricalbox": [34, 35, 39, 44, 54, 55, 60, 61, 159], "type_check": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "update_mask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "unmask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 308], "ts": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "num_bit": 36, "convert_to_binari": 36, "decim": 36, "1001": 36, "bit": [36, 235, 468, 469, 471, 480, 481, 484], "heavysid": 36, "binary_to_decim": 36, "add_modul": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "fn": [36, 43, 48, 56, 65, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 268, 277, 333, 335, 339, 399, 401, 454, 455], "recurs": [36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 91, 92, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401, 470], "init_weight": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "m": [36, 43, 48, 52, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 227, 277, 283, 333, 335, 339, 356, 399, 401, 467, 482], "fill_": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 467, 469], "net": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 288, 290, 293, 296, 311, 333, 335, 339, 366, 367, 369, 375, 382, 386, 387, 388, 389, 399, 401, 452, 467, 482, 483, 486], "in_featur": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 284, 285, 287, 288, 289, 290, 296, 305, 310, 311, 313, 314, 333, 335, 339, 344, 355, 363, 371, 373, 399, 401, 470, 472, 473], "out_featur": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 152, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 281, 284, 285, 287, 288, 289, 290, 295, 296, 300, 304, 305, 307, 310, 311, 313, 314, 333, 335, 339, 344, 348, 355, 363, 371, 373, 399, 401, 461, 466, 469, 470, 472, 473, 476, 486], "bia": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 235, 245, 260, 265, 266, 267, 270, 272, 277, 280, 284, 285, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 311, 313, 314, 321, 333, 335, 339, 355, 362, 364, 365, 369, 384, 389, 399, 401, 462, 466, 467, 468, 469, 481], "requires_grad": [36, 43, 48, 56, 66, 67, 73, 78, 128, 129, 130, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 265, 267, 277, 320, 333, 335, 339, 356, 369, 389, 399, 401], "bfloat16": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "datatyp": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 484], "member": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401, 424], "xdoctest": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 235, 245, 260, 265, 266, 267, 270, 272, 277, 333, 335, 339, 355, 369, 384, 389, 399, 401], "buf": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "20l": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401], "1l": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401], "5l": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401], "doubl": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 225, 226, 228, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 371, 376, 381, 387, 390, 399, 401, 402, 466, 467, 468, 469, 487], "eval": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 274, 277, 282, 333, 335, 339, 368, 386, 399, 401, 461, 466, 467, 468], "evalu": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 139, 146, 150, 151, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 222, 267, 277, 282, 292, 308, 309, 317, 330, 333, 335, 339, 387, 399, 401, 447, 448, 467, 468, 476], "dropout": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 282, 283, 298, 300, 302, 304, 305, 333, 335, 339, 399, 401, 461, 469], "batchnorm": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 280, 333, 335, 339, 399, 401], "comparison": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 267, 277, 333, 335, 339, 384, 399, 401, 466, 467], "extra_repr": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "recip": [36, 43, 48, 65, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 312, 315, 316, 319, 321, 324, 325, 327, 332, 333, 335, 339, 347, 349, 351, 354, 359, 362], "get_buff": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "get_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "qualifi": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "referenc": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "resolv": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "someth": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 149, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 459, 467, 468, 482, 487], "get_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 333, 335, 339, 399, 401], "set_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 333, 335, 339, 399, 401], "picklabl": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 333, 335, 339, 399, 401], "get_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "net_b": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "net_c": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "conv": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 284, 285, 333, 335, 339, 399, 401, 467], "conv2d": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 285, 287, 288, 296, 310, 333, 335, 339, 399, 401], "kernel_s": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 284, 285, 287, 288, 296, 310, 315, 333, 335, 339, 399, 401, 467, 486], "diagram": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "degre": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 223, 277, 333, 335, 339, 399, 401], "named_modul": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "half": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401, 466], "ipu": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "strict": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 369, 389, 399, 400, 401, 470], "descend": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "get_swap_module_params_on_convers": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "persist": [36, 43, 46, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 235, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "preserv": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 355, 369, 389, 399, 401], "missing_kei": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "unexpected_kei": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "namedtupl": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "l": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 298, 302, 333, 335, 339, 399, 401, 403, 468, 482], "idx": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "mtia": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "named_buff": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "remove_dupl": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401], "prepend": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 384, 399, 401, 470], "running_var": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "named_children": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "conv4": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "conv5": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "memo": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "named_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 237, 277, 333, 335, 339, 384, 399, 401], "register_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "removablehandl": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "favor": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 277, 333, 335, 339, 399, 401, 468], "register_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_buff": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "running_mean": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "alongsid": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 460, 475], "num_featur": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 280, 333, 335, 339, 399, 401], "register_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 294, 323, 333, 335, 339, 399, 401], "with_kwarg": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "always_cal": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_module_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "regardless": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 368, 383, 386, 399, 401], "register_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "invok": [36, 43, 48, 56, 66, 67, 69, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "And": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 338, 339, 399, 401, 473], "forward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_module_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "ordinarili": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "grad_input": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "grad_output": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "technic": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 467, 469, 470, 472], "caller": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_module_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "backward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_module_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_load_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "incompatible_kei": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "thrown": [36, 43, 48, 56, 66, 67, 73, 74, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 484], "register_load_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "local_metadata": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "error_msg": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "noqa": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 143, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "b950": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_modul": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 463], "register_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "register_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "keep_var": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 369, 389, 399, 400, 401], "requires_grad_": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 470], "autograd": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401], "freez": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 274, 275, 277, 333, 335, 339, 399, 401], "finetun": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "gan": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "set_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "share_memori": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 135, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 466], "share_memory_": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401, 486], "destin": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 208, 216, 225, 226, 228, 235, 265, 267, 270, 274, 277, 333, 335, 339, 369, 389, 399, 400, 401, 424], "averag": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 274, 275, 277, 321, 333, 335, 339, 369, 377, 378, 389, 399, 401, 440, 466, 468], "shallow": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 369, 389, 399, 401, 469], "detach": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 235, 265, 267, 277, 333, 335, 339, 369, 380, 384, 389, 391, 399, 401, 404, 405, 406, 407, 466], "non_block": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 400, 401, 469], "memory_format": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "channels_last": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "tri": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401, 475], "pin": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "4d": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "ignore_w": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "1913": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "3420": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "5113": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "2325": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "torch_doctest_cuda1": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "gpu1": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "1914": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "5112": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "2324": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "float16": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 299, 303, 333, 335, 339, 355, 399, 401], "cdoubl": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "3741": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "j": [36, 43, 48, 56, 63, 66, 67, 73, 78, 108, 109, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401, 463, 473], "2382": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "5593": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "4443": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "complex128": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "6122": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "1150": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 221, 245, 260, 266, 267, 270, 272, 277, 333, 335, 339, 355, 399, 401], "to_empti": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "dst_type": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "xpu": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "set_to_non": [36, 43, 48, 56, 66, 67, 73, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 277, 333, 335, 339, 399, 401], "upper": [37, 114, 240], "continuousbox": [37, 40, 86, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 202, 235, 238, 260, 268], "provision": 39, "descript": [40, 143, 172, 179, 195, 213, 467, 468], "akin": 40, "unnam": 40, "compositespec": [40, 458, 478, 482, 487], "constraint": [40, 152, 329, 468, 480, 481], "data_cl": 40, "tensorclass": [40, 62, 64, 71, 85, 95, 96, 97, 98, 102, 104, 124, 185, 400], "pixels_spec": 40, "observation_vector_spec": 40, "composite_spec": 40, "observation_vector": [40, 218, 466], "_nodefault": [40, 41, 49, 75], "is_empti": [40, 41, 49, 75, 482], "include_nest": [40, 41, 49, 75], "leaves_onli": [40, 41, 49, 75], "is_leaf": [40, 41, 49, 75], "_compositespecitemsview": [40, 41, 49, 75], "_compositespeckeysview": [40, 41, 49, 75], "reflect": [40, 41, 49, 75, 139, 160, 161, 208, 235, 273, 384, 399, 445, 467, 468, 469, 481], "lock_": [40, 41, 49, 75], "propag": [40, 41, 49, 75, 366, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 404, 405, 406, 407, 468, 480, 481], "succeed": [40, 41, 49, 75, 235, 268], "pop": [40, 41, 49, 75], "keyerror": [40, 41, 49, 75, 180, 181, 184, 267], "selected_kei": [40, 41, 49, 75, 254, 466], "unlock_": [40, 41, 49, 75], "_compositespecvaluesview": [40, 41, 49, 75], "multipli": [42, 187, 193, 282, 298, 302, 366, 367, 368, 369, 375, 383, 385, 386, 387, 389, 399, 440, 466, 480], "calcul": [42, 72, 181, 250, 298, 366, 368, 373, 383, 386, 388, 391, 399, 404], "reassign": 43, "reward2go": [43, 458], "reward_key_out": 43, "time_dim": [43, 404, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421], "unrol": [43, 377, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421], "discount": [43, 56, 135, 250, 277, 367, 373, 376, 377, 379, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 462, 467, 468, 480, 481], "lastrewardtotraj": 43, "last_reward_to_traj": 43, "new_tensordict": 43, "is_tdmodule_compat": [43, 66, 78, 333, 335, 339, 399], "reset_out_kei": [43, 66, 78, 333, 335, 339, 399], "orign": [43, 66, 78, 333, 335, 339, 399], "mod": [43, 66, 78, 222, 237, 283, 300, 304, 333, 335, 339, 351, 356, 359, 399, 469, 470, 476], "select_out_kei": [43, 66, 78, 333, 335, 339, 366, 367, 369, 370, 374, 375, 382, 386, 387, 389, 391, 392, 399, 470], "reset_parameters_recurs": [43, 66, 78, 333, 335, 339, 384, 399], "relu": [43, 66, 78, 152, 281, 291, 307, 333, 335, 339, 365], "old_param": [43, 66, 78, 333, 335, 339], "bork": [43, 66, 78, 333, 335, 339], "dork": [43, 66, 78, 333, 335, 339], "reset_paramet": [43, 66, 78, 312, 333, 335, 339], "from_modul": [43, 66, 78, 294, 333, 335, 339, 355, 358, 486], "out_keys_sourc": [43, 66, 78, 333, 335, 339, 399], "rubric": [43, 66, 78, 241, 333, 335, 339, 358, 399], "revert": [43, 66, 78, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 333, 335, 339, 399, 472, 484], "seq": [43, 66, 78, 283, 298, 300, 302, 304, 333, 335, 339, 351, 399, 469, 470, 476, 479], "z": [43, 66, 78, 299, 333, 335, 339, 399], "shift_kei": [45, 47, 57, 76], "is_full_kei": [45, 47, 57, 76], "is_ful": [45, 47, 57, 76], "tempfil": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 96, 97, 98, 102, 111, 185, 400, 452, 466, 467, 469, 470, 474, 480, 483, 484], "register_save_hook": [45, 63, 68, 69, 70, 76, 79, 80, 111], "temporarydirectori": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 96, 97, 98, 111, 185, 400, 466, 467, 469, 470, 474, 480, 483, 484], "tmpdir": [45, 63, 68, 69, 70, 76, 79, 80, 84, 111, 466, 467, 470, 480], "rb_load": [45, 63, 68, 69, 70, 79, 80, 111], "register_load_hook": [45, 63, 68, 69, 70, 79, 80, 111], "filesystem": [46, 484], "ted2nest": [47, 458], "stackedcomposit": [49, 458], "tensordictmap": [51, 458], "observation_kei": [51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "excluded_kei": [51, 230], "consolid": [51, 78, 92, 104], "lazili": [51, 103, 311, 482], "from_tensordict_pair": [51, 78], "querymodul": [51, 78], "get_keys_from_env": 51, "cattensor": [51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 466, 479, 482, 487], "unsqueezetransform": [51, 217, 482, 484], "oracl": 51, "obs_kei": 51, "state_kei": [51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "reset_st": 51, "rollout0": 51, "rollout1": 51, "rollout1b": 51, "collaps": 51, "max_length": [51, 62, 64, 65, 81, 84, 85, 95, 193, 199, 264, 470, 476], "valid_path": [51, 85], "assert_clos": 51, "subtre": [51, 85], "intersect": [51, 278], "Or": [51, 165, 166, 310], "rollout_from_path": [51, 85], "plot": [51, 85, 466, 468, 469, 480, 481, 482], "_nestedkei": [51, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "return_nod": 51, "diverg": [51, 194, 237, 352, 356, 378, 383, 399], "endpoint": 51, "r0": [51, 466], "123": [51, 85], "392": [51, 85], "989": [51, 85], "809": [51, 85], "847": [51, 85], "r1": 51, "235": 51, "td_root": [51, 85], "node_data": [51, 85], "node_id": [51, 85], "nontensordata": [51, 58, 97, 131, 156, 157, 193, 199, 235, 264, 268, 422], "_parent": [51, 85], "0x716eeb78fbf0": 51, "0x": 51, "4341220243998689835": 51, "6745467818783115365": 51, "win": [51, 85], "to_str": [51, 85], "node_format_fn": [51, 85], "indent": [51, 85], "rollouts_data": [51, 85], "456": [51, 85], "359": [51, 85], "3094": [51, 85], "75": [51, 85, 116], "948": [51, 85], "68": [51, 85, 116], "9045": [51, 85], "rollout_data": [51, 85], "nvec": [52, 54], "remove_singleton": 52, "ax": [52, 313, 314, 480], "neither": [52, 53, 54, 55, 170, 482], "use_regist": [54, 60], "mone_hot": [54, 55], "boxlist": [54, 55], "gamma": [56, 250, 277, 307, 366, 367, 369, 370, 371, 373, 375, 376, 377, 379, 382, 384, 386, 387, 388, 389, 391, 392, 393, 394, 399, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 452, 462, 466, 467, 468, 480, 481, 486], "sutton": [56, 462, 480, 481], "1988": 56, "tempor": [56, 300, 304, 307, 405, 406, 411, 412], "44": [56, 116], "ahead": [56, 277, 487], "bias": [56, 298, 299, 302, 303, 362, 462, 466], "mitig": [56, 217], "multisteptransform": [56, 458], "99": [56, 250, 274, 307, 379, 394, 403, 410, 452, 466, 467, 468, 470, 473, 476, 480, 481, 486], "nontermin": 56, "original_reward": 56, "newli": [56, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "OR": 56, "row": [57, 77, 144, 145, 238], "example_data": [58, 97, 184, 187, 193], "conform": 58, "templat": [58, 97, 179, 180, 181, 184, 198, 425], "randomli": [58, 115, 169, 211, 240, 241, 260, 297, 352, 356, 472, 480, 481, 482, 484], "unidimension": 60, "action_valu": [60, 293, 294, 323, 348, 349, 353, 354, 369, 375, 384, 399, 402, 461, 469, 470, 472, 476], "keepdim": 60, "chosen_action_valu": [60, 322, 323, 331, 353, 354, 402, 461, 469, 472], "priori": 60, "uniqu": [60, 85, 116, 117, 146, 150, 151, 186, 188, 217, 229, 259, 260, 261, 265, 351, 431, 474, 484], "tensor_spec": [60, 163, 209, 211, 374, 375, 386, 388], "one_hot_sampl": [60, 61], "chosen_data": [62, 95], "rewarddata": [62, 95, 458], "rejected_data": [62, 95], "copy_exist": [62, 64, 71, 85, 96, 97, 98, 185, 400], "return_earli": [62, 64, 71, 85, 96, 97, 98, 185, 400], "share_non_tensor": [62, 64, 71, 85, 96, 97, 98, 185, 400], "memmap": [62, 64, 71, 85, 96, 97, 98, 102, 158, 167, 185, 274, 400, 424, 426, 439], "dataclass": [62, 64, 71, 83, 85, 96, 97, 98, 185, 384, 400], "from_dataset": [62, 64, 95], "dataset_nam": [62, 64, 72, 84, 95, 155], "550": [62, 64, 72, 84, 95, 116, 117], "root_dir": [62, 64, 84, 95], "from_disk": [62, 64, 84, 95], "carperai": [62, 64, 72, 84], "openai_summarize_comparison": [62, 64, 84], "load_from_disk": [62, 64, 84, 95], "load_dataset": [62, 64, 84, 95], "92534": 62, "input_id": [62, 64, 65, 71, 72, 81, 84, 95, 146, 187, 188], "end_scor": [62, 71, 72, 95], "sub_data": [62, 64], "from_tensordict": [62, 64, 71, 85, 96, 97, 98, 185, 400], "non_tensordict": [62, 64, 71, 85, 96, 97, 98, 185, 400], "getattr": [62, 64, 71, 85, 96, 97, 98, 185, 400], "load_memmap": [62, 64, 71, 85, 96, 97, 98, 185, 400], "load_": [62, 64, 71, 85, 96, 97, 98, 185, 400], "load_memmap_": [62, 64, 71, 85, 96, 97, 98, 185, 400], "fromkei": [62, 64, 71, 85, 96, 97, 98, 185, 400], "saved_td": [62, 64, 71, 85, 96, 97, 98, 185, 400], "td_load": [62, 64, 71, 85, 96, 97, 98, 185, 400], "fake": [62, 64, 71, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 400, 466, 467, 470], "_subclass": [62, 64, 71, 85, 96, 97, 98, 185, 400], "faketensormod": [62, 64, 71, 85, 96, 97, 98, 185, 400], "faketensor": [62, 64, 71, 85, 96, 97, 98, 185, 400], "from_flatten": [62, 64, 71, 85, 96, 97, 98, 185, 400], "attemptedli": [62, 64, 71, 85, 96, 97, 98, 185, 400], "existsok": [62, 64, 71, 85, 96, 97, 98, 102, 185, 400], "mimic": [62, 64, 71, 85, 96, 97, 98, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 185, 187, 188, 189, 400], "cross": [62, 64, 71, 85, 96, 97, 98, 185, 281, 400], "tensordictfutur": [62, 64, 71, 85, 96, 97, 98, 185, 400], "serialis": [62, 64, 71, 85, 96, 97, 98, 185, 400], "deepli": [62, 64, 71, 85, 96, 97, 98, 185, 400], "memmap_": [62, 64, 71, 85, 96, 97, 98, 185, 274, 400], "memmap_lik": [62, 64, 71, 85, 96, 97, 98, 185, 400], "contentless": [62, 64, 71, 85, 96, 97, 98, 185, 400], "1_000_000": [62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 96, 97, 98, 111, 116, 185, 400, 466, 469, 480], "alloc": [62, 64, 71, 85, 96, 97, 98, 104, 185, 292, 308, 309, 400, 460, 466], "memmap_refresh_": [62, 64, 71, 85, 96, 97, 98, 185, 400], "refresh": [62, 64, 71, 85, 96, 97, 98, 185, 400, 476, 480, 481], "saved_path": [62, 64, 71, 85, 96, 97, 98, 185, 400], "setattr": [62, 64, 71, 85, 96, 97, 98, 185, 400], "tent": [62, 64, 71, 84, 85, 96, 97, 98, 185, 400], "to_tensordict": [62, 64, 71, 85, 96, 97, 98, 185, 400, 469], "retain_non": [62, 64, 71, 85, 96, 97, 98, 185, 400], "discrard": [62, 64, 71, 85, 96, 97, 98, 185, 400], "alpha": [63, 79, 108, 109, 284, 285, 287, 288, 289, 290, 296, 310, 367, 369, 375, 385, 387, 389, 391, 466, 484, 486], "ep": [63, 79, 108, 109, 241, 274, 275, 280, 321, 368, 390, 399, 440, 462, 466, 467, 469, 470, 473, 476], "1e": [63, 79, 108, 109, 241, 274, 275, 280, 292, 295, 328, 466, 467, 468, 481], "08": [63, 79, 108, 109], "pin_memori": [63, 70, 79, 80, 244, 466, 486], "schaul": [63, 108, 109], "quan": [63, 108, 109], "antonogl": [63, 108, 109], "silver": [63, 108, 109], "2015": [63, 108, 109, 222], "ab": [63, 108, 109, 129, 130, 132, 133, 144, 145, 150, 151, 153, 154, 164, 172, 173, 216, 245, 270, 274, 280, 286, 291, 295, 296, 302, 307, 314, 315, 316, 322, 324, 325, 331, 366, 367, 371, 372, 373, 374, 377, 378, 379, 381, 382, 385, 386, 389, 483], "1511": [63, 108, 109, 296], "05952": [63, 108, 109], "expon": [63, 79, 108, 109], "\u03b1": [63, 79, 108, 109], "delta": [63, 79, 108, 109, 298, 302, 328, 352, 356, 458, 462, 480], "1_000": [63, 70, 79, 80, 480, 484], "mini": [63, 70, 79, 80, 481], "decid": [63, 70, 79, 80, 480, 486], "incompat": [63, 70, 79, 80, 388, 484], "drop_last": [63, 70, 79, 80, 115, 117], "notion": [63, 70, 79, 80, 320], "caution": [63, 70, 79, 80, 115, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 487], "codebas": [63, 70, 79, 80, 482], "return_info": [63, 68, 69, 70, 79, 80, 108, 109, 111, 484], "tensordictprioritizedreplaybuff": [63, 458, 486], "_weight": [63, 79, 108, 109], "update_prior": [63, 108, 109, 439, 463, 467, 484, 486], "36278465": 63, "invert": [63, 68, 69, 70, 79, 80, 111, 364, 468], "default_remote_class_config": [63, 68, 69, 70, 79, 80, 111], "randomsampl": [63, 68, 69, 70, 79, 80, 111, 466, 480], "td_error": [63, 68, 69, 70, 79, 80, 111, 369, 370, 371, 373, 374, 375, 376, 382, 384, 387, 389, 391, 392, 399, 402, 466, 484, 486], "update_tensordict_prior": [63, 68, 69, 70, 79, 80, 111, 466, 484, 486], "insert_transform": [63, 68, 69, 70, 79, 80, 111, 180, 181, 184, 212, 267], "insert": [63, 68, 69, 70, 79, 80, 101, 111, 112, 122, 123, 126, 127, 180, 181, 184, 212, 217, 221, 257, 267, 269], "__iter__": [63, 68, 69, 70, 79, 80, 111, 193], "set_sampl": [63, 68, 69, 70, 79, 80, 111], "set_storag": [63, 68, 69, 70, 79, 80, 111], "set_writ": [63, 68, 69, 70, 79, 80, 111], "prompt_rindex": [64, 65, 72], "promptdatatldr": 64, "116722": 64, "prompt": [65, 72, 97, 179, 182, 186, 187, 193, 195, 197, 401, 460], "return_tensordict": [65, 81], "tensodict": [65, 81], "valid_sampl": 65, "eough": 65, "toknen": 65, "meet": 65, "criterion": 65, "autotoken": [65, 81, 84, 97, 179, 180, 181, 183, 184, 191, 195, 197, 335, 339, 460, 478], "from_pretrain": [65, 72, 81, 146, 179, 181, 184, 188, 195, 197, 335, 460, 478], "enough": [65, 484], "inde": [65, 227, 468, 470, 482], "index_kei": [66, 78], "hash_kei": 66, "_hash": 66, "hash_modul": [66, 73, 78], "siphash": [66, 67, 78, 146, 188], "hash_to_int": 66, "hashtoint": 66, "query_modul": [66, 78], "key1": [66, 78, 218, 257, 433, 441, 486], "key2": [66, 78, 218, 257, 433, 441, 486], "write_hash": 66, "n_compon": 67, "dtype_cast": 67, "as_tensor": [67, 73, 470], "init_method": 67, "emb": [67, 469], "sklearn": [67, 155], "byte": [67, 73, 182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 401], "builtin": [67, 73], "pythonhashse": [67, 73], "todo": [67, 194], "optiona": 68, "transform_factori": [68, 70, 79, 80], "asyncio": [68, 128], "ray_buff": 68, "object_store_memori": 68, "600": [68, 72], "await": 68, "invoc": 69, "friendli": [69, 466], "include_info": [69, 79, 80], "storagecheckpointerbas": [70, 118], "roundrobinwrit": 70, "_pytre": [70, 484], "tree_map": [70, 484], "assert0": [70, 484], "ref_model": 72, "reward_model": [72, 361], "max_new_token": 72, "score_clip": 72, "kl_schedul": 72, "klcontrollerbas": 72, "num_step": [72, 470], "causal": 72, "sentenc": [72, 183], "frozen": [72, 194, 237, 274, 275], "gpt2rewardmodel": 72, "get_dataload": [72, 458], "promptdata": [72, 458], "gpt2lmheadmodel": 72, "dl": [72, 193], "block_siz": [72, 95], "tensorclass_typ": [72, 95], "openai_summarize_tldr": 72, "config_class": 72, "model_path": 72, "rollout_from_model": 72, "rollout_from_data": 72, "reward_kl": [72, 237], "reward_raw": 72, "sample_log_prob": [72, 237, 344, 345, 346, 352, 356, 358, 386], "create_rollout_td": 72, "log_prob": [72, 98, 194, 292, 308, 309, 317, 320, 330, 335, 339, 356, 369, 462], "log_ratio": 72, "replic": [72, 462], "rindex": 72, "eo": [72, 186], "generation_config": 72, "generationconfig": 72, "ti": [72, 413, 414, 415, 416, 418, 419, 420, 421, 467], "log_probs_gen": 72, "logprobs_of_label": 72, "hash_a": 73, "4669941682990263259": 73, "3778166555168484291": 73, "9122128731510687521": 73, "hash_b": 73, "heterogen": [74, 75, 103, 128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 310, 311, 466, 467], "220": 76, "resembl": 78, "tensormap": 78, "collat": [78, 111, 180, 181, 184], "subtyp": 78, "embedding_storag": 78, "tensor_dict_storag": 78, "new_index": 78, "key3": 78, "retrieve_valu": 78, "storage_constructor": 78, "write_fn": 78, "tensordictstorag": 78, "thumb": [78, 158, 468], "lazydynamicstorag": 78, "fixedstorag": 78, "randomprojectionhash": 78, "priority_kei": [79, 80, 108, 369, 371, 374, 375, 376, 382, 384, 387, 389, 391, 392, 399, 402, 484, 486], "reduct": [79, 108, 109, 122, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 399], "prioritizedreplaybuff": [79, 458, 486], "min": [79, 108, 109, 122, 321, 367, 368, 369, 375, 385, 387, 389, 399, 467, 468], "median": [79, 108, 109, 122, 138, 144, 145, 189, 210, 352, 356], "huggingfac": [81, 186, 350], "co": [81, 186, 229, 482], "pad_trunc": 81, "am": 81, "me": [81, 195, 478], "reassur": 81, "ok": 81, "_encode_memo_dict": 83, "primarili": [83, 246, 472], "educ": 83, "guess": 83, "knowledg": [83, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 473, 475], "tokenizer_fn": 84, "tensordicttoken": [84, 458], "pre_tokenization_hook": 84, "valid_s": 84, "tokenizer_class": 84, "tokenizer_model_nam": 84, "tokein": 84, "elementwis": 84, "vocabulari": [84, 146, 187, 188, 199, 264], "loader": [84, 468], "185068": 84, "dataset_to_tensordict": 84, "data_dir": 84, "batch_dim": [84, 128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 456], "valid_mask_kei": 84, "batch_dimens": 84, "filder": 84, "from_dict": [84, 193], "data_memmap": 84, "ref": 85, "branching_act": 85, "prev_act": 85, "edg": [85, 470], "travers": 85, "breadth": 85, "bf": 85, "fully_expand": 85, "get_vertex_by_hash": 85, "get_vertex_by_id": 85, "is_termin": 85, "make_nod": 85, "node_observ": 85, "bag": 85, "num_children": 85, "num_vertic": 85, "count_repeat": 85, "recustruct": 85, "plotli": 85, "make_label": 85, "visual": [85, 245, 270, 272, 424, 468, 480, 482], "unsupport": 85, "selected_act": 85, "mctsforest": [85, 146, 188, 458], "key_typ": 85, "recurse_through_entri": 92, "recurse_through_stack": 92, "infinit": [95, 150, 151, 172, 173, 275, 474, 484], "pairwisedataset": [95, 458], "audio": 96, "function_cal": 96, "_wrap_td_method": 96, "wrapped_func": 96, "0x7f4b6817f160": 96, "mime_typ": 96, "function_nam": 96, "function_arg": 96, "contentbas": [97, 458], "is_complet": 97, "tool_cal": 97, "tool_respons": [97, 195, 197, 460], "apply_chat_templ": [97, 179, 195, 197, 460, 478], "autoprocessor": 97, "add_generation_prompt": 97, "chat_templ": [97, 198], "chat_template_nam": 97, "chatml_format": 97, "qwen": [97, 179, 181, 184, 195, 197, 336, 460, 478], "continue_final_messag": 97, "return_tensor": 97, "return_dict": 97, "return_assistant_tokens_mask": 97, "chat": [97, 179, 180, 181, 184, 192, 195, 197, 198, 460], "pretrainedtoken": [97, 179, 190, 335, 339], "preval": 97, "messag": [97, 460], "pt": [97, 426, 463], "assist": [97, 179, 181, 184, 195, 197, 460, 469, 478], "default_spec": 97, "set_list_to_stack": [97, 179, 184, 195, 197, 460, 478], "foo": [97, 102, 104, 124, 347, 484, 487], "token_list": 98, "tokens_response_list": 98, "checkpoint_fil": 100, "h5": 100, "h5_kwarg": 100, "iff": 100, "suffix": [100, 437], "h5py": 100, "create_dataset": 100, "consequ": [100, 302, 474], "immut": [101, 128, 131, 134, 138, 146, 158, 162, 167, 168, 179, 180, 181, 184, 187, 188, 189, 248, 267], "scratch_dir": [102, 466, 467, 469, 474, 480, 483, 484], "sent": [102, 104, 124, 274], "mistak": [102, 104, 124], "overewritten": 102, "tensorstoragecheckpoint": 102, "pathlib": [102, 442, 470], "main_ckpt_dir": 102, "rb_memmap": 102, "10_000_000": 102, "myclass": [102, 104, 124], "attach": [102, 103, 104, 105, 118, 120, 124, 467], "entiti": [102, 103, 104, 105, 118, 120, 124, 179], "lazystacktensordict": 103, "heterougen": 103, "linearli": 103, "densifi": 103, "unlimit": [103, 105], "st": 103, "expans": [104, 384, 399], "zero_": [104, 124, 202], "liststoag": 106, "max_capac": [108, 109, 466, 484], "max_priority_within_buff": [108, 109], "data_0": 108, "data_1": 108, "smoothen": 108, "tdrb": 108, "pack": [108, 298, 302, 468, 471, 487], "nd": [108, 109], "1d": [108, 109, 116, 117, 122], "sum_tre": [108, 109], "min_tre": [108, 109], "slice_len": [109, 116, 117, 424], "end_kei": [109, 116, 117], "cache_valu": [109, 116, 117], "closer": [109, 486], "readili": [109, 116, 117, 356], "conjunct": [109, 116, 117, 467], "buffer0": [109, 116], "immutablewrit": [109, 116], "buffer1": [109, 116], "other_sampl": [109, 116], "shorter": [109, 116, 117], "short": [109, 116, 117, 128, 129, 130, 131, 134, 138, 144, 145, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 302, 303, 467, 468, 471, 472, 481, 484], "Be": [109, 116, 117], "fewer": [109, 116], "tolist": 109, "120110917137936e": 109, "06": [109, 292, 328], "storageensembl": [111, 114], "samplerensembl": 111, "writerensembl": [111, 120], "sample_from_al": [111, 114], "num_buffer_sampl": [111, 114], "ensembl": [111, 114, 120, 121, 127, 355, 387], "forbidden": 111, "0x13a2ef430": 111, "0x13a2f9310": 111, "interpol": [111, 249, 467, 470], "interpolationmod": 111, "bilinear": [111, 249], "0x13a2f9220": 111, "0x13a2f9f70": 111, "0x13a2d9b50": 111, "0x13a2f95b0": 111, "0x128648260": 111, "roundrobin": [112, 123], "buffer_id": [114, 120], "shuffl": [115, 117, 481], "incomplet": [115, 117, 179], "fresh": 115, "haven": [115, 483], "remain": [115, 194, 196, 216, 226, 227, 237, 259, 314, 473], "draw": [115, 297], "use_gpu": [116, 117], "slicesamplerwithoutreplac": [116, 484], "acceler": [116, 117, 138, 189, 480, 481], "reconstruct": [116, 117, 378, 466, 487], "ep_1": [116, 117], "ep_2": [116, 117], "73": 116, "74": 116, "76": 116, "77": 116, "42": [116, 305, 320, 366, 367, 369, 370, 374, 382, 389], "43": 116, "45": 116, "67": [116, 479], "69": 116, "70": 116, "71": 116, "27": [116, 117, 129, 130, 158, 167, 222], "28": [116, 117, 310], "31": [116, 144, 145], "80": [116, 129, 130], "82": 116, "83": 116, "84": [116, 249, 469, 470], "78": 116, "79": 116, "320": [116, 117, 132, 133], "700": [116, 117], "dataid": [116, 117], "available_dataset": [116, 117], "counter": [117, 196, 222, 265, 351, 435, 463, 470], "23": [117, 222, 278], "request": [117, 214, 246], "51": 117, "__len__": 118, "rank_kei": 122, "samplerwithoutreplac": [122, 468, 481, 484], "get_insert_index": 122, "themselv": [128, 282, 467], "dens": [128, 308, 309], "maybe_dens": 128, "min_get": [128, 162, 168], "maker": [128, 456, 467], "sort": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 218, 321], "another_act": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "discretebox": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "mutabl": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "action_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 468, 481], "had": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 472, 474], "all_act": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "any_don": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "loc": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189, 237, 241, 252, 274, 275, 301, 329, 330, 344, 345, 346, 352, 356, 358, 366, 367, 369, 382, 386, 387, 388, 389, 446, 456, 461, 466, 467, 468, 469, 472, 481, 486], "_callabletransform": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 187, 188, 189], "auto_specs_": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "action_spac": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 229, 294, 323, 348, 349, 353, 354, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 469, 470, 472, 476], "check_dtyp": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189], "discrep": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 366, 368, 370, 371, 383, 386, 388, 402], "broken": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189], "rng": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 174, 179, 180, 181, 184, 187, 188, 189, 482], "done_keys_group": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "another_don": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "done_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "empty_cach": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 267], "env_batch_s": [128, 162, 168], "fake_tensordict": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 467, 470], "envnam": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "full_action_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 480, 481], "full_done_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "full_observation_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "full_reward_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "pipeline_st": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "full_state_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "input_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "is_spec_lock": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "maybe_reset": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "speak": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 223, 356, 466], "observation_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "output_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "register_gym": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 471], "entry_point": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "info_kei": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "reward_threshold": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "nondeterminist": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "max_episode_step": [128, 131, 134, 137, 138, 139, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "order_enforc": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "autoreset": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "disable_env_check": [128, 131, 134, 137, 138, 146, 153, 154, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "apply_api_compat": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "nasium": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 205], "dmcontrolenv": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 424, 458, 466, 471, 479, 487], "dmc": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "cheetah": [128, 131, 132, 133, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 424, 466], "removeemptyspec": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "threshold": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 297, 367, 368, 399, 468], "learnt": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 452], "checker": [128, 131, 134, 137, 138, 146, 153, 154, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "stepapicompat": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "deem": [128, 131, 134, 138, 146, 150, 151, 158, 159, 162, 167, 168, 169, 172, 173, 179, 180, 181, 184, 187, 188, 189], "task_nam": [128, 131, 132, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "envgym": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0855": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0215": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0881": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0412": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "1101": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0080": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0254": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0424": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "veloc": [128, 131, 132, 133, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 480, 481, 482, 487], "9609e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "9776e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "04": [128, 131, 134, 138, 142, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 262, 275], "6347e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "3842e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "5338e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "3064e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0381e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "6656e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "05": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 262, 280, 482], "0204e": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0833": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0275": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0612": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0770": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "1256": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0082": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0186": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0476": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "2221": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "2256": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "5930": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "6937": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "5865": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "5479": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0187": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "6825": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "5224": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0018": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "1005": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0335": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 223], "0268": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0133": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0627": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0074": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0488": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0353": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0075": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0069": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0098": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0058": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0033": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0157": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0004": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 262], "0381": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0452": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "11355747": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "04257728": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "00408397": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "04155852": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0389733": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "01409826": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0978704": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "08808327": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "03970837": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "00535434": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "02353762": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "05116226": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "02788907": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "06848346": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "05154399": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "0371798": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "05128025": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "dydact": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "ant": [128, 129, 130, 131, 134, 138, 141, 143, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 483], "gym_env": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 486], "reset_kei": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 217, 253, 259, 260, 261, 480], "multitask": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "multiag": [128, 131, 134, 138, 146, 149, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 311, 322, 331, 368, 383, 386, 402], "another_reward": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "reward_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "auto_cast_to_devic": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 481], "soon": [128, 131, 134, 138, 146, 158, 159, 160, 161, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "__sort": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "as__": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "categorical_action_encod": [128, 129, 130, 131, 134, 137, 138, 139, 140, 143, 144, 145, 146, 153, 154, 158, 159, 162, 164, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 205, 222, 470], "argmaxmodul": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "argmax": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 294, 323, 349, 354, 470, 472], "n_act": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 237, 366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 473], "ourselv": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 468, 487], "emul": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "epoch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 442, 468, 480, 481], "input_td": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "rollout_td": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "state_spec_unbatch": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "prevail": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 209, 218, 253], "next_tensordict": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208, 214, 218, 230, 231, 232, 244, 247, 248, 254, 257, 270, 274], "precomput": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189], "_stepmdp": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208], "exclude_act": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 208], "minim": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 426, 484], "reset_data": [128, 131, 134, 138, 146, 158, 159, 162, 167, 168, 169, 179, 180, 181, 184, 187, 188, 189, 460, 487], "googl": [129, 130, 150, 151, 156, 157, 184, 186, 280, 468, 469, 478, 480, 481], "convers": [129, 130, 144, 145, 181, 184, 205, 460, 462, 478], "2106": [129, 130, 372, 391], "13281": [129, 130], "frame_skip": [129, 130, 132, 133, 137, 138, 139, 140, 144, 145, 147, 148, 153, 154, 164, 189, 233, 435, 437, 445, 463, 466, 467, 468, 486], "allow_done_after_reset": [129, 130, 132, 133, 134, 137, 139, 140, 143, 144, 145, 153, 154, 156, 157, 164, 170, 171], "toler": [129, 130, 132, 133, 137, 139, 140, 143, 144, 145, 153, 154, 156, 157, 164, 170, 171, 292, 328], "is_avail": [129, 130, 466, 467, 468, 469, 480, 481, 483], "87": [129, 130], "acrobot": [129, 130, 132, 133, 487], "advant": [129, 130, 144, 145], "timer": [129, 130, 138, 144, 145, 189], "timeit": [129, 130, 144, 145, 470], "310": [129, 130], "ms": [129, 130, 144, 145], "268": [129, 130], "433": [129, 130], "213": [129, 130], "8605": [129, 130], "pipelineenv": 130, "get_environ": 130, "san": 131, "fen": [131, 156, 157], "pgn": 131, "legal": [131, 211], "board": [131, 169], "include_san": 131, "algebra": [131, 482], "notat": 131, "include_fen": 131, "forsyth": 131, "edward": 131, "include_pgn": 131, "portabl": [131, 475], "include_legal_mov": 131, "include_hash": 131, "mask_act": 131, "subset": [131, 482, 483], "29275": 131, "rnbqkbnr": [131, 156, 157], "pppppppp": [131, 156, 157], "kqkq": [131, 156, 157], "legal_mov": 131, "219": 131, "5p2": 131, "ppppp1pp": 131, "event": [131, 308, 309, 317, 413, 414, 415, 416, 418, 419, 420, 421, 484], "white": 131, "f4": 131, "96": 131, "kq": 131, "5n2": 131, "rnbqkb1r": 131, "nf3": 131, "na6": 131, "c4": 131, "f6": 131, "h4": 131, "rb8": 131, "na3": 131, "ra": 131, "get_legal_mov": 131, "uci": 131, "dm_control": [132, 133, 466, 479, 487], "2006": [132, 133, 222, 367, 373], "12983": [132, 133], "240": [132, 133, 486], "swingup": [132, 133, 487], "swingup_spars": [132, 133], "ball_in_cup": [132, 133], "catch": [132, 133, 470], "balance_spars": [132, 133], "three_pol": [132, 133], "two_pol": [132, 133], "finger": [132, 133], "turn_easi": [132, 133], "turn_hard": [132, 133], "fish": [132, 133], "upright": [132, 133, 467], "swim": [132, 133], "hopper": [132, 133], "hop": [132, 133], "humanoid": [132, 133, 158, 167, 479], "walk": [132, 133, 158, 167, 467, 479], "run_pure_st": [132, 133], "bring_bal": [132, 133], "bring_peg": [132, 133], "insert_bal": [132, 133], "insert_peg": [132, 133], "point_mass": [132, 133], "reacher": [132, 133], "swimmer": [132, 133], "swimmer6": [132, 133], "swimmer15": [132, 133], "walker": [132, 133], "dog": [132, 133], "trot": [132, 133], "humanoid_cmu": [132, 133], "lqr": [132, 133], "lqr_2_1": [132, 133], "lqr_6_2": [132, 133], "quadrup": [132, 133], "escap": [132, 133], "stacker": [132, 133], "stack_2": [132, 133], "stack_4": [132, 133], "deviceless": 134, "run_type_check": [134, 152], "hint": 134, "counterenv": 134, "creator": [135, 447, 448, 454, 455, 456], "substitut": [135, 259, 274, 472], "vecnorm": [135, 275, 456], "env_creat": [135, 466], "test_env1": 135, "_td": [135, 377], "observation_count": [135, 487], "test_env2": 135, "ps": 135, "p1": 135, "p2": 135, "9934": 135, "make_vari": [135, 265], "variant": [135, 265, 282, 461], "trajcount": 135, "env_creator_pendulum": 135, "env_creator_cartpol": 135, "env_str": 136, "device_map": 136, "registri": [137, 170], "asyncvectorenv": 137, "pixel_observ": [137, 139, 140, 164], "pixelobservationwrapp": [137, 139, 140, 164], "adventur": [137, 139], "airraid": [137, 139, 487], "alien": [137, 139], "time_limit": 137, "timelimit": [137, 150, 151, 172, 173], "default_info_dict_read": [137, 138, 139, 158, 189], "reader": [137, 138, 139, 158, 189, 467], "set_info_dict_read": [137, 138, 139, 158, 189, 471], "info_dict": [137, 138, 139, 158, 189], "gymlikeenv": [137, 139, 189, 458], "auto_register_info_dict": [137, 138, 139, 158, 189], "multibinari": [137, 139], "multidiscret": [137, 139], "rag": [137, 139], "gym_conversion_exampl": [137, 139], "info_dict_read": [138, 158, 189], "ignore_priv": [138, 189], "baseinfodictread": [138, 189], "tensordictprim": [138, 158, 189, 283, 300, 304, 363, 461, 469], "succe": [138, 158, 189], "underscor": [138, 189], "primer": [138, 187, 189, 193, 260, 283, 300, 304, 363, 469], "halfcheetah": [138, 158, 189, 210, 249, 466, 486], "reward_ctrl": [138, 158, 189], "reward_run": [138, 158, 189], "x_posit": [138, 158, 189], "x_veloc": [138, 158, 189], "raise_if_clos": [138, 189], "fast_encod": [138, 189], "memoize_cach": [138, 189], "adaptive_autorang": [138, 189], "4f": [138, 189, 468, 469, 482], "fp": [138, 189, 424, 429, 431], "10141": [138, 189], "5742fp": [138, 189], "10576": [138, 189], "8388fp": [138, 189], "read_act": [138, 189], "read_don": [138, 189], "nonsens": [138, 189], "fallback": [138, 189], "read_ob": [138, 189], "dictat": [138, 189, 238, 352, 356, 386, 466, 482], "read_reward": [138, 189], "hoc": [138, 158, 189, 472], "dict_read": [138, 189], "my_info_kei": [138, 189], "some_env": [138, 189], "vecenv": 139, "vectorenv": 139, "convert_actions_to_numpi": 139, "missing_obs_valu": [139, 273], "vecgymenvtransform": 139, "secur": [140, 478], "habitat3": 140, "ai": [140, 483], "habitatrenderpick": 140, "isaacgym": [141, 142], "isaacgymwrapp": [141, 458], "isaacgymenv": [142, 458], "webpag": 142, "isaac": [142, 143], "essenc": [142, 471], "scripts_isaaclab": 143, "managerbasedrlenv": 143, "app": 143, "applaunch": 143, "argpars": [143, 453, 456], "parser": [143, 183, 453, 456], "argumentpars": 143, "add_app_launcher_arg": 143, "args_cli": 143, "hydra_arg": 143, "parse_known_arg": 143, "app_launch": 143, "isaaclab_task": 143, "f401": 143, "manager_bas": 143, "ant_env_cfg": 143, "antenvcfg": 143, "isaac_lab": 143, "cfg": [143, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456], "instadeepai": [144, 145], "2306": [144, 145, 275], "09884": [144, 145], "snake": [144, 145, 181], "grid": [144, 145, 424], "bodi": [144, 145], "body_st": [144, 145], "fruit_posit": [144, 145], "col": [144, 145], "head_posit": [144, 145], "tail": [144, 145], "game2048": [144, 145], "maze": [144, 145], "cleaner": [144, 145], "cvrp": [144, 145], "multicvrp": [144, 145], "minesweep": [144, 145], "rubikscub": [144, 145], "knapsack": [144, 145], "sudoku": [144, 145], "tsp": [144, 145], "connector": [144, 145], "v2": [144, 145, 165, 166, 395, 413, 414, 415, 416, 418, 419, 420, 421, 469], "mmst": [144, 145], "graphcolor": [144, 145], "partli": [144, 145], "scrambl": [144, 145], "robotwarehous": [144, 145], "tetri": [144, 145], "binpack": [144, 145], "jobshop": [144, 145], "0x1fca91910": 144, "122": [144, 145, 487], "0x1ff9baee0": 144, "134": [144, 145], "0x1ff9ba7c0": 144, "172": [144, 145], "jit": 145, "eager": [145, 336], "tdreset": [145, 277, 479], "whichev": 145, "overview": [146, 188, 468, 470, 473, 480, 481, 486], "vocab_s": [146, 187, 188], "hashing_modul": [146, 188], "text_output": [146, 188], "decod": [146, 188, 203, 315, 335, 339], "batch_decod": [146, 188], "text_kei": [146, 188], "gpt2token": [146, 188], "make_tensordict": [146, 188], "mo": [147, 148], "minecart": [147, 148], "mo_gym": [148, 238], "qualnam": 149, "neural": [149, 160, 161, 284, 285, 318, 320, 326, 355, 404, 461, 467, 468, 469, 472, 480, 481, 482, 487], "group_map": [149, 150, 151, 156, 157, 160, 161, 170, 171, 172, 173, 175, 480], "constructiuon": [149, 160, 161], "premad": [149, 150, 151, 160, 161, 172, 173, 402], "all_in_one_group": [149, 156, 157, 175], "agent_0": [149, 160, 161, 170, 175, 257], "agent_1": [149, 160, 161, 170, 175, 257], "agent_2": [149, 160, 161, 170, 175], "agent_3": [149, 170], "one_group_per_ag": [149, 160, 161], "meltingpot": [150, 151], "2211": [150, 151], "13746": [150, 151], "melt": [150, 151], "pot": [150, 151], "novel": [150, 151, 473], "social": [150, 151], "familiar": [150, 151, 467, 478, 481, 487], "unfamiliar": [150, 151], "broad": [150, 151], "cooper": [150, 151, 480, 481], "decept": [150, 151], "reciproc": [150, 151], "stubborn": [150, 151], "substrat": [150, 151], "ml_collect": 150, "config_dict": 150, "configdict": 150, "categorical_act": [150, 151, 156, 157, 160, 161, 165, 166, 170, 171, 172, 173], "marlgroupmaptyp": [150, 151, 156, 157, 160, 161, 170, 171, 172, 173, 175, 458, 480], "agent_nam": [150, 151, 172, 173, 175], "agent_names_to_indices_map": [150, 151, 172, 173], "env_torchrl": [150, 151], "commons_harvest__open": [150, 151], "rgb": [150, 151], "144": [150, 151], "192": [150, 151], "collective_reward": [150, 151], "ready_to_shoot": [150, 151], "88": [150, 151, 165, 166], "substrate_config": 151, "get_config": 151, "mp_env": 151, "build_from_config": 151, "default_player_rol": 151, "mymbenv": [152, 281, 307], "world_model": [152, 281, 307, 378], "hidden_observ": [152, 281, 307], "mlp": [152, 281, 284, 285, 287, 288, 289, 290, 296, 300, 304, 307, 311, 312, 344, 348, 363, 371, 373, 461, 467, 470, 472, 473, 476, 479, 483, 486], "worldmodelwrapp": [152, 281, 307], "activation_class": [152, 281, 284, 285, 287, 288, 289, 290, 295, 296, 305, 307, 310, 311, 467, 472, 480, 481, 486], "activate_last_lay": [152, 281, 290, 305, 307], "sail": [153, 154], "sg": [153, 154], "2206": [153, 154], "10558": [153, 154], "readthedoc": [153, 156, 157], "en": [153, 156, 157], "python_interfac": 153, "envpoolmixin": 154, "env_bas": 154, "task_id": 154, "env_typ": 154, "gym_reset_return_info": 154, "envpool_env": 154, "www": [155, 308, 309], "fetch_openml": 155, "adult_num": 155, "adult_onehot": 155, "mushroom_num": 155, "mushroom_onehot": 155, "covertyp": 155, "shuttl": 155, "magic": [155, 470, 471], "106": 155, "openspiel": [156, 157], "open_spiel": [156, 157], "game_str": 156, "return_st": [156, 157, 160, 161], "4672": [156, 157], "current_play": [156, 157], "674": 156, "2048": [156, 157], "add_nois": [156, 157], "amazon": [156, 157], "backgammon": [156, 157], "restor": [156, 157], "td_restor": [156, 157], "pyspiel": 157, "load_gam": 157, "new_initial_st": 157, "3009": 157, "my_env_fun": [158, 167], "custom_attribute_list": [158, 167], "custom_attribut": [158, 167], "custom_method_list": [158, 167], "custom_method": [158, 167], "deploi": [158, 167, 214, 470], "slight": [158, 167, 467], "share_individual_td": [158, 167], "shared_memori": [158, 167], "policy_proof": [158, 167], "ll": [158, 167, 222, 298, 299, 302, 303, 466, 467, 468, 469, 471, 472, 473, 474, 476, 478, 481, 487], "hidden": [158, 167, 216, 287, 295, 298, 299, 300, 302, 303, 304, 315, 316, 324, 325, 344, 345, 346, 347, 355, 358, 368, 383, 386, 461, 469, 479, 486], "serial_for_singl": [158, 167, 467], "circular": [158, 167, 466], "list_of_kwarg": [158, 167], "com_veloc": [158, 167], "head_height": [158, 167], "joint_angl": [158, 167], "torso_vert": [158, 167], "batched_pipe_timeout": 158, "stringent": [158, 468, 480, 481], "penv": [158, 265], "env_fix": 158, "influenc": 158, "myenv": [158, 214, 225, 228], "update_kwarg": [158, 167], "th": [159, 232, 269, 298, 302, 482], "thdot": [159, 482], "max_spe": [159, 482], "max_torqu": [159, 482], "gen_param": [159, 482], "gravit": [159, 482], "torqu": [159, 482], "pettingzoo": [160, 161, 480, 481], "pet": [160, 161], "zoo": [160, 161], "__": [160, 161], "aecenv": [160, 161], "dead": [160, 161], "done_on_ani": [160, 161, 480], "compulsori": [160, 161], "adversary_0": [160, 161], "adversari": [160, 161, 380, 480], "sisl": 160, "multiwalker_v9": 160, "aec": [160, 161], "n_piston": [160, 161], "pistonball_v6": [160, 161], "piston": [160, 161], "piston_0": [160, 161], "piston_1": [160, 161], "piston_20": [160, 161], "tictactoe_v3": [160, 161], "player": [160, 161, 169], "player_1": [160, 161], "player_2": [160, 161], "butterfli": 161, "parallel_env": [161, 466, 486, 487], "_setup": [162, 168], "async_reset_send": [162, 168], "async_reset_recv": [162, 168], "cube": 163, "roboh": 164, "expos": [164, 225, 228, 357, 368, 386, 467], "vikashplu": 164, "wiki": 164, "2310": 164, "06828": 164, "from_depth": 164, "smacv2": [165, 166], "starcraft": [165, 166], "challeng": [165, 166, 471, 482, 483], "10gen_terran": [165, 166], "10gen_zerg": [165, 166], "10gen_protoss": [165, 166], "3m": [165, 166], "8m": [165, 166], "25m": [165, 166], "5m_vs_6m": [165, 166], "8m_vs_9m": [165, 166], "10m_vs_11m": [165, 166], "27m_vs_30m": [165, 166], "mmm": [165, 166], "mmm2": [165, 166], "2s3z": [165, 166], "3s5z": [165, 166], "3s5z_vs_3s6z": [165, 166], "3s_vs_3z": [165, 166], "3s_vs_4z": [165, 166], "3s_vs_5z": [165, 166], "1c3s5z": [165, 166], "2m_vs_1z": [165, 166], "corridor": [165, 166], "6h_vs_8z": [165, 166], "2s_vs_1sc": [165, 166], "so_many_banel": [165, 166], "bane_vs_ban": [165, 166], "2c_vs_64zg": [165, 166], "old": [165, 166, 275, 383, 487], "smac": [165, 166], "map_nam": [165, 166], "176": [165, 166], "battle_won": [165, 166], "dead_al": [165, 166], "dead_enemi": [165, 166], "episode_limit": [165, 166], "322": [165, 166], "procedur": [165, 166], "distribution_config": [165, 166], "n_unit": [165, 166], "n_enemi": [165, 166], "team_gen": [165, 166], "dist_typ": [165, 166], "weighted_team": [165, 166], "unit_typ": [165, 166], "marin": [165, 166], "maraud": [165, 166], "medivac": [165, 166], "exception_unit_typ": [165, 166], "start_posit": [165, 166], "surrounded_and_reflect": [165, 166], "map_x": [165, 166], "map_i": [165, 166], "capability_config": [165, 166], "131": [165, 166], "starcraft2env": 166, "tic": 169, "tac": 169, "toe": 169, "single_play": 169, "player1": 169, "desired_batch_s": 169, "player0": 169, "uniti": [170, 171], "ml": [170, 171], "technolog": [170, 171], "llapi": [170, 171], "mlagents_env": [170, 171], "unityenviron": [170, 171], "file_nam": 170, "registered_nam": 170, "nor": 170, "connect": 170, "3dball": 170, "group_0": 170, "vectorsensor_size8": 170, "continuous_act": [170, 172, 173, 422, 480, 481], "agent_10": 170, "agent_11": 170, "agent_4": 170, "agent_5": 170, "agent_6": 170, "agent_7": 170, "agent_8": 170, "agent_9": 170, "group_reward": 170, "proroklab": [172, 173], "vectorizedmultiagentsimul": [172, 173], "2207": [172, 173], "03530": [172, 173], "basescenario": 172, "defaultt": 172, "chosen": [172, 173, 259, 260, 322, 323, 331, 354, 424, 461, 475], "sparsiti": 172, "unbatched_action_spec": [172, 173], "unbatched_observation_spec": [172, 173], "unbatched_reward_spec": [172, 173], "het_spec": [172, 173], "het_specs_map": [172, 173], "flock": [172, 173, 422], "agent_collision_rew": [172, 173], "agent_distance_rew": [172, 173], "ca": 175, "environment4": 175, "get_group_map": 175, "sumbodul": 178, "histori": [179, 180, 181, 184, 187, 192, 195, 197, 335, 339, 458, 460, 478], "answer": [179, 181, 183, 184, 186, 478], "hopefulli": [179, 467], "system_prompt": [179, 195, 197, 460, 478], "apply_templ": [179, 180, 181, 184, 195, 197, 478], "pars": [179, 183, 198, 335, 339, 460, 478, 484], "template_kwarg": [179, 180, 181, 184], "system_rol": [179, 460], "user_rol": [179, 460], "make_lazi": 179, "datasetchatenv": [179, 460], "gsm8kenv": [179, 180, 183, 190, 460], "ifevalenv": [179, 180], "pprint": [179, 184, 460], "qwen2": [179, 181, 184, 195, 197, 336, 460, 478], "3b": [179, 181, 184, 195, 197, 336], "im_start": [179, 181, 184, 195, 197, 460], "ni": 179, "im_end": [179, 181, 195, 197, 460, 478], "td_action": 179, "td_next": 179, "nthi": 179, "rlvr": 180, "verifi": 180, "batch_size_dl": [180, 181, 184, 190], "thin": [180, 189, 334, 462], "chatenv": [180, 189, 195, 197, 460, 478], "bucket": 180, "dataloadingprim": [180, 187, 260, 460], "set_missing_toler": [180, 181, 184, 267], "gsm8k": [181, 182, 190], "compute_reward": [181, 184], "question": [181, 184, 478, 484, 486], "adam": [181, 320, 329, 466, 467, 468, 469, 470, 473, 476, 480, 481, 482], "bought": 181, "sandwich": 181, "he": 181, "paid": 181, "breed": 181, "mari": 181, "saw": [181, 475, 482, 484], "reward_answ": [181, 183], "reward_contain": [181, 183], "reward_right": [181, 183], "reward_think": [181, 183], "snak": 181, "transformthatmeasuresbyt": [182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 401], "bytes_in_td": [182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 231, 233, 236, 237, 244, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 273, 274, 277, 401], "transform_done_spec": [182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 226, 257, 264, 266, 268, 277, 401], "transform_env_batch_s": [182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 266, 277, 401], "transform_env_devic": [182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 221, 226, 266, 277, 401], "transform_full_done_spec": [182, 183, 186, 192, 193, 194, 195, 196, 197, 198, 199, 214, 221, 225, 226, 230, 237, 239, 247, 248, 254, 258, 264, 266, 268, 275, 277, 401], "make_gsm8k_env": [183, 460], "asssoci": 183, "extract_tag": 183, "xml": 183, "ifev": [184, 186], "nyou": 184, "instruction_id_list": [184, 186], "detectable_cont": 184, "number_placehold": 184, "num_highlight": 184, "num_": 184, "respond": 184, "plan": [184, 281, 306, 307], "week": 184, "europ": 184, "trip": 184, "london": 184, "pari": [184, 478], "rome": 184, "cap": [184, 468, 484], "restaur": 184, "prompt_level_strict_acc": [185, 186], "inst_level_strict_acc": [185, 186], "prompt_level_loose_acc": [185, 186], "inst_level_loose_acc": [185, 186], "instruction_ids_kei": 186, "prompt_kei": [186, 401], "keyword_args_kei": 186, "id_kei": 186, "response_column": 186, "score_kei": 186, "ifeval_scor": 186, "aggregate_reward": 186, "ifevalscoredata": 186, "format_weight": 186, "scorer": 186, "IF": 186, "column": 186, "think_block": 186, "answer_block": 186, "langdetect": 186, "nltk": 186, "immutabledict": 186, "default_reward_aggreg": 186, "nuanc": 186, "highest": [186, 467, 472], "adher": 186, "medium": [186, 484], "lowest": [186, 484], "metric": [186, 368, 386, 399, 462, 466], "overal": 186, "formula": [186, 194, 237, 301, 329, 330, 366, 368, 383, 386, 399, 462, 468], "_score": 186, "_bonu": 186, "cot": 187, "token_kei": 187, "str_kei": 187, "attention_kei": 187, "assign_reward": 187, "has_attent": 187, "assign_don": 187, "batchless": 187, "eos_token_id": 187, "pretrainedtokenizerbas": [187, 199, 264], "stack_method": [187, 193], "as_nested_tensor": [187, 193], "as_padded_tensor": [187, 193], "data_kei": 187, "bert": [187, 199, 264], "uncas": [187, 199, 264], "tokens_in": 187, "tokens_out": 187, "mlgym": [189, 191], "get_library_nam": 189, "prisonersdilemma": 191, "reward_wrong_format": 191, "mlgymenv": 191, "wrongli": 191, "allowed_domain": [192, 478], "tool_nam": [192, 195, 197], "web": [192, 470, 478], "brows": [192, 478], "browser": [192, 478], "click": [192, 478], "llm_tool": 192, "clean": 192, "mappabl": 193, "maybe_dense_stack": 193, "unrel": 193, "endless_dataload": 193, "set_capture_non_tensor_stack": 193, "dummydataload": 193, "generate_random_str": 193, "ascii_lowercas": 193, "__next__": 193, "zxwvupirska": 193, "stringa": 193, "zxwvupirsk": 193, "roll": 193, "init_st": 193, "nngcmflsana": 193, "vrrbnhzpmga": 193, "nngcmflsan": 193, "vrrb": 193, "dummytensordataload": 193, "generate_random_tensor": 193, "pad_tensor": 193, "padding_length": 193, "data_spec": 193, "log_prob_kei": [194, 237, 356, 462], "add_to_reward": 194, "pi_curr": [194, 237], "pi_0": [194, 237], "overfit": [194, 237], "probabilist": [194, 237, 352, 366, 386, 458, 468, 486], "get_dist": [194, 237, 356, 357], "kl_penalti": 194, "ref_log_prob": 194, "tool_schema": 195, "mcp": 195, "protocol": 195, "pattern": 195, "schema": 195, "add_numb": 195, "add_schema": 195, "successfulli": [195, 197, 460, 478], "version_typ": 196, "period": [196, 280], "llmcollector": [196, 458, 460], "tracker": [196, 236], "new_weight": 196, "current_vers": 196, "uuid4": 196, "nprint": 197, "use_raw_nontensor": [199, 235, 264, 268], "additional_token": [199, 264], "skip_special_token": [199, 264], "add_special_token": [199, 264], "return_attention_mask": [199, 264], "missing_toler": [199, 264], "call_before_reset": [199, 264], "test_input_spec": [199, 268], "list_of_tensordict": [200, 201], "unsqueeze_null_shap": 202, "dynamic_shap": 202, "model_bas": [203, 204, 281, 307], "model_based_env": [203, 377], "dreamerenv": [203, 377, 458], "model_based_env_ev": 203, "spec_typ": 205, "convert_specnam": 205, "remap_state_to_observ": 205, "spectyp": 205, "unus": 205, "probabilistictdmodul": [206, 305, 352, 356, 403, 437], "keep_oth": [208, 482], "exclude_reward": 208, "exclude_don": 208, "next_": 208, "write_full_fals": 209, "_terminated_or_trunc": 209, "num_interv": 210, "out_action_kei": 210, "samplingstrategi": 210, "optino": 210, "intenum": 210, "action_disc": 210, "masker": 211, "finit": [211, 231, 320, 472, 484], "maskedenv": 211, "ones_lik": [211, 308], "scatter": 211, "fill_float": 213, "fill_int": 213, "fill_bool": 213, "someenvclass": 213, "autoresetenv": 213, "fooenv": 213, "sign": [213, 255, 404, 480], "envtyp": 213, "reshape_fn": [214, 470], "reset_func": 214, "env_kwarg": [214, 454, 455, 466], "accompani": [214, 258], "tensordict_batch_s": 214, "tensordict_reset": [214, 482], "biner": 215, "burn_in": 216, "burn": 216, "burnt": 216, "gru_modul": [216, 300, 363], "input_s": [216, 260, 298, 299, 300, 302, 303, 304, 363, 469, 470], "hidden_s": [216, 260, 298, 299, 300, 302, 303, 304, 363, 469, 470], "default_recurrent_mod": [216, 300, 304], "burn_in_transform": 216, "gru": [216, 260, 299, 300, 363, 470], "num_lay": [216, 298, 300, 302, 304, 315, 316, 363, 470], "is_init": [216, 236, 300, 304, 321, 351, 363, 404, 469, 470], "86": 216, "3008": 216, "0344": 216, "padding_valu": [217, 308, 309], "as_invers": 217, "movement": 217, "1312": 217, "5602": 217, "consumpt": [217, 458], "pictur": 217, "pixels_trsf": [217, 484], "grayscal": [217, 467, 469, 470, 484, 487], "data_exclud": [217, 484], "make_rb_transform_and_sampl": 217, "sampler_kwarg": 217, "redund": [217, 469], "del_kei": [218, 257, 270, 479, 482], "unsqueeze_if_oor": 218, "observation_posit": 218, "observation_veloc": 218, "delet": [218, 257, 431], "crop": [219, 246, 424], "center": [219, 320, 424], "width": [219, 224, 249], "height": [219, 224, 249], "squar": [219, 224, 301, 329, 330, 368, 386, 399, 424, 460], "scalar": [220, 251, 279, 288, 290, 297, 313, 314, 321, 362, 366, 367, 368, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 399, 402, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 461, 467, 473, 482], "rewardsc": [221, 267, 466, 467, 469], "rewardclip": 221, "transformed_env": [221, 267, 471], "condition": 222, "switch": [222, 267, 275, 301, 330, 422], "met": [222, 223, 365, 480, 482], "unalt": 222, "criteria": 222, "policy_switch": 222, "cond": [222, 223], "step_count_kei": [222, 223, 258], "step_count_tot": 222, "step_count_main": 222, "0322": 222, "1540": 222, "0111": 222, "3190": 222, "0299": 222, "1544": 222, "0181": 222, "3280": 222, "0276": 222, "1550": 222, "0255": 222, "3414": 222, "0253": 222, "1558": 222, "0334": 222, "3596": 222, "0230": 222, "1569": 222, "0422": 222, "3828": 222, "0206": 222, "1582": 222, "0519": 222, "4117": 222, "1598": 222, "0629": 222, "4469": 222, "0156": 222, "1617": 222, "0753": 222, "4891": 222, "0130": 222, "1639": 222, "0895": 222, "5394": 222, "0104": 222, "1665": 222, "1058": 222, "5987": 222, "0076": 222, "1696": 222, "1246": 222, "6685": 222, "0047": 222, "1732": 222, "1463": 222, "7504": 222, "0016": 222, "1774": 222, "1715": 222, "8459": 222, "0020": 222, "0150": 222, "1884": 222, "6117": 222, "0017": 222, "2071": 222, "3838": 222, "0105": 222, "2115": 222, "5110": 222, "25": [222, 466], "altogeth": 223, "exectu": 223, "palliat": [223, 472], "inner_count": 223, "middle_env": 223, "middle_count": 223, "auto_unwrap": [223, 267, 432], "9670": 223, "2546": 223, "9669": 223, "9802": 223, "1981": 223, "1601": 223, "9926": 223, "1214": 223, "5556": 223, "9994": 223, "7622": 223, "9984": 223, "0561": 223, "7933": 223, "9895": 223, "1445": 223, "7779": 223, "dtype_in": 225, "dtype_out": 225, "scan": [225, 228, 357, 358], "resp": [225, 228], "not_transform": [225, 228], "orig_devic": 226, "unspecifi": 226, "num_actions_effect": 227, "max_act": 227, "include_forward": 227, "num_act": [227, 285, 375, 470, 472], "action_out": 227, "eol_kei": 229, "lives_kei": 229, "eol_attribut": 229, "breakout": 229, "210": [229, 243], "160": [229, 243], "eol_transform": 229, "eol": 229, "dqnloss": [229, 366, 367, 369, 370, 373, 375, 376, 377, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 399, 402, 449, 458, 462, 467, 469, 470, 476], "register_kei": 229, "loss_or_advantag": 229, "lossmodul": [229, 442, 451, 452, 458, 462], "valueestimatorbas": [229, 384, 399, 458], "first_dim": 232, "last_dim": 232, "allow_positive_dim": [232, 257, 269], "frameskip": 232, "repeatedli": [233, 468, 481], "hash_fn": 235, "repertoir": 235, "reproducible_hash": 235, "unarytransform": 235, "observation_str": 235, "tobyt": [235, 268], "observation_hash": 235, "x08": 235, "x8b": 235, "xbexav": 235, "xbf": 235, "x00": 235, "xee": 235, "xb5": 235, "x17": 235, "x8f": 235, "xbe": [235, 268], "x88": 235, "xccu": 235, "xc0vr": 235, "get_input_from_hash": 235, "hash_tensor": 235, "init_kei": [236, 351], "normalparamextractor": [237, 344, 345, 346, 352, 358, 366, 367, 369, 375, 382, 386, 387, 388, 389, 391, 392, 461, 468, 472, 481, 486], "probabilisticactor": [237, 344, 345, 346, 347, 366, 367, 369, 372, 374, 375, 382, 385, 386, 387, 388, 389, 391, 392, 461, 466, 468, 472, 480, 481], "tanhnorm": [237, 344, 345, 346, 352, 358, 366, 367, 369, 382, 386, 387, 388, 389, 391, 392, 458, 468, 481, 486], "return_log_prob": [237, 335, 339, 344, 345, 346, 352, 356, 358, 388, 461, 468, 472, 480, 481, 486], "apply_": 237, "copy_": [237, 466], "mogymwrapp": [238, 458], "mo_env": 238, "sea": 238, "treasur": 238, "so_env": 238, "stack_reward": 239, "stack_observ": 239, "auto_batch_size_": 239, "macro": [239, 351], "noop": 240, "trial": 240, "standard_norm": [241, 252, 274, 275, 466, 467, 469], "affin": [241, 252, 274, 275], "layer": [241, 274, 280, 284, 285, 287, 288, 293, 295, 298, 299, 300, 302, 303, 304, 305, 310, 311, 313, 314, 315, 316, 326, 327, 341, 350, 359, 461, 467, 468, 469, 470, 472, 480, 483], "epsilon": [241, 279, 297, 321, 390, 440, 467, 468, 469, 472], "recover": 241, "set_default_tensor_typ": 241, "doubletensor": 241, "isclos": 241, "next_ob": [241, 404, 405, 406, 407, 486], "init_stat": [241, 466, 467, 468, 469], "3752e": 241, "5087e": 241, "9294e": 241, "9636": 241, "5608": 241, "6408": 241, "num_it": [241, 467, 468], "reduce_dim": [241, 466, 467, 468, 469], "cat_dim": [241, 466, 467, 468, 469], "keep_dim": [241, 351, 467, 469], "statist": [241, 274, 275, 280, 388, 456, 466, 467, 468, 487], "gaussian": [241, 260, 279, 281, 307, 313, 314, 319, 468, 470, 480], "empir": [241, 281, 307, 352, 356, 466, 468, 481], "3d": [241, 284], "reorder": 243, "in_keys_in": [243, 269], "channel": [243, 263, 310, 315, 316, 467], "r3m": [245, 483], "resnet": [245, 270, 272], "ego4d": [245, 270, 272], "univers": [245, 270, 272, 471], "suraj": [245, 270], "nair": [245, 270], "aravind": [245, 270], "rajeswaran": [245, 270], "vikash": [245, 270, 272], "kumar": [245, 270, 272], "chelsea": [245, 270], "finn": [245, 270], "abhinav": [245, 270], "gupta": [245, 270], "2203": [245, 270, 307, 483], "12601": [245, 270, 483], "_init": [245, 270, 466], "resnet50": [245, 272, 483], "model_nam": [245, 270, 272, 336, 427], "resnet34": 245, "resnet18": 245, "r3m_vec": [245, 483], "stack_imag": [245, 272], "tread": [245, 272], "hub": [245, 272, 471], "resnet50_weight": [245, 272], "imagenet1k_v1": [245, 272], "download_path": [245, 272], "tensor_pixels_kei": [245, 272], "sub_seq_len": 246, "sample_dim": [246, 466], "hesit": 246, "robust": [246, 280], "mix": [246, 322, 331, 402, 466, 480, 481], "improp": 246, "dummyenv": 247, "another_oth": 247, "other_reward": 247, "create_copi": 248, "stuff": [248, 474], "newnam": 248, "r2g": 250, "reward_to_go": 250, "bernoulli_": 250, "9010": 250, "9404": [250, 410], "9701": [250, 410], "9900": [250, 410], "0000": [250, 261, 262, 297, 320, 359, 410], "clamp_min": 251, "clamp_max": 251, "clip_min": 251, "clip_max": 251, "episode_": 253, "reward1": 253, "reward2": 253, "episode_reward": [253, 480, 481], "keep_reward": 254, "keep_don": 254, "logical_or": 255, "in_key_inv": 257, "unstack": 257, "update_don": 258, "disjunct": 258, "recognis": 258, "target_return": 259, "default_valu": [260, 363], "expand_spec": 260, "single_default_valu": 260, "call_before_env_reset": 260, "unit": [260, 281, 295, 298, 299, 315, 316, 324, 325, 468], "scala": 260, "mykei": 260, "__unless": 260, "exists__": 260, "get_primers_from_modul": [260, 283, 300, 304, 458], "recurrent_st": [260, 300, 304, 363, 469], "10th": 261, "0216": 261, "1149": 261, "1990": 261, "2749": 261, "3281": 261, "9290": 261, "3702": 261, "8978": 261, "time_kei": 262, "elaps": [262, 475], "monitor": [262, 368, 386, 471], "expend": 262, "_polici": 262, "time_reset": 262, "time_polici": 262, "time_step": [262, 303, 351], "0882": 262, "0002": 262, "5797e": 262, "6289e": 262, "7990e": 262, "0824e": 262, "0837e": 262, "6056e": 262, "2016e": 262, "1062e": 262, "7009e": 262, "from_int": 263, "shape_toler": 263, "ri": 263, "traj_count": 265, "traj": 265, "countingenv": 265, "make_env_c0": 265, "make_env_c1": 265, "set_contain": 266, "reset_par": 266, "smoothli": [267, 280], "add_1": 267, "cache_spec": 267, "inv_fn": 268, "unari": 268, "durin": 268, "ommit": 268, "observation_trsf": 268, "xbc": 268, "x7f": 268, "x859": 268, "x81": 268, "x9a": 268, "xbd": 268, "xb8t8": 268, "test_output_spec": 268, "danger": 269, "vc1": 270, "vc1_vec": 270, "untrain": 270, "make_noload_model": 270, "vip": [271, 272, 483], "implicit": [272, 374, 382, 484], "jason": 272, "ma": 272, "shagun": 272, "sodhani": 272, "dinesh": 272, "jayaraman": 272, "osbert": 272, "bastani": 272, "ami": 272, "zhang": 272, "vip_vec": 272, "final_nam": 273, "sb3": 273, "terminal_obs_read": 273, "vecnormv2": 274, "new_api": [274, 275], "to_observation_norm": [274, 275], "frozen_copi": [274, 275], "shared_td": 274, "race": 274, "decai": [274, 275, 279, 297, 390, 440, 466, 467, 469, 487], "underflow": [274, 440], "build_td_for_shared_vecnorm": 274, "memmori": 274, "td_share": 274, "v": [274, 298, 299, 302, 303, 344, 374, 382, 389, 466, 467], "unfreez": [274, 275], "observationnorm": [274, 275, 456, 466, 467, 468, 469, 486], "train_env": 274, "eval_env": 274, "9999": 275, "0001": [275, 295], "shared_data": 275, "reduce_batch_dim": 275, "varianc": [275, 280, 281, 282, 301, 329, 330, 462, 466, 468, 481], "vs": [275, 278], "weigh": 275, "_cast_int_to_float": 275, "env_trsf": 275, "observation_norm": 275, "reward_norm": [275, 440], "unnorm": [275, 308, 309, 317], "7967": 275, "1238": 275, "5911": 275, "5275": 275, "8585": 275, "5028": 275, "2505": 275, "3169": [275, 359], "1332": 275, "1235": 275, "6596e": 275, "3072e": 275, "9170e": 275, "9255e": 275, "9131e": 275, "4671e": 275, "3760e": 275, "2058e": 275, "3484e": 275, "6185e": 275, "1456": 275, "1862": 275, "2053": 275, "2605": 275, "4046": 275, "5185": 275, "8023": 275, "1364": 275, "6183": 275, "5406": 275, "0920": 275, "1492": 275, "2702": 275, "3917": 275, "5001": 275, "7947": 275, "0160": 275, "3347": 275, "9082": 275, "9679": 275, "2199": 275, "2918": 275, "1668": 275, "2083": 275, "4981": 275, "5046": 275, "7950": 275, "9791": 275, "1484": 275, "4182": 275, "2201": 275, "0403": 275, "5206": 275, "7791": 275, "8282": 275, "2279": 275, "2907": 275, "4929": 275, "7793": 275, "8626": 275, "1832": 275, "local_env": 275, "testifi": 275, "4307": 275, "9613": 275, "state_dim": [276, 286, 291, 319, 324, 325, 347], "action_dim": [276, 286, 287, 289, 291, 319, 347, 466, 479], "gsde": [276, 387, 456], "gsdemodul": 276, "rb_transform": 277, "resist": 277, "insensit": 277, "sensit": [277, 467, 469], "_orig": 277, "95": [277, 307, 394, 468, 469], "window": [277, 351, 480, 484, 486], "module_nam": [278, 384, 399], "from_vers": 278, "to_vers": 278, "class_method": 278, "import_modul": 278, "get_class_that_defined_method": 278, "module_set": 278, "setters_dict": 278, "setter": 278, "setter_dict": 278, "po": 279, "sigma_init": [279, 480], "sigma_end": [279, 480], "annealing_num_step": [279, 297, 321, 466, 467, 469, 470, 472, 476, 480], "sigma": [279, 298, 299, 301, 302, 303, 321, 329, 330, 468, 480], "omiss": [279, 297, 321], "momentum": 280, "max_r": 280, "max_d": 280, "warmup_step": 280, "batchrenorm": 280, "1702": 280, "03275": 280, "corenet": 280, "enhanc": 280, "warmup": 280, "phase": [280, 282, 481, 484], "outlier": 280, "warm": 280, "renorm": 280, "entropi": [281, 308, 317, 366, 367, 368, 369, 374, 375, 382, 383, 385, 386, 387, 389, 391, 392, 399, 400, 481], "botev": 281, "2013": 281, "cem": 281, "k": [281, 283, 298, 299, 302, 303, 335, 339], "maximis": [281, 287, 289, 307, 467, 468, 481], "modelbasedenv": [281, 307], "planning_horizon": [281, 307], "mpc": [281, 306, 307], "num_candid": [281, 307], "candid": [281, 307], "top_k": [281, 307], "modelbasedenvbas": [281, 306, 307, 458], "safemodul": [281, 306, 344, 346, 356, 366, 367, 369, 374, 375, 382, 386, 387, 388, 389, 391, 392, 447, 448, 452, 458, 486], "hausknecht": 282, "wagen": 282, "reus": [282, 287, 431], "consistentdropoutmodul": [282, 461], "capit": [282, 478], "conceptu": 282, "devianc": 282, "set_exploration_typ": [282, 384, 437, 458, 461, 468, 469, 470, 472, 480, 486], "_main_async_collector": 282, "asyncdatacollector": [282, 458], "ditto": 282, "consistentdropout": 283, "input_shap": 283, "batcht": 283, "make_tensordict_prim": [283, 300, 304, 469], "input_dtyp": 283, "get_default_dtyp": [283, 440], "mask_6127171760": 283, "env0": [283, 487], "num_cel": [284, 285, 287, 288, 289, 290, 295, 296, 300, 304, 305, 310, 311, 344, 363, 467, 468, 469, 470, 472, 473, 476, 480, 481, 486], "elu": [284, 285, 287, 288, 289, 290, 295, 296, 310, 467, 486], "activation_kwarg": [284, 285, 305], "norm_class": [284, 285, 287, 288, 305], "norm_kwarg": [284, 285, 305], "bias_last_lay": [284, 285, 287, 288, 289, 290, 296, 305], "aggregator_class": [284, 285, 287, 288, 467, 469, 486], "squashdim": [284, 285, 287, 296, 310, 486], "aggregator_kwarg": [284, 285, 287, 288, 467, 469], "squeeze_output": [284, 285, 287, 288, 467, 469], "convolut": [284, 285, 287, 288, 310, 326, 470, 472], "cell": [284, 285, 298, 299, 300, 302, 303, 304, 305, 310, 311, 468, 470, 471, 472, 473, 474, 475, 476], "kernel": [284, 285, 310], "cnet": [284, 285], "conv3d": 284, "rectangular": [284, 285], "lazyconv2d": [285, 287, 288, 296, 310], "default_atari_dqn": [285, 470], "semin": 285, "transformer_config": [286, 319, 347], "decisiontransform": [286, 319], "dtconfig": [286, 291, 319], "2202": [286, 291, 385], "05607": [286, 291, 385], "return_to_go": [286, 291, 319, 347], "conv_net_kwarg": [287, 288], "mlp_net_kwarg": [287, 288, 289], "use_avg_pool": [287, 288], "WITH": [287, 288, 289, 290, 321, 390], "1509": [287, 288, 289, 290, 307, 321, 371, 381, 390], "02971": [287, 288, 289, 290, 321, 390], "convnet": [287, 288, 296, 310, 469, 470, 472, 486], "ndims_in": 287, "avgpool": [287, 288], "lazylinear": [287, 288, 289, 290, 296, 305, 461, 468, 472, 482, 483], "2304": 287, "adaptiveavgpool2d": [288, 467, 469], "output_s": [288, 467, 469], "squeeze2dlay": 288, "400": [289, 290, 481], "mlp_net_kwargs_net1": 290, "mlp_net_kwargs_net2": 290, "mlp1": 290, "mlp2": 290, "desdescrib": 291, "n_embd": 291, "n_layer": [291, 298, 302], "n_head": 291, "n_inner": 291, "n_posit": 291, "resid_pdrop": 291, "attn_pdrop": 291, "gpt2config": 291, "atol": [292, 328], "rtol": [292, 328], "batch_shap": [292, 317, 328], "event_shap": [292, 328], "absolut": [292, 328, 466], "_instanc": 292, "densiti": [292, 308, 309, 317, 330], "mass": [292, 308, 309, 317, 330, 482], "rsampl": [292, 309, 317, 356], "sample_shap": [292, 308, 309, 317], "softmax": [293, 309, 317, 348, 349], "var_num": [294, 323, 348, 349, 354], "action_value_kei": [294, 323, 348, 349, 353, 354, 369, 384, 399, 402], "action_mask_kei": [294, 297, 323, 348, 349, 353, 354], "1707": [294, 349, 376, 386], "06887": [294, 349, 376], "mult": [294, 311, 323, 348, 349, 353, 354], "tensordict_modul": [294, 298, 299, 302, 303, 323, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 367, 369, 370, 374, 375, 382, 386, 387, 388, 389, 391, 392, 461], "nbin": [294, 348, 461], "customdistributionalqv": 294, "log_softmax": [294, 348], "qvalue_actor": [294, 323, 348, 353, 461], "to_modul": [294, 355, 358, 466, 486], "std_bia": 295, "std_min_val": 295, "belief": [295, 315, 324, 325], "1912": [295, 377, 378, 379], "01603": [295, 377, 378, 379], "softplu": [295, 362, 364, 365], "out_features_valu": 296, "cnn_kwarg": [296, 467], "mlp_kwarg": [296, 467], "duel": 296, "cnn": [296, 310, 467, 470, 472, 486], "06581": 296, "512": 296, "greedi": [297, 323, 349, 354, 467, 469, 470, 472], "eps_init": [297, 321, 467, 469, 470, 472, 476], "eps_end": [297, 321, 467], "explorative_polici": [297, 321], "9055": 297, "9277": 297, "6295": 297, "2532": 297, "grad_fn": [297, 343, 356], "addbackward0": 297, "batch_first": [298, 302, 469], "bidirect": [298, 302, 469], "cudnn": [298, 299, 300, 302, 303, 304, 469, 470], "rnn": [298, 299, 300, 302, 303, 304, 342, 375, 389, 404, 469, 470, 472], "device_count": [298, 299, 302, 303, 487], "n_in": [298, 299, 302, 303], "n_out": [298, 299, 302, 303], "h0": [298, 299, 302, 303], "h1": [298, 299, 302, 303], "vectoris": [298, 299, 302, 303], "call_gru": [298, 299], "h_out": [298, 299, 302, 303], "batched_cal": [298, 299, 302, 303], "gate": [298, 299, 302], "r_t": 298, "w_": [298, 299, 302, 303], "ir": [298, 299], "x_t": [298, 302], "b_": [298, 299, 302, 303], "hr": [298, 299, 302], "h_": [298, 299, 302], "z_t": 298, "iz": [298, 299], "hz": [298, 299], "n_t": 298, "odot": [298, 299, 302, 303], "hn": [298, 299, 302], "h_t": [298, 302], "sigmoid": [298, 299, 302, 303], "hadamard": [298, 299, 302, 303], "multilay": [298, 302], "_t": [298, 302, 481, 482], "ge": [298, 302], "bernoulli": [298, 302], "b_ih": [298, 299, 302, 303, 304], "b_hh": [298, 299, 302, 303, 304], "h_0": [298, 302, 303], "pack_padded_sequ": [298, 302], "pack_sequ": [298, 302], "num": [298, 302, 476], "_layer": [298, 302], "_size": [298, 299, 302, 303], "h_n": [298, 302], "packedsequ": [298, 302], "weight_ih_l": [298, 302], "learnabl": [298, 299, 302, 303], "w_ir": 298, "w_iz": 298, "w_in": 298, "num_direct": [298, 302], "weight_hh_l": [298, 302], "w_hr": 298, "w_hz": 298, "w_hn": 298, "bias_ih_l": [298, 302], "b_ir": 298, "b_iz": 298, "b_in": 298, "bias_hh_l": [298, 302], "b_hr": 298, "b_hz": 298, "b_hn": 298, "mathcal": [298, 299, 302, 303], "sqrt": [298, 299, 302, 303, 321], "frac": [298, 299, 302, 303, 468], "seq_len": [298, 302], "subtli": 298, "matrix": [298, 302, 313, 314], "hx": [298, 299, 302, 303], "lstmcell": [299, 304, 470], "gru_cel": 299, "weight_ih": [299, 303], "weight_hh": [299, 303], "bias_ih": [299, 303], "bias_hh": [299, 303], "rocm": [299, 303], "embedd": [300, 304], "grucel": [300, 355], "python_bas": [300, 304], "custom_kei": [300, 304], "hasn": [300, 304], "set_recurrent_mod": [300, 304, 469], "recurrent_mod": [300, 304, 342], "rs": [300, 466], "gru_module_train": 300, "policy_train": 300, "traj_td": 300, "make_cudnn_bas": [300, 304], "make_python_bas": [300, 304, 470], "supplementari": [300, 304, 468, 487], "That": [300, 304, 468, 480], "dealt": [300, 304], "poorli": [300, 304], "meth": [300, 304, 384, 482], "data_collector": [300, 304, 467], "upscal": [301, 329, 330], "tanh_loc": [301, 329, 330], "event_dim": [301, 328, 329], "poor": [301, 329, 330], "explos": [301, 329, 330], "proj_siz": 302, "c0": [302, 303], "c1": [302, 303], "call_lstm": [302, 303], "c_out": [302, 303], "i_t": 302, "ii": [302, 303], "hi": [302, 303], "f_t": 302, "hf": [302, 303], "g_t": 302, "ig": [302, 303], "hg": [302, 303], "o_t": 302, "ho": [302, 303], "c_t": 302, "c_": 302, "1402": 302, "1128": 302, "c_0": [302, 303], "proj": 302, "c_n": 302, "w_ii": 302, "w_if": 302, "w_ig": 302, "w_io": 302, "w_hi": 302, "w_hf": 302, "w_hg": 302, "w_ho": 302, "b_ii": 302, "b_if": 302, "b_ig": 302, "b_io": 302, "b_hi": 302, "b_hf": 302, "b_hg": 302, "b_ho": 302, "weight_hr_l": 302, "_revers": 302, "analog": [302, 472], "cn": 302, "lstm_cell": 303, "h_1": 303, "c_1": 303, "cx": 303, "recurrent_state_h": 304, "recurrent_state_c": 304, "triplet": [304, 353, 354], "lstm_modul": 304, "rs_h": 304, "rs_c": 304, "single_bias_last_lay": 305, "layer_class": 305, "layer_kwarg": 305, "perceptron": [305, 472], "noisylinear": [305, 313, 458, 467], "noisylazylinear": [305, 458], "mpcplanner": 306, "tensordict_out": [306, 333, 335, 339, 487], "mppi": 307, "covari": 307, "william": [307, 388], "aldrich": 307, "theodor": 307, "01149": 307, "hansen": 307, "wang": 307, "su": 307, "04955": 307, "valueoper": [307, 344, 345, 346, 366, 367, 368, 369, 370, 375, 382, 383, 386, 387, 388, 389, 391, 392, 452, 461, 466, 468, 473], "tdlambdaestim": [307, 458, 466], "value_net": [307, 371, 373, 388, 404, 405, 406, 407, 468, 470, 472, 473, 476], "adv": 307, "lmbda": [307, 394, 404, 407, 409, 415, 416, 417, 420, 421, 462, 466, 468, 481], "value_network": [307, 370, 371, 373, 374, 376, 382, 389, 404, 405, 406, 407, 462, 466, 468, 470, 473, 476, 480], "temperatur": [307, 335, 339, 367, 374, 382], "neg_inf": [308, 309], "inf": [308, 309], "use_cross_entropi": 308, "api_doc": [308, 309], "tf_agent": [308, 309], "sparse_mask": [308, 309], "cross_entropi": 308, "1203": [308, 309], "0928": [308, 309], "0831": [308, 309], "1972": [308, 309], "grad_method": [309, 317], "reparamgradientstrategi": [309, 317], "passthrough": [309, 317], "relaxedonehot": [309, 317], "sample_non_valid": 309, "zeros_lik": [309, 482], "share_param": [310, 311, 312, 480, 481], "use_td_param": [310, 311, 312], "get_stateful_net": [310, 311, 312, 384, 399, 461, 462], "from_stateful_net": [310, 311, 312, 384, 399, 462], "homogen": [310, 311, 480, 481], "tensordictparam": [310, 311, 356], "_empty_net": [310, 311], "roughli": [310, 311, 486], "agent_network": [310, 311], "modulelist": [310, 311], "2592": 310, "decentr": 310, "n_agent_input": [311, 312, 480, 481], "n_agent_output": [311, 312, 480, 481], "toech": 311, "centalis": 311, "shown": [311, 461, 470, 478, 479, 480, 481, 484], "agent_dim": 312, "vmap_random": [312, 384, 399, 462], "stateful_net": [312, 384, 399], "Such": [312, 384, 399], "multiagentmlp": [312, 480, 481], "snet": 312, "hasattr": [312, 466], "kaiming_normal_": 312, "std_init": [313, 314], "initialize_paramet": 313, "isol": [313, 384, 399, 460, 470], "1706": [314, 331], "10295v3": 314, "induc": [314, 356], "aid": 314, "1803": [315, 316, 322], "10122": [315, 316], "rnn_hidden": 315, "latent": 316, "ordin": [318, 458], "parametris": [318, 320], "inres": 319, "mu": [319, 321, 468], "impos": [320, 461], "proxim": [320, 386, 468, 481], "atom": 320, "tang": 320, "agraw": 320, "2020": 320, "1901": 320, "10500": 320, "discretis": 320, "num_atom": 320, "num_sampl": 320, "middl": 320, "lr": [320, 466, 467, 468, 469, 476, 480, 481, 482], "optimis": [320, 480, 481], "minimis": 320, "penalis": 320, "0308": 320, "1586": 320, "4727": 320, "2260": 320, "1120": 320, "histogram": 320, "return_typ": 320, "hist": [320, 484], "158": 320, "478": 320, "228": 320, "112": 320, "bin_edg": 320, "8000": 320, "6000": 320, "4000": 320, "ornstein": [321, 466, 470], "uhlenbeck": [321, 466, 470], "ou": [321, 466], "correl": 321, "noise_t": 321, "noise_": 321, "theta": [321, 468, 482], "sigma_t": 321, "sigma_": 321, "anneal": [321, 467, 472, 480], "ou_prev_nois": 321, "ou_step": 321, "x0": 321, "sigma_min": 321, "n_steps_ann": 321, "is_init_kei": 321, "_ou_prev_nois": 321, "_ou_step": 321, "state_shap": [322, 402], "mixing_embed_dim": [322, 402], "qmix": [322, 480, 481], "mixer": [322, 331, 402], "monoton": 322, "hyper": 322, "11485": 322, "qmixerloss": [322, 331], "qmix_vdn": [322, 331], "vdn": [322, 331], "hidden_dim": [324, 325], "scale_lb": [324, 325], "posterior": [324, 378], "rssm": [324, 325, 378], "1811": [324, 325], "04551": [324, 325], "obs_embed": 324, "rnn_hidden_dim": 325, "dream": 325, "safe_tanh": 329, "tanhtransform": 329, "overflow": [329, 343, 348, 349, 352, 353, 354, 355, 356], "get_mod": [329, 356], "decomposit": 331, "05296": 331, "hide": [332, 468, 480, 481], "satisfi": [332, 461], "vmap_dim": 332, "lam": 332, "sample_in": 332, "sample_in_td": 332, "vm": 332, "probabilistictensordictsequenti": [333, 357, 366, 368, 383, 386, 388, 399, 447, 448, 462, 486], "bundle_indic": 334, "placement": 334, "tokenization_util": [335, 339], "generate_kwarg": [335, 339], "aspect": [335, 339, 467, 473], "tokenizer_kwarg": [335, 339], "pad_output": [335, 339], "conserv": [335, 339, 367, 373], "automodelforcausallm": 335, "input_data": [335, 339], "hello": [335, 339], "output_data": [335, 339], "num_devic": 336, "make_ray_work": 336, "enforce_eag": 336, "actorclass": 336, "world_siz": 337, "statelessprocessgroup": 337, "plane": 337, "pyncclcommun": 337, "vllmparameterserv": 338, "tp": 338, "tp_size": 338, "check_weights_chang": 338, "llmdata": [339, 458], "translat": [343, 352], "character": [343, 348, 352, 353, 355, 484], "td_modul": [343, 344, 345, 346, 352, 355, 356, 358, 360, 472, 486], "3635": 343, "0340": 343, "1476": 343, "3911": 343, "1664": 343, "5455": 343, "2247": 343, "4583": 343, "2916": 343, "2160": 343, "5337": 343, "5193": 343, "addmmbackward0": 343, "actorvalueoper": [344, 368, 383, 386, 461, 472], "get_policy_oper": [344, 345, 346, 368, 383, 386, 461], "standalon": [344, 345, 346, 470, 472], "tdmodul": [344, 345, 346, 452], "get_critic_oper": 344, "common_oper": [344, 346], "policy_oper": [344, 345, 346], "value_oper": [344, 345, 346], "module_hidden": [344, 346], "td_module_hidden": [344, 346], "module_act": [344, 346], "td_module_act": [344, 345, 346], "module_valu": [344, 345, 346], "td_module_valu": [344, 345, 346], "state_action_valu": [344, 360, 367, 369, 374, 382, 389, 403, 452, 461, 466, 480, 486], "td_clone": [344, 345, 346], "tensordictmodulewrapp": [344, 447, 448, 452], "get_policy_head": [344, 345, 346], "safesequenti": [344, 345, 346, 402], "head": [344, 346, 356, 363, 368, 383, 386, 458], "get_value_head": [344, 345, 346], "get_value_oper": [344, 345, 346, 368, 383, 386], "action_modul": 345, "actorcriticoper": [346, 461, 472], "actorcriticwrapp": [346, 461, 466], "inferec": 347, "set_tensor_kei": 347, "dt_inference_wrapp": 347, "baz": 347, "inference_context": 347, "obs_dim": 347, "tanhdelta": [347, 458, 466, 480], "dtactor": 347, "actor_modul": [347, 486], "dist_class": 347, "dist_kwarg": 347, "distribution_kwarg": [347, 352, 356, 468, 480, 481], "inference_actor": 347, "sequence_length": 347, "mask_context": 347, "out_act": 347, "qvaluemodul": [348, 353, 402, 469, 470, 472, 476], "distributionaldqnnet": 348, "make_log_softmax": 348, "my_action_valu": [349, 354], "chanc": 349, "lmheadmodel": 350, "actor_head": [350, 368, 383, 386], "base_model": 350, "lm_head": 350, "lookahead": 351, "reshape_cat": 351, "actor_bas": 351, "obs_cat": 351, "obs_cat_reshap": 351, "action_orig": 351, "multistepenvwrapp": 351, "alter": [351, 384, 460, 461], "ego": 351, "default_interaction_typ": [352, 356, 472], "interaction_typ": [352, 356], "set_interaction_typ": [352, 356], "compositedistribut": [352, 356, 366, 386, 462, 472], "distribution_map": [352, 356], "name_map": [352, 356], "cache_dist": [352, 356], "n_empirical_estim": [352, 356], "compound": [352, 472], "chose": 354, "functionalmodul": 355, "functionalmodulewithbuff": 355, "td_fmodul": 355, "td_function": 355, "td_state": 355, "params_repeat": 355, "td_vmap": [355, 358], "random_sampl": [355, 356], "suppli": 356, "paliat": 356, "get_median": 356, "get_mean": 356, "sample_key_nam": 356, "_log_prob": 356, "composite_lp_aggreg": 356, "clampbackward0": 356, "anihil": 356, "partial_toler": [357, 358, 479], "AND": [357, 358, 369], "tensordictsequ": 358, "safeprobabilisticmodul": [358, 461], "spec1": 358, "net1": 358, "module1": 358, "td_module1": 358, "spec2": 358, "module2": 358, "td_module2": 358, "boundari": [359, 468, 470, 480, 481], "resolut": 359, "9944": 359, "9991": 359, "3020": 359, "2299": 359, "5418": 359, "2989": 359, "6849": 359, "2690": 359, "9649": 359, "5686": 359, "8602": 359, "0315": 359, "8455": 359, "6027": 359, "4746": 359, "7843": 359, "7782": 359, "2111": 359, "5115": 359, "4687": 359, "5760": 359, "custommodul": 360, "imaginari": 361, "imagin": 361, "transition_model": 361, "get_reward_oper": 361, "get_transition_model_oper": 361, "min_val": [362, 365], "_bia": 362, "surject": 365, "expln": 365, "biased_softplu": [365, 458], "biased_softplus_": 365, "syntax": [365, 466], "add_custom_map": 365, "1602": 366, "01783v2": 366, "actor_network": [366, 367, 368, 369, 370, 372, 374, 375, 382, 383, 385, 386, 387, 388, 389, 391, 392, 399, 462, 466, 468, 473, 480, 481], "critic_network": [366, 368, 383, 386, 388, 468, 481], "entropy_bonu": [366, 368, 383, 386, 399, 468], "favour": [366, 368, 383, 386, 399], "samples_mc_entropi": [366, 368, 383, 385, 386, 399], "entropy_coeff": [366, 368, 383, 386, 399], "critic_coef": [366, 368, 383, 386, 399, 468], "loss_critic_typ": [366, 368, 383, 386, 388, 468], "l1": [366, 368, 370, 371, 375, 383, 386, 387, 388, 391, 392, 395, 402, 461, 466], "l2": [366, 368, 370, 371, 372, 373, 375, 378, 379, 383, 386, 387, 388, 391, 392, 395, 402, 466, 480], "smooth_l1": [366, 367, 368, 369, 370, 371, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392, 395, 402, 468], "separate_loss": [366, 368, 369, 370, 374, 375, 382, 383, 386, 387, 388, 389, 391, 392], "advantage_kei": [366, 368, 383, 386, 388, 399, 401, 404, 405, 406, 407], "value_target_kei": [366, 368, 383, 386, 388, 404, 405, 406, 407], "value_target": [366, 368, 383, 386, 388, 404, 405, 406, 407, 468, 481], "ddp": [366, 368, 383, 386, 388], "fsdp": [366, 368, 383, 386, 388], "divid": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 399, 445, 466, 480, 481, 482], "clip_valu": [366, 368, 383, 386, 388, 399], "loss_crit": [366, 386, 399, 468, 481], "loss_entropi": [366, 386, 400, 468, 481], "loss_object": [366, 386, 400, 468, 481], "next_reward": [366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 404, 405, 406, 407], "next_don": [366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 404, 405, 406, 407], "next_termin": [366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 404, 405, 406, 407], "loss_obj": 366, "next_observ": [366, 367, 369, 370, 371, 373, 374, 375, 382, 386, 387, 388, 389, 391, 392, 479], "sacloss": [366, 381, 390, 458], "default_kei": [366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 389, 391, 392, 399, 402, 408], "_acceptedkei": [366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 391, 392, 399, 402, 408], "fraction": [366, 368, 386], "make_value_estim": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 393, 399, 402, 462, 466, 467, 480, 481, 486], "value_typ": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 394, 399, 402, 466], "valueestim": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 394, 399, 402, 458, 462, 466, 480, 481], "hyperparam": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 466], "enum": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 394, 399, 402, 466], "default_value_estim": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 466, 486], "default_value_kwarg": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 458, 466], "dqn_loss": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 393, 399, 402], "td1": [366, 367, 369, 370, 371, 373, 375, 376, 377, 382, 384, 386, 387, 388, 389, 391, 392, 399, 402, 466], "04779": [367, 373], "qvalue_network": [367, 369, 374, 375, 382, 387, 389, 391, 392], "unti": [367, 369, 382, 387, 389, 391, 392], "loss_funct": [367, 369, 370, 371, 372, 373, 374, 375, 382, 387, 389, 391, 392, 395, 402, 466, 480], "alpha_init": [367, 369, 375, 385, 387, 389], "min_alpha": [367, 369, 375, 385, 387, 389], "max_alpha": [367, 369, 375, 385, 387, 389], "fixed_alpha": [367, 369, 375, 385, 387, 389], "target_entropi": [367, 369, 375, 385, 387, 389], "prod": [367, 369, 385, 389], "delay_actor": [367, 370, 389, 391, 392], "delay_qvalu": [367, 375, 387, 389, 391, 392], "min_q_weight": 367, "max_q_backup": 367, "backup": 367, "deterministic_backup": 367, "num_random": 367, "with_lagrang": 367, "lagrang": 367, "lagrange_thresh": 367, "deactivate_vmap": [367, 369, 375, 382, 387, 389, 391, 392, 404, 405, 406, 407], "valueclass": [367, 369, 370, 375, 387, 389, 391, 392], "qvalu": [367, 369, 374, 375, 382, 387, 389, 391, 392], "loss_actor": [367, 369, 370, 374, 375, 382, 387, 388, 389, 391, 392, 438, 466, 480], "loss_actor_bc": 367, "loss_alpha": [367, 369, 375, 387, 389], "loss_cql": [367, 373], "loss_qvalu": [367, 369, 373, 374, 375, 382, 387, 389, 391, 392], "loss_alpha_prim": 367, "ess": [368, 386, 399, 400], "clip_epsilon": [368, 399, 468, 481], "head_nam": [368, 383, 386], "normalize_advantag": [368, 383, 386, 481], "normalize_advantage_exclude_dim": [368, 383, 386], "multiobject": [368, 383, 386], "value_kei": [368, 383, 386, 404, 405, 406, 407, 466], "somemodul": [368, 383, 386], "someactor": [368, 383, 386], "value_head": [368, 383, 386], "somevalu": [368, 383, 386], "loss_modul": [368, 381, 383, 384, 386, 390, 399, 442, 451, 452, 462, 463, 466, 467, 468, 480, 481, 484], "IN": 369, "FOR": 369, "simplic": [369, 467, 468, 474, 483, 484, 486], "openreview": [369, 387], "pczqttstix": 369, "qvalue_loss": [369, 391], "actor_loss": [369, 391], "alpha_loss": 369, "num_qvalue_net": [369, 374, 375, 382, 387, 389, 391, 392], "maybe_init_target_entropi": 369, "fault_toler": 369, "target_entropy_buff": 369, "delay_valu": [370, 371, 373, 376, 388, 389, 402, 467, 469, 470, 476, 480], "loss_valu": [370, 374, 382, 388, 389, 466, 468, 480, 481], "pred_valu": [370, 373, 391, 392, 466], "pred_value_max": [370, 466], "target_valu": [370, 373, 387, 391, 392, 403, 462, 466], "target_value_max": [370, 466], "qvalueactor": [371, 373, 402, 467, 469], "double_dqn": 371, "06461": [371, 381], "mult_one_hot": [371, 374, 375, 402], "loss_val": [371, 373, 462, 466, 468, 469, 470, 473, 474, 476, 480, 481, 484], "01345": 372, "distanc": [373, 383, 395, 403, 404, 481], "dcql_loss": 373, "2110": [374, 382], "06169": [374, 382], "expectil": [374, 382], "tau": [374, 382, 390, 466, 467, 480], "antmaz": [374, 382], "sticht": [374, 382], "onehotcategor": [374, 375, 458], "target_entropy_weight": 375, "skip_done_st": [375, 389], "disctount": 376, "distributionalqvalueactor": [376, 461], "input_tensordict": [376, 466], "actor_model": 377, "value_model": [377, 379], "imagination_horizon": 377, "discount_loss": [377, 379], "lambda_kl": 378, "lambda_reco": 378, "lambda_reward": 378, "reco_loss": 378, "reward_loss": 378, "free_nat": 378, "nat": 378, "delayed_clamp": 378, "global_averag": 378, "value_loss": 379, "fake_data": 379, "1606": 380, "03476": 380, "discriminator_network": 380, "use_grad_penalti": 380, "gp_lambda": 380, "discrimin": 380, "ddpgloss": [381, 390, 452, 458, 466, 473, 480, 486], "td3loss": [381, 390, 458], "value_network_update_interv": 381, "qvalueclass": 382, "loss_value_diff": 382, "diff": 382, "old_polici": 383, "new_polici": 383, "apart": [383, 481], "dtarg": 383, "samples_mc_kl": 383, "analyt": 383, "decrement": 383, "loss_": [384, 438, 462, 466, 473], "equip": [384, 469, 470, 472], "gh": 384, "_forward_value_estimator_kei": 384, "value_estim": [384, 399, 404, 405, 406, 407, 408, 462, 466, 481], "myloss": 384, "action2": 384, "augment": [384, 460, 474, 476, 484], "deterministic_sampling_mod": 384, "convert_to_funct": [384, 399, 466], "expand_dim": [384, 399], "create_target_param": [384, 399, 466], "compare_against": [384, 399, 466], "_param": [384, 399], "resampl": [384, 399], "_target_param": [384, 399], "network_nam": [384, 399], "blend": [384, 399], "add_random_modul": [384, 399, 462], "flavor": [386, 466, 480, 481, 486], "clipppoloss": [386, 458, 468, 481], "klpenppoloss": [386, 458], "06347": 386, "gae": [386, 458, 462, 466, 468, 481], "ppo_loss": 386, "tdlambda": [386, 394, 462, 466], "base_lay": 386, "randn_lik": 386, "samplelogprob": 386, "ay8zfzm0tdd": 387, "sub_sample_len": 387, "subsampl": [387, 433, 463], "action_log_prob_actor": 387, "state_action_value_actor": [387, 391, 392], "connectionist": 388, "1992": 388, "doi": 388, "1007": 388, "bf00992696": 388, "actor_net": [388, 466, 468], "1801": 389, "01290": 389, "applic": [389, 402, 471, 472, 482], "1812": 389, "05905": 389, "redqloss": [390, 458], "math": 390, "theta_t": [390, 482], "theta_": [390, 482], "polyak": 390, "minimalist": 391, "06860": 391, "policy_nois": [391, 392], "noise_clip": [391, 392], "td3_bc": 391, "bc_loss": 391, "lmbd": 391, "td0": [393, 466, 480], "strict_shap": 395, "view_a": 395, "instabl": 399, "diagnost": 399, "kl_to_ref_coeff": 399, "kl_to_inference_coeff": 399, "grpolossoutput": [399, 401], "clip_fract": 400, "kl_approx": 400, "loss_kl_to_ref": 400, "kl_to_ref": 400, "loss_kl_to_infer": 400, "kl_to_infer": 400, "grpo_siz": 401, "rewards_kei": 401, "hit": 401, "qmixer": [402, 458], "local_valu": 402, "visibl": [402, 481], "acceptedkei": 402, "global_valu": 402, "penultim": 402, "local_value_network": 402, "mixer_network": 402, "value_modul": [402, 468, 486], "qnet": [402, 466], "next_val_kei": 403, "pred_next_v": 403, "mse": 403, "q_valu": 403, "n_steps_to_next": 403, "value_next_st": 403, "1506": [404, 409, 417], "02438": [404, 409, 417], "exponenti": [404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 440], "average_ga": [404, 468], "skip_exist": [404, 405, 406, 407], "get_default_devic": [404, 405, 406, 407, 408], "auto_reset_env": 404, "next_valu": [404, 405, 406, 407, 408], "gradient_mod": 404, "value_error": [404, 405, 406, 407, 408], "marker": [404, 466], "trajecotri": 404, "fair": 404, "target_param": [404, 405, 406, 407, 408, 466, 481], "98": [404, 405, 406, 407], "94": [404, 407], "unpack": [404, 405, 406, 407], "tensor_kei": [404, 405, 406, 407, 408], "aka": [405, 467, 480], "average_reward": [405, 406, 407], "tdestim": [405, 406, 408], "infti": 406, "valuefunctionbas": 408, "old_stat": [409, 411, 413, 415, 417, 418, 420], "new_stat": [409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "rolling_gamma": [413, 414, 415, 416, 418, 419, 420, 421], "g1": [413, 414, 415, 416, 418, 419, 420, 421], "g2": [413, 414, 415, 416, 418, 419, 420, 421], "g3": [413, 414, 415, 416, 418, 419, 420, 421], "g4": [413, 414, 415, 416, 418, 419, 420, 421], "v3": [413, 414, 415, 416, 418, 419, 420, 421], "preproc": [422, 470, 480], "as_non_tensor": [422, 480], "render_method": 422, "pass_tensordict": 422, "syntact": 422, "sugar": 422, "out_file_bas": 423, "skip_reset": 423, "center_crop": 424, "make_grid": 424, "log_video": 424, "csv": [424, 426, 428, 467, 475, 476], "wandb": [424, 428, 431, 475, 486], "tensorboard": [424, 428, 430, 475, 486], "log_dir": [424, 425, 426, 428, 430, 431, 467, 476], "cheetah_video": 424, "run_video": 424, "openxexperiencereplai": 424, "sec": [424, 482], "video_fp": [424, 426, 429], "cmu_stretch": 424, "run_video_0": 424, "cur_dir": 426, "csv_log": 426, "add_video": 426, "video_": 426, "experiment_nam": [427, 428], "logger_typ": 428, "logger_nam": 428, "mlflow": [428, 429], "wandb_kwarg": 428, "mlflow_kwarg": 428, "tracking_uri": 429, "uri": 429, "datastor": 429, "tb_log": 430, "tensoarboard": 430, "td_log": 430, "save_dir": 431, "resum": 431, "uncategor": 431, "my_funct": 432, "sub_traj_len": 433, "min_sub_traj_len": 433, "register_op": [433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 463, 467], "process_optim_batch": [433, 439, 440, 463], "td_out": [433, 441], "_process_optim_batch_hook": [433, 463], "batch_subsampl": 433, "clear_cuda": 434, "pre_optim_step": [434, 463], "log_pbar": [435, 436, 437, 440, 463, 467], "count_fram": 435, "pre_steps_log": [435, 436, 463], "count_frames_log": 435, "lognam": 436, "r_train": 436, "log_reward": [436, 467], "record_interv": [437, 466, 467], "record_fram": [437, 445, 466, 467], "policy_explor": [437, 452, 466, 467, 470, 472, 476], "log_kei": [437, 467], "underestim": 437, "r_evalu": [437, 466], "loss_compon": 438, "appl": 438, "optimizer_hook": 438, "flatten_tensordict": [439, 467], "max_dim": 439, "rb_trainer": 439, "batch_process": [439, 440, 441, 463], "post_loss": [439, 463], "999": [440, 467], "jitter": 440, "finfo": 440, "default_dtyp": 440, "update_reward_stat": 440, "normalize_reward": 440, "make_train": [441, 458], "_process_batch_hook": [441, 463], "select_kei": [441, 463], "versatil": [442, 471], "optim_steps_per_batch": [442, 463, 467], "clip_grad_norm": 442, "clip_norm": 442, "progress_bar": 442, "save_trainer_interv": 442, "log_interv": [442, 467], "save_trainer_fil": [442, 463], "load_from_fil": [442, 463], "update_weights_interv": [444, 467], "post_step": [444, 463, 467], "dictconfig": [445, 446, 447, 448, 450, 451, 452, 453, 456], "unknowingli": 445, "annealing_fram": [445, 466], "init_env_step": [445, 446, 466], "proof_environ": [446, 466], "sta": 446, "ot": 446, "actor_model_explor": [447, 448, 466], "make_env_kwarg": [447, 448], "targetnetupdat": [449, 451, 452], "replayargsconfig": 450, "target_net_updat": [452, 466, 467], "constitu": 452, "egreedywrapp": 452, "env_proof": 452, "obs_spec": 452, "net_valu": 452, "dir": [452, 463, 467], "gettempdir": 452, "namespac": [453, 456], "transformed_env_constructor": [453, 458], "num_env_per_collector": [454, 455], "video_tag": 456, "norm_obs_onli": 456, "use_env_cr": 456, "custom_env_mak": 456, "custom_env": 456, "return_transformed_env": 456, "action_dim_gsd": 456, "state_dim_gsd": 456, "obs_norm_state_dict": 456, "weightupdat": 458, "distributedsyncdatacollector": 458, "submitit_delayed_launch": 458, "remotetensordictreplaybuff": 458, "rational": 458, "footnot": 458, "binarydiscretetensorspec": 458, "boundedtensorspec": 458, "discretetensorspec": 458, "lazystackedcompositespec": 458, "lazystackedtensorspec": 458, "multidiscretetensorspec": 458, "multionehotdiscretetensorspec": 458, "nontensorspec": 458, "onehotdiscretetensorspec": 458, "unboundedcontinuoustensorspec": 458, "unboundeddiscretetensorspec": 458, "prompttensordicttoken": 458, "rolloutfrommodel": 458, "tokenizeddatasetload": 458, "create_infinite_iter": 458, "constantklcontrol": 458, "adaptiveklcontrol": 458, "densifyreward": 458, "h5combin": 458, "h5split": 458, "nested2t": 458, "check_no_exclusive_kei": 458, "consolidate_spec": 458, "contains_lazy_spec": 458, "envmetadata": 458, "chessenv": 458, "tictactoeenv": 458, "llmhashingenv": 458, "check_marl_group": 458, "get_available_librari": 458, "terminated_or_trunc": 458, "dreamerdecod": 458, "braxwrapp": 458, "dmcontrolwrapp": 458, "isaaclabwrapp": 458, "jumanjiwrapp": 458, "meltingpotenv": 458, "meltingpotwrapp": 458, "mogymenv": 458, "multithreadedenvwrapp": 458, "openmlenv": 458, "openspielwrapp": 458, "openspielenv": 458, "pettingzooenv": [458, 480], "robohiveenv": 458, "smacv2env": 458, "smacv2wrapp": 458, "unitymlagentsenv": 458, "unitymlagentswrapp": 458, "vmaswrapp": 458, "register_gym_spec_convers": 458, "vllmupdat": [458, 460], "qvaluehook": 458, "distributionalqvaluehook": 458, "reset_nois": 458, "cemplann": 458, "mpcplannerbas": 458, "mppiplann": 458, "independentnorm": 458, "truncatednorm": 458, "maskedonehotcategor": 458, "onehotordin": 458, "inv_softplu": 458, "vmapmodul": 458, "distributionaldqnloss": [458, 467], "discretesacloss": 458, "crossqloss": 458, "iqlloss": 458, "discreteiqlloss": 458, "cqlloss": 458, "discretecqlloss": 458, "gailloss": 458, "dtloss": 458, "onlinedtloss": 458, "td3bcloss": 458, "ppoloss": 458, "a2closs": 458, "reinforceloss": 458, "dreameractorloss": 458, "dreamermodelloss": 458, "dreamervalueloss": 458, "td0estim": [458, 466], "td1estim": [458, 466], "td0_return_estim": 458, "td0_advantage_estim": 458, "td1_return_estim": 458, "vec_td1_return_estim": 458, "td1_advantage_estim": 458, "vec_td1_advantage_estim": 458, "td_lambda_return_estim": 458, "vec_td_lambda_return_estim": 458, "td_lambda_advantage_estim": 458, "vec_td_lambda_advantage_estim": 458, "generalized_advantage_estim": 458, "vec_generalized_advantage_estim": 458, "hardupd": [458, 466, 473], "softupd": [458, 466, 467, 469, 470, 473, 476, 480], "distance_loss": [458, 466], "group_optim": 458, "hold_out_net": 458, "hold_out_param": [458, 466], "batchsubsampl": [458, 463], "clearcudacach": 458, "countframeslog": 458, "logscalar": [458, 463, 467], "optimizerhook": [458, 467], "logvalidationreward": [458, 463, 466, 467], "replaybuffertrain": [458, 463, 467], "rewardnorm": 458, "selectkei": [458, 463], "trainerhookbas": [458, 463, 467], "updateweight": [458, 463, 467], "make_collector_offpolici": 458, "make_collector_onpolici": 458, "make_dqn_loss": 458, "make_replay_buff": [458, 466], "make_target_updat": 458, "parallel_env_constructor": [458, 466], "sync_async_collector": 458, "sync_sync_collector": 458, "correct_for_frame_skip": 458, "get_stats_random_rollout": 458, "mlflowlogg": 458, "get_logg": 458, "generate_exp_nam": 458, "journei": 459, "textbook": 459, "highlight": [459, 480], "ever": [459, 481], "bump": 459, "benefit": [459, 471, 480, 481, 484], "pr": 459, "weight_upd": 460, "make_polici": 460, "policy_version_track": 460, "fundament": [460, 474], "templatetransform": 460, "pythoninterpret": 460, "mcptooltransform": 460, "klrewardtransform": 460, "grpoloss": 460, "simpler": [460, 467, 471], "make_mlgym": 460, "7b": [460, 478], "step_data": 460, "s_": [460, 478], "unifi": [460, 487], "ground": [461, 466, 482], "recycl": [461, 484], "noisier": 461, "Their": [461, 480, 481], "sd": [461, 487], "prob_modul": 461, "uncertainti": 461, "soften": 461, "backbon": [461, 469, 472, 479, 486], "make_actor": 461, "make_valu": 461, "shared_param": 461, "make_common": 461, "reusabl": [462, 466, 484], "swappabl": [462, 466], "characterist": [462, 466, 482], "trainabl": [462, 466, 473, 483], "smth": [462, 466], "plenti": [462, 470], "amort": [462, 467, 468], "told": [462, 468], "pseudo": [462, 474, 482], "buri": 462, "str_valu": 462, "nutshel": [462, 466], "barto": [462, 480, 481], "chapter": [462, 475], "value_net_loss": 462, "pow": [462, 466], "room": 462, "signifi": [462, 480, 481], "underperform": 462, "intric": [462, 472], "set_composite_lp_aggreg": [462, 481], "action_td": 462, "action0": 462, "f0": 462, "action1": 462, "f1": 462, "f2": 462, "f3": 462, "action0_log_prob": 462, "action1_log_prob": 462, "inferior": 462, "multivari": 462, "dirichlet": 462, "prev_log_prob": 462, "new_log_prob": 462, "log_weight": 462, "appreci": [462, 471], "multihead": 462, "believ": 463, "substanti": 463, "_pre_steps_log_hook": 463, "_pre_optim_hook": 463, "sub_batch": 463, "_post_loss_hook": 463, "_post_optim_hook": 463, "post_optim": [463, 467], "_post_optim_log": 463, "post_optim_log": 463, "_post_steps_hook": 463, "_post_steps_log_hook": 463, "post_steps_log": 463, "logginghook": 463, "logging_hook": 463, "save_dict": 463, "some_valu": 463, "torchsnapshot": 463, "ckpt_backend": 463, "filepath": 463, "save_train": 463, "000": [465, 485], "galleri": [465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "mem": [465, 485], "mb": [465, 485], "coding_ddpg": [465, 466, 485], "coding_dqn": [465, 467, 485], "coding_ppo": [465, 468, 485], "dqn_with_rnn": [465, 469, 485], "llm_browser": [465, 478, 485], "multi_task": [465, 479, 485], "multiagent_competitive_ddpg": [465, 480, 485], "multiagent_ppo": [465, 481, 485], "pretrained_model": [465, 483, 485], "rb_tutori": [465, 484, 485], "torchrl_demo": [465, 485, 486], "torchrl_env": [465, 485, 487], "author": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 487], "vincent": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 482, 484, 487], "moen": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 482, 484, 487], "assembl": 466, "focus": [466, 473], "maxim": [466, 473, 482], "transpar": [466, 469], "bash": 466, "is_fork": [466, 467, 468, 469, 480, 481, 483], "get_start_method": [466, 467, 468, 469, 480, 481, 483], "collector_devic": 466, "loss_dict": 466, "modal": 466, "oblivi": [466, 468, 484], "elementari": 466, "didact": [466, 470], "dilut": 466, "pessimist": [466, 467, 468], "target_actor_network_param": 466, "actor_in_kei": 466, "actor_crit": 466, "compromis": 466, "hp": 466, "_value_estim": 466, "elif": [466, 467, 478], "unknown": 466, "_loss_actor": 466, "td_copi": 466, "actor_network_param": [466, 480], "value_network_param": [466, 480], "_loss_valu": 466, "pred_val": 466, "target_value_network_param": 466, "glue": 466, "_forward": 466, "remaind": 466, "env_librari": 466, "env_task": 466, "env_arg": [466, 467], "torchr": 466, "rescal": 466, "presum": 466, "make_transformed_env": 466, "reward_sc": 466, "env_per_collector": 466, "transform_state_dict": 466, "make_t_env": 466, "cheat": 466, "10m": 466, "cautiou": 466, "magnitud": [466, 480], "thousand": [466, 469], "get_env_stat": 466, "proof_env": 466, "5000": [466, 470, 476], "recal": [466, 468, 478, 484], "ddpgmlpactor": 466, "ddpgmlpqnet": 466, "materi": 466, "ornsteinuhlenbeckprocessmodul": [466, 472], "make_ddpg_actor": 466, "q_net": 466, "tight": 466, "10_000": [466, 468], "traj_len": [466, 469], "make_record": 466, "recorder_obj": 466, "pick": [466, 467, 472, 478], "buffer_s": [466, 467], "random_crop_len": 466, "prb": 466, "buffer_scratch_dir": [466, 467, 469, 474, 483], "dataflow": 466, "ceil_div": 466, "utd": [466, 469], "update_to_data": 466, "realiz": 466, "_must_": 466, "001": [466, 482], "outdat": 466, "trick": [466, 467], "despit": 466, "optimizer_actor": 466, "weight_decai": [466, 467], "optimizer_valu": 466, "total_collection_step": 466, "rewards_ev": 466, "collected_fram": 466, "numel": [466, 468, 469, 470, 476, 480, 483, 484], "current_fram": [466, 480], "sampled_tensordict": 466, "gn1": 466, "clip_grad_norm_": [466, 468, 480, 481, 482], "gn2": 466, "gn": [466, 482], "td_record": 466, "rn": 466, "2f": 466, "mention": [466, 469, 484, 487], "matplotlib": [466, 468, 469, 470, 480, 481, 482, 484, 487], "pyplot": [466, 468, 469, 470, 480, 481, 482, 484, 487], "plt": [466, 468, 469, 470, 480, 481, 482, 484, 487], "zip": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "legend": [466, 480], "xlabel": [466, 469, 481, 482], "ylabel": [466, 481], "tight_layout": 466, "takeawai": [466, 467, 470, 478], "distpatch": 466, "jupyt": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "ipynb": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487], "sphinx": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "road": 467, "prerequisit": [467, 469, 478], "lookup": 467, "cart": 467, "pole": 467, "un": 467, "actuat": 467, "frictionless": 467, "duelingcnndqnet": 467, "egreedymodul": [467, 469, 470, 472, 476], "is_notebook": 467, "shell": 467, "get_ipython": 467, "__class__": 467, "zmqinteractiveshel": 467, "qtconsol": 467, "terminalinteractiveshel": 467, "ipython": [467, 481, 482], "nameerror": [467, 480], "umbrella": 467, "misplac": 467, "misus": 467, "orchestr": [467, 473, 475], "five": 467, "64x64": 467, "motion": [467, 482], "obs_norm_sd": 467, "mp_context": 467, "get_norm_stat": 467, "test_env": 467, "mathbb": 467, "rightarrow": 467, "make_model": 467, "dummy_env": 467, "init_bia": 467, "exploration_modul": [467, 469, 470, 472, 476], "eps_greedy_v": 467, "eps_greedy_val_env": 467, "actor_explor": 467, "get_replay_buff": 467, "n_optim": [467, 473, 474], "parametriz": 467, "get_collector": 467, "bunch": 467, "ubiquit": [467, 471], "get_loss_modul": 467, "target_updat": [467, 480], "995": 467, "variat": 467, "2e": [467, 482], "wd": 467, "upd": 467, "harder": [467, 486], "5_000": 467, "500000": 467, "100000": 467, "005": [467, 480], "mandatori": [467, 468, 481, 482], "fairer": 467, "budget": 467, "dqn_exp_": 467, "uuid1": [467, 487], "cumbersom": 467, "buffer_hook": 467, "aliv": 467, "total_reward": 467, "print_csv_files_in_fold": 467, "folder_path": 467, "csv_file": 467, "output_str": 467, "dirpath": 467, "endswith": 467, "strip": 467, "qvaluenetwork": 467, "accuraci": 467, "fanci": [467, 474], "demonstr": [468, 470, 474, 478, 480, 481, 482, 484, 487], "talk": 468, "six": 468, "sophist": [468, 481], "invent": 468, "theta_k": 468, "pi_": 468, "exceed": 468, "discourag": [468, 482], "indispens": 468, "analyz": 468, "lingua": 468, "franca": 468, "defaultdict": [468, 482], "3e": [468, 469, 480, 481], "max_grad_norm": [468, 480, 481], "sub_batch_s": 468, "num_epoch": [468, 481], "entropy_ep": [468, 481], "charact": [468, 470], "inverteddoublependulum": 468, "transmit": 468, "stai": 468, "confid": [468, 480, 481], "ran": 468, "f_": 468, "mu_": 468, "difficulti": [468, 487], "d_ob": 468, "d_action": 468, "policy_modul": [468, 480, 481], "briefli": [468, 480, 481], "refil": [468, 481], "easiest": [468, 473, 480, 481], "mathemat": [468, 480, 481], "tradeoff": [468, 481], "advantage_modul": 468, "entropy_coef": [468, 481], "lr_schedul": [468, 482], "cosineannealinglr": [468, 482], "eval_str": 468, "tensordict_data": [468, 481], "data_view": [468, 481], "subdata": [468, 480, 481], "cum_reward_str": 468, "stepcount_str": 468, "param_group": [468, 480], "lr_str": 468, "eval_rollout": 468, "nice": [468, 471, 474], "figsiz": [468, 482], "subplot": [468, 480, 482, 487], "titl": [468, 469, 470, 481, 482], "84x84": [469, 470], "accessori": 469, "stamp": 469, "n_cell": 469, "customiz": 469, "wouldn": 469, "qval": 469, "stoch_polici": 469, "opportun": [469, 480], "uniniti": 469, "again": [469, 470, 471, 472, 474, 481, 483, 484, 487], "strongli": 469, "million": 469, "sake": [469, 483, 484], "20_000": [469, 482], "longest": 469, "npai": 469, "action_spread": 469, "strong": 470, "impress": 470, "arduino": 470, "raspberri": 470, "pi": [470, 480, 481, 482], "alon": 470, "examplifi": 470, "ship": 470, "stick": 470, "nearest": 470, "value_mlp": [470, 476], "init_rand_step": [470, 476], "total_count": [470, 476], "total_episod": [470, 476], "t0": [470, 476], "screen": [470, 480], "color": [470, 480], "unblock": 470, "policy_transform": 470, "fake_td": 470, "exported_polici": 470, "div": 470, "graph_modul": 470, "print_read": 470, "group0": 470, "group0_agent0_ob": 470, "collid": [470, 481], "group0_agent0": 470, "agent0_ob": 470, "comma": 470, "digress": 470, "exported_stochastic_polici": 470, "trace": 470, "batchsizetransform": 470, "hidden0": 470, "hidden1": 470, "recurrent_polici": 470, "fake_ob": 470, "fake_hidden0": 470, "fake_hidden1": 470, "fake_is_init": 470, "exported_recurrent_polici": 470, "platform": [470, 486], "aoti": 470, "_inductor": 470, "aoti_compile_and_packag": 470, "aoti_load_packag": 470, "pt2": 470, "pkg_path": 470, "package_path": 470, "compiled_modul": 470, "onnxruntim": 470, "showcas": [470, 482], "explain": [470, 483], "tensorrt": 470, "android": 470, "aleinterfac": 470, "rom": 470, "loadrom": 470, "reset_gam": 470, "screen_ob": 470, "getscreenrgb": 470, "tick_param": 470, "bottom": 470, "labelleft": 470, "labelbottom": 470, "imshow": [470, 487], "dynamo_export": 470, "onnx_policy_export": 470, "onnx_file_path": 470, "ort_sess": 470, "inferencesess": 470, "cpuexecutionprovid": 470, "onnxruntime_input": 470, "get_input": 470, "onnx_polici": 470, "onnxruntime_output": 470, "topic": [471, 472, 473], "straight": 471, "backtrack": 471, "reset_with_act": 471, "stepped_data": 471, "spatial": 471, "useless": 471, "policyless": 471, "examin": [471, 480], "tackl": 472, "delv": 472, "extractor": 472, "additivegaussianmodul": [472, 480], "exploration_polici": [472, 480], "greedili": 472, "2d": [472, 480, 481], "innov": [472, 473], "rollout_explor": 472, "sole": 473, "supervis": [473, 474, 484, 487], "n_collect": 473, "get_next_batch": 473, "concis": 473, "ddpg_loss": 473, "total_loss": 473, "prove": 473, "reliev": 473, "concern": 473, "accustom": 474, "surprisingli": 474, "art": [474, 480, 481], "countless": 474, "yourself": [474, 480, 481], "everywher": 475, "log_scalar": 475, "my_scalar": 475, "excess": 475, "lesson": 476, "voluntarili": 476, "torchrl_logg": [476, 478], "training_loop": 476, "video_record": 476, "arbitrarili": 476, "t1": 476, "conclud": [476, 483], "tutorials_python": 477, "tutorials_jupyt": 477, "playwright": 478, "autom": 478, "__future__": 478, "annot": 478, "browsertransform": 478, "filterwarn": 478, "browser_transform": 478, "websit": 478, "rewardtransform": 478, "last_item": 478, "agnost": 478, "execute_tool_act": 478, "current_st": 478, "nllm": 478, "nenviron": 478, "franc": 478, "selector": 478, "button": 478, "css": 478, "btnk": 478, "extract_typ": 478, "ref_llm": 478, "env1_obs_kei": 479, "observation_stand": 479, "env2_obs_kei": 479, "observation_walk": 479, "tdreset1": 479, "tdreset2": 479, "lazy_stack": 479, "policy_common": 479, "policy_stand": 479, "policy_walk": 479, "But": 479, "env1_mak": 479, "env2_mak": 479, "_single_task": 479, "td_rollout": 479, "matteo": [480, 481], "bettini": [480, 481], "benchmarl": [480, 481], "simple_tag": 480, "maddpg": [480, 481], "multiagentparticleenviron": 480, "mpe": 480, "centralis": [480, 481], "tie": [480, 481], "iddpg": [480, 481], "richard": 480, "andrew": 480, "mit": 480, "press": 480, "2018": 480, "mathbf": [480, 481], "decentralis": [480, 481], "literatur": [480, 481], "overcom": [480, 481], "stationari": [480, 481], "establish": 480, "gui": [480, 481], "is_sphinx": 480, "__sphinx_build__": 480, "n_iter": [480, 481, 482], "evad": 480, "iteration_when_stop_training_evad": 480, "memory_s": 480, "n_optimiser_step": 480, "train_batch_s": 480, "polyak_tau": 480, "chaser": 480, "red": 480, "circl": [480, 481], "green": 480, "touch": [480, 482], "penal": [480, 481], "obstacl": 480, "drag": [480, 481], "elast": [480, 481], "collis": [480, 481], "imped": 480, "n_chaser": 480, "n_evad": 480, "n_obstacl": 480, "use_vma": 480, "simple_tag_v3": 480, "num_good": 480, "num_adversari": 480, "num_obstacl": 480, "max_cycl": 480, "num_vmas_env": [480, 481], "num_good_ag": 480, "num_landmark": 480, "four": [480, 481, 482], "n_agents_in_that_group": 480, "stress": [480, 481], "paramount": [480, 481], "n_rollout_step": [480, 481], "evolut": [480, 481], "group_nam": 480, "n_agents_in_group": 480, "minor": 480, "agents_exploration_polici": 480, "utilis": [480, 481], "n_obs_per_ag": [480, 481], "n_actions_per_ag": [480, 481], "share_parameters_polici": [480, 481], "policy_net": [480, 481], "_agent": 480, "grant": [480, 481], "converg": [480, 481], "share_parameters_crit": [480, 481], "obs_act": 480, "cat_modul": 480, "critic_modul": 480, "fantast": [480, 481], "reset_td": 480, "interfer": 480, "subject": [480, 482], "flatten_kei": 480, "process_batch": 480, "group_shap": 480, "get_item_shap": [480, 481], "nested_done_kei": 480, "nested_terminated_kei": 480, "desc": [480, 481], "episode_reward_mean_": 480, "episode_reward_mean_map": 480, "train_group_map": 480, "group_batch": 480, "_group": 480, "loss_nam": 480, "episode_reward_mean": [480, 481], "fig": [480, 484], "set_ylabel": 480, "axvlin": 480, "orang": 480, "set_xlabel": 480, "video_logg": 480, "vmas_log": 480, "env_with_rend": 480, "vmas_rend": 480, "print_log_dir": 480, "profici": [480, 481], "lidar": 481, "sensor": 481, "mappo": 481, "ippo": 481, "analys": 481, "visualis": 481, "vmas_devic": 481, "6_000": 481, "minibatch_s": 481, "generalis": 481, "simd": 481, "warp": 481, "todai": 481, "surround": 481, "dot": [481, 482], "scenario_nam": 481, "critic_net": 481, "minibatch": 481, "episode_reward_mean_list": 481, "critic_network_param": 481, "target_critic_network_param": 481, "xvfb": 481, "pyvirtualdisplai": 481, "1400": 481, "900": 481, "pil": 481, "rendering_callback": 481, "fromarrai": 481, "gif": 481, "save_al": 481, "append_imag": 481, "freeli": 482, "broader": 482, "wider": 482, "acquaint": 482, "avenu": 482, "_apply_to_composit": 482, "default_x": 482, "default_i": 482, "upward": 482, "angular": 482, "sin": 482, "rad": 482, "angl": 482, "deleg": 482, "new_th": 482, "new_thdot": 482, "g_forc": 482, "angle_norm": 482, "albeit": 482, "high_th": 482, "high_thdot": 482, "low_th": 482, "low_thdot": 482, "trivial": 482, "irrelev": 482, "_make_spec": 482, "td_param": 482, "render_fp": 482, "random_": 482, "_make_step": 482, "staticmethod": 482, "skeleton": 482, "unitari": 482, "sine": 482, "cosin": 482, "sintransform": 482, "costransform": 482, "t_sin": 482, "t_co": 482, "cat_transform": 482, "simple_rollout": 482, "unexplor": 482, "init_td": 482, "traj_return": 482, "last_reward": 482, "is_ipython": 482, "inlin": 482, "get_backend": 482, "ion": 482, "gcf": 482, "clear_output": 482, "r3mtransform": 483, "embodi": 483, "env_transform": [483, 487], "wiser": 483, "batteri": 484, "gc": 484, "buffer_list": 484, "buffer_lazytensor": 484, "tempdir": 484, "buffer_lazymemmap": 484, "fullest": 484, "mydata": 484, "buffer_lazi": 484, "_i": 484, "artifici": 484, "hamper": 484, "she": 484, "proport": 484, "reappear": 484, "unfold": 484, "problemat": 484, "4th": 484, "prioritizedslicesampl": 484, "tensordictmaxvaluewrit": 484, "demo": 486, "icml": 486, "vmoen": 486, "fb": 486, "invest": 486, "media": 486, "predominantli": 486, "data2": 486, "sub_key1": 486, "scturctur": 486, "data_stack": 486, "data_sampl": 486, "_sampler": 486, "_sum_tre": 486, "modulenotfounderror": 486, "noopresetenv": [486, 487], "backbone_modul": 486, "params_expand": 486, "exec_sequ": 486, "tensordict_exp": 486, "base_modul": 486, "tensordicts_prealloc": 486, "tensordicts_stack": 486, "tensordict_rollout": [486, 487], "automatical": 486, "60": 486, "particularili": 486, "concatmodul": 486, "loss_td": 486, "contributor": 486, "curiou": 486, "nascent": 486, "unsupervis": 487, "_build_env": 487, "deserv": 487, "__episode__": 487, "__trajectory__": 487, "void": 487, "reproduct": 487, "tensordict_tprim": 487, "wrapper1": 487, "wrapper2": 487, "obviou": 487, "truth": 487, "env_transformed_bi": 487, "stanc": 487, "transformeddistribut": 487, "base_dist": 487, "concat": 487, "mofidi": 487, "transformedenviron": 487, "moderet": 487, "computation": 487, "incom": 487, "amongst": 487, "has_cuda": 487, "convention": 487, "markovian": 487, "bar_": 487, "get_someth": 487, "aargh": 487, "is_clos": 487, "foo_list": 487, "121": 487, "evolv": 487, "steadi": 487, "approx": 487, "absor": 487, "_extra_st": 487}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [278, 0, 1, "", "implement_for"], [432, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiProcessedWeightUpdater"], [15, 0, 1, "", "MultiSyncDataCollector"], [16, 0, 1, "", "MultiaSyncDataCollector"], [17, 0, 1, "", "RayWeightUpdater"], [18, 0, 1, "", "SyncDataCollector"], [19, 0, 1, "", "VanillaWeightUpdater"], [20, 0, 1, "", "WeightUpdaterBase"], [21, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "init_updater"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[14, 1, 1, "", "all_worker_ids"], [14, 2, 1, "", "collector"], [14, 1, 1, "", "from_policy"], [14, 1, 1, "", "increment_version"], [14, 1, 1, "", "init"], [14, 2, 1, "", "post_hooks"], [14, 1, 1, "", "push_weights"], [14, 1, 1, "", "register_collector"], [14, 1, 1, "", "register_post_hook"]], "torchrl.collectors.MultiSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "init_updater"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "init_updater"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[17, 1, 1, "", "_get_server_weights"], [17, 1, 1, "", "_maybe_map_weights"], [17, 1, 1, "", "_skip_update"], [17, 1, 1, "", "_sync_weights_with_worker"], [17, 1, 1, "id0", "all_worker_ids"], [17, 2, 1, "", "collector"], [17, 1, 1, "", "from_policy"], [17, 1, 1, "", "increment_version"], [17, 1, 1, "", "init"], [17, 2, 1, "", "post_hooks"], [17, 1, 1, "", "push_weights"], [17, 1, 1, "", "register_collector"], [17, 1, 1, "", "register_post_hook"]], "torchrl.collectors.SyncDataCollector": [[18, 1, 1, "", "async_shutdown"], [18, 1, 1, "", "init_updater"], [18, 1, 1, "", "iterator"], [18, 1, 1, "", "load_state_dict"], [18, 1, 1, "", "pause"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "rollout"], [18, 1, 1, "", "set_seed"], [18, 1, 1, "", "shutdown"], [18, 1, 1, "", "start"], [18, 1, 1, "", "state_dict"], [18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "", "from_policy"], [19, 1, 1, "", "increment_version"], [19, 1, 1, "", "init"], [19, 2, 1, "", "post_hooks"], [19, 1, 1, "", "push_weights"], [19, 1, 1, "", "register_collector"], [19, 1, 1, "", "register_post_hook"]], "torchrl.collectors.WeightUpdaterBase": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 1, 1, "id0", "from_policy"], [20, 1, 1, "", "increment_version"], [20, 1, 1, "", "init"], [20, 2, 1, "", "post_hooks"], [20, 1, 1, "id1", "push_weights"], [20, 1, 1, "id2", "register_collector"], [20, 1, 1, "", "register_post_hook"]], "torchrl.collectors.aSyncDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "init_updater"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[22, 0, 1, "", "DistributedDataCollector"], [23, 0, 1, "", "DistributedSyncDataCollector"], [24, 0, 1, "", "DistributedWeightUpdater"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RPCWeightUpdater"], [27, 0, 1, "", "RayCollector"], [28, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "init_updater"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "init_updater"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[24, 1, 1, "", "_get_server_weights"], [24, 1, 1, "", "_maybe_map_weights"], [24, 1, 1, "", "_sync_weights_with_worker"], [24, 1, 1, "id0", "all_worker_ids"], [24, 2, 1, "", "collector"], [24, 1, 1, "", "from_policy"], [24, 1, 1, "", "increment_version"], [24, 1, 1, "", "init"], [24, 2, 1, "", "post_hooks"], [24, 1, 1, "", "push_weights"], [24, 1, 1, "", "register_collector"], [24, 1, 1, "", "register_post_hook"], [24, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "async_shutdown"], [25, 1, 1, "", "init_updater"], [25, 1, 1, "", "pause"], [25, 1, 1, "", "start"], [25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[26, 1, 1, "", "_get_server_weights"], [26, 1, 1, "", "_maybe_map_weights"], [26, 1, 1, "", "_sync_weights_with_worker"], [26, 1, 1, "id0", "all_worker_ids"], [26, 2, 1, "", "collector"], [26, 1, 1, "", "from_policy"], [26, 1, 1, "", "increment_version"], [26, 1, 1, "", "init"], [26, 2, 1, "", "post_hooks"], [26, 1, 1, "", "push_weights"], [26, 1, 1, "", "register_collector"], [26, 1, 1, "", "register_post_hook"], [26, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[27, 1, 1, "", "add_collectors"], [27, 1, 1, "", "async_shutdown"], [27, 1, 1, "", "init_updater"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "local_policy"], [27, 1, 1, "", "pause"], [27, 2, 1, "", "remote_collectors"], [27, 1, 1, "", "set_seed"], [27, 1, 1, "", "shutdown"], [27, 1, 1, "", "start"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "stop_remote_collectors"], [27, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[29, 0, 1, "", "LLMCollector"], [30, 0, 1, "", "RayLLMCollector"], [31, 0, 1, "", "vLLMUpdater"]], "torchrl.collectors.llm.LLMCollector": [[29, 1, 1, "", "as_remote"], [29, 1, 1, "", "async_shutdown"], [29, 2, 1, "", "dialog_turns_per_batch"], [29, 1, 1, "", "get_policy_model"], [29, 1, 1, "", "get_policy_version"], [29, 1, 1, "", "increment_version"], [29, 1, 1, "", "init_updater"], [29, 1, 1, "", "is_initialized"], [29, 1, 1, "", "iterator"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "pause"], [29, 2, 1, "", "policy_version"], [29, 1, 1, "", "reset"], [29, 2, 1, "", "rollout"], [29, 1, 1, "", "set_seed"], [29, 1, 1, "", "shutdown"], [29, 1, 1, "", "start"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.RayLLMCollector": [[30, 1, 1, "", "as_remote"], [30, 1, 1, "", "async_shutdown"], [30, 2, 1, "", "dialog_turns_per_batch"], [30, 1, 1, "", "get_policy_model"], [30, 1, 1, "", "get_policy_version"], [30, 1, 1, "", "increment_version"], [30, 1, 1, "", "init_updater"], [30, 1, 1, "", "is_initialized"], [30, 1, 1, "", "iterator"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "next"], [30, 1, 1, "", "pause"], [30, 2, 1, "", "policy_version"], [30, 1, 1, "", "reset"], [30, 2, 1, "", "rollout"], [30, 1, 1, "", "set_seed"], [30, 1, 1, "", "shutdown"], [30, 1, 1, "", "start"], [30, 1, 1, "", "state_dict"], [30, 2, 1, "", "total_dialog_turns"], [30, 1, 1, "", "update_policy_weights_"], [30, 2, 1, "", "weight_updater"]], "torchrl.collectors.llm.vLLMUpdater": [[31, 1, 1, "", "_get_server_weights"], [31, 1, 1, "", "_maybe_map_weights"], [31, 1, 1, "", "_sync_weights_with_worker"], [31, 1, 1, "id0", "all_worker_ids"], [31, 2, 1, "", "collector"], [31, 1, 1, "", "from_policy"], [31, 1, 1, "", "get_model_metadata"], [31, 1, 1, "", "increment_version"], [31, 1, 1, "id1", "init"], [31, 2, 1, "", "post_hooks"], [31, 1, 1, "", "push_weights"], [31, 1, 1, "", "register_collector"], [31, 1, 1, "", "register_post_hook"]], "torchrl.collectors.utils": [[32, 3, 1, "", "split_trajectories"]], "torchrl.data": [[33, 0, 1, "", "AdaptiveKLController"], [34, 0, 1, "", "Binary"], [35, 0, 1, "", "BinaryDiscreteTensorSpec"], [36, 0, 1, "", "BinaryToDecimal"], [37, 0, 1, "", "Bounded"], [38, 0, 1, "", "BoundedTensorSpec"], [39, 0, 1, "", "Categorical"], [40, 0, 1, "", "Composite"], [41, 0, 1, "", "CompositeSpec"], [42, 0, 1, "", "ConstantKLController"], [43, 0, 1, "", "DensifyReward"], [44, 0, 1, "", "DiscreteTensorSpec"], [45, 0, 1, "", "Flat2TED"], [46, 0, 1, "", "H5Combine"], [47, 0, 1, "", "H5Split"], [48, 0, 1, "", "HashToInt"], [49, 0, 1, "", "LazyStackedCompositeSpec"], [50, 0, 1, "", "LazyStackedTensorSpec"], [51, 0, 1, "", "MCTSForest"], [52, 0, 1, "", "MultiCategorical"], [53, 0, 1, "", "MultiDiscreteTensorSpec"], [54, 0, 1, "", "MultiOneHot"], [55, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [56, 0, 1, "", "MultiStep"], [57, 0, 1, "", "Nested2TED"], [58, 0, 1, "", "NonTensor"], [59, 0, 1, "", "NonTensorSpec"], [60, 0, 1, "", "OneHot"], [61, 0, 1, "", "OneHotDiscreteTensorSpec"], [62, 0, 1, "", "PairwiseDataset"], [63, 0, 1, "", "PrioritizedReplayBuffer"], [64, 0, 1, "", "PromptData"], [65, 0, 1, "", "PromptTensorDictTokenizer"], [66, 0, 1, "", "QueryModule"], [67, 0, 1, "", "RandomProjectionHash"], [68, 0, 1, "", "RayReplayBuffer"], [69, 0, 1, "", "RemoteTensorDictReplayBuffer"], [70, 0, 1, "", "ReplayBuffer"], [71, 0, 1, "", "RewardData"], [72, 0, 1, "", "RolloutFromModel"], [73, 0, 1, "", "SipHash"], [74, 0, 1, "", "Stacked"], [75, 0, 1, "", "StackedComposite"], [76, 0, 1, "", "TED2Flat"], [77, 0, 1, "", "TED2Nested"], [78, 0, 1, "", "TensorDictMap"], [79, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [80, 0, 1, "", "TensorDictReplayBuffer"], [81, 0, 1, "", "TensorDictTokenizer"], [82, 0, 1, "", "TensorMap"], [83, 0, 1, "", "TensorSpec"], [84, 0, 1, "", "TokenizedDatasetLoader"], [85, 0, 1, "", "Tree"], [86, 0, 1, "", "Unbounded"], [87, 0, 1, "", "UnboundedContinuous"], [88, 0, 1, "", "UnboundedContinuousTensorSpec"], [89, 0, 1, "", "UnboundedDiscrete"], [90, 0, 1, "", "UnboundedDiscreteTensorSpec"], [91, 0, 1, "", "check_no_exclusive_keys"], [92, 0, 1, "", "consolidate_spec"], [93, 0, 1, "", "contains_lazy_spec"], [94, 0, 1, "", "create_infinite_iterator"], [95, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[33, 1, 1, "", "update"]], "torchrl.data.Binary": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 4, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "erase_memoize_cache"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 1, 1, "", "memoize_encode"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "mtia"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_load_state_dict_pre_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_post_hook"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "set_submodule"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 2, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "set_provisional_n"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "get"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_empty"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "items"], [40, 1, 1, "", "keys"], [40, 1, 1, "", "lock_"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "pop"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "separates"], [40, 1, 1, "", "set"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unlock_"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "values"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "cardinality"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 2, 1, "", "device"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "erase_memoize_cache"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "get"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_empty"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "items"], [41, 1, 1, "", "keys"], [41, 1, 1, "", "lock_"], [41, 1, 1, "", "make_neg_dim"], [41, 1, 1, "", "memoize_encode"], [41, 2, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "pop"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "separates"], [41, 1, 1, "", "set"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unlock_"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "values"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "is_tdmodule_compatible"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "reset_out_keys"], [43, 1, 1, "", "reset_parameters_recursive"], [43, 1, 1, "", "select_out_keys"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 4, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "erase_memoize_cache"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 1, 1, "", "memoize_encode"], [44, 2, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "set_provisional_n"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "compile"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "mtia"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_load_state_dict_pre_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_post_hook"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_submodule"], [48, 1, 1, "", "share_memory"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "get"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_empty"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "items"], [49, 1, 1, "", "keys"], [49, 1, 1, "", "lock_"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "pop"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "separates"], [49, 1, 1, "", "set"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unlock_"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "values"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 2, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "erase_memoize_cache"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 1, 1, "", "memoize_encode"], [50, 2, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[51, 2, 1, "", "action_keys"], [51, 2, 1, "", "done_keys"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "get_keys_from_env"], [51, 2, 1, "", "observation_keys"], [51, 2, 1, "", "reward_keys"], [51, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_provisional_n"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "erase_memoize_cache"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 1, 1, "", "memoize_encode"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 2, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "erase_memoize_cache"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 1, 1, "", "memoize_encode"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "erase_memoize_cache"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 1, 1, "", "memoize_encode"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_categorical"], [61, 1, 1, "", "to_categorical_spec"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "to_one_hot"], [61, 1, 1, "", "to_one_hot_spec"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "update_mask"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[62, 2, 1, "", "device"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "fields"], [62, 1, 1, "", "from_dataset"], [62, 1, 1, "", "from_tensordict"], [62, 1, 1, "", "get"], [62, 1, 1, "", "load"], [62, 1, 1, "", "load_"], [62, 1, 1, "", "load_memmap"], [62, 1, 1, "", "load_state_dict"], [62, 1, 1, "", "memmap"], [62, 1, 1, "", "memmap_"], [62, 1, 1, "", "memmap_like"], [62, 1, 1, "", "memmap_refresh_"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set"], [62, 1, 1, "", "state_dict"], [62, 1, 1, "", "to_tensordict"], [62, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "next"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "close"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "next"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "next"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "next"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[71, 2, 1, "", "device"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "fields"], [71, 1, 1, "", "from_tensordict"], [71, 1, 1, "", "get"], [71, 1, 1, "", "load"], [71, 1, 1, "", "load_"], [71, 1, 1, "", "load_memmap"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "memmap"], [71, 1, 1, "", "memmap_"], [71, 1, 1, "", "memmap_like"], [71, 1, 1, "", "memmap_refresh_"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to_tensordict"], [71, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[72, 1, 1, "", "create_rollout_td"], [72, 1, 1, "", "generate"], [72, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "mtia"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_load_state_dict_pre_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_post_hook"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_submodule"], [73, 1, 1, "", "share_memory"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "erase_memoize_cache"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 1, 1, "", "memoize_encode"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 2, 1, "", "device"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "erase_memoize_cache"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "get"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_empty"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "items"], [75, 1, 1, "", "keys"], [75, 1, 1, "", "lock_"], [75, 1, 1, "", "make_neg_dim"], [75, 1, 1, "", "memoize_encode"], [75, 2, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "pop"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "separates"], [75, 1, 1, "", "set"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unlock_"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "values"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[78, 1, 1, "", "add_module"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "bfloat16"], [78, 1, 1, "", "buffers"], [78, 1, 1, "", "children"], [78, 1, 1, "", "compile"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 1, 1, "", "double"], [78, 1, 1, "", "eval"], [78, 1, 1, "", "extra_repr"], [78, 1, 1, "", "float"], [78, 1, 1, "", "forward"], [78, 1, 1, "", "from_tensordict_pair"], [78, 1, 1, "", "get_buffer"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "get_parameter"], [78, 1, 1, "", "get_submodule"], [78, 1, 1, "", "half"], [78, 1, 1, "", "ipu"], [78, 1, 1, "", "is_tdmodule_compatible"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "modules"], [78, 1, 1, "", "mtia"], [78, 1, 1, "", "named_buffers"], [78, 1, 1, "", "named_children"], [78, 1, 1, "", "named_modules"], [78, 1, 1, "", "named_parameters"], [78, 1, 1, "", "parameters"], [78, 1, 1, "", "register_backward_hook"], [78, 1, 1, "", "register_buffer"], [78, 1, 1, "", "register_forward_hook"], [78, 1, 1, "", "register_forward_pre_hook"], [78, 1, 1, "", "register_full_backward_hook"], [78, 1, 1, "", "register_full_backward_pre_hook"], [78, 1, 1, "", "register_load_state_dict_post_hook"], [78, 1, 1, "", "register_load_state_dict_pre_hook"], [78, 1, 1, "", "register_module"], [78, 1, 1, "", "register_parameter"], [78, 1, 1, "", "register_state_dict_post_hook"], [78, 1, 1, "", "register_state_dict_pre_hook"], [78, 1, 1, "", "requires_grad_"], [78, 1, 1, "", "reset_out_keys"], [78, 1, 1, "", "reset_parameters_recursive"], [78, 1, 1, "", "select_out_keys"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "set_submodule"], [78, 1, 1, "", "share_memory"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_empty"], [78, 1, 1, "", "train"], [78, 1, 1, "", "type"], [78, 1, 1, "", "xpu"], [78, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "next"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 1, 1, "", "as_remote"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "next"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 2, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 2, 1, "", "storage"], [80, 2, 1, "", "write_count"], [80, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[84, 1, 1, "", "dataset_to_tensordict"], [84, 1, 1, "", "load"]], "torchrl.data.Tree": [[85, 2, 1, "", "branching_action"], [85, 2, 1, "", "device"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "edges"], [85, 1, 1, "", "fields"], [85, 1, 1, "", "from_tensordict"], [85, 2, 1, "", "full_action_spec"], [85, 2, 1, "", "full_done_spec"], [85, 2, 1, "", "full_observation_spec"], [85, 2, 1, "", "full_reward_spec"], [85, 2, 1, "", "full_state_spec"], [85, 1, 1, "", "fully_expanded"], [85, 1, 1, "", "get"], [85, 1, 1, "", "get_vertex_by_hash"], [85, 1, 1, "", "get_vertex_by_id"], [85, 2, 1, "", "is_terminal"], [85, 1, 1, "", "load"], [85, 1, 1, "", "load_"], [85, 1, 1, "", "load_memmap"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "make_node"], [85, 1, 1, "", "max_length"], [85, 1, 1, "", "memmap"], [85, 1, 1, "", "memmap_"], [85, 1, 1, "", "memmap_like"], [85, 1, 1, "", "memmap_refresh_"], [85, 2, 1, "", "node_observation"], [85, 2, 1, "", "node_observations"], [85, 2, 1, "", "num_children"], [85, 1, 1, "", "num_vertices"], [85, 2, 1, "", "parent"], [85, 1, 1, "", "plot"], [85, 2, 1, "", "prev_action"], [85, 1, 1, "", "rollout_from_path"], [85, 1, 1, "", "save"], [85, 2, 1, "", "selected_actions"], [85, 1, 1, "", "set"], [85, 1, 1, "", "state_dict"], [85, 1, 1, "", "to_string"], [85, 1, 1, "", "to_tensordict"], [85, 1, 1, "", "unbind"], [85, 1, 1, "", "valid_paths"], [85, 1, 1, "", "vertices"], [85, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "erase_memoize_cache"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 1, 1, "", "memoize_encode"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "erase_memoize_cache"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 1, 1, "", "memoize_encode"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "erase_memoize_cache"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 1, 1, "", "memoize_encode"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.llm": [[96, 0, 1, "", "ContentBase"], [97, 0, 1, "", "History"], [98, 0, 1, "", "LLMData"]], "torchrl.data.llm.ContentBase": [[96, 2, 1, "", "device"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "fields"], [96, 1, 1, "", "from_tensordict"], [96, 1, 1, "", "get"], [96, 1, 1, "", "load"], [96, 1, 1, "", "load_"], [96, 1, 1, "", "load_memmap"], [96, 1, 1, "", "load_state_dict"], [96, 1, 1, "", "memmap"], [96, 1, 1, "", "memmap_"], [96, 1, 1, "", "memmap_like"], [96, 1, 1, "", "memmap_refresh_"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set"], [96, 1, 1, "", "state_dict"], [96, 1, 1, "", "to_tensordict"], [96, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[97, 1, 1, "", "append"], [97, 1, 1, "", "apply_chat_template"], [97, 1, 1, "", "default_spec"], [97, 2, 1, "", "device"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "fields"], [97, 1, 1, "", "from_tensordict"], [97, 1, 1, "", "get"], [97, 1, 1, "", "load"], [97, 1, 1, "", "load_"], [97, 1, 1, "", "load_memmap"], [97, 1, 1, "", "load_state_dict"], [97, 1, 1, "", "memmap"], [97, 1, 1, "", "memmap_"], [97, 1, 1, "", "memmap_like"], [97, 1, 1, "", "memmap_refresh_"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set"], [97, 1, 1, "", "state_dict"], [97, 1, 1, "", "to_tensordict"], [97, 1, 1, "", "unbind"]], "torchrl.data.llm.LLMData": [[98, 2, 1, "", "device"], [98, 1, 1, "", "dumps"], [98, 1, 1, "", "fields"], [98, 1, 1, "", "from_tensordict"], [98, 1, 1, "", "get"], [98, 1, 1, "", "load"], [98, 1, 1, "", "load_"], [98, 1, 1, "", "load_memmap"], [98, 1, 1, "", "load_state_dict"], [98, 1, 1, "", "memmap"], [98, 1, 1, "", "memmap_"], [98, 1, 1, "", "memmap_like"], [98, 1, 1, "", "memmap_refresh_"], [98, 1, 1, "", "save"], [98, 1, 1, "", "set"], [98, 1, 1, "", "state_dict"], [98, 1, 1, "", "to_tensordict"], [98, 1, 1, "", "unbind"]], "torchrl.data.replay_buffers": [[99, 0, 1, "", "FlatStorageCheckpointer"], [100, 0, 1, "", "H5StorageCheckpointer"], [101, 0, 1, "", "ImmutableDatasetWriter"], [102, 0, 1, "", "LazyMemmapStorage"], [103, 0, 1, "", "LazyStackStorage"], [104, 0, 1, "", "LazyTensorStorage"], [105, 0, 1, "", "ListStorage"], [106, 0, 1, "", "ListStorageCheckpointer"], [107, 0, 1, "", "NestedStorageCheckpointer"], [108, 0, 1, "", "PrioritizedSampler"], [109, 0, 1, "", "PrioritizedSliceSampler"], [110, 0, 1, "", "RandomSampler"], [111, 0, 1, "", "ReplayBufferEnsemble"], [112, 0, 1, "", "RoundRobinWriter"], [113, 0, 1, "", "Sampler"], [114, 0, 1, "", "SamplerEnsemble"], [115, 0, 1, "", "SamplerWithoutReplacement"], [116, 0, 1, "", "SliceSampler"], [117, 0, 1, "", "SliceSamplerWithoutReplacement"], [118, 0, 1, "", "Storage"], [119, 0, 1, "", "StorageCheckpointerBase"], [120, 0, 1, "", "StorageEnsemble"], [121, 0, 1, "", "StorageEnsembleCheckpointer"], [122, 0, 1, "", "TensorDictMaxValueWriter"], [123, 0, 1, "", "TensorDictRoundRobinWriter"], [124, 0, 1, "", "TensorStorage"], [125, 0, 1, "", "TensorStorageCheckpointer"], [126, 0, 1, "", "Writer"], [127, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[101, 1, 1, "", "add"], [101, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[102, 1, 1, "", "attach"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "load"], [102, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[104, 1, 1, "", "attach"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "load"], [104, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[105, 1, 1, "", "attach"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "load"], [105, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[108, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[109, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[111, 1, 1, "", "add"], [111, 1, 1, "", "append_transform"], [111, 1, 1, "", "as_remote"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "dumps"], [111, 1, 1, "", "empty"], [111, 1, 1, "", "extend"], [111, 1, 1, "", "insert_transform"], [111, 1, 1, "", "load"], [111, 1, 1, "", "loads"], [111, 1, 1, "", "next"], [111, 1, 1, "", "register_load_hook"], [111, 1, 1, "", "register_save_hook"], [111, 1, 1, "", "sample"], [111, 2, 1, "", "sampler"], [111, 1, 1, "", "save"], [111, 1, 1, "", "set_sampler"], [111, 1, 1, "", "set_storage"], [111, 1, 1, "", "set_writer"], [111, 2, 1, "", "storage"], [111, 2, 1, "", "write_count"], [111, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[118, 1, 1, "", "attach"], [118, 1, 1, "", "dump"], [118, 1, 1, "", "load"], [118, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[120, 1, 1, "", "attach"], [120, 1, 1, "", "dump"], [120, 1, 1, "", "load"], [120, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[122, 1, 1, "", "add"], [122, 1, 1, "", "extend"], [122, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[123, 1, 1, "", "add"], [123, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[124, 1, 1, "", "attach"], [124, 1, 1, "", "dump"], [124, 1, 1, "", "load"], [124, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[126, 1, 1, "", "add"], [126, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[127, 1, 1, "", "add"], [127, 1, 1, "", "extend"]], "torchrl.envs": [[128, 0, 1, "", "AsyncEnvPool"], [129, 3, 1, "", "BraxEnv"], [130, 3, 1, "", "BraxWrapper"], [131, 0, 1, "", "ChessEnv"], [132, 3, 1, "", "DMControlEnv"], [133, 3, 1, "", "DMControlWrapper"], [134, 0, 1, "", "EnvBase"], [135, 0, 1, "", "EnvCreator"], [136, 0, 1, "", "EnvMetaData"], [137, 3, 1, "", "GymEnv"], [138, 0, 1, "", "GymLikeEnv"], [139, 3, 1, "", "GymWrapper"], [140, 3, 1, "", "HabitatEnv"], [141, 3, 1, "", "IsaacGymEnv"], [142, 3, 1, "", "IsaacGymWrapper"], [143, 3, 1, "", "IsaacLabWrapper"], [144, 3, 1, "", "JumanjiEnv"], [145, 3, 1, "", "JumanjiWrapper"], [146, 0, 1, "", "LLMHashingEnv"], [147, 3, 1, "", "MOGymEnv"], [148, 3, 1, "", "MOGymWrapper"], [149, 3, 1, "", "MarlGroupMapType"], [150, 3, 1, "", "MeltingpotEnv"], [151, 3, 1, "", "MeltingpotWrapper"], [152, 3, 1, "", "ModelBasedEnvBase"], [153, 3, 1, "", "MultiThreadedEnv"], [154, 3, 1, "", "MultiThreadedEnvWrapper"], [155, 3, 1, "", "OpenMLEnv"], [156, 3, 1, "", "OpenSpielEnv"], [157, 3, 1, "", "OpenSpielWrapper"], [158, 0, 1, "", "ParallelEnv"], [159, 0, 1, "", "PendulumEnv"], [160, 3, 1, "", "PettingZooEnv"], [161, 3, 1, "", "PettingZooWrapper"], [162, 0, 1, "", "ProcessorAsyncEnvPool"], [163, 3, 1, "", "RandomPolicy"], [164, 3, 1, "", "RoboHiveEnv"], [165, 3, 1, "", "SMACv2Env"], [166, 3, 1, "", "SMACv2Wrapper"], [167, 0, 1, "", "SerialEnv"], [168, 0, 1, "", "ThreadingAsyncEnvPool"], [169, 0, 1, "", "TicTacToeEnv"], [170, 3, 1, "", "UnityMLAgentsEnv"], [171, 3, 1, "", "UnityMLAgentsWrapper"], [172, 3, 1, "", "VmasEnv"], [173, 3, 1, "", "VmasWrapper"], [174, 3, 1, "", "check_env_specs"], [175, 3, 1, "", "check_marl_grouping"], [176, 3, 1, "", "exploration_type"], [177, 3, 1, "", "get_available_libraries"], [178, 3, 1, "", "gym_backend"], [202, 3, 1, "", "make_composite_from_td"], [152, 1, 1, "", "rand_step"], [205, 3, 1, "", "register_gym_spec_conversion"], [152, 1, 1, "", "reset"], [152, 1, 1, "", "rollout"], [206, 3, 1, "", "set_exploration_type"], [207, 3, 1, "", "set_gym_backend"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "step"], [208, 3, 1, "", "step_mdp"], [209, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[128, 2, 1, "", "action_key"], [128, 2, 1, "", "action_keys"], [128, 2, 1, "", "action_spec"], [128, 2, 1, "", "action_spec_unbatched"], [128, 1, 1, "", "add_module"], [128, 1, 1, "", "add_truncated_keys"], [128, 1, 1, "", "all_actions"], [128, 1, 1, "", "any_done"], [128, 1, 1, "", "append_transform"], [128, 1, 1, "", "apply"], [128, 1, 1, "", "auto_specs_"], [128, 2, 1, "", "batch_dims"], [128, 2, 1, "", "batch_locked"], [128, 2, 1, "", "batch_size"], [128, 1, 1, "", "bfloat16"], [128, 1, 1, "", "buffers"], [128, 1, 1, "", "cardinality"], [128, 1, 1, "", "check_env_specs"], [128, 1, 1, "", "children"], [128, 1, 1, "", "compile"], [128, 1, 1, "", "cpu"], [128, 1, 1, "", "cuda"], [128, 2, 1, "", "done_key"], [128, 2, 1, "", "done_keys"], [128, 2, 1, "", "done_keys_groups"], [128, 2, 1, "", "done_spec"], [128, 2, 1, "", "done_spec_unbatched"], [128, 1, 1, "", "double"], [128, 1, 1, "", "empty_cache"], [128, 2, 1, "", "env_batch_sizes"], [128, 1, 1, "", "eval"], [128, 1, 1, "", "extra_repr"], [128, 1, 1, "", "fake_tensordict"], [128, 1, 1, "", "float"], [128, 1, 1, "", "forward"], [128, 2, 1, "", "full_action_spec"], [128, 2, 1, "", "full_action_spec_unbatched"], [128, 2, 1, "", "full_done_spec"], [128, 2, 1, "", "full_done_spec_unbatched"], [128, 2, 1, "", "full_observation_spec_unbatched"], [128, 2, 1, "", "full_reward_spec"], [128, 2, 1, "", "full_reward_spec_unbatched"], [128, 2, 1, "", "full_state_spec"], [128, 2, 1, "", "full_state_spec_unbatched"], [128, 1, 1, "", "get_buffer"], [128, 1, 1, "", "get_extra_state"], [128, 1, 1, "", "get_parameter"], [128, 1, 1, "", "get_submodule"], [128, 1, 1, "", "half"], [128, 2, 1, "", "input_spec"], [128, 2, 1, "", "input_spec_unbatched"], [128, 1, 1, "", "ipu"], [128, 2, 1, "", "is_spec_locked"], [128, 1, 1, "", "load_state_dict"], [128, 1, 1, "", "maybe_reset"], [128, 1, 1, "", "modules"], [128, 1, 1, "", "mtia"], [128, 1, 1, "", "named_buffers"], [128, 1, 1, "", "named_children"], [128, 1, 1, "", "named_modules"], [128, 1, 1, "", "named_parameters"], [128, 2, 1, "", "observation_keys"], [128, 2, 1, "", "observation_spec"], [128, 2, 1, "", "observation_spec_unbatched"], [128, 2, 1, "", "output_spec"], [128, 2, 1, "", "output_spec_unbatched"], [128, 1, 1, "", "parameters"], [128, 1, 1, "", "rand_action"], [128, 1, 1, "", "rand_step"], [128, 1, 1, "", "register_backward_hook"], [128, 1, 1, "", "register_buffer"], [128, 1, 1, "", "register_forward_hook"], [128, 1, 1, "", "register_forward_pre_hook"], [128, 1, 1, "", "register_full_backward_hook"], [128, 1, 1, "", "register_full_backward_pre_hook"], [128, 1, 1, "", "register_gym"], [128, 1, 1, "", "register_load_state_dict_post_hook"], [128, 1, 1, "", "register_load_state_dict_pre_hook"], [128, 1, 1, "", "register_module"], [128, 1, 1, "", "register_parameter"], [128, 1, 1, "", "register_state_dict_post_hook"], [128, 1, 1, "", "register_state_dict_pre_hook"], [128, 1, 1, "", "requires_grad_"], [128, 1, 1, "", "reset"], [128, 2, 1, "", "reset_keys"], [128, 2, 1, "", "reward_key"], [128, 2, 1, "", "reward_keys"], [128, 2, 1, "", "reward_spec"], [128, 2, 1, "", "reward_spec_unbatched"], [128, 1, 1, "", "rollout"], [128, 1, 1, "", "set_extra_state"], [128, 1, 1, "", "set_seed"], [128, 1, 1, "", "set_spec_lock_"], [128, 1, 1, "", "set_submodule"], [128, 2, 1, "", "shape"], [128, 1, 1, "", "share_memory"], [128, 2, 1, "", "specs"], [128, 1, 1, "", "state_dict"], [128, 2, 1, "", "state_keys"], [128, 2, 1, "", "state_spec"], [128, 2, 1, "", "state_spec_unbatched"], [128, 1, 1, "", "step"], [128, 1, 1, "", "step_and_maybe_reset"], [128, 1, 1, "", "step_mdp"], [128, 1, 1, "", "to"], [128, 1, 1, "", "to_empty"], [128, 1, 1, "", "train"], [128, 1, 1, "", "type"], [128, 1, 1, "", "xpu"], [128, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[131, 2, 1, "", "action_key"], [131, 2, 1, "", "action_keys"], [131, 2, 1, "", "action_spec"], [131, 2, 1, "", "action_spec_unbatched"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "all_actions"], [131, 1, 1, "", "any_done"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 1, 1, "", "auto_specs_"], [131, 2, 1, "", "batch_dims"], [131, 2, 1, "", "batch_locked"], [131, 2, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "cardinality"], [131, 1, 1, "", "check_env_specs"], [131, 1, 1, "", "children"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 2, 1, "", "done_key"], [131, 2, 1, "", "done_keys"], [131, 2, 1, "", "done_keys_groups"], [131, 2, 1, "", "done_spec"], [131, 2, 1, "", "done_spec_unbatched"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 2, 1, "", "full_action_spec"], [131, 2, 1, "", "full_action_spec_unbatched"], [131, 2, 1, "", "full_done_spec"], [131, 2, 1, "", "full_done_spec_unbatched"], [131, 2, 1, "", "full_observation_spec_unbatched"], [131, 2, 1, "", "full_reward_spec"], [131, 2, 1, "", "full_reward_spec_unbatched"], [131, 2, 1, "", "full_state_spec"], [131, 2, 1, "", "full_state_spec_unbatched"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_legal_moves"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 2, 1, "", "input_spec"], [131, 2, 1, "", "input_spec_unbatched"], [131, 1, 1, "", "ipu"], [131, 2, 1, "", "is_spec_locked"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "mtia"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 2, 1, "", "observation_keys"], [131, 2, 1, "", "observation_spec"], [131, 2, 1, "", "observation_spec_unbatched"], [131, 2, 1, "", "output_spec"], [131, 2, 1, "", "output_spec_unbatched"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_load_state_dict_pre_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_post_hook"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "", "reset"], [131, 2, 1, "", "reset_keys"], [131, 2, 1, "", "reward_key"], [131, 2, 1, "", "reward_keys"], [131, 2, 1, "", "reward_spec"], [131, 2, 1, "", "reward_spec_unbatched"], [131, 1, 1, "", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "set_spec_lock_"], [131, 1, 1, "", "set_submodule"], [131, 2, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 2, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 2, 1, "", "state_keys"], [131, 2, 1, "", "state_spec"], [131, 2, 1, "", "state_spec_unbatched"], [131, 1, 1, "", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "step_mdp"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[134, 2, 1, "", "action_key"], [134, 2, 1, "", "action_keys"], [134, 2, 1, "", "action_spec"], [134, 2, 1, "", "action_spec_unbatched"], [134, 1, 1, "", "add_module"], [134, 1, 1, "", "add_truncated_keys"], [134, 1, 1, "", "all_actions"], [134, 1, 1, "", "any_done"], [134, 1, 1, "", "append_transform"], [134, 1, 1, "", "apply"], [134, 1, 1, "", "auto_specs_"], [134, 2, 1, "", "batch_dims"], [134, 2, 1, "", "batch_locked"], [134, 2, 1, "", "batch_size"], [134, 1, 1, "", "bfloat16"], [134, 1, 1, "", "buffers"], [134, 1, 1, "", "cardinality"], [134, 1, 1, "", "check_env_specs"], [134, 1, 1, "", "children"], [134, 1, 1, "", "compile"], [134, 1, 1, "", "cpu"], [134, 1, 1, "", "cuda"], [134, 2, 1, "", "done_key"], [134, 2, 1, "", "done_keys"], [134, 2, 1, "", "done_keys_groups"], [134, 2, 1, "", "done_spec"], [134, 2, 1, "", "done_spec_unbatched"], [134, 1, 1, "", "double"], [134, 1, 1, "", "empty_cache"], [134, 1, 1, "", "eval"], [134, 1, 1, "", "extra_repr"], [134, 1, 1, "", "fake_tensordict"], [134, 1, 1, "", "float"], [134, 1, 1, "", "forward"], [134, 2, 1, "", "full_action_spec"], [134, 2, 1, "", "full_action_spec_unbatched"], [134, 2, 1, "", "full_done_spec"], [134, 2, 1, "", "full_done_spec_unbatched"], [134, 2, 1, "", "full_observation_spec_unbatched"], [134, 2, 1, "", "full_reward_spec"], [134, 2, 1, "", "full_reward_spec_unbatched"], [134, 2, 1, "", "full_state_spec"], [134, 2, 1, "", "full_state_spec_unbatched"], [134, 1, 1, "", "get_buffer"], [134, 1, 1, "", "get_extra_state"], [134, 1, 1, "", "get_parameter"], [134, 1, 1, "", "get_submodule"], [134, 1, 1, "", "half"], [134, 2, 1, "", "input_spec"], [134, 2, 1, "", "input_spec_unbatched"], [134, 1, 1, "", "ipu"], [134, 2, 1, "", "is_spec_locked"], [134, 1, 1, "", "load_state_dict"], [134, 1, 1, "", "maybe_reset"], [134, 1, 1, "", "modules"], [134, 1, 1, "", "mtia"], [134, 1, 1, "", "named_buffers"], [134, 1, 1, "", "named_children"], [134, 1, 1, "", "named_modules"], [134, 1, 1, "", "named_parameters"], [134, 2, 1, "", "observation_keys"], [134, 2, 1, "", "observation_spec"], [134, 2, 1, "", "observation_spec_unbatched"], [134, 2, 1, "", "output_spec"], [134, 2, 1, "", "output_spec_unbatched"], [134, 1, 1, "", "parameters"], [134, 1, 1, "", "rand_action"], [134, 1, 1, "id0", "rand_step"], [134, 1, 1, "", "register_backward_hook"], [134, 1, 1, "", "register_buffer"], [134, 1, 1, "", "register_forward_hook"], [134, 1, 1, "", "register_forward_pre_hook"], [134, 1, 1, "", "register_full_backward_hook"], [134, 1, 1, "", "register_full_backward_pre_hook"], [134, 1, 1, "", "register_gym"], [134, 1, 1, "", "register_load_state_dict_post_hook"], [134, 1, 1, "", "register_load_state_dict_pre_hook"], [134, 1, 1, "", "register_module"], [134, 1, 1, "", "register_parameter"], [134, 1, 1, "", "register_state_dict_post_hook"], [134, 1, 1, "", "register_state_dict_pre_hook"], [134, 1, 1, "", "requires_grad_"], [134, 1, 1, "id1", "reset"], [134, 2, 1, "", "reset_keys"], [134, 2, 1, "", "reward_key"], [134, 2, 1, "", "reward_keys"], [134, 2, 1, "", "reward_spec"], [134, 2, 1, "", "reward_spec_unbatched"], [134, 1, 1, "id2", "rollout"], [134, 1, 1, "", "set_extra_state"], [134, 1, 1, "id3", "set_seed"], [134, 1, 1, "", "set_spec_lock_"], [134, 1, 1, "", "set_submodule"], [134, 2, 1, "", "shape"], [134, 1, 1, "", "share_memory"], [134, 2, 1, "", "specs"], [134, 1, 1, "", "state_dict"], [134, 2, 1, "", "state_keys"], [134, 2, 1, "", "state_spec"], [134, 2, 1, "", "state_spec_unbatched"], [134, 1, 1, "id4", "step"], [134, 1, 1, "", "step_and_maybe_reset"], [134, 1, 1, "", "step_mdp"], [134, 1, 1, "", "to"], [134, 1, 1, "", "to_empty"], [134, 1, 1, "", "train"], [134, 1, 1, "", "type"], [134, 1, 1, "", "xpu"], [134, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[135, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[138, 2, 1, "", "action_key"], [138, 2, 1, "", "action_keys"], [138, 2, 1, "", "action_spec"], [138, 2, 1, "", "action_spec_unbatched"], [138, 1, 1, "", "add_module"], [138, 1, 1, "", "add_truncated_keys"], [138, 1, 1, "", "all_actions"], [138, 1, 1, "", "any_done"], [138, 1, 1, "", "append_transform"], [138, 1, 1, "", "apply"], [138, 1, 1, "", "auto_register_info_dict"], [138, 1, 1, "", "auto_specs_"], [138, 2, 1, "", "batch_dims"], [138, 2, 1, "", "batch_locked"], [138, 2, 1, "", "batch_size"], [138, 1, 1, "", "bfloat16"], [138, 1, 1, "", "buffers"], [138, 1, 1, "", "cardinality"], [138, 1, 1, "", "check_env_specs"], [138, 1, 1, "", "children"], [138, 1, 1, "", "close"], [138, 1, 1, "", "compile"], [138, 1, 1, "", "cpu"], [138, 1, 1, "", "cuda"], [138, 2, 1, "", "done_key"], [138, 2, 1, "", "done_keys"], [138, 2, 1, "", "done_keys_groups"], [138, 2, 1, "", "done_spec"], [138, 2, 1, "", "done_spec_unbatched"], [138, 1, 1, "", "double"], [138, 1, 1, "", "empty_cache"], [138, 1, 1, "", "eval"], [138, 1, 1, "", "extra_repr"], [138, 1, 1, "", "fake_tensordict"], [138, 1, 1, "", "fast_encoding"], [138, 1, 1, "", "float"], [138, 1, 1, "", "forward"], [138, 2, 1, "", "full_action_spec"], [138, 2, 1, "", "full_action_spec_unbatched"], [138, 2, 1, "", "full_done_spec"], [138, 2, 1, "", "full_done_spec_unbatched"], [138, 2, 1, "", "full_observation_spec_unbatched"], [138, 2, 1, "", "full_reward_spec"], [138, 2, 1, "", "full_reward_spec_unbatched"], [138, 2, 1, "", "full_state_spec"], [138, 2, 1, "", "full_state_spec_unbatched"], [138, 1, 1, "", "get_buffer"], [138, 1, 1, "", "get_extra_state"], [138, 1, 1, "", "get_parameter"], [138, 1, 1, "", "get_submodule"], [138, 1, 1, "", "half"], [138, 2, 1, "", "input_spec"], [138, 2, 1, "", "input_spec_unbatched"], [138, 1, 1, "", "ipu"], [138, 2, 1, "", "is_spec_locked"], [138, 1, 1, "", "load_state_dict"], [138, 1, 1, "", "maybe_reset"], [138, 1, 1, "", "modules"], [138, 1, 1, "", "mtia"], [138, 1, 1, "", "named_buffers"], [138, 1, 1, "", "named_children"], [138, 1, 1, "", "named_modules"], [138, 1, 1, "", "named_parameters"], [138, 2, 1, "", "observation_keys"], [138, 2, 1, "", "observation_spec"], [138, 2, 1, "", "observation_spec_unbatched"], [138, 2, 1, "", "output_spec"], [138, 2, 1, "", "output_spec_unbatched"], [138, 1, 1, "", "parameters"], [138, 1, 1, "", "rand_action"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "read_action"], [138, 1, 1, "", "read_done"], [138, 1, 1, "", "read_obs"], [138, 1, 1, "", "read_reward"], [138, 1, 1, "", "register_backward_hook"], [138, 1, 1, "", "register_buffer"], [138, 1, 1, "", "register_forward_hook"], [138, 1, 1, "", "register_forward_pre_hook"], [138, 1, 1, "", "register_full_backward_hook"], [138, 1, 1, "", "register_full_backward_pre_hook"], [138, 1, 1, "", "register_gym"], [138, 1, 1, "", "register_load_state_dict_post_hook"], [138, 1, 1, "", "register_load_state_dict_pre_hook"], [138, 1, 1, "", "register_module"], [138, 1, 1, "", "register_parameter"], [138, 1, 1, "", "register_state_dict_post_hook"], [138, 1, 1, "", "register_state_dict_pre_hook"], [138, 1, 1, "", "requires_grad_"], [138, 1, 1, "", "reset"], [138, 2, 1, "", "reset_keys"], [138, 2, 1, "", "reward_key"], [138, 2, 1, "", "reward_keys"], [138, 2, 1, "", "reward_spec"], [138, 2, 1, "", "reward_spec_unbatched"], [138, 1, 1, "", "rollout"], [138, 1, 1, "", "set_extra_state"], [138, 1, 1, "", "set_info_dict_reader"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "set_spec_lock_"], [138, 1, 1, "", "set_submodule"], [138, 2, 1, "", "shape"], [138, 1, 1, "", "share_memory"], [138, 2, 1, "", "specs"], [138, 1, 1, "", "state_dict"], [138, 2, 1, "", "state_keys"], [138, 2, 1, "", "state_spec"], [138, 2, 1, "", "state_spec_unbatched"], [138, 1, 1, "", "step"], [138, 1, 1, "", "step_and_maybe_reset"], [138, 1, 1, "", "step_mdp"], [138, 1, 1, "", "to"], [138, 1, 1, "", "to_empty"], [138, 1, 1, "", "train"], [138, 1, 1, "", "type"], [138, 1, 1, "", "xpu"], [138, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[146, 2, 1, "", "action_key"], [146, 2, 1, "", "action_keys"], [146, 2, 1, "", "action_spec"], [146, 2, 1, "", "action_spec_unbatched"], [146, 1, 1, "", "add_module"], [146, 1, 1, "", "add_truncated_keys"], [146, 1, 1, "", "all_actions"], [146, 1, 1, "", "any_done"], [146, 1, 1, "", "append_transform"], [146, 1, 1, "", "apply"], [146, 1, 1, "", "auto_specs_"], [146, 2, 1, "", "batch_dims"], [146, 2, 1, "", "batch_locked"], [146, 2, 1, "", "batch_size"], [146, 1, 1, "", "bfloat16"], [146, 1, 1, "", "buffers"], [146, 1, 1, "", "cardinality"], [146, 1, 1, "", "check_env_specs"], [146, 1, 1, "", "children"], [146, 1, 1, "", "compile"], [146, 1, 1, "", "cpu"], [146, 1, 1, "", "cuda"], [146, 2, 1, "", "done_key"], [146, 2, 1, "", "done_keys"], [146, 2, 1, "", "done_keys_groups"], [146, 2, 1, "", "done_spec"], [146, 2, 1, "", "done_spec_unbatched"], [146, 1, 1, "", "double"], [146, 1, 1, "", "empty_cache"], [146, 1, 1, "", "eval"], [146, 1, 1, "", "extra_repr"], [146, 1, 1, "", "fake_tensordict"], [146, 1, 1, "", "float"], [146, 1, 1, "", "forward"], [146, 2, 1, "", "full_action_spec"], [146, 2, 1, "", "full_action_spec_unbatched"], [146, 2, 1, "", "full_done_spec"], [146, 2, 1, "", "full_done_spec_unbatched"], [146, 2, 1, "", "full_observation_spec_unbatched"], [146, 2, 1, "", "full_reward_spec"], [146, 2, 1, "", "full_reward_spec_unbatched"], [146, 2, 1, "", "full_state_spec"], [146, 2, 1, "", "full_state_spec_unbatched"], [146, 1, 1, "", "get_buffer"], [146, 1, 1, "", "get_extra_state"], [146, 1, 1, "", "get_parameter"], [146, 1, 1, "", "get_submodule"], [146, 1, 1, "", "half"], [146, 2, 1, "", "input_spec"], [146, 2, 1, "", "input_spec_unbatched"], [146, 1, 1, "", "ipu"], [146, 2, 1, "", "is_spec_locked"], [146, 1, 1, "", "load_state_dict"], [146, 1, 1, "", "make_tensordict"], [146, 1, 1, "", "maybe_reset"], [146, 1, 1, "", "modules"], [146, 1, 1, "", "mtia"], [146, 1, 1, "", "named_buffers"], [146, 1, 1, "", "named_children"], [146, 1, 1, "", "named_modules"], [146, 1, 1, "", "named_parameters"], [146, 2, 1, "", "observation_keys"], [146, 2, 1, "", "observation_spec"], [146, 2, 1, "", "observation_spec_unbatched"], [146, 2, 1, "", "output_spec"], [146, 2, 1, "", "output_spec_unbatched"], [146, 1, 1, "", "parameters"], [146, 1, 1, "", "rand_action"], [146, 1, 1, "", "rand_step"], [146, 1, 1, "", "register_backward_hook"], [146, 1, 1, "", "register_buffer"], [146, 1, 1, "", "register_forward_hook"], [146, 1, 1, "", "register_forward_pre_hook"], [146, 1, 1, "", "register_full_backward_hook"], [146, 1, 1, "", "register_full_backward_pre_hook"], [146, 1, 1, "", "register_gym"], [146, 1, 1, "", "register_load_state_dict_post_hook"], [146, 1, 1, "", "register_load_state_dict_pre_hook"], [146, 1, 1, "", "register_module"], [146, 1, 1, "", "register_parameter"], [146, 1, 1, "", "register_state_dict_post_hook"], [146, 1, 1, "", "register_state_dict_pre_hook"], [146, 1, 1, "", "requires_grad_"], [146, 1, 1, "", "reset"], [146, 2, 1, "", "reset_keys"], [146, 2, 1, "", "reward_key"], [146, 2, 1, "", "reward_keys"], [146, 2, 1, "", "reward_spec"], [146, 2, 1, "", "reward_spec_unbatched"], [146, 1, 1, "", "rollout"], [146, 1, 1, "", "set_extra_state"], [146, 1, 1, "", "set_seed"], [146, 1, 1, "", "set_spec_lock_"], [146, 1, 1, "", "set_submodule"], [146, 2, 1, "", "shape"], [146, 1, 1, "", "share_memory"], [146, 2, 1, "", "specs"], [146, 1, 1, "", "state_dict"], [146, 2, 1, "", "state_keys"], [146, 2, 1, "", "state_spec"], [146, 2, 1, "", "state_spec_unbatched"], [146, 1, 1, "", "step"], [146, 1, 1, "", "step_and_maybe_reset"], [146, 1, 1, "", "step_mdp"], [146, 1, 1, "", "to"], [146, 1, 1, "", "to_empty"], [146, 1, 1, "", "train"], [146, 1, 1, "", "type"], [146, 1, 1, "", "xpu"], [146, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_locked"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "update_kwargs"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "gen_params"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[162, 1, 1, "", "_setup"], [162, 2, 1, "", "action_key"], [162, 2, 1, "", "action_keys"], [162, 2, 1, "", "action_spec"], [162, 2, 1, "", "action_spec_unbatched"], [162, 1, 1, "", "add_module"], [162, 1, 1, "", "add_truncated_keys"], [162, 1, 1, "", "all_actions"], [162, 1, 1, "", "any_done"], [162, 1, 1, "", "append_transform"], [162, 1, 1, "", "apply"], [162, 1, 1, "", "async_reset_recv"], [162, 1, 1, "", "async_reset_send"], [162, 1, 1, "", "async_step_recv"], [162, 1, 1, "", "async_step_send"], [162, 1, 1, "", "auto_specs_"], [162, 2, 1, "", "batch_dims"], [162, 2, 1, "", "batch_locked"], [162, 2, 1, "", "batch_size"], [162, 1, 1, "", "bfloat16"], [162, 1, 1, "", "buffers"], [162, 1, 1, "", "cardinality"], [162, 1, 1, "", "check_env_specs"], [162, 1, 1, "", "children"], [162, 1, 1, "", "compile"], [162, 1, 1, "", "cpu"], [162, 1, 1, "", "cuda"], [162, 2, 1, "", "done_key"], [162, 2, 1, "", "done_keys"], [162, 2, 1, "", "done_keys_groups"], [162, 2, 1, "", "done_spec"], [162, 2, 1, "", "done_spec_unbatched"], [162, 1, 1, "", "double"], [162, 1, 1, "", "empty_cache"], [162, 2, 1, "", "env_batch_sizes"], [162, 1, 1, "", "eval"], [162, 1, 1, "", "extra_repr"], [162, 1, 1, "", "fake_tensordict"], [162, 1, 1, "", "float"], [162, 1, 1, "", "forward"], [162, 2, 1, "", "full_action_spec"], [162, 2, 1, "", "full_action_spec_unbatched"], [162, 2, 1, "", "full_done_spec"], [162, 2, 1, "", "full_done_spec_unbatched"], [162, 2, 1, "", "full_observation_spec_unbatched"], [162, 2, 1, "", "full_reward_spec"], [162, 2, 1, "", "full_reward_spec_unbatched"], [162, 2, 1, "", "full_state_spec"], [162, 2, 1, "", "full_state_spec_unbatched"], [162, 1, 1, "", "get_buffer"], [162, 1, 1, "", "get_extra_state"], [162, 1, 1, "", "get_parameter"], [162, 1, 1, "", "get_submodule"], [162, 1, 1, "", "half"], [162, 2, 1, "", "input_spec"], [162, 2, 1, "", "input_spec_unbatched"], [162, 1, 1, "", "ipu"], [162, 2, 1, "", "is_spec_locked"], [162, 1, 1, "", "load_state_dict"], [162, 1, 1, "", "maybe_reset"], [162, 1, 1, "", "modules"], [162, 1, 1, "", "mtia"], [162, 1, 1, "", "named_buffers"], [162, 1, 1, "", "named_children"], [162, 1, 1, "", "named_modules"], [162, 1, 1, "", "named_parameters"], [162, 2, 1, "", "observation_keys"], [162, 2, 1, "", "observation_spec"], [162, 2, 1, "", "observation_spec_unbatched"], [162, 2, 1, "", "output_spec"], [162, 2, 1, "", "output_spec_unbatched"], [162, 1, 1, "", "parameters"], [162, 1, 1, "", "rand_action"], [162, 1, 1, "", "rand_step"], [162, 1, 1, "", "register_backward_hook"], [162, 1, 1, "", "register_buffer"], [162, 1, 1, "", "register_forward_hook"], [162, 1, 1, "", "register_forward_pre_hook"], [162, 1, 1, "", "register_full_backward_hook"], [162, 1, 1, "", "register_full_backward_pre_hook"], [162, 1, 1, "", "register_gym"], [162, 1, 1, "", "register_load_state_dict_post_hook"], [162, 1, 1, "", "register_load_state_dict_pre_hook"], [162, 1, 1, "", "register_module"], [162, 1, 1, "", "register_parameter"], [162, 1, 1, "", "register_state_dict_post_hook"], [162, 1, 1, "", "register_state_dict_pre_hook"], [162, 1, 1, "", "requires_grad_"], [162, 1, 1, "", "reset"], [162, 2, 1, "", "reset_keys"], [162, 2, 1, "", "reward_key"], [162, 2, 1, "", "reward_keys"], [162, 2, 1, "", "reward_spec"], [162, 2, 1, "", "reward_spec_unbatched"], [162, 1, 1, "", "rollout"], [162, 1, 1, "", "set_extra_state"], [162, 1, 1, "", "set_seed"], [162, 1, 1, "", "set_spec_lock_"], [162, 1, 1, "", "set_submodule"], [162, 2, 1, "", "shape"], [162, 1, 1, "", "share_memory"], [162, 1, 1, "", "shutdown"], [162, 2, 1, "", "specs"], [162, 1, 1, "", "state_dict"], [162, 2, 1, "", "state_keys"], [162, 2, 1, "", "state_spec"], [162, 2, 1, "", "state_spec_unbatched"], [162, 1, 1, "", "step"], [162, 1, 1, "", "step_and_maybe_reset"], [162, 1, 1, "", "step_mdp"], [162, 1, 1, "", "to"], [162, 1, 1, "", "to_empty"], [162, 1, 1, "", "train"], [162, 1, 1, "", "type"], [162, 1, 1, "", "xpu"], [162, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[167, 2, 1, "", "action_key"], [167, 2, 1, "", "action_keys"], [167, 2, 1, "", "action_spec"], [167, 2, 1, "", "action_spec_unbatched"], [167, 1, 1, "", "add_module"], [167, 1, 1, "", "add_truncated_keys"], [167, 1, 1, "", "all_actions"], [167, 1, 1, "", "any_done"], [167, 1, 1, "", "append_transform"], [167, 1, 1, "", "apply"], [167, 1, 1, "", "auto_specs_"], [167, 2, 1, "", "batch_dims"], [167, 2, 1, "", "batch_locked"], [167, 2, 1, "", "batch_size"], [167, 1, 1, "", "bfloat16"], [167, 1, 1, "", "buffers"], [167, 1, 1, "", "cardinality"], [167, 1, 1, "", "check_env_specs"], [167, 1, 1, "", "children"], [167, 1, 1, "", "compile"], [167, 1, 1, "", "cpu"], [167, 1, 1, "", "cuda"], [167, 2, 1, "", "done_key"], [167, 2, 1, "", "done_keys"], [167, 2, 1, "", "done_keys_groups"], [167, 2, 1, "", "done_spec"], [167, 2, 1, "", "done_spec_unbatched"], [167, 1, 1, "", "double"], [167, 1, 1, "", "empty_cache"], [167, 1, 1, "", "eval"], [167, 1, 1, "", "extra_repr"], [167, 1, 1, "", "fake_tensordict"], [167, 1, 1, "", "float"], [167, 1, 1, "", "forward"], [167, 2, 1, "", "full_action_spec"], [167, 2, 1, "", "full_action_spec_unbatched"], [167, 2, 1, "", "full_done_spec"], [167, 2, 1, "", "full_done_spec_unbatched"], [167, 2, 1, "", "full_observation_spec_unbatched"], [167, 2, 1, "", "full_reward_spec"], [167, 2, 1, "", "full_reward_spec_unbatched"], [167, 2, 1, "", "full_state_spec"], [167, 2, 1, "", "full_state_spec_unbatched"], [167, 1, 1, "", "get_buffer"], [167, 1, 1, "", "get_extra_state"], [167, 1, 1, "", "get_parameter"], [167, 1, 1, "", "get_submodule"], [167, 1, 1, "", "half"], [167, 2, 1, "", "input_spec"], [167, 2, 1, "", "input_spec_unbatched"], [167, 1, 1, "", "ipu"], [167, 2, 1, "", "is_spec_locked"], [167, 1, 1, "", "load_state_dict"], [167, 1, 1, "", "maybe_reset"], [167, 1, 1, "", "modules"], [167, 1, 1, "", "mtia"], [167, 1, 1, "", "named_buffers"], [167, 1, 1, "", "named_children"], [167, 1, 1, "", "named_modules"], [167, 1, 1, "", "named_parameters"], [167, 2, 1, "", "observation_keys"], [167, 2, 1, "", "observation_spec"], [167, 2, 1, "", "observation_spec_unbatched"], [167, 2, 1, "", "output_spec"], [167, 2, 1, "", "output_spec_unbatched"], [167, 1, 1, "", "parameters"], [167, 1, 1, "", "rand_action"], [167, 1, 1, "", "rand_step"], [167, 1, 1, "", "register_backward_hook"], [167, 1, 1, "", "register_buffer"], [167, 1, 1, "", "register_forward_hook"], [167, 1, 1, "", "register_forward_pre_hook"], [167, 1, 1, "", "register_full_backward_hook"], [167, 1, 1, "", "register_full_backward_pre_hook"], [167, 1, 1, "", "register_gym"], [167, 1, 1, "", "register_load_state_dict_post_hook"], [167, 1, 1, "", "register_load_state_dict_pre_hook"], [167, 1, 1, "", "register_module"], [167, 1, 1, "", "register_parameter"], [167, 1, 1, "", "register_state_dict_post_hook"], [167, 1, 1, "", "register_state_dict_pre_hook"], [167, 1, 1, "", "requires_grad_"], [167, 1, 1, "", "reset"], [167, 2, 1, "", "reset_keys"], [167, 2, 1, "", "reward_key"], [167, 2, 1, "", "reward_keys"], [167, 2, 1, "", "reward_spec"], [167, 2, 1, "", "reward_spec_unbatched"], [167, 1, 1, "", "rollout"], [167, 1, 1, "", "set_extra_state"], [167, 1, 1, "", "set_seed"], [167, 1, 1, "", "set_spec_lock_"], [167, 1, 1, "", "set_submodule"], [167, 2, 1, "", "shape"], [167, 1, 1, "", "share_memory"], [167, 2, 1, "", "specs"], [167, 1, 1, "", "state_dict"], [167, 2, 1, "", "state_keys"], [167, 2, 1, "", "state_spec"], [167, 2, 1, "", "state_spec_unbatched"], [167, 1, 1, "", "step"], [167, 1, 1, "", "step_and_maybe_reset"], [167, 1, 1, "", "step_mdp"], [167, 1, 1, "", "to"], [167, 1, 1, "", "to_empty"], [167, 1, 1, "", "train"], [167, 1, 1, "", "type"], [167, 1, 1, "", "update_kwargs"], [167, 1, 1, "", "xpu"], [167, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[168, 1, 1, "", "_setup"], [168, 2, 1, "", "action_key"], [168, 2, 1, "", "action_keys"], [168, 2, 1, "", "action_spec"], [168, 2, 1, "", "action_spec_unbatched"], [168, 1, 1, "", "add_module"], [168, 1, 1, "", "add_truncated_keys"], [168, 1, 1, "", "all_actions"], [168, 1, 1, "", "any_done"], [168, 1, 1, "", "append_transform"], [168, 1, 1, "", "apply"], [168, 1, 1, "", "async_reset_recv"], [168, 1, 1, "", "async_reset_send"], [168, 1, 1, "", "async_step_recv"], [168, 1, 1, "", "async_step_send"], [168, 1, 1, "", "auto_specs_"], [168, 2, 1, "", "batch_dims"], [168, 2, 1, "", "batch_locked"], [168, 2, 1, "", "batch_size"], [168, 1, 1, "", "bfloat16"], [168, 1, 1, "", "buffers"], [168, 1, 1, "", "cardinality"], [168, 1, 1, "", "check_env_specs"], [168, 1, 1, "", "children"], [168, 1, 1, "", "compile"], [168, 1, 1, "", "cpu"], [168, 1, 1, "", "cuda"], [168, 2, 1, "", "done_key"], [168, 2, 1, "", "done_keys"], [168, 2, 1, "", "done_keys_groups"], [168, 2, 1, "", "done_spec"], [168, 2, 1, "", "done_spec_unbatched"], [168, 1, 1, "", "double"], [168, 1, 1, "", "empty_cache"], [168, 2, 1, "", "env_batch_sizes"], [168, 1, 1, "", "eval"], [168, 1, 1, "", "extra_repr"], [168, 1, 1, "", "fake_tensordict"], [168, 1, 1, "", "float"], [168, 1, 1, "", "forward"], [168, 2, 1, "", "full_action_spec"], [168, 2, 1, "", "full_action_spec_unbatched"], [168, 2, 1, "", "full_done_spec"], [168, 2, 1, "", "full_done_spec_unbatched"], [168, 2, 1, "", "full_observation_spec_unbatched"], [168, 2, 1, "", "full_reward_spec"], [168, 2, 1, "", "full_reward_spec_unbatched"], [168, 2, 1, "", "full_state_spec"], [168, 2, 1, "", "full_state_spec_unbatched"], [168, 1, 1, "", "get_buffer"], [168, 1, 1, "", "get_extra_state"], [168, 1, 1, "", "get_parameter"], [168, 1, 1, "", "get_submodule"], [168, 1, 1, "", "half"], [168, 2, 1, "", "input_spec"], [168, 2, 1, "", "input_spec_unbatched"], [168, 1, 1, "", "ipu"], [168, 2, 1, "", "is_spec_locked"], [168, 1, 1, "", "load_state_dict"], [168, 1, 1, "", "maybe_reset"], [168, 1, 1, "", "modules"], [168, 1, 1, "", "mtia"], [168, 1, 1, "", "named_buffers"], [168, 1, 1, "", "named_children"], [168, 1, 1, "", "named_modules"], [168, 1, 1, "", "named_parameters"], [168, 2, 1, "", "observation_keys"], [168, 2, 1, "", "observation_spec"], [168, 2, 1, "", "observation_spec_unbatched"], [168, 2, 1, "", "output_spec"], [168, 2, 1, "", "output_spec_unbatched"], [168, 1, 1, "", "parameters"], [168, 1, 1, "", "rand_action"], [168, 1, 1, "", "rand_step"], [168, 1, 1, "", "register_backward_hook"], [168, 1, 1, "", "register_buffer"], [168, 1, 1, "", "register_forward_hook"], [168, 1, 1, "", "register_forward_pre_hook"], [168, 1, 1, "", "register_full_backward_hook"], [168, 1, 1, "", "register_full_backward_pre_hook"], [168, 1, 1, "", "register_gym"], [168, 1, 1, "", "register_load_state_dict_post_hook"], [168, 1, 1, "", "register_load_state_dict_pre_hook"], [168, 1, 1, "", "register_module"], [168, 1, 1, "", "register_parameter"], [168, 1, 1, "", "register_state_dict_post_hook"], [168, 1, 1, "", "register_state_dict_pre_hook"], [168, 1, 1, "", "requires_grad_"], [168, 1, 1, "", "reset"], [168, 2, 1, "", "reset_keys"], [168, 2, 1, "", "reward_key"], [168, 2, 1, "", "reward_keys"], [168, 2, 1, "", "reward_spec"], [168, 2, 1, "", "reward_spec_unbatched"], [168, 1, 1, "", "rollout"], [168, 1, 1, "", "set_extra_state"], [168, 1, 1, "", "set_seed"], [168, 1, 1, "", "set_spec_lock_"], [168, 1, 1, "", "set_submodule"], [168, 2, 1, "", "shape"], [168, 1, 1, "", "share_memory"], [168, 1, 1, "", "shutdown"], [168, 2, 1, "", "specs"], [168, 1, 1, "", "state_dict"], [168, 2, 1, "", "state_keys"], [168, 2, 1, "", "state_spec"], [168, 2, 1, "", "state_spec_unbatched"], [168, 1, 1, "", "step"], [168, 1, 1, "", "step_and_maybe_reset"], [168, 1, 1, "", "step_mdp"], [168, 1, 1, "", "to"], [168, 1, 1, "", "to_empty"], [168, 1, 1, "", "train"], [168, 1, 1, "", "type"], [168, 1, 1, "", "xpu"], [168, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[169, 2, 1, "", "action_key"], [169, 2, 1, "", "action_keys"], [169, 2, 1, "", "action_spec"], [169, 2, 1, "", "action_spec_unbatched"], [169, 1, 1, "", "add_module"], [169, 1, 1, "", "add_truncated_keys"], [169, 1, 1, "", "all_actions"], [169, 1, 1, "", "any_done"], [169, 1, 1, "", "append_transform"], [169, 1, 1, "", "apply"], [169, 1, 1, "", "auto_specs_"], [169, 2, 1, "", "batch_dims"], [169, 2, 1, "", "batch_size"], [169, 1, 1, "", "bfloat16"], [169, 1, 1, "", "buffers"], [169, 1, 1, "", "cardinality"], [169, 1, 1, "", "check_env_specs"], [169, 1, 1, "", "children"], [169, 1, 1, "", "compile"], [169, 1, 1, "", "cpu"], [169, 1, 1, "", "cuda"], [169, 2, 1, "", "done_key"], [169, 2, 1, "", "done_keys"], [169, 2, 1, "", "done_keys_groups"], [169, 2, 1, "", "done_spec"], [169, 2, 1, "", "done_spec_unbatched"], [169, 1, 1, "", "double"], [169, 1, 1, "", "empty_cache"], [169, 1, 1, "", "eval"], [169, 1, 1, "", "extra_repr"], [169, 1, 1, "", "fake_tensordict"], [169, 1, 1, "", "float"], [169, 1, 1, "", "forward"], [169, 2, 1, "", "full_action_spec"], [169, 2, 1, "", "full_action_spec_unbatched"], [169, 2, 1, "", "full_done_spec"], [169, 2, 1, "", "full_done_spec_unbatched"], [169, 2, 1, "", "full_observation_spec_unbatched"], [169, 2, 1, "", "full_reward_spec"], [169, 2, 1, "", "full_reward_spec_unbatched"], [169, 2, 1, "", "full_state_spec"], [169, 2, 1, "", "full_state_spec_unbatched"], [169, 1, 1, "", "get_buffer"], [169, 1, 1, "", "get_extra_state"], [169, 1, 1, "", "get_parameter"], [169, 1, 1, "", "get_submodule"], [169, 1, 1, "", "half"], [169, 2, 1, "", "input_spec"], [169, 2, 1, "", "input_spec_unbatched"], [169, 1, 1, "", "ipu"], [169, 2, 1, "", "is_spec_locked"], [169, 1, 1, "", "load_state_dict"], [169, 1, 1, "", "maybe_reset"], [169, 1, 1, "", "modules"], [169, 1, 1, "", "mtia"], [169, 1, 1, "", "named_buffers"], [169, 1, 1, "", "named_children"], [169, 1, 1, "", "named_modules"], [169, 1, 1, "", "named_parameters"], [169, 2, 1, "", "observation_keys"], [169, 2, 1, "", "observation_spec"], [169, 2, 1, "", "observation_spec_unbatched"], [169, 2, 1, "", "output_spec"], [169, 2, 1, "", "output_spec_unbatched"], [169, 1, 1, "", "parameters"], [169, 1, 1, "", "rand_action"], [169, 1, 1, "", "rand_step"], [169, 1, 1, "", "register_backward_hook"], [169, 1, 1, "", "register_buffer"], [169, 1, 1, "", "register_forward_hook"], [169, 1, 1, "", "register_forward_pre_hook"], [169, 1, 1, "", "register_full_backward_hook"], [169, 1, 1, "", "register_full_backward_pre_hook"], [169, 1, 1, "", "register_gym"], [169, 1, 1, "", "register_load_state_dict_post_hook"], [169, 1, 1, "", "register_load_state_dict_pre_hook"], [169, 1, 1, "", "register_module"], [169, 1, 1, "", "register_parameter"], [169, 1, 1, "", "register_state_dict_post_hook"], [169, 1, 1, "", "register_state_dict_pre_hook"], [169, 1, 1, "", "requires_grad_"], [169, 1, 1, "", "reset"], [169, 2, 1, "", "reset_keys"], [169, 2, 1, "", "reward_key"], [169, 2, 1, "", "reward_keys"], [169, 2, 1, "", "reward_spec"], [169, 2, 1, "", "reward_spec_unbatched"], [169, 1, 1, "", "rollout"], [169, 1, 1, "", "set_extra_state"], [169, 1, 1, "", "set_seed"], [169, 1, 1, "", "set_spec_lock_"], [169, 1, 1, "", "set_submodule"], [169, 2, 1, "", "shape"], [169, 1, 1, "", "share_memory"], [169, 2, 1, "", "specs"], [169, 1, 1, "", "state_dict"], [169, 2, 1, "", "state_keys"], [169, 2, 1, "", "state_spec"], [169, 2, 1, "", "state_spec_unbatched"], [169, 1, 1, "", "step"], [169, 1, 1, "", "step_and_maybe_reset"], [169, 1, 1, "", "step_mdp"], [169, 1, 1, "", "to"], [169, 1, 1, "", "to_empty"], [169, 1, 1, "", "train"], [169, 1, 1, "", "type"], [169, 1, 1, "", "xpu"], [169, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[179, 0, 1, "", "ChatEnv"], [180, 0, 1, "", "DatasetChatEnv"], [181, 0, 1, "", "GSM8KEnv"], [182, 0, 1, "", "GSM8KPrepareQuestion"], [183, 0, 1, "", "GSM8KRewardParser"], [184, 0, 1, "", "IFEvalEnv"], [185, 0, 1, "", "IFEvalScoreData"], [186, 0, 1, "", "IfEvalScorer"], [187, 0, 1, "", "LLMEnv"], [188, 0, 1, "", "LLMHashingEnv"], [189, 0, 1, "", "MLGymWrapper"], [190, 0, 1, "", "make_gsm8k_env"], [191, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[179, 2, 1, "", "action_key"], [179, 2, 1, "", "action_keys"], [179, 2, 1, "", "action_spec"], [179, 2, 1, "", "action_spec_unbatched"], [179, 1, 1, "", "add_module"], [179, 1, 1, "", "add_truncated_keys"], [179, 1, 1, "", "all_actions"], [179, 1, 1, "", "any_done"], [179, 1, 1, "", "append_transform"], [179, 1, 1, "", "apply"], [179, 1, 1, "", "auto_specs_"], [179, 2, 1, "", "batch_dims"], [179, 2, 1, "", "batch_locked"], [179, 2, 1, "", "batch_size"], [179, 1, 1, "", "bfloat16"], [179, 1, 1, "", "buffers"], [179, 1, 1, "", "cardinality"], [179, 1, 1, "", "check_env_specs"], [179, 1, 1, "", "children"], [179, 1, 1, "", "compile"], [179, 1, 1, "", "cpu"], [179, 1, 1, "", "cuda"], [179, 2, 1, "", "done_key"], [179, 2, 1, "", "done_keys"], [179, 2, 1, "", "done_keys_groups"], [179, 2, 1, "", "done_spec"], [179, 2, 1, "", "done_spec_unbatched"], [179, 1, 1, "", "double"], [179, 1, 1, "", "empty_cache"], [179, 1, 1, "", "eval"], [179, 1, 1, "", "extra_repr"], [179, 1, 1, "", "fake_tensordict"], [179, 1, 1, "", "float"], [179, 1, 1, "", "forward"], [179, 2, 1, "", "full_action_spec"], [179, 2, 1, "", "full_action_spec_unbatched"], [179, 2, 1, "", "full_done_spec"], [179, 2, 1, "", "full_done_spec_unbatched"], [179, 2, 1, "", "full_observation_spec_unbatched"], [179, 2, 1, "", "full_reward_spec"], [179, 2, 1, "", "full_reward_spec_unbatched"], [179, 2, 1, "", "full_state_spec"], [179, 2, 1, "", "full_state_spec_unbatched"], [179, 1, 1, "", "get_buffer"], [179, 1, 1, "", "get_extra_state"], [179, 1, 1, "", "get_parameter"], [179, 1, 1, "", "get_submodule"], [179, 1, 1, "", "half"], [179, 2, 1, "", "input_spec"], [179, 2, 1, "", "input_spec_unbatched"], [179, 1, 1, "", "ipu"], [179, 2, 1, "", "is_spec_locked"], [179, 1, 1, "", "load_state_dict"], [179, 1, 1, "", "maybe_reset"], [179, 1, 1, "", "modules"], [179, 1, 1, "", "mtia"], [179, 1, 1, "", "named_buffers"], [179, 1, 1, "", "named_children"], [179, 1, 1, "", "named_modules"], [179, 1, 1, "", "named_parameters"], [179, 2, 1, "", "observation_keys"], [179, 2, 1, "", "observation_spec"], [179, 2, 1, "", "observation_spec_unbatched"], [179, 2, 1, "", "output_spec"], [179, 2, 1, "", "output_spec_unbatched"], [179, 1, 1, "", "parameters"], [179, 1, 1, "", "rand_action"], [179, 1, 1, "", "rand_step"], [179, 1, 1, "", "register_backward_hook"], [179, 1, 1, "", "register_buffer"], [179, 1, 1, "", "register_forward_hook"], [179, 1, 1, "", "register_forward_pre_hook"], [179, 1, 1, "", "register_full_backward_hook"], [179, 1, 1, "", "register_full_backward_pre_hook"], [179, 1, 1, "", "register_gym"], [179, 1, 1, "", "register_load_state_dict_post_hook"], [179, 1, 1, "", "register_load_state_dict_pre_hook"], [179, 1, 1, "", "register_module"], [179, 1, 1, "", "register_parameter"], [179, 1, 1, "", "register_state_dict_post_hook"], [179, 1, 1, "", "register_state_dict_pre_hook"], [179, 1, 1, "", "requires_grad_"], [179, 1, 1, "id0", "reset"], [179, 2, 1, "", "reset_keys"], [179, 2, 1, "", "reward_key"], [179, 2, 1, "", "reward_keys"], [179, 2, 1, "", "reward_spec"], [179, 2, 1, "", "reward_spec_unbatched"], [179, 1, 1, "", "rollout"], [179, 1, 1, "", "set_extra_state"], [179, 1, 1, "", "set_seed"], [179, 1, 1, "", "set_spec_lock_"], [179, 1, 1, "", "set_submodule"], [179, 2, 1, "", "shape"], [179, 1, 1, "", "share_memory"], [179, 2, 1, "", "specs"], [179, 1, 1, "", "state_dict"], [179, 2, 1, "", "state_keys"], [179, 2, 1, "", "state_spec"], [179, 2, 1, "", "state_spec_unbatched"], [179, 1, 1, "id1", "step"], [179, 1, 1, "", "step_and_maybe_reset"], [179, 1, 1, "", "step_mdp"], [179, 1, 1, "", "to"], [179, 1, 1, "", "to_empty"], [179, 1, 1, "", "train"], [179, 1, 1, "", "type"], [179, 1, 1, "", "xpu"], [179, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[180, 2, 1, "", "action_key"], [180, 2, 1, "", "action_keys"], [180, 2, 1, "", "action_spec"], [180, 2, 1, "", "action_spec_unbatched"], [180, 1, 1, "", "add_module"], [180, 1, 1, "", "add_truncated_keys"], [180, 1, 1, "", "all_actions"], [180, 1, 1, "", "any_done"], [180, 1, 1, "", "append_transform"], [180, 1, 1, "", "apply"], [180, 1, 1, "", "auto_specs_"], [180, 2, 1, "", "batch_dims"], [180, 2, 1, "", "batch_locked"], [180, 2, 1, "", "batch_size"], [180, 1, 1, "", "bfloat16"], [180, 1, 1, "", "buffers"], [180, 1, 1, "", "cardinality"], [180, 1, 1, "", "check_env_specs"], [180, 1, 1, "", "children"], [180, 1, 1, "", "compile"], [180, 1, 1, "", "cpu"], [180, 1, 1, "", "cuda"], [180, 2, 1, "", "done_key"], [180, 2, 1, "", "done_keys"], [180, 2, 1, "", "done_keys_groups"], [180, 2, 1, "", "done_spec"], [180, 2, 1, "", "done_spec_unbatched"], [180, 1, 1, "", "double"], [180, 1, 1, "", "empty_cache"], [180, 1, 1, "", "eval"], [180, 1, 1, "", "extra_repr"], [180, 1, 1, "", "fake_tensordict"], [180, 1, 1, "", "float"], [180, 1, 1, "", "forward"], [180, 2, 1, "", "full_action_spec"], [180, 2, 1, "", "full_action_spec_unbatched"], [180, 2, 1, "", "full_done_spec"], [180, 2, 1, "", "full_done_spec_unbatched"], [180, 2, 1, "", "full_observation_spec_unbatched"], [180, 2, 1, "", "full_reward_spec"], [180, 2, 1, "", "full_reward_spec_unbatched"], [180, 2, 1, "", "full_state_spec"], [180, 2, 1, "", "full_state_spec_unbatched"], [180, 1, 1, "", "get_buffer"], [180, 1, 1, "", "get_extra_state"], [180, 1, 1, "", "get_parameter"], [180, 1, 1, "", "get_submodule"], [180, 1, 1, "", "half"], [180, 2, 1, "", "input_spec"], [180, 2, 1, "", "input_spec_unbatched"], [180, 1, 1, "", "insert_transform"], [180, 1, 1, "", "ipu"], [180, 2, 1, "", "is_spec_locked"], [180, 1, 1, "", "load_state_dict"], [180, 1, 1, "", "maybe_reset"], [180, 1, 1, "", "modules"], [180, 1, 1, "", "mtia"], [180, 1, 1, "", "named_buffers"], [180, 1, 1, "", "named_children"], [180, 1, 1, "", "named_modules"], [180, 1, 1, "", "named_parameters"], [180, 2, 1, "", "observation_keys"], [180, 2, 1, "", "observation_spec"], [180, 2, 1, "", "observation_spec_unbatched"], [180, 2, 1, "", "output_spec"], [180, 2, 1, "", "output_spec_unbatched"], [180, 1, 1, "", "parameters"], [180, 1, 1, "", "rand_action"], [180, 1, 1, "", "rand_step"], [180, 1, 1, "", "register_backward_hook"], [180, 1, 1, "", "register_buffer"], [180, 1, 1, "", "register_forward_hook"], [180, 1, 1, "", "register_forward_pre_hook"], [180, 1, 1, "", "register_full_backward_hook"], [180, 1, 1, "", "register_full_backward_pre_hook"], [180, 1, 1, "", "register_gym"], [180, 1, 1, "", "register_load_state_dict_post_hook"], [180, 1, 1, "", "register_load_state_dict_pre_hook"], [180, 1, 1, "", "register_module"], [180, 1, 1, "", "register_parameter"], [180, 1, 1, "", "register_state_dict_post_hook"], [180, 1, 1, "", "register_state_dict_pre_hook"], [180, 1, 1, "", "requires_grad_"], [180, 1, 1, "", "reset"], [180, 2, 1, "", "reset_keys"], [180, 2, 1, "", "reward_key"], [180, 2, 1, "", "reward_keys"], [180, 2, 1, "", "reward_spec"], [180, 2, 1, "", "reward_spec_unbatched"], [180, 1, 1, "", "rollout"], [180, 1, 1, "", "set_extra_state"], [180, 1, 1, "", "set_missing_tolerance"], [180, 1, 1, "", "set_seed"], [180, 1, 1, "", "set_spec_lock_"], [180, 1, 1, "", "set_submodule"], [180, 2, 1, "", "shape"], [180, 1, 1, "", "share_memory"], [180, 2, 1, "", "specs"], [180, 1, 1, "", "state_dict"], [180, 2, 1, "", "state_keys"], [180, 2, 1, "", "state_spec"], [180, 2, 1, "", "state_spec_unbatched"], [180, 1, 1, "", "step"], [180, 1, 1, "", "step_and_maybe_reset"], [180, 1, 1, "", "step_mdp"], [180, 1, 1, "", "to"], [180, 1, 1, "", "to_empty"], [180, 1, 1, "", "train"], [180, 1, 1, "", "type"], [180, 1, 1, "", "xpu"], [180, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[181, 2, 1, "", "action_key"], [181, 2, 1, "", "action_keys"], [181, 2, 1, "", "action_spec"], [181, 2, 1, "", "action_spec_unbatched"], [181, 1, 1, "", "add_module"], [181, 1, 1, "", "add_truncated_keys"], [181, 1, 1, "", "all_actions"], [181, 1, 1, "", "any_done"], [181, 1, 1, "", "append_transform"], [181, 1, 1, "", "apply"], [181, 1, 1, "", "auto_specs_"], [181, 2, 1, "", "batch_dims"], [181, 2, 1, "", "batch_locked"], [181, 2, 1, "", "batch_size"], [181, 1, 1, "", "bfloat16"], [181, 1, 1, "", "buffers"], [181, 1, 1, "", "cardinality"], [181, 1, 1, "", "check_env_specs"], [181, 1, 1, "", "children"], [181, 1, 1, "", "compile"], [181, 1, 1, "", "cpu"], [181, 1, 1, "", "cuda"], [181, 2, 1, "", "done_key"], [181, 2, 1, "", "done_keys"], [181, 2, 1, "", "done_keys_groups"], [181, 2, 1, "", "done_spec"], [181, 2, 1, "", "done_spec_unbatched"], [181, 1, 1, "", "double"], [181, 1, 1, "", "empty_cache"], [181, 1, 1, "", "eval"], [181, 1, 1, "", "extra_repr"], [181, 1, 1, "", "fake_tensordict"], [181, 1, 1, "", "float"], [181, 1, 1, "", "forward"], [181, 2, 1, "", "full_action_spec"], [181, 2, 1, "", "full_action_spec_unbatched"], [181, 2, 1, "", "full_done_spec"], [181, 2, 1, "", "full_done_spec_unbatched"], [181, 2, 1, "", "full_observation_spec_unbatched"], [181, 2, 1, "", "full_reward_spec"], [181, 2, 1, "", "full_reward_spec_unbatched"], [181, 2, 1, "", "full_state_spec"], [181, 2, 1, "", "full_state_spec_unbatched"], [181, 1, 1, "", "get_buffer"], [181, 1, 1, "", "get_extra_state"], [181, 1, 1, "", "get_parameter"], [181, 1, 1, "", "get_submodule"], [181, 1, 1, "", "half"], [181, 2, 1, "", "input_spec"], [181, 2, 1, "", "input_spec_unbatched"], [181, 1, 1, "", "insert_transform"], [181, 1, 1, "", "ipu"], [181, 2, 1, "", "is_spec_locked"], [181, 1, 1, "", "load_state_dict"], [181, 1, 1, "", "maybe_reset"], [181, 1, 1, "", "modules"], [181, 1, 1, "", "mtia"], [181, 1, 1, "", "named_buffers"], [181, 1, 1, "", "named_children"], [181, 1, 1, "", "named_modules"], [181, 1, 1, "", "named_parameters"], [181, 2, 1, "", "observation_keys"], [181, 2, 1, "", "observation_spec"], [181, 2, 1, "", "observation_spec_unbatched"], [181, 2, 1, "", "output_spec"], [181, 2, 1, "", "output_spec_unbatched"], [181, 1, 1, "", "parameters"], [181, 1, 1, "", "rand_action"], [181, 1, 1, "", "rand_step"], [181, 1, 1, "", "register_backward_hook"], [181, 1, 1, "", "register_buffer"], [181, 1, 1, "", "register_forward_hook"], [181, 1, 1, "", "register_forward_pre_hook"], [181, 1, 1, "", "register_full_backward_hook"], [181, 1, 1, "", "register_full_backward_pre_hook"], [181, 1, 1, "", "register_gym"], [181, 1, 1, "", "register_load_state_dict_post_hook"], [181, 1, 1, "", "register_load_state_dict_pre_hook"], [181, 1, 1, "", "register_module"], [181, 1, 1, "", "register_parameter"], [181, 1, 1, "", "register_state_dict_post_hook"], [181, 1, 1, "", "register_state_dict_pre_hook"], [181, 1, 1, "", "requires_grad_"], [181, 1, 1, "", "reset"], [181, 2, 1, "", "reset_keys"], [181, 2, 1, "", "reward_key"], [181, 2, 1, "", "reward_keys"], [181, 2, 1, "", "reward_spec"], [181, 2, 1, "", "reward_spec_unbatched"], [181, 1, 1, "", "rollout"], [181, 1, 1, "", "set_extra_state"], [181, 1, 1, "", "set_missing_tolerance"], [181, 1, 1, "", "set_seed"], [181, 1, 1, "", "set_spec_lock_"], [181, 1, 1, "", "set_submodule"], [181, 2, 1, "", "shape"], [181, 1, 1, "", "share_memory"], [181, 2, 1, "", "specs"], [181, 1, 1, "", "state_dict"], [181, 2, 1, "", "state_keys"], [181, 2, 1, "", "state_spec"], [181, 2, 1, "", "state_spec_unbatched"], [181, 1, 1, "", "step"], [181, 1, 1, "", "step_and_maybe_reset"], [181, 1, 1, "", "step_mdp"], [181, 1, 1, "", "to"], [181, 1, 1, "", "to_empty"], [181, 1, 1, "", "train"], [181, 1, 1, "", "type"], [181, 1, 1, "", "xpu"], [181, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[182, 1, 1, "", "add_module"], [182, 1, 1, "", "apply"], [182, 1, 1, "", "bfloat16"], [182, 1, 1, "", "buffers"], [182, 1, 1, "", "children"], [182, 1, 1, "", "close"], [182, 1, 1, "", "compile"], [182, 2, 1, "", "container"], [182, 1, 1, "", "cpu"], [182, 1, 1, "", "cuda"], [182, 1, 1, "", "double"], [182, 1, 1, "", "eval"], [182, 1, 1, "", "extra_repr"], [182, 1, 1, "", "float"], [182, 1, 1, "", "forward"], [182, 1, 1, "", "get_buffer"], [182, 1, 1, "", "get_extra_state"], [182, 1, 1, "", "get_parameter"], [182, 1, 1, "", "get_submodule"], [182, 1, 1, "", "half"], [182, 1, 1, "", "init"], [182, 1, 1, "", "inv"], [182, 1, 1, "", "ipu"], [182, 1, 1, "", "load_state_dict"], [182, 1, 1, "", "modules"], [182, 1, 1, "", "mtia"], [182, 1, 1, "", "named_buffers"], [182, 1, 1, "", "named_children"], [182, 1, 1, "", "named_modules"], [182, 1, 1, "", "named_parameters"], [182, 1, 1, "", "parameters"], [182, 2, 1, "", "parent"], [182, 1, 1, "", "register_backward_hook"], [182, 1, 1, "", "register_buffer"], [182, 1, 1, "", "register_forward_hook"], [182, 1, 1, "", "register_forward_pre_hook"], [182, 1, 1, "", "register_full_backward_hook"], [182, 1, 1, "", "register_full_backward_pre_hook"], [182, 1, 1, "", "register_load_state_dict_post_hook"], [182, 1, 1, "", "register_load_state_dict_pre_hook"], [182, 1, 1, "", "register_module"], [182, 1, 1, "", "register_parameter"], [182, 1, 1, "", "register_state_dict_post_hook"], [182, 1, 1, "", "register_state_dict_pre_hook"], [182, 1, 1, "", "requires_grad_"], [182, 1, 1, "", "set_extra_state"], [182, 1, 1, "", "set_submodule"], [182, 1, 1, "", "share_memory"], [182, 1, 1, "", "state_dict"], [182, 1, 1, "", "to"], [182, 1, 1, "", "to_empty"], [182, 1, 1, "", "train"], [182, 1, 1, "", "transform_action_spec"], [182, 1, 1, "", "transform_done_spec"], [182, 1, 1, "", "transform_env_batch_size"], [182, 1, 1, "", "transform_env_device"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"], [182, 1, 1, "", "transform_output_spec"], [182, 1, 1, "", "transform_reward_spec"], [182, 1, 1, "", "transform_state_spec"], [182, 1, 1, "", "type"], [182, 1, 1, "", "xpu"], [182, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[183, 1, 1, "", "add_module"], [183, 1, 1, "", "apply"], [183, 1, 1, "", "bfloat16"], [183, 1, 1, "", "buffers"], [183, 1, 1, "", "children"], [183, 1, 1, "", "close"], [183, 1, 1, "", "compile"], [183, 2, 1, "", "container"], [183, 1, 1, "", "cpu"], [183, 1, 1, "", "cuda"], [183, 1, 1, "", "double"], [183, 1, 1, "", "eval"], [183, 1, 1, "", "extra_repr"], [183, 1, 1, "", "extract_tags"], [183, 1, 1, "", "float"], [183, 1, 1, "", "forward"], [183, 1, 1, "", "get_buffer"], [183, 1, 1, "", "get_extra_state"], [183, 1, 1, "", "get_parameter"], [183, 1, 1, "", "get_submodule"], [183, 1, 1, "", "half"], [183, 1, 1, "", "init"], [183, 1, 1, "", "inv"], [183, 1, 1, "", "ipu"], [183, 1, 1, "", "load_state_dict"], [183, 1, 1, "", "modules"], [183, 1, 1, "", "mtia"], [183, 1, 1, "", "named_buffers"], [183, 1, 1, "", "named_children"], [183, 1, 1, "", "named_modules"], [183, 1, 1, "", "named_parameters"], [183, 1, 1, "", "parameters"], [183, 2, 1, "", "parent"], [183, 1, 1, "", "register_backward_hook"], [183, 1, 1, "", "register_buffer"], [183, 1, 1, "", "register_forward_hook"], [183, 1, 1, "", "register_forward_pre_hook"], [183, 1, 1, "", "register_full_backward_hook"], [183, 1, 1, "", "register_full_backward_pre_hook"], [183, 1, 1, "", "register_load_state_dict_post_hook"], [183, 1, 1, "", "register_load_state_dict_pre_hook"], [183, 1, 1, "", "register_module"], [183, 1, 1, "", "register_parameter"], [183, 1, 1, "", "register_state_dict_post_hook"], [183, 1, 1, "", "register_state_dict_pre_hook"], [183, 1, 1, "", "requires_grad_"], [183, 1, 1, "", "set_extra_state"], [183, 1, 1, "", "set_submodule"], [183, 1, 1, "", "share_memory"], [183, 1, 1, "", "state_dict"], [183, 1, 1, "", "to"], [183, 1, 1, "", "to_empty"], [183, 1, 1, "", "train"], [183, 1, 1, "", "transform_action_spec"], [183, 1, 1, "", "transform_done_spec"], [183, 1, 1, "", "transform_env_batch_size"], [183, 1, 1, "", "transform_env_device"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"], [183, 1, 1, "", "transform_reward_spec"], [183, 1, 1, "", "transform_state_spec"], [183, 1, 1, "", "type"], [183, 1, 1, "", "xpu"], [183, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[184, 2, 1, "", "action_key"], [184, 2, 1, "", "action_keys"], [184, 2, 1, "", "action_spec"], [184, 2, 1, "", "action_spec_unbatched"], [184, 1, 1, "", "add_module"], [184, 1, 1, "", "add_truncated_keys"], [184, 1, 1, "", "all_actions"], [184, 1, 1, "", "any_done"], [184, 1, 1, "", "append_transform"], [184, 1, 1, "", "apply"], [184, 1, 1, "", "auto_specs_"], [184, 2, 1, "", "batch_dims"], [184, 2, 1, "", "batch_locked"], [184, 2, 1, "", "batch_size"], [184, 1, 1, "", "bfloat16"], [184, 1, 1, "", "buffers"], [184, 1, 1, "", "cardinality"], [184, 1, 1, "", "check_env_specs"], [184, 1, 1, "", "children"], [184, 1, 1, "", "compile"], [184, 1, 1, "", "cpu"], [184, 1, 1, "", "cuda"], [184, 2, 1, "", "done_key"], [184, 2, 1, "", "done_keys"], [184, 2, 1, "", "done_keys_groups"], [184, 2, 1, "", "done_spec"], [184, 2, 1, "", "done_spec_unbatched"], [184, 1, 1, "", "double"], [184, 1, 1, "", "empty_cache"], [184, 1, 1, "", "eval"], [184, 1, 1, "", "extra_repr"], [184, 1, 1, "", "fake_tensordict"], [184, 1, 1, "", "float"], [184, 1, 1, "", "forward"], [184, 2, 1, "", "full_action_spec"], [184, 2, 1, "", "full_action_spec_unbatched"], [184, 2, 1, "", "full_done_spec"], [184, 2, 1, "", "full_done_spec_unbatched"], [184, 2, 1, "", "full_observation_spec_unbatched"], [184, 2, 1, "", "full_reward_spec"], [184, 2, 1, "", "full_reward_spec_unbatched"], [184, 2, 1, "", "full_state_spec"], [184, 2, 1, "", "full_state_spec_unbatched"], [184, 1, 1, "", "get_buffer"], [184, 1, 1, "", "get_extra_state"], [184, 1, 1, "", "get_parameter"], [184, 1, 1, "", "get_submodule"], [184, 1, 1, "", "half"], [184, 2, 1, "", "input_spec"], [184, 2, 1, "", "input_spec_unbatched"], [184, 1, 1, "", "insert_transform"], [184, 1, 1, "", "ipu"], [184, 2, 1, "", "is_spec_locked"], [184, 1, 1, "", "load_state_dict"], [184, 1, 1, "", "maybe_reset"], [184, 1, 1, "", "modules"], [184, 1, 1, "", "mtia"], [184, 1, 1, "", "named_buffers"], [184, 1, 1, "", "named_children"], [184, 1, 1, "", "named_modules"], [184, 1, 1, "", "named_parameters"], [184, 2, 1, "", "observation_keys"], [184, 2, 1, "", "observation_spec"], [184, 2, 1, "", "observation_spec_unbatched"], [184, 2, 1, "", "output_spec"], [184, 2, 1, "", "output_spec_unbatched"], [184, 1, 1, "", "parameters"], [184, 1, 1, "", "rand_action"], [184, 1, 1, "", "rand_step"], [184, 1, 1, "", "register_backward_hook"], [184, 1, 1, "", "register_buffer"], [184, 1, 1, "", "register_forward_hook"], [184, 1, 1, "", "register_forward_pre_hook"], [184, 1, 1, "", "register_full_backward_hook"], [184, 1, 1, "", "register_full_backward_pre_hook"], [184, 1, 1, "", "register_gym"], [184, 1, 1, "", "register_load_state_dict_post_hook"], [184, 1, 1, "", "register_load_state_dict_pre_hook"], [184, 1, 1, "", "register_module"], [184, 1, 1, "", "register_parameter"], [184, 1, 1, "", "register_state_dict_post_hook"], [184, 1, 1, "", "register_state_dict_pre_hook"], [184, 1, 1, "", "requires_grad_"], [184, 1, 1, "", "reset"], [184, 2, 1, "", "reset_keys"], [184, 2, 1, "", "reward_key"], [184, 2, 1, "", "reward_keys"], [184, 2, 1, "", "reward_spec"], [184, 2, 1, "", "reward_spec_unbatched"], [184, 1, 1, "", "rollout"], [184, 1, 1, "", "set_extra_state"], [184, 1, 1, "", "set_missing_tolerance"], [184, 1, 1, "", "set_seed"], [184, 1, 1, "", "set_spec_lock_"], [184, 1, 1, "", "set_submodule"], [184, 2, 1, "", "shape"], [184, 1, 1, "", "share_memory"], [184, 2, 1, "", "specs"], [184, 1, 1, "", "state_dict"], [184, 2, 1, "", "state_keys"], [184, 2, 1, "", "state_spec"], [184, 2, 1, "", "state_spec_unbatched"], [184, 1, 1, "", "step"], [184, 1, 1, "", "step_and_maybe_reset"], [184, 1, 1, "", "step_mdp"], [184, 1, 1, "", "to"], [184, 1, 1, "", "to_empty"], [184, 1, 1, "", "train"], [184, 1, 1, "", "type"], [184, 1, 1, "", "xpu"], [184, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[185, 2, 1, "", "device"], [185, 1, 1, "", "dumps"], [185, 1, 1, "", "fields"], [185, 1, 1, "", "from_tensordict"], [185, 1, 1, "", "get"], [185, 1, 1, "", "load"], [185, 1, 1, "", "load_"], [185, 1, 1, "", "load_memmap"], [185, 1, 1, "", "load_state_dict"], [185, 1, 1, "", "memmap"], [185, 1, 1, "", "memmap_"], [185, 1, 1, "", "memmap_like"], [185, 1, 1, "", "memmap_refresh_"], [185, 1, 1, "", "save"], [185, 1, 1, "", "set"], [185, 1, 1, "", "state_dict"], [185, 1, 1, "", "to_tensordict"], [185, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[186, 1, 1, "", "add_module"], [186, 1, 1, "", "apply"], [186, 1, 1, "", "bfloat16"], [186, 1, 1, "", "buffers"], [186, 1, 1, "", "children"], [186, 1, 1, "", "close"], [186, 1, 1, "", "compile"], [186, 2, 1, "", "container"], [186, 1, 1, "", "cpu"], [186, 1, 1, "", "cuda"], [186, 1, 1, "", "default_reward_aggregator"], [186, 1, 1, "", "double"], [186, 1, 1, "", "eval"], [186, 1, 1, "", "extra_repr"], [186, 1, 1, "", "float"], [186, 1, 1, "", "forward"], [186, 1, 1, "", "get_buffer"], [186, 1, 1, "", "get_extra_state"], [186, 1, 1, "", "get_parameter"], [186, 1, 1, "", "get_submodule"], [186, 1, 1, "", "half"], [186, 1, 1, "", "init"], [186, 1, 1, "", "inv"], [186, 1, 1, "", "ipu"], [186, 1, 1, "", "load_state_dict"], [186, 1, 1, "", "modules"], [186, 1, 1, "", "mtia"], [186, 1, 1, "", "named_buffers"], [186, 1, 1, "", "named_children"], [186, 1, 1, "", "named_modules"], [186, 1, 1, "", "named_parameters"], [186, 1, 1, "", "parameters"], [186, 2, 1, "", "parent"], [186, 1, 1, "", "register_backward_hook"], [186, 1, 1, "", "register_buffer"], [186, 1, 1, "", "register_forward_hook"], [186, 1, 1, "", "register_forward_pre_hook"], [186, 1, 1, "", "register_full_backward_hook"], [186, 1, 1, "", "register_full_backward_pre_hook"], [186, 1, 1, "", "register_load_state_dict_post_hook"], [186, 1, 1, "", "register_load_state_dict_pre_hook"], [186, 1, 1, "", "register_module"], [186, 1, 1, "", "register_parameter"], [186, 1, 1, "", "register_state_dict_post_hook"], [186, 1, 1, "", "register_state_dict_pre_hook"], [186, 1, 1, "", "requires_grad_"], [186, 1, 1, "", "set_extra_state"], [186, 1, 1, "", "set_submodule"], [186, 1, 1, "", "share_memory"], [186, 1, 1, "", "state_dict"], [186, 1, 1, "", "to"], [186, 1, 1, "", "to_empty"], [186, 1, 1, "", "train"], [186, 1, 1, "", "transform_action_spec"], [186, 1, 1, "", "transform_done_spec"], [186, 1, 1, "", "transform_env_batch_size"], [186, 1, 1, "", "transform_env_device"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_output_spec"], [186, 1, 1, "", "transform_reward_spec"], [186, 1, 1, "", "transform_state_spec"], [186, 1, 1, "", "type"], [186, 1, 1, "", "xpu"], [186, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[187, 2, 1, "", "action_key"], [187, 2, 1, "", "action_keys"], [187, 2, 1, "", "action_spec"], [187, 2, 1, "", "action_spec_unbatched"], [187, 1, 1, "", "add_module"], [187, 1, 1, "", "add_truncated_keys"], [187, 1, 1, "", "all_actions"], [187, 1, 1, "", "any_done"], [187, 1, 1, "", "append_transform"], [187, 1, 1, "", "apply"], [187, 1, 1, "", "auto_specs_"], [187, 2, 1, "", "batch_dims"], [187, 2, 1, "", "batch_locked"], [187, 2, 1, "", "batch_size"], [187, 1, 1, "", "bfloat16"], [187, 1, 1, "", "buffers"], [187, 1, 1, "", "cardinality"], [187, 1, 1, "", "check_env_specs"], [187, 1, 1, "", "children"], [187, 1, 1, "", "compile"], [187, 1, 1, "", "cpu"], [187, 1, 1, "", "cuda"], [187, 2, 1, "", "done_key"], [187, 2, 1, "", "done_keys"], [187, 2, 1, "", "done_keys_groups"], [187, 2, 1, "", "done_spec"], [187, 2, 1, "", "done_spec_unbatched"], [187, 1, 1, "", "double"], [187, 1, 1, "", "empty_cache"], [187, 1, 1, "", "eval"], [187, 1, 1, "", "extra_repr"], [187, 1, 1, "", "fake_tensordict"], [187, 1, 1, "", "float"], [187, 1, 1, "", "forward"], [187, 1, 1, "id0", "from_dataloader"], [187, 2, 1, "", "full_action_spec"], [187, 2, 1, "", "full_action_spec_unbatched"], [187, 2, 1, "", "full_done_spec"], [187, 2, 1, "", "full_done_spec_unbatched"], [187, 2, 1, "", "full_observation_spec_unbatched"], [187, 2, 1, "", "full_reward_spec"], [187, 2, 1, "", "full_reward_spec_unbatched"], [187, 2, 1, "", "full_state_spec"], [187, 2, 1, "", "full_state_spec_unbatched"], [187, 1, 1, "", "get_buffer"], [187, 1, 1, "", "get_extra_state"], [187, 1, 1, "", "get_parameter"], [187, 1, 1, "", "get_submodule"], [187, 1, 1, "", "half"], [187, 2, 1, "", "input_spec"], [187, 2, 1, "", "input_spec_unbatched"], [187, 1, 1, "", "ipu"], [187, 2, 1, "", "is_spec_locked"], [187, 1, 1, "", "load_state_dict"], [187, 1, 1, "", "maybe_reset"], [187, 1, 1, "", "modules"], [187, 1, 1, "", "mtia"], [187, 1, 1, "", "named_buffers"], [187, 1, 1, "", "named_children"], [187, 1, 1, "", "named_modules"], [187, 1, 1, "", "named_parameters"], [187, 2, 1, "", "observation_keys"], [187, 2, 1, "", "observation_spec"], [187, 2, 1, "", "observation_spec_unbatched"], [187, 2, 1, "", "output_spec"], [187, 2, 1, "", "output_spec_unbatched"], [187, 1, 1, "", "parameters"], [187, 1, 1, "", "rand_action"], [187, 1, 1, "", "rand_step"], [187, 1, 1, "", "register_backward_hook"], [187, 1, 1, "", "register_buffer"], [187, 1, 1, "", "register_forward_hook"], [187, 1, 1, "", "register_forward_pre_hook"], [187, 1, 1, "", "register_full_backward_hook"], [187, 1, 1, "", "register_full_backward_pre_hook"], [187, 1, 1, "", "register_gym"], [187, 1, 1, "", "register_load_state_dict_post_hook"], [187, 1, 1, "", "register_load_state_dict_pre_hook"], [187, 1, 1, "", "register_module"], [187, 1, 1, "", "register_parameter"], [187, 1, 1, "", "register_state_dict_post_hook"], [187, 1, 1, "", "register_state_dict_pre_hook"], [187, 1, 1, "", "requires_grad_"], [187, 1, 1, "", "reset"], [187, 2, 1, "", "reset_keys"], [187, 2, 1, "", "reward_key"], [187, 2, 1, "", "reward_keys"], [187, 2, 1, "", "reward_spec"], [187, 2, 1, "", "reward_spec_unbatched"], [187, 1, 1, "", "rollout"], [187, 1, 1, "", "set_extra_state"], [187, 1, 1, "", "set_seed"], [187, 1, 1, "", "set_spec_lock_"], [187, 1, 1, "", "set_submodule"], [187, 2, 1, "", "shape"], [187, 1, 1, "", "share_memory"], [187, 2, 1, "", "specs"], [187, 1, 1, "", "state_dict"], [187, 2, 1, "", "state_keys"], [187, 2, 1, "", "state_spec"], [187, 2, 1, "", "state_spec_unbatched"], [187, 1, 1, "", "step"], [187, 1, 1, "", "step_and_maybe_reset"], [187, 1, 1, "", "step_mdp"], [187, 1, 1, "", "to"], [187, 1, 1, "", "to_empty"], [187, 1, 1, "", "train"], [187, 1, 1, "", "type"], [187, 1, 1, "", "xpu"], [187, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[188, 2, 1, "", "action_key"], [188, 2, 1, "", "action_keys"], [188, 2, 1, "", "action_spec"], [188, 2, 1, "", "action_spec_unbatched"], [188, 1, 1, "", "add_module"], [188, 1, 1, "", "add_truncated_keys"], [188, 1, 1, "", "all_actions"], [188, 1, 1, "", "any_done"], [188, 1, 1, "", "append_transform"], [188, 1, 1, "", "apply"], [188, 1, 1, "", "auto_specs_"], [188, 2, 1, "", "batch_dims"], [188, 2, 1, "", "batch_locked"], [188, 2, 1, "", "batch_size"], [188, 1, 1, "", "bfloat16"], [188, 1, 1, "", "buffers"], [188, 1, 1, "", "cardinality"], [188, 1, 1, "", "check_env_specs"], [188, 1, 1, "", "children"], [188, 1, 1, "", "compile"], [188, 1, 1, "", "cpu"], [188, 1, 1, "", "cuda"], [188, 2, 1, "", "done_key"], [188, 2, 1, "", "done_keys"], [188, 2, 1, "", "done_keys_groups"], [188, 2, 1, "", "done_spec"], [188, 2, 1, "", "done_spec_unbatched"], [188, 1, 1, "", "double"], [188, 1, 1, "", "empty_cache"], [188, 1, 1, "", "eval"], [188, 1, 1, "", "extra_repr"], [188, 1, 1, "", "fake_tensordict"], [188, 1, 1, "", "float"], [188, 1, 1, "", "forward"], [188, 2, 1, "", "full_action_spec"], [188, 2, 1, "", "full_action_spec_unbatched"], [188, 2, 1, "", "full_done_spec"], [188, 2, 1, "", "full_done_spec_unbatched"], [188, 2, 1, "", "full_observation_spec_unbatched"], [188, 2, 1, "", "full_reward_spec"], [188, 2, 1, "", "full_reward_spec_unbatched"], [188, 2, 1, "", "full_state_spec"], [188, 2, 1, "", "full_state_spec_unbatched"], [188, 1, 1, "", "get_buffer"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "get_parameter"], [188, 1, 1, "", "get_submodule"], [188, 1, 1, "", "half"], [188, 2, 1, "", "input_spec"], [188, 2, 1, "", "input_spec_unbatched"], [188, 1, 1, "", "ipu"], [188, 2, 1, "", "is_spec_locked"], [188, 1, 1, "", "load_state_dict"], [188, 1, 1, "", "make_tensordict"], [188, 1, 1, "", "maybe_reset"], [188, 1, 1, "", "modules"], [188, 1, 1, "", "mtia"], [188, 1, 1, "", "named_buffers"], [188, 1, 1, "", "named_children"], [188, 1, 1, "", "named_modules"], [188, 1, 1, "", "named_parameters"], [188, 2, 1, "", "observation_keys"], [188, 2, 1, "", "observation_spec"], [188, 2, 1, "", "observation_spec_unbatched"], [188, 2, 1, "", "output_spec"], [188, 2, 1, "", "output_spec_unbatched"], [188, 1, 1, "", "parameters"], [188, 1, 1, "", "rand_action"], [188, 1, 1, "", "rand_step"], [188, 1, 1, "", "register_backward_hook"], [188, 1, 1, "", "register_buffer"], [188, 1, 1, "", "register_forward_hook"], [188, 1, 1, "", "register_forward_pre_hook"], [188, 1, 1, "", "register_full_backward_hook"], [188, 1, 1, "", "register_full_backward_pre_hook"], [188, 1, 1, "", "register_gym"], [188, 1, 1, "", "register_load_state_dict_post_hook"], [188, 1, 1, "", "register_load_state_dict_pre_hook"], [188, 1, 1, "", "register_module"], [188, 1, 1, "", "register_parameter"], [188, 1, 1, "", "register_state_dict_post_hook"], [188, 1, 1, "", "register_state_dict_pre_hook"], [188, 1, 1, "", "requires_grad_"], [188, 1, 1, "", "reset"], [188, 2, 1, "", "reset_keys"], [188, 2, 1, "", "reward_key"], [188, 2, 1, "", "reward_keys"], [188, 2, 1, "", "reward_spec"], [188, 2, 1, "", "reward_spec_unbatched"], [188, 1, 1, "", "rollout"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "set_seed"], [188, 1, 1, "", "set_spec_lock_"], [188, 1, 1, "", "set_submodule"], [188, 2, 1, "", "shape"], [188, 1, 1, "", "share_memory"], [188, 2, 1, "", "specs"], [188, 1, 1, "", "state_dict"], [188, 2, 1, "", "state_keys"], [188, 2, 1, "", "state_spec"], [188, 2, 1, "", "state_spec_unbatched"], [188, 1, 1, "", "step"], [188, 1, 1, "", "step_and_maybe_reset"], [188, 1, 1, "", "step_mdp"], [188, 1, 1, "", "to"], [188, 1, 1, "", "to_empty"], [188, 1, 1, "", "train"], [188, 1, 1, "", "type"], [188, 1, 1, "", "xpu"], [188, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[189, 2, 1, "", "action_key"], [189, 2, 1, "", "action_keys"], [189, 2, 1, "", "action_spec"], [189, 2, 1, "", "action_spec_unbatched"], [189, 1, 1, "", "add_module"], [189, 1, 1, "", "add_truncated_keys"], [189, 1, 1, "", "all_actions"], [189, 1, 1, "", "any_done"], [189, 1, 1, "", "append_transform"], [189, 1, 1, "", "apply"], [189, 1, 1, "", "auto_register_info_dict"], [189, 1, 1, "", "auto_specs_"], [189, 2, 1, "", "batch_dims"], [189, 2, 1, "", "batch_locked"], [189, 2, 1, "", "batch_size"], [189, 1, 1, "", "bfloat16"], [189, 1, 1, "", "buffers"], [189, 1, 1, "", "cardinality"], [189, 1, 1, "", "check_env_specs"], [189, 1, 1, "", "children"], [189, 1, 1, "", "close"], [189, 1, 1, "", "compile"], [189, 1, 1, "", "cpu"], [189, 1, 1, "", "cuda"], [189, 2, 1, "", "done_key"], [189, 2, 1, "", "done_keys"], [189, 2, 1, "", "done_keys_groups"], [189, 2, 1, "", "done_spec"], [189, 2, 1, "", "done_spec_unbatched"], [189, 1, 1, "", "double"], [189, 1, 1, "", "empty_cache"], [189, 1, 1, "", "eval"], [189, 1, 1, "", "extra_repr"], [189, 1, 1, "", "fake_tensordict"], [189, 1, 1, "", "fast_encoding"], [189, 1, 1, "", "float"], [189, 1, 1, "", "forward"], [189, 2, 1, "", "full_action_spec"], [189, 2, 1, "", "full_action_spec_unbatched"], [189, 2, 1, "", "full_done_spec"], [189, 2, 1, "", "full_done_spec_unbatched"], [189, 2, 1, "", "full_observation_spec_unbatched"], [189, 2, 1, "", "full_reward_spec"], [189, 2, 1, "", "full_reward_spec_unbatched"], [189, 2, 1, "", "full_state_spec"], [189, 2, 1, "", "full_state_spec_unbatched"], [189, 1, 1, "", "get_buffer"], [189, 1, 1, "", "get_extra_state"], [189, 1, 1, "", "get_library_name"], [189, 1, 1, "", "get_parameter"], [189, 1, 1, "", "get_submodule"], [189, 1, 1, "", "half"], [189, 2, 1, "", "input_spec"], [189, 2, 1, "", "input_spec_unbatched"], [189, 1, 1, "", "ipu"], [189, 2, 1, "", "is_spec_locked"], [189, 1, 1, "", "load_state_dict"], [189, 1, 1, "", "maybe_reset"], [189, 1, 1, "", "modules"], [189, 1, 1, "", "mtia"], [189, 1, 1, "", "named_buffers"], [189, 1, 1, "", "named_children"], [189, 1, 1, "", "named_modules"], [189, 1, 1, "", "named_parameters"], [189, 2, 1, "", "observation_keys"], [189, 2, 1, "", "observation_spec"], [189, 2, 1, "", "observation_spec_unbatched"], [189, 2, 1, "", "output_spec"], [189, 2, 1, "", "output_spec_unbatched"], [189, 1, 1, "", "parameters"], [189, 1, 1, "", "rand_action"], [189, 1, 1, "", "rand_step"], [189, 1, 1, "", "read_action"], [189, 1, 1, "", "read_done"], [189, 1, 1, "", "read_obs"], [189, 1, 1, "", "read_reward"], [189, 1, 1, "", "register_backward_hook"], [189, 1, 1, "", "register_buffer"], [189, 1, 1, "", "register_forward_hook"], [189, 1, 1, "", "register_forward_pre_hook"], [189, 1, 1, "", "register_full_backward_hook"], [189, 1, 1, "", "register_full_backward_pre_hook"], [189, 1, 1, "", "register_gym"], [189, 1, 1, "", "register_load_state_dict_post_hook"], [189, 1, 1, "", "register_load_state_dict_pre_hook"], [189, 1, 1, "", "register_module"], [189, 1, 1, "", "register_parameter"], [189, 1, 1, "", "register_state_dict_post_hook"], [189, 1, 1, "", "register_state_dict_pre_hook"], [189, 1, 1, "", "requires_grad_"], [189, 1, 1, "", "reset"], [189, 2, 1, "", "reset_keys"], [189, 2, 1, "", "reward_key"], [189, 2, 1, "", "reward_keys"], [189, 2, 1, "", "reward_spec"], [189, 2, 1, "", "reward_spec_unbatched"], [189, 1, 1, "", "rollout"], [189, 1, 1, "", "set_extra_state"], [189, 1, 1, "", "set_info_dict_reader"], [189, 1, 1, "", "set_seed"], [189, 1, 1, "", "set_spec_lock_"], [189, 1, 1, "", "set_submodule"], [189, 2, 1, "", "shape"], [189, 1, 1, "", "share_memory"], [189, 2, 1, "", "specs"], [189, 1, 1, "", "state_dict"], [189, 2, 1, "", "state_keys"], [189, 2, 1, "", "state_spec"], [189, 2, 1, "", "state_spec_unbatched"], [189, 1, 1, "", "step"], [189, 1, 1, "", "step_and_maybe_reset"], [189, 1, 1, "", "step_mdp"], [189, 1, 1, "", "to"], [189, 1, 1, "", "to_empty"], [189, 1, 1, "", "train"], [189, 1, 1, "", "type"], [189, 1, 1, "", "xpu"], [189, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[192, 0, 1, "", "BrowserTransform"], [193, 0, 1, "", "DataLoadingPrimer"], [194, 0, 1, "", "KLRewardTransform"], [195, 0, 1, "", "MCPToolTransform"], [196, 0, 1, "", "PolicyVersion"], [197, 0, 1, "", "PythonInterpreter"], [198, 0, 1, "", "TemplateTransform"], [199, 0, 1, "", "Tokenizer"], [200, 0, 1, "", "as_nested_tensor"], [201, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.BrowserTransform": [[192, 1, 1, "", "add_module"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "children"], [192, 1, 1, "", "clone"], [192, 1, 1, "", "close"], [192, 1, 1, "", "compile"], [192, 2, 1, "", "container"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 1, 1, "", "double"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 1, 1, "", "init"], [192, 1, 1, "", "inv"], [192, 1, 1, "", "ipu"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 1, 1, "", "parameters"], [192, 2, 1, "", "parent"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_submodule"], [192, 1, 1, "", "share_memory"], [192, 1, 1, "", "state_dict"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "transform_action_spec"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_batch_size"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "transform_state_spec"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[193, 1, 1, "", "add_module"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "children"], [193, 1, 1, "", "close"], [193, 1, 1, "", "compile"], [193, 2, 1, "", "container"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 1, 1, "", "double"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 1, 1, "", "init"], [193, 1, 1, "", "inv"], [193, 1, 1, "", "ipu"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 1, 1, "", "parameters"], [193, 2, 1, "", "parent"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_submodule"], [193, 1, 1, "", "share_memory"], [193, 1, 1, "", "state_dict"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "transform_action_spec"], [193, 1, 1, "", "transform_done_spec"], [193, 1, 1, "", "transform_env_batch_size"], [193, 1, 1, "", "transform_env_device"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_output_spec"], [193, 1, 1, "", "transform_reward_spec"], [193, 1, 1, "", "transform_state_spec"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[194, 1, 1, "", "add_module"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "children"], [194, 1, 1, "", "close"], [194, 1, 1, "", "compile"], [194, 2, 1, "", "container"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 1, 1, "", "double"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 1, 1, "", "init"], [194, 1, 1, "", "inv"], [194, 1, 1, "", "ipu"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 1, 1, "", "parameters"], [194, 2, 1, "", "parent"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_submodule"], [194, 1, 1, "", "share_memory"], [194, 1, 1, "", "state_dict"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "transform_action_spec"], [194, 1, 1, "", "transform_done_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "transform_state_spec"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "close"], [195, 1, 1, "", "compile"], [195, 2, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "init"], [195, 1, 1, "", "inv"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 2, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PolicyVersion": [[196, 1, 1, "", "add_module"], [196, 1, 1, "", "apply"], [196, 1, 1, "", "bfloat16"], [196, 1, 1, "", "buffers"], [196, 1, 1, "", "children"], [196, 1, 1, "", "close"], [196, 1, 1, "", "compile"], [196, 2, 1, "", "container"], [196, 1, 1, "", "cpu"], [196, 1, 1, "", "cuda"], [196, 1, 1, "", "double"], [196, 1, 1, "", "eval"], [196, 1, 1, "", "extra_repr"], [196, 1, 1, "", "float"], [196, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffer"], [196, 1, 1, "", "get_extra_state"], [196, 1, 1, "", "get_parameter"], [196, 1, 1, "", "get_submodule"], [196, 1, 1, "", "half"], [196, 1, 1, "", "increment_version"], [196, 1, 1, "", "init"], [196, 1, 1, "", "inv"], [196, 1, 1, "", "ipu"], [196, 1, 1, "", "load_state_dict"], [196, 1, 1, "", "modules"], [196, 1, 1, "", "mtia"], [196, 1, 1, "", "named_buffers"], [196, 1, 1, "", "named_children"], [196, 1, 1, "", "named_modules"], [196, 1, 1, "", "named_parameters"], [196, 1, 1, "", "parameters"], [196, 2, 1, "", "parent"], [196, 1, 1, "", "register_backward_hook"], [196, 1, 1, "", "register_buffer"], [196, 1, 1, "", "register_forward_hook"], [196, 1, 1, "", "register_forward_pre_hook"], [196, 1, 1, "", "register_full_backward_hook"], [196, 1, 1, "", "register_full_backward_pre_hook"], [196, 1, 1, "", "register_load_state_dict_post_hook"], [196, 1, 1, "", "register_load_state_dict_pre_hook"], [196, 1, 1, "", "register_module"], [196, 1, 1, "", "register_parameter"], [196, 1, 1, "", "register_state_dict_post_hook"], [196, 1, 1, "", "register_state_dict_pre_hook"], [196, 1, 1, "", "requires_grad_"], [196, 1, 1, "", "set_extra_state"], [196, 1, 1, "", "set_submodule"], [196, 1, 1, "", "share_memory"], [196, 1, 1, "", "state_dict"], [196, 1, 1, "", "to"], [196, 1, 1, "", "to_empty"], [196, 1, 1, "", "train"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_batch_size"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"], [196, 1, 1, "", "type"], [196, 2, 1, "", "version"], [196, 1, 1, "", "xpu"], [196, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[197, 1, 1, "", "add_module"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "bfloat16"], [197, 1, 1, "", "buffers"], [197, 1, 1, "", "children"], [197, 1, 1, "", "clone"], [197, 1, 1, "", "close"], [197, 1, 1, "", "compile"], [197, 2, 1, "", "container"], [197, 1, 1, "", "cpu"], [197, 1, 1, "", "cuda"], [197, 1, 1, "", "double"], [197, 1, 1, "", "eval"], [197, 1, 1, "", "extra_repr"], [197, 1, 1, "", "float"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "get_buffer"], [197, 1, 1, "", "get_extra_state"], [197, 1, 1, "", "get_parameter"], [197, 1, 1, "", "get_submodule"], [197, 1, 1, "", "half"], [197, 1, 1, "", "init"], [197, 1, 1, "", "inv"], [197, 1, 1, "", "ipu"], [197, 1, 1, "", "load_state_dict"], [197, 1, 1, "", "modules"], [197, 1, 1, "", "mtia"], [197, 1, 1, "", "named_buffers"], [197, 1, 1, "", "named_children"], [197, 1, 1, "", "named_modules"], [197, 1, 1, "", "named_parameters"], [197, 1, 1, "", "parameters"], [197, 2, 1, "", "parent"], [197, 1, 1, "", "register_backward_hook"], [197, 1, 1, "", "register_buffer"], [197, 1, 1, "", "register_forward_hook"], [197, 1, 1, "", "register_forward_pre_hook"], [197, 1, 1, "", "register_full_backward_hook"], [197, 1, 1, "", "register_full_backward_pre_hook"], [197, 1, 1, "", "register_load_state_dict_post_hook"], [197, 1, 1, "", "register_load_state_dict_pre_hook"], [197, 1, 1, "", "register_module"], [197, 1, 1, "", "register_parameter"], [197, 1, 1, "", "register_state_dict_post_hook"], [197, 1, 1, "", "register_state_dict_pre_hook"], [197, 1, 1, "", "requires_grad_"], [197, 1, 1, "", "set_extra_state"], [197, 1, 1, "", "set_submodule"], [197, 1, 1, "", "share_memory"], [197, 1, 1, "", "state_dict"], [197, 1, 1, "", "to"], [197, 1, 1, "", "to_empty"], [197, 1, 1, "", "train"], [197, 1, 1, "", "transform_action_spec"], [197, 1, 1, "", "transform_done_spec"], [197, 1, 1, "", "transform_env_batch_size"], [197, 1, 1, "", "transform_env_device"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"], [197, 1, 1, "", "transform_output_spec"], [197, 1, 1, "", "transform_reward_spec"], [197, 1, 1, "", "transform_state_spec"], [197, 1, 1, "", "type"], [197, 1, 1, "", "xpu"], [197, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[198, 1, 1, "", "add_module"], [198, 1, 1, "", "apply"], [198, 1, 1, "", "bfloat16"], [198, 1, 1, "", "buffers"], [198, 1, 1, "", "children"], [198, 1, 1, "", "close"], [198, 1, 1, "", "compile"], [198, 2, 1, "", "container"], [198, 1, 1, "", "cpu"], [198, 1, 1, "", "cuda"], [198, 1, 1, "", "double"], [198, 1, 1, "", "eval"], [198, 1, 1, "", "extra_repr"], [198, 1, 1, "", "float"], [198, 1, 1, "", "forward"], [198, 1, 1, "", "get_buffer"], [198, 1, 1, "", "get_extra_state"], [198, 1, 1, "", "get_parameter"], [198, 1, 1, "", "get_submodule"], [198, 1, 1, "", "half"], [198, 1, 1, "", "init"], [198, 1, 1, "", "inv"], [198, 1, 1, "", "ipu"], [198, 1, 1, "", "load_state_dict"], [198, 1, 1, "", "modules"], [198, 1, 1, "", "mtia"], [198, 1, 1, "", "named_buffers"], [198, 1, 1, "", "named_children"], [198, 1, 1, "", "named_modules"], [198, 1, 1, "", "named_parameters"], [198, 1, 1, "", "parameters"], [198, 2, 1, "", "parent"], [198, 1, 1, "", "register_backward_hook"], [198, 1, 1, "", "register_buffer"], [198, 1, 1, "", "register_forward_hook"], [198, 1, 1, "", "register_forward_pre_hook"], [198, 1, 1, "", "register_full_backward_hook"], [198, 1, 1, "", "register_full_backward_pre_hook"], [198, 1, 1, "", "register_load_state_dict_post_hook"], [198, 1, 1, "", "register_load_state_dict_pre_hook"], [198, 1, 1, "", "register_module"], [198, 1, 1, "", "register_parameter"], [198, 1, 1, "", "register_state_dict_post_hook"], [198, 1, 1, "", "register_state_dict_pre_hook"], [198, 1, 1, "", "requires_grad_"], [198, 1, 1, "", "set_extra_state"], [198, 1, 1, "", "set_submodule"], [198, 1, 1, "", "share_memory"], [198, 1, 1, "", "state_dict"], [198, 1, 1, "", "to"], [198, 1, 1, "", "to_empty"], [198, 1, 1, "", "train"], [198, 1, 1, "", "transform_action_spec"], [198, 1, 1, "", "transform_done_spec"], [198, 1, 1, "", "transform_env_batch_size"], [198, 1, 1, "", "transform_env_device"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_observation_spec"], [198, 1, 1, "", "transform_output_spec"], [198, 1, 1, "", "transform_reward_spec"], [198, 1, 1, "", "transform_state_spec"], [198, 1, 1, "", "type"], [198, 1, 1, "", "xpu"], [198, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[199, 1, 1, "", "add_module"], [199, 1, 1, "", "apply"], [199, 1, 1, "", "bfloat16"], [199, 1, 1, "", "buffers"], [199, 1, 1, "", "children"], [199, 1, 1, "", "close"], [199, 1, 1, "", "compile"], [199, 2, 1, "", "container"], [199, 1, 1, "", "cpu"], [199, 1, 1, "", "cuda"], [199, 1, 1, "", "double"], [199, 1, 1, "", "eval"], [199, 1, 1, "", "extra_repr"], [199, 1, 1, "", "float"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_buffer"], [199, 1, 1, "", "get_extra_state"], [199, 1, 1, "", "get_parameter"], [199, 1, 1, "", "get_submodule"], [199, 1, 1, "", "half"], [199, 1, 1, "", "init"], [199, 1, 1, "", "inv"], [199, 1, 1, "", "ipu"], [199, 1, 1, "", "load_state_dict"], [199, 1, 1, "", "modules"], [199, 1, 1, "", "mtia"], [199, 1, 1, "", "named_buffers"], [199, 1, 1, "", "named_children"], [199, 1, 1, "", "named_modules"], [199, 1, 1, "", "named_parameters"], [199, 1, 1, "", "parameters"], [199, 2, 1, "", "parent"], [199, 1, 1, "", "register_backward_hook"], [199, 1, 1, "", "register_buffer"], [199, 1, 1, "", "register_forward_hook"], [199, 1, 1, "", "register_forward_pre_hook"], [199, 1, 1, "", "register_full_backward_hook"], [199, 1, 1, "", "register_full_backward_pre_hook"], [199, 1, 1, "", "register_load_state_dict_post_hook"], [199, 1, 1, "", "register_load_state_dict_pre_hook"], [199, 1, 1, "", "register_module"], [199, 1, 1, "", "register_parameter"], [199, 1, 1, "", "register_state_dict_post_hook"], [199, 1, 1, "", "register_state_dict_pre_hook"], [199, 1, 1, "", "requires_grad_"], [199, 1, 1, "", "set_extra_state"], [199, 1, 1, "", "set_submodule"], [199, 1, 1, "", "share_memory"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "to_empty"], [199, 1, 1, "", "train"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_batch_size"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"], [199, 1, 1, "", "type"], [199, 1, 1, "", "xpu"], [199, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[203, 3, 1, "", "DreamerDecoder"], [204, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[210, 0, 1, "", "ActionDiscretizer"], [211, 0, 1, "", "ActionMask"], [212, 0, 1, "", "AutoResetEnv"], [213, 0, 1, "", "AutoResetTransform"], [214, 0, 1, "", "BatchSizeTransform"], [215, 0, 1, "", "BinarizeReward"], [216, 0, 1, "", "BurnInTransform"], [217, 0, 1, "", "CatFrames"], [218, 0, 1, "", "CatTensors"], [219, 0, 1, "", "CenterCrop"], [220, 0, 1, "", "ClipTransform"], [221, 0, 1, "", "Compose"], [222, 0, 1, "", "ConditionalPolicySwitch"], [223, 0, 1, "", "ConditionalSkip"], [224, 0, 1, "", "Crop"], [225, 0, 1, "", "DTypeCastTransform"], [226, 0, 1, "", "DeviceCastTransform"], [227, 0, 1, "", "DiscreteActionProjection"], [228, 0, 1, "", "DoubleToFloat"], [229, 0, 1, "", "EndOfLifeTransform"], [230, 0, 1, "", "ExcludeTransform"], [231, 0, 1, "", "FiniteTensorDictCheck"], [232, 0, 1, "", "FlattenObservation"], [233, 0, 1, "", "FrameSkipTransform"], [234, 0, 1, "", "GrayScale"], [235, 0, 1, "", "Hash"], [236, 0, 1, "", "InitTracker"], [237, 0, 1, "", "KLRewardTransform"], [238, 0, 1, "", "LineariseRewards"], [239, 0, 1, "", "MultiAction"], [240, 0, 1, "", "NoopResetEnv"], [241, 0, 1, "", "ObservationNorm"], [242, 0, 1, "", "ObservationTransform"], [243, 0, 1, "", "PermuteTransform"], [244, 0, 1, "", "PinMemoryTransform"], [245, 0, 1, "", "R3MTransform"], [246, 0, 1, "", "RandomCropTensorDict"], [247, 0, 1, "", "RemoveEmptySpecs"], [248, 0, 1, "", "RenameTransform"], [249, 0, 1, "", "Resize"], [250, 0, 1, "", "Reward2GoTransform"], [251, 0, 1, "", "RewardClipping"], [252, 0, 1, "", "RewardScaling"], [253, 0, 1, "", "RewardSum"], [254, 0, 1, "", "SelectTransform"], [255, 0, 1, "", "SignTransform"], [256, 0, 1, "", "SqueezeTransform"], [257, 0, 1, "", "Stack"], [258, 0, 1, "", "StepCounter"], [259, 0, 1, "", "TargetReturn"], [260, 0, 1, "", "TensorDictPrimer"], [261, 0, 1, "", "TimeMaxPool"], [262, 0, 1, "", "Timer"], [263, 0, 1, "", "ToTensorImage"], [264, 0, 1, "", "Tokenizer"], [265, 0, 1, "", "TrajCounter"], [266, 0, 1, "", "Transform"], [267, 0, 1, "", "TransformedEnv"], [268, 0, 1, "", "UnaryTransform"], [269, 0, 1, "", "UnsqueezeTransform"], [270, 0, 1, "", "VC1Transform"], [271, 0, 1, "", "VIPRewardTransform"], [272, 0, 1, "", "VIPTransform"], [273, 0, 1, "", "VecGymEnvTransform"], [274, 0, 1, "", "VecNorm"], [275, 0, 1, "", "VecNormV2"], [276, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[210, 0, 1, "", "SamplingStrategy"], [210, 1, 1, "", "inv"], [210, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[211, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[212, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[213, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "transform_env_batch_size"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[215, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[216, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_rb_transform_and_sampler"], [217, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[219, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[221, 1, 1, "", "append"], [221, 1, 1, "", "close"], [221, 1, 1, "", "forward"], [221, 1, 1, "", "init"], [221, 1, 1, "", "insert"], [221, 1, 1, "", "to"], [221, 1, 1, "", "transform_action_spec"], [221, 1, 1, "", "transform_env_batch_size"], [221, 1, 1, "", "transform_env_device"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_observation_spec"], [221, 1, 1, "", "transform_output_spec"], [221, 1, 1, "", "transform_reward_spec"], [221, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[222, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[223, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[224, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "transform_input_spec"], [225, 1, 1, "", "transform_observation_spec"], [225, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_action_spec"], [226, 1, 1, "", "transform_done_spec"], [226, 1, 1, "", "transform_env_device"], [226, 1, 1, "", "transform_input_spec"], [226, 1, 1, "", "transform_observation_spec"], [226, 1, 1, "", "transform_output_spec"], [226, 1, 1, "", "transform_reward_spec"], [226, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[227, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "register_keys"], [229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[231, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[233, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[234, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[235, 1, 1, "", "get_input_from_hash"], [235, 1, 1, "", "reproducible_hash"], [235, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[238, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[239, 1, 1, "", "transform_input_spec"], [239, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[241, 1, 1, "", "init_stats"], [241, 1, 1, "", "transform_action_spec"], [241, 1, 1, "", "transform_observation_spec"], [241, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[243, 1, 1, "", "transform_input_spec"], [243, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[244, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[245, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[246, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "transform_input_spec"], [247, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "transform_input_spec"], [248, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[249, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[250, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[251, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[252, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "transform_input_spec"], [253, 1, 1, "", "transform_observation_spec"], [253, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[255, 1, 1, "", "transform_observation_spec"], [255, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "transform_done_spec"], [257, 1, 1, "", "transform_input_spec"], [257, 1, 1, "", "transform_observation_spec"], [257, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "transform_input_spec"], [258, 1, 1, "", "transform_observation_spec"], [258, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "transform_input_spec"], [259, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "to"], [260, 1, 1, "", "transform_input_spec"], [260, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[263, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "transform_done_spec"], [264, 1, 1, "", "transform_input_spec"], [264, 1, 1, "", "transform_observation_spec"], [264, 1, 1, "", "transform_output_spec"], [264, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "load_state_dict"], [265, 1, 1, "", "state_dict"], [265, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[266, 1, 1, "", "clone"], [266, 1, 1, "", "close"], [266, 2, 1, "", "container"], [266, 1, 1, "", "forward"], [266, 1, 1, "", "init"], [266, 1, 1, "", "inv"], [266, 2, 1, "", "parent"], [266, 1, 1, "", "reset_parent"], [266, 1, 1, "", "set_container"], [266, 1, 1, "", "to"], [266, 1, 1, "", "transform_action_spec"], [266, 1, 1, "", "transform_done_spec"], [266, 1, 1, "", "transform_env_batch_size"], [266, 1, 1, "", "transform_env_device"], [266, 1, 1, "", "transform_input_spec"], [266, 1, 1, "", "transform_observation_spec"], [266, 1, 1, "", "transform_output_spec"], [266, 1, 1, "", "transform_reward_spec"], [266, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[267, 1, 1, "", "add_truncated_keys"], [267, 1, 1, "", "append_transform"], [267, 2, 1, "", "batch_locked"], [267, 2, 1, "", "batch_size"], [267, 1, 1, "", "empty_cache"], [267, 1, 1, "", "eval"], [267, 2, 1, "", "input_spec"], [267, 1, 1, "", "insert_transform"], [267, 1, 1, "", "load_state_dict"], [267, 2, 1, "", "output_spec"], [267, 1, 1, "", "rand_action"], [267, 1, 1, "", "set_missing_tolerance"], [267, 1, 1, "", "set_seed"], [267, 1, 1, "", "state_dict"], [267, 1, 1, "", "to"], [267, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[268, 1, 1, "", "transform_action_spec"], [268, 1, 1, "", "transform_done_spec"], [268, 1, 1, "", "transform_input_spec"], [268, 1, 1, "", "transform_observation_spec"], [268, 1, 1, "", "transform_output_spec"], [268, 1, 1, "", "transform_reward_spec"], [268, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[269, 1, 1, "", "transform_action_spec"], [269, 1, 1, "", "transform_observation_spec"], [269, 1, 1, "", "transform_reward_spec"], [269, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_noload_model"], [270, 1, 1, "", "to"], [270, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[272, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[274, 1, 1, "", "build_td_for_shared_vecnorm"], [274, 1, 1, "", "forward"], [274, 1, 1, "", "freeze"], [274, 1, 1, "", "frozen_copy"], [274, 1, 1, "", "get_extra_state"], [274, 2, 1, "", "loc"], [274, 2, 1, "", "scale"], [274, 1, 1, "", "set_extra_state"], [274, 2, 1, "", "standard_normal"], [274, 1, 1, "", "to_observation_norm"], [274, 1, 1, "", "transform_observation_spec"], [274, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[275, 1, 1, "", "clone"], [275, 1, 1, "id0", "freeze"], [275, 1, 1, "id1", "frozen_copy"], [275, 1, 1, "id2", "get_extra_state"], [275, 2, 1, "id3", "loc"], [275, 2, 1, "id4", "scale"], [275, 1, 1, "id5", "set_extra_state"], [275, 2, 1, "id6", "standard_normal"], [275, 1, 1, "", "to_observation_norm"], [275, 1, 1, "id7", "transform_observation_spec"], [275, 1, 1, "id8", "transform_output_spec"], [275, 1, 1, "id9", "transform_reward_spec"], [275, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[277, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[277, 1, 1, "", "add_module"], [277, 1, 1, "", "apply"], [277, 1, 1, "", "bfloat16"], [277, 1, 1, "", "buffers"], [277, 1, 1, "", "children"], [277, 1, 1, "", "close"], [277, 1, 1, "", "compile"], [277, 2, 1, "", "container"], [277, 1, 1, "", "cpu"], [277, 1, 1, "", "cuda"], [277, 1, 1, "", "double"], [277, 1, 1, "", "eval"], [277, 1, 1, "", "extra_repr"], [277, 1, 1, "", "float"], [277, 1, 1, "", "forward"], [277, 1, 1, "", "get_buffer"], [277, 1, 1, "", "get_extra_state"], [277, 1, 1, "", "get_parameter"], [277, 1, 1, "", "get_submodule"], [277, 1, 1, "", "half"], [277, 1, 1, "", "init"], [277, 1, 1, "", "inv"], [277, 1, 1, "", "ipu"], [277, 1, 1, "", "load_state_dict"], [277, 1, 1, "", "modules"], [277, 1, 1, "", "mtia"], [277, 2, 1, "", "n_steps"], [277, 1, 1, "", "named_buffers"], [277, 1, 1, "", "named_children"], [277, 1, 1, "", "named_modules"], [277, 1, 1, "", "named_parameters"], [277, 1, 1, "", "parameters"], [277, 2, 1, "", "parent"], [277, 1, 1, "", "register_backward_hook"], [277, 1, 1, "", "register_buffer"], [277, 1, 1, "", "register_forward_hook"], [277, 1, 1, "", "register_forward_pre_hook"], [277, 1, 1, "", "register_full_backward_hook"], [277, 1, 1, "", "register_full_backward_pre_hook"], [277, 1, 1, "", "register_load_state_dict_post_hook"], [277, 1, 1, "", "register_load_state_dict_pre_hook"], [277, 1, 1, "", "register_module"], [277, 1, 1, "", "register_parameter"], [277, 1, 1, "", "register_state_dict_post_hook"], [277, 1, 1, "", "register_state_dict_pre_hook"], [277, 1, 1, "", "requires_grad_"], [277, 1, 1, "", "set_extra_state"], [277, 1, 1, "", "set_submodule"], [277, 1, 1, "", "share_memory"], [277, 1, 1, "", "state_dict"], [277, 1, 1, "", "to"], [277, 1, 1, "", "to_empty"], [277, 1, 1, "", "train"], [277, 1, 1, "", "transform_action_spec"], [277, 1, 1, "", "transform_done_spec"], [277, 1, 1, "", "transform_env_batch_size"], [277, 1, 1, "", "transform_env_device"], [277, 1, 1, "", "transform_input_spec"], [277, 1, 1, "", "transform_observation_spec"], [277, 1, 1, "", "transform_output_spec"], [277, 1, 1, "", "transform_reward_spec"], [277, 1, 1, "", "transform_state_spec"], [277, 1, 1, "", "type"], [277, 1, 1, "", "xpu"], [277, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[278, 1, 1, "", "get_class_that_defined_method"], [278, 1, 1, "", "import_module"], [278, 1, 1, "", "module_set"], [278, 1, 1, "", "reset"]], "torchrl.modules": [[279, 0, 1, "", "AdditiveGaussianModule"], [280, 0, 1, "", "BatchRenorm1d"], [281, 0, 1, "", "CEMPlanner"], [282, 0, 1, "", "ConsistentDropout"], [283, 0, 1, "", "ConsistentDropoutModule"], [284, 0, 1, "", "Conv3dNet"], [285, 0, 1, "", "ConvNet"], [286, 0, 1, "", "DTActor"], [287, 0, 1, "", "DdpgCnnActor"], [288, 0, 1, "", "DdpgCnnQNet"], [289, 0, 1, "", "DdpgMlpActor"], [290, 0, 1, "", "DdpgMlpQNet"], [291, 0, 1, "", "DecisionTransformer"], [292, 0, 1, "", "Delta"], [293, 0, 1, "", "DistributionalDQNnet"], [294, 0, 1, "", "DistributionalQValueHook"], [295, 0, 1, "", "DreamerActor"], [296, 0, 1, "", "DuelingCnnDQNet"], [297, 0, 1, "", "EGreedyModule"], [298, 0, 1, "", "GRU"], [299, 0, 1, "", "GRUCell"], [300, 0, 1, "", "GRUModule"], [301, 0, 1, "", "IndependentNormal"], [302, 0, 1, "", "LSTM"], [303, 0, 1, "", "LSTMCell"], [304, 0, 1, "", "LSTMModule"], [305, 0, 1, "", "MLP"], [306, 0, 1, "", "MPCPlannerBase"], [307, 0, 1, "", "MPPIPlanner"], [308, 0, 1, "", "MaskedCategorical"], [309, 0, 1, "", "MaskedOneHotCategorical"], [310, 0, 1, "", "MultiAgentConvNet"], [311, 0, 1, "", "MultiAgentMLP"], [312, 0, 1, "", "MultiAgentNetBase"], [313, 0, 1, "", "NoisyLazyLinear"], [314, 0, 1, "", "NoisyLinear"], [315, 0, 1, "", "ObsDecoder"], [316, 0, 1, "", "ObsEncoder"], [317, 0, 1, "", "OneHotCategorical"], [318, 0, 1, "", "OneHotOrdinal"], [319, 0, 1, "", "OnlineDTActor"], [320, 0, 1, "", "Ordinal"], [321, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [322, 0, 1, "", "QMixer"], [323, 0, 1, "", "QValueHook"], [324, 0, 1, "", "RSSMPosterior"], [325, 0, 1, "", "RSSMPrior"], [326, 0, 1, "", "Squeeze2dLayer"], [327, 0, 1, "", "SqueezeLayer"], [328, 0, 1, "", "TanhDelta"], [329, 0, 1, "", "TanhNormal"], [330, 0, 1, "", "TruncatedNormal"], [331, 0, 1, "", "VDNMixer"], [332, 0, 1, "", "VmapModule"], [340, 0, 1, "", "recurrent_mode"], [341, 0, 1, "", "reset_noise"], [342, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[280, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[281, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[282, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[284, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[285, 1, 1, "", "default_atari_dqn"], [285, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[286, 1, 1, "", "default_config"], [286, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[287, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[288, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[289, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[290, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[291, 0, 1, "", "DTConfig"], [291, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[292, 1, 1, "", "expand"], [292, 1, 1, "", "log_prob"], [292, 2, 1, "", "mean"], [292, 2, 1, "", "mode"], [292, 1, 1, "", "rsample"], [292, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[293, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[295, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[296, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "step"]], "torchrl.modules.GRU": [[298, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[299, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "make_cudnn_based"], [300, 1, 1, "", "make_python_based"], [300, 1, 1, "id0", "make_tensordict_primer"], [300, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[301, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[302, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[303, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "make_cudnn_based"], [304, 1, 1, "", "make_python_based"], [304, 1, 1, "id0", "make_tensordict_primer"], [304, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[305, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[307, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[308, 1, 1, "", "entropy"], [308, 1, 1, "", "log_prob"], [308, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[309, 1, 1, "", "log_prob"], [309, 2, 1, "", "mode"], [309, 1, 1, "", "rsample"], [309, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[312, 1, 1, "", "forward"], [312, 1, 1, "", "from_stateful_net"], [312, 1, 1, "", "get_stateful_net"], [312, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[313, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[315, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[316, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[317, 1, 1, "", "entropy"], [317, 1, 1, "", "log_prob"], [317, 2, 1, "", "mode"], [317, 1, 1, "", "rsample"], [317, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[319, 1, 1, "", "default_config"], [319, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[322, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[324, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[325, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[327, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[328, 2, 1, "", "mean"], [328, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[329, 1, 1, "", "get_mode"], [329, 2, 1, "", "mean"], [329, 2, 1, "", "mode"], [329, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[330, 1, 1, "", "log_prob"], [330, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[331, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[332, 1, 1, "", "forward"]], "torchrl.modules.llm": [[333, 0, 1, "", "CategoricalSequential"], [334, 0, 1, "", "LLMOnDevice"], [335, 0, 1, "", "TransformersWrapper"], [336, 0, 1, "", "make_vllm_worker"], [337, 0, 1, "", "stateless_init_process_group"], [338, 0, 1, "", "vLLMWorker"], [339, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.CategoricalSequential": [[333, 1, 1, "", "add_module"], [333, 1, 1, "", "apply"], [333, 1, 1, "", "bfloat16"], [333, 1, 1, "", "buffers"], [333, 1, 1, "", "children"], [333, 1, 1, "", "compile"], [333, 1, 1, "", "cpu"], [333, 1, 1, "", "cuda"], [333, 1, 1, "", "double"], [333, 1, 1, "", "eval"], [333, 1, 1, "", "extra_repr"], [333, 1, 1, "", "float"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "get_buffer"], [333, 1, 1, "", "get_extra_state"], [333, 1, 1, "", "get_parameter"], [333, 1, 1, "", "get_submodule"], [333, 1, 1, "", "half"], [333, 1, 1, "", "ipu"], [333, 1, 1, "", "is_tdmodule_compatible"], [333, 1, 1, "", "load_state_dict"], [333, 1, 1, "", "modules"], [333, 1, 1, "", "mtia"], [333, 1, 1, "", "named_buffers"], [333, 1, 1, "", "named_children"], [333, 1, 1, "", "named_modules"], [333, 1, 1, "", "named_parameters"], [333, 1, 1, "", "parameters"], [333, 1, 1, "", "register_backward_hook"], [333, 1, 1, "", "register_buffer"], [333, 1, 1, "", "register_forward_hook"], [333, 1, 1, "", "register_forward_pre_hook"], [333, 1, 1, "", "register_full_backward_hook"], [333, 1, 1, "", "register_full_backward_pre_hook"], [333, 1, 1, "", "register_load_state_dict_post_hook"], [333, 1, 1, "", "register_load_state_dict_pre_hook"], [333, 1, 1, "", "register_module"], [333, 1, 1, "", "register_parameter"], [333, 1, 1, "", "register_state_dict_post_hook"], [333, 1, 1, "", "register_state_dict_pre_hook"], [333, 1, 1, "", "requires_grad_"], [333, 1, 1, "", "reset_out_keys"], [333, 1, 1, "", "reset_parameters_recursive"], [333, 1, 1, "", "select_out_keys"], [333, 1, 1, "", "set_extra_state"], [333, 1, 1, "", "set_submodule"], [333, 1, 1, "", "share_memory"], [333, 1, 1, "", "state_dict"], [333, 1, 1, "", "to"], [333, 1, 1, "", "to_empty"], [333, 1, 1, "", "train"], [333, 1, 1, "", "type"], [333, 1, 1, "", "xpu"], [333, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.TransformersWrapper": [[335, 1, 1, "", "add_module"], [335, 1, 1, "", "apply"], [335, 1, 1, "", "bfloat16"], [335, 1, 1, "", "buffers"], [335, 1, 1, "", "children"], [335, 1, 1, "", "compile"], [335, 1, 1, "", "cpu"], [335, 1, 1, "", "cuda"], [335, 1, 1, "", "double"], [335, 1, 1, "", "eval"], [335, 1, 1, "", "extra_repr"], [335, 1, 1, "", "float"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "get_buffer"], [335, 1, 1, "", "get_extra_state"], [335, 1, 1, "", "get_parameter"], [335, 1, 1, "", "get_submodule"], [335, 1, 1, "", "half"], [335, 1, 1, "", "ipu"], [335, 1, 1, "", "is_tdmodule_compatible"], [335, 1, 1, "", "load_state_dict"], [335, 1, 1, "", "modules"], [335, 1, 1, "", "mtia"], [335, 1, 1, "", "named_buffers"], [335, 1, 1, "", "named_children"], [335, 1, 1, "", "named_modules"], [335, 1, 1, "", "named_parameters"], [335, 1, 1, "", "parameters"], [335, 1, 1, "", "register_backward_hook"], [335, 1, 1, "", "register_buffer"], [335, 1, 1, "", "register_forward_hook"], [335, 1, 1, "", "register_forward_pre_hook"], [335, 1, 1, "", "register_full_backward_hook"], [335, 1, 1, "", "register_full_backward_pre_hook"], [335, 1, 1, "", "register_load_state_dict_post_hook"], [335, 1, 1, "", "register_load_state_dict_pre_hook"], [335, 1, 1, "", "register_module"], [335, 1, 1, "", "register_parameter"], [335, 1, 1, "", "register_state_dict_post_hook"], [335, 1, 1, "", "register_state_dict_pre_hook"], [335, 1, 1, "", "requires_grad_"], [335, 1, 1, "", "reset_out_keys"], [335, 1, 1, "", "reset_parameters_recursive"], [335, 1, 1, "", "select_out_keys"], [335, 1, 1, "", "set_extra_state"], [335, 1, 1, "", "set_submodule"], [335, 1, 1, "", "share_memory"], [335, 1, 1, "", "state_dict"], [335, 1, 1, "", "to"], [335, 1, 1, "", "to_empty"], [335, 1, 1, "", "train"], [335, 1, 1, "", "type"], [335, 1, 1, "", "xpu"], [335, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWorker": [[338, 1, 1, "", "check_weights_changed"]], "torchrl.modules.llm.vLLMWrapper": [[339, 1, 1, "", "add_module"], [339, 1, 1, "", "apply"], [339, 1, 1, "", "bfloat16"], [339, 1, 1, "", "buffers"], [339, 1, 1, "", "children"], [339, 1, 1, "", "compile"], [339, 1, 1, "", "cpu"], [339, 1, 1, "", "cuda"], [339, 1, 1, "", "double"], [339, 1, 1, "", "eval"], [339, 1, 1, "", "extra_repr"], [339, 1, 1, "", "float"], [339, 1, 1, "", "forward"], [339, 1, 1, "", "get_buffer"], [339, 1, 1, "", "get_extra_state"], [339, 1, 1, "", "get_parameter"], [339, 1, 1, "", "get_submodule"], [339, 1, 1, "", "half"], [339, 1, 1, "", "ipu"], [339, 1, 1, "", "is_tdmodule_compatible"], [339, 1, 1, "", "load_state_dict"], [339, 1, 1, "", "modules"], [339, 1, 1, "", "mtia"], [339, 1, 1, "", "named_buffers"], [339, 1, 1, "", "named_children"], [339, 1, 1, "", "named_modules"], [339, 1, 1, "", "named_parameters"], [339, 1, 1, "", "parameters"], [339, 1, 1, "", "register_backward_hook"], [339, 1, 1, "", "register_buffer"], [339, 1, 1, "", "register_forward_hook"], [339, 1, 1, "", "register_forward_pre_hook"], [339, 1, 1, "", "register_full_backward_hook"], [339, 1, 1, "", "register_full_backward_pre_hook"], [339, 1, 1, "", "register_load_state_dict_post_hook"], [339, 1, 1, "", "register_load_state_dict_pre_hook"], [339, 1, 1, "", "register_module"], [339, 1, 1, "", "register_parameter"], [339, 1, 1, "", "register_state_dict_post_hook"], [339, 1, 1, "", "register_state_dict_pre_hook"], [339, 1, 1, "", "requires_grad_"], [339, 1, 1, "", "reset_out_keys"], [339, 1, 1, "", "reset_parameters_recursive"], [339, 1, 1, "", "select_out_keys"], [339, 1, 1, "", "set_extra_state"], [339, 1, 1, "", "set_submodule"], [339, 1, 1, "", "share_memory"], [339, 1, 1, "", "state_dict"], [339, 1, 1, "", "to"], [339, 1, 1, "", "to_empty"], [339, 1, 1, "", "train"], [339, 1, 1, "", "type"], [339, 1, 1, "", "xpu"], [339, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[343, 0, 1, "", "Actor"], [344, 0, 1, "", "ActorCriticOperator"], [345, 0, 1, "", "ActorCriticWrapper"], [346, 0, 1, "", "ActorValueOperator"], [347, 0, 1, "", "DecisionTransformerInferenceWrapper"], [348, 0, 1, "", "DistributionalQValueActor"], [349, 0, 1, "", "DistributionalQValueModule"], [350, 0, 1, "", "LMHeadActorValueOperator"], [351, 0, 1, "", "MultiStepActorWrapper"], [352, 0, 1, "", "ProbabilisticActor"], [353, 0, 1, "", "QValueActor"], [354, 0, 1, "", "QValueModule"], [355, 0, 1, "", "SafeModule"], [356, 0, 1, "", "SafeProbabilisticModule"], [357, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [358, 0, 1, "", "SafeSequential"], [359, 0, 1, "", "TanhModule"], [360, 0, 1, "", "ValueOperator"], [361, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[344, 1, 1, "", "get_critic_operator"], [344, 1, 1, "", "get_policy_head"], [344, 1, 1, "", "get_value_head"], [344, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[345, 1, 1, "", "get_policy_head"], [345, 1, 1, "", "get_policy_operator"], [345, 1, 1, "", "get_value_head"], [345, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[346, 1, 1, "", "get_policy_head"], [346, 1, 1, "", "get_policy_operator"], [346, 1, 1, "", "get_value_head"], [346, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[347, 1, 1, "", "forward"], [347, 1, 1, "", "mask_context"], [347, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[349, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[351, 1, 1, "", "forward"], [351, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[354, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[355, 1, 1, "", "random"], [355, 1, 1, "", "random_sample"], [355, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[356, 1, 1, "", "random"], [356, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[359, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[361, 1, 1, "", "get_reward_operator"], [361, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[362, 0, 1, "", "biased_softplus"], [363, 0, 1, "", "get_primers_from_module"], [364, 0, 1, "", "inv_softplus"], [365, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[362, 1, 1, "", "forward"]], "torchrl.objectives": [[366, 0, 1, "", "A2CLoss"], [367, 0, 1, "", "CQLLoss"], [368, 0, 1, "", "ClipPPOLoss"], [369, 0, 1, "", "CrossQLoss"], [370, 0, 1, "", "DDPGLoss"], [371, 0, 1, "", "DQNLoss"], [372, 0, 1, "", "DTLoss"], [373, 0, 1, "", "DiscreteCQLLoss"], [374, 0, 1, "", "DiscreteIQLLoss"], [375, 0, 1, "", "DiscreteSACLoss"], [376, 0, 1, "", "DistributionalDQNLoss"], [377, 0, 1, "", "DreamerActorLoss"], [378, 0, 1, "", "DreamerModelLoss"], [379, 0, 1, "", "DreamerValueLoss"], [380, 0, 1, "", "GAILLoss"], [381, 0, 1, "", "HardUpdate"], [382, 0, 1, "", "IQLLoss"], [383, 0, 1, "", "KLPENPPOLoss"], [384, 0, 1, "", "LossModule"], [385, 0, 1, "", "OnlineDTLoss"], [386, 0, 1, "", "PPOLoss"], [387, 0, 1, "", "REDQLoss"], [388, 0, 1, "", "ReinforceLoss"], [389, 0, 1, "", "SACLoss"], [390, 0, 1, "", "SoftUpdate"], [391, 0, 1, "", "TD3BCLoss"], [392, 0, 1, "", "TD3Loss"], [393, 0, 1, "", "ValueEstimators"], [394, 0, 1, "", "default_value_kwargs"], [395, 0, 1, "", "distance_loss"], [396, 0, 1, "", "group_optimizers"], [397, 0, 1, "", "hold_out_net"], [398, 0, 1, "", "hold_out_params"], [403, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[366, 4, 1, "", "default_keys"], [366, 1, 1, "", "forward"], [366, 2, 1, "", "functional"], [366, 1, 1, "", "loss_critic"], [366, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[367, 4, 1, "", "default_keys"], [367, 1, 1, "", "forward"], [367, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[368, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[369, 1, 1, "", "actor_loss"], [369, 1, 1, "", "alpha_loss"], [369, 4, 1, "", "default_keys"], [369, 1, 1, "", "forward"], [369, 1, 1, "", "load_state_dict"], [369, 1, 1, "", "make_value_estimator"], [369, 1, 1, "", "maybe_init_target_entropy"], [369, 1, 1, "", "qvalue_loss"], [369, 1, 1, "", "set_keys"], [369, 1, 1, "", "state_dict"], [369, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[370, 4, 1, "", "default_keys"], [370, 1, 1, "", "forward"], [370, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[371, 4, 1, "", "default_keys"], [371, 1, 1, "", "forward"], [371, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[372, 4, 1, "", "default_keys"], [372, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[373, 4, 1, "", "default_keys"], [373, 1, 1, "", "forward"], [373, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[374, 4, 1, "", "default_keys"], [374, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[375, 4, 1, "", "default_keys"], [375, 1, 1, "", "forward"], [375, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[376, 4, 1, "", "default_keys"], [376, 1, 1, "", "forward"], [376, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[377, 4, 1, "", "default_keys"], [377, 1, 1, "", "forward"], [377, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[378, 4, 1, "", "default_keys"], [378, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[379, 4, 1, "", "default_keys"], [379, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[380, 4, 1, "", "default_keys"], [380, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[382, 4, 1, "", "default_keys"], [382, 1, 1, "", "forward"], [382, 1, 1, "", "loss_value_diff"], [382, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[383, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[384, 1, 1, "", "convert_to_functional"], [384, 1, 1, "", "forward"], [384, 1, 1, "", "from_stateful_net"], [384, 2, 1, "", "functional"], [384, 1, 1, "", "get_stateful_net"], [384, 1, 1, "", "make_value_estimator"], [384, 1, 1, "", "named_parameters"], [384, 1, 1, "", "parameters"], [384, 1, 1, "", "reset_parameters_recursive"], [384, 1, 1, "", "set_keys"], [384, 2, 1, "", "value_estimator"], [384, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[385, 4, 1, "", "default_keys"], [385, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[386, 4, 1, "", "default_keys"], [386, 1, 1, "", "forward"], [386, 2, 1, "", "functional"], [386, 1, 1, "", "loss_critic"], [386, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[387, 4, 1, "", "default_keys"], [387, 1, 1, "", "forward"], [387, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[388, 4, 1, "", "default_keys"], [388, 1, 1, "", "forward"], [388, 2, 1, "", "functional"], [388, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[389, 4, 1, "", "default_keys"], [389, 1, 1, "", "forward"], [389, 1, 1, "", "load_state_dict"], [389, 1, 1, "", "make_value_estimator"], [389, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[391, 1, 1, "", "actor_loss"], [391, 4, 1, "", "default_keys"], [391, 1, 1, "", "forward"], [391, 1, 1, "", "make_value_estimator"], [391, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[392, 4, 1, "", "default_keys"], [392, 1, 1, "", "forward"], [392, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[399, 0, 1, "", "GRPOLoss"], [400, 0, 1, "", "GRPOLossOutput"], [401, 0, 1, "", "MCAdvantage"]], "torchrl.objectives.llm.GRPOLoss": [[399, 1, 1, "", "add_module"], [399, 1, 1, "", "apply"], [399, 1, 1, "", "bfloat16"], [399, 1, 1, "", "buffers"], [399, 1, 1, "", "children"], [399, 1, 1, "", "compile"], [399, 1, 1, "", "convert_to_functional"], [399, 1, 1, "", "cpu"], [399, 1, 1, "", "cuda"], [399, 4, 1, "", "default_keys"], [399, 1, 1, "", "double"], [399, 1, 1, "", "eval"], [399, 1, 1, "", "extra_repr"], [399, 1, 1, "", "float"], [399, 1, 1, "", "forward"], [399, 1, 1, "", "from_stateful_net"], [399, 2, 1, "", "functional"], [399, 1, 1, "", "get_buffer"], [399, 1, 1, "", "get_extra_state"], [399, 1, 1, "", "get_parameter"], [399, 1, 1, "", "get_stateful_net"], [399, 1, 1, "", "get_submodule"], [399, 1, 1, "", "half"], [399, 1, 1, "", "ipu"], [399, 1, 1, "", "is_tdmodule_compatible"], [399, 1, 1, "", "load_state_dict"], [399, 1, 1, "", "loss_critic"], [399, 1, 1, "", "make_value_estimator"], [399, 1, 1, "", "modules"], [399, 1, 1, "", "mtia"], [399, 1, 1, "", "named_buffers"], [399, 1, 1, "", "named_children"], [399, 1, 1, "", "named_modules"], [399, 1, 1, "", "named_parameters"], [399, 1, 1, "", "parameters"], [399, 1, 1, "", "register_backward_hook"], [399, 1, 1, "", "register_buffer"], [399, 1, 1, "", "register_forward_hook"], [399, 1, 1, "", "register_forward_pre_hook"], [399, 1, 1, "", "register_full_backward_hook"], [399, 1, 1, "", "register_full_backward_pre_hook"], [399, 1, 1, "", "register_load_state_dict_post_hook"], [399, 1, 1, "", "register_load_state_dict_pre_hook"], [399, 1, 1, "", "register_module"], [399, 1, 1, "", "register_parameter"], [399, 1, 1, "", "register_state_dict_post_hook"], [399, 1, 1, "", "register_state_dict_pre_hook"], [399, 1, 1, "", "requires_grad_"], [399, 1, 1, "", "reset_out_keys"], [399, 1, 1, "", "reset_parameters_recursive"], [399, 1, 1, "", "select_out_keys"], [399, 1, 1, "", "set_extra_state"], [399, 1, 1, "", "set_keys"], [399, 1, 1, "", "set_submodule"], [399, 1, 1, "", "share_memory"], [399, 1, 1, "", "state_dict"], [399, 1, 1, "", "to"], [399, 1, 1, "", "to_empty"], [399, 1, 1, "", "train"], [399, 1, 1, "", "type"], [399, 2, 1, "", "value_estimator"], [399, 2, 1, "", "vmap_randomness"], [399, 1, 1, "", "xpu"], [399, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[400, 2, 1, "", "device"], [400, 1, 1, "", "dumps"], [400, 1, 1, "", "fields"], [400, 1, 1, "", "from_tensordict"], [400, 1, 1, "", "get"], [400, 1, 1, "", "load"], [400, 1, 1, "", "load_"], [400, 1, 1, "", "load_memmap"], [400, 1, 1, "", "load_state_dict"], [400, 1, 1, "", "memmap"], [400, 1, 1, "", "memmap_"], [400, 1, 1, "", "memmap_like"], [400, 1, 1, "", "memmap_refresh_"], [400, 1, 1, "", "save"], [400, 1, 1, "", "set"], [400, 1, 1, "", "state_dict"], [400, 1, 1, "", "to_tensordict"], [400, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[401, 1, 1, "", "add_module"], [401, 1, 1, "", "apply"], [401, 1, 1, "", "bfloat16"], [401, 1, 1, "", "buffers"], [401, 1, 1, "", "children"], [401, 1, 1, "", "close"], [401, 1, 1, "", "compile"], [401, 2, 1, "", "container"], [401, 1, 1, "", "cpu"], [401, 1, 1, "", "cuda"], [401, 1, 1, "", "double"], [401, 1, 1, "", "eval"], [401, 1, 1, "", "extra_repr"], [401, 1, 1, "", "float"], [401, 1, 1, "", "forward"], [401, 1, 1, "", "get_buffer"], [401, 1, 1, "", "get_extra_state"], [401, 1, 1, "", "get_parameter"], [401, 1, 1, "", "get_submodule"], [401, 1, 1, "", "half"], [401, 1, 1, "", "init"], [401, 1, 1, "", "inv"], [401, 1, 1, "", "ipu"], [401, 1, 1, "", "load_state_dict"], [401, 1, 1, "", "modules"], [401, 1, 1, "", "mtia"], [401, 1, 1, "", "named_buffers"], [401, 1, 1, "", "named_children"], [401, 1, 1, "", "named_modules"], [401, 1, 1, "", "named_parameters"], [401, 1, 1, "", "parameters"], [401, 2, 1, "", "parent"], [401, 1, 1, "", "register_backward_hook"], [401, 1, 1, "", "register_buffer"], [401, 1, 1, "", "register_forward_hook"], [401, 1, 1, "", "register_forward_pre_hook"], [401, 1, 1, "", "register_full_backward_hook"], [401, 1, 1, "", "register_full_backward_pre_hook"], [401, 1, 1, "", "register_load_state_dict_post_hook"], [401, 1, 1, "", "register_load_state_dict_pre_hook"], [401, 1, 1, "", "register_module"], [401, 1, 1, "", "register_parameter"], [401, 1, 1, "", "register_state_dict_post_hook"], [401, 1, 1, "", "register_state_dict_pre_hook"], [401, 1, 1, "", "requires_grad_"], [401, 1, 1, "", "set_extra_state"], [401, 1, 1, "", "set_submodule"], [401, 1, 1, "", "share_memory"], [401, 1, 1, "", "state_dict"], [401, 1, 1, "", "to"], [401, 1, 1, "", "to_empty"], [401, 1, 1, "", "train"], [401, 1, 1, "", "transform_action_spec"], [401, 1, 1, "", "transform_done_spec"], [401, 1, 1, "", "transform_env_batch_size"], [401, 1, 1, "", "transform_env_device"], [401, 1, 1, "", "transform_input_spec"], [401, 1, 1, "", "transform_observation_spec"], [401, 1, 1, "", "transform_output_spec"], [401, 1, 1, "", "transform_reward_spec"], [401, 1, 1, "", "transform_state_spec"], [401, 1, 1, "", "type"], [401, 1, 1, "", "xpu"], [401, 1, 1, "", "zero_grad"]], "torchrl.objectives.multiagent": [[402, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[402, 4, 1, "", "default_keys"], [402, 1, 1, "", "forward"], [402, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[404, 0, 1, "", "GAE"], [405, 0, 1, "", "TD0Estimator"], [406, 0, 1, "", "TD1Estimator"], [407, 0, 1, "", "TDLambdaEstimator"], [408, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[404, 1, 1, "", "forward"], [404, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[405, 1, 1, "", "forward"], [405, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[406, 1, 1, "", "forward"], [406, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[407, 1, 1, "", "forward"], [407, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[408, 4, 1, "", "default_keys"], [408, 1, 1, "", "forward"], [408, 1, 1, "", "set_keys"], [408, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[409, 0, 1, "", "generalized_advantage_estimate"], [410, 0, 1, "", "reward2go"], [411, 0, 1, "", "td0_advantage_estimate"], [412, 0, 1, "", "td0_return_estimate"], [413, 0, 1, "", "td1_advantage_estimate"], [414, 0, 1, "", "td1_return_estimate"], [415, 0, 1, "", "td_lambda_advantage_estimate"], [416, 0, 1, "", "td_lambda_return_estimate"], [417, 0, 1, "", "vec_generalized_advantage_estimate"], [418, 0, 1, "", "vec_td1_advantage_estimate"], [419, 0, 1, "", "vec_td1_return_estimate"], [420, 0, 1, "", "vec_td_lambda_advantage_estimate"], [421, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[422, 3, 1, "", "PixelRenderTransform"], [423, 3, 1, "", "TensorDictRecorder"], [424, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[425, 3, 1, "", "Logger"], [427, 3, 1, "", "generate_exp_name"], [428, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[426, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[429, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[430, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[431, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[433, 0, 1, "", "BatchSubSampler"], [434, 0, 1, "", "ClearCudaCache"], [435, 0, 1, "", "CountFramesLog"], [436, 0, 1, "", "LogScalar"], [437, 0, 1, "", "LogValidationReward"], [438, 0, 1, "", "OptimizerHook"], [439, 0, 1, "", "ReplayBufferTrainer"], [440, 0, 1, "", "RewardNormalizer"], [441, 0, 1, "", "SelectKeys"], [442, 0, 1, "", "Trainer"], [443, 0, 1, "", "TrainerHookBase"], [444, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[433, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[434, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[435, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[436, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[437, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[438, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[439, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[440, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[441, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[442, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[443, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[444, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[445, 3, 1, "", "correct_for_frame_skip"], [446, 3, 1, "", "get_stats_random_rollout"], [447, 3, 1, "", "make_collector_offpolicy"], [448, 3, 1, "", "make_collector_onpolicy"], [449, 3, 1, "", "make_dqn_loss"], [450, 3, 1, "", "make_replay_buffer"], [451, 3, 1, "", "make_target_updater"], [452, 3, 1, "", "make_trainer"], [453, 3, 1, "", "parallel_env_constructor"], [454, 3, 1, "", "sync_async_collector"], [455, 3, 1, "", "sync_sync_collector"], [456, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 461, 462, 463, 464, 466, 467, 468, 470, 472, 478, 480, 481, 482, 486, 487], "instal": [0, 6, 7, 478, 486], "get": [0, 471, 472, 473, 474, 475, 476], "start": [0, 471, 472, 473, 474, 475, 476, 478], "tutori": [0, 468, 480, 481], "basic": [0, 478, 484], "intermedi": [0, 8], "advanc": 0, "refer": [0, 458], "knowledg": [0, 459], "base": [0, 2, 7, 459, 470], "indic": 0, "tabl": 0, "collector": [1, 460, 466, 467, 468, 469, 474, 476, 480, 481, 486], "packag": [1, 2, 3, 461, 462, 463, 464], "batch": [1, 3, 466, 482, 484], "size": [1, 3, 466, 484], "polici": [1, 2, 4, 462, 466, 468, 469, 470, 472, 476, 479, 480, 481, 482], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 461], "environ": [1, 3, 4, 6, 7, 460, 466, 467, 468, 469, 471, 476, 478, 479, 480, 481, 482, 486, 487], "send": 1, "receiv": 1, "model": [1, 2, 4, 461, 466, 467, 469, 470, 473, 483, 486], "weightupdat": 1, "extend": 1, "updat": [1, 466], "class": [1, 3, 460, 482, 486], "replai": [1, 2, 3, 466, 467, 468, 469, 474, 476, 480, 481, 484, 486], "buffer": [1, 2, 3, 466, 467, 468, 469, 474, 476, 480, 481, 484, 486], "interoper": 1, "run": [1, 470, 471, 487], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 460, 466, 467, 468, 474, 476, 480, 481, 486], "helper": [1, 3, 478], "function": [1, 4, 462, 467, 468, 473, 480, 481, 486], "compos": [2, 221], "support": 2, "type": 2, "choos": 2, "storag": [2, 118, 466, 474, 484], "sampl": [2, 484], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 467, 484], "trajectori": [2, 484], "checkpoint": [2, 463], "episod": [2, 4], "format": 2, "ted": [2, 471], "The": [2, 466], "rational": 2, "behind": 2, "structur": [2, 460, 484], "A": [2, 467, 484], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 461, 484, 486], "special": [2, 472, 486], "case": 2, "footnot": 2, "multi": [2, 3, 461, 462, 479, 480, 481], "agent": [2, 3, 4, 461, 462, 480, 481], "present": 2, "rnn": 2, "transform": [2, 3, 266, 460, 466, 468, 471, 480, 481, 482, 484, 486, 487], "step": [2, 3, 466, 468, 471, 474, 478, 480, 481, 484, 487], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 83], "numer": 2, "subclass": [2, 3], "categor": [2, 39], "tree": [2, 85], "forest": 2, "tensordictmap": [2, 78], "mctsforest": [2, 51], "larg": 2, "languag": 2, "reinforc": [2, 462, 468, 480, 481], "learn": [2, 4, 461, 468, 480, 481], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 460, 461, 462, 463, 480], "env": [3, 482, 486, 487], "spec": [3, 482, 487], "lock": 3, "method": [3, 466], "partial": 3, "reset": [3, 482, 487], "vector": [3, 486], "async": [3, 486], "exampl": [3, 11, 467, 484], "custom": [3, 11, 482, 484], "nativ": 3, "auto": 3, "dynam": [3, 4, 484], "forward": [3, 4, 466], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 484], "expos": 3, "outsid": 3, "world": 3, "design": [3, 476], "your": [3, 4, 6, 466, 470, 476, 482], "own": [3, 476], "tip": 3, "us": [3, 4, 6, 9, 462, 469, 483, 484, 486], "clone": [3, 7], "mask": 3, "action": [3, 4, 462, 469, 482], "record": [3, 463, 466, 475], "video": [3, 11, 475], "domain": [3, 461], "specif": [3, 461, 479], "librari": [3, 486], "thing": [4, 466, 482], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 471, 473, 486], "gener": [4, 11, 461], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 461], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 466, 467, 473, 476], "return": [4, 462], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 486], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 479], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 466, 467, 468], "standard": 4, "explor": [4, 461, 466, 467, 472], "valu": [4, 461, 462, 466, 468, 469, 472], "loss": [4, 466, 467, 468, 469, 476, 480, 481], "earli": 4, "train": [4, 8, 462, 466, 468, 469, 470, 473, 476, 480, 481, 482], "roughli": 4, "uniformli": 4, "random": [4, 462, 480, 481], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 467], "increas": 4, "an": [4, 468, 469, 471, 482], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 466], "space": 4, "effect": [4, 482], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 470], "gym": [5, 486, 487], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 466], "render": [7, 11, 476, 480, 481, 487], "all": 7, "new": 7, "bindindg": 7, "2": [7, 478], "1": [7, 478], "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 466], "pytorch": [8, 9, 10, 470], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 482], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multiprocessedweightupdat": 14, "multisyncdatacollector": 15, "multiasyncdatacollector": 16, "rayweightupdat": 17, "syncdatacollector": 18, "vanillaweightupdat": 19, "weightupdaterbas": 20, "asyncdatacollector": 21, "distributeddatacollector": 22, "distributedsyncdatacollector": 23, "distributedweightupdat": 24, "rpcdatacollector": 25, "rpcweightupdat": 26, "raycollector": 27, "submitit_delayed_launch": 28, "llmcollector": 29, "rayllmcollector": 30, "vllmupdat": 31, "split_trajectori": 32, "adaptiveklcontrol": 33, "binari": [34, 470], "binarydiscretetensorspec": 35, "binarytodecim": 36, "bound": 37, "boundedtensorspec": 38, "composit": 40, "compositespec": 41, "constantklcontrol": 42, "densifyreward": 43, "discretetensorspec": 44, "flat2t": 45, "h5combin": 46, "h5split": 47, "hashtoint": 48, "lazystackedcompositespec": 49, "lazystackedtensorspec": 50, "multicategor": 52, "multidiscretetensorspec": 53, "multionehot": 54, "multionehotdiscretetensorspec": 55, "multistep": 56, "nested2t": 57, "nontensor": 58, "nontensorspec": 59, "onehot": 60, "onehotdiscretetensorspec": 61, "pairwisedataset": 62, "prioritizedreplaybuff": 63, "promptdata": 64, "prompttensordicttoken": 65, "querymodul": 66, "randomprojectionhash": 67, "rayreplaybuff": 68, "remotetensordictreplaybuff": 69, "replaybuff": 70, "rewarddata": 71, "rolloutfrommodel": 72, "siphash": 73, "stack": [74, 257], "stackedcomposit": 75, "ted2flat": 76, "ted2nest": 77, "tensordictprioritizedreplaybuff": 79, "tensordictreplaybuff": 80, "tensordicttoken": 81, "tensormap": 82, "tokenizeddatasetload": 84, "unbound": 86, "unboundedcontinu": 87, "unboundedcontinuoustensorspec": 88, "unboundeddiscret": 89, "unboundeddiscretetensorspec": 90, "check_no_exclusive_kei": 91, "consolidate_spec": 92, "contains_lazy_spec": 93, "create_infinite_iter": 94, "get_dataload": 95, "contentbas": 96, "histori": 97, "llmdata": 98, "flatstoragecheckpoint": 99, "h5storagecheckpoint": 100, "immutabledatasetwrit": 101, "lazymemmapstorag": 102, "lazystackstorag": 103, "lazytensorstorag": 104, "liststorag": 105, "liststoragecheckpoint": 106, "nestedstoragecheckpoint": 107, "prioritizedsampl": 108, "prioritizedslicesampl": 109, "randomsampl": 110, "replaybufferensembl": 111, "roundrobinwrit": 112, "sampler": 113, "samplerensembl": 114, "samplerwithoutreplac": 115, "slicesampl": 116, "slicesamplerwithoutreplac": 117, "storagecheckpointerbas": 119, "storageensembl": 120, "storageensemblecheckpoint": 121, "tensordictmaxvaluewrit": 122, "tensordictroundrobinwrit": 123, "tensorstorag": 124, "tensorstoragecheckpoint": 125, "writer": 126, "writerensembl": 127, "asyncenvpool": 128, "braxenv": 129, "braxwrapp": 130, "chessenv": 131, "dmcontrolenv": 132, "dmcontrolwrapp": 133, "envbas": [134, 482], "envcreat": 135, "envmetadata": 136, "gymenv": 137, "gymlikeenv": 138, "gymwrapp": 139, "habitatenv": 140, "isaacgymenv": 141, "isaacgymwrapp": 142, "isaaclabwrapp": 143, "jumanjienv": 144, "jumanjiwrapp": 145, "llmhashingenv": [146, 188], "mogymenv": 147, "mogymwrapp": 148, "marlgroupmaptyp": 149, "meltingpotenv": 150, "meltingpotwrapp": 151, "modelbasedenvbas": 152, "multithreadedenv": 153, "multithreadedenvwrapp": 154, "openmlenv": 155, "openspielenv": 156, "openspielwrapp": 157, "parallelenv": 158, "pendulumenv": 159, "pettingzooenv": 160, "pettingzoowrapp": 161, "processorasyncenvpool": 162, "randompolici": 163, "robohiveenv": 164, "smacv2env": 165, "smacv2wrapp": 166, "serialenv": 167, "threadingasyncenvpool": 168, "tictactoeenv": 169, "unitymlagentsenv": 170, "unitymlagentswrapp": 171, "vmasenv": 172, "vmaswrapp": 173, "check_env_spec": 174, "check_marl_group": 175, "exploration_typ": 176, "get_available_librari": 177, "gym_backend": 178, "chatenv": 179, "datasetchatenv": 180, "gsm8kenv": 181, "gsm8kpreparequest": 182, "gsm8krewardpars": 183, "ifevalenv": 184, "ifevalscoredata": 185, "ifevalscor": 186, "llmenv": 187, "mlgymwrapp": 189, "make_gsm8k_env": 190, "make_mlgym": 191, "browsertransform": 192, "dataloadingprim": 193, "klrewardtransform": [194, 237], "mcptooltransform": 195, "policyvers": 196, "pythoninterpret": 197, "templatetransform": 198, "token": [199, 264], "as_nested_tensor": 200, "as_padded_tensor": 201, "make_composite_from_td": 202, "dreamerdecod": 203, "dreamerenv": 204, "register_gym_spec_convers": 205, "set_exploration_typ": 206, "set_gym_backend": 207, "step_mdp": 208, "terminated_or_trunc": 209, "actiondiscret": 210, "actionmask": 211, "autoresetenv": 212, "autoresettransform": 213, "batchsizetransform": 214, "binarizereward": 215, "burnintransform": 216, "catfram": [217, 484], "cattensor": 218, "centercrop": 219, "cliptransform": 220, "conditionalpolicyswitch": 222, "conditionalskip": 223, "crop": 224, "dtypecasttransform": 225, "devicecasttransform": 226, "discreteactionproject": 227, "doubletofloat": 228, "endoflifetransform": 229, "excludetransform": 230, "finitetensordictcheck": 231, "flattenobserv": 232, "frameskiptransform": 233, "grayscal": 234, "hash": 235, "inittrack": 236, "linearisereward": 238, "multiact": 239, "noopresetenv": 240, "observationnorm": 241, "observationtransform": 242, "permutetransform": 243, "pinmemorytransform": 244, "r3mtransform": 245, "randomcroptensordict": 246, "removeemptyspec": 247, "renametransform": 248, "resiz": 249, "reward2gotransform": 250, "rewardclip": 251, "rewardsc": 252, "rewardsum": 253, "selecttransform": 254, "signtransform": 255, "squeezetransform": 256, "stepcount": 258, "targetreturn": 259, "tensordictprim": 260, "timemaxpool": 261, "timer": 262, "totensorimag": 263, "trajcount": 265, "transformedenv": 267, "unarytransform": 268, "unsqueezetransform": 269, "vc1transform": 270, "viprewardtransform": 271, "viptransform": 272, "vecgymenvtransform": 273, "vecnorm": [274, 487], "vecnormv2": 275, "gsdenois": 276, "multisteptransform": 277, "implement_for": 278, "additivegaussianmodul": 279, "batchrenorm1d": 280, "cemplann": 281, "consistentdropout": 282, "consistentdropoutmodul": 283, "conv3dnet": 284, "convnet": 285, "dtactor": 286, "ddpgcnnactor": 287, "ddpgcnnqnet": 288, "ddpgmlpactor": 289, "ddpgmlpqnet": 290, "decisiontransform": 291, "delta": 292, "distributionaldqnnet": 293, "distributionalqvaluehook": 294, "dreameractor": 295, "duelingcnndqnet": 296, "egreedymodul": 297, "gru": 298, "grucel": 299, "grumodul": 300, "independentnorm": 301, "lstm": [302, 469], "lstmcell": 303, "lstmmodul": 304, "mlp": [305, 469], "mpcplannerbas": 306, "mppiplann": 307, "maskedcategor": 308, "maskedonehotcategor": 309, "multiagentconvnet": 310, "multiagentmlp": 311, "multiagentnetbas": 312, "noisylazylinear": 313, "noisylinear": 314, "obsdecod": 315, "obsencod": 316, "onehotcategor": 317, "onehotordin": 318, "onlinedtactor": 319, "ordin": 320, "ornsteinuhlenbeckprocessmodul": 321, "qmixer": [322, 462], "qvaluehook": 323, "rssmposterior": 324, "rssmprior": 325, "squeeze2dlay": 326, "squeezelay": 327, "tanhdelta": 328, "tanhnorm": 329, "truncatednorm": 330, "vdnmixer": 331, "vmapmodul": 332, "categoricalsequenti": 333, "llmondevic": 334, "transformerswrapp": 335, "make_vllm_work": 336, "stateless_init_process_group": 337, "vllmworker": 338, "vllmwrapper": 339, "recurrent_mod": 340, "reset_nois": 341, "set_recurrent_mod": 342, "actor": [343, 461, 466, 472], "actorcriticoper": 344, "actorcriticwrapp": 345, "actorvalueoper": 346, "decisiontransformerinferencewrapp": 347, "distributionalqvalueactor": 348, "distributionalqvaluemodul": 349, "lmheadactorvalueoper": 350, "multistepactorwrapp": 351, "probabilisticactor": 352, "qvalueactor": [353, 461], "qvaluemodul": 354, "safemodul": [355, 461], "safeprobabilisticmodul": 356, "safeprobabilistictensordictsequenti": 357, "safesequenti": 358, "tanhmodul": 359, "valueoper": 360, "worldmodelwrapp": 361, "biased_softplu": 362, "get_primers_from_modul": 363, "inv_softplu": 364, "map": [365, 480], "a2closs": 366, "cqlloss": 367, "clipppoloss": 368, "crossqloss": 369, "ddpgloss": 370, "dqnloss": 371, "dtloss": 372, "discretecqlloss": 373, "discreteiqlloss": 374, "discretesacloss": 375, "distributionaldqnloss": 376, "dreameractorloss": 377, "dreamermodelloss": 378, "dreamervalueloss": 379, "gailloss": 380, "hardupd": 381, "iqlloss": 382, "klpenppoloss": 383, "lossmodul": [384, 466, 473], "onlinedtloss": 385, "ppoloss": 386, "redqloss": 387, "reinforceloss": 388, "sacloss": 389, "softupd": 390, "td3bcloss": 391, "td3loss": 392, "valueestim": 393, "default_value_kwarg": 394, "distance_loss": 395, "group_optim": 396, "hold_out_net": 397, "hold_out_param": 398, "grpoloss": 399, "grpolossoutput": 400, "mcadvantag": 401, "qmixerloss": 402, "next_state_valu": 403, "gae": 404, "td0estim": 405, "td1estim": 406, "tdlambdaestim": 407, "valueestimatorbas": 408, "generalized_advantage_estim": 409, "reward2go": 410, "td0_advantage_estim": 411, "td0_return_estim": 412, "td1_advantage_estim": 413, "td1_return_estim": 414, "td_lambda_advantage_estim": 415, "td_lambda_return_estim": 416, "vec_generalized_advantage_estim": 417, "vec_td1_advantage_estim": 418, "vec_td1_return_estim": 419, "vec_td_lambda_advantage_estim": 420, "vec_td_lambda_return_estim": 421, "pixelrendertransform": 422, "tensordictrecord": 423, "videorecord": 424, "logger": [425, 463, 475, 476], "csvlogger": 426, "generate_exp_nam": 427, "get_logg": 428, "mlflowlogg": 429, "tensorboardlogg": 430, "wandblogg": 431, "set_auto_unwrap_transformed_env": 432, "batchsubsampl": 433, "clearcudacach": 434, "countframeslog": 435, "logscalar": 436, "logvalidationreward": 437, "optimizerhook": 438, "replaybuffertrain": 439, "rewardnorm": 440, "selectkei": 441, "trainer": [442, 463, 467], "trainerhookbas": 443, "updateweight": 444, "correct_for_frame_skip": 445, "get_stats_random_rollout": 446, "make_collector_offpolici": 447, "make_collector_onpolici": 448, "make_dqn_loss": 449, "make_replay_buff": 450, "make_target_updat": 451, "make_train": 452, "parallel_env_constructor": 453, "sync_async_collector": 454, "sync_sync_collector": 455, "transformed_env_constructor": 456, "readm": [457, 477], "tuto": [457, 477], "api": 458, "contribut": [459, 486], "content": 459, "llm": [460, 478], "interfac": 460, "avail": 460, "modul": [460, 461, 466, 469, 470, 472, 476, 486], "wrapper": [460, 461, 472], "object": [460, 462, 466, 473, 486], "grpo": 460, "tensordictmodul": [461, 470, 472, 486], "probabilist": [461, 472], "q": [461, 467, 469, 472], "oper": 461, "join": 461, "hook": [461, 463, 467], "regular": 461, "planner": 461, "torch": 462, "vmap": [462, 486], "dqn": [462, 467, 469], "ddpg": [462, 466, 480], "sac": 462, "redq": 462, "crossq": 462, "iql": 462, "cql": 462, "gail": 462, "dt": 462, "td3": 462, "bc": 462, "ppo": [462, 468, 481], "head": 462, "a2c": 462, "dreamer": 462, "builder": 463, "_util": 464, "comput": [465, 467, 482, 485], "time": [465, 466, 485], "code": [466, 482], "overview": [466, 469], "setup": [466, 469, 478], "__init__": 466, "estim": 466, "put": 466, "togeth": [466, 482], "call": 466, "parallel": [466, 479, 487], "execut": [466, 478, 479, 482], "stat": 466, "build": [466, 467, 476, 478, 484], "evalu": 466, "construct": 466, "target": [466, 467, 473], "network": [466, 467, 468, 469, 472, 480, 481], "experi": [466, 482], "result": [466, 468, 478, 480, 481], "conclus": [466, 467, 468, 469, 470, 478, 480, 481, 482, 484], "next": [466, 468, 471, 474, 480, 481, 484], "deep": 467, "collect": [467, 468, 474], "paramet": [467, 468, 473], "hyperparamet": [467, 468, 480, 481], "regist": 467, "possibl": 467, "improv": 467, "defin": [468, 480, 481], "loop": [468, 469, 470, 476, 480, 481, 482], "recurr": [469, 470], "convolut": 469, "select": 469, "further": [469, 473], "read": 469, "export": 470, "introduct": [470, 486], "fast": 470, "recap": 470, "simpl": [470, 482], "stochast": 470, "aotinductor": 470, "free": 470, "c": 470, "onnx": 470, "rollout": [470, 471, 479, 480, 481, 482, 487], "creat": 471, "s": [472, 473], "output": 473, "consider": 473, "log": 475, "first": 476, "tool": 478, "enabl": 478, "configur": 478, "3": 478, "interact": 478, "4": 478, "perform": 478, "search": 478, "5": 478, "extract": 478, "divers": 479, "competit": 480, "group": 480, "critic": [480, 481], "pendulum": 482, "write": 482, "_step": 482, "simul": 482, "_reset": 482, "metadata": 482, "_spec": 482, "shape": 482, "seed": [482, 487], "wrap": 482, "test": 482, "our": 482, "pretrain": 483, "vanilla": 484, "integr": 484, "tensorclass": 484, "other": 484, "pytre": 484, "iter": 484, "over": 484, "fix": 484, "priorit": 484, "save": 484, "raw": 484, "imag": 484, "more": 484, "complex": 484, "config": 486, "sequenc": 486, "program": 486, "ensembl": 486, "meta": 486, "sync": 486, "multiprocess": 486, "frame_skip": 487, "deepmind": 487, "control": 487, "devic": 487, "close": 487, "access": 487, "attribut": 487, "kwarg": 487}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})